/*! For license information please see main.f8f1bbd3.js.LICENSE.txt */
(() => {
  var e = {
      3803: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => oe });
        var i = (function () {
            function e(e) {
              var t = this;
              (this._insertTag = function (e) {
                var n;
                (n =
                  0 === t.tags.length
                    ? t.insertionPoint
                      ? t.insertionPoint.nextSibling
                      : t.prepend
                      ? t.container.firstChild
                      : t.before
                    : t.tags[t.tags.length - 1].nextSibling),
                  t.container.insertBefore(e, n),
                  t.tags.push(e);
              }),
                (this.isSpeedy = void 0 === e.speedy || e.speedy),
                (this.tags = []),
                (this.ctr = 0),
                (this.nonce = e.nonce),
                (this.key = e.key),
                (this.container = e.container),
                (this.prepend = e.prepend),
                (this.insertionPoint = e.insertionPoint),
                (this.before = null);
            }
            var t = e.prototype;
            return (
              (t.hydrate = function (e) {
                e.forEach(this._insertTag);
              }),
              (t.insert = function (e) {
                this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
                  this._insertTag(
                    (function (e) {
                      var t = document.createElement("style");
                      return (
                        t.setAttribute("data-emotion", e.key),
                        void 0 !== e.nonce && t.setAttribute("nonce", e.nonce),
                        t.appendChild(document.createTextNode("")),
                        t.setAttribute("data-s", ""),
                        t
                      );
                    })(this)
                  );
                var t = this.tags[this.tags.length - 1];
                if (this.isSpeedy) {
                  var n = (function (e) {
                    if (e.sheet) return e.sheet;
                    for (var t = 0; t < document.styleSheets.length; t++)
                      if (document.styleSheets[t].ownerNode === e)
                        return document.styleSheets[t];
                  })(t);
                  try {
                    n.insertRule(e, n.cssRules.length);
                  } catch (i) {}
                } else t.appendChild(document.createTextNode(e));
                this.ctr++;
              }),
              (t.flush = function () {
                this.tags.forEach(function (e) {
                  var t;
                  return null == (t = e.parentNode) ? void 0 : t.removeChild(e);
                }),
                  (this.tags = []),
                  (this.ctr = 0);
              }),
              e
            );
          })(),
          o = Math.abs,
          a = String.fromCharCode,
          s = Object.assign;
        function r(e) {
          return e.trim();
        }
        function l(e, t, n) {
          return e.replace(t, n);
        }
        function c(e, t) {
          return e.indexOf(t);
        }
        function u(e, t) {
          return 0 | e.charCodeAt(t);
        }
        function d(e, t, n) {
          return e.slice(t, n);
        }
        function h(e) {
          return e.length;
        }
        function p(e) {
          return e.length;
        }
        function f(e, t) {
          return t.push(e), e;
        }
        var g = 1,
          m = 1,
          v = 0,
          b = 0,
          x = 0,
          y = "";
        function w(e, t, n, i, o, a, s) {
          return {
            value: e,
            root: t,
            parent: n,
            type: i,
            props: o,
            children: a,
            line: g,
            column: m,
            length: s,
            return: "",
          };
        }
        function S(e, t) {
          return s(
            w("", null, null, "", null, null, 0),
            e,
            { length: -e.length },
            t
          );
        }
        function k() {
          return (
            (x = b > 0 ? u(y, --b) : 0), m--, 10 === x && ((m = 1), g--), x
          );
        }
        function A() {
          return (
            (x = b < v ? u(y, b++) : 0), m++, 10 === x && ((m = 1), g++), x
          );
        }
        function C() {
          return u(y, b);
        }
        function M() {
          return b;
        }
        function P(e, t) {
          return d(y, e, t);
        }
        function E(e) {
          switch (e) {
            case 0:
            case 9:
            case 10:
            case 13:
            case 32:
              return 5;
            case 33:
            case 43:
            case 44:
            case 47:
            case 62:
            case 64:
            case 126:
            case 59:
            case 123:
            case 125:
              return 4;
            case 58:
              return 3;
            case 34:
            case 39:
            case 40:
            case 91:
              return 2;
            case 41:
            case 93:
              return 1;
          }
          return 0;
        }
        function L(e) {
          return (g = m = 1), (v = h((y = e))), (b = 0), [];
        }
        function T(e) {
          return (y = ""), e;
        }
        function O(e) {
          return r(P(b - 1, N(91 === e ? e + 2 : 40 === e ? e + 1 : e)));
        }
        function R(e) {
          for (; (x = C()) && x < 33; ) A();
          return E(e) > 2 || E(x) > 3 ? "" : " ";
        }
        function I(e, t) {
          for (
            ;
            --t &&
            A() &&
            !(x < 48 || x > 102 || (x > 57 && x < 65) || (x > 70 && x < 97));

          );
          return P(e, M() + (t < 6 && 32 == C() && 32 == A()));
        }
        function N(e) {
          for (; A(); )
            switch (x) {
              case e:
                return b;
              case 34:
              case 39:
                34 !== e && 39 !== e && N(x);
                break;
              case 40:
                41 === e && N(e);
                break;
              case 92:
                A();
            }
          return b;
        }
        function _(e, t) {
          for (; A() && e + x !== 57 && (e + x !== 84 || 47 !== C()); );
          return "/*" + P(t, b - 1) + "*" + a(47 === e ? e : A());
        }
        function D(e) {
          for (; !E(C()); ) A();
          return P(e, b);
        }
        var z = "-ms-",
          j = "-moz-",
          B = "-webkit-",
          F = "comm",
          W = "rule",
          H = "decl",
          G = "@keyframes";
        function V(e, t) {
          for (var n = "", i = p(e), o = 0; o < i; o++)
            n += t(e[o], o, e, t) || "";
          return n;
        }
        function U(e, t, n, i) {
          switch (e.type) {
            case "@layer":
              if (e.children.length) break;
            case "@import":
            case H:
              return (e.return = e.return || e.value);
            case F:
              return "";
            case G:
              return (e.return = e.value + "{" + V(e.children, i) + "}");
            case W:
              e.value = e.props.join(",");
          }
          return h((n = V(e.children, i)))
            ? (e.return = e.value + "{" + n + "}")
            : "";
        }
        function Y(e) {
          return T(X("", null, null, null, [""], (e = L(e)), 0, [0], e));
        }
        function X(e, t, n, i, o, s, r, d, p) {
          for (
            var g = 0,
              m = 0,
              v = r,
              b = 0,
              x = 0,
              y = 0,
              w = 1,
              S = 1,
              P = 1,
              E = 0,
              L = "",
              T = o,
              N = s,
              z = i,
              j = L;
            S;

          )
            switch (((y = E), (E = A()))) {
              case 40:
                if (108 != y && 58 == u(j, v - 1)) {
                  -1 != c((j += l(O(E), "&", "&\f")), "&\f") && (P = -1);
                  break;
                }
              case 34:
              case 39:
              case 91:
                j += O(E);
                break;
              case 9:
              case 10:
              case 13:
              case 32:
                j += R(y);
                break;
              case 92:
                j += I(M() - 1, 7);
                continue;
              case 47:
                switch (C()) {
                  case 42:
                  case 47:
                    f(q(_(A(), M()), t, n), p);
                    break;
                  default:
                    j += "/";
                }
                break;
              case 123 * w:
                d[g++] = h(j) * P;
              case 125 * w:
              case 59:
              case 0:
                switch (E) {
                  case 0:
                  case 125:
                    S = 0;
                  case 59 + m:
                    -1 == P && (j = l(j, /\f/g, "")),
                      x > 0 &&
                        h(j) - v &&
                        f(
                          x > 32
                            ? Z(j + ";", i, n, v - 1)
                            : Z(l(j, " ", "") + ";", i, n, v - 2),
                          p
                        );
                    break;
                  case 59:
                    j += ";";
                  default:
                    if (
                      (f(
                        (z = K(j, t, n, g, m, o, d, L, (T = []), (N = []), v)),
                        s
                      ),
                      123 === E)
                    )
                      if (0 === m) X(j, t, z, z, T, s, v, d, N);
                      else
                        switch (99 === b && 110 === u(j, 3) ? 100 : b) {
                          case 100:
                          case 108:
                          case 109:
                          case 115:
                            X(
                              e,
                              z,
                              z,
                              i &&
                                f(K(e, z, z, 0, 0, o, d, L, o, (T = []), v), N),
                              o,
                              N,
                              v,
                              d,
                              i ? T : N
                            );
                            break;
                          default:
                            X(j, z, z, z, [""], N, 0, d, N);
                        }
                }
                (g = m = x = 0), (w = P = 1), (L = j = ""), (v = r);
                break;
              case 58:
                (v = 1 + h(j)), (x = y);
              default:
                if (w < 1)
                  if (123 == E) --w;
                  else if (125 == E && 0 == w++ && 125 == k()) continue;
                switch (((j += a(E)), E * w)) {
                  case 38:
                    P = m > 0 ? 1 : ((j += "\f"), -1);
                    break;
                  case 44:
                    (d[g++] = (h(j) - 1) * P), (P = 1);
                    break;
                  case 64:
                    45 === C() && (j += O(A())),
                      (b = C()),
                      (m = v = h((L = j += D(M())))),
                      E++;
                    break;
                  case 45:
                    45 === y && 2 == h(j) && (w = 0);
                }
            }
          return s;
        }
        function K(e, t, n, i, a, s, c, u, h, f, g) {
          for (
            var m = a - 1,
              v = 0 === a ? s : [""],
              b = p(v),
              x = 0,
              y = 0,
              S = 0;
            x < i;
            ++x
          )
            for (
              var k = 0, A = d(e, m + 1, (m = o((y = c[x])))), C = e;
              k < b;
              ++k
            )
              (C = r(y > 0 ? v[k] + " " + A : l(A, /&\f/g, v[k]))) &&
                (h[S++] = C);
          return w(e, t, n, 0 === a ? W : u, h, f, g);
        }
        function q(e, t, n) {
          return w(e, t, n, F, a(x), d(e, 2, -2), 0);
        }
        function Z(e, t, n, i) {
          return w(e, t, n, H, d(e, 0, i), d(e, i + 1, -1), i);
        }
        var Q = function (e, t, n) {
            for (
              var i = 0, o = 0;
              (i = o), (o = C()), 38 === i && 12 === o && (t[n] = 1), !E(o);

            )
              A();
            return P(e, b);
          },
          $ = function (e, t) {
            return T(
              (function (e, t) {
                var n = -1,
                  i = 44;
                do {
                  switch (E(i)) {
                    case 0:
                      38 === i && 12 === C() && (t[n] = 1),
                        (e[n] += Q(b - 1, t, n));
                      break;
                    case 2:
                      e[n] += O(i);
                      break;
                    case 4:
                      if (44 === i) {
                        (e[++n] = 58 === C() ? "&\f" : ""),
                          (t[n] = e[n].length);
                        break;
                      }
                    default:
                      e[n] += a(i);
                  }
                } while ((i = A()));
                return e;
              })(L(e), t)
            );
          },
          J = new WeakMap(),
          ee = function (e) {
            if ("rule" === e.type && e.parent && !(e.length < 1)) {
              for (
                var t = e.value,
                  n = e.parent,
                  i = e.column === n.column && e.line === n.line;
                "rule" !== n.type;

              )
                if (!(n = n.parent)) return;
              if (
                (1 !== e.props.length || 58 === t.charCodeAt(0) || J.get(n)) &&
                !i
              ) {
                J.set(e, !0);
                for (
                  var o = [], a = $(t, o), s = n.props, r = 0, l = 0;
                  r < a.length;
                  r++
                )
                  for (var c = 0; c < s.length; c++, l++)
                    e.props[l] = o[r]
                      ? a[r].replace(/&\f/g, s[c])
                      : s[c] + " " + a[r];
              }
            }
          },
          te = function (e) {
            if ("decl" === e.type) {
              var t = e.value;
              108 === t.charCodeAt(0) &&
                98 === t.charCodeAt(2) &&
                ((e.return = ""), (e.value = ""));
            }
          };
        function ne(e, t) {
          switch (
            (function (e, t) {
              return 45 ^ u(e, 0)
                ? (((((((t << 2) ^ u(e, 0)) << 2) ^ u(e, 1)) << 2) ^ u(e, 2)) <<
                    2) ^
                    u(e, 3)
                : 0;
            })(e, t)
          ) {
            case 5103:
              return B + "print-" + e + e;
            case 5737:
            case 4201:
            case 3177:
            case 3433:
            case 1641:
            case 4457:
            case 2921:
            case 5572:
            case 6356:
            case 5844:
            case 3191:
            case 6645:
            case 3005:
            case 6391:
            case 5879:
            case 5623:
            case 6135:
            case 4599:
            case 4855:
            case 4215:
            case 6389:
            case 5109:
            case 5365:
            case 5621:
            case 3829:
              return B + e + e;
            case 5349:
            case 4246:
            case 4810:
            case 6968:
            case 2756:
              return B + e + j + e + z + e + e;
            case 6828:
            case 4268:
              return B + e + z + e + e;
            case 6165:
              return B + e + z + "flex-" + e + e;
            case 5187:
              return (
                B +
                e +
                l(e, /(\w+).+(:[^]+)/, B + "box-$1$2" + z + "flex-$1$2") +
                e
              );
            case 5443:
              return B + e + z + "flex-item-" + l(e, /flex-|-self/, "") + e;
            case 4675:
              return (
                B +
                e +
                z +
                "flex-line-pack" +
                l(e, /align-content|flex-|-self/, "") +
                e
              );
            case 5548:
              return B + e + z + l(e, "shrink", "negative") + e;
            case 5292:
              return B + e + z + l(e, "basis", "preferred-size") + e;
            case 6060:
              return (
                B +
                "box-" +
                l(e, "-grow", "") +
                B +
                e +
                z +
                l(e, "grow", "positive") +
                e
              );
            case 4554:
              return B + l(e, /([^-])(transform)/g, "$1" + B + "$2") + e;
            case 6187:
              return (
                l(
                  l(l(e, /(zoom-|grab)/, B + "$1"), /(image-set)/, B + "$1"),
                  e,
                  ""
                ) + e
              );
            case 5495:
            case 3959:
              return l(e, /(image-set\([^]*)/, B + "$1$`$1");
            case 4968:
              return (
                l(
                  l(
                    e,
                    /(.+:)(flex-)?(.*)/,
                    B + "box-pack:$3" + z + "flex-pack:$3"
                  ),
                  /s.+-b[^;]+/,
                  "justify"
                ) +
                B +
                e +
                e
              );
            case 4095:
            case 3583:
            case 4068:
            case 2532:
              return l(e, /(.+)-inline(.+)/, B + "$1$2") + e;
            case 8116:
            case 7059:
            case 5753:
            case 5535:
            case 5445:
            case 5701:
            case 4933:
            case 4677:
            case 5533:
            case 5789:
            case 5021:
            case 4765:
              if (h(e) - 1 - t > 6)
                switch (u(e, t + 1)) {
                  case 109:
                    if (45 !== u(e, t + 4)) break;
                  case 102:
                    return (
                      l(
                        e,
                        /(.+:)(.+)-([^]+)/,
                        "$1" +
                          B +
                          "$2-$3$1" +
                          j +
                          (108 == u(e, t + 3) ? "$3" : "$2-$3")
                      ) + e
                    );
                  case 115:
                    return ~c(e, "stretch")
                      ? ne(l(e, "stretch", "fill-available"), t) + e
                      : e;
                }
              break;
            case 4949:
              if (115 !== u(e, t + 1)) break;
            case 6444:
              switch (u(e, h(e) - 3 - (~c(e, "!important") && 10))) {
                case 107:
                  return l(e, ":", ":" + B) + e;
                case 101:
                  return (
                    l(
                      e,
                      /(.+:)([^;!]+)(;|!.+)?/,
                      "$1" +
                        B +
                        (45 === u(e, 14) ? "inline-" : "") +
                        "box$3$1" +
                        B +
                        "$2$3$1" +
                        z +
                        "$2box$3"
                    ) + e
                  );
              }
              break;
            case 5936:
              switch (u(e, t + 11)) {
                case 114:
                  return B + e + z + l(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
                case 108:
                  return B + e + z + l(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
                case 45:
                  return B + e + z + l(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
              }
              return B + e + z + e + e;
          }
          return e;
        }
        var ie = [
            function (e, t, n, i) {
              if (e.length > -1 && !e.return)
                switch (e.type) {
                  case H:
                    e.return = ne(e.value, e.length);
                    break;
                  case G:
                    return V([S(e, { value: l(e.value, "@", "@" + B) })], i);
                  case W:
                    if (e.length)
                      return (function (e, t) {
                        return e.map(t).join("");
                      })(e.props, function (t) {
                        switch (
                          (function (e, t) {
                            return (e = t.exec(e)) ? e[0] : e;
                          })(t, /(::plac\w+|:read-\w+)/)
                        ) {
                          case ":read-only":
                          case ":read-write":
                            return V(
                              [
                                S(e, {
                                  props: [l(t, /:(read-\w+)/, ":-moz-$1")],
                                }),
                              ],
                              i
                            );
                          case "::placeholder":
                            return V(
                              [
                                S(e, {
                                  props: [
                                    l(t, /:(plac\w+)/, ":" + B + "input-$1"),
                                  ],
                                }),
                                S(e, {
                                  props: [l(t, /:(plac\w+)/, ":-moz-$1")],
                                }),
                                S(e, {
                                  props: [l(t, /:(plac\w+)/, z + "input-$1")],
                                }),
                              ],
                              i
                            );
                        }
                        return "";
                      });
                }
            },
          ],
          oe = function (e) {
            var t = e.key;
            if ("css" === t) {
              var n = document.querySelectorAll(
                "style[data-emotion]:not([data-s])"
              );
              Array.prototype.forEach.call(n, function (e) {
                -1 !== e.getAttribute("data-emotion").indexOf(" ") &&
                  (document.head.appendChild(e), e.setAttribute("data-s", ""));
              });
            }
            var o,
              a,
              s = e.stylisPlugins || ie,
              r = {},
              l = [];
            (o = e.container || document.head),
              Array.prototype.forEach.call(
                document.querySelectorAll('style[data-emotion^="' + t + ' "]'),
                function (e) {
                  for (
                    var t = e.getAttribute("data-emotion").split(" "), n = 1;
                    n < t.length;
                    n++
                  )
                    r[t[n]] = !0;
                  l.push(e);
                }
              );
            var c,
              u,
              d = [
                U,
                ((u = function (e) {
                  c.insert(e);
                }),
                function (e) {
                  e.root || ((e = e.return) && u(e));
                }),
              ],
              h = (function (e) {
                var t = p(e);
                return function (n, i, o, a) {
                  for (var s = "", r = 0; r < t; r++)
                    s += e[r](n, i, o, a) || "";
                  return s;
                };
              })([ee, te].concat(s, d));
            a = function (e, t, n, i) {
              (c = n),
                V(Y(e ? e + "{" + t.styles + "}" : t.styles), h),
                i && (f.inserted[t.name] = !0);
            };
            var f = {
              key: t,
              sheet: new i({
                key: t,
                container: o,
                nonce: e.nonce,
                speedy: e.speedy,
                prepend: e.prepend,
                insertionPoint: e.insertionPoint,
              }),
              nonce: e.nonce,
              inserted: r,
              registered: {},
              insert: a,
            };
            return f.sheet.hydrate(l), f;
          };
      },
      918: (e, t, n) => {
        "use strict";
        function i(e) {
          var t = Object.create(null);
          return function (n) {
            return void 0 === t[n] && (t[n] = e(n)), t[n];
          };
        }
        n.d(t, { A: () => i });
      },
      4575: (e, t, n) => {
        "use strict";
        n.d(t, { C: () => s, T: () => l, w: () => r });
        var i = n(5043),
          o = n(3803),
          a =
            (n(9002),
            n(9436),
            i.createContext(
              "undefined" !== typeof HTMLElement
                ? (0, o.A)({ key: "css" })
                : null
            )),
          s = a.Provider,
          r = function (e) {
            return (0, i.forwardRef)(function (t, n) {
              var o = (0, i.useContext)(a);
              return e(t, o, n);
            });
          },
          l = i.createContext({});
      },
      3290: (e, t, n) => {
        "use strict";
        n.d(t, { AH: () => c, i7: () => u, mL: () => l });
        var i = n(4575),
          o = n(5043),
          a = n(1722),
          s = n(9436),
          r = n(9002),
          l =
            (n(3803),
            n(219),
            (0, i.w)(function (e, t) {
              var n = e.styles,
                l = (0, r.J)([n], void 0, o.useContext(i.T)),
                c = o.useRef();
              return (
                (0, s.i)(
                  function () {
                    var e = t.key + "-global",
                      n = new t.sheet.constructor({
                        key: e,
                        nonce: t.sheet.nonce,
                        container: t.sheet.container,
                        speedy: t.sheet.isSpeedy,
                      }),
                      i = !1,
                      o = document.querySelector(
                        'style[data-emotion="' + e + " " + l.name + '"]'
                      );
                    return (
                      t.sheet.tags.length && (n.before = t.sheet.tags[0]),
                      null !== o &&
                        ((i = !0),
                        o.setAttribute("data-emotion", e),
                        n.hydrate([o])),
                      (c.current = [n, i]),
                      function () {
                        n.flush();
                      }
                    );
                  },
                  [t]
                ),
                (0, s.i)(
                  function () {
                    var e = c.current,
                      n = e[0];
                    if (e[1]) e[1] = !1;
                    else {
                      if (
                        (void 0 !== l.next && (0, a.sk)(t, l.next, !0),
                        n.tags.length)
                      ) {
                        var i = n.tags[n.tags.length - 1].nextElementSibling;
                        (n.before = i), n.flush();
                      }
                      t.insert("", l, n, !1);
                    }
                  },
                  [t, l.name]
                ),
                null
              );
            }));
        function c() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return (0, r.J)(t);
        }
        var u = function () {
          var e = c.apply(void 0, arguments),
            t = "animation-" + e.name;
          return {
            name: t,
            styles: "@keyframes " + t + "{" + e.styles + "}",
            anim: 1,
            toString: function () {
              return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
            },
          };
        };
      },
      9002: (e, t, n) => {
        "use strict";
        n.d(t, { J: () => m });
        var i = {
            animationIterationCount: 1,
            aspectRatio: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            columns: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridRowEnd: 1,
            gridRowSpan: 1,
            gridRowStart: 1,
            gridColumn: 1,
            gridColumnEnd: 1,
            gridColumnSpan: 1,
            gridColumnStart: 1,
            msGridRow: 1,
            msGridRowSpan: 1,
            msGridColumn: 1,
            msGridColumnSpan: 1,
            fontWeight: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            WebkitLineClamp: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1,
          },
          o = n(918),
          a = !1,
          s = /[A-Z]|^ms/g,
          r = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
          l = function (e) {
            return 45 === e.charCodeAt(1);
          },
          c = function (e) {
            return null != e && "boolean" !== typeof e;
          },
          u = (0, o.A)(function (e) {
            return l(e) ? e : e.replace(s, "-$&").toLowerCase();
          }),
          d = function (e, t) {
            switch (e) {
              case "animation":
              case "animationName":
                if ("string" === typeof t)
                  return t.replace(r, function (e, t, n) {
                    return (f = { name: t, styles: n, next: f }), t;
                  });
            }
            return 1 === i[e] || l(e) || "number" !== typeof t || 0 === t
              ? t
              : t + "px";
          },
          h =
            "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
        function p(e, t, n) {
          if (null == n) return "";
          var i = n;
          if (void 0 !== i.__emotion_styles) return i;
          switch (typeof n) {
            case "boolean":
              return "";
            case "object":
              var o = n;
              if (1 === o.anim)
                return (
                  (f = { name: o.name, styles: o.styles, next: f }), o.name
                );
              var s = n;
              if (void 0 !== s.styles) {
                var r = s.next;
                if (void 0 !== r)
                  for (; void 0 !== r; )
                    (f = { name: r.name, styles: r.styles, next: f }),
                      (r = r.next);
                return s.styles + ";";
              }
              return (function (e, t, n) {
                var i = "";
                if (Array.isArray(n))
                  for (var o = 0; o < n.length; o++) i += p(e, t, n[o]) + ";";
                else
                  for (var s in n) {
                    var r = n[s];
                    if ("object" !== typeof r) {
                      var l = r;
                      null != t && void 0 !== t[l]
                        ? (i += s + "{" + t[l] + "}")
                        : c(l) && (i += u(s) + ":" + d(s, l) + ";");
                    } else {
                      if ("NO_COMPONENT_SELECTOR" === s && a)
                        throw new Error(h);
                      if (
                        !Array.isArray(r) ||
                        "string" !== typeof r[0] ||
                        (null != t && void 0 !== t[r[0]])
                      ) {
                        var f = p(e, t, r);
                        switch (s) {
                          case "animation":
                          case "animationName":
                            i += u(s) + ":" + f + ";";
                            break;
                          default:
                            i += s + "{" + f + "}";
                        }
                      } else
                        for (var g = 0; g < r.length; g++)
                          c(r[g]) && (i += u(s) + ":" + d(s, r[g]) + ";");
                    }
                  }
                return i;
              })(e, t, n);
            case "function":
              if (void 0 !== e) {
                var l = f,
                  g = n(e);
                return (f = l), p(e, t, g);
              }
          }
          var m = n;
          if (null == t) return m;
          var v = t[m];
          return void 0 !== v ? v : m;
        }
        var f,
          g = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
        function m(e, t, n) {
          if (
            1 === e.length &&
            "object" === typeof e[0] &&
            null !== e[0] &&
            void 0 !== e[0].styles
          )
            return e[0];
          var i = !0,
            o = "";
          f = void 0;
          var a = e[0];
          null == a || void 0 === a.raw
            ? ((i = !1), (o += p(n, t, a)))
            : (o += a[0]);
          for (var s = 1; s < e.length; s++) {
            if (((o += p(n, t, e[s])), i)) o += a[s];
          }
          g.lastIndex = 0;
          for (var r, l = ""; null !== (r = g.exec(o)); ) l += "-" + r[1];
          var c =
            (function (e) {
              for (var t, n = 0, i = 0, o = e.length; o >= 4; ++i, o -= 4)
                (t =
                  1540483477 *
                    (65535 &
                      (t =
                        (255 & e.charCodeAt(i)) |
                        ((255 & e.charCodeAt(++i)) << 8) |
                        ((255 & e.charCodeAt(++i)) << 16) |
                        ((255 & e.charCodeAt(++i)) << 24))) +
                  ((59797 * (t >>> 16)) << 16)),
                  (n =
                    (1540483477 * (65535 & (t ^= t >>> 24)) +
                      ((59797 * (t >>> 16)) << 16)) ^
                    (1540483477 * (65535 & n) + ((59797 * (n >>> 16)) << 16)));
              switch (o) {
                case 3:
                  n ^= (255 & e.charCodeAt(i + 2)) << 16;
                case 2:
                  n ^= (255 & e.charCodeAt(i + 1)) << 8;
                case 1:
                  n =
                    1540483477 * (65535 & (n ^= 255 & e.charCodeAt(i))) +
                    ((59797 * (n >>> 16)) << 16);
              }
              return (
                ((n =
                  1540483477 * (65535 & (n ^= n >>> 13)) +
                  ((59797 * (n >>> 16)) << 16)) ^
                  (n >>> 15)) >>>
                0
              ).toString(36);
            })(o) + l;
          return { name: c, styles: o, next: f };
        }
      },
      9436: (e, t, n) => {
        "use strict";
        var i;
        n.d(t, { i: () => r, s: () => s });
        var o = n(5043),
          a =
            !!(i || (i = n.t(o, 2))).useInsertionEffect &&
            (i || (i = n.t(o, 2))).useInsertionEffect,
          s =
            a ||
            function (e) {
              return e();
            },
          r = a || o.useLayoutEffect;
      },
      1722: (e, t, n) => {
        "use strict";
        n.d(t, { Rk: () => i, SF: () => o, sk: () => a });
        function i(e, t, n) {
          var i = "";
          return (
            n.split(" ").forEach(function (n) {
              void 0 !== e[n] ? t.push(e[n] + ";") : (i += n + " ");
            }),
            i
          );
        }
        var o = function (e, t, n) {
            var i = e.key + "-" + t.name;
            !1 === n &&
              void 0 === e.registered[i] &&
              (e.registered[i] = t.styles);
          },
          a = function (e, t, n) {
            o(e, t, n);
            var i = e.key + "-" + t.name;
            if (void 0 === e.inserted[t.name]) {
              var a = t;
              do {
                e.insert(t === a ? "." + i : "", a, e.sheet, !0), (a = a.next);
              } while (void 0 !== a);
            }
          };
      },
      5896: (e, t, n) => {
        "use strict";
        var i = n(4994);
        t.A = void 0;
        var o = i(n(39)),
          a = n(579);
        t.A = (0, o.default)(
          (0, a.jsx)("path", {
            d: "M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z",
          }),
          "ChevronLeft"
        );
      },
      1707: (e, t, n) => {
        "use strict";
        var i = n(4994);
        t.A = void 0;
        var o = i(n(39)),
          a = n(579);
        t.A = (0, o.default)(
          (0, a.jsx)("path", {
            d: "M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z",
          }),
          "ChevronRight"
        );
      },
      4802: (e, t, n) => {
        "use strict";
        var i = n(4994);
        t.A = void 0;
        var o = i(n(39)),
          a = n(579);
        t.A = (0, o.default)(
          (0, a.jsx)("path", {
            d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z",
          }),
          "Close"
        );
      },
      6559: (e, t, n) => {
        "use strict";
        var i = n(4994);
        t.A = void 0;
        var o = i(n(39)),
          a = n(579);
        t.A = (0, o.default)(
          [
            (0, a.jsx)(
              "path",
              { d: "M12 5.99 19.53 19H4.47zM12 2 1 21h22z" },
              "0"
            ),
            (0, a.jsx)("path", { d: "M13 16h-2v2h2zm0-6h-2v5h2z" }, "1"),
          ],
          "WarningAmber"
        );
      },
      39: (e, t, n) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return i.createSvgIcon;
            },
          });
        var i = n(109);
      },
      8206: (e, t, n) => {
        "use strict";
        n.d(t, { b: () => o });
        n(5043);
        var i = n(3654);
        n(579);
        function o(e) {
          return (0, i.b)(e);
        }
      },
      8279: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => B });
        var i = n(8168),
          o = n(8587),
          a = n(7868),
          s = n(9172),
          r = n(7758),
          l = n(8812),
          c = n(8280);
        var u = n(7266);
        const d = { black: "#000", white: "#fff" },
          h = {
            50: "#fafafa",
            100: "#f5f5f5",
            200: "#eeeeee",
            300: "#e0e0e0",
            400: "#bdbdbd",
            500: "#9e9e9e",
            600: "#757575",
            700: "#616161",
            800: "#424242",
            900: "#212121",
            A100: "#f5f5f5",
            A200: "#eeeeee",
            A400: "#bdbdbd",
            A700: "#616161",
          },
          p = {
            50: "#f3e5f5",
            100: "#e1bee7",
            200: "#ce93d8",
            300: "#ba68c8",
            400: "#ab47bc",
            500: "#9c27b0",
            600: "#8e24aa",
            700: "#7b1fa2",
            800: "#6a1b9a",
            900: "#4a148c",
            A100: "#ea80fc",
            A200: "#e040fb",
            A400: "#d500f9",
            A700: "#aa00ff",
          },
          f = {
            50: "#ffebee",
            100: "#ffcdd2",
            200: "#ef9a9a",
            300: "#e57373",
            400: "#ef5350",
            500: "#f44336",
            600: "#e53935",
            700: "#d32f2f",
            800: "#c62828",
            900: "#b71c1c",
            A100: "#ff8a80",
            A200: "#ff5252",
            A400: "#ff1744",
            A700: "#d50000",
          },
          g = {
            50: "#fff3e0",
            100: "#ffe0b2",
            200: "#ffcc80",
            300: "#ffb74d",
            400: "#ffa726",
            500: "#ff9800",
            600: "#fb8c00",
            700: "#f57c00",
            800: "#ef6c00",
            900: "#e65100",
            A100: "#ffd180",
            A200: "#ffab40",
            A400: "#ff9100",
            A700: "#ff6d00",
          },
          m = {
            50: "#e3f2fd",
            100: "#bbdefb",
            200: "#90caf9",
            300: "#64b5f6",
            400: "#42a5f5",
            500: "#2196f3",
            600: "#1e88e5",
            700: "#1976d2",
            800: "#1565c0",
            900: "#0d47a1",
            A100: "#82b1ff",
            A200: "#448aff",
            A400: "#2979ff",
            A700: "#2962ff",
          },
          v = {
            50: "#e1f5fe",
            100: "#b3e5fc",
            200: "#81d4fa",
            300: "#4fc3f7",
            400: "#29b6f6",
            500: "#03a9f4",
            600: "#039be5",
            700: "#0288d1",
            800: "#0277bd",
            900: "#01579b",
            A100: "#80d8ff",
            A200: "#40c4ff",
            A400: "#00b0ff",
            A700: "#0091ea",
          },
          b = {
            50: "#e8f5e9",
            100: "#c8e6c9",
            200: "#a5d6a7",
            300: "#81c784",
            400: "#66bb6a",
            500: "#4caf50",
            600: "#43a047",
            700: "#388e3c",
            800: "#2e7d32",
            900: "#1b5e20",
            A100: "#b9f6ca",
            A200: "#69f0ae",
            A400: "#00e676",
            A700: "#00c853",
          },
          x = ["mode", "contrastThreshold", "tonalOffset"],
          y = {
            text: {
              primary: "rgba(0, 0, 0, 0.87)",
              secondary: "rgba(0, 0, 0, 0.6)",
              disabled: "rgba(0, 0, 0, 0.38)",
            },
            divider: "rgba(0, 0, 0, 0.12)",
            background: { paper: d.white, default: d.white },
            action: {
              active: "rgba(0, 0, 0, 0.54)",
              hover: "rgba(0, 0, 0, 0.04)",
              hoverOpacity: 0.04,
              selected: "rgba(0, 0, 0, 0.08)",
              selectedOpacity: 0.08,
              disabled: "rgba(0, 0, 0, 0.26)",
              disabledBackground: "rgba(0, 0, 0, 0.12)",
              disabledOpacity: 0.38,
              focus: "rgba(0, 0, 0, 0.12)",
              focusOpacity: 0.12,
              activatedOpacity: 0.12,
            },
          },
          w = {
            text: {
              primary: d.white,
              secondary: "rgba(255, 255, 255, 0.7)",
              disabled: "rgba(255, 255, 255, 0.5)",
              icon: "rgba(255, 255, 255, 0.5)",
            },
            divider: "rgba(255, 255, 255, 0.12)",
            background: { paper: "#121212", default: "#121212" },
            action: {
              active: d.white,
              hover: "rgba(255, 255, 255, 0.08)",
              hoverOpacity: 0.08,
              selected: "rgba(255, 255, 255, 0.16)",
              selectedOpacity: 0.16,
              disabled: "rgba(255, 255, 255, 0.3)",
              disabledBackground: "rgba(255, 255, 255, 0.12)",
              disabledOpacity: 0.38,
              focus: "rgba(255, 255, 255, 0.12)",
              focusOpacity: 0.12,
              activatedOpacity: 0.24,
            },
          };
        function S(e, t, n, i) {
          const o = i.light || i,
            a = i.dark || 1.5 * i;
          e[t] ||
            (e.hasOwnProperty(n)
              ? (e[t] = e[n])
              : "light" === t
              ? (e.light = (0, u.a)(e.main, o))
              : "dark" === t && (e.dark = (0, u.e$)(e.main, a)));
        }
        function k(e) {
          const {
              mode: t = "light",
              contrastThreshold: n = 3,
              tonalOffset: r = 0.2,
            } = e,
            l = (0, o.A)(e, x),
            c =
              e.primary ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: m[200], light: m[50], dark: m[400] }
                  : { main: m[700], light: m[400], dark: m[800] };
              })(t),
            k =
              e.secondary ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: p[200], light: p[50], dark: p[400] }
                  : { main: p[500], light: p[300], dark: p[700] };
              })(t),
            A =
              e.error ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: f[500], light: f[300], dark: f[700] }
                  : { main: f[700], light: f[400], dark: f[800] };
              })(t),
            C =
              e.info ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: v[400], light: v[300], dark: v[700] }
                  : { main: v[700], light: v[500], dark: v[900] };
              })(t),
            M =
              e.success ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: b[400], light: b[300], dark: b[700] }
                  : { main: b[800], light: b[500], dark: b[900] };
              })(t),
            P =
              e.warning ||
              (function () {
                return "dark" ===
                  (arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "light")
                  ? { main: g[400], light: g[300], dark: g[700] }
                  : { main: "#ed6c02", light: g[500], dark: g[900] };
              })(t);
          function E(e) {
            return (0, u.eM)(e, w.text.primary) >= n
              ? w.text.primary
              : y.text.primary;
          }
          const L = (e) => {
              let {
                color: t,
                name: n,
                mainShade: o = 500,
                lightShade: s = 300,
                darkShade: l = 700,
              } = e;
              if (
                ((t = (0, i.A)({}, t)),
                !t.main && t[o] && (t.main = t[o]),
                !t.hasOwnProperty("main"))
              )
                throw new Error((0, a.A)(11, n ? " (".concat(n, ")") : "", o));
              if ("string" !== typeof t.main)
                throw new Error(
                  (0, a.A)(
                    12,
                    n ? " (".concat(n, ")") : "",
                    JSON.stringify(t.main)
                  )
                );
              return (
                S(t, "light", s, r),
                S(t, "dark", l, r),
                t.contrastText || (t.contrastText = E(t.main)),
                t
              );
            },
            T = { dark: w, light: y };
          return (0, s.A)(
            (0, i.A)(
              {
                common: (0, i.A)({}, d),
                mode: t,
                primary: L({ color: c, name: "primary" }),
                secondary: L({
                  color: k,
                  name: "secondary",
                  mainShade: "A400",
                  lightShade: "A200",
                  darkShade: "A700",
                }),
                error: L({ color: A, name: "error" }),
                warning: L({ color: P, name: "warning" }),
                info: L({ color: C, name: "info" }),
                success: L({ color: M, name: "success" }),
                grey: h,
                contrastThreshold: n,
                getContrastText: E,
                augmentColor: L,
                tonalOffset: r,
              },
              T[t]
            ),
            l
          );
        }
        const A = [
          "fontFamily",
          "fontSize",
          "fontWeightLight",
          "fontWeightRegular",
          "fontWeightMedium",
          "fontWeightBold",
          "htmlFontSize",
          "allVariants",
          "pxToRem",
        ];
        const C = { textTransform: "uppercase" },
          M = '"Roboto", "Helvetica", "Arial", sans-serif';
        function P(e, t) {
          const n = "function" === typeof t ? t(e) : t,
            {
              fontFamily: a = M,
              fontSize: r = 14,
              fontWeightLight: l = 300,
              fontWeightRegular: c = 400,
              fontWeightMedium: u = 500,
              fontWeightBold: d = 700,
              htmlFontSize: h = 16,
              allVariants: p,
              pxToRem: f,
            } = n,
            g = (0, o.A)(n, A);
          const m = r / 14,
            v = f || ((e) => "".concat((e / h) * m, "rem")),
            b = (e, t, n, o, s) => {
              return (0, i.A)(
                { fontFamily: a, fontWeight: e, fontSize: v(t), lineHeight: n },
                a === M
                  ? {
                      letterSpacing: "".concat(
                        ((r = o / t), Math.round(1e5 * r) / 1e5),
                        "em"
                      ),
                    }
                  : {},
                s,
                p
              );
              var r;
            },
            x = {
              h1: b(l, 96, 1.167, -1.5),
              h2: b(l, 60, 1.2, -0.5),
              h3: b(c, 48, 1.167, 0),
              h4: b(c, 34, 1.235, 0.25),
              h5: b(c, 24, 1.334, 0),
              h6: b(u, 20, 1.6, 0.15),
              subtitle1: b(c, 16, 1.75, 0.15),
              subtitle2: b(u, 14, 1.57, 0.1),
              body1: b(c, 16, 1.5, 0.15),
              body2: b(c, 14, 1.43, 0.15),
              button: b(u, 14, 1.75, 0.4, C),
              caption: b(c, 12, 1.66, 0.4),
              overline: b(c, 12, 2.66, 1, C),
              inherit: {
                fontFamily: "inherit",
                fontWeight: "inherit",
                fontSize: "inherit",
                lineHeight: "inherit",
                letterSpacing: "inherit",
              },
            };
          return (0, s.A)(
            (0, i.A)(
              {
                htmlFontSize: h,
                pxToRem: v,
                fontFamily: a,
                fontSize: r,
                fontWeightLight: l,
                fontWeightRegular: c,
                fontWeightMedium: u,
                fontWeightBold: d,
              },
              x
            ),
            g,
            { clone: !1 }
          );
        }
        function E() {
          return [
            ""
              .concat(arguments.length <= 0 ? void 0 : arguments[0], "px ")
              .concat(arguments.length <= 1 ? void 0 : arguments[1], "px ")
              .concat(arguments.length <= 2 ? void 0 : arguments[2], "px ")
              .concat(
                arguments.length <= 3 ? void 0 : arguments[3],
                "px rgba(0,0,0,"
              )
              .concat(0.2, ")"),
            ""
              .concat(arguments.length <= 4 ? void 0 : arguments[4], "px ")
              .concat(arguments.length <= 5 ? void 0 : arguments[5], "px ")
              .concat(arguments.length <= 6 ? void 0 : arguments[6], "px ")
              .concat(
                arguments.length <= 7 ? void 0 : arguments[7],
                "px rgba(0,0,0,"
              )
              .concat(0.14, ")"),
            ""
              .concat(arguments.length <= 8 ? void 0 : arguments[8], "px ")
              .concat(arguments.length <= 9 ? void 0 : arguments[9], "px ")
              .concat(arguments.length <= 10 ? void 0 : arguments[10], "px ")
              .concat(
                arguments.length <= 11 ? void 0 : arguments[11],
                "px rgba(0,0,0,"
              )
              .concat(0.12, ")"),
          ].join(",");
        }
        const L = [
            "none",
            E(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
            E(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
            E(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
            E(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
            E(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
            E(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
            E(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
            E(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
            E(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
            E(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
            E(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
            E(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
            E(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
            E(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
            E(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
            E(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
            E(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
            E(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
            E(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
            E(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
            E(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
            E(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
            E(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
            E(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
          ],
          T = ["duration", "easing", "delay"],
          O = {
            easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
            easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
            easeIn: "cubic-bezier(0.4, 0, 1, 1)",
            sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          R = {
            shortest: 150,
            shorter: 200,
            short: 250,
            standard: 300,
            complex: 375,
            enteringScreen: 225,
            leavingScreen: 195,
          };
        function I(e) {
          return "".concat(Math.round(e), "ms");
        }
        function N(e) {
          if (!e) return 0;
          const t = e / 36;
          return Math.round(10 * (4 + 15 * t ** 0.25 + t / 5));
        }
        function _(e) {
          const t = (0, i.A)({}, O, e.easing),
            n = (0, i.A)({}, R, e.duration);
          return (0, i.A)(
            {
              getAutoHeightDuration: N,
              create: function () {
                let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : ["all"],
                  i =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                const {
                  duration: a = n.standard,
                  easing: s = t.easeInOut,
                  delay: r = 0,
                } = i;
                (0, o.A)(i, T);
                return (Array.isArray(e) ? e : [e])
                  .map((e) =>
                    ""
                      .concat(e, " ")
                      .concat("string" === typeof a ? a : I(a), " ")
                      .concat(s, " ")
                      .concat("string" === typeof r ? r : I(r))
                  )
                  .join(",");
              },
            },
            e,
            { easing: t, duration: n }
          );
        }
        const D = {
            mobileStepper: 1e3,
            fab: 1050,
            speedDial: 1050,
            appBar: 1100,
            drawer: 1200,
            modal: 1300,
            snackbar: 1400,
            tooltip: 1500,
          },
          z = [
            "breakpoints",
            "mixins",
            "spacing",
            "palette",
            "transitions",
            "typography",
            "shape",
          ];
        function j() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          const {
              mixins: t = {},
              palette: n = {},
              transitions: u = {},
              typography: d = {},
            } = e,
            h = (0, o.A)(e, z);
          if (e.vars) throw new Error((0, a.A)(18));
          const p = k(n),
            f = (0, c.A)(e);
          let g = (0, s.A)(f, {
            mixins:
              ((m = f.breakpoints),
              (v = t),
              (0, i.A)(
                {
                  toolbar: {
                    minHeight: 56,
                    [m.up("xs")]: {
                      "@media (orientation: landscape)": { minHeight: 48 },
                    },
                    [m.up("sm")]: { minHeight: 64 },
                  },
                },
                v
              )),
            palette: p,
            shadows: L.slice(),
            typography: P(p, d),
            transitions: _(u),
            zIndex: (0, i.A)({}, D),
          });
          var m, v;
          g = (0, s.A)(g, h);
          for (
            var b = arguments.length, x = new Array(b > 1 ? b - 1 : 0), y = 1;
            y < b;
            y++
          )
            x[y - 1] = arguments[y];
          return (
            (g = x.reduce((e, t) => (0, s.A)(e, t), g)),
            (g.unstable_sxConfig = (0, i.A)(
              {},
              r.A,
              null == h ? void 0 : h.unstable_sxConfig
            )),
            (g.unstable_sx = function (e) {
              return (0, l.A)({ sx: e, theme: this });
            }),
            g
          );
        }
        const B = j;
      },
      5170: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = (0, n(8279).A)();
      },
      3375: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = "$$material";
      },
      1542: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        const i = function (e) {
            return (
              "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e
            );
          },
          o = (e) => i(e) && "classes" !== e;
      },
      4535: (e, t, n) => {
        "use strict";
        n.d(t, { Ay: () => r });
        var i = n(8052),
          o = n(5170),
          a = n(3375),
          s = n(1542);
        const r = (0, i.Ay)({
          themeId: a.A,
          defaultTheme: o.A,
          rootShouldForwardProp: s.A,
        });
      },
      6803: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = n(7598).A;
      },
      4461: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = function (e) {
          let t,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 166;
          function i() {
            for (var i = arguments.length, o = new Array(i), a = 0; a < i; a++)
              o[a] = arguments[a];
            clearTimeout(t),
              (t = setTimeout(() => {
                e.apply(this, o);
              }, n));
          }
          return (
            (i.clear = () => {
              clearTimeout(t);
            }),
            i
          );
        };
      },
      109: (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            capitalize: () => o.A,
            createChainedFunction: () => a,
            createSvgIcon: () => w,
            debounce: () => S.A,
            deprecatedPropType: () => k,
            isMuiElement: () => A.A,
            ownerDocument: () => C.A,
            ownerWindow: () => M.A,
            requirePropFactory: () => P,
            setRef: () => E,
            unstable_ClassNameGenerator: () => D,
            unstable_useEnhancedEffect: () => L.A,
            unstable_useId: () => T.A,
            unsupportedProp: () => O,
            useControlled: () => R.A,
            useEventCallback: () => I.A,
            useForkRef: () => N.A,
            useIsFocusVisible: () => _.A,
          });
        var i = n(9386),
          o = n(6803);
        const a = n(2456).A;
        var s = n(8168),
          r = n(5043),
          l = n(8587),
          c = n(8387),
          u = n(8610),
          d = n(8206),
          h = n(4535),
          p = n(2532),
          f = n(2372);
        function g(e) {
          return (0, f.Ay)("MuiSvgIcon", e);
        }
        (0, p.A)("MuiSvgIcon", [
          "root",
          "colorPrimary",
          "colorSecondary",
          "colorAction",
          "colorError",
          "colorDisabled",
          "fontSizeInherit",
          "fontSizeSmall",
          "fontSizeMedium",
          "fontSizeLarge",
        ]);
        var m = n(579);
        const v = [
            "children",
            "className",
            "color",
            "component",
            "fontSize",
            "htmlColor",
            "inheritViewBox",
            "titleAccess",
            "viewBox",
          ],
          b = (0, h.Ay)("svg", {
            name: "MuiSvgIcon",
            slot: "Root",
            overridesResolver: (e, t) => {
              const { ownerState: n } = e;
              return [
                t.root,
                "inherit" !== n.color && t["color".concat((0, o.A)(n.color))],
                t["fontSize".concat((0, o.A)(n.fontSize))],
              ];
            },
          })((e) => {
            let { theme: t, ownerState: n } = e;
            var i, o, a, s, r, l, c, u, d, h, p, f, g;
            return {
              userSelect: "none",
              width: "1em",
              height: "1em",
              display: "inline-block",
              fill: n.hasSvgAsChild ? void 0 : "currentColor",
              flexShrink: 0,
              transition:
                null == (i = t.transitions) || null == (o = i.create)
                  ? void 0
                  : o.call(i, "fill", {
                      duration:
                        null == (a = t.transitions) || null == (a = a.duration)
                          ? void 0
                          : a.shorter,
                    }),
              fontSize: {
                inherit: "inherit",
                small:
                  (null == (s = t.typography) || null == (r = s.pxToRem)
                    ? void 0
                    : r.call(s, 20)) || "1.25rem",
                medium:
                  (null == (l = t.typography) || null == (c = l.pxToRem)
                    ? void 0
                    : c.call(l, 24)) || "1.5rem",
                large:
                  (null == (u = t.typography) || null == (d = u.pxToRem)
                    ? void 0
                    : d.call(u, 35)) || "2.1875rem",
              }[n.fontSize],
              color:
                null !=
                (h =
                  null == (p = (t.vars || t).palette) ||
                  null == (p = p[n.color])
                    ? void 0
                    : p.main)
                  ? h
                  : {
                      action:
                        null == (f = (t.vars || t).palette) ||
                        null == (f = f.action)
                          ? void 0
                          : f.active,
                      disabled:
                        null == (g = (t.vars || t).palette) ||
                        null == (g = g.action)
                          ? void 0
                          : g.disabled,
                      inherit: void 0,
                    }[n.color],
            };
          }),
          x = r.forwardRef(function (e, t) {
            const n = (0, d.b)({ props: e, name: "MuiSvgIcon" }),
              {
                children: i,
                className: a,
                color: h = "inherit",
                component: p = "svg",
                fontSize: f = "medium",
                htmlColor: x,
                inheritViewBox: y = !1,
                titleAccess: w,
                viewBox: S = "0 0 24 24",
              } = n,
              k = (0, l.A)(n, v),
              A = r.isValidElement(i) && "svg" === i.type,
              C = (0, s.A)({}, n, {
                color: h,
                component: p,
                fontSize: f,
                instanceFontSize: e.fontSize,
                inheritViewBox: y,
                viewBox: S,
                hasSvgAsChild: A,
              }),
              M = {};
            y || (M.viewBox = S);
            const P = ((e) => {
              const { color: t, fontSize: n, classes: i } = e,
                a = {
                  root: [
                    "root",
                    "inherit" !== t && "color".concat((0, o.A)(t)),
                    "fontSize".concat((0, o.A)(n)),
                  ],
                };
              return (0, u.A)(a, g, i);
            })(C);
            return (0,
            m.jsxs)(b, (0, s.A)({ as: p, className: (0, c.A)(P.root, a), focusable: "false", color: x, "aria-hidden": !w || void 0, role: w ? "img" : void 0, ref: t }, M, k, A && i.props, { ownerState: C, children: [A ? i.props.children : i, w ? (0, m.jsx)("title", { children: w }) : null] }));
          });
        x.muiName = "SvgIcon";
        const y = x;
        function w(e, t) {
          function n(n, i) {
            return (0, m.jsx)(
              y,
              (0, s.A)({ "data-testid": "".concat(t, "Icon"), ref: i }, n, {
                children: e,
              })
            );
          }
          return (n.muiName = y.muiName), r.memo(r.forwardRef(n));
        }
        var S = n(4461);
        const k = function (e, t) {
          return () => null;
        };
        var A = n(7328),
          C = n(2427),
          M = n(6078);
        const P = function (e, t) {
          return () => null;
        };
        const E = n(6564).A;
        var L = n(5013),
          T = n(9488);
        const O = function (e, t, n, i, o) {
          return null;
        };
        var R = n(5420),
          I = n(3319),
          N = n(5849),
          _ = n(3574);
        const D = {
          configure: (e) => {
            i.A.configure(e);
          },
        };
      },
      7328: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(5043);
        const o = function (e, t) {
          var n, o;
          return (
            i.isValidElement(e) &&
            -1 !==
              t.indexOf(
                null != (n = e.type.muiName)
                  ? n
                  : null == (o = e.type) ||
                    null == (o = o._payload) ||
                    null == (o = o.value)
                  ? void 0
                  : o.muiName
              )
          );
        };
      },
      2427: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = n(1668).A;
      },
      6078: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = n(3940).A;
      },
      5420: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(5043);
        const o = function (e) {
          let { controlled: t, default: n, name: o, state: a = "value" } = e;
          const { current: s } = i.useRef(void 0 !== t),
            [r, l] = i.useState(n);
          return [
            s ? t : r,
            i.useCallback((e) => {
              s || l(e);
            }, []),
          ];
        };
      },
      5013: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = n(4440).A;
      },
      3319: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = n(1782).A;
      },
      5849: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = n(3462).A;
      },
      9488: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => s });
        var i = n(5043);
        let o = 0;
        const a = n.t(i, 2)["useId".toString()];
        const s = function (e) {
          if (void 0 !== a) {
            const t = a();
            return null != e ? e : t;
          }
          return (function (e) {
            const [t, n] = i.useState(e),
              a = e || t;
            return (
              i.useEffect(() => {
                null == t && ((o += 1), n("mui-".concat(o)));
              }, [t]),
              a
            );
          })(e);
        };
      },
      3574: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => p });
        var i = n(5043),
          o = n(9303);
        let a = !0,
          s = !1;
        const r = new o.E(),
          l = {
            text: !0,
            search: !0,
            url: !0,
            tel: !0,
            email: !0,
            password: !0,
            number: !0,
            date: !0,
            month: !0,
            week: !0,
            time: !0,
            datetime: !0,
            "datetime-local": !0,
          };
        function c(e) {
          e.metaKey || e.altKey || e.ctrlKey || (a = !0);
        }
        function u() {
          a = !1;
        }
        function d() {
          "hidden" === this.visibilityState && s && (a = !0);
        }
        function h(e) {
          const { target: t } = e;
          try {
            return t.matches(":focus-visible");
          } catch (n) {}
          return (
            a ||
            (function (e) {
              const { type: t, tagName: n } = e;
              return (
                !("INPUT" !== n || !l[t] || e.readOnly) ||
                ("TEXTAREA" === n && !e.readOnly) ||
                !!e.isContentEditable
              );
            })(t)
          );
        }
        const p = function () {
          const e = i.useCallback((e) => {
              var t;
              null != e &&
                ((t = e.ownerDocument).addEventListener("keydown", c, !0),
                t.addEventListener("mousedown", u, !0),
                t.addEventListener("pointerdown", u, !0),
                t.addEventListener("touchstart", u, !0),
                t.addEventListener("visibilitychange", d, !0));
            }, []),
            t = i.useRef(!1);
          return {
            isFocusVisibleRef: t,
            onFocus: function (e) {
              return !!h(e) && ((t.current = !0), !0);
            },
            onBlur: function () {
              return (
                !!t.current &&
                ((s = !0),
                r.start(100, () => {
                  s = !1;
                }),
                (t.current = !1),
                !0)
              );
            },
            ref: e,
          };
        };
      },
      869: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => a });
        n(5043);
        var i = n(3290),
          o = n(579);
        function a(e) {
          const { styles: t, defaultTheme: n = {} } = e,
            a =
              "function" === typeof t
                ? (e) => {
                    return t(
                      void 0 === (i = e) ||
                        null === i ||
                        0 === Object.keys(i).length
                        ? n
                        : e
                    );
                    var i;
                  }
                : t;
          return (0, o.jsx)(i.mL, { styles: a });
        }
      },
      2030: (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            GlobalStyles: () => k.A,
            StyledEngineProvider: () => S,
            ThemeContext: () => l.T,
            css: () => b.AH,
            default: () => A,
            internal_processStyles: () => C,
            keyframes: () => b.i7,
          });
        var i = n(8168),
          o = n(5043),
          a = n(918),
          s =
            /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
          r = (0, a.A)(function (e) {
            return (
              s.test(e) ||
              (111 === e.charCodeAt(0) &&
                110 === e.charCodeAt(1) &&
                e.charCodeAt(2) < 91)
            );
          }),
          l = n(4575),
          c = n(1722),
          u = n(9002),
          d = n(9436),
          h = r,
          p = function (e) {
            return "theme" !== e;
          },
          f = function (e) {
            return "string" === typeof e && e.charCodeAt(0) > 96 ? h : p;
          },
          g = function (e, t, n) {
            var i;
            if (t) {
              var o = t.shouldForwardProp;
              i =
                e.__emotion_forwardProp && o
                  ? function (t) {
                      return e.__emotion_forwardProp(t) && o(t);
                    }
                  : o;
            }
            return (
              "function" !== typeof i && n && (i = e.__emotion_forwardProp), i
            );
          },
          m = function (e) {
            var t = e.cache,
              n = e.serialized,
              i = e.isStringTag;
            return (
              (0, c.SF)(t, n, i),
              (0, d.s)(function () {
                return (0, c.sk)(t, n, i);
              }),
              null
            );
          },
          v = function e(t, n) {
            var a,
              s,
              r = t.__emotion_real === t,
              d = (r && t.__emotion_base) || t;
            void 0 !== n && ((a = n.label), (s = n.target));
            var h = g(t, n, r),
              p = h || f(d),
              v = !p("as");
            return function () {
              var b = arguments,
                x =
                  r && void 0 !== t.__emotion_styles
                    ? t.__emotion_styles.slice(0)
                    : [];
              if (
                (void 0 !== a && x.push("label:" + a + ";"),
                null == b[0] || void 0 === b[0].raw)
              )
                x.push.apply(x, b);
              else {
                x.push(b[0][0]);
                for (var y = b.length, w = 1; w < y; w++) x.push(b[w], b[0][w]);
              }
              var S = (0, l.w)(function (e, t, n) {
                var i = (v && e.as) || d,
                  a = "",
                  r = [],
                  g = e;
                if (null == e.theme) {
                  for (var b in ((g = {}), e)) g[b] = e[b];
                  g.theme = o.useContext(l.T);
                }
                "string" === typeof e.className
                  ? (a = (0, c.Rk)(t.registered, r, e.className))
                  : null != e.className && (a = e.className + " ");
                var y = (0, u.J)(x.concat(r), t.registered, g);
                (a += t.key + "-" + y.name), void 0 !== s && (a += " " + s);
                var w = v && void 0 === h ? f(i) : p,
                  S = {};
                for (var k in e) (v && "as" === k) || (w(k) && (S[k] = e[k]));
                return (
                  (S.className = a),
                  n && (S.ref = n),
                  o.createElement(
                    o.Fragment,
                    null,
                    o.createElement(m, {
                      cache: t,
                      serialized: y,
                      isStringTag: "string" === typeof i,
                    }),
                    o.createElement(i, S)
                  )
                );
              });
              return (
                (S.displayName =
                  void 0 !== a
                    ? a
                    : "Styled(" +
                      ("string" === typeof d
                        ? d
                        : d.displayName || d.name || "Component") +
                      ")"),
                (S.defaultProps = t.defaultProps),
                (S.__emotion_real = S),
                (S.__emotion_base = d),
                (S.__emotion_styles = x),
                (S.__emotion_forwardProp = h),
                Object.defineProperty(S, "toString", {
                  value: function () {
                    return "." + s;
                  },
                }),
                (S.withComponent = function (t, o) {
                  return e(
                    t,
                    (0, i.A)({}, n, o, { shouldForwardProp: g(S, o, !0) })
                  ).apply(void 0, x);
                }),
                S
              );
            };
          }.bind();
        [
          "a",
          "abbr",
          "address",
          "area",
          "article",
          "aside",
          "audio",
          "b",
          "base",
          "bdi",
          "bdo",
          "big",
          "blockquote",
          "body",
          "br",
          "button",
          "canvas",
          "caption",
          "cite",
          "code",
          "col",
          "colgroup",
          "data",
          "datalist",
          "dd",
          "del",
          "details",
          "dfn",
          "dialog",
          "div",
          "dl",
          "dt",
          "em",
          "embed",
          "fieldset",
          "figcaption",
          "figure",
          "footer",
          "form",
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
          "head",
          "header",
          "hgroup",
          "hr",
          "html",
          "i",
          "iframe",
          "img",
          "input",
          "ins",
          "kbd",
          "keygen",
          "label",
          "legend",
          "li",
          "link",
          "main",
          "map",
          "mark",
          "marquee",
          "menu",
          "menuitem",
          "meta",
          "meter",
          "nav",
          "noscript",
          "object",
          "ol",
          "optgroup",
          "option",
          "output",
          "p",
          "param",
          "picture",
          "pre",
          "progress",
          "q",
          "rp",
          "rt",
          "ruby",
          "s",
          "samp",
          "script",
          "section",
          "select",
          "small",
          "source",
          "span",
          "strong",
          "style",
          "sub",
          "summary",
          "sup",
          "table",
          "tbody",
          "td",
          "textarea",
          "tfoot",
          "th",
          "thead",
          "time",
          "title",
          "tr",
          "track",
          "u",
          "ul",
          "var",
          "video",
          "wbr",
          "circle",
          "clipPath",
          "defs",
          "ellipse",
          "foreignObject",
          "g",
          "image",
          "line",
          "linearGradient",
          "mask",
          "path",
          "pattern",
          "polygon",
          "polyline",
          "radialGradient",
          "rect",
          "stop",
          "svg",
          "text",
          "tspan",
        ].forEach(function (e) {
          v[e] = v(e);
        });
        var b = n(3290),
          x = n(3803),
          y = n(579);
        let w;
        function S(e) {
          const { injectFirst: t, children: n } = e;
          return t && w ? (0, y.jsx)(l.C, { value: w, children: n }) : n;
        }
        "object" === typeof document &&
          (w = (0, x.A)({ key: "css", prepend: !0 }));
        var k = n(869);
        function A(e, t) {
          return v(e, t);
        }
        const C = (e, t) => {
          Array.isArray(e.__emotion_styles) &&
            (e.__emotion_styles = t(e.__emotion_styles));
        };
      },
      7266: (e, t, n) => {
        "use strict";
        var i = n(4994);
        (t.X4 = p),
          (t.e$ = f),
          (t.tL = m),
          (t.eM = function (e, t) {
            const n = h(e),
              i = h(t);
            return (Math.max(n, i) + 0.05) / (Math.min(n, i) + 0.05);
          }),
          (t.a = g);
        var o = i(n(457)),
          a = i(n(6531));
        function s(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 1;
          return (0, a.default)(e, t, n);
        }
        function r(e) {
          e = e.slice(1);
          const t = new RegExp(".{1,".concat(e.length >= 6 ? 2 : 1, "}"), "g");
          let n = e.match(t);
          return (
            n && 1 === n[0].length && (n = n.map((e) => e + e)),
            n
              ? "rgb"
                  .concat(4 === n.length ? "a" : "", "(")
                  .concat(
                    n
                      .map((e, t) =>
                        t < 3
                          ? parseInt(e, 16)
                          : Math.round((parseInt(e, 16) / 255) * 1e3) / 1e3
                      )
                      .join(", "),
                    ")"
                  )
              : ""
          );
        }
        function l(e) {
          if (e.type) return e;
          if ("#" === e.charAt(0)) return l(r(e));
          const t = e.indexOf("("),
            n = e.substring(0, t);
          if (-1 === ["rgb", "rgba", "hsl", "hsla", "color"].indexOf(n))
            throw new Error((0, o.default)(9, e));
          let i,
            a = e.substring(t + 1, e.length - 1);
          if ("color" === n) {
            if (
              ((a = a.split(" ")),
              (i = a.shift()),
              4 === a.length &&
                "/" === a[3].charAt(0) &&
                (a[3] = a[3].slice(1)),
              -1 ===
                [
                  "srgb",
                  "display-p3",
                  "a98-rgb",
                  "prophoto-rgb",
                  "rec-2020",
                ].indexOf(i))
            )
              throw new Error((0, o.default)(10, i));
          } else a = a.split(",");
          return (
            (a = a.map((e) => parseFloat(e))),
            { type: n, values: a, colorSpace: i }
          );
        }
        const c = (e) => {
          const t = l(e);
          return t.values
            .slice(0, 3)
            .map((e, n) =>
              -1 !== t.type.indexOf("hsl") && 0 !== n ? "".concat(e, "%") : e
            )
            .join(" ");
        };
        function u(e) {
          const { type: t, colorSpace: n } = e;
          let { values: i } = e;
          return (
            -1 !== t.indexOf("rgb")
              ? (i = i.map((e, t) => (t < 3 ? parseInt(e, 10) : e)))
              : -1 !== t.indexOf("hsl") &&
                ((i[1] = "".concat(i[1], "%")), (i[2] = "".concat(i[2], "%"))),
            (i =
              -1 !== t.indexOf("color")
                ? "".concat(n, " ").concat(i.join(" "))
                : "".concat(i.join(", "))),
            "".concat(t, "(").concat(i, ")")
          );
        }
        function d(e) {
          e = l(e);
          const { values: t } = e,
            n = t[0],
            i = t[1] / 100,
            o = t[2] / 100,
            a = i * Math.min(o, 1 - o),
            s = function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : (e + n / 30) % 12;
              return o - a * Math.max(Math.min(t - 3, 9 - t, 1), -1);
            };
          let r = "rgb";
          const c = [
            Math.round(255 * s(0)),
            Math.round(255 * s(8)),
            Math.round(255 * s(4)),
          ];
          return (
            "hsla" === e.type && ((r += "a"), c.push(t[3])),
            u({ type: r, values: c })
          );
        }
        function h(e) {
          let t =
            "hsl" === (e = l(e)).type || "hsla" === e.type
              ? l(d(e)).values
              : e.values;
          return (
            (t = t.map(
              (t) => (
                "color" !== e.type && (t /= 255),
                t <= 0.03928 ? t / 12.92 : ((t + 0.055) / 1.055) ** 2.4
              )
            )),
            Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3))
          );
        }
        function p(e, t) {
          return (
            (e = l(e)),
            (t = s(t)),
            ("rgb" !== e.type && "hsl" !== e.type) || (e.type += "a"),
            "color" === e.type
              ? (e.values[3] = "/".concat(t))
              : (e.values[3] = t),
            u(e)
          );
        }
        function f(e, t) {
          if (((e = l(e)), (t = s(t)), -1 !== e.type.indexOf("hsl")))
            e.values[2] *= 1 - t;
          else if (
            -1 !== e.type.indexOf("rgb") ||
            -1 !== e.type.indexOf("color")
          )
            for (let n = 0; n < 3; n += 1) e.values[n] *= 1 - t;
          return u(e);
        }
        function g(e, t) {
          if (((e = l(e)), (t = s(t)), -1 !== e.type.indexOf("hsl")))
            e.values[2] += (100 - e.values[2]) * t;
          else if (-1 !== e.type.indexOf("rgb"))
            for (let n = 0; n < 3; n += 1)
              e.values[n] += (255 - e.values[n]) * t;
          else if (-1 !== e.type.indexOf("color"))
            for (let n = 0; n < 3; n += 1) e.values[n] += (1 - e.values[n]) * t;
          return u(e);
        }
        function m(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 0.15;
          return h(e) > 0.5 ? f(e, t) : g(e, t);
        }
      },
      8052: (e, t, n) => {
        "use strict";
        var i = n(4994);
        t.Ay = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          const {
              themeId: t,
              defaultTheme: n = g,
              rootShouldForwardProp: i = f,
              slotShouldForwardProp: l = f,
            } = e,
            u = (e) =>
              (0, c.default)(
                (0, o.default)({}, e, {
                  theme: v(
                    (0, o.default)({}, e, { defaultTheme: n, themeId: t })
                  ),
                })
              );
          return (
            (u.__mui_systemSx = !0),
            function (e) {
              let c =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              (0, s.internal_processStyles)(e, (e) =>
                e.filter((e) => !(null != e && e.__mui_systemSx))
              );
              const {
                  name: d,
                  slot: p,
                  skipVariantsResolver: g,
                  skipSx: y,
                  overridesResolver: w = b(m(p)),
                } = c,
                S = (0, a.default)(c, h),
                k =
                  void 0 !== g ? g : (p && "Root" !== p && "root" !== p) || !1,
                A = y || !1;
              let C = f;
              "Root" === p || "root" === p
                ? (C = i)
                : p
                ? (C = l)
                : (function (e) {
                    return "string" === typeof e && e.charCodeAt(0) > 96;
                  })(e) && (C = void 0);
              const M = (0, s.default)(
                  e,
                  (0, o.default)({ shouldForwardProp: C, label: undefined }, S)
                ),
                P = (e) =>
                  ("function" === typeof e && e.__emotion_real !== e) ||
                  (0, r.isPlainObject)(e)
                    ? (i) =>
                        x(
                          e,
                          (0, o.default)({}, i, {
                            theme: v({
                              theme: i.theme,
                              defaultTheme: n,
                              themeId: t,
                            }),
                          })
                        )
                    : e,
                E = function (i) {
                  let a = P(i);
                  for (
                    var s = arguments.length,
                      r = new Array(s > 1 ? s - 1 : 0),
                      l = 1;
                    l < s;
                    l++
                  )
                    r[l - 1] = arguments[l];
                  const c = r ? r.map(P) : [];
                  d &&
                    w &&
                    c.push((e) => {
                      const i = v(
                        (0, o.default)({}, e, { defaultTheme: n, themeId: t })
                      );
                      if (
                        !i.components ||
                        !i.components[d] ||
                        !i.components[d].styleOverrides
                      )
                        return null;
                      const a = i.components[d].styleOverrides,
                        s = {};
                      return (
                        Object.entries(a).forEach((t) => {
                          let [n, a] = t;
                          s[n] = x(a, (0, o.default)({}, e, { theme: i }));
                        }),
                        w(e, s)
                      );
                    }),
                    d &&
                      !k &&
                      c.push((e) => {
                        var i;
                        const a = v(
                          (0, o.default)({}, e, { defaultTheme: n, themeId: t })
                        );
                        return x(
                          {
                            variants:
                              null == a ||
                              null == (i = a.components) ||
                              null == (i = i[d])
                                ? void 0
                                : i.variants,
                          },
                          (0, o.default)({}, e, { theme: a })
                        );
                      }),
                    A || c.push(u);
                  const h = c.length - r.length;
                  if (Array.isArray(i) && h > 0) {
                    const e = new Array(h).fill("");
                    (a = [...i, ...e]), (a.raw = [...i.raw, ...e]);
                  }
                  const p = M(a, ...c);
                  return e.muiName && (p.muiName = e.muiName), p;
                };
              return M.withConfig && (E.withConfig = M.withConfig), E;
            }
          );
        };
        var o = i(n(4634)),
          a = i(n(4893)),
          s = (function (e, t) {
            if (!t && e && e.__esModule) return e;
            if (null === e || ("object" != typeof e && "function" != typeof e))
              return { default: e };
            var n = p(t);
            if (n && n.has(e)) return n.get(e);
            var i = { __proto__: null },
              o = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (var a in e)
              if (
                "default" !== a &&
                Object.prototype.hasOwnProperty.call(e, a)
              ) {
                var s = o ? Object.getOwnPropertyDescriptor(e, a) : null;
                s && (s.get || s.set)
                  ? Object.defineProperty(i, a, s)
                  : (i[a] = e[a]);
              }
            return (i.default = e), n && n.set(e, i), i;
          })(n(2030)),
          r = n(9482),
          l = (i(n(7918)), i(n(3382)), i(n(4989))),
          c = i(n(3234));
        const u = ["ownerState"],
          d = ["variants"],
          h = [
            "name",
            "slot",
            "skipVariantsResolver",
            "skipSx",
            "overridesResolver",
          ];
        function p(e) {
          if ("function" != typeof WeakMap) return null;
          var t = new WeakMap(),
            n = new WeakMap();
          return (p = function (e) {
            return e ? n : t;
          })(e);
        }
        function f(e) {
          return (
            "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e
          );
        }
        const g = (0, l.default)(),
          m = (e) => (e ? e.charAt(0).toLowerCase() + e.slice(1) : e);
        function v(e) {
          let { defaultTheme: t, theme: n, themeId: i } = e;
          return (o = n), 0 === Object.keys(o).length ? t : n[i] || n;
          var o;
        }
        function b(e) {
          return e ? (t, n) => n[e] : null;
        }
        function x(e, t) {
          let { ownerState: n } = t,
            i = (0, a.default)(t, u);
          const s =
            "function" === typeof e
              ? e((0, o.default)({ ownerState: n }, i))
              : e;
          if (Array.isArray(s))
            return s.flatMap((e) => x(e, (0, o.default)({ ownerState: n }, i)));
          if (s && "object" === typeof s && Array.isArray(s.variants)) {
            const { variants: e = [] } = s;
            let t = (0, a.default)(s, d);
            return (
              e.forEach((e) => {
                let a = !0;
                "function" === typeof e.props
                  ? (a = e.props((0, o.default)({ ownerState: n }, i, n)))
                  : Object.keys(e.props).forEach((t) => {
                      (null == n ? void 0 : n[t]) !== e.props[t] &&
                        i[t] !== e.props[t] &&
                        (a = !1);
                    }),
                  a &&
                    (Array.isArray(t) || (t = [t]),
                    t.push(
                      "function" === typeof e.style
                        ? e.style((0, o.default)({ ownerState: n }, i, n))
                        : e.style
                    ));
              }),
              t
            );
          }
          return s;
        }
      },
      3654: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => l, b: () => r });
        var i = n(5043),
          o = n(3030),
          a = n(579);
        const s = i.createContext(void 0);
        function r(e) {
          let { props: t, name: n } = e;
          return (function (e) {
            const { theme: t, name: n, props: i } = e;
            if (!t || !t.components || !t.components[n]) return i;
            const a = t.components[n];
            return a.defaultProps
              ? (0, o.A)(a.defaultProps, i)
              : a.styleOverrides || a.variants
              ? i
              : (0, o.A)(a, i);
          })({ props: t, name: n, theme: { components: i.useContext(s) } });
        }
        const l = function (e) {
          let { value: t, children: n } = e;
          return (0, a.jsx)(s.Provider, { value: t, children: n });
        };
      },
      9751: (e, t, n) => {
        "use strict";
        n.d(t, {
          EU: () => s,
          NI: () => a,
          kW: () => l,
          vf: () => r,
          zu: () => i,
        });
        const i = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
          o = {
            keys: ["xs", "sm", "md", "lg", "xl"],
            up: (e) => "@media (min-width:".concat(i[e], "px)"),
          };
        function a(e, t, n) {
          const a = e.theme || {};
          if (Array.isArray(t)) {
            const e = a.breakpoints || o;
            return t.reduce(
              (i, o, a) => ((i[e.up(e.keys[a])] = n(t[a])), i),
              {}
            );
          }
          if ("object" === typeof t) {
            const e = a.breakpoints || o;
            return Object.keys(t).reduce((o, a) => {
              if (-1 !== Object.keys(e.values || i).indexOf(a)) {
                o[e.up(a)] = n(t[a], a);
              } else {
                const e = a;
                o[e] = t[e];
              }
              return o;
            }, {});
          }
          return n(t);
        }
        function s() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          var t;
          return (
            (null == (t = e.keys)
              ? void 0
              : t.reduce((t, n) => ((t[e.up(n)] = {}), t), {})) || {}
          );
        }
        function r(e, t) {
          return e.reduce((e, t) => {
            const n = e[t];
            return (!n || 0 === Object.keys(n).length) && delete e[t], e;
          }, t);
        }
        function l(e) {
          let { values: t, breakpoints: n, base: i } = e;
          const o =
              i ||
              (function (e, t) {
                if ("object" !== typeof e) return {};
                const n = {},
                  i = Object.keys(t);
                return (
                  Array.isArray(e)
                    ? i.forEach((t, i) => {
                        i < e.length && (n[t] = !0);
                      })
                    : i.forEach((t) => {
                        null != e[t] && (n[t] = !0);
                      }),
                  n
                );
              })(t, n),
            a = Object.keys(o);
          if (0 === a.length) return t;
          let s;
          return a.reduce(
            (e, n, i) => (
              Array.isArray(t)
                ? ((e[n] = null != t[i] ? t[i] : t[s]), (s = i))
                : "object" === typeof t
                ? ((e[n] = null != t[n] ? t[n] : t[s]), (s = n))
                : (e[n] = t),
              e
            ),
            {}
          );
        }
      },
      9703: (e, t, n) => {
        "use strict";
        function i(e, t) {
          const n = this;
          if (n.vars && "function" === typeof n.getColorSchemeSelector) {
            const i = n
              .getColorSchemeSelector(e)
              .replace(/(\[[^\]]+\])/, "*:where($1)");
            return { [i]: t };
          }
          return n.palette.mode === e ? t : {};
        }
        n.d(t, { A: () => i });
      },
      4853: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => r });
        var i = n(8587),
          o = n(8168);
        const a = ["values", "unit", "step"],
          s = (e) => {
            const t = Object.keys(e).map((t) => ({ key: t, val: e[t] })) || [];
            return (
              t.sort((e, t) => e.val - t.val),
              t.reduce((e, t) => (0, o.A)({}, e, { [t.key]: t.val }), {})
            );
          };
        function r(e) {
          const {
              values: t = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
              unit: n = "px",
              step: r = 5,
            } = e,
            l = (0, i.A)(e, a),
            c = s(t),
            u = Object.keys(c);
          function d(e) {
            const i = "number" === typeof t[e] ? t[e] : e;
            return "@media (min-width:".concat(i).concat(n, ")");
          }
          function h(e) {
            const i = "number" === typeof t[e] ? t[e] : e;
            return "@media (max-width:".concat(i - r / 100).concat(n, ")");
          }
          function p(e, i) {
            const o = u.indexOf(i);
            return (
              "@media (min-width:"
                .concat("number" === typeof t[e] ? t[e] : e)
                .concat(n, ") and ") +
              "(max-width:"
                .concat(
                  (-1 !== o && "number" === typeof t[u[o]] ? t[u[o]] : i) -
                    r / 100
                )
                .concat(n, ")")
            );
          }
          return (0, o.A)(
            {
              keys: u,
              values: c,
              up: d,
              down: h,
              between: p,
              only: function (e) {
                return u.indexOf(e) + 1 < u.length
                  ? p(e, u[u.indexOf(e) + 1])
                  : d(e);
              },
              not: function (e) {
                const t = u.indexOf(e);
                return 0 === t
                  ? d(u[1])
                  : t === u.length - 1
                  ? h(u[t])
                  : p(e, u[u.indexOf(e) + 1]).replace(
                      "@media",
                      "@media not all and"
                    );
              },
              unit: n,
            },
            l
          );
        }
      },
      8280: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => p });
        var i = n(8168),
          o = n(8587),
          a = n(9172),
          s = n(4853);
        const r = { borderRadius: 4 };
        var l = n(8604);
        var c = n(8812),
          u = n(7758),
          d = n(9703);
        const h = ["breakpoints", "palette", "spacing", "shape"];
        const p = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          const {
              breakpoints: t = {},
              palette: n = {},
              spacing: p,
              shape: f = {},
            } = e,
            g = (0, o.A)(e, h),
            m = (0, s.A)(t),
            v = (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 8;
              if (e.mui) return e;
              const t = (0, l.LX)({ spacing: e }),
                n = function () {
                  for (
                    var e = arguments.length, n = new Array(e), i = 0;
                    i < e;
                    i++
                  )
                    n[i] = arguments[i];
                  return (0 === n.length ? [1] : n)
                    .map((e) => {
                      const n = t(e);
                      return "number" === typeof n ? "".concat(n, "px") : n;
                    })
                    .join(" ");
                };
              return (n.mui = !0), n;
            })(p);
          let b = (0, a.A)(
            {
              breakpoints: m,
              direction: "ltr",
              components: {},
              palette: (0, i.A)({ mode: "light" }, n),
              spacing: v,
              shape: (0, i.A)({}, r, f),
            },
            g
          );
          b.applyStyles = d.A;
          for (
            var x = arguments.length, y = new Array(x > 1 ? x - 1 : 0), w = 1;
            w < x;
            w++
          )
            y[w - 1] = arguments[w];
          return (
            (b = y.reduce((e, t) => (0, a.A)(e, t), b)),
            (b.unstable_sxConfig = (0, i.A)(
              {},
              u.A,
              null == g ? void 0 : g.unstable_sxConfig
            )),
            (b.unstable_sx = function (e) {
              return (0, c.A)({ sx: e, theme: this });
            }),
            b
          );
        };
      },
      4989: (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            default: () => i.A,
            private_createBreakpoints: () => o.A,
            unstable_applyStyles: () => a.A,
          });
        var i = n(8280),
          o = n(4853),
          a = n(9703);
      },
      3815: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(9172);
        const o = function (e, t) {
          return t ? (0, i.A)(e, t, { clone: !1 }) : e;
        };
      },
      8604: (e, t, n) => {
        "use strict";
        n.d(t, {
          LX: () => f,
          MA: () => p,
          _W: () => g,
          Lc: () => b,
          Ms: () => x,
        });
        var i = n(9751),
          o = n(7162),
          a = n(3815);
        const s = { m: "margin", p: "padding" },
          r = {
            t: "Top",
            r: "Right",
            b: "Bottom",
            l: "Left",
            x: ["Left", "Right"],
            y: ["Top", "Bottom"],
          },
          l = { marginX: "mx", marginY: "my", paddingX: "px", paddingY: "py" },
          c = (function (e) {
            const t = {};
            return (n) => (void 0 === t[n] && (t[n] = e(n)), t[n]);
          })((e) => {
            if (e.length > 2) {
              if (!l[e]) return [e];
              e = l[e];
            }
            const [t, n] = e.split(""),
              i = s[t],
              o = r[n] || "";
            return Array.isArray(o) ? o.map((e) => i + e) : [i + o];
          }),
          u = [
            "m",
            "mt",
            "mr",
            "mb",
            "ml",
            "mx",
            "my",
            "margin",
            "marginTop",
            "marginRight",
            "marginBottom",
            "marginLeft",
            "marginX",
            "marginY",
            "marginInline",
            "marginInlineStart",
            "marginInlineEnd",
            "marginBlock",
            "marginBlockStart",
            "marginBlockEnd",
          ],
          d = [
            "p",
            "pt",
            "pr",
            "pb",
            "pl",
            "px",
            "py",
            "padding",
            "paddingTop",
            "paddingRight",
            "paddingBottom",
            "paddingLeft",
            "paddingX",
            "paddingY",
            "paddingInline",
            "paddingInlineStart",
            "paddingInlineEnd",
            "paddingBlock",
            "paddingBlockStart",
            "paddingBlockEnd",
          ],
          h = [...u, ...d];
        function p(e, t, n, i) {
          var a;
          const s = null != (a = (0, o.Yn)(e, t, !1)) ? a : n;
          return "number" === typeof s
            ? (e) => ("string" === typeof e ? e : s * e)
            : Array.isArray(s)
            ? (e) => ("string" === typeof e ? e : s[e])
            : "function" === typeof s
            ? s
            : () => {};
        }
        function f(e) {
          return p(e, "spacing", 8);
        }
        function g(e, t) {
          if ("string" === typeof t || null == t) return t;
          const n = e(Math.abs(t));
          return t >= 0 ? n : "number" === typeof n ? -n : "-".concat(n);
        }
        function m(e, t, n, o) {
          if (-1 === t.indexOf(n)) return null;
          const a = (function (e, t) {
              return (n) => e.reduce((e, i) => ((e[i] = g(t, n)), e), {});
            })(c(n), o),
            s = e[n];
          return (0, i.NI)(e, s, a);
        }
        function v(e, t) {
          const n = f(e.theme);
          return Object.keys(e)
            .map((i) => m(e, t, i, n))
            .reduce(a.A, {});
        }
        function b(e) {
          return v(e, u);
        }
        function x(e) {
          return v(e, d);
        }
        function y(e) {
          return v(e, h);
        }
        (b.propTypes = {}),
          (b.filterProps = u),
          (x.propTypes = {}),
          (x.filterProps = d),
          (y.propTypes = {}),
          (y.filterProps = h);
      },
      7162: (e, t, n) => {
        "use strict";
        n.d(t, { Ay: () => r, BO: () => s, Yn: () => a });
        var i = n(7598),
          o = n(9751);
        function a(e, t) {
          let n =
            !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          if (!t || "string" !== typeof t) return null;
          if (e && e.vars && n) {
            const n = "vars."
              .concat(t)
              .split(".")
              .reduce((e, t) => (e && e[t] ? e[t] : null), e);
            if (null != n) return n;
          }
          return t
            .split(".")
            .reduce((e, t) => (e && null != e[t] ? e[t] : null), e);
        }
        function s(e, t, n) {
          let i,
            o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : n;
          return (
            (i =
              "function" === typeof e
                ? e(n)
                : Array.isArray(e)
                ? e[n] || o
                : a(e, n) || o),
            t && (i = t(i, o, e)),
            i
          );
        }
        const r = function (e) {
          const {
              prop: t,
              cssProperty: n = e.prop,
              themeKey: r,
              transform: l,
            } = e,
            c = (e) => {
              if (null == e[t]) return null;
              const c = e[t],
                u = a(e.theme, r) || {};
              return (0, o.NI)(e, c, (e) => {
                let o = s(u, l, e);
                return (
                  e === o &&
                    "string" === typeof e &&
                    (o = s(
                      u,
                      l,
                      "".concat(t).concat("default" === e ? "" : (0, i.A)(e)),
                      e
                    )),
                  !1 === n ? o : { [n]: o }
                );
              });
            };
          return (c.propTypes = {}), (c.filterProps = [t]), c;
        };
      },
      7758: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => N });
        var i = n(8604),
          o = n(7162),
          a = n(3815);
        const s = function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          const i = t.reduce(
              (e, t) => (
                t.filterProps.forEach((n) => {
                  e[n] = t;
                }),
                e
              ),
              {}
            ),
            o = (e) =>
              Object.keys(e).reduce(
                (t, n) => (i[n] ? (0, a.A)(t, i[n](e)) : t),
                {}
              );
          return (
            (o.propTypes = {}),
            (o.filterProps = t.reduce((e, t) => e.concat(t.filterProps), [])),
            o
          );
        };
        var r = n(9751);
        function l(e) {
          return "number" !== typeof e ? e : "".concat(e, "px solid");
        }
        function c(e, t) {
          return (0, o.Ay)({ prop: e, themeKey: "borders", transform: t });
        }
        const u = c("border", l),
          d = c("borderTop", l),
          h = c("borderRight", l),
          p = c("borderBottom", l),
          f = c("borderLeft", l),
          g = c("borderColor"),
          m = c("borderTopColor"),
          v = c("borderRightColor"),
          b = c("borderBottomColor"),
          x = c("borderLeftColor"),
          y = c("outline", l),
          w = c("outlineColor"),
          S = (e) => {
            if (void 0 !== e.borderRadius && null !== e.borderRadius) {
              const t = (0, i.MA)(
                  e.theme,
                  "shape.borderRadius",
                  4,
                  "borderRadius"
                ),
                n = (e) => ({ borderRadius: (0, i._W)(t, e) });
              return (0, r.NI)(e, e.borderRadius, n);
            }
            return null;
          };
        (S.propTypes = {}), (S.filterProps = ["borderRadius"]);
        s(u, d, h, p, f, g, m, v, b, x, S, y, w);
        const k = (e) => {
          if (void 0 !== e.gap && null !== e.gap) {
            const t = (0, i.MA)(e.theme, "spacing", 8, "gap"),
              n = (e) => ({ gap: (0, i._W)(t, e) });
            return (0, r.NI)(e, e.gap, n);
          }
          return null;
        };
        (k.propTypes = {}), (k.filterProps = ["gap"]);
        const A = (e) => {
          if (void 0 !== e.columnGap && null !== e.columnGap) {
            const t = (0, i.MA)(e.theme, "spacing", 8, "columnGap"),
              n = (e) => ({ columnGap: (0, i._W)(t, e) });
            return (0, r.NI)(e, e.columnGap, n);
          }
          return null;
        };
        (A.propTypes = {}), (A.filterProps = ["columnGap"]);
        const C = (e) => {
          if (void 0 !== e.rowGap && null !== e.rowGap) {
            const t = (0, i.MA)(e.theme, "spacing", 8, "rowGap"),
              n = (e) => ({ rowGap: (0, i._W)(t, e) });
            return (0, r.NI)(e, e.rowGap, n);
          }
          return null;
        };
        (C.propTypes = {}), (C.filterProps = ["rowGap"]);
        s(
          k,
          A,
          C,
          (0, o.Ay)({ prop: "gridColumn" }),
          (0, o.Ay)({ prop: "gridRow" }),
          (0, o.Ay)({ prop: "gridAutoFlow" }),
          (0, o.Ay)({ prop: "gridAutoColumns" }),
          (0, o.Ay)({ prop: "gridAutoRows" }),
          (0, o.Ay)({ prop: "gridTemplateColumns" }),
          (0, o.Ay)({ prop: "gridTemplateRows" }),
          (0, o.Ay)({ prop: "gridTemplateAreas" }),
          (0, o.Ay)({ prop: "gridArea" })
        );
        function M(e, t) {
          return "grey" === t ? t : e;
        }
        s(
          (0, o.Ay)({ prop: "color", themeKey: "palette", transform: M }),
          (0, o.Ay)({
            prop: "bgcolor",
            cssProperty: "backgroundColor",
            themeKey: "palette",
            transform: M,
          }),
          (0, o.Ay)({
            prop: "backgroundColor",
            themeKey: "palette",
            transform: M,
          })
        );
        function P(e) {
          return e <= 1 && 0 !== e ? "".concat(100 * e, "%") : e;
        }
        const E = (0, o.Ay)({ prop: "width", transform: P }),
          L = (e) => {
            if (void 0 !== e.maxWidth && null !== e.maxWidth) {
              const t = (t) => {
                var n, i;
                const o =
                  (null == (n = e.theme) ||
                  null == (n = n.breakpoints) ||
                  null == (n = n.values)
                    ? void 0
                    : n[t]) || r.zu[t];
                return o
                  ? "px" !==
                    (null == (i = e.theme) || null == (i = i.breakpoints)
                      ? void 0
                      : i.unit)
                    ? {
                        maxWidth: "".concat(o).concat(e.theme.breakpoints.unit),
                      }
                    : { maxWidth: o }
                  : { maxWidth: P(t) };
              };
              return (0, r.NI)(e, e.maxWidth, t);
            }
            return null;
          };
        L.filterProps = ["maxWidth"];
        const T = (0, o.Ay)({ prop: "minWidth", transform: P }),
          O = (0, o.Ay)({ prop: "height", transform: P }),
          R = (0, o.Ay)({ prop: "maxHeight", transform: P }),
          I = (0, o.Ay)({ prop: "minHeight", transform: P }),
          N =
            ((0, o.Ay)({ prop: "size", cssProperty: "width", transform: P }),
            (0, o.Ay)({ prop: "size", cssProperty: "height", transform: P }),
            s(E, L, T, O, R, I, (0, o.Ay)({ prop: "boxSizing" })),
            {
              border: { themeKey: "borders", transform: l },
              borderTop: { themeKey: "borders", transform: l },
              borderRight: { themeKey: "borders", transform: l },
              borderBottom: { themeKey: "borders", transform: l },
              borderLeft: { themeKey: "borders", transform: l },
              borderColor: { themeKey: "palette" },
              borderTopColor: { themeKey: "palette" },
              borderRightColor: { themeKey: "palette" },
              borderBottomColor: { themeKey: "palette" },
              borderLeftColor: { themeKey: "palette" },
              outline: { themeKey: "borders", transform: l },
              outlineColor: { themeKey: "palette" },
              borderRadius: { themeKey: "shape.borderRadius", style: S },
              color: { themeKey: "palette", transform: M },
              bgcolor: {
                themeKey: "palette",
                cssProperty: "backgroundColor",
                transform: M,
              },
              backgroundColor: { themeKey: "palette", transform: M },
              p: { style: i.Ms },
              pt: { style: i.Ms },
              pr: { style: i.Ms },
              pb: { style: i.Ms },
              pl: { style: i.Ms },
              px: { style: i.Ms },
              py: { style: i.Ms },
              padding: { style: i.Ms },
              paddingTop: { style: i.Ms },
              paddingRight: { style: i.Ms },
              paddingBottom: { style: i.Ms },
              paddingLeft: { style: i.Ms },
              paddingX: { style: i.Ms },
              paddingY: { style: i.Ms },
              paddingInline: { style: i.Ms },
              paddingInlineStart: { style: i.Ms },
              paddingInlineEnd: { style: i.Ms },
              paddingBlock: { style: i.Ms },
              paddingBlockStart: { style: i.Ms },
              paddingBlockEnd: { style: i.Ms },
              m: { style: i.Lc },
              mt: { style: i.Lc },
              mr: { style: i.Lc },
              mb: { style: i.Lc },
              ml: { style: i.Lc },
              mx: { style: i.Lc },
              my: { style: i.Lc },
              margin: { style: i.Lc },
              marginTop: { style: i.Lc },
              marginRight: { style: i.Lc },
              marginBottom: { style: i.Lc },
              marginLeft: { style: i.Lc },
              marginX: { style: i.Lc },
              marginY: { style: i.Lc },
              marginInline: { style: i.Lc },
              marginInlineStart: { style: i.Lc },
              marginInlineEnd: { style: i.Lc },
              marginBlock: { style: i.Lc },
              marginBlockStart: { style: i.Lc },
              marginBlockEnd: { style: i.Lc },
              displayPrint: {
                cssProperty: !1,
                transform: (e) => ({ "@media print": { display: e } }),
              },
              display: {},
              overflow: {},
              textOverflow: {},
              visibility: {},
              whiteSpace: {},
              flexBasis: {},
              flexDirection: {},
              flexWrap: {},
              justifyContent: {},
              alignItems: {},
              alignContent: {},
              order: {},
              flex: {},
              flexGrow: {},
              flexShrink: {},
              alignSelf: {},
              justifyItems: {},
              justifySelf: {},
              gap: { style: k },
              rowGap: { style: C },
              columnGap: { style: A },
              gridColumn: {},
              gridRow: {},
              gridAutoFlow: {},
              gridAutoColumns: {},
              gridAutoRows: {},
              gridTemplateColumns: {},
              gridTemplateRows: {},
              gridTemplateAreas: {},
              gridArea: {},
              position: {},
              zIndex: { themeKey: "zIndex" },
              top: {},
              right: {},
              bottom: {},
              left: {},
              boxShadow: { themeKey: "shadows" },
              width: { transform: P },
              maxWidth: { style: L },
              minWidth: { transform: P },
              height: { transform: P },
              maxHeight: { transform: P },
              minHeight: { transform: P },
              boxSizing: {},
              fontFamily: { themeKey: "typography" },
              fontSize: { themeKey: "typography" },
              fontStyle: { themeKey: "typography" },
              fontWeight: { themeKey: "typography" },
              letterSpacing: {},
              textTransform: {},
              lineHeight: {},
              textAlign: {},
              typography: { cssProperty: !1, themeKey: "typography" },
            });
      },
      8698: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => c });
        var i = n(8168),
          o = n(8587),
          a = n(9172),
          s = n(7758);
        const r = ["sx"],
          l = (e) => {
            var t, n;
            const i = { systemProps: {}, otherProps: {} },
              o =
                null !=
                (t =
                  null == e || null == (n = e.theme)
                    ? void 0
                    : n.unstable_sxConfig)
                  ? t
                  : s.A;
            return (
              Object.keys(e).forEach((t) => {
                o[t] ? (i.systemProps[t] = e[t]) : (i.otherProps[t] = e[t]);
              }),
              i
            );
          };
        function c(e) {
          const { sx: t } = e,
            n = (0, o.A)(e, r),
            { systemProps: s, otherProps: c } = l(n);
          let u;
          return (
            (u = Array.isArray(t)
              ? [s, ...t]
              : "function" === typeof t
              ? function () {
                  const e = t(...arguments);
                  return (0, a.Q)(e) ? (0, i.A)({}, s, e) : s;
                }
              : (0, i.A)({}, s, t)),
            (0, i.A)({}, c, { sx: u })
          );
        }
      },
      3234: (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            default: () => i.A,
            extendSxProp: () => o.A,
            unstable_createStyleFunctionSx: () => i.k,
            unstable_defaultSxConfig: () => a.A,
          });
        var i = n(8812),
          o = n(8698),
          a = n(7758);
      },
      8812: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => u, k: () => l });
        var i = n(7598),
          o = n(3815),
          a = n(7162),
          s = n(9751),
          r = n(7758);
        function l() {
          function e(e, t, n, o) {
            const r = { [e]: t, theme: n },
              l = o[e];
            if (!l) return { [e]: t };
            const {
              cssProperty: c = e,
              themeKey: u,
              transform: d,
              style: h,
            } = l;
            if (null == t) return null;
            if ("typography" === u && "inherit" === t) return { [e]: t };
            const p = (0, a.Yn)(n, u) || {};
            if (h) return h(r);
            return (0, s.NI)(r, t, (t) => {
              let n = (0, a.BO)(p, d, t);
              return (
                t === n &&
                  "string" === typeof t &&
                  (n = (0, a.BO)(
                    p,
                    d,
                    "".concat(e).concat("default" === t ? "" : (0, i.A)(t)),
                    t
                  )),
                !1 === c ? n : { [c]: n }
              );
            });
          }
          return function t(n) {
            var i;
            const { sx: a, theme: l = {} } = n || {};
            if (!a) return null;
            const c = null != (i = l.unstable_sxConfig) ? i : r.A;
            function u(n) {
              let i = n;
              if ("function" === typeof n) i = n(l);
              else if ("object" !== typeof n) return n;
              if (!i) return null;
              const a = (0, s.EU)(l.breakpoints),
                r = Object.keys(a);
              let u = a;
              return (
                Object.keys(i).forEach((n) => {
                  const a =
                    ((r = i[n]), (d = l), "function" === typeof r ? r(d) : r);
                  var r, d;
                  if (null !== a && void 0 !== a)
                    if ("object" === typeof a)
                      if (c[n]) u = (0, o.A)(u, e(n, a, l, c));
                      else {
                        const e = (0, s.NI)({ theme: l }, a, (e) => ({
                          [n]: e,
                        }));
                        !(function () {
                          for (
                            var e = arguments.length, t = new Array(e), n = 0;
                            n < e;
                            n++
                          )
                            t[n] = arguments[n];
                          const i = t.reduce(
                              (e, t) => e.concat(Object.keys(t)),
                              []
                            ),
                            o = new Set(i);
                          return t.every(
                            (e) => o.size === Object.keys(e).length
                          );
                        })(e, a)
                          ? (u = (0, o.A)(u, e))
                          : (u[n] = t({ sx: a, theme: l }));
                      }
                    else u = (0, o.A)(u, e(n, a, l, c));
                }),
                (0, s.vf)(r, u)
              );
            }
            return Array.isArray(a) ? a.map(u) : u(a);
          };
        }
        const c = l();
        c.filterProps = ["sx"];
        const u = c;
      },
      2374: (e, t, n) => {
        "use strict";
        t.A = void 0;
        var i = (function (e, t) {
            if (!t && e && e.__esModule) return e;
            if (null === e || ("object" != typeof e && "function" != typeof e))
              return { default: e };
            var n = a(t);
            if (n && n.has(e)) return n.get(e);
            var i = { __proto__: null },
              o = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (var s in e)
              if (
                "default" !== s &&
                Object.prototype.hasOwnProperty.call(e, s)
              ) {
                var r = o ? Object.getOwnPropertyDescriptor(e, s) : null;
                r && (r.get || r.set)
                  ? Object.defineProperty(i, s, r)
                  : (i[s] = e[s]);
              }
            return (i.default = e), n && n.set(e, i), i;
          })(n(5043)),
          o = n(2030);
        function a(e) {
          if ("function" != typeof WeakMap) return null;
          var t = new WeakMap(),
            n = new WeakMap();
          return (a = function (e) {
            return e ? n : t;
          })(e);
        }
        t.A = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null;
          const t = i.useContext(o.ThemeContext);
          return t && ((n = t), 0 !== Object.keys(n).length) ? t : e;
          var n;
        };
      },
      9386: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        const i = (e) => e,
          o = (() => {
            let e = i;
            return {
              configure(t) {
                e = t;
              },
              generate: (t) => e(t),
              reset() {
                e = i;
              },
            };
          })();
      },
      7598: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(7868);
        function o(e) {
          if ("string" !== typeof e) throw new Error((0, i.A)(7));
          return e.charAt(0).toUpperCase() + e.slice(1);
        }
      },
      7918: (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i.A });
        var i = n(7598);
      },
      1188: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => i });
        const i = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : Number.MIN_SAFE_INTEGER,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : Number.MAX_SAFE_INTEGER;
          return Math.max(t, Math.min(e, n));
        };
      },
      6531: (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i.A });
        var i = n(1188);
      },
      8610: (e, t, n) => {
        "use strict";
        function i(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : void 0;
          const i = {};
          return (
            Object.keys(e).forEach((o) => {
              i[o] = e[o]
                .reduce((e, i) => {
                  if (i) {
                    const o = t(i);
                    "" !== o && e.push(o), n && n[i] && e.push(n[i]);
                  }
                  return e;
                }, [])
                .join(" ");
            }),
            i
          );
        }
        n.d(t, { A: () => i });
      },
      2456: (e, t, n) => {
        "use strict";
        function i() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return t.reduce(
            (e, t) =>
              null == t
                ? e
                : function () {
                    for (
                      var n = arguments.length, i = new Array(n), o = 0;
                      o < n;
                      o++
                    )
                      i[o] = arguments[o];
                    e.apply(this, i), t.apply(this, i);
                  },
            () => {}
          );
        }
        n.d(t, { A: () => i });
      },
      9172: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => s, Q: () => o });
        var i = n(8168);
        function o(e) {
          if ("object" !== typeof e || null === e) return !1;
          const t = Object.getPrototypeOf(e);
          return (
            (null === t ||
              t === Object.prototype ||
              null === Object.getPrototypeOf(t)) &&
            !(Symbol.toStringTag in e) &&
            !(Symbol.iterator in e)
          );
        }
        function a(e) {
          if (!o(e)) return e;
          const t = {};
          return (
            Object.keys(e).forEach((n) => {
              t[n] = a(e[n]);
            }),
            t
          );
        }
        function s(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : { clone: !0 };
          const r = n.clone ? (0, i.A)({}, e) : e;
          return (
            o(e) &&
              o(t) &&
              Object.keys(t).forEach((i) => {
                o(t[i]) && Object.prototype.hasOwnProperty.call(e, i) && o(e[i])
                  ? (r[i] = s(e[i], t[i], n))
                  : n.clone
                  ? (r[i] = o(t[i]) ? a(t[i]) : t[i])
                  : (r[i] = t[i]);
              }),
            r
          );
        }
      },
      9482: (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i.A, isPlainObject: () => i.Q });
        var i = n(9172);
      },
      7868: (e, t, n) => {
        "use strict";
        function i(e) {
          let t = "https://mui.com/production-error/?code=" + e;
          for (let n = 1; n < arguments.length; n += 1)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified MUI error #" +
            e +
            "; visit " +
            t +
            " for the full message."
          );
        }
        n.d(t, { A: () => i });
      },
      457: (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i.A });
        var i = n(7868);
      },
      2372: (e, t, n) => {
        "use strict";
        n.d(t, { Ay: () => a });
        var i = n(9386);
        const o = {
          active: "active",
          checked: "checked",
          completed: "completed",
          disabled: "disabled",
          error: "error",
          expanded: "expanded",
          focused: "focused",
          focusVisible: "focusVisible",
          open: "open",
          readOnly: "readOnly",
          required: "required",
          selected: "selected",
        };
        function a(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : "Mui";
          const a = o[t];
          return a
            ? "".concat(n, "-").concat(a)
            : "".concat(i.A.generate(e), "-").concat(t);
        }
      },
      2532: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(2372);
        function o(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : "Mui";
          const o = {};
          return (
            t.forEach((t) => {
              o[t] = (0, i.Ay)(e, t, n);
            }),
            o
          );
        }
      },
      3382: (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => l, getFunctionName: () => a });
        var i = n(2086);
        const o = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
        function a(e) {
          const t = "".concat(e).match(o);
          return (t && t[1]) || "";
        }
        function s(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
          return e.displayName || e.name || a(e) || t;
        }
        function r(e, t, n) {
          const i = s(t);
          return (
            e.displayName || ("" !== i ? "".concat(n, "(").concat(i, ")") : n)
          );
        }
        function l(e) {
          if (null != e) {
            if ("string" === typeof e) return e;
            if ("function" === typeof e) return s(e, "Component");
            if ("object" === typeof e)
              switch (e.$$typeof) {
                case i.ForwardRef:
                  return r(e, e.render, "ForwardRef");
                case i.Memo:
                  return r(e, e.type, "memo");
                default:
                  return;
              }
          }
        }
      },
      1668: (e, t, n) => {
        "use strict";
        function i(e) {
          return (e && e.ownerDocument) || document;
        }
        n.d(t, { A: () => i });
      },
      3940: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(1668);
        function o(e) {
          return (0, i.A)(e).defaultView || window;
        }
      },
      3030: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(8168);
        function o(e, t) {
          const n = (0, i.A)({}, t);
          return (
            Object.keys(e).forEach((a) => {
              if (a.toString().match(/^(components|slots)$/))
                n[a] = (0, i.A)({}, e[a], n[a]);
              else if (a.toString().match(/^(componentsProps|slotProps)$/)) {
                const s = e[a] || {},
                  r = t[a];
                (n[a] = {}),
                  r && Object.keys(r)
                    ? s && Object.keys(s)
                      ? ((n[a] = (0, i.A)({}, r)),
                        Object.keys(s).forEach((e) => {
                          n[a][e] = o(s[e], r[e]);
                        }))
                      : (n[a] = r)
                    : (n[a] = s);
              } else void 0 === n[a] && (n[a] = e[a]);
            }),
            n
          );
        }
      },
      6564: (e, t, n) => {
        "use strict";
        function i(e, t) {
          "function" === typeof e ? e(t) : e && (e.current = t);
        }
        n.d(t, { A: () => i });
      },
      4440: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => o });
        var i = n(5043);
        const o =
          "undefined" !== typeof window ? i.useLayoutEffect : i.useEffect;
      },
      1782: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => a });
        var i = n(5043),
          o = n(4440);
        const a = function (e) {
          const t = i.useRef(e);
          return (
            (0, o.A)(() => {
              t.current = e;
            }),
            i.useRef(function () {
              return (0, t.current)(...arguments);
            }).current
          );
        };
      },
      3462: (e, t, n) => {
        "use strict";
        n.d(t, { A: () => a });
        var i = n(5043),
          o = n(6564);
        function a() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return i.useMemo(
            () =>
              t.every((e) => null == e)
                ? null
                : (e) => {
                    t.forEach((t) => {
                      (0, o.A)(t, e);
                    });
                  },
            t
          );
        }
      },
      9303: (e, t, n) => {
        "use strict";
        n.d(t, { E: () => s, A: () => r });
        var i = n(5043);
        const o = {};
        const a = [];
        class s {
          constructor() {
            (this.currentId = null),
              (this.clear = () => {
                null !== this.currentId &&
                  (clearTimeout(this.currentId), (this.currentId = null));
              }),
              (this.disposeEffect = () => this.clear);
          }
          static create() {
            return new s();
          }
          start(e, t) {
            this.clear(),
              (this.currentId = setTimeout(() => {
                (this.currentId = null), t();
              }, e));
          }
        }
        function r() {
          const e = (function (e, t) {
            const n = i.useRef(o);
            return n.current === o && (n.current = e(t)), n;
          })(s.create).current;
          var t;
          return (t = e.disposeEffect), i.useEffect(t, a), e;
        }
      },
      3606: (e, t, n) => {
        "use strict";
        var i;
        function o(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t &&
              (i = i.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, i);
          }
          return n;
        }
        function a(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? o(Object(n), !0).forEach(function (t) {
                  u(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : o(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function s(e) {
          return (
            (s =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            s(e)
          );
        }
        function r(e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        }
        function l(e, t) {
          for (var n = 0; n < t.length; n++) {
            var i = t[n];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              "value" in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function c(e, t, n) {
          return t && l(e.prototype, t), n && l(e, n), e;
        }
        function u(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function d(e, t) {
          if ("function" != typeof t && null !== t)
            throw new TypeError(
              "Super expression must either be null or a function"
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && p(e, t);
        }
        function h(e) {
          return (
            (h = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            h(e)
          );
        }
        function p(e, t) {
          return (
            (p =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            p(e, t)
          );
        }
        function f(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function g(e) {
          var t = (function () {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
              return (
                Boolean.prototype.valueOf.call(
                  Reflect.construct(Boolean, [], function () {})
                ),
                !0
              );
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              i = h(e);
            if (t) {
              var o = h(this).constructor;
              n = Reflect.construct(i, arguments, o);
            } else n = i.apply(this, arguments);
            return (function (e, t) {
              if (t && ("object" == typeof t || "function" == typeof t))
                return t;
              if (void 0 !== t)
                throw new TypeError(
                  "Derived constructors may only return object or undefined"
                );
              return f(e);
            })(this, n);
          };
        }
        function m(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n =
                null == e
                  ? null
                  : ("undefined" != typeof Symbol && e[Symbol.iterator]) ||
                    e["@@iterator"];
              if (null != n) {
                var i,
                  o,
                  a = [],
                  s = !0,
                  r = !1;
                try {
                  for (
                    n = n.call(e);
                    !(s = (i = n.next()).done) &&
                    (a.push(i.value), !t || a.length !== t);
                    s = !0
                  );
                } catch (e) {
                  (r = !0), (o = e);
                } finally {
                  try {
                    s || null == n.return || n.return();
                  } finally {
                    if (r) throw o;
                  }
                }
                return a;
              }
            })(e, t) ||
            b(e, t) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
        function v(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return x(e);
            })(e) ||
            (function (e) {
              if (
                ("undefined" != typeof Symbol && null != e[Symbol.iterator]) ||
                null != e["@@iterator"]
              )
                return Array.from(e);
            })(e) ||
            b(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
        function b(e, t) {
          if (e) {
            if ("string" == typeof e) return x(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              "Object" === n && e.constructor && (n = e.constructor.name),
              "Map" === n || "Set" === n
                ? Array.from(e)
                : "Arguments" === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? x(e, t)
                : void 0
            );
          }
        }
        function x(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
          return i;
        }
        var y = (function () {
            function e() {
              r(this, e);
            }
            return (
              c(
                e,
                [
                  {
                    key: "shadeRGBColor",
                    value: function (e, t) {
                      var n = t.split(","),
                        i = e < 0 ? 0 : 255,
                        o = e < 0 ? -1 * e : e,
                        a = parseInt(n[0].slice(4), 10),
                        s = parseInt(n[1], 10),
                        r = parseInt(n[2], 10);
                      return (
                        "rgb(" +
                        (Math.round((i - a) * o) + a) +
                        "," +
                        (Math.round((i - s) * o) + s) +
                        "," +
                        (Math.round((i - r) * o) + r) +
                        ")"
                      );
                    },
                  },
                  {
                    key: "shadeHexColor",
                    value: function (e, t) {
                      var n = parseInt(t.slice(1), 16),
                        i = e < 0 ? 0 : 255,
                        o = e < 0 ? -1 * e : e,
                        a = n >> 16,
                        s = (n >> 8) & 255,
                        r = 255 & n;
                      return (
                        "#" +
                        (
                          16777216 +
                          65536 * (Math.round((i - a) * o) + a) +
                          256 * (Math.round((i - s) * o) + s) +
                          (Math.round((i - r) * o) + r)
                        )
                          .toString(16)
                          .slice(1)
                      );
                    },
                  },
                  {
                    key: "shadeColor",
                    value: function (t, n) {
                      return e.isColorHex(n)
                        ? this.shadeHexColor(t, n)
                        : this.shadeRGBColor(t, n);
                    },
                  },
                ],
                [
                  {
                    key: "bind",
                    value: function (e, t) {
                      return function () {
                        return e.apply(t, arguments);
                      };
                    },
                  },
                  {
                    key: "isObject",
                    value: function (e) {
                      return (
                        e && "object" === s(e) && !Array.isArray(e) && null != e
                      );
                    },
                  },
                  {
                    key: "is",
                    value: function (e, t) {
                      return (
                        Object.prototype.toString.call(t) ===
                        "[object " + e + "]"
                      );
                    },
                  },
                  {
                    key: "listToArray",
                    value: function (e) {
                      var t,
                        n = [];
                      for (t = 0; t < e.length; t++) n[t] = e[t];
                      return n;
                    },
                  },
                  {
                    key: "extend",
                    value: function (e, t) {
                      var n = this;
                      "function" != typeof Object.assign &&
                        (Object.assign = function (e) {
                          if (null == e)
                            throw new TypeError(
                              "Cannot convert undefined or null to object"
                            );
                          for (
                            var t = Object(e), n = 1;
                            n < arguments.length;
                            n++
                          ) {
                            var i = arguments[n];
                            if (null != i)
                              for (var o in i)
                                i.hasOwnProperty(o) && (t[o] = i[o]);
                          }
                          return t;
                        });
                      var i = Object.assign({}, e);
                      return (
                        this.isObject(e) &&
                          this.isObject(t) &&
                          Object.keys(t).forEach(function (o) {
                            n.isObject(t[o]) && o in e
                              ? (i[o] = n.extend(e[o], t[o]))
                              : Object.assign(i, u({}, o, t[o]));
                          }),
                        i
                      );
                    },
                  },
                  {
                    key: "extendArray",
                    value: function (t, n) {
                      var i = [];
                      return (
                        t.map(function (t) {
                          i.push(e.extend(n, t));
                        }),
                        i
                      );
                    },
                  },
                  {
                    key: "monthMod",
                    value: function (e) {
                      return e % 12;
                    },
                  },
                  {
                    key: "clone",
                    value: function (t) {
                      if (e.is("Array", t)) {
                        for (var n = [], i = 0; i < t.length; i++)
                          n[i] = this.clone(t[i]);
                        return n;
                      }
                      if (e.is("Null", t)) return null;
                      if (e.is("Date", t)) return t;
                      if ("object" === s(t)) {
                        var o = {};
                        for (var a in t)
                          t.hasOwnProperty(a) && (o[a] = this.clone(t[a]));
                        return o;
                      }
                      return t;
                    },
                  },
                  {
                    key: "log10",
                    value: function (e) {
                      return Math.log(e) / Math.LN10;
                    },
                  },
                  {
                    key: "roundToBase10",
                    value: function (e) {
                      return Math.pow(10, Math.floor(Math.log10(e)));
                    },
                  },
                  {
                    key: "roundToBase",
                    value: function (e, t) {
                      return Math.pow(t, Math.floor(Math.log(e) / Math.log(t)));
                    },
                  },
                  {
                    key: "parseNumber",
                    value: function (e) {
                      return null === e ? e : parseFloat(e);
                    },
                  },
                  {
                    key: "stripNumber",
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 2;
                      return Number.isInteger(e)
                        ? e
                        : parseFloat(e.toPrecision(t));
                    },
                  },
                  {
                    key: "randomId",
                    value: function () {
                      return (Math.random() + 1).toString(36).substring(4);
                    },
                  },
                  {
                    key: "noExponents",
                    value: function (e) {
                      var t = String(e).split(/[eE]/);
                      if (1 === t.length) return t[0];
                      var n = "",
                        i = e < 0 ? "-" : "",
                        o = t[0].replace(".", ""),
                        a = Number(t[1]) + 1;
                      if (a < 0) {
                        for (n = i + "0."; a++; ) n += "0";
                        return n + o.replace(/^-/, "");
                      }
                      for (a -= o.length; a--; ) n += "0";
                      return o + n;
                    },
                  },
                  {
                    key: "getDimensions",
                    value: function (e) {
                      var t = getComputedStyle(e, null),
                        n = e.clientHeight,
                        i = e.clientWidth;
                      return (
                        (n -=
                          parseFloat(t.paddingTop) +
                          parseFloat(t.paddingBottom)),
                        [
                          (i -=
                            parseFloat(t.paddingLeft) +
                            parseFloat(t.paddingRight)),
                          n,
                        ]
                      );
                    },
                  },
                  {
                    key: "getBoundingClientRect",
                    value: function (e) {
                      var t = e.getBoundingClientRect();
                      return {
                        top: t.top,
                        right: t.right,
                        bottom: t.bottom,
                        left: t.left,
                        width: e.clientWidth,
                        height: e.clientHeight,
                        x: t.left,
                        y: t.top,
                      };
                    },
                  },
                  {
                    key: "getLargestStringFromArr",
                    value: function (e) {
                      return e.reduce(function (e, t) {
                        return (
                          Array.isArray(t) &&
                            (t = t.reduce(function (e, t) {
                              return e.length > t.length ? e : t;
                            })),
                          e.length > t.length ? e : t
                        );
                      }, 0);
                    },
                  },
                  {
                    key: "hexToRgba",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : "#999999",
                        t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0.6;
                      "#" !== e.substring(0, 1) && (e = "#999999");
                      var n = e.replace("#", "");
                      n = n.match(new RegExp("(.{" + n.length / 3 + "})", "g"));
                      for (var i = 0; i < n.length; i++)
                        n[i] = parseInt(
                          1 === n[i].length ? n[i] + n[i] : n[i],
                          16
                        );
                      return (
                        void 0 !== t && n.push(t), "rgba(" + n.join(",") + ")"
                      );
                    },
                  },
                  {
                    key: "getOpacityFromRGBA",
                    value: function (e) {
                      return parseFloat(e.replace(/^.*,(.+)\)/, "$1"));
                    },
                  },
                  {
                    key: "rgb2hex",
                    value: function (e) {
                      return (e = e.match(
                        /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i
                      )) && 4 === e.length
                        ? "#" +
                            ("0" + parseInt(e[1], 10).toString(16)).slice(-2) +
                            ("0" + parseInt(e[2], 10).toString(16)).slice(-2) +
                            ("0" + parseInt(e[3], 10).toString(16)).slice(-2)
                        : "";
                    },
                  },
                  {
                    key: "isColorHex",
                    value: function (e) {
                      return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                        e
                      );
                    },
                  },
                  {
                    key: "getPolygonPos",
                    value: function (e, t) {
                      for (
                        var n = [], i = (2 * Math.PI) / t, o = 0;
                        o < t;
                        o++
                      ) {
                        var a = {};
                        (a.x = e * Math.sin(o * i)),
                          (a.y = -e * Math.cos(o * i)),
                          n.push(a);
                      }
                      return n;
                    },
                  },
                  {
                    key: "polarToCartesian",
                    value: function (e, t, n, i) {
                      var o = ((i - 90) * Math.PI) / 180;
                      return { x: e + n * Math.cos(o), y: t + n * Math.sin(o) };
                    },
                  },
                  {
                    key: "escapeString",
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : "x",
                        n = e.toString().slice();
                      return n.replace(
                        /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                        t
                      );
                    },
                  },
                  {
                    key: "negToZero",
                    value: function (e) {
                      return e < 0 ? 0 : e;
                    },
                  },
                  {
                    key: "moveIndexInArray",
                    value: function (e, t, n) {
                      if (n >= e.length)
                        for (var i = n - e.length + 1; i--; ) e.push(void 0);
                      return e.splice(n, 0, e.splice(t, 1)[0]), e;
                    },
                  },
                  {
                    key: "extractNumber",
                    value: function (e) {
                      return parseFloat(e.replace(/[^\d.]*/g, ""));
                    },
                  },
                  {
                    key: "findAncestor",
                    value: function (e, t) {
                      for (
                        ;
                        (e = e.parentElement) && !e.classList.contains(t);

                      );
                      return e;
                    },
                  },
                  {
                    key: "setELstyles",
                    value: function (e, t) {
                      for (var n in t)
                        t.hasOwnProperty(n) && (e.style.key = t[n]);
                    },
                  },
                  {
                    key: "preciseAddition",
                    value: function (e, t) {
                      var n = (String(e).split(".")[1] || "").length,
                        i = (String(t).split(".")[1] || "").length,
                        o = Math.pow(10, Math.max(n, i));
                      return (Math.round(e * o) + Math.round(t * o)) / o;
                    },
                  },
                  {
                    key: "isNumber",
                    value: function (e) {
                      return (
                        !isNaN(e) &&
                        parseFloat(Number(e)) === e &&
                        !isNaN(parseInt(e, 10))
                      );
                    },
                  },
                  {
                    key: "isFloat",
                    value: function (e) {
                      return Number(e) === e && e % 1 != 0;
                    },
                  },
                  {
                    key: "isSafari",
                    value: function () {
                      return /^((?!chrome|android).)*safari/i.test(
                        navigator.userAgent
                      );
                    },
                  },
                  {
                    key: "isFirefox",
                    value: function () {
                      return (
                        navigator.userAgent.toLowerCase().indexOf("firefox") >
                        -1
                      );
                    },
                  },
                  {
                    key: "isIE11",
                    value: function () {
                      if (
                        -1 !== window.navigator.userAgent.indexOf("MSIE") ||
                        window.navigator.appVersion.indexOf("Trident/") > -1
                      )
                        return !0;
                    },
                  },
                  {
                    key: "isIE",
                    value: function () {
                      var e = window.navigator.userAgent,
                        t = e.indexOf("MSIE ");
                      if (t > 0)
                        return parseInt(
                          e.substring(t + 5, e.indexOf(".", t)),
                          10
                        );
                      if (e.indexOf("Trident/") > 0) {
                        var n = e.indexOf("rv:");
                        return parseInt(
                          e.substring(n + 3, e.indexOf(".", n)),
                          10
                        );
                      }
                      var i = e.indexOf("Edge/");
                      return (
                        i > 0 &&
                        parseInt(e.substring(i + 5, e.indexOf(".", i)), 10)
                      );
                    },
                  },
                  {
                    key: "getGCD",
                    value: function (e, t) {
                      var n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : 7,
                        i = Math.pow(
                          10,
                          n - Math.floor(Math.log10(Math.max(e, t)))
                        );
                      for (
                        e = Math.round(Math.abs(e) * i),
                          t = Math.round(Math.abs(t) * i);
                        t;

                      ) {
                        var o = t;
                        (t = e % t), (e = o);
                      }
                      return e / i;
                    },
                  },
                  {
                    key: "getPrimeFactors",
                    value: function (e) {
                      for (var t = [], n = 2; e >= 2; )
                        e % n == 0 ? (t.push(n), (e /= n)) : n++;
                      return t;
                    },
                  },
                  {
                    key: "mod",
                    value: function (e, t) {
                      var n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : 7,
                        i = Math.pow(
                          10,
                          n - Math.floor(Math.log10(Math.max(e, t)))
                        );
                      return (
                        ((e = Math.round(Math.abs(e) * i)) %
                          (t = Math.round(Math.abs(t) * i))) /
                        i
                      );
                    },
                  },
                ]
              ),
              e
            );
          })(),
          w = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                this.setEasingFunctions();
            }
            return (
              c(e, [
                {
                  key: "setEasingFunctions",
                  value: function () {
                    var e;
                    if (!this.w.globals.easing) {
                      switch (this.w.config.chart.animations.easing) {
                        case "linear":
                          e = "-";
                          break;
                        case "easein":
                          e = "<";
                          break;
                        case "easeout":
                          e = ">";
                          break;
                        case "easeinout":
                        default:
                          e = "<>";
                          break;
                        case "swing":
                          e = function (e) {
                            var t = 1.70158;
                            return (e -= 1) * e * ((t + 1) * e + t) + 1;
                          };
                          break;
                        case "bounce":
                          e = function (e) {
                            return e < 1 / 2.75
                              ? 7.5625 * e * e
                              : e < 2 / 2.75
                              ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75
                              : e < 2.5 / 2.75
                              ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
                              : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375;
                          };
                          break;
                        case "elastic":
                          e = function (e) {
                            return e === !!e
                              ? e
                              : Math.pow(2, -10 * e) *
                                  Math.sin(
                                    ((e - 0.075) * (2 * Math.PI)) / 0.3
                                  ) +
                                  1;
                          };
                      }
                      this.w.globals.easing = e;
                    }
                  },
                },
                {
                  key: "animateLine",
                  value: function (e, t, n, i) {
                    e.attr(t).animate(i).attr(n);
                  },
                },
                {
                  key: "animateMarker",
                  value: function (e, t, n, i) {
                    e.attr({ opacity: 0 })
                      .animate(t, n)
                      .attr({ opacity: 1 })
                      .afterAll(function () {
                        i();
                      });
                  },
                },
                {
                  key: "animateRect",
                  value: function (e, t, n, i, o) {
                    e.attr(t)
                      .animate(i)
                      .attr(n)
                      .afterAll(function () {
                        return o();
                      });
                  },
                },
                {
                  key: "animatePathsGradually",
                  value: function (e) {
                    var t = e.el,
                      n = e.realIndex,
                      i = e.j,
                      o = e.fill,
                      a = e.pathFrom,
                      s = e.pathTo,
                      r = e.speed,
                      l = e.delay,
                      c = this.w,
                      u = 0;
                    c.config.chart.animations.animateGradually.enabled &&
                      (u = c.config.chart.animations.animateGradually.delay),
                      c.config.chart.animations.dynamicAnimation.enabled &&
                        c.globals.dataChanged &&
                        "bar" !== c.config.chart.type &&
                        (u = 0),
                      this.morphSVG(
                        t,
                        n,
                        i,
                        "line" !== c.config.chart.type || c.globals.comboCharts
                          ? o
                          : "stroke",
                        a,
                        s,
                        r,
                        l * u
                      );
                  },
                },
                {
                  key: "showDelayedElements",
                  value: function () {
                    this.w.globals.delayedElements.forEach(function (e) {
                      var t = e.el;
                      t.classList.remove("apexcharts-element-hidden"),
                        t.classList.add("apexcharts-hidden-element-shown");
                    });
                  },
                },
                {
                  key: "animationCompleted",
                  value: function (e) {
                    var t = this.w;
                    t.globals.animationEnded ||
                      ((t.globals.animationEnded = !0),
                      this.showDelayedElements(),
                      "function" == typeof t.config.chart.events.animationEnd &&
                        t.config.chart.events.animationEnd(this.ctx, {
                          el: e,
                          w: t,
                        }));
                  },
                },
                {
                  key: "morphSVG",
                  value: function (e, t, n, i, o, a, s, r) {
                    var l = this,
                      c = this.w;
                    o || (o = e.attr("pathFrom")), a || (a = e.attr("pathTo"));
                    var u = function (e) {
                      return (
                        "radar" === c.config.chart.type && (s = 1),
                        "M 0 ".concat(c.globals.gridHeight)
                      );
                    };
                    (!o ||
                      o.indexOf("undefined") > -1 ||
                      o.indexOf("NaN") > -1) &&
                      (o = u()),
                      (!a ||
                        a.indexOf("undefined") > -1 ||
                        a.indexOf("NaN") > -1) &&
                        (a = u()),
                      c.globals.shouldAnimate || (s = 1),
                      e
                        .plot(o)
                        .animate(1, c.globals.easing, r)
                        .plot(o)
                        .animate(s, c.globals.easing, r)
                        .plot(a)
                        .afterAll(function () {
                          y.isNumber(n)
                            ? n ===
                                c.globals.series[c.globals.maxValsInArrayIndex]
                                  .length -
                                  2 &&
                              c.globals.shouldAnimate &&
                              l.animationCompleted(e)
                            : "none" !== i &&
                              c.globals.shouldAnimate &&
                              ((!c.globals.comboCharts &&
                                t === c.globals.series.length - 1) ||
                                c.globals.comboCharts) &&
                              l.animationCompleted(e),
                            l.showDelayedElements();
                        });
                  },
                },
              ]),
              e
            );
          })(),
          S = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "getDefaultFilter",
                  value: function (e, t) {
                    var n = this.w;
                    e.unfilter(!0),
                      new window.SVG.Filter().size(
                        "120%",
                        "180%",
                        "-5%",
                        "-40%"
                      ),
                      "none" !== n.config.states.normal.filter
                        ? this.applyFilter(
                            e,
                            t,
                            n.config.states.normal.filter.type,
                            n.config.states.normal.filter.value
                          )
                        : n.config.chart.dropShadow.enabled &&
                          this.dropShadow(e, n.config.chart.dropShadow, t);
                  },
                },
                {
                  key: "addNormalFilter",
                  value: function (e, t) {
                    var n = this.w;
                    n.config.chart.dropShadow.enabled &&
                      !e.node.classList.contains("apexcharts-marker") &&
                      this.dropShadow(e, n.config.chart.dropShadow, t);
                  },
                },
                {
                  key: "addLightenFilter",
                  value: function (e, t, n) {
                    var i = this,
                      o = this.w,
                      a = n.intensity;
                    e.unfilter(!0),
                      new window.SVG.Filter(),
                      e.filter(function (e) {
                        var n = o.config.chart.dropShadow;
                        (n.enabled
                          ? i.addShadow(e, t, n)
                          : e
                        ).componentTransfer({
                          rgb: { type: "linear", slope: 1.5, intercept: a },
                        });
                      }),
                      e.filterer.node.setAttribute(
                        "filterUnits",
                        "userSpaceOnUse"
                      ),
                      this._scaleFilterSize(e.filterer.node);
                  },
                },
                {
                  key: "addDarkenFilter",
                  value: function (e, t, n) {
                    var i = this,
                      o = this.w,
                      a = n.intensity;
                    e.unfilter(!0),
                      new window.SVG.Filter(),
                      e.filter(function (e) {
                        var n = o.config.chart.dropShadow;
                        (n.enabled
                          ? i.addShadow(e, t, n)
                          : e
                        ).componentTransfer({
                          rgb: { type: "linear", slope: a },
                        });
                      }),
                      e.filterer.node.setAttribute(
                        "filterUnits",
                        "userSpaceOnUse"
                      ),
                      this._scaleFilterSize(e.filterer.node);
                  },
                },
                {
                  key: "applyFilter",
                  value: function (e, t, n) {
                    var i =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : 0.5;
                    switch (n) {
                      case "none":
                        this.addNormalFilter(e, t);
                        break;
                      case "lighten":
                        this.addLightenFilter(e, t, { intensity: i });
                        break;
                      case "darken":
                        this.addDarkenFilter(e, t, { intensity: i });
                    }
                  },
                },
                {
                  key: "addShadow",
                  value: function (e, t, n) {
                    var i,
                      o = this.w,
                      a = n.blur,
                      s = n.top,
                      r = n.left,
                      l = n.color,
                      c = n.opacity;
                    if (
                      (null ===
                        (i = o.config.chart.dropShadow.enabledOnSeries) ||
                      void 0 === i
                        ? void 0
                        : i.length) > 0 &&
                      -1 ===
                        o.config.chart.dropShadow.enabledOnSeries.indexOf(t)
                    )
                      return e;
                    var u = e
                      .flood(Array.isArray(l) ? l[t] : l, c)
                      .composite(e.sourceAlpha, "in")
                      .offset(r, s)
                      .gaussianBlur(a)
                      .merge(e.source);
                    return e.blend(e.source, u);
                  },
                },
                {
                  key: "dropShadow",
                  value: function (e, t) {
                    var n,
                      i,
                      o =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 0,
                      a = t.top,
                      s = t.left,
                      r = t.blur,
                      l = t.color,
                      c = t.opacity,
                      u = t.noUserSpaceOnUse,
                      d = this.w;
                    return (
                      e.unfilter(!0),
                      (y.isIE() && "radialBar" === d.config.chart.type) ||
                        ((null ===
                          (n = d.config.chart.dropShadow.enabledOnSeries) ||
                        void 0 === n
                          ? void 0
                          : n.length) > 0 &&
                          -1 ===
                            (null ===
                              (i = d.config.chart.dropShadow.enabledOnSeries) ||
                            void 0 === i
                              ? void 0
                              : i.indexOf(o))) ||
                        ((l = Array.isArray(l) ? l[o] : l),
                        e.filter(function (e) {
                          var t;
                          (t =
                            y.isSafari() || y.isFirefox() || y.isIE()
                              ? e
                                  .flood(l, c)
                                  .composite(e.sourceAlpha, "in")
                                  .offset(s, a)
                                  .gaussianBlur(r)
                              : e
                                  .flood(l, c)
                                  .composite(e.sourceAlpha, "in")
                                  .offset(s, a)
                                  .gaussianBlur(r)
                                  .merge(e.source)),
                            e.blend(e.source, t);
                        }),
                        u ||
                          e.filterer.node.setAttribute(
                            "filterUnits",
                            "userSpaceOnUse"
                          ),
                        this._scaleFilterSize(e.filterer.node)),
                      e
                    );
                  },
                },
                {
                  key: "setSelectionFilter",
                  value: function (e, t, n) {
                    var i = this.w;
                    if (
                      void 0 !== i.globals.selectedDataPoints[t] &&
                      i.globals.selectedDataPoints[t].indexOf(n) > -1
                    ) {
                      e.node.setAttribute("selected", !0);
                      var o = i.config.states.active.filter;
                      "none" !== o && this.applyFilter(e, t, o.type, o.value);
                    }
                  },
                },
                {
                  key: "_scaleFilterSize",
                  value: function (e) {
                    !(function (t) {
                      for (var n in t)
                        t.hasOwnProperty(n) && e.setAttribute(n, t[n]);
                    })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
                  },
                },
              ]),
              e
            );
          })(),
          k = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(
                e,
                [
                  {
                    key: "roundPathCorners",
                    value: function (e, t) {
                      function n(e, t, n) {
                        var o = t.x - e.x,
                          a = t.y - e.y,
                          s = Math.sqrt(o * o + a * a);
                        return i(e, t, Math.min(1, n / s));
                      }
                      function i(e, t, n) {
                        return {
                          x: e.x + (t.x - e.x) * n,
                          y: e.y + (t.y - e.y) * n,
                        };
                      }
                      function o(e, t) {
                        e.length > 2 &&
                          ((e[e.length - 2] = t.x), (e[e.length - 1] = t.y));
                      }
                      function a(e) {
                        return {
                          x: parseFloat(e[e.length - 2]),
                          y: parseFloat(e[e.length - 1]),
                        };
                      }
                      e.indexOf("NaN") > -1 && (e = "");
                      var s = e
                          .split(/[,\s]/)
                          .reduce(function (e, t) {
                            var n = t.match("([a-zA-Z])(.+)");
                            return (
                              n ? (e.push(n[1]), e.push(n[2])) : e.push(t), e
                            );
                          }, [])
                          .reduce(function (e, t) {
                            return (
                              parseFloat(t) == t && e.length
                                ? e[e.length - 1].push(t)
                                : e.push([t]),
                              e
                            );
                          }, []),
                        r = [];
                      if (s.length > 1) {
                        var l = a(s[0]),
                          c = null;
                        "Z" == s[s.length - 1][0] &&
                          s[0].length > 2 &&
                          ((c = ["L", l.x, l.y]), (s[s.length - 1] = c)),
                          r.push(s[0]);
                        for (var u = 1; u < s.length; u++) {
                          var d = r[r.length - 1],
                            h = s[u],
                            p = h == c ? s[1] : s[u + 1];
                          if (
                            p &&
                            d &&
                            d.length > 2 &&
                            "L" == h[0] &&
                            p.length > 2 &&
                            "L" == p[0]
                          ) {
                            var f,
                              g,
                              m = a(d),
                              v = a(h),
                              b = a(p);
                            (f = n(v, m, t)),
                              (g = n(v, b, t)),
                              o(h, f),
                              (h.origPoint = v),
                              r.push(h);
                            var x = i(f, v, 0.5),
                              y = i(v, g, 0.5),
                              w = ["C", x.x, x.y, y.x, y.y, g.x, g.y];
                            (w.origPoint = v), r.push(w);
                          } else r.push(h);
                        }
                        if (c) {
                          var S = a(r[r.length - 1]);
                          r.push(["Z"]), o(r[0], S);
                        }
                      } else r = s;
                      return r.reduce(function (e, t) {
                        return e + t.join(" ") + " ";
                      }, "");
                    },
                  },
                  {
                    key: "drawLine",
                    value: function (e, t, n, i) {
                      var o =
                          arguments.length > 4 && void 0 !== arguments[4]
                            ? arguments[4]
                            : "#a8a8a8",
                        a =
                          arguments.length > 5 && void 0 !== arguments[5]
                            ? arguments[5]
                            : 0,
                        s =
                          arguments.length > 6 && void 0 !== arguments[6]
                            ? arguments[6]
                            : null,
                        r =
                          arguments.length > 7 && void 0 !== arguments[7]
                            ? arguments[7]
                            : "butt";
                      return this.w.globals.dom.Paper.line().attr({
                        x1: e,
                        y1: t,
                        x2: n,
                        y2: i,
                        stroke: o,
                        "stroke-dasharray": a,
                        "stroke-width": s,
                        "stroke-linecap": r,
                      });
                    },
                  },
                  {
                    key: "drawRect",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : 0,
                        t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : 0,
                        i =
                          arguments.length > 3 && void 0 !== arguments[3]
                            ? arguments[3]
                            : 0,
                        o =
                          arguments.length > 4 && void 0 !== arguments[4]
                            ? arguments[4]
                            : 0,
                        a =
                          arguments.length > 5 && void 0 !== arguments[5]
                            ? arguments[5]
                            : "#fefefe",
                        s =
                          arguments.length > 6 && void 0 !== arguments[6]
                            ? arguments[6]
                            : 1,
                        r =
                          arguments.length > 7 && void 0 !== arguments[7]
                            ? arguments[7]
                            : null,
                        l =
                          arguments.length > 8 && void 0 !== arguments[8]
                            ? arguments[8]
                            : null,
                        c =
                          arguments.length > 9 && void 0 !== arguments[9]
                            ? arguments[9]
                            : 0,
                        u = this.w.globals.dom.Paper.rect();
                      return (
                        u.attr({
                          x: e,
                          y: t,
                          width: n > 0 ? n : 0,
                          height: i > 0 ? i : 0,
                          rx: o,
                          ry: o,
                          opacity: s,
                          "stroke-width": null !== r ? r : 0,
                          stroke: null !== l ? l : "none",
                          "stroke-dasharray": c,
                        }),
                        u.node.setAttribute("fill", a),
                        u
                      );
                    },
                  },
                  {
                    key: "drawPolygon",
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : "#e1e1e1",
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : 1,
                        i =
                          arguments.length > 3 && void 0 !== arguments[3]
                            ? arguments[3]
                            : "none";
                      return this.w.globals.dom.Paper.polygon(e).attr({
                        fill: i,
                        stroke: t,
                        "stroke-width": n,
                      });
                    },
                  },
                  {
                    key: "drawCircle",
                    value: function (e) {
                      var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : null;
                      e < 0 && (e = 0);
                      var n = this.w.globals.dom.Paper.circle(2 * e);
                      return null !== t && n.attr(t), n;
                    },
                  },
                  {
                    key: "drawPath",
                    value: function (e) {
                      var t = e.d,
                        n = void 0 === t ? "" : t,
                        i = e.stroke,
                        o = void 0 === i ? "#a8a8a8" : i,
                        a = e.strokeWidth,
                        s = void 0 === a ? 1 : a,
                        r = e.fill,
                        l = e.fillOpacity,
                        c = void 0 === l ? 1 : l,
                        u = e.strokeOpacity,
                        d = void 0 === u ? 1 : u,
                        h = e.classes,
                        p = e.strokeLinecap,
                        f = void 0 === p ? null : p,
                        g = e.strokeDashArray,
                        m = void 0 === g ? 0 : g,
                        v = this.w;
                      return (
                        null === f && (f = v.config.stroke.lineCap),
                        (n.indexOf("undefined") > -1 ||
                          n.indexOf("NaN") > -1) &&
                          (n = "M 0 ".concat(v.globals.gridHeight)),
                        v.globals.dom.Paper.path(n).attr({
                          fill: r,
                          "fill-opacity": c,
                          stroke: o,
                          "stroke-opacity": d,
                          "stroke-linecap": f,
                          "stroke-width": s,
                          "stroke-dasharray": m,
                          class: h,
                        })
                      );
                    },
                  },
                  {
                    key: "group",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : null,
                        t = this.w.globals.dom.Paper.group();
                      return null !== e && t.attr(e), t;
                    },
                  },
                  {
                    key: "move",
                    value: function (e, t) {
                      return ["M", e, t].join(" ");
                    },
                  },
                  {
                    key: "line",
                    value: function (e, t) {
                      var n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : null,
                        i = null;
                      return (
                        null === n
                          ? (i = [" L", e, t].join(" "))
                          : "H" === n
                          ? (i = [" H", e].join(" "))
                          : "V" === n && (i = [" V", t].join(" ")),
                        i
                      );
                    },
                  },
                  {
                    key: "curve",
                    value: function (e, t, n, i, o, a) {
                      return ["C", e, t, n, i, o, a].join(" ");
                    },
                  },
                  {
                    key: "quadraticCurve",
                    value: function (e, t, n, i) {
                      return ["Q", e, t, n, i].join(" ");
                    },
                  },
                  {
                    key: "arc",
                    value: function (e, t, n, i, o, a, s) {
                      var r = "A";
                      return (
                        arguments.length > 7 &&
                          void 0 !== arguments[7] &&
                          arguments[7] &&
                          (r = "a"),
                        [r, e, t, n, i, o, a, s].join(" ")
                      );
                    },
                  },
                  {
                    key: "renderPaths",
                    value: function (e) {
                      var t,
                        n = e.j,
                        i = e.realIndex,
                        o = e.pathFrom,
                        s = e.pathTo,
                        r = e.stroke,
                        l = e.strokeWidth,
                        c = e.strokeLinecap,
                        u = e.fill,
                        d = e.animationDelay,
                        h = e.initialSpeed,
                        p = e.dataChangeSpeed,
                        f = e.className,
                        g = e.shouldClipToGrid,
                        m = void 0 === g || g,
                        v = e.bindEventsOnPaths,
                        b = void 0 === v || v,
                        x = e.drawShadow,
                        y = void 0 === x || x,
                        k = this.w,
                        A = new S(this.ctx),
                        C = new w(this.ctx),
                        M = this.w.config.chart.animations.enabled,
                        P =
                          M &&
                          this.w.config.chart.animations.dynamicAnimation
                            .enabled,
                        E = !!(
                          (M && !k.globals.resized) ||
                          (P &&
                            k.globals.dataChanged &&
                            k.globals.shouldAnimate)
                        );
                      E ? (t = o) : ((t = s), (k.globals.animationEnded = !0));
                      var L,
                        T = k.config.stroke.dashArray;
                      L = Array.isArray(T) ? T[i] : k.config.stroke.dashArray;
                      var O = this.drawPath({
                        d: t,
                        stroke: r,
                        strokeWidth: l,
                        fill: u,
                        fillOpacity: 1,
                        classes: f,
                        strokeLinecap: c,
                        strokeDashArray: L,
                      });
                      if (
                        (O.attr("index", i),
                        m &&
                          O.attr({
                            "clip-path": "url(#gridRectMask".concat(
                              k.globals.cuid,
                              ")"
                            ),
                          }),
                        "none" !== k.config.states.normal.filter.type)
                      )
                        A.getDefaultFilter(O, i);
                      else if (k.config.chart.dropShadow.enabled && y) {
                        var R = k.config.chart.dropShadow;
                        A.dropShadow(O, R, i);
                      }
                      b &&
                        (O.node.addEventListener(
                          "mouseenter",
                          this.pathMouseEnter.bind(this, O)
                        ),
                        O.node.addEventListener(
                          "mouseleave",
                          this.pathMouseLeave.bind(this, O)
                        ),
                        O.node.addEventListener(
                          "mousedown",
                          this.pathMouseDown.bind(this, O)
                        )),
                        O.attr({ pathTo: s, pathFrom: o });
                      var I = {
                        el: O,
                        j: n,
                        realIndex: i,
                        pathFrom: o,
                        pathTo: s,
                        fill: u,
                        strokeWidth: l,
                        delay: d,
                      };
                      return (
                        !M || k.globals.resized || k.globals.dataChanged
                          ? (!k.globals.resized && k.globals.dataChanged) ||
                            C.showDelayedElements()
                          : C.animatePathsGradually(
                              a(a({}, I), {}, { speed: h })
                            ),
                        k.globals.dataChanged &&
                          P &&
                          E &&
                          C.animatePathsGradually(
                            a(a({}, I), {}, { speed: p })
                          ),
                        O
                      );
                    },
                  },
                  {
                    key: "drawPattern",
                    value: function (e, t, n) {
                      var i =
                          arguments.length > 3 && void 0 !== arguments[3]
                            ? arguments[3]
                            : "#a8a8a8",
                        o =
                          arguments.length > 4 && void 0 !== arguments[4]
                            ? arguments[4]
                            : 0;
                      return this.w.globals.dom.Paper.pattern(
                        t,
                        n,
                        function (a) {
                          "horizontalLines" === e
                            ? a
                                .line(0, 0, n, 0)
                                .stroke({ color: i, width: o + 1 })
                            : "verticalLines" === e
                            ? a
                                .line(0, 0, 0, t)
                                .stroke({ color: i, width: o + 1 })
                            : "slantedLines" === e
                            ? a.line(0, 0, t, n).stroke({ color: i, width: o })
                            : "squares" === e
                            ? a
                                .rect(t, n)
                                .fill("none")
                                .stroke({ color: i, width: o })
                            : "circles" === e &&
                              a
                                .circle(t)
                                .fill("none")
                                .stroke({ color: i, width: o });
                        }
                      );
                    },
                  },
                  {
                    key: "drawGradient",
                    value: function (e, t, n, i, o) {
                      var a,
                        s =
                          arguments.length > 5 && void 0 !== arguments[5]
                            ? arguments[5]
                            : null,
                        r =
                          arguments.length > 6 && void 0 !== arguments[6]
                            ? arguments[6]
                            : null,
                        l =
                          arguments.length > 7 && void 0 !== arguments[7]
                            ? arguments[7]
                            : null,
                        c =
                          arguments.length > 8 && void 0 !== arguments[8]
                            ? arguments[8]
                            : 0,
                        u = this.w;
                      t.length < 9 &&
                        0 === t.indexOf("#") &&
                        (t = y.hexToRgba(t, i)),
                        n.length < 9 &&
                          0 === n.indexOf("#") &&
                          (n = y.hexToRgba(n, o));
                      var d = 0,
                        h = 1,
                        p = 1,
                        f = null;
                      null !== r &&
                        ((d = void 0 !== r[0] ? r[0] / 100 : 0),
                        (h = void 0 !== r[1] ? r[1] / 100 : 1),
                        (p = void 0 !== r[2] ? r[2] / 100 : 1),
                        (f = void 0 !== r[3] ? r[3] / 100 : null));
                      var g = !(
                        "donut" !== u.config.chart.type &&
                        "pie" !== u.config.chart.type &&
                        "polarArea" !== u.config.chart.type &&
                        "bubble" !== u.config.chart.type
                      );
                      if (
                        ((a =
                          null === l || 0 === l.length
                            ? u.globals.dom.Paper.gradient(
                                g ? "radial" : "linear",
                                function (e) {
                                  e.at(d, t, i),
                                    e.at(h, n, o),
                                    e.at(p, n, o),
                                    null !== f && e.at(f, t, i);
                                }
                              )
                            : u.globals.dom.Paper.gradient(
                                g ? "radial" : "linear",
                                function (e) {
                                  (Array.isArray(l[c]) ? l[c] : l).forEach(
                                    function (t) {
                                      e.at(t.offset / 100, t.color, t.opacity);
                                    }
                                  );
                                }
                              )),
                        g)
                      ) {
                        var m = u.globals.gridWidth / 2,
                          v = u.globals.gridHeight / 2;
                        "bubble" !== u.config.chart.type
                          ? a.attr({
                              gradientUnits: "userSpaceOnUse",
                              cx: m,
                              cy: v,
                              r: s,
                            })
                          : a.attr({
                              cx: 0.5,
                              cy: 0.5,
                              r: 0.8,
                              fx: 0.2,
                              fy: 0.2,
                            });
                      } else
                        "vertical" === e
                          ? a.from(0, 0).to(0, 1)
                          : "diagonal" === e
                          ? a.from(0, 0).to(1, 1)
                          : "horizontal" === e
                          ? a.from(0, 1).to(1, 1)
                          : "diagonal2" === e && a.from(1, 0).to(0, 1);
                      return a;
                    },
                  },
                  {
                    key: "getTextBasedOnMaxWidth",
                    value: function (e) {
                      var t = e.text,
                        n = e.maxWidth,
                        i = e.fontSize,
                        o = e.fontFamily,
                        a = this.getTextRects(t, i, o),
                        s = a.width / t.length,
                        r = Math.floor(n / s);
                      return n < a.width ? t.slice(0, r - 3) + "..." : t;
                    },
                  },
                  {
                    key: "drawText",
                    value: function (e) {
                      var t = this,
                        n = e.x,
                        i = e.y,
                        o = e.text,
                        s = e.textAnchor,
                        r = e.fontSize,
                        l = e.fontFamily,
                        c = e.fontWeight,
                        u = e.foreColor,
                        d = e.opacity,
                        h = e.maxWidth,
                        p = e.cssClass,
                        f = void 0 === p ? "" : p,
                        g = e.isPlainText,
                        m = void 0 === g || g,
                        v = e.dominantBaseline,
                        b = void 0 === v ? "auto" : v,
                        x = this.w;
                      void 0 === o && (o = "");
                      var y = o;
                      s || (s = "start"),
                        (u && u.length) || (u = x.config.chart.foreColor),
                        (l = l || x.config.chart.fontFamily),
                        (c = c || "regular");
                      var w,
                        S = {
                          maxWidth: h,
                          fontSize: (r = r || "11px"),
                          fontFamily: l,
                        };
                      return (
                        Array.isArray(o)
                          ? (w = x.globals.dom.Paper.text(function (e) {
                              for (var n = 0; n < o.length; n++)
                                (y = o[n]),
                                  h &&
                                    (y = t.getTextBasedOnMaxWidth(
                                      a({ text: o[n] }, S)
                                    )),
                                  0 === n ? e.tspan(y) : e.tspan(y).newLine();
                            }))
                          : (h &&
                              (y = this.getTextBasedOnMaxWidth(
                                a({ text: o }, S)
                              )),
                            (w = m
                              ? x.globals.dom.Paper.plain(o)
                              : x.globals.dom.Paper.text(function (e) {
                                  return e.tspan(y);
                                }))),
                        w.attr({
                          x: n,
                          y: i,
                          "text-anchor": s,
                          "dominant-baseline": b,
                          "font-size": r,
                          "font-family": l,
                          "font-weight": c,
                          fill: u,
                          class: "apexcharts-text " + f,
                        }),
                        (w.node.style.fontFamily = l),
                        (w.node.style.opacity = d),
                        w
                      );
                    },
                  },
                  {
                    key: "getMarkerPath",
                    value: function (e, t, n, i) {
                      var o = "";
                      switch (n) {
                        case "cross":
                          o = "M "
                            .concat(e - (i /= 1.4), " ")
                            .concat(t - i, " L ")
                            .concat(e + i, " ")
                            .concat(t + i, "  M ")
                            .concat(e - i, " ")
                            .concat(t + i, " L ")
                            .concat(e + i, " ")
                            .concat(t - i);
                          break;
                        case "plus":
                          o = "M "
                            .concat(e - (i /= 1.12), " ")
                            .concat(t, " L ")
                            .concat(e + i, " ")
                            .concat(t, "  M ")
                            .concat(e, " ")
                            .concat(t - i, " L ")
                            .concat(e, " ")
                            .concat(t + i);
                          break;
                        case "star":
                        case "sparkle":
                          var a = 5;
                          (i *= 1.15), "sparkle" === n && ((i /= 1.1), (a = 4));
                          for (var s = Math.PI / a, r = 0; r <= 2 * a; r++) {
                            var l = r * s,
                              c = r % 2 == 0 ? i : i / 2;
                            o +=
                              (0 === r ? "M" : "L") +
                              (e + c * Math.sin(l)) +
                              "," +
                              (t - c * Math.cos(l));
                          }
                          o += "Z";
                          break;
                        case "triangle":
                          o = "M "
                            .concat(e, " ")
                            .concat(t - i, " \n             L ")
                            .concat(e + i, " ")
                            .concat(t + i, " \n             L ")
                            .concat(e - i, " ")
                            .concat(t + i, " \n             Z");
                          break;
                        case "square":
                        case "rect":
                          o = "M "
                            .concat(e - (i /= 1.125), " ")
                            .concat(t - i, " \n           L ")
                            .concat(e + i, " ")
                            .concat(t - i, " \n           L ")
                            .concat(e + i, " ")
                            .concat(t + i, " \n           L ")
                            .concat(e - i, " ")
                            .concat(t + i, " \n           Z");
                          break;
                        case "diamond":
                          (i *= 1.05),
                            (o = "M "
                              .concat(e, " ")
                              .concat(t - i, " \n             L ")
                              .concat(e + i, " ")
                              .concat(t, " \n             L ")
                              .concat(e, " ")
                              .concat(t + i, " \n             L ")
                              .concat(e - i, " ")
                              .concat(t, " \n            Z"));
                          break;
                        case "line":
                          o = "M "
                            .concat(e - (i /= 1.1), " ")
                            .concat(t, " \n           L ")
                            .concat(e + i, " ")
                            .concat(t);
                          break;
                        default:
                          (i *= 2),
                            (o = "M "
                              .concat(e, ", ")
                              .concat(t, " \n           m -")
                              .concat(i / 2, ", 0 \n           a ")
                              .concat(i / 2, ",")
                              .concat(i / 2, " 0 1,0 ")
                              .concat(i, ",0 \n           a ")
                              .concat(i / 2, ",")
                              .concat(i / 2, " 0 1,0 -")
                              .concat(i, ",0"));
                      }
                      return o;
                    },
                  },
                  {
                    key: "drawMarkerShape",
                    value: function (e, t, n, i, o) {
                      var a = this.drawPath({
                        d: this.getMarkerPath(e, t, n, i, o),
                        stroke: o.pointStrokeColor,
                        strokeDashArray: o.pointStrokeDashArray,
                        strokeWidth: o.pointStrokeWidth,
                        fill: o.pointFillColor,
                        fillOpacity: o.pointFillOpacity,
                        strokeOpacity: o.pointStrokeOpacity,
                      });
                      return (
                        a.attr({
                          cx: e,
                          cy: t,
                          shape: o.shape,
                          class: o.class ? o.class : "",
                        }),
                        a
                      );
                    },
                  },
                  {
                    key: "drawMarker",
                    value: function (e, t, n) {
                      e = e || 0;
                      var i = n.pSize || 0;
                      return (
                        y.isNumber(t) || ((i = 0), (t = 0)),
                        this.drawMarkerShape(
                          e,
                          t,
                          null == n ? void 0 : n.shape,
                          i,
                          a(
                            a({}, n),
                            "line" === n.shape ||
                              "plus" === n.shape ||
                              "cross" === n.shape
                              ? {
                                  pointStrokeColor: n.pointFillColor,
                                  pointStrokeOpacity: n.pointFillOpacity,
                                }
                              : {}
                          )
                        )
                      );
                    },
                  },
                  {
                    key: "pathMouseEnter",
                    value: function (e, t) {
                      var n = this.w,
                        i = new S(this.ctx),
                        o = parseInt(e.node.getAttribute("index"), 10),
                        a = parseInt(e.node.getAttribute("j"), 10);
                      if (
                        ("function" ==
                          typeof n.config.chart.events.dataPointMouseEnter &&
                          n.config.chart.events.dataPointMouseEnter(
                            t,
                            this.ctx,
                            { seriesIndex: o, dataPointIndex: a, w: n }
                          ),
                        this.ctx.events.fireEvent("dataPointMouseEnter", [
                          t,
                          this.ctx,
                          { seriesIndex: o, dataPointIndex: a, w: n },
                        ]),
                        ("none" === n.config.states.active.filter.type ||
                          "true" !== e.node.getAttribute("selected")) &&
                          "none" !== n.config.states.hover.filter.type &&
                          !n.globals.isTouchDevice)
                      ) {
                        var s = n.config.states.hover.filter;
                        i.applyFilter(e, o, s.type, s.value);
                      }
                    },
                  },
                  {
                    key: "pathMouseLeave",
                    value: function (e, t) {
                      var n = this.w,
                        i = new S(this.ctx),
                        o = parseInt(e.node.getAttribute("index"), 10),
                        a = parseInt(e.node.getAttribute("j"), 10);
                      "function" ==
                        typeof n.config.chart.events.dataPointMouseLeave &&
                        n.config.chart.events.dataPointMouseLeave(t, this.ctx, {
                          seriesIndex: o,
                          dataPointIndex: a,
                          w: n,
                        }),
                        this.ctx.events.fireEvent("dataPointMouseLeave", [
                          t,
                          this.ctx,
                          { seriesIndex: o, dataPointIndex: a, w: n },
                        ]),
                        ("none" !== n.config.states.active.filter.type &&
                          "true" === e.node.getAttribute("selected")) ||
                          ("none" !== n.config.states.hover.filter.type &&
                            i.getDefaultFilter(e, o));
                    },
                  },
                  {
                    key: "pathMouseDown",
                    value: function (e, t) {
                      var n = this.w,
                        i = new S(this.ctx),
                        o = parseInt(e.node.getAttribute("index"), 10),
                        a = parseInt(e.node.getAttribute("j"), 10),
                        s = "false";
                      if ("true" === e.node.getAttribute("selected")) {
                        if (
                          (e.node.setAttribute("selected", "false"),
                          n.globals.selectedDataPoints[o].indexOf(a) > -1)
                        ) {
                          var r = n.globals.selectedDataPoints[o].indexOf(a);
                          n.globals.selectedDataPoints[o].splice(r, 1);
                        }
                      } else {
                        if (
                          !n.config.states.active
                            .allowMultipleDataPointsSelection &&
                          n.globals.selectedDataPoints.length > 0
                        ) {
                          n.globals.selectedDataPoints = [];
                          var l = n.globals.dom.Paper.select(
                              ".apexcharts-series path"
                            ).members,
                            c = n.globals.dom.Paper.select(
                              ".apexcharts-series circle, .apexcharts-series rect"
                            ).members,
                            u = function (e) {
                              Array.prototype.forEach.call(e, function (e) {
                                e.node.setAttribute("selected", "false"),
                                  i.getDefaultFilter(e, o);
                              });
                            };
                          u(l), u(c);
                        }
                        e.node.setAttribute("selected", "true"),
                          (s = "true"),
                          void 0 === n.globals.selectedDataPoints[o] &&
                            (n.globals.selectedDataPoints[o] = []),
                          n.globals.selectedDataPoints[o].push(a);
                      }
                      if ("true" === s) {
                        var d = n.config.states.active.filter;
                        if ("none" !== d) i.applyFilter(e, o, d.type, d.value);
                        else if (
                          "none" !== n.config.states.hover.filter &&
                          !n.globals.isTouchDevice
                        ) {
                          var h = n.config.states.hover.filter;
                          i.applyFilter(e, o, h.type, h.value);
                        }
                      } else
                        "none" !== n.config.states.active.filter.type &&
                          ("none" === n.config.states.hover.filter.type ||
                          n.globals.isTouchDevice
                            ? i.getDefaultFilter(e, o)
                            : ((h = n.config.states.hover.filter),
                              i.applyFilter(e, o, h.type, h.value)));
                      "function" ==
                        typeof n.config.chart.events.dataPointSelection &&
                        n.config.chart.events.dataPointSelection(t, this.ctx, {
                          selectedDataPoints: n.globals.selectedDataPoints,
                          seriesIndex: o,
                          dataPointIndex: a,
                          w: n,
                        }),
                        t &&
                          this.ctx.events.fireEvent("dataPointSelection", [
                            t,
                            this.ctx,
                            {
                              selectedDataPoints: n.globals.selectedDataPoints,
                              seriesIndex: o,
                              dataPointIndex: a,
                              w: n,
                            },
                          ]);
                    },
                  },
                  {
                    key: "rotateAroundCenter",
                    value: function (e) {
                      var t = {};
                      return (
                        e &&
                          "function" == typeof e.getBBox &&
                          (t = e.getBBox()),
                        { x: t.x + t.width / 2, y: t.y + t.height / 2 }
                      );
                    },
                  },
                  {
                    key: "getTextRects",
                    value: function (e, t, n, i) {
                      var o =
                          !(arguments.length > 4 && void 0 !== arguments[4]) ||
                          arguments[4],
                        a = this.w,
                        s = this.drawText({
                          x: -200,
                          y: -200,
                          text: e,
                          textAnchor: "start",
                          fontSize: t,
                          fontFamily: n,
                          foreColor: "#fff",
                          opacity: 0,
                        });
                      i && s.attr("transform", i), a.globals.dom.Paper.add(s);
                      var r = s.bbox();
                      return (
                        o || (r = s.node.getBoundingClientRect()),
                        s.remove(),
                        { width: r.width, height: r.height }
                      );
                    },
                  },
                  {
                    key: "placeTextWithEllipsis",
                    value: function (e, t, n) {
                      if (
                        "function" == typeof e.getComputedTextLength &&
                        ((e.textContent = t),
                        t.length > 0 && e.getComputedTextLength() >= n / 1.1)
                      ) {
                        for (var i = t.length - 3; i > 0; i -= 3)
                          if (e.getSubStringLength(0, i) <= n / 1.1)
                            return void (e.textContent =
                              t.substring(0, i) + "...");
                        e.textContent = ".";
                      }
                    },
                  },
                ],
                [
                  {
                    key: "setAttrs",
                    value: function (e, t) {
                      for (var n in t)
                        t.hasOwnProperty(n) && e.setAttribute(n, t[n]);
                    },
                  },
                ]
              ),
              e
            );
          })(),
          A = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(
                e,
                [
                  {
                    key: "getStackedSeriesTotals",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : [],
                        t = this.w,
                        n = [];
                      if (0 === t.globals.series.length) return n;
                      for (
                        var i = 0;
                        i <
                        t.globals.series[t.globals.maxValsInArrayIndex].length;
                        i++
                      ) {
                        for (var o = 0, a = 0; a < t.globals.series.length; a++)
                          void 0 !== t.globals.series[a][i] &&
                            -1 === e.indexOf(a) &&
                            (o += t.globals.series[a][i]);
                        n.push(o);
                      }
                      return n;
                    },
                  },
                  {
                    key: "getSeriesTotalByIndex",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : null;
                      return null === e
                        ? this.w.config.series.reduce(function (e, t) {
                            return e + t;
                          }, 0)
                        : this.w.globals.series[e].reduce(function (e, t) {
                            return e + t;
                          }, 0);
                    },
                  },
                  {
                    key: "getStackedSeriesTotalsByGroups",
                    value: function () {
                      var e = this,
                        t = this.w,
                        n = [];
                      return (
                        t.globals.seriesGroups.forEach(function (i) {
                          var o = [];
                          t.config.series.forEach(function (e, n) {
                            i.indexOf(t.globals.seriesNames[n]) > -1 &&
                              o.push(n);
                          });
                          var a = t.globals.series
                            .map(function (e, t) {
                              return -1 === o.indexOf(t) ? t : -1;
                            })
                            .filter(function (e) {
                              return -1 !== e;
                            });
                          n.push(e.getStackedSeriesTotals(a));
                        }),
                        n
                      );
                    },
                  },
                  {
                    key: "setSeriesYAxisMappings",
                    value: function () {
                      var e = this.w.globals,
                        t = this.w.config,
                        n = [],
                        i = [],
                        o = [],
                        a =
                          e.series.length > t.yaxis.length ||
                          t.yaxis.some(function (e) {
                            return Array.isArray(e.seriesName);
                          });
                      t.series.forEach(function (e, t) {
                        o.push(t), i.push(null);
                      }),
                        t.yaxis.forEach(function (e, t) {
                          n[t] = [];
                        });
                      var s = [];
                      t.yaxis.forEach(function (e, i) {
                        var r = !1;
                        if (e.seriesName) {
                          var l = [];
                          Array.isArray(e.seriesName)
                            ? (l = e.seriesName)
                            : l.push(e.seriesName),
                            l.forEach(function (e) {
                              t.series.forEach(function (t, s) {
                                if (t.name === e) {
                                  var l = s;
                                  i === s || a
                                    ? !a || o.indexOf(s) > -1
                                      ? n[i].push([i, s])
                                      : console.warn(
                                          "Series '" +
                                            t.name +
                                            "' referenced more than once in what looks like the new style. That is, when using either seriesName: [], or when there are more series than yaxes."
                                        )
                                    : (n[s].push([s, i]), (l = i)),
                                    (r = !0),
                                    -1 !== (l = o.indexOf(l)) && o.splice(l, 1);
                                }
                              });
                            });
                        }
                        r || s.push(i);
                      }),
                        (n = n.map(function (e, t) {
                          var n = [];
                          return (
                            e.forEach(function (e) {
                              (i[e[1]] = e[0]), n.push(e[1]);
                            }),
                            n
                          );
                        }));
                      for (
                        var r = t.yaxis.length - 1, l = 0;
                        l < s.length && ((r = s[l]), (n[r] = []), o);
                        l++
                      ) {
                        var c = o[0];
                        o.shift(), n[r].push(c), (i[c] = r);
                      }
                      o.forEach(function (e) {
                        n[r].push(e), (i[e] = r);
                      }),
                        (e.seriesYAxisMap = n.map(function (e) {
                          return e;
                        })),
                        (e.seriesYAxisReverseMap = i.map(function (e) {
                          return e;
                        })),
                        e.seriesYAxisMap.forEach(function (e, n) {
                          e.forEach(function (e) {
                            t.series[e] &&
                              void 0 === t.series[e].group &&
                              (t.series[e].group = "apexcharts-axis-".concat(
                                n.toString()
                              ));
                          });
                        });
                    },
                  },
                  {
                    key: "isSeriesNull",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : null;
                      return (
                        0 ===
                        (null === e
                          ? this.w.config.series.filter(function (e) {
                              return null !== e;
                            })
                          : this.w.config.series[e].data.filter(function (e) {
                              return null !== e;
                            })
                        ).length
                      );
                    },
                  },
                  {
                    key: "seriesHaveSameValues",
                    value: function (e) {
                      return this.w.globals.series[e].every(function (e, t, n) {
                        return e === n[0];
                      });
                    },
                  },
                  {
                    key: "getCategoryLabels",
                    value: function (e) {
                      var t = this.w,
                        n = e.slice();
                      return (
                        t.config.xaxis.convertedCatToNumeric &&
                          (n = e.map(function (e, n) {
                            return t.config.xaxis.labels.formatter(
                              e - t.globals.minX + 1
                            );
                          })),
                        n
                      );
                    },
                  },
                  {
                    key: "getLargestSeries",
                    value: function () {
                      var e = this.w;
                      e.globals.maxValsInArrayIndex = e.globals.series
                        .map(function (e) {
                          return e.length;
                        })
                        .indexOf(
                          Math.max.apply(
                            Math,
                            e.globals.series.map(function (e) {
                              return e.length;
                            })
                          )
                        );
                    },
                  },
                  {
                    key: "getLargestMarkerSize",
                    value: function () {
                      var e = this.w,
                        t = 0;
                      return (
                        e.globals.markers.size.forEach(function (e) {
                          t = Math.max(t, e);
                        }),
                        e.config.markers.discrete &&
                          e.config.markers.discrete.length &&
                          e.config.markers.discrete.forEach(function (e) {
                            t = Math.max(t, e.size);
                          }),
                        t > 0 && (t += e.config.markers.hover.sizeOffset + 1),
                        (e.globals.markers.largestSize = t),
                        t
                      );
                    },
                  },
                  {
                    key: "getSeriesTotals",
                    value: function () {
                      var e = this.w;
                      e.globals.seriesTotals = e.globals.series.map(function (
                        e,
                        t
                      ) {
                        var n = 0;
                        if (Array.isArray(e))
                          for (var i = 0; i < e.length; i++) n += e[i];
                        else n += e;
                        return n;
                      });
                    },
                  },
                  {
                    key: "getSeriesTotalsXRange",
                    value: function (e, t) {
                      var n = this.w;
                      return n.globals.series.map(function (i, o) {
                        for (var a = 0, s = 0; s < i.length; s++)
                          n.globals.seriesX[o][s] > e &&
                            n.globals.seriesX[o][s] < t &&
                            (a += i[s]);
                        return a;
                      });
                    },
                  },
                  {
                    key: "getPercentSeries",
                    value: function () {
                      var e = this.w;
                      e.globals.seriesPercent = e.globals.series.map(function (
                        t,
                        n
                      ) {
                        var i = [];
                        if (Array.isArray(t))
                          for (var o = 0; o < t.length; o++) {
                            var a = e.globals.stackedSeriesTotals[o],
                              s = 0;
                            a && (s = (100 * t[o]) / a), i.push(s);
                          }
                        else {
                          var r =
                            (100 * t) /
                            e.globals.seriesTotals.reduce(function (e, t) {
                              return e + t;
                            }, 0);
                          i.push(r);
                        }
                        return i;
                      });
                    },
                  },
                  {
                    key: "getCalculatedRatios",
                    value: function () {
                      var e,
                        t,
                        n,
                        i = this,
                        o = this.w,
                        a = o.globals,
                        s = [],
                        r = 0,
                        l = [],
                        c = 0.1,
                        u = 0;
                      if (((a.yRange = []), a.isMultipleYAxis))
                        for (var d = 0; d < a.minYArr.length; d++)
                          a.yRange.push(Math.abs(a.minYArr[d] - a.maxYArr[d])),
                            l.push(0);
                      else a.yRange.push(Math.abs(a.minY - a.maxY));
                      (a.xRange = Math.abs(a.maxX - a.minX)),
                        (a.zRange = Math.abs(a.maxZ - a.minZ));
                      for (var h = 0; h < a.yRange.length; h++)
                        s.push(a.yRange[h] / a.gridHeight);
                      if (
                        ((t = a.xRange / a.gridWidth),
                        (e = a.yRange / a.gridWidth),
                        (n = a.xRange / a.gridHeight),
                        (r = (a.zRange / a.gridHeight) * 16) || (r = 1),
                        a.minY !== Number.MIN_VALUE &&
                          0 !== Math.abs(a.minY) &&
                          (a.hasNegs = !0),
                        o.globals.seriesYAxisReverseMap.length > 0)
                      ) {
                        var p = function (e, t) {
                          var n =
                              o.config.yaxis[
                                o.globals.seriesYAxisReverseMap[t]
                              ],
                            a = e < 0 ? -1 : 1;
                          return (
                            (e = Math.abs(e)),
                            n.logarithmic && (e = i.getBaseLog(n.logBase, e)),
                            (-a * e) / s[t]
                          );
                        };
                        if (a.isMultipleYAxis) {
                          l = [];
                          for (var f = 0; f < s.length; f++)
                            l.push(p(a.minYArr[f], f));
                        } else
                          (l = []).push(p(a.minY, 0)),
                            a.minY !== Number.MIN_VALUE &&
                              0 !== Math.abs(a.minY) &&
                              ((c = -a.minY / e), (u = a.minX / t));
                      } else (l = []).push(0), (c = 0), (u = 0);
                      return {
                        yRatio: s,
                        invertedYRatio: e,
                        zRatio: r,
                        xRatio: t,
                        invertedXRatio: n,
                        baseLineInvertedY: c,
                        baseLineY: l,
                        baseLineX: u,
                      };
                    },
                  },
                  {
                    key: "getLogSeries",
                    value: function (e) {
                      var t = this,
                        n = this.w;
                      return (
                        (n.globals.seriesLog = e.map(function (e, i) {
                          var o = n.globals.seriesYAxisReverseMap[i];
                          return n.config.yaxis[o] &&
                            n.config.yaxis[o].logarithmic
                            ? e.map(function (e) {
                                return null === e
                                  ? null
                                  : t.getLogVal(
                                      n.config.yaxis[o].logBase,
                                      e,
                                      i
                                    );
                              })
                            : e;
                        })),
                        n.globals.invalidLogScale ? e : n.globals.seriesLog
                      );
                    },
                  },
                  {
                    key: "getBaseLog",
                    value: function (e, t) {
                      return Math.log(t) / Math.log(e);
                    },
                  },
                  {
                    key: "getLogVal",
                    value: function (e, t, n) {
                      if (t <= 0) return 0;
                      var i = this.w,
                        o =
                          0 === i.globals.minYArr[n]
                            ? -1
                            : this.getBaseLog(e, i.globals.minYArr[n]),
                        a =
                          (0 === i.globals.maxYArr[n]
                            ? 0
                            : this.getBaseLog(e, i.globals.maxYArr[n])) - o;
                      return t < 1 ? t / a : (this.getBaseLog(e, t) - o) / a;
                    },
                  },
                  {
                    key: "getLogYRatios",
                    value: function (e) {
                      var t = this,
                        n = this.w,
                        i = this.w.globals;
                      return (
                        (i.yLogRatio = e.slice()),
                        (i.logYRange = i.yRange.map(function (e, o) {
                          var a = n.globals.seriesYAxisReverseMap[o];
                          if (
                            n.config.yaxis[a] &&
                            t.w.config.yaxis[a].logarithmic
                          ) {
                            var s,
                              r = -Number.MAX_VALUE,
                              l = Number.MIN_VALUE;
                            return (
                              i.seriesLog.forEach(function (e, t) {
                                e.forEach(function (e) {
                                  n.config.yaxis[t] &&
                                    n.config.yaxis[t].logarithmic &&
                                    ((r = Math.max(e, r)),
                                    (l = Math.min(e, l)));
                                });
                              }),
                              (s = Math.pow(
                                i.yRange[o],
                                Math.abs(l - r) / i.yRange[o]
                              )),
                              (i.yLogRatio[o] = s / i.gridHeight),
                              s
                            );
                          }
                        })),
                        i.invalidLogScale ? e.slice() : i.yLogRatio
                      );
                    },
                  },
                  {
                    key: "drawSeriesByGroup",
                    value: function (e, t, n, i) {
                      var o = this.w,
                        a = [];
                      return (
                        e.series.length > 0 &&
                          t.forEach(function (t) {
                            var s = [],
                              r = [];
                            e.i.forEach(function (n, i) {
                              o.config.series[n].group === t &&
                                (s.push(e.series[i]), r.push(n));
                            }),
                              s.length > 0 && a.push(i.draw(s, n, r));
                          }),
                        a
                      );
                    },
                  },
                ],
                [
                  {
                    key: "checkComboSeries",
                    value: function (e, t) {
                      var n = !1,
                        i = 0,
                        o = 0;
                      return (
                        void 0 === t && (t = "line"),
                        e.length &&
                          void 0 !== e[0].type &&
                          e.forEach(function (e) {
                            ("bar" !== e.type &&
                              "column" !== e.type &&
                              "candlestick" !== e.type &&
                              "boxPlot" !== e.type) ||
                              i++,
                              void 0 !== e.type && e.type !== t && o++;
                          }),
                        o > 0 && (n = !0),
                        { comboBarCount: i, comboCharts: n }
                      );
                    },
                  },
                  {
                    key: "extendArrayProps",
                    value: function (e, t, n) {
                      var i, o, a, s, r, l;
                      return (
                        null !== (i = t) &&
                          void 0 !== i &&
                          i.yaxis &&
                          (t = e.extendYAxis(t, n)),
                        null !== (o = t) &&
                          void 0 !== o &&
                          o.annotations &&
                          (t.annotations.yaxis &&
                            (t = e.extendYAxisAnnotations(t)),
                          null !== (a = t) &&
                            void 0 !== a &&
                            null !== (s = a.annotations) &&
                            void 0 !== s &&
                            s.xaxis &&
                            (t = e.extendXAxisAnnotations(t)),
                          null !== (r = t) &&
                            void 0 !== r &&
                            null !== (l = r.annotations) &&
                            void 0 !== l &&
                            l.points &&
                            (t = e.extendPointAnnotations(t))),
                        t
                      );
                    },
                  },
                ]
              ),
              e
            );
          })(),
          C = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.annoCtx = t);
            }
            return (
              c(e, [
                {
                  key: "setOrientations",
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : null,
                      n = this.w;
                    if ("vertical" === e.label.orientation) {
                      var i = null !== t ? t : 0,
                        o = n.globals.dom.baseEl.querySelector(
                          ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                            i,
                            "']"
                          )
                        );
                      if (null !== o) {
                        var a = o.getBoundingClientRect();
                        o.setAttribute(
                          "x",
                          parseFloat(o.getAttribute("x")) - a.height + 4
                        ),
                          "top" === e.label.position
                            ? o.setAttribute(
                                "y",
                                parseFloat(o.getAttribute("y")) + a.width
                              )
                            : o.setAttribute(
                                "y",
                                parseFloat(o.getAttribute("y")) - a.width
                              );
                        var s = this.annoCtx.graphics.rotateAroundCenter(o),
                          r = s.x,
                          l = s.y;
                        o.setAttribute(
                          "transform",
                          "rotate(-90 ".concat(r, " ").concat(l, ")")
                        );
                      }
                    }
                  },
                },
                {
                  key: "addBackgroundToAnno",
                  value: function (e, t) {
                    var n = this.w;
                    if (
                      !e ||
                      void 0 === t.label.text ||
                      (void 0 !== t.label.text && !String(t.label.text).trim())
                    )
                      return null;
                    var i = n.globals.dom.baseEl
                        .querySelector(".apexcharts-grid")
                        .getBoundingClientRect(),
                      o = e.getBoundingClientRect(),
                      a = t.label.style.padding.left,
                      s = t.label.style.padding.right,
                      r = t.label.style.padding.top,
                      l = t.label.style.padding.bottom;
                    "vertical" === t.label.orientation &&
                      ((r = t.label.style.padding.left),
                      (l = t.label.style.padding.right),
                      (a = t.label.style.padding.top),
                      (s = t.label.style.padding.bottom));
                    var c = o.left - i.left - a,
                      u = o.top - i.top - r,
                      d = this.annoCtx.graphics.drawRect(
                        c - n.globals.barPadForNumericAxis,
                        u,
                        o.width + a + s,
                        o.height + r + l,
                        t.label.borderRadius,
                        t.label.style.background,
                        1,
                        t.label.borderWidth,
                        t.label.borderColor,
                        0
                      );
                    return t.id && d.node.classList.add(t.id), d;
                  },
                },
                {
                  key: "annotationsBackground",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = function (n, i, o) {
                        var a = t.globals.dom.baseEl.querySelector(
                          ".apexcharts-"
                            .concat(o, "-annotations .apexcharts-")
                            .concat(o, "-annotation-label[rel='")
                            .concat(i, "']")
                        );
                        if (a) {
                          var s = a.parentNode,
                            r = e.addBackgroundToAnno(a, n);
                          r &&
                            (s.insertBefore(r.node, a),
                            n.label.mouseEnter &&
                              r.node.addEventListener(
                                "mouseenter",
                                n.label.mouseEnter.bind(e, n)
                              ),
                            n.label.mouseLeave &&
                              r.node.addEventListener(
                                "mouseleave",
                                n.label.mouseLeave.bind(e, n)
                              ),
                            n.label.click &&
                              r.node.addEventListener(
                                "click",
                                n.label.click.bind(e, n)
                              ));
                        }
                      };
                    t.config.annotations.xaxis.map(function (e, t) {
                      n(e, t, "xaxis");
                    }),
                      t.config.annotations.yaxis.map(function (e, t) {
                        n(e, t, "yaxis");
                      }),
                      t.config.annotations.points.map(function (e, t) {
                        n(e, t, "point");
                      });
                  },
                },
                {
                  key: "getY1Y2",
                  value: function (e, t) {
                    var n,
                      i = "y1" === e ? t.y : t.y2,
                      o = !1,
                      a = this.w;
                    if (this.annoCtx.invertAxis) {
                      var s = a.globals.labels;
                      a.config.xaxis.convertedCatToNumeric &&
                        (s = a.globals.categoryLabels);
                      var r = s.indexOf(i),
                        l = a.globals.dom.baseEl.querySelector(
                          ".apexcharts-yaxis-texts-g text:nth-child(" +
                            (r + 1) +
                            ")"
                        );
                      (n = l
                        ? parseFloat(l.getAttribute("y"))
                        : (a.globals.gridHeight / s.length - 1) * (r + 1) -
                          a.globals.barHeight),
                        void 0 !== t.seriesIndex &&
                          a.globals.barHeight &&
                          (n =
                            n -
                            (a.globals.barHeight / 2) *
                              (a.globals.series.length - 1) +
                            a.globals.barHeight * t.seriesIndex);
                    } else {
                      var c,
                        u = a.globals.seriesYAxisMap[t.yAxisIndex][0];
                      (c = a.config.yaxis[t.yAxisIndex].logarithmic
                        ? (i = new A(this.annoCtx.ctx).getLogVal(
                            a.config.yaxis[t.yAxisIndex].logBase,
                            i,
                            u
                          )) / a.globals.yLogRatio[u]
                        : (i - a.globals.minYArr[u]) /
                          (a.globals.yRange[u] / a.globals.gridHeight)) >
                      a.globals.gridHeight
                        ? ((c = a.globals.gridHeight), (o = !0))
                        : c < 0 && ((c = 0), (o = !0)),
                        (n = a.globals.gridHeight - c),
                        !t.marker ||
                          (void 0 !== t.y && null !== t.y) ||
                          (n = 0),
                        a.config.yaxis[t.yAxisIndex] &&
                          a.config.yaxis[t.yAxisIndex].reversed &&
                          (n = c);
                    }
                    return (
                      "string" == typeof i &&
                        i.indexOf("px") > -1 &&
                        (n = parseFloat(i)),
                      { yP: n, clipped: o }
                    );
                  },
                },
                {
                  key: "getX1X2",
                  value: function (e, t) {
                    var n,
                      i = "x1" === e ? t.x : t.x2,
                      o = this.w,
                      a = this.annoCtx.invertAxis
                        ? o.globals.minY
                        : o.globals.minX,
                      s = this.annoCtx.invertAxis
                        ? o.globals.maxY
                        : o.globals.maxX,
                      r = this.annoCtx.invertAxis
                        ? o.globals.yRange[0]
                        : o.globals.xRange,
                      l = !1;
                    return (
                      (n = this.annoCtx.inversedReversedAxis
                        ? (s - i) / (r / o.globals.gridWidth)
                        : (i - a) / (r / o.globals.gridWidth)),
                      ("category" !== o.config.xaxis.type &&
                        !o.config.xaxis.convertedCatToNumeric) ||
                        this.annoCtx.invertAxis ||
                        o.globals.dataFormatXNumeric ||
                        o.config.chart.sparkline.enabled ||
                        (n = this.getStringX(i)),
                      "string" == typeof i &&
                        i.indexOf("px") > -1 &&
                        (n = parseFloat(i)),
                      null == i && t.marker && (n = o.globals.gridWidth),
                      void 0 !== t.seriesIndex &&
                        o.globals.barWidth &&
                        !this.annoCtx.invertAxis &&
                        (n =
                          n -
                          (o.globals.barWidth / 2) *
                            (o.globals.series.length - 1) +
                          o.globals.barWidth * t.seriesIndex),
                      n > o.globals.gridWidth
                        ? ((n = o.globals.gridWidth), (l = !0))
                        : n < 0 && ((n = 0), (l = !0)),
                      { x: n, clipped: l }
                    );
                  },
                },
                {
                  key: "getStringX",
                  value: function (e) {
                    var t = this.w,
                      n = e;
                    t.config.xaxis.convertedCatToNumeric &&
                      t.globals.categoryLabels.length &&
                      (e = t.globals.categoryLabels.indexOf(e) + 1);
                    var i = t.globals.labels.indexOf(e),
                      o = t.globals.dom.baseEl.querySelector(
                        ".apexcharts-xaxis-texts-g text:nth-child(" +
                          (i + 1) +
                          ")"
                      );
                    return o && (n = parseFloat(o.getAttribute("x"))), n;
                  },
                },
              ]),
              e
            );
          })(),
          M = (function () {
            function e(t) {
              r(this, e),
                (this.w = t.w),
                (this.annoCtx = t),
                (this.invertAxis = this.annoCtx.invertAxis),
                (this.helpers = new C(this.annoCtx));
            }
            return (
              c(e, [
                {
                  key: "addXaxisAnnotation",
                  value: function (e, t, n) {
                    var i,
                      o = this.w,
                      a = this.helpers.getX1X2("x1", e),
                      s = a.x,
                      r = a.clipped,
                      l = !0,
                      c = e.label.text,
                      u = e.strokeDashArray;
                    if (y.isNumber(s)) {
                      if (null === e.x2 || void 0 === e.x2) {
                        if (!r) {
                          var d = this.annoCtx.graphics.drawLine(
                            s + e.offsetX,
                            0 + e.offsetY,
                            s + e.offsetX,
                            o.globals.gridHeight + e.offsetY,
                            e.borderColor,
                            u,
                            e.borderWidth
                          );
                          t.appendChild(d.node),
                            e.id && d.node.classList.add(e.id);
                        }
                      } else {
                        var h = this.helpers.getX1X2("x2", e);
                        if (((i = h.x), (l = h.clipped), !r || !l)) {
                          if (i < s) {
                            var p = s;
                            (s = i), (i = p);
                          }
                          var f = this.annoCtx.graphics.drawRect(
                            s + e.offsetX,
                            0 + e.offsetY,
                            i - s,
                            o.globals.gridHeight + e.offsetY,
                            0,
                            e.fillColor,
                            e.opacity,
                            1,
                            e.borderColor,
                            u
                          );
                          f.node.classList.add("apexcharts-annotation-rect"),
                            f.attr(
                              "clip-path",
                              "url(#gridRectMask".concat(o.globals.cuid, ")")
                            ),
                            t.appendChild(f.node),
                            e.id && f.node.classList.add(e.id);
                        }
                      }
                      if (!r || !l) {
                        var g = this.annoCtx.graphics.getTextRects(
                            c,
                            parseFloat(e.label.style.fontSize)
                          ),
                          m =
                            "top" === e.label.position
                              ? 4
                              : "center" === e.label.position
                              ? o.globals.gridHeight / 2 +
                                ("vertical" === e.label.orientation
                                  ? g.width / 2
                                  : 0)
                              : o.globals.gridHeight,
                          v = this.annoCtx.graphics.drawText({
                            x: s + e.label.offsetX,
                            y:
                              m +
                              e.label.offsetY -
                              ("vertical" === e.label.orientation
                                ? "top" === e.label.position
                                  ? g.width / 2 - 12
                                  : -g.width / 2
                                : 0),
                            text: c,
                            textAnchor: e.label.textAnchor,
                            fontSize: e.label.style.fontSize,
                            fontFamily: e.label.style.fontFamily,
                            fontWeight: e.label.style.fontWeight,
                            foreColor: e.label.style.color,
                            cssClass: "apexcharts-xaxis-annotation-label "
                              .concat(e.label.style.cssClass, " ")
                              .concat(e.id ? e.id : ""),
                          });
                        v.attr({ rel: n }),
                          t.appendChild(v.node),
                          this.annoCtx.helpers.setOrientations(e, n);
                      }
                    }
                  },
                },
                {
                  key: "drawXAxisAnnotations",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = this.annoCtx.graphics.group({
                        class: "apexcharts-xaxis-annotations",
                      });
                    return (
                      t.config.annotations.xaxis.map(function (t, i) {
                        e.addXaxisAnnotation(t, n.node, i);
                      }),
                      n
                    );
                  },
                },
              ]),
              e
            );
          })(),
          P = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
                (this.months30 = [2, 4, 6, 9, 11]),
                (this.daysCntOfYear = [
                  0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
                ]);
            }
            return (
              c(e, [
                {
                  key: "isValidDate",
                  value: function (e) {
                    return "number" != typeof e && !isNaN(this.parseDate(e));
                  },
                },
                {
                  key: "getTimeStamp",
                  value: function (e) {
                    return Date.parse(e)
                      ? this.w.config.xaxis.labels.datetimeUTC
                        ? new Date(
                            new Date(e).toISOString().substr(0, 25)
                          ).getTime()
                        : new Date(e).getTime()
                      : e;
                  },
                },
                {
                  key: "getDate",
                  value: function (e) {
                    return this.w.config.xaxis.labels.datetimeUTC
                      ? new Date(new Date(e).toUTCString())
                      : new Date(e);
                  },
                },
                {
                  key: "parseDate",
                  value: function (e) {
                    var t = Date.parse(e);
                    if (!isNaN(t)) return this.getTimeStamp(e);
                    var n = Date.parse(
                      e.replace(/-/g, "/").replace(/[a-z]+/gi, " ")
                    );
                    return this.getTimeStamp(n);
                  },
                },
                {
                  key: "parseDateWithTimezone",
                  value: function (e) {
                    return Date.parse(
                      e.replace(/-/g, "/").replace(/[a-z]+/gi, " ")
                    );
                  },
                },
                {
                  key: "formatDate",
                  value: function (e, t) {
                    var n = this.w.globals.locale,
                      i = this.w.config.xaxis.labels.datetimeUTC,
                      o = ["\0"].concat(v(n.months)),
                      a = ["\x01"].concat(v(n.shortMonths)),
                      s = ["\x02"].concat(v(n.days)),
                      r = ["\x03"].concat(v(n.shortDays));
                    function l(e, t) {
                      var n = e + "";
                      for (t = t || 2; n.length < t; ) n = "0" + n;
                      return n;
                    }
                    var c = i ? e.getUTCFullYear() : e.getFullYear();
                    t = (t = (t = t.replace(
                      /(^|[^\\])yyyy+/g,
                      "$1" + c
                    )).replace(
                      /(^|[^\\])yy/g,
                      "$1" + c.toString().substr(2, 2)
                    )).replace(/(^|[^\\])y/g, "$1" + c);
                    var u = (i ? e.getUTCMonth() : e.getMonth()) + 1;
                    t = (t = (t = (t = t.replace(
                      /(^|[^\\])MMMM+/g,
                      "$1" + o[0]
                    )).replace(/(^|[^\\])MMM/g, "$1" + a[0])).replace(
                      /(^|[^\\])MM/g,
                      "$1" + l(u)
                    )).replace(/(^|[^\\])M/g, "$1" + u);
                    var d = i ? e.getUTCDate() : e.getDate();
                    t = (t = (t = (t = t.replace(
                      /(^|[^\\])dddd+/g,
                      "$1" + s[0]
                    )).replace(/(^|[^\\])ddd/g, "$1" + r[0])).replace(
                      /(^|[^\\])dd/g,
                      "$1" + l(d)
                    )).replace(/(^|[^\\])d/g, "$1" + d);
                    var h = i ? e.getUTCHours() : e.getHours(),
                      p = h > 12 ? h - 12 : 0 === h ? 12 : h;
                    t = (t = (t = (t = t.replace(
                      /(^|[^\\])HH+/g,
                      "$1" + l(h)
                    )).replace(/(^|[^\\])H/g, "$1" + h)).replace(
                      /(^|[^\\])hh+/g,
                      "$1" + l(p)
                    )).replace(/(^|[^\\])h/g, "$1" + p);
                    var f = i ? e.getUTCMinutes() : e.getMinutes();
                    t = (t = t.replace(/(^|[^\\])mm+/g, "$1" + l(f))).replace(
                      /(^|[^\\])m/g,
                      "$1" + f
                    );
                    var g = i ? e.getUTCSeconds() : e.getSeconds();
                    t = (t = t.replace(/(^|[^\\])ss+/g, "$1" + l(g))).replace(
                      /(^|[^\\])s/g,
                      "$1" + g
                    );
                    var m = i ? e.getUTCMilliseconds() : e.getMilliseconds();
                    (t = t.replace(/(^|[^\\])fff+/g, "$1" + l(m, 3))),
                      (m = Math.round(m / 10)),
                      (t = t.replace(/(^|[^\\])ff/g, "$1" + l(m))),
                      (m = Math.round(m / 10));
                    var b = h < 12 ? "AM" : "PM";
                    t = (t = (t = t.replace(/(^|[^\\])f/g, "$1" + m)).replace(
                      /(^|[^\\])TT+/g,
                      "$1" + b
                    )).replace(/(^|[^\\])T/g, "$1" + b.charAt(0));
                    var x = b.toLowerCase();
                    t = (t = t.replace(/(^|[^\\])tt+/g, "$1" + x)).replace(
                      /(^|[^\\])t/g,
                      "$1" + x.charAt(0)
                    );
                    var y = -e.getTimezoneOffset(),
                      w = i || !y ? "Z" : y > 0 ? "+" : "-";
                    if (!i) {
                      var S = (y = Math.abs(y)) % 60;
                      w += l(Math.floor(y / 60)) + ":" + l(S);
                    }
                    t = t.replace(/(^|[^\\])K/g, "$1" + w);
                    var k = (i ? e.getUTCDay() : e.getDay()) + 1;
                    return (t = (t = (t = (t = t.replace(
                      new RegExp(s[0], "g"),
                      s[k]
                    )).replace(new RegExp(r[0], "g"), r[k])).replace(
                      new RegExp(o[0], "g"),
                      o[u]
                    )).replace(new RegExp(a[0], "g"), a[u])).replace(
                      /\\(.)/g,
                      "$1"
                    );
                  },
                },
                {
                  key: "getTimeUnitsfromTimestamp",
                  value: function (e, t, n) {
                    var i = this.w;
                    void 0 !== i.config.xaxis.min && (e = i.config.xaxis.min),
                      void 0 !== i.config.xaxis.max && (t = i.config.xaxis.max);
                    var o = this.getDate(e),
                      a = this.getDate(t),
                      s = this.formatDate(o, "yyyy MM dd HH mm ss fff").split(
                        " "
                      ),
                      r = this.formatDate(a, "yyyy MM dd HH mm ss fff").split(
                        " "
                      );
                    return {
                      minMillisecond: parseInt(s[6], 10),
                      maxMillisecond: parseInt(r[6], 10),
                      minSecond: parseInt(s[5], 10),
                      maxSecond: parseInt(r[5], 10),
                      minMinute: parseInt(s[4], 10),
                      maxMinute: parseInt(r[4], 10),
                      minHour: parseInt(s[3], 10),
                      maxHour: parseInt(r[3], 10),
                      minDate: parseInt(s[2], 10),
                      maxDate: parseInt(r[2], 10),
                      minMonth: parseInt(s[1], 10) - 1,
                      maxMonth: parseInt(r[1], 10) - 1,
                      minYear: parseInt(s[0], 10),
                      maxYear: parseInt(r[0], 10),
                    };
                  },
                },
                {
                  key: "isLeapYear",
                  value: function (e) {
                    return (e % 4 == 0 && e % 100 != 0) || e % 400 == 0;
                  },
                },
                {
                  key: "calculcateLastDaysOfMonth",
                  value: function (e, t, n) {
                    return this.determineDaysOfMonths(e, t) - n;
                  },
                },
                {
                  key: "determineDaysOfYear",
                  value: function (e) {
                    var t = 365;
                    return this.isLeapYear(e) && (t = 366), t;
                  },
                },
                {
                  key: "determineRemainingDaysOfYear",
                  value: function (e, t, n) {
                    var i = this.daysCntOfYear[t] + n;
                    return t > 1 && this.isLeapYear() && i++, i;
                  },
                },
                {
                  key: "determineDaysOfMonths",
                  value: function (e, t) {
                    var n = 30;
                    switch (((e = y.monthMod(e)), !0)) {
                      case this.months30.indexOf(e) > -1:
                        2 === e && (n = this.isLeapYear(t) ? 29 : 28);
                        break;
                      case this.months31.indexOf(e) > -1:
                      default:
                        n = 31;
                    }
                    return n;
                  },
                },
              ]),
              e
            );
          })(),
          E = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.tooltipKeyFormat = "dd MMM");
            }
            return (
              c(e, [
                {
                  key: "xLabelFormat",
                  value: function (e, t, n, i) {
                    var o = this.w;
                    if (
                      "datetime" === o.config.xaxis.type &&
                      void 0 === o.config.xaxis.labels.formatter &&
                      void 0 === o.config.tooltip.x.formatter
                    ) {
                      var a = new P(this.ctx);
                      return a.formatDate(
                        a.getDate(t),
                        o.config.tooltip.x.format
                      );
                    }
                    return e(t, n, i);
                  },
                },
                {
                  key: "defaultGeneralFormatter",
                  value: function (e) {
                    return Array.isArray(e)
                      ? e.map(function (e) {
                          return e;
                        })
                      : e;
                  },
                },
                {
                  key: "defaultYFormatter",
                  value: function (e, t, n) {
                    var i = this.w;
                    if (y.isNumber(e))
                      if (0 !== i.globals.yValueDecimal)
                        e = e.toFixed(
                          void 0 !== t.decimalsInFloat
                            ? t.decimalsInFloat
                            : i.globals.yValueDecimal
                        );
                      else {
                        var o = e.toFixed(0);
                        e = e == o ? o : e.toFixed(1);
                      }
                    return e;
                  },
                },
                {
                  key: "setLabelFormatters",
                  value: function () {
                    var e = this,
                      t = this.w;
                    return (
                      (t.globals.xaxisTooltipFormatter = function (t) {
                        return e.defaultGeneralFormatter(t);
                      }),
                      (t.globals.ttKeyFormatter = function (t) {
                        return e.defaultGeneralFormatter(t);
                      }),
                      (t.globals.ttZFormatter = function (e) {
                        return e;
                      }),
                      (t.globals.legendFormatter = function (t) {
                        return e.defaultGeneralFormatter(t);
                      }),
                      void 0 !== t.config.xaxis.labels.formatter
                        ? (t.globals.xLabelFormatter =
                            t.config.xaxis.labels.formatter)
                        : (t.globals.xLabelFormatter = function (e) {
                            if (y.isNumber(e)) {
                              if (
                                !t.config.xaxis.convertedCatToNumeric &&
                                "numeric" === t.config.xaxis.type
                              ) {
                                if (y.isNumber(t.config.xaxis.decimalsInFloat))
                                  return e.toFixed(
                                    t.config.xaxis.decimalsInFloat
                                  );
                                var n = t.globals.maxX - t.globals.minX;
                                return n > 0 && n < 100
                                  ? e.toFixed(1)
                                  : e.toFixed(0);
                              }
                              return t.globals.isBarHorizontal &&
                                t.globals.maxY - t.globals.minYArr < 4
                                ? e.toFixed(1)
                                : e.toFixed(0);
                            }
                            return e;
                          }),
                      "function" == typeof t.config.tooltip.x.formatter
                        ? (t.globals.ttKeyFormatter =
                            t.config.tooltip.x.formatter)
                        : (t.globals.ttKeyFormatter =
                            t.globals.xLabelFormatter),
                      "function" == typeof t.config.xaxis.tooltip.formatter &&
                        (t.globals.xaxisTooltipFormatter =
                          t.config.xaxis.tooltip.formatter),
                      (Array.isArray(t.config.tooltip.y) ||
                        void 0 !== t.config.tooltip.y.formatter) &&
                        (t.globals.ttVal = t.config.tooltip.y),
                      void 0 !== t.config.tooltip.z.formatter &&
                        (t.globals.ttZFormatter = t.config.tooltip.z.formatter),
                      void 0 !== t.config.legend.formatter &&
                        (t.globals.legendFormatter = t.config.legend.formatter),
                      t.config.yaxis.forEach(function (n, i) {
                        void 0 !== n.labels.formatter
                          ? (t.globals.yLabelFormatters[i] = n.labels.formatter)
                          : (t.globals.yLabelFormatters[i] = function (o) {
                              return t.globals.xyCharts
                                ? Array.isArray(o)
                                  ? o.map(function (t) {
                                      return e.defaultYFormatter(t, n, i);
                                    })
                                  : e.defaultYFormatter(o, n, i)
                                : o;
                            });
                      }),
                      t.globals
                    );
                  },
                },
                {
                  key: "heatmapLabelFormatters",
                  value: function () {
                    var e = this.w;
                    if ("heatmap" === e.config.chart.type) {
                      e.globals.yAxisScale[0].result =
                        e.globals.seriesNames.slice();
                      var t = e.globals.seriesNames.reduce(function (e, t) {
                        return e.length > t.length ? e : t;
                      }, 0);
                      (e.globals.yAxisScale[0].niceMax = t),
                        (e.globals.yAxisScale[0].niceMin = t);
                    }
                  },
                },
              ]),
              e
            );
          })(),
          L = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "getLabel",
                  value: function (e, t, n, i) {
                    var o,
                      a,
                      s =
                        arguments.length > 4 && void 0 !== arguments[4]
                          ? arguments[4]
                          : [],
                      r =
                        arguments.length > 5 && void 0 !== arguments[5]
                          ? arguments[5]
                          : "12px",
                      l =
                        !(arguments.length > 6 && void 0 !== arguments[6]) ||
                        arguments[6],
                      c = this.w,
                      u = void 0 === e[i] ? "" : e[i],
                      d = u,
                      h = c.globals.xLabelFormatter,
                      p = c.config.xaxis.labels.formatter,
                      f = !1,
                      g = new E(this.ctx),
                      m = u;
                    l &&
                      ((d = g.xLabelFormat(h, u, m, {
                        i: i,
                        dateFormatter: new P(this.ctx).formatDate,
                        w: c,
                      })),
                      void 0 !== p &&
                        (d = p(u, e[i], {
                          i: i,
                          dateFormatter: new P(this.ctx).formatDate,
                          w: c,
                        }))),
                      t.length > 0
                        ? ((o = t[i].unit),
                          (a = null),
                          t.forEach(function (e) {
                            "month" === e.unit
                              ? (a = "year")
                              : "day" === e.unit
                              ? (a = "month")
                              : "hour" === e.unit
                              ? (a = "day")
                              : "minute" === e.unit && (a = "hour");
                          }),
                          (f = a === o),
                          (n = t[i].position),
                          (d = t[i].value))
                        : "datetime" === c.config.xaxis.type &&
                          void 0 === p &&
                          (d = ""),
                      void 0 === d && (d = ""),
                      (d = Array.isArray(d) ? d : d.toString());
                    var v,
                      b = new k(this.ctx);
                    v =
                      c.globals.rotateXLabels && l
                        ? b.getTextRects(
                            d,
                            parseInt(r, 10),
                            null,
                            "rotate(".concat(
                              c.config.xaxis.labels.rotate,
                              " 0 0)"
                            ),
                            !1
                          )
                        : b.getTextRects(d, parseInt(r, 10));
                    var x =
                      !c.config.xaxis.labels.showDuplicates &&
                      this.ctx.timeScale;
                    return (
                      !Array.isArray(d) &&
                        ("NaN" === String(d) || (s.indexOf(d) >= 0 && x)) &&
                        (d = ""),
                      { x: n, text: d, textRect: v, isBold: f }
                    );
                  },
                },
                {
                  key: "checkLabelBasedOnTickamount",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = i.config.xaxis.tickAmount;
                    return (
                      "dataPoints" === o &&
                        (o = Math.round(i.globals.gridWidth / 120)),
                      o > n ||
                        e % Math.round(n / (o + 1)) == 0 ||
                        (t.text = ""),
                      t
                    );
                  },
                },
                {
                  key: "checkForOverflowingLabels",
                  value: function (e, t, n, i, o) {
                    var a = this.w;
                    if (
                      (0 === e &&
                        a.globals.skipFirstTimelinelabel &&
                        (t.text = ""),
                      e === n - 1 &&
                        a.globals.skipLastTimelinelabel &&
                        (t.text = ""),
                      a.config.xaxis.labels.hideOverlappingLabels &&
                        i.length > 0)
                    ) {
                      var s = o[o.length - 1];
                      t.x <
                        s.textRect.width /
                          (a.globals.rotateXLabels
                            ? Math.abs(a.config.xaxis.labels.rotate) / 12
                            : 1.01) +
                          s.x && (t.text = "");
                    }
                    return t;
                  },
                },
                {
                  key: "checkForReversedLabels",
                  value: function (e, t) {
                    var n = this.w;
                    return (
                      n.config.yaxis[e] &&
                        n.config.yaxis[e].reversed &&
                        t.reverse(),
                      t
                    );
                  },
                },
                {
                  key: "yAxisAllSeriesCollapsed",
                  value: function (e) {
                    var t = this.w.globals;
                    return !t.seriesYAxisMap[e].some(function (e) {
                      return -1 === t.collapsedSeriesIndices.indexOf(e);
                    });
                  },
                },
                {
                  key: "translateYAxisIndex",
                  value: function (e) {
                    var t = this.w,
                      n = t.globals,
                      i = t.config.yaxis;
                    return n.series.length > i.length ||
                      i.some(function (e) {
                        return Array.isArray(e.seriesName);
                      })
                      ? e
                      : n.seriesYAxisReverseMap[e];
                  },
                },
                {
                  key: "isYAxisHidden",
                  value: function (e) {
                    var t = this.w,
                      n = t.config.yaxis[e];
                    if (!n.show || this.yAxisAllSeriesCollapsed(e)) return !0;
                    if (!n.showForNullSeries) {
                      var i = t.globals.seriesYAxisMap[e],
                        o = new A(this.ctx);
                      return i.every(function (e) {
                        return o.isSeriesNull(e);
                      });
                    }
                    return !1;
                  },
                },
                {
                  key: "getYAxisForeColor",
                  value: function (e, t) {
                    var n = this.w;
                    return (
                      Array.isArray(e) &&
                        n.globals.yAxisScale[t] &&
                        this.ctx.theme.pushExtraColors(
                          e,
                          n.globals.yAxisScale[t].result.length,
                          !1
                        ),
                      e
                    );
                  },
                },
                {
                  key: "drawYAxisTicks",
                  value: function (e, t, n, i, o, a, s) {
                    var r = this.w,
                      l = new k(this.ctx),
                      c =
                        r.globals.translateY + r.config.yaxis[o].labels.offsetY;
                    if (
                      (r.globals.isBarHorizontal
                        ? (c = 0)
                        : "heatmap" === r.config.chart.type && (c += a / 2),
                      i.show && t > 0)
                    ) {
                      !0 === r.config.yaxis[o].opposite && (e += i.width);
                      for (var u = t; u >= 0; u--) {
                        var d = l.drawLine(
                          e + n.offsetX - i.width + i.offsetX,
                          c + i.offsetY,
                          e + n.offsetX + i.offsetX,
                          c + i.offsetY,
                          i.color
                        );
                        s.add(d), (c += a);
                      }
                    }
                  },
                },
              ]),
              e
            );
          })(),
          T = (function () {
            function e(t) {
              r(this, e),
                (this.w = t.w),
                (this.annoCtx = t),
                (this.helpers = new C(this.annoCtx)),
                (this.axesUtils = new L(this.annoCtx));
            }
            return (
              c(e, [
                {
                  key: "addYaxisAnnotation",
                  value: function (e, t, n) {
                    var i,
                      o = this.w,
                      a = e.strokeDashArray,
                      s = this.helpers.getY1Y2("y1", e),
                      r = s.yP,
                      l = s.clipped,
                      c = !0,
                      u = !1,
                      d = e.label.text;
                    if (null === e.y2 || void 0 === e.y2) {
                      if (!l) {
                        u = !0;
                        var h = this.annoCtx.graphics.drawLine(
                          0 + e.offsetX,
                          r + e.offsetY,
                          this._getYAxisAnnotationWidth(e),
                          r + e.offsetY,
                          e.borderColor,
                          a,
                          e.borderWidth
                        );
                        t.appendChild(h.node),
                          e.id && h.node.classList.add(e.id);
                      }
                    } else {
                      if (
                        ((i = (s = this.helpers.getY1Y2("y2", e)).yP),
                        (c = s.clipped),
                        i > r)
                      ) {
                        var p = r;
                        (r = i), (i = p);
                      }
                      if (!l || !c) {
                        u = !0;
                        var f = this.annoCtx.graphics.drawRect(
                          0 + e.offsetX,
                          i + e.offsetY,
                          this._getYAxisAnnotationWidth(e),
                          r - i,
                          0,
                          e.fillColor,
                          e.opacity,
                          1,
                          e.borderColor,
                          a
                        );
                        f.node.classList.add("apexcharts-annotation-rect"),
                          f.attr(
                            "clip-path",
                            "url(#gridRectMask".concat(o.globals.cuid, ")")
                          ),
                          t.appendChild(f.node),
                          e.id && f.node.classList.add(e.id);
                      }
                    }
                    if (u) {
                      var g =
                          "right" === e.label.position
                            ? o.globals.gridWidth
                            : "center" === e.label.position
                            ? o.globals.gridWidth / 2
                            : 0,
                        m = this.annoCtx.graphics.drawText({
                          x: g + e.label.offsetX,
                          y: (null != i ? i : r) + e.label.offsetY - 3,
                          text: d,
                          textAnchor: e.label.textAnchor,
                          fontSize: e.label.style.fontSize,
                          fontFamily: e.label.style.fontFamily,
                          fontWeight: e.label.style.fontWeight,
                          foreColor: e.label.style.color,
                          cssClass: "apexcharts-yaxis-annotation-label "
                            .concat(e.label.style.cssClass, " ")
                            .concat(e.id ? e.id : ""),
                        });
                      m.attr({ rel: n }), t.appendChild(m.node);
                    }
                  },
                },
                {
                  key: "_getYAxisAnnotationWidth",
                  value: function (e) {
                    var t = this.w;
                    return (
                      t.globals.gridWidth,
                      (e.width.indexOf("%") > -1
                        ? (t.globals.gridWidth * parseInt(e.width, 10)) / 100
                        : parseInt(e.width, 10)) + e.offsetX
                    );
                  },
                },
                {
                  key: "drawYAxisAnnotations",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = this.annoCtx.graphics.group({
                        class: "apexcharts-yaxis-annotations",
                      });
                    return (
                      t.config.annotations.yaxis.forEach(function (t, i) {
                        (t.yAxisIndex = e.axesUtils.translateYAxisIndex(
                          t.yAxisIndex
                        )),
                          (e.axesUtils.isYAxisHidden(t.yAxisIndex) &&
                            e.axesUtils.yAxisAllSeriesCollapsed(
                              t.yAxisIndex
                            )) ||
                            e.addYaxisAnnotation(t, n.node, i);
                      }),
                      n
                    );
                  },
                },
              ]),
              e
            );
          })(),
          O = (function () {
            function e(t) {
              r(this, e),
                (this.w = t.w),
                (this.annoCtx = t),
                (this.helpers = new C(this.annoCtx));
            }
            return (
              c(e, [
                {
                  key: "addPointAnnotation",
                  value: function (e, t, n) {
                    if (
                      !(
                        this.w.globals.collapsedSeriesIndices.indexOf(
                          e.seriesIndex
                        ) > -1
                      )
                    ) {
                      var i = this.helpers.getX1X2("x1", e),
                        o = i.x,
                        a = i.clipped,
                        s = (i = this.helpers.getY1Y2("y1", e)).yP,
                        r = i.clipped;
                      if (y.isNumber(o) && !r && !a) {
                        var l = {
                            pSize: e.marker.size,
                            pointStrokeWidth: e.marker.strokeWidth,
                            pointFillColor: e.marker.fillColor,
                            pointStrokeColor: e.marker.strokeColor,
                            shape: e.marker.shape,
                            pRadius: e.marker.radius,
                            class: "apexcharts-point-annotation-marker "
                              .concat(e.marker.cssClass, " ")
                              .concat(e.id ? e.id : ""),
                          },
                          c = this.annoCtx.graphics.drawMarker(
                            o + e.marker.offsetX,
                            s + e.marker.offsetY,
                            l
                          );
                        t.appendChild(c.node);
                        var u = e.label.text ? e.label.text : "",
                          d = this.annoCtx.graphics.drawText({
                            x: o + e.label.offsetX,
                            y:
                              s +
                              e.label.offsetY -
                              e.marker.size -
                              parseFloat(e.label.style.fontSize) / 1.6,
                            text: u,
                            textAnchor: e.label.textAnchor,
                            fontSize: e.label.style.fontSize,
                            fontFamily: e.label.style.fontFamily,
                            fontWeight: e.label.style.fontWeight,
                            foreColor: e.label.style.color,
                            cssClass: "apexcharts-point-annotation-label "
                              .concat(e.label.style.cssClass, " ")
                              .concat(e.id ? e.id : ""),
                          });
                        if (
                          (d.attr({ rel: n }),
                          t.appendChild(d.node),
                          e.customSVG.SVG)
                        ) {
                          var h = this.annoCtx.graphics.group({
                            class:
                              "apexcharts-point-annotations-custom-svg " +
                              e.customSVG.cssClass,
                          });
                          h.attr({
                            transform: "translate("
                              .concat(o + e.customSVG.offsetX, ", ")
                              .concat(s + e.customSVG.offsetY, ")"),
                          }),
                            (h.node.innerHTML = e.customSVG.SVG),
                            t.appendChild(h.node);
                        }
                        if (e.image.path) {
                          var p = e.image.width ? e.image.width : 20,
                            f = e.image.height ? e.image.height : 20;
                          c = this.annoCtx.addImage({
                            x: o + e.image.offsetX - p / 2,
                            y: s + e.image.offsetY - f / 2,
                            width: p,
                            height: f,
                            path: e.image.path,
                            appendTo: ".apexcharts-point-annotations",
                          });
                        }
                        e.mouseEnter &&
                          c.node.addEventListener(
                            "mouseenter",
                            e.mouseEnter.bind(this, e)
                          ),
                          e.mouseLeave &&
                            c.node.addEventListener(
                              "mouseleave",
                              e.mouseLeave.bind(this, e)
                            ),
                          e.click &&
                            c.node.addEventListener(
                              "click",
                              e.click.bind(this, e)
                            );
                      }
                    }
                  },
                },
                {
                  key: "drawPointAnnotations",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = this.annoCtx.graphics.group({
                        class: "apexcharts-point-annotations",
                      });
                    return (
                      t.config.annotations.points.map(function (t, i) {
                        e.addPointAnnotation(t, n.node, i);
                      }),
                      n
                    );
                  },
                },
              ]),
              e
            );
          })(),
          R = {
            name: "en",
            options: {
              months: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
              ],
              shortMonths: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
              ],
              days: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ],
              shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
              toolbar: {
                exportToSVG: "Download SVG",
                exportToPNG: "Download PNG",
                exportToCSV: "Download CSV",
                menu: "Menu",
                selection: "Selection",
                selectionZoom: "Selection Zoom",
                zoomIn: "Zoom In",
                zoomOut: "Zoom Out",
                pan: "Panning",
                reset: "Reset Zoom",
              },
            },
          },
          I = (function () {
            function e() {
              r(this, e),
                (this.yAxis = {
                  show: !0,
                  showAlways: !1,
                  showForNullSeries: !0,
                  seriesName: void 0,
                  opposite: !1,
                  reversed: !1,
                  logarithmic: !1,
                  logBase: 10,
                  tickAmount: void 0,
                  stepSize: void 0,
                  forceNiceScale: !1,
                  max: void 0,
                  min: void 0,
                  floating: !1,
                  decimalsInFloat: void 0,
                  labels: {
                    show: !0,
                    minWidth: 0,
                    maxWidth: 160,
                    offsetX: 0,
                    offsetY: 0,
                    align: void 0,
                    rotate: 0,
                    padding: 20,
                    style: {
                      colors: [],
                      fontSize: "11px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                    formatter: void 0,
                  },
                  axisBorder: {
                    show: !1,
                    color: "#e0e0e0",
                    width: 1,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  axisTicks: {
                    show: !1,
                    color: "#e0e0e0",
                    width: 6,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  title: {
                    text: void 0,
                    rotate: -90,
                    offsetY: 0,
                    offsetX: 0,
                    style: {
                      color: void 0,
                      fontSize: "11px",
                      fontWeight: 900,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  tooltip: { enabled: !1, offsetX: 0 },
                  crosshairs: {
                    show: !0,
                    position: "front",
                    stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
                  },
                }),
                (this.pointAnnotation = {
                  id: void 0,
                  x: 0,
                  y: null,
                  yAxisIndex: 0,
                  seriesIndex: void 0,
                  mouseEnter: void 0,
                  mouseLeave: void 0,
                  click: void 0,
                  marker: {
                    size: 4,
                    fillColor: "#fff",
                    strokeWidth: 2,
                    strokeColor: "#333",
                    shape: "circle",
                    offsetX: 0,
                    offsetY: 0,
                    cssClass: "",
                  },
                  label: {
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    borderRadius: 2,
                    text: void 0,
                    textAnchor: "middle",
                    offsetX: 0,
                    offsetY: 0,
                    mouseEnter: void 0,
                    mouseLeave: void 0,
                    click: void 0,
                    style: {
                      background: "#fff",
                      color: void 0,
                      fontSize: "11px",
                      fontFamily: void 0,
                      fontWeight: 400,
                      cssClass: "",
                      padding: { left: 5, right: 5, top: 2, bottom: 2 },
                    },
                  },
                  customSVG: {
                    SVG: void 0,
                    cssClass: void 0,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  image: {
                    path: void 0,
                    width: 20,
                    height: 20,
                    offsetX: 0,
                    offsetY: 0,
                  },
                }),
                (this.yAxisAnnotation = {
                  id: void 0,
                  y: 0,
                  y2: null,
                  strokeDashArray: 1,
                  fillColor: "#c2c2c2",
                  borderColor: "#c2c2c2",
                  borderWidth: 1,
                  opacity: 0.3,
                  offsetX: 0,
                  offsetY: 0,
                  width: "100%",
                  yAxisIndex: 0,
                  label: {
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    borderRadius: 2,
                    text: void 0,
                    textAnchor: "end",
                    position: "right",
                    offsetX: 0,
                    offsetY: -3,
                    mouseEnter: void 0,
                    mouseLeave: void 0,
                    click: void 0,
                    style: {
                      background: "#fff",
                      color: void 0,
                      fontSize: "11px",
                      fontFamily: void 0,
                      fontWeight: 400,
                      cssClass: "",
                      padding: { left: 5, right: 5, top: 2, bottom: 2 },
                    },
                  },
                }),
                (this.xAxisAnnotation = {
                  id: void 0,
                  x: 0,
                  x2: null,
                  strokeDashArray: 1,
                  fillColor: "#c2c2c2",
                  borderColor: "#c2c2c2",
                  borderWidth: 1,
                  opacity: 0.3,
                  offsetX: 0,
                  offsetY: 0,
                  label: {
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    borderRadius: 2,
                    text: void 0,
                    textAnchor: "middle",
                    orientation: "vertical",
                    position: "top",
                    offsetX: 0,
                    offsetY: 0,
                    mouseEnter: void 0,
                    mouseLeave: void 0,
                    click: void 0,
                    style: {
                      background: "#fff",
                      color: void 0,
                      fontSize: "11px",
                      fontFamily: void 0,
                      fontWeight: 400,
                      cssClass: "",
                      padding: { left: 5, right: 5, top: 2, bottom: 2 },
                    },
                  },
                }),
                (this.text = {
                  x: 0,
                  y: 0,
                  text: "",
                  textAnchor: "start",
                  foreColor: void 0,
                  fontSize: "13px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  appendTo: ".apexcharts-annotations",
                  backgroundColor: "transparent",
                  borderColor: "#c2c2c2",
                  borderRadius: 0,
                  borderWidth: 0,
                  paddingLeft: 4,
                  paddingRight: 4,
                  paddingTop: 2,
                  paddingBottom: 2,
                });
            }
            return (
              c(e, [
                {
                  key: "init",
                  value: function () {
                    return {
                      annotations: {
                        yaxis: [this.yAxisAnnotation],
                        xaxis: [this.xAxisAnnotation],
                        points: [this.pointAnnotation],
                        texts: [],
                        images: [],
                        shapes: [],
                      },
                      chart: {
                        animations: {
                          enabled: !0,
                          easing: "easeinout",
                          speed: 800,
                          animateGradually: { delay: 150, enabled: !0 },
                          dynamicAnimation: { enabled: !0, speed: 350 },
                        },
                        background: "",
                        locales: [R],
                        defaultLocale: "en",
                        dropShadow: {
                          enabled: !1,
                          enabledOnSeries: void 0,
                          top: 2,
                          left: 2,
                          blur: 4,
                          color: "#000",
                          opacity: 0.35,
                        },
                        events: {
                          animationEnd: void 0,
                          beforeMount: void 0,
                          mounted: void 0,
                          updated: void 0,
                          click: void 0,
                          mouseMove: void 0,
                          mouseLeave: void 0,
                          xAxisLabelClick: void 0,
                          legendClick: void 0,
                          markerClick: void 0,
                          selection: void 0,
                          dataPointSelection: void 0,
                          dataPointMouseEnter: void 0,
                          dataPointMouseLeave: void 0,
                          beforeZoom: void 0,
                          beforeResetZoom: void 0,
                          zoomed: void 0,
                          scrolled: void 0,
                          brushScrolled: void 0,
                        },
                        foreColor: "#373d3f",
                        fontFamily: "Helvetica, Arial, sans-serif",
                        height: "auto",
                        parentHeightOffset: 15,
                        redrawOnParentResize: !0,
                        redrawOnWindowResize: !0,
                        id: void 0,
                        group: void 0,
                        nonce: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        selection: {
                          enabled: !1,
                          type: "x",
                          fill: { color: "#24292e", opacity: 0.1 },
                          stroke: {
                            width: 1,
                            color: "#24292e",
                            opacity: 0.4,
                            dashArray: 3,
                          },
                          xaxis: { min: void 0, max: void 0 },
                          yaxis: { min: void 0, max: void 0 },
                        },
                        sparkline: { enabled: !1 },
                        brush: {
                          enabled: !1,
                          autoScaleYaxis: !0,
                          target: void 0,
                          targets: void 0,
                        },
                        stacked: !1,
                        stackOnlyBar: !0,
                        stackType: "normal",
                        toolbar: {
                          show: !0,
                          offsetX: 0,
                          offsetY: 0,
                          tools: {
                            download: !0,
                            selection: !0,
                            zoom: !0,
                            zoomin: !0,
                            zoomout: !0,
                            pan: !0,
                            reset: !0,
                            customIcons: [],
                          },
                          export: {
                            csv: {
                              filename: void 0,
                              columnDelimiter: ",",
                              headerCategory: "category",
                              headerValue: "value",
                              categoryFormatter: void 0,
                              valueFormatter: void 0,
                            },
                            png: { filename: void 0 },
                            svg: { filename: void 0 },
                          },
                          autoSelected: "zoom",
                        },
                        type: "line",
                        width: "100%",
                        zoom: {
                          enabled: !0,
                          type: "x",
                          autoScaleYaxis: !1,
                          zoomedArea: {
                            fill: { color: "#90CAF9", opacity: 0.4 },
                            stroke: {
                              color: "#0D47A1",
                              opacity: 0.4,
                              width: 1,
                            },
                          },
                        },
                      },
                      plotOptions: {
                        line: { isSlopeChart: !1 },
                        area: { fillTo: "origin" },
                        bar: {
                          horizontal: !1,
                          columnWidth: "70%",
                          barHeight: "70%",
                          distributed: !1,
                          borderRadius: 0,
                          borderRadiusApplication: "around",
                          borderRadiusWhenStacked: "last",
                          rangeBarOverlap: !0,
                          rangeBarGroupRows: !1,
                          hideZeroBarsWhenGrouped: !1,
                          isDumbbell: !1,
                          dumbbellColors: void 0,
                          isFunnel: !1,
                          isFunnel3d: !0,
                          colors: {
                            ranges: [],
                            backgroundBarColors: [],
                            backgroundBarOpacity: 1,
                            backgroundBarRadius: 0,
                          },
                          dataLabels: {
                            position: "top",
                            maxItems: 100,
                            hideOverflowingLabels: !0,
                            orientation: "horizontal",
                            total: {
                              enabled: !1,
                              formatter: void 0,
                              offsetX: 0,
                              offsetY: 0,
                              style: {
                                color: "#373d3f",
                                fontSize: "12px",
                                fontFamily: void 0,
                                fontWeight: 600,
                              },
                            },
                          },
                        },
                        bubble: {
                          zScaling: !0,
                          minBubbleRadius: void 0,
                          maxBubbleRadius: void 0,
                        },
                        candlestick: {
                          colors: { upward: "#00B746", downward: "#EF403C" },
                          wick: { useFillColor: !0 },
                        },
                        boxPlot: {
                          colors: { upper: "#00E396", lower: "#008FFB" },
                        },
                        heatmap: {
                          radius: 2,
                          enableShades: !0,
                          shadeIntensity: 0.5,
                          reverseNegativeShade: !1,
                          distributed: !1,
                          useFillColorAsStroke: !1,
                          colorScale: {
                            inverse: !1,
                            ranges: [],
                            min: void 0,
                            max: void 0,
                          },
                        },
                        treemap: {
                          enableShades: !0,
                          shadeIntensity: 0.5,
                          distributed: !1,
                          reverseNegativeShade: !1,
                          useFillColorAsStroke: !1,
                          borderRadius: 4,
                          dataLabels: { format: "scale" },
                          colorScale: {
                            inverse: !1,
                            ranges: [],
                            min: void 0,
                            max: void 0,
                          },
                        },
                        radialBar: {
                          inverseOrder: !1,
                          startAngle: 0,
                          endAngle: 360,
                          offsetX: 0,
                          offsetY: 0,
                          hollow: {
                            margin: 5,
                            size: "50%",
                            background: "transparent",
                            image: void 0,
                            imageWidth: 150,
                            imageHeight: 150,
                            imageOffsetX: 0,
                            imageOffsetY: 0,
                            imageClipped: !0,
                            position: "front",
                            dropShadow: {
                              enabled: !1,
                              top: 0,
                              left: 0,
                              blur: 3,
                              color: "#000",
                              opacity: 0.5,
                            },
                          },
                          track: {
                            show: !0,
                            startAngle: void 0,
                            endAngle: void 0,
                            background: "#f2f2f2",
                            strokeWidth: "97%",
                            opacity: 1,
                            margin: 5,
                            dropShadow: {
                              enabled: !1,
                              top: 0,
                              left: 0,
                              blur: 3,
                              color: "#000",
                              opacity: 0.5,
                            },
                          },
                          dataLabels: {
                            show: !0,
                            name: {
                              show: !0,
                              fontSize: "16px",
                              fontFamily: void 0,
                              fontWeight: 600,
                              color: void 0,
                              offsetY: 0,
                              formatter: function (e) {
                                return e;
                              },
                            },
                            value: {
                              show: !0,
                              fontSize: "14px",
                              fontFamily: void 0,
                              fontWeight: 400,
                              color: void 0,
                              offsetY: 16,
                              formatter: function (e) {
                                return e + "%";
                              },
                            },
                            total: {
                              show: !1,
                              label: "Total",
                              fontSize: "16px",
                              fontWeight: 600,
                              fontFamily: void 0,
                              color: void 0,
                              formatter: function (e) {
                                return (
                                  e.globals.seriesTotals.reduce(function (
                                    e,
                                    t
                                  ) {
                                    return e + t;
                                  },
                                  0) /
                                    e.globals.series.length +
                                  "%"
                                );
                              },
                            },
                          },
                          barLabels: {
                            enabled: !1,
                            offsetX: 0,
                            offsetY: 0,
                            useSeriesColors: !0,
                            fontFamily: void 0,
                            fontWeight: 600,
                            fontSize: "16px",
                            formatter: function (e) {
                              return e;
                            },
                            onClick: void 0,
                          },
                        },
                        pie: {
                          customScale: 1,
                          offsetX: 0,
                          offsetY: 0,
                          startAngle: 0,
                          endAngle: 360,
                          expandOnClick: !0,
                          dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                          donut: {
                            size: "65%",
                            background: "transparent",
                            labels: {
                              show: !1,
                              name: {
                                show: !0,
                                fontSize: "16px",
                                fontFamily: void 0,
                                fontWeight: 600,
                                color: void 0,
                                offsetY: -10,
                                formatter: function (e) {
                                  return e;
                                },
                              },
                              value: {
                                show: !0,
                                fontSize: "20px",
                                fontFamily: void 0,
                                fontWeight: 400,
                                color: void 0,
                                offsetY: 10,
                                formatter: function (e) {
                                  return e;
                                },
                              },
                              total: {
                                show: !1,
                                showAlways: !1,
                                label: "Total",
                                fontSize: "16px",
                                fontWeight: 400,
                                fontFamily: void 0,
                                color: void 0,
                                formatter: function (e) {
                                  return e.globals.seriesTotals.reduce(
                                    function (e, t) {
                                      return e + t;
                                    },
                                    0
                                  );
                                },
                              },
                            },
                          },
                        },
                        polarArea: {
                          rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                          spokes: {
                            strokeWidth: 1,
                            connectorColors: "#e8e8e8",
                          },
                        },
                        radar: {
                          size: void 0,
                          offsetX: 0,
                          offsetY: 0,
                          polygons: {
                            strokeWidth: 1,
                            strokeColors: "#e8e8e8",
                            connectorColors: "#e8e8e8",
                            fill: { colors: void 0 },
                          },
                        },
                      },
                      colors: void 0,
                      dataLabels: {
                        enabled: !0,
                        enabledOnSeries: void 0,
                        formatter: function (e) {
                          return null !== e ? e : "";
                        },
                        textAnchor: "middle",
                        distributed: !1,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          fontSize: "12px",
                          fontFamily: void 0,
                          fontWeight: 600,
                          colors: void 0,
                        },
                        background: {
                          enabled: !0,
                          foreColor: "#fff",
                          borderRadius: 2,
                          padding: 4,
                          opacity: 0.9,
                          borderWidth: 1,
                          borderColor: "#fff",
                          dropShadow: {
                            enabled: !1,
                            top: 1,
                            left: 1,
                            blur: 1,
                            color: "#000",
                            opacity: 0.45,
                          },
                        },
                        dropShadow: {
                          enabled: !1,
                          top: 1,
                          left: 1,
                          blur: 1,
                          color: "#000",
                          opacity: 0.45,
                        },
                      },
                      fill: {
                        type: "solid",
                        colors: void 0,
                        opacity: 0.85,
                        gradient: {
                          shade: "dark",
                          type: "horizontal",
                          shadeIntensity: 0.5,
                          gradientToColors: void 0,
                          inverseColors: !0,
                          opacityFrom: 1,
                          opacityTo: 1,
                          stops: [0, 50, 100],
                          colorStops: [],
                        },
                        image: { src: [], width: void 0, height: void 0 },
                        pattern: {
                          style: "squares",
                          width: 6,
                          height: 6,
                          strokeWidth: 2,
                        },
                      },
                      forecastDataPoints: {
                        count: 0,
                        fillOpacity: 0.5,
                        strokeWidth: void 0,
                        dashArray: 4,
                      },
                      grid: {
                        show: !0,
                        borderColor: "#e0e0e0",
                        strokeDashArray: 0,
                        position: "back",
                        xaxis: { lines: { show: !1 } },
                        yaxis: { lines: { show: !0 } },
                        row: { colors: void 0, opacity: 0.5 },
                        column: { colors: void 0, opacity: 0.5 },
                        padding: { top: 0, right: 10, bottom: 0, left: 12 },
                      },
                      labels: [],
                      legend: {
                        show: !0,
                        showForSingleSeries: !1,
                        showForNullSeries: !0,
                        showForZeroSeries: !0,
                        floating: !1,
                        position: "bottom",
                        horizontalAlign: "center",
                        inverseOrder: !1,
                        fontSize: "12px",
                        fontFamily: void 0,
                        fontWeight: 400,
                        width: void 0,
                        height: void 0,
                        formatter: void 0,
                        tooltipHoverFormatter: void 0,
                        offsetX: -20,
                        offsetY: 4,
                        customLegendItems: [],
                        labels: { colors: void 0, useSeriesColors: !1 },
                        markers: {
                          size: 7,
                          fillColors: void 0,
                          strokeWidth: 1,
                          shape: void 0,
                          offsetX: 0,
                          offsetY: 0,
                          customHTML: void 0,
                          onClick: void 0,
                        },
                        itemMargin: { horizontal: 5, vertical: 4 },
                        onItemClick: { toggleDataSeries: !0 },
                        onItemHover: { highlightDataSeries: !0 },
                      },
                      markers: {
                        discrete: [],
                        size: 0,
                        colors: void 0,
                        strokeColors: "#fff",
                        strokeWidth: 2,
                        strokeOpacity: 0.9,
                        strokeDashArray: 0,
                        fillOpacity: 1,
                        shape: "circle",
                        offsetX: 0,
                        offsetY: 0,
                        showNullDataPoints: !0,
                        onClick: void 0,
                        onDblClick: void 0,
                        hover: { size: void 0, sizeOffset: 3 },
                      },
                      noData: {
                        text: void 0,
                        align: "center",
                        verticalAlign: "middle",
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: void 0,
                          fontSize: "14px",
                          fontFamily: void 0,
                        },
                      },
                      responsive: [],
                      series: void 0,
                      states: {
                        normal: { filter: { type: "none", value: 0 } },
                        hover: { filter: { type: "lighten", value: 0.1 } },
                        active: {
                          allowMultipleDataPointsSelection: !1,
                          filter: { type: "darken", value: 0.5 },
                        },
                      },
                      title: {
                        text: void 0,
                        align: "left",
                        margin: 5,
                        offsetX: 0,
                        offsetY: 0,
                        floating: !1,
                        style: {
                          fontSize: "14px",
                          fontWeight: 900,
                          fontFamily: void 0,
                          color: void 0,
                        },
                      },
                      subtitle: {
                        text: void 0,
                        align: "left",
                        margin: 5,
                        offsetX: 0,
                        offsetY: 30,
                        floating: !1,
                        style: {
                          fontSize: "12px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          color: void 0,
                        },
                      },
                      stroke: {
                        show: !0,
                        curve: "smooth",
                        lineCap: "butt",
                        width: 2,
                        colors: void 0,
                        dashArray: 0,
                        fill: {
                          type: "solid",
                          colors: void 0,
                          opacity: 0.85,
                          gradient: {
                            shade: "dark",
                            type: "horizontal",
                            shadeIntensity: 0.5,
                            gradientToColors: void 0,
                            inverseColors: !0,
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [0, 50, 100],
                            colorStops: [],
                          },
                        },
                      },
                      tooltip: {
                        enabled: !0,
                        enabledOnSeries: void 0,
                        shared: !0,
                        hideEmptySeries: !1,
                        followCursor: !1,
                        intersect: !1,
                        inverseOrder: !1,
                        custom: void 0,
                        fillSeriesColor: !1,
                        theme: "light",
                        cssClass: "",
                        style: { fontSize: "12px", fontFamily: void 0 },
                        onDatasetHover: { highlightDataSeries: !1 },
                        x: { show: !0, format: "dd MMM", formatter: void 0 },
                        y: {
                          formatter: void 0,
                          title: {
                            formatter: function (e) {
                              return e ? e + ": " : "";
                            },
                          },
                        },
                        z: { formatter: void 0, title: "Size: " },
                        marker: { show: !0, fillColors: void 0 },
                        items: { display: "flex" },
                        fixed: {
                          enabled: !1,
                          position: "topRight",
                          offsetX: 0,
                          offsetY: 0,
                        },
                      },
                      xaxis: {
                        type: "category",
                        categories: [],
                        convertedCatToNumeric: !1,
                        offsetX: 0,
                        offsetY: 0,
                        overwriteCategories: void 0,
                        labels: {
                          show: !0,
                          rotate: -45,
                          rotateAlways: !1,
                          hideOverlappingLabels: !0,
                          trim: !1,
                          minHeight: void 0,
                          maxHeight: 120,
                          showDuplicates: !0,
                          style: {
                            colors: [],
                            fontSize: "12px",
                            fontWeight: 400,
                            fontFamily: void 0,
                            cssClass: "",
                          },
                          offsetX: 0,
                          offsetY: 0,
                          format: void 0,
                          formatter: void 0,
                          datetimeUTC: !0,
                          datetimeFormatter: {
                            year: "yyyy",
                            month: "MMM 'yy",
                            day: "dd MMM",
                            hour: "HH:mm",
                            minute: "HH:mm:ss",
                            second: "HH:mm:ss",
                          },
                        },
                        group: {
                          groups: [],
                          style: {
                            colors: [],
                            fontSize: "12px",
                            fontWeight: 400,
                            fontFamily: void 0,
                            cssClass: "",
                          },
                        },
                        axisBorder: {
                          show: !0,
                          color: "#e0e0e0",
                          width: "100%",
                          height: 1,
                          offsetX: 0,
                          offsetY: 0,
                        },
                        axisTicks: {
                          show: !0,
                          color: "#e0e0e0",
                          height: 6,
                          offsetX: 0,
                          offsetY: 0,
                        },
                        stepSize: void 0,
                        tickAmount: void 0,
                        tickPlacement: "on",
                        min: void 0,
                        max: void 0,
                        range: void 0,
                        floating: !1,
                        decimalsInFloat: void 0,
                        position: "bottom",
                        title: {
                          text: void 0,
                          offsetX: 0,
                          offsetY: 0,
                          style: {
                            color: void 0,
                            fontSize: "12px",
                            fontWeight: 900,
                            fontFamily: void 0,
                            cssClass: "",
                          },
                        },
                        crosshairs: {
                          show: !0,
                          width: 1,
                          position: "back",
                          opacity: 0.9,
                          stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                          fill: {
                            type: "solid",
                            color: "#B1B9C4",
                            gradient: {
                              colorFrom: "#D8E3F0",
                              colorTo: "#BED1E6",
                              stops: [0, 100],
                              opacityFrom: 0.4,
                              opacityTo: 0.5,
                            },
                          },
                          dropShadow: {
                            enabled: !1,
                            left: 0,
                            top: 0,
                            blur: 1,
                            opacity: 0.4,
                          },
                        },
                        tooltip: {
                          enabled: !0,
                          offsetY: 0,
                          formatter: void 0,
                          style: { fontSize: "12px", fontFamily: void 0 },
                        },
                      },
                      yaxis: this.yAxis,
                      theme: {
                        mode: "",
                        palette: "palette1",
                        monochrome: {
                          enabled: !1,
                          color: "#008FFB",
                          shadeTo: "light",
                          shadeIntensity: 0.65,
                        },
                      },
                    };
                  },
                },
              ]),
              e
            );
          })(),
          N = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.graphics = new k(this.ctx)),
                this.w.globals.isBarHorizontal && (this.invertAxis = !0),
                (this.helpers = new C(this)),
                (this.xAxisAnnotations = new M(this)),
                (this.yAxisAnnotations = new T(this)),
                (this.pointsAnnotations = new O(this)),
                this.w.globals.isBarHorizontal &&
                  this.w.config.yaxis[0].reversed &&
                  (this.inversedReversedAxis = !0),
                (this.xDivision =
                  this.w.globals.gridWidth / this.w.globals.dataPoints);
            }
            return (
              c(e, [
                {
                  key: "drawAxesAnnotations",
                  value: function () {
                    var e = this.w;
                    if (e.globals.axisCharts) {
                      for (
                        var t = this.yAxisAnnotations.drawYAxisAnnotations(),
                          n = this.xAxisAnnotations.drawXAxisAnnotations(),
                          i = this.pointsAnnotations.drawPointAnnotations(),
                          o = e.config.chart.animations.enabled,
                          a = [t, n, i],
                          s = [n.node, t.node, i.node],
                          r = 0;
                        r < 3;
                        r++
                      )
                        e.globals.dom.elGraphical.add(a[r]),
                          !o ||
                            e.globals.resized ||
                            e.globals.dataChanged ||
                            ("scatter" !== e.config.chart.type &&
                              "bubble" !== e.config.chart.type &&
                              e.globals.dataPoints > 1 &&
                              s[r].classList.add("apexcharts-element-hidden")),
                          e.globals.delayedElements.push({
                            el: s[r],
                            index: 0,
                          });
                      this.helpers.annotationsBackground();
                    }
                  },
                },
                {
                  key: "drawImageAnnos",
                  value: function () {
                    var e = this;
                    this.w.config.annotations.images.map(function (t, n) {
                      e.addImage(t, n);
                    });
                  },
                },
                {
                  key: "drawTextAnnos",
                  value: function () {
                    var e = this;
                    this.w.config.annotations.texts.map(function (t, n) {
                      e.addText(t, n);
                    });
                  },
                },
                {
                  key: "addXaxisAnnotation",
                  value: function (e, t, n) {
                    this.xAxisAnnotations.addXaxisAnnotation(e, t, n);
                  },
                },
                {
                  key: "addYaxisAnnotation",
                  value: function (e, t, n) {
                    this.yAxisAnnotations.addYaxisAnnotation(e, t, n);
                  },
                },
                {
                  key: "addPointAnnotation",
                  value: function (e, t, n) {
                    this.pointsAnnotations.addPointAnnotation(e, t, n);
                  },
                },
                {
                  key: "addText",
                  value: function (e, t) {
                    var n = e.x,
                      i = e.y,
                      o = e.text,
                      a = e.textAnchor,
                      s = e.foreColor,
                      r = e.fontSize,
                      l = e.fontFamily,
                      c = e.fontWeight,
                      u = e.cssClass,
                      d = e.backgroundColor,
                      h = e.borderWidth,
                      p = e.strokeDashArray,
                      f = e.borderRadius,
                      g = e.borderColor,
                      m = e.appendTo,
                      v = void 0 === m ? ".apexcharts-svg" : m,
                      b = e.paddingLeft,
                      x = void 0 === b ? 4 : b,
                      y = e.paddingRight,
                      w = void 0 === y ? 4 : y,
                      S = e.paddingBottom,
                      k = void 0 === S ? 2 : S,
                      A = e.paddingTop,
                      C = void 0 === A ? 2 : A,
                      M = this.w,
                      P = this.graphics.drawText({
                        x: n,
                        y: i,
                        text: o,
                        textAnchor: a || "start",
                        fontSize: r || "12px",
                        fontWeight: c || "regular",
                        fontFamily: l || M.config.chart.fontFamily,
                        foreColor: s || M.config.chart.foreColor,
                        cssClass: u,
                      }),
                      E = M.globals.dom.baseEl.querySelector(v);
                    E && E.appendChild(P.node);
                    var L = P.bbox();
                    if (o) {
                      var T = this.graphics.drawRect(
                        L.x - x,
                        L.y - C,
                        L.width + x + w,
                        L.height + k + C,
                        f,
                        d || "transparent",
                        1,
                        h,
                        g,
                        p
                      );
                      E.insertBefore(T.node, P.node);
                    }
                  },
                },
                {
                  key: "addImage",
                  value: function (e, t) {
                    var n = this.w,
                      i = e.path,
                      o = e.x,
                      a = void 0 === o ? 0 : o,
                      s = e.y,
                      r = void 0 === s ? 0 : s,
                      l = e.width,
                      c = void 0 === l ? 20 : l,
                      u = e.height,
                      d = void 0 === u ? 20 : u,
                      h = e.appendTo,
                      p = void 0 === h ? ".apexcharts-svg" : h,
                      f = n.globals.dom.Paper.image(i);
                    f.size(c, d).move(a, r);
                    var g = n.globals.dom.baseEl.querySelector(p);
                    return g && g.appendChild(f.node), f;
                  },
                },
                {
                  key: "addXaxisAnnotationExternal",
                  value: function (e, t, n) {
                    return (
                      this.addAnnotationExternal({
                        params: e,
                        pushToMemory: t,
                        context: n,
                        type: "xaxis",
                        contextMethod: n.addXaxisAnnotation,
                      }),
                      n
                    );
                  },
                },
                {
                  key: "addYaxisAnnotationExternal",
                  value: function (e, t, n) {
                    return (
                      this.addAnnotationExternal({
                        params: e,
                        pushToMemory: t,
                        context: n,
                        type: "yaxis",
                        contextMethod: n.addYaxisAnnotation,
                      }),
                      n
                    );
                  },
                },
                {
                  key: "addPointAnnotationExternal",
                  value: function (e, t, n) {
                    return (
                      void 0 === this.invertAxis &&
                        (this.invertAxis = n.w.globals.isBarHorizontal),
                      this.addAnnotationExternal({
                        params: e,
                        pushToMemory: t,
                        context: n,
                        type: "point",
                        contextMethod: n.addPointAnnotation,
                      }),
                      n
                    );
                  },
                },
                {
                  key: "addAnnotationExternal",
                  value: function (e) {
                    var t = e.params,
                      n = e.pushToMemory,
                      i = e.context,
                      o = e.type,
                      a = e.contextMethod,
                      s = i,
                      r = s.w,
                      l = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-".concat(o, "-annotations")
                      ),
                      c = l.childNodes.length + 1,
                      u = new I(),
                      d = Object.assign(
                        {},
                        "xaxis" === o
                          ? u.xAxisAnnotation
                          : "yaxis" === o
                          ? u.yAxisAnnotation
                          : u.pointAnnotation
                      ),
                      h = y.extend(d, t);
                    switch (o) {
                      case "xaxis":
                        this.addXaxisAnnotation(h, l, c);
                        break;
                      case "yaxis":
                        this.addYaxisAnnotation(h, l, c);
                        break;
                      case "point":
                        this.addPointAnnotation(h, l, c);
                    }
                    var p = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-"
                          .concat(o, "-annotations .apexcharts-")
                          .concat(o, "-annotation-label[rel='")
                          .concat(c, "']")
                      ),
                      f = this.helpers.addBackgroundToAnno(p, h);
                    return (
                      f && l.insertBefore(f.node, p),
                      n &&
                        r.globals.memory.methodsToExec.push({
                          context: s,
                          id: h.id ? h.id : y.randomId(),
                          method: a,
                          label: "addAnnotation",
                          params: t,
                        }),
                      i
                    );
                  },
                },
                {
                  key: "clearAnnotations",
                  value: function (e) {
                    var t = e.w,
                      n = t.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations"
                      );
                    t.globals.memory.methodsToExec.map(function (e, n) {
                      ("addText" !== e.label && "addAnnotation" !== e.label) ||
                        t.globals.memory.methodsToExec.splice(n, 1);
                    }),
                      (n = y.listToArray(n)),
                      Array.prototype.forEach.call(n, function (e) {
                        for (; e.firstChild; ) e.removeChild(e.firstChild);
                      });
                  },
                },
                {
                  key: "removeAnnotation",
                  value: function (e, t) {
                    var n = e.w,
                      i = n.globals.dom.baseEl.querySelectorAll(".".concat(t));
                    i &&
                      (n.globals.memory.methodsToExec.map(function (e, i) {
                        e.id === t &&
                          n.globals.memory.methodsToExec.splice(i, 1);
                      }),
                      Array.prototype.forEach.call(i, function (e) {
                        e.parentElement.removeChild(e);
                      }));
                  },
                },
              ]),
              e
            );
          })(),
          _ = function (e) {
            var t,
              n = e.isTimeline,
              i = e.ctx,
              o = e.seriesIndex,
              a = e.dataPointIndex,
              s = e.y1,
              r = e.y2,
              l = e.w,
              c = l.globals.seriesRangeStart[o][a],
              u = l.globals.seriesRangeEnd[o][a],
              d = l.globals.labels[a],
              h = l.config.series[o].name ? l.config.series[o].name : "",
              p = l.globals.ttKeyFormatter,
              f = l.config.tooltip.y.title.formatter,
              g = { w: l, seriesIndex: o, dataPointIndex: a, start: c, end: u };
            "function" == typeof f && (h = f(h, g)),
              null !== (t = l.config.series[o].data[a]) &&
                void 0 !== t &&
                t.x &&
                (d = l.config.series[o].data[a].x),
              n ||
                ("datetime" === l.config.xaxis.type &&
                  (d = new E(i).xLabelFormat(l.globals.ttKeyFormatter, d, d, {
                    i: void 0,
                    dateFormatter: new P(i).formatDate,
                    w: l,
                  }))),
              "function" == typeof p && (d = p(d, g)),
              Number.isFinite(s) && Number.isFinite(r) && ((c = s), (u = r));
            var m = "",
              v = "",
              b = l.globals.colors[o];
            if (void 0 === l.config.tooltip.x.formatter)
              if ("datetime" === l.config.xaxis.type) {
                var x = new P(i);
                (m = x.formatDate(x.getDate(c), l.config.tooltip.x.format)),
                  (v = x.formatDate(x.getDate(u), l.config.tooltip.x.format));
              } else (m = c), (v = u);
            else
              (m = l.config.tooltip.x.formatter(c)),
                (v = l.config.tooltip.x.formatter(u));
            return {
              start: c,
              end: u,
              startVal: m,
              endVal: v,
              ylabel: d,
              color: b,
              seriesName: h,
            };
          },
          D = function (e) {
            var t = e.color,
              n = e.seriesName,
              i = e.ylabel,
              o = e.start,
              a = e.end,
              s = e.seriesIndex,
              r = e.dataPointIndex,
              l = e.ctx.tooltip.tooltipLabels.getFormatters(s);
            (o = l.yLbFormatter(o)), (a = l.yLbFormatter(a));
            var c = l.yLbFormatter(e.w.globals.series[s][r]),
              u = '<span class="value start-value">\n  '
                .concat(
                  o,
                  '\n  </span> <span class="separator">-</span> <span class="value end-value">\n  '
                )
                .concat(a, "\n  </span>");
            return (
              '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
              t +
              '">' +
              (n || "") +
              '</span></div><div> <span class="category">' +
              i +
              ": </span> " +
              (e.w.globals.comboCharts
                ? "rangeArea" === e.w.config.series[s].type ||
                  "rangeBar" === e.w.config.series[s].type
                  ? u
                  : "<span>".concat(c, "</span>")
                : u) +
              " </div></div>"
            );
          },
          z = (function () {
            function e(t) {
              r(this, e), (this.opts = t);
            }
            return (
              c(e, [
                {
                  key: "hideYAxis",
                  value: function () {
                    (this.opts.yaxis[0].show = !1),
                      (this.opts.yaxis[0].title.text = ""),
                      (this.opts.yaxis[0].axisBorder.show = !1),
                      (this.opts.yaxis[0].axisTicks.show = !1),
                      (this.opts.yaxis[0].floating = !0);
                  },
                },
                {
                  key: "line",
                  value: function () {
                    return {
                      chart: { animations: { easing: "swing" } },
                      dataLabels: { enabled: !1 },
                      stroke: { width: 5, curve: "straight" },
                      markers: { size: 0, hover: { sizeOffset: 6 } },
                      xaxis: { crosshairs: { width: 1 } },
                    };
                  },
                },
                {
                  key: "sparkline",
                  value: function (e) {
                    return (
                      this.hideYAxis(),
                      y.extend(e, {
                        grid: {
                          show: !1,
                          padding: { left: 0, right: 0, top: 0, bottom: 0 },
                        },
                        legend: { show: !1 },
                        xaxis: {
                          labels: { show: !1 },
                          tooltip: { enabled: !1 },
                          axisBorder: { show: !1 },
                          axisTicks: { show: !1 },
                        },
                        chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                        dataLabels: { enabled: !1 },
                      })
                    );
                  },
                },
                {
                  key: "slope",
                  value: function () {
                    return (
                      this.hideYAxis(),
                      {
                        chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                        dataLabels: {
                          enabled: !0,
                          formatter: function (e, t) {
                            var n = t.w.config.series[t.seriesIndex].name;
                            return null !== e ? n + ": " + e : "";
                          },
                          background: { enabled: !1 },
                          offsetX: -5,
                        },
                        grid: {
                          xaxis: { lines: { show: !0 } },
                          yaxis: { lines: { show: !1 } },
                        },
                        xaxis: {
                          position: "top",
                          labels: { style: { fontSize: 14, fontWeight: 900 } },
                          tooltip: { enabled: !1 },
                          crosshairs: { show: !1 },
                        },
                        markers: { size: 8, hover: { sizeOffset: 1 } },
                        legend: { show: !1 },
                        tooltip: {
                          shared: !1,
                          intersect: !0,
                          followCursor: !0,
                        },
                        stroke: { width: 5, curve: "straight" },
                      }
                    );
                  },
                },
                {
                  key: "bar",
                  value: function () {
                    return {
                      chart: { stacked: !1, animations: { easing: "swing" } },
                      plotOptions: {
                        bar: { dataLabels: { position: "center" } },
                      },
                      dataLabels: {
                        style: { colors: ["#fff"] },
                        background: { enabled: !1 },
                      },
                      stroke: { width: 0, lineCap: "round" },
                      fill: { opacity: 0.85 },
                      legend: { markers: { shape: "square" } },
                      tooltip: { shared: !1, intersect: !0 },
                      xaxis: {
                        tooltip: { enabled: !1 },
                        tickPlacement: "between",
                        crosshairs: {
                          width: "barWidth",
                          position: "back",
                          fill: { type: "gradient" },
                          dropShadow: { enabled: !1 },
                          stroke: { width: 0 },
                        },
                      },
                    };
                  },
                },
                {
                  key: "funnel",
                  value: function () {
                    return (
                      this.hideYAxis(),
                      a(
                        a({}, this.bar()),
                        {},
                        {
                          chart: {
                            animations: {
                              easing: "linear",
                              speed: 800,
                              animateGradually: { enabled: !1 },
                            },
                          },
                          plotOptions: {
                            bar: {
                              horizontal: !0,
                              borderRadiusApplication: "around",
                              borderRadius: 0,
                              dataLabels: { position: "center" },
                            },
                          },
                          grid: { show: !1, padding: { left: 0, right: 0 } },
                          xaxis: {
                            labels: { show: !1 },
                            tooltip: { enabled: !1 },
                            axisBorder: { show: !1 },
                            axisTicks: { show: !1 },
                          },
                        }
                      )
                    );
                  },
                },
                {
                  key: "candlestick",
                  value: function () {
                    var e = this;
                    return {
                      stroke: { width: 1, colors: ["#333"] },
                      fill: { opacity: 1 },
                      dataLabels: { enabled: !1 },
                      tooltip: {
                        shared: !0,
                        custom: function (t) {
                          var n = t.seriesIndex,
                            i = t.dataPointIndex,
                            o = t.w;
                          return e._getBoxTooltip(
                            o,
                            n,
                            i,
                            ["Open", "High", "", "Low", "Close"],
                            "candlestick"
                          );
                        },
                      },
                      states: { active: { filter: { type: "none" } } },
                      xaxis: { crosshairs: { width: 1 } },
                    };
                  },
                },
                {
                  key: "boxPlot",
                  value: function () {
                    var e = this;
                    return {
                      chart: {
                        animations: { dynamicAnimation: { enabled: !1 } },
                      },
                      stroke: { width: 1, colors: ["#24292e"] },
                      dataLabels: { enabled: !1 },
                      tooltip: {
                        shared: !0,
                        custom: function (t) {
                          var n = t.seriesIndex,
                            i = t.dataPointIndex,
                            o = t.w;
                          return e._getBoxTooltip(
                            o,
                            n,
                            i,
                            ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                            "boxPlot"
                          );
                        },
                      },
                      markers: {
                        size: 7,
                        strokeWidth: 1,
                        strokeColors: "#111",
                      },
                      xaxis: { crosshairs: { width: 1 } },
                    };
                  },
                },
                {
                  key: "rangeBar",
                  value: function () {
                    return {
                      chart: { animations: { animateGradually: !1 } },
                      stroke: { width: 0, lineCap: "square" },
                      plotOptions: {
                        bar: {
                          borderRadius: 0,
                          dataLabels: { position: "center" },
                        },
                      },
                      dataLabels: {
                        enabled: !1,
                        formatter: function (e, t) {
                          t.ctx;
                          var n = t.seriesIndex,
                            i = t.dataPointIndex,
                            o = t.w,
                            a = function () {
                              var e = o.globals.seriesRangeStart[n][i];
                              return o.globals.seriesRangeEnd[n][i] - e;
                            };
                          return o.globals.comboCharts
                            ? "rangeBar" === o.config.series[n].type ||
                              "rangeArea" === o.config.series[n].type
                              ? a()
                              : e
                            : a();
                        },
                        background: { enabled: !1 },
                        style: { colors: ["#fff"] },
                      },
                      markers: { size: 10 },
                      tooltip: {
                        shared: !1,
                        followCursor: !0,
                        custom: function (e) {
                          return e.w.config.plotOptions &&
                            e.w.config.plotOptions.bar &&
                            e.w.config.plotOptions.bar.horizontal
                            ? (function (e) {
                                var t = _(a(a({}, e), {}, { isTimeline: !0 })),
                                  n = t.color,
                                  i = t.seriesName,
                                  o = t.ylabel,
                                  s = t.startVal,
                                  r = t.endVal;
                                return D(
                                  a(
                                    a({}, e),
                                    {},
                                    {
                                      color: n,
                                      seriesName: i,
                                      ylabel: o,
                                      start: s,
                                      end: r,
                                    }
                                  )
                                );
                              })(e)
                            : (function (e) {
                                var t = _(e),
                                  n = t.color,
                                  i = t.seriesName,
                                  o = t.ylabel,
                                  s = t.start,
                                  r = t.end;
                                return D(
                                  a(
                                    a({}, e),
                                    {},
                                    {
                                      color: n,
                                      seriesName: i,
                                      ylabel: o,
                                      start: s,
                                      end: r,
                                    }
                                  )
                                );
                              })(e);
                        },
                      },
                      xaxis: {
                        tickPlacement: "between",
                        tooltip: { enabled: !1 },
                        crosshairs: { stroke: { width: 0 } },
                      },
                    };
                  },
                },
                {
                  key: "dumbbell",
                  value: function (e) {
                    var t, n;
                    return (
                      (null !== (t = e.plotOptions.bar) &&
                        void 0 !== t &&
                        t.barHeight) ||
                        (e.plotOptions.bar.barHeight = 2),
                      (null !== (n = e.plotOptions.bar) &&
                        void 0 !== n &&
                        n.columnWidth) ||
                        (e.plotOptions.bar.columnWidth = 2),
                      e
                    );
                  },
                },
                {
                  key: "area",
                  value: function () {
                    return {
                      stroke: {
                        width: 4,
                        fill: {
                          type: "solid",
                          gradient: {
                            inverseColors: !1,
                            shade: "light",
                            type: "vertical",
                            opacityFrom: 0.65,
                            opacityTo: 0.5,
                            stops: [0, 100, 100],
                          },
                        },
                      },
                      fill: {
                        type: "gradient",
                        gradient: {
                          inverseColors: !1,
                          shade: "light",
                          type: "vertical",
                          opacityFrom: 0.65,
                          opacityTo: 0.5,
                          stops: [0, 100, 100],
                        },
                      },
                      markers: { size: 0, hover: { sizeOffset: 6 } },
                      tooltip: { followCursor: !1 },
                    };
                  },
                },
                {
                  key: "rangeArea",
                  value: function () {
                    return {
                      stroke: { curve: "straight", width: 0 },
                      fill: { type: "solid", opacity: 0.6 },
                      markers: { size: 0 },
                      states: {
                        hover: { filter: { type: "none" } },
                        active: { filter: { type: "none" } },
                      },
                      tooltip: {
                        intersect: !1,
                        shared: !0,
                        followCursor: !0,
                        custom: function (e) {
                          return (function (e) {
                            var t = _(e),
                              n = t.color,
                              i = t.seriesName,
                              o = t.ylabel,
                              s = t.start,
                              r = t.end;
                            return D(
                              a(
                                a({}, e),
                                {},
                                {
                                  color: n,
                                  seriesName: i,
                                  ylabel: o,
                                  start: s,
                                  end: r,
                                }
                              )
                            );
                          })(e);
                        },
                      },
                    };
                  },
                },
                {
                  key: "brush",
                  value: function (e) {
                    return y.extend(e, {
                      chart: {
                        toolbar: { autoSelected: "selection", show: !1 },
                        zoom: { enabled: !1 },
                      },
                      dataLabels: { enabled: !1 },
                      stroke: { width: 1 },
                      tooltip: { enabled: !1 },
                      xaxis: { tooltip: { enabled: !1 } },
                    });
                  },
                },
                {
                  key: "stacked100",
                  value: function (e) {
                    (e.dataLabels = e.dataLabels || {}),
                      (e.dataLabels.formatter =
                        e.dataLabels.formatter || void 0);
                    var t = e.dataLabels.formatter;
                    return (
                      e.yaxis.forEach(function (t, n) {
                        (e.yaxis[n].min = 0), (e.yaxis[n].max = 100);
                      }),
                      "bar" === e.chart.type &&
                        (e.dataLabels.formatter =
                          t ||
                          function (e) {
                            return "number" == typeof e && e
                              ? e.toFixed(0) + "%"
                              : e;
                          }),
                      e
                    );
                  },
                },
                {
                  key: "stackedBars",
                  value: function () {
                    var e = this.bar();
                    return a(
                      a({}, e),
                      {},
                      {
                        plotOptions: a(
                          a({}, e.plotOptions),
                          {},
                          {
                            bar: a(
                              a({}, e.plotOptions.bar),
                              {},
                              {
                                borderRadiusApplication: "end",
                                borderRadiusWhenStacked: "last",
                              }
                            ),
                          }
                        ),
                      }
                    );
                  },
                },
                {
                  key: "convertCatToNumeric",
                  value: function (e) {
                    return (e.xaxis.convertedCatToNumeric = !0), e;
                  },
                },
                {
                  key: "convertCatToNumericXaxis",
                  value: function (e, t, n) {
                    (e.xaxis.type = "numeric"),
                      (e.xaxis.labels = e.xaxis.labels || {}),
                      (e.xaxis.labels.formatter =
                        e.xaxis.labels.formatter ||
                        function (e) {
                          return y.isNumber(e) ? Math.floor(e) : e;
                        });
                    var i = e.xaxis.labels.formatter,
                      o =
                        e.xaxis.categories && e.xaxis.categories.length
                          ? e.xaxis.categories
                          : e.labels;
                    return (
                      n &&
                        n.length &&
                        (o = n.map(function (e) {
                          return Array.isArray(e) ? e : String(e);
                        })),
                      o &&
                        o.length &&
                        (e.xaxis.labels.formatter = function (e) {
                          return y.isNumber(e) ? i(o[Math.floor(e) - 1]) : i(e);
                        }),
                      (e.xaxis.categories = []),
                      (e.labels = []),
                      (e.xaxis.tickAmount = e.xaxis.tickAmount || "dataPoints"),
                      e
                    );
                  },
                },
                {
                  key: "bubble",
                  value: function () {
                    return {
                      dataLabels: { style: { colors: ["#fff"] } },
                      tooltip: { shared: !1, intersect: !0 },
                      xaxis: { crosshairs: { width: 0 } },
                      fill: {
                        type: "solid",
                        gradient: {
                          shade: "light",
                          inverse: !0,
                          shadeIntensity: 0.55,
                          opacityFrom: 0.4,
                          opacityTo: 0.8,
                        },
                      },
                    };
                  },
                },
                {
                  key: "scatter",
                  value: function () {
                    return {
                      dataLabels: { enabled: !1 },
                      tooltip: { shared: !1, intersect: !0 },
                      markers: {
                        size: 6,
                        strokeWidth: 1,
                        hover: { sizeOffset: 2 },
                      },
                    };
                  },
                },
                {
                  key: "heatmap",
                  value: function () {
                    return {
                      chart: { stacked: !1 },
                      fill: { opacity: 1 },
                      dataLabels: { style: { colors: ["#fff"] } },
                      stroke: { colors: ["#fff"] },
                      tooltip: {
                        followCursor: !0,
                        marker: { show: !1 },
                        x: { show: !1 },
                      },
                      legend: { position: "top", markers: { shape: "square" } },
                      grid: { padding: { right: 20 } },
                    };
                  },
                },
                {
                  key: "treemap",
                  value: function () {
                    return {
                      chart: { zoom: { enabled: !1 } },
                      dataLabels: {
                        style: {
                          fontSize: 14,
                          fontWeight: 600,
                          colors: ["#fff"],
                        },
                      },
                      stroke: { show: !0, width: 2, colors: ["#fff"] },
                      legend: { show: !1 },
                      fill: { opacity: 1, gradient: { stops: [0, 100] } },
                      tooltip: { followCursor: !0, x: { show: !1 } },
                      grid: { padding: { left: 0, right: 0 } },
                      xaxis: {
                        crosshairs: { show: !1 },
                        tooltip: { enabled: !1 },
                      },
                    };
                  },
                },
                {
                  key: "pie",
                  value: function () {
                    return {
                      chart: { toolbar: { show: !1 } },
                      plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                      dataLabels: {
                        formatter: function (e) {
                          return e.toFixed(1) + "%";
                        },
                        style: { colors: ["#fff"] },
                        background: { enabled: !1 },
                        dropShadow: { enabled: !0 },
                      },
                      stroke: { colors: ["#fff"] },
                      fill: {
                        opacity: 1,
                        gradient: { shade: "light", stops: [0, 100] },
                      },
                      tooltip: { theme: "dark", fillSeriesColor: !0 },
                      legend: { position: "right" },
                    };
                  },
                },
                {
                  key: "donut",
                  value: function () {
                    return {
                      chart: { toolbar: { show: !1 } },
                      dataLabels: {
                        formatter: function (e) {
                          return e.toFixed(1) + "%";
                        },
                        style: { colors: ["#fff"] },
                        background: { enabled: !1 },
                        dropShadow: { enabled: !0 },
                      },
                      stroke: { colors: ["#fff"] },
                      fill: {
                        opacity: 1,
                        gradient: {
                          shade: "light",
                          shadeIntensity: 0.35,
                          stops: [80, 100],
                          opacityFrom: 1,
                          opacityTo: 1,
                        },
                      },
                      tooltip: { theme: "dark", fillSeriesColor: !0 },
                      legend: { position: "right" },
                    };
                  },
                },
                {
                  key: "polarArea",
                  value: function () {
                    return {
                      chart: { toolbar: { show: !1 } },
                      dataLabels: {
                        formatter: function (e) {
                          return e.toFixed(1) + "%";
                        },
                        enabled: !1,
                      },
                      stroke: { show: !0, width: 2 },
                      fill: { opacity: 0.7 },
                      tooltip: { theme: "dark", fillSeriesColor: !0 },
                      legend: { position: "right" },
                    };
                  },
                },
                {
                  key: "radar",
                  value: function () {
                    return (
                      (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0]
                        .labels.offsetY
                        ? this.opts.yaxis[0].labels.offsetY
                        : 6),
                      {
                        dataLabels: {
                          enabled: !1,
                          style: { fontSize: "11px" },
                        },
                        stroke: { width: 2 },
                        markers: { size: 5, strokeWidth: 1, strokeOpacity: 1 },
                        fill: { opacity: 0.2 },
                        tooltip: {
                          shared: !1,
                          intersect: !0,
                          followCursor: !0,
                        },
                        grid: { show: !1 },
                        xaxis: {
                          labels: {
                            formatter: function (e) {
                              return e;
                            },
                            style: { colors: ["#a8a8a8"], fontSize: "11px" },
                          },
                          tooltip: { enabled: !1 },
                          crosshairs: { show: !1 },
                        },
                      }
                    );
                  },
                },
                {
                  key: "radialBar",
                  value: function () {
                    return {
                      chart: {
                        animations: {
                          dynamicAnimation: { enabled: !0, speed: 800 },
                        },
                        toolbar: { show: !1 },
                      },
                      fill: {
                        gradient: {
                          shade: "dark",
                          shadeIntensity: 0.4,
                          inverseColors: !1,
                          type: "diagonal2",
                          opacityFrom: 1,
                          opacityTo: 1,
                          stops: [70, 98, 100],
                        },
                      },
                      legend: { show: !1, position: "right" },
                      tooltip: { enabled: !1, fillSeriesColor: !0 },
                    };
                  },
                },
                {
                  key: "_getBoxTooltip",
                  value: function (e, t, n, i, o) {
                    var a = e.globals.seriesCandleO[t][n],
                      s = e.globals.seriesCandleH[t][n],
                      r = e.globals.seriesCandleM[t][n],
                      l = e.globals.seriesCandleL[t][n],
                      c = e.globals.seriesCandleC[t][n];
                    return e.config.series[t].type &&
                      e.config.series[t].type !== o
                      ? '<div class="apexcharts-custom-tooltip">\n          '
                          .concat(
                            e.config.series[t].name
                              ? e.config.series[t].name
                              : "series-" + (t + 1),
                            ": <strong>"
                          )
                          .concat(
                            e.globals.series[t][n],
                            "</strong>\n        </div>"
                          )
                      : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                          e.config.chart.type,
                          '">'
                        ) +
                          "<div>".concat(i[0], ': <span class="value">') +
                          a +
                          "</span></div>" +
                          "<div>".concat(i[1], ': <span class="value">') +
                          s +
                          "</span></div>" +
                          (r
                            ? "<div>".concat(i[2], ': <span class="value">') +
                              r +
                              "</span></div>"
                            : "") +
                          "<div>".concat(i[3], ': <span class="value">') +
                          l +
                          "</span></div>" +
                          "<div>".concat(i[4], ': <span class="value">') +
                          c +
                          "</span></div></div>";
                  },
                },
              ]),
              e
            );
          })(),
          j = (function () {
            function e(t) {
              r(this, e), (this.opts = t);
            }
            return (
              c(e, [
                {
                  key: "init",
                  value: function (e) {
                    var t = e.responsiveOverride,
                      n = this.opts,
                      i = new I(),
                      o = new z(n);
                    (this.chartType = n.chart.type),
                      (n = this.extendYAxis(n)),
                      (n = this.extendAnnotations(n));
                    var a = i.init(),
                      r = {};
                    if (n && "object" === s(n)) {
                      var l,
                        c,
                        u,
                        d,
                        h,
                        p,
                        f,
                        g,
                        m,
                        v,
                        b = {};
                      (b =
                        -1 !==
                        [
                          "line",
                          "area",
                          "bar",
                          "candlestick",
                          "boxPlot",
                          "rangeBar",
                          "rangeArea",
                          "bubble",
                          "scatter",
                          "heatmap",
                          "treemap",
                          "pie",
                          "polarArea",
                          "donut",
                          "radar",
                          "radialBar",
                        ].indexOf(n.chart.type)
                          ? o[n.chart.type]()
                          : o.line()),
                        null !== (l = n.plotOptions) &&
                          void 0 !== l &&
                          null !== (c = l.bar) &&
                          void 0 !== c &&
                          c.isFunnel &&
                          (b = o.funnel()),
                        n.chart.stacked &&
                          "bar" === n.chart.type &&
                          (b = o.stackedBars()),
                        null !== (u = n.chart.brush) &&
                          void 0 !== u &&
                          u.enabled &&
                          (b = o.brush(b)),
                        null !== (d = n.plotOptions) &&
                          void 0 !== d &&
                          null !== (h = d.line) &&
                          void 0 !== h &&
                          h.isSlopeChart &&
                          (b = o.slope()),
                        n.chart.stacked &&
                          "100%" === n.chart.stackType &&
                          (n = o.stacked100(n)),
                        null !== (p = n.plotOptions) &&
                          void 0 !== p &&
                          null !== (f = p.bar) &&
                          void 0 !== f &&
                          f.isDumbbell &&
                          (n = o.dumbbell(n)),
                        this.checkForDarkTheme(window.Apex),
                        this.checkForDarkTheme(n),
                        (n.xaxis = n.xaxis || window.Apex.xaxis || {}),
                        t || (n.xaxis.convertedCatToNumeric = !1),
                        ((null !==
                          (g = (n = this.checkForCatToNumericXAxis(
                            this.chartType,
                            b,
                            n
                          )).chart.sparkline) &&
                          void 0 !== g &&
                          g.enabled) ||
                          (null !== (m = window.Apex.chart) &&
                            void 0 !== m &&
                            null !== (v = m.sparkline) &&
                            void 0 !== v &&
                            v.enabled)) &&
                          (b = o.sparkline(b)),
                        (r = y.extend(a, b));
                    }
                    var x = y.extend(r, window.Apex);
                    return (a = y.extend(x, n)), this.handleUserInputErrors(a);
                  },
                },
                {
                  key: "checkForCatToNumericXAxis",
                  value: function (e, t, n) {
                    var i,
                      o,
                      a = new z(n),
                      s =
                        ("bar" === e || "boxPlot" === e) &&
                        (null === (i = n.plotOptions) ||
                        void 0 === i ||
                        null === (o = i.bar) ||
                        void 0 === o
                          ? void 0
                          : o.horizontal),
                      r =
                        "pie" === e ||
                        "polarArea" === e ||
                        "donut" === e ||
                        "radar" === e ||
                        "radialBar" === e ||
                        "heatmap" === e,
                      l =
                        "datetime" !== n.xaxis.type &&
                        "numeric" !== n.xaxis.type,
                      c = n.xaxis.tickPlacement
                        ? n.xaxis.tickPlacement
                        : t.xaxis && t.xaxis.tickPlacement;
                    return (
                      s ||
                        r ||
                        !l ||
                        "between" === c ||
                        (n = a.convertCatToNumeric(n)),
                      n
                    );
                  },
                },
                {
                  key: "extendYAxis",
                  value: function (e, t) {
                    var n = new I();
                    (void 0 === e.yaxis ||
                      !e.yaxis ||
                      (Array.isArray(e.yaxis) && 0 === e.yaxis.length)) &&
                      (e.yaxis = {}),
                      e.yaxis.constructor !== Array &&
                        window.Apex.yaxis &&
                        window.Apex.yaxis.constructor !== Array &&
                        (e.yaxis = y.extend(e.yaxis, window.Apex.yaxis)),
                      e.yaxis.constructor !== Array
                        ? (e.yaxis = [y.extend(n.yAxis, e.yaxis)])
                        : (e.yaxis = y.extendArray(e.yaxis, n.yAxis));
                    var i = !1;
                    e.yaxis.forEach(function (e) {
                      e.logarithmic && (i = !0);
                    });
                    var o = e.series;
                    return (
                      t && !o && (o = t.config.series),
                      i &&
                        o.length !== e.yaxis.length &&
                        o.length &&
                        (e.yaxis = o.map(function (t, i) {
                          if (
                            (t.name || (o[i].name = "series-".concat(i + 1)),
                            e.yaxis[i])
                          )
                            return (
                              (e.yaxis[i].seriesName = o[i].name), e.yaxis[i]
                            );
                          var a = y.extend(n.yAxis, e.yaxis[0]);
                          return (a.show = !1), a;
                        })),
                      i &&
                        o.length > 1 &&
                        o.length !== e.yaxis.length &&
                        console.warn(
                          "A multi-series logarithmic chart should have equal number of series and y-axes"
                        ),
                      e
                    );
                  },
                },
                {
                  key: "extendAnnotations",
                  value: function (e) {
                    return (
                      void 0 === e.annotations &&
                        ((e.annotations = {}),
                        (e.annotations.yaxis = []),
                        (e.annotations.xaxis = []),
                        (e.annotations.points = [])),
                      (e = this.extendYAxisAnnotations(e)),
                      (e = this.extendXAxisAnnotations(e)),
                      this.extendPointAnnotations(e)
                    );
                  },
                },
                {
                  key: "extendYAxisAnnotations",
                  value: function (e) {
                    var t = new I();
                    return (
                      (e.annotations.yaxis = y.extendArray(
                        void 0 !== e.annotations.yaxis
                          ? e.annotations.yaxis
                          : [],
                        t.yAxisAnnotation
                      )),
                      e
                    );
                  },
                },
                {
                  key: "extendXAxisAnnotations",
                  value: function (e) {
                    var t = new I();
                    return (
                      (e.annotations.xaxis = y.extendArray(
                        void 0 !== e.annotations.xaxis
                          ? e.annotations.xaxis
                          : [],
                        t.xAxisAnnotation
                      )),
                      e
                    );
                  },
                },
                {
                  key: "extendPointAnnotations",
                  value: function (e) {
                    var t = new I();
                    return (
                      (e.annotations.points = y.extendArray(
                        void 0 !== e.annotations.points
                          ? e.annotations.points
                          : [],
                        t.pointAnnotation
                      )),
                      e
                    );
                  },
                },
                {
                  key: "checkForDarkTheme",
                  value: function (e) {
                    e.theme &&
                      "dark" === e.theme.mode &&
                      (e.tooltip || (e.tooltip = {}),
                      "light" !== e.tooltip.theme && (e.tooltip.theme = "dark"),
                      e.chart.foreColor || (e.chart.foreColor = "#f6f7f8"),
                      e.theme.palette || (e.theme.palette = "palette4"));
                  },
                },
                {
                  key: "handleUserInputErrors",
                  value: function (e) {
                    var t = e;
                    if (t.tooltip.shared && t.tooltip.intersect)
                      throw new Error(
                        "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false."
                      );
                    if (
                      "bar" === t.chart.type &&
                      t.plotOptions.bar.horizontal
                    ) {
                      if (t.yaxis.length > 1)
                        throw new Error(
                          "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false"
                        );
                      t.yaxis[0].reversed && (t.yaxis[0].opposite = !0),
                        (t.xaxis.tooltip.enabled = !1),
                        (t.yaxis[0].tooltip.enabled = !1),
                        (t.chart.zoom.enabled = !1);
                    }
                    return (
                      ("bar" !== t.chart.type && "rangeBar" !== t.chart.type) ||
                        (t.tooltip.shared &&
                          "barWidth" === t.xaxis.crosshairs.width &&
                          t.series.length > 1 &&
                          (t.xaxis.crosshairs.width = "tickWidth")),
                      ("candlestick" !== t.chart.type &&
                        "boxPlot" !== t.chart.type) ||
                        (t.yaxis[0].reversed &&
                          (console.warn(
                            "Reversed y-axis in ".concat(
                              t.chart.type,
                              " chart is not supported."
                            )
                          ),
                          (t.yaxis[0].reversed = !1))),
                      t
                    );
                  },
                },
              ]),
              e
            );
          })(),
          B = (function () {
            function e() {
              r(this, e);
            }
            return (
              c(e, [
                {
                  key: "initGlobalVars",
                  value: function (e) {
                    (e.series = []),
                      (e.seriesCandleO = []),
                      (e.seriesCandleH = []),
                      (e.seriesCandleM = []),
                      (e.seriesCandleL = []),
                      (e.seriesCandleC = []),
                      (e.seriesRangeStart = []),
                      (e.seriesRangeEnd = []),
                      (e.seriesRange = []),
                      (e.seriesPercent = []),
                      (e.seriesGoals = []),
                      (e.seriesX = []),
                      (e.seriesZ = []),
                      (e.seriesNames = []),
                      (e.seriesTotals = []),
                      (e.seriesLog = []),
                      (e.seriesColors = []),
                      (e.stackedSeriesTotals = []),
                      (e.seriesXvalues = []),
                      (e.seriesYvalues = []),
                      (e.labels = []),
                      (e.hasXaxisGroups = !1),
                      (e.groups = []),
                      (e.barGroups = []),
                      (e.lineGroups = []),
                      (e.areaGroups = []),
                      (e.hasSeriesGroups = !1),
                      (e.seriesGroups = []),
                      (e.categoryLabels = []),
                      (e.timescaleLabels = []),
                      (e.noLabelsProvided = !1),
                      (e.resizeTimer = null),
                      (e.selectionResizeTimer = null),
                      (e.delayedElements = []),
                      (e.pointsArray = []),
                      (e.dataLabelsRects = []),
                      (e.isXNumeric = !1),
                      (e.skipLastTimelinelabel = !1),
                      (e.skipFirstTimelinelabel = !1),
                      (e.isDataXYZ = !1),
                      (e.isMultiLineX = !1),
                      (e.isMultipleYAxis = !1),
                      (e.maxY = -Number.MAX_VALUE),
                      (e.minY = Number.MIN_VALUE),
                      (e.minYArr = []),
                      (e.maxYArr = []),
                      (e.maxX = -Number.MAX_VALUE),
                      (e.minX = Number.MAX_VALUE),
                      (e.initialMaxX = -Number.MAX_VALUE),
                      (e.initialMinX = Number.MAX_VALUE),
                      (e.maxDate = 0),
                      (e.minDate = Number.MAX_VALUE),
                      (e.minZ = Number.MAX_VALUE),
                      (e.maxZ = -Number.MAX_VALUE),
                      (e.minXDiff = Number.MAX_VALUE),
                      (e.yAxisScale = []),
                      (e.xAxisScale = null),
                      (e.xAxisTicksPositions = []),
                      (e.yLabelsCoords = []),
                      (e.yTitleCoords = []),
                      (e.barPadForNumericAxis = 0),
                      (e.padHorizontal = 0),
                      (e.xRange = 0),
                      (e.yRange = []),
                      (e.zRange = 0),
                      (e.dataPoints = 0),
                      (e.xTickAmount = 0),
                      (e.multiAxisTickAmount = 0);
                  },
                },
                {
                  key: "globalVars",
                  value: function (e) {
                    return {
                      chartID: null,
                      cuid: null,
                      events: {
                        beforeMount: [],
                        mounted: [],
                        updated: [],
                        clicked: [],
                        selection: [],
                        dataPointSelection: [],
                        zoomed: [],
                        scrolled: [],
                      },
                      colors: [],
                      clientX: null,
                      clientY: null,
                      fill: { colors: [] },
                      stroke: { colors: [] },
                      dataLabels: { style: { colors: [] } },
                      radarPolygons: { fill: { colors: [] } },
                      markers: {
                        colors: [],
                        size: e.markers.size,
                        largestSize: 0,
                      },
                      animationEnded: !1,
                      isTouchDevice:
                        "ontouchstart" in window || navigator.msMaxTouchPoints,
                      isDirty: !1,
                      isExecCalled: !1,
                      initialConfig: null,
                      initialSeries: [],
                      lastXAxis: [],
                      lastYAxis: [],
                      columnSeries: null,
                      labels: [],
                      timescaleLabels: [],
                      noLabelsProvided: !1,
                      allSeriesCollapsed: !1,
                      collapsedSeries: [],
                      collapsedSeriesIndices: [],
                      ancillaryCollapsedSeries: [],
                      ancillaryCollapsedSeriesIndices: [],
                      risingSeries: [],
                      dataFormatXNumeric: !1,
                      capturedSeriesIndex: -1,
                      capturedDataPointIndex: -1,
                      selectedDataPoints: [],
                      goldenPadding: 35,
                      invalidLogScale: !1,
                      ignoreYAxisIndexes: [],
                      maxValsInArrayIndex: 0,
                      radialSize: 0,
                      selection: void 0,
                      zoomEnabled:
                        "zoom" === e.chart.toolbar.autoSelected &&
                        e.chart.toolbar.tools.zoom &&
                        e.chart.zoom.enabled,
                      panEnabled:
                        "pan" === e.chart.toolbar.autoSelected &&
                        e.chart.toolbar.tools.pan,
                      selectionEnabled:
                        "selection" === e.chart.toolbar.autoSelected &&
                        e.chart.toolbar.tools.selection,
                      yaxis: null,
                      mousedown: !1,
                      lastClientPosition: {},
                      visibleXRange: void 0,
                      yValueDecimal: 0,
                      total: 0,
                      SVGNS: "http://www.w3.org/2000/svg",
                      svgWidth: 0,
                      svgHeight: 0,
                      noData: !1,
                      locale: {},
                      dom: {},
                      memory: { methodsToExec: [] },
                      shouldAnimate: !0,
                      skipLastTimelinelabel: !1,
                      skipFirstTimelinelabel: !1,
                      delayedElements: [],
                      axisCharts: !0,
                      isDataXYZ: !1,
                      isSlopeChart: e.plotOptions.line.isSlopeChart,
                      resized: !1,
                      resizeTimer: null,
                      comboCharts: !1,
                      dataChanged: !1,
                      previousPaths: [],
                      allSeriesHasEqualX: !0,
                      pointsArray: [],
                      dataLabelsRects: [],
                      lastDrawnDataLabelsIndexes: [],
                      hasNullValues: !1,
                      easing: null,
                      zoomed: !1,
                      gridWidth: 0,
                      gridHeight: 0,
                      rotateXLabels: !1,
                      defaultLabels: !1,
                      xLabelFormatter: void 0,
                      yLabelFormatters: [],
                      xaxisTooltipFormatter: void 0,
                      ttKeyFormatter: void 0,
                      ttVal: void 0,
                      ttZFormatter: void 0,
                      LINE_HEIGHT_RATIO: 1.618,
                      xAxisLabelsHeight: 0,
                      xAxisGroupLabelsHeight: 0,
                      xAxisLabelsWidth: 0,
                      yAxisLabelsWidth: 0,
                      scaleX: 1,
                      scaleY: 1,
                      translateX: 0,
                      translateY: 0,
                      translateYAxisX: [],
                      yAxisWidths: [],
                      translateXAxisY: 0,
                      translateXAxisX: 0,
                      tooltip: null,
                      niceScaleAllowedMagMsd: [
                        [1, 1, 2, 5, 5, 5, 10, 10, 10, 10, 10],
                        [1, 1, 2, 5, 5, 5, 10, 10, 10, 10, 10],
                      ],
                      niceScaleDefaultTicks: [
                        1, 2, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                        12, 12, 12, 12, 12, 12, 12, 12, 12, 24,
                      ],
                      seriesYAxisMap: [],
                      seriesYAxisReverseMap: [],
                    };
                  },
                },
                {
                  key: "init",
                  value: function (e) {
                    var t = this.globalVars(e);
                    return (
                      this.initGlobalVars(t),
                      (t.initialConfig = y.extend({}, e)),
                      (t.initialSeries = y.clone(e.series)),
                      (t.lastXAxis = y.clone(t.initialConfig.xaxis)),
                      (t.lastYAxis = y.clone(t.initialConfig.yaxis)),
                      t
                    );
                  },
                },
              ]),
              e
            );
          })(),
          F = (function () {
            function e(t) {
              r(this, e), (this.opts = t);
            }
            return (
              c(e, [
                {
                  key: "init",
                  value: function () {
                    var e = new j(this.opts).init({ responsiveOverride: !1 });
                    return { config: e, globals: new B().init(e) };
                  },
                },
              ]),
              e
            );
          })(),
          W = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.opts = null),
                (this.seriesIndex = 0);
            }
            return (
              c(e, [
                {
                  key: "clippedImgArea",
                  value: function (e) {
                    var t = this.w,
                      n = t.config,
                      i = parseInt(t.globals.gridWidth, 10),
                      o = parseInt(t.globals.gridHeight, 10),
                      a = i > o ? i : o,
                      s = e.image,
                      r = 0,
                      l = 0;
                    void 0 === e.width && void 0 === e.height
                      ? void 0 !== n.fill.image.width &&
                        void 0 !== n.fill.image.height
                        ? ((r = n.fill.image.width + 1),
                          (l = n.fill.image.height))
                        : ((r = a + 1), (l = a))
                      : ((r = e.width), (l = e.height));
                    var c = document.createElementNS(
                      t.globals.SVGNS,
                      "pattern"
                    );
                    k.setAttrs(c, {
                      id: e.patternID,
                      patternUnits: e.patternUnits
                        ? e.patternUnits
                        : "userSpaceOnUse",
                      width: r + "px",
                      height: l + "px",
                    });
                    var u = document.createElementNS(t.globals.SVGNS, "image");
                    c.appendChild(u),
                      u.setAttributeNS(window.SVG.xlink, "href", s),
                      k.setAttrs(u, {
                        x: 0,
                        y: 0,
                        preserveAspectRatio: "none",
                        width: r + "px",
                        height: l + "px",
                      }),
                      (u.style.opacity = e.opacity),
                      t.globals.dom.elDefs.node.appendChild(c);
                  },
                },
                {
                  key: "getSeriesIndex",
                  value: function (e) {
                    var t = this.w,
                      n = t.config.chart.type;
                    return (
                      (("bar" === n || "rangeBar" === n) &&
                        t.config.plotOptions.bar.distributed) ||
                      "heatmap" === n ||
                      "treemap" === n
                        ? (this.seriesIndex = e.seriesNumber)
                        : (this.seriesIndex =
                            e.seriesNumber % t.globals.series.length),
                      this.seriesIndex
                    );
                  },
                },
                {
                  key: "fillPath",
                  value: function (e) {
                    var t = this.w;
                    this.opts = e;
                    var n,
                      i,
                      o,
                      a = this.w.config;
                    this.seriesIndex = this.getSeriesIndex(e);
                    var s = this.getFillColors()[this.seriesIndex];
                    void 0 !== t.globals.seriesColors[this.seriesIndex] &&
                      (s = t.globals.seriesColors[this.seriesIndex]),
                      "function" == typeof s &&
                        (s = s({
                          seriesIndex: this.seriesIndex,
                          dataPointIndex: e.dataPointIndex,
                          value: e.value,
                          w: t,
                        }));
                    var r = e.fillType
                        ? e.fillType
                        : this.getFillType(this.seriesIndex),
                      l = Array.isArray(a.fill.opacity)
                        ? a.fill.opacity[this.seriesIndex]
                        : a.fill.opacity;
                    e.color && (s = e.color),
                      s ||
                        ((s = "#fff"),
                        console.warn("undefined color - ApexCharts"));
                    var c = s;
                    if (
                      (-1 === s.indexOf("rgb")
                        ? s.length < 9 && (c = y.hexToRgba(s, l))
                        : s.indexOf("rgba") > -1 &&
                          (l = y.getOpacityFromRGBA(s)),
                      e.opacity && (l = e.opacity),
                      "pattern" === r &&
                        (i = this.handlePatternFill({
                          fillConfig: e.fillConfig,
                          patternFill: i,
                          fillColor: s,
                          fillOpacity: l,
                          defaultColor: c,
                        })),
                      "gradient" === r &&
                        (o = this.handleGradientFill({
                          fillConfig: e.fillConfig,
                          fillColor: s,
                          fillOpacity: l,
                          i: this.seriesIndex,
                        })),
                      "image" === r)
                    ) {
                      var u = a.fill.image.src,
                        d = e.patternID ? e.patternID : "";
                      this.clippedImgArea({
                        opacity: l,
                        image: Array.isArray(u)
                          ? e.seriesNumber < u.length
                            ? u[e.seriesNumber]
                            : u[0]
                          : u,
                        width: e.width ? e.width : void 0,
                        height: e.height ? e.height : void 0,
                        patternUnits: e.patternUnits,
                        patternID: "pattern"
                          .concat(t.globals.cuid)
                          .concat(e.seriesNumber + 1)
                          .concat(d),
                      }),
                        (n = "url(#pattern"
                          .concat(t.globals.cuid)
                          .concat(e.seriesNumber + 1)
                          .concat(d, ")"));
                    } else n = "gradient" === r ? o : "pattern" === r ? i : c;
                    return e.solid && (n = c), n;
                  },
                },
                {
                  key: "getFillType",
                  value: function (e) {
                    var t = this.w;
                    return Array.isArray(t.config.fill.type)
                      ? t.config.fill.type[e]
                      : t.config.fill.type;
                  },
                },
                {
                  key: "getFillColors",
                  value: function () {
                    var e = this.w,
                      t = e.config,
                      n = this.opts,
                      i = [];
                    return (
                      e.globals.comboCharts
                        ? "line" === e.config.series[this.seriesIndex].type
                          ? Array.isArray(e.globals.stroke.colors)
                            ? (i = e.globals.stroke.colors)
                            : i.push(e.globals.stroke.colors)
                          : Array.isArray(e.globals.fill.colors)
                          ? (i = e.globals.fill.colors)
                          : i.push(e.globals.fill.colors)
                        : "line" === t.chart.type
                        ? Array.isArray(e.globals.stroke.colors)
                          ? (i = e.globals.stroke.colors)
                          : i.push(e.globals.stroke.colors)
                        : Array.isArray(e.globals.fill.colors)
                        ? (i = e.globals.fill.colors)
                        : i.push(e.globals.fill.colors),
                      void 0 !== n.fillColors &&
                        ((i = []),
                        Array.isArray(n.fillColors)
                          ? (i = n.fillColors.slice())
                          : i.push(n.fillColors)),
                      i
                    );
                  },
                },
                {
                  key: "handlePatternFill",
                  value: function (e) {
                    var t = e.fillConfig,
                      n = (e.patternFill, e.fillColor),
                      i = e.fillOpacity,
                      o = e.defaultColor,
                      a = this.w.config.fill;
                    t && (a = t);
                    var s = this.opts,
                      r = new k(this.ctx),
                      l = Array.isArray(a.pattern.strokeWidth)
                        ? a.pattern.strokeWidth[this.seriesIndex]
                        : a.pattern.strokeWidth,
                      c = n;
                    return Array.isArray(a.pattern.style)
                      ? void 0 !== a.pattern.style[s.seriesNumber]
                        ? r.drawPattern(
                            a.pattern.style[s.seriesNumber],
                            a.pattern.width,
                            a.pattern.height,
                            c,
                            l,
                            i
                          )
                        : o
                      : r.drawPattern(
                          a.pattern.style,
                          a.pattern.width,
                          a.pattern.height,
                          c,
                          l,
                          i
                        );
                  },
                },
                {
                  key: "handleGradientFill",
                  value: function (e) {
                    var t = e.fillColor,
                      n = e.fillOpacity,
                      i = e.fillConfig,
                      o = e.i,
                      s = this.w.config.fill;
                    i && (s = a(a({}, s), i));
                    var r,
                      l = this.opts,
                      c = new k(this.ctx),
                      u = new y(),
                      d = s.gradient.type,
                      h = t,
                      p =
                        void 0 === s.gradient.opacityFrom
                          ? n
                          : Array.isArray(s.gradient.opacityFrom)
                          ? s.gradient.opacityFrom[o]
                          : s.gradient.opacityFrom;
                    h.indexOf("rgba") > -1 && (p = y.getOpacityFromRGBA(h));
                    var f =
                      void 0 === s.gradient.opacityTo
                        ? n
                        : Array.isArray(s.gradient.opacityTo)
                        ? s.gradient.opacityTo[o]
                        : s.gradient.opacityTo;
                    if (
                      void 0 === s.gradient.gradientToColors ||
                      0 === s.gradient.gradientToColors.length
                    )
                      r =
                        "dark" === s.gradient.shade
                          ? u.shadeColor(
                              -1 * parseFloat(s.gradient.shadeIntensity),
                              t.indexOf("rgb") > -1 ? y.rgb2hex(t) : t
                            )
                          : u.shadeColor(
                              parseFloat(s.gradient.shadeIntensity),
                              t.indexOf("rgb") > -1 ? y.rgb2hex(t) : t
                            );
                    else if (s.gradient.gradientToColors[l.seriesNumber]) {
                      var g = s.gradient.gradientToColors[l.seriesNumber];
                      (r = g),
                        g.indexOf("rgba") > -1 && (f = y.getOpacityFromRGBA(g));
                    } else r = t;
                    if (
                      (s.gradient.gradientFrom && (h = s.gradient.gradientFrom),
                      s.gradient.gradientTo && (r = s.gradient.gradientTo),
                      s.gradient.inverseColors)
                    ) {
                      var m = h;
                      (h = r), (r = m);
                    }
                    return (
                      h.indexOf("rgb") > -1 && (h = y.rgb2hex(h)),
                      r.indexOf("rgb") > -1 && (r = y.rgb2hex(r)),
                      c.drawGradient(
                        d,
                        h,
                        r,
                        p,
                        f,
                        l.size,
                        s.gradient.stops,
                        s.gradient.colorStops,
                        o
                      )
                    );
                  },
                },
              ]),
              e
            );
          })(),
          H = (function () {
            function e(t, n) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "setGlobalMarkerSize",
                  value: function () {
                    var e = this.w;
                    if (
                      ((e.globals.markers.size = Array.isArray(
                        e.config.markers.size
                      )
                        ? e.config.markers.size
                        : [e.config.markers.size]),
                      e.globals.markers.size.length > 0)
                    ) {
                      if (
                        e.globals.markers.size.length <
                        e.globals.series.length + 1
                      )
                        for (var t = 0; t <= e.globals.series.length; t++)
                          void 0 === e.globals.markers.size[t] &&
                            e.globals.markers.size.push(
                              e.globals.markers.size[0]
                            );
                    } else
                      e.globals.markers.size = e.config.series.map(function (
                        t
                      ) {
                        return e.config.markers.size;
                      });
                  },
                },
                {
                  key: "plotChartMarkers",
                  value: function (e, t, n, i) {
                    var o,
                      a =
                        arguments.length > 4 &&
                        void 0 !== arguments[4] &&
                        arguments[4],
                      s = this.w,
                      r = t,
                      l = e,
                      c = null,
                      u = new k(this.ctx),
                      d =
                        s.config.markers.discrete &&
                        s.config.markers.discrete.length;
                    if (
                      ((s.globals.markers.size[t] > 0 || a || d) &&
                        (c = u.group({
                          class: a || d ? "" : "apexcharts-series-markers",
                        })).attr(
                          "clip-path",
                          "url(#gridRectMarkerMask".concat(s.globals.cuid, ")")
                        ),
                      Array.isArray(l.x))
                    )
                      for (var h = 0; h < l.x.length; h++) {
                        var p = n;
                        1 === n && 0 === h && (p = 0),
                          1 === n && 1 === h && (p = 1);
                        var f = "apexcharts-marker";
                        if (
                          (("line" !== s.config.chart.type &&
                            "area" !== s.config.chart.type) ||
                            s.globals.comboCharts ||
                            s.config.tooltip.intersect ||
                            (f += " no-pointer-events"),
                          (Array.isArray(s.config.markers.size)
                            ? s.globals.markers.size[t] > 0
                            : s.config.markers.size > 0) ||
                            a ||
                            d)
                        ) {
                          y.isNumber(l.y[h])
                            ? (f += " w".concat(y.randomId()))
                            : (f = "apexcharts-nullpoint");
                          var g = this.getMarkerConfig({
                            cssClass: f,
                            seriesIndex: t,
                            dataPointIndex: p,
                          });
                          s.config.series[r].data[p] &&
                            (s.config.series[r].data[p].fillColor &&
                              (g.pointFillColor =
                                s.config.series[r].data[p].fillColor),
                            s.config.series[r].data[p].strokeColor &&
                              (g.pointStrokeColor =
                                s.config.series[r].data[p].strokeColor)),
                            void 0 !== i && (g.pSize = i),
                            (l.x[h] < -s.globals.markers.largestSize ||
                              l.x[h] >
                                s.globals.gridWidth +
                                  s.globals.markers.largestSize ||
                              l.y[h] < -s.globals.markers.largestSize ||
                              l.y[h] >
                                s.globals.gridHeight +
                                  s.globals.markers.largestSize) &&
                              (g.pSize = 0),
                            (o = u.drawMarker(l.x[h], l.y[h], g)).attr(
                              "rel",
                              p
                            ),
                            o.attr("j", p),
                            o.attr("index", t),
                            o.node.setAttribute("default-marker-size", g.pSize),
                            new S(this.ctx).setSelectionFilter(o, t, p),
                            this.addEvents(o),
                            c && c.add(o);
                        } else
                          void 0 === s.globals.pointsArray[t] &&
                            (s.globals.pointsArray[t] = []),
                            s.globals.pointsArray[t].push([l.x[h], l.y[h]]);
                      }
                    return c;
                  },
                },
                {
                  key: "getMarkerConfig",
                  value: function (e) {
                    var t = e.cssClass,
                      n = e.seriesIndex,
                      i = e.dataPointIndex,
                      o = void 0 === i ? null : i,
                      a = e.radius,
                      s = void 0 === a ? null : a,
                      r = e.size,
                      l = void 0 === r ? null : r,
                      c = e.strokeWidth,
                      u = void 0 === c ? null : c,
                      d = this.w,
                      h = this.getMarkerStyle(n),
                      p = null === l ? d.globals.markers.size[n] : l,
                      f = d.config.markers;
                    return (
                      null !== o &&
                        f.discrete.length &&
                        f.discrete.map(function (e) {
                          e.seriesIndex === n &&
                            e.dataPointIndex === o &&
                            ((h.pointStrokeColor = e.strokeColor),
                            (h.pointFillColor = e.fillColor),
                            (p = e.size),
                            (h.pointShape = e.shape));
                        }),
                      {
                        pSize: null === s ? p : s,
                        pRadius: null !== s ? s : f.radius,
                        pointStrokeWidth:
                          null !== u
                            ? u
                            : Array.isArray(f.strokeWidth)
                            ? f.strokeWidth[n]
                            : f.strokeWidth,
                        pointStrokeColor: h.pointStrokeColor,
                        pointFillColor: h.pointFillColor,
                        shape:
                          h.pointShape ||
                          (Array.isArray(f.shape) ? f.shape[n] : f.shape),
                        class: t,
                        pointStrokeOpacity: Array.isArray(f.strokeOpacity)
                          ? f.strokeOpacity[n]
                          : f.strokeOpacity,
                        pointStrokeDashArray: Array.isArray(f.strokeDashArray)
                          ? f.strokeDashArray[n]
                          : f.strokeDashArray,
                        pointFillOpacity: Array.isArray(f.fillOpacity)
                          ? f.fillOpacity[n]
                          : f.fillOpacity,
                        seriesIndex: n,
                      }
                    );
                  },
                },
                {
                  key: "addEvents",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx);
                    e.node.addEventListener(
                      "mouseenter",
                      n.pathMouseEnter.bind(this.ctx, e)
                    ),
                      e.node.addEventListener(
                        "mouseleave",
                        n.pathMouseLeave.bind(this.ctx, e)
                      ),
                      e.node.addEventListener(
                        "mousedown",
                        n.pathMouseDown.bind(this.ctx, e)
                      ),
                      e.node.addEventListener(
                        "click",
                        t.config.markers.onClick
                      ),
                      e.node.addEventListener(
                        "dblclick",
                        t.config.markers.onDblClick
                      ),
                      e.node.addEventListener(
                        "touchstart",
                        n.pathMouseDown.bind(this.ctx, e),
                        { passive: !0 }
                      );
                  },
                },
                {
                  key: "getMarkerStyle",
                  value: function (e) {
                    var t = this.w,
                      n = t.globals.markers.colors,
                      i =
                        t.config.markers.strokeColor ||
                        t.config.markers.strokeColors;
                    return {
                      pointStrokeColor: Array.isArray(i) ? i[e] : i,
                      pointFillColor: Array.isArray(n) ? n[e] : n,
                    };
                  },
                },
              ]),
              e
            );
          })(),
          G = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.initialAnim = this.w.config.chart.animations.enabled);
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = new k(this.ctx),
                      a = n.realIndex,
                      s = n.pointsPos,
                      r = n.zRatio,
                      l = n.elParent,
                      c = o.group({
                        class:
                          "apexcharts-series-markers apexcharts-series-".concat(
                            i.config.chart.type
                          ),
                      });
                    if (
                      (c.attr(
                        "clip-path",
                        "url(#gridRectMarkerMask".concat(i.globals.cuid, ")")
                      ),
                      Array.isArray(s.x))
                    )
                      for (var u = 0; u < s.x.length; u++) {
                        var d = t + 1,
                          h = !0;
                        0 === t && 0 === u && (d = 0),
                          0 === t && 1 === u && (d = 1);
                        var p = i.globals.markers.size[a];
                        if (r !== 1 / 0) {
                          var f = i.config.plotOptions.bubble;
                          (p = i.globals.seriesZ[a][d]),
                            f.zScaling && (p /= r),
                            f.minBubbleRadius &&
                              p < f.minBubbleRadius &&
                              (p = f.minBubbleRadius),
                            f.maxBubbleRadius &&
                              p > f.maxBubbleRadius &&
                              (p = f.maxBubbleRadius);
                        }
                        var g = s.x[u],
                          m = s.y[u];
                        if (
                          ((p = p || 0),
                          (null !== m && void 0 !== i.globals.series[a][d]) ||
                            (h = !1),
                          h)
                        ) {
                          var v = this.drawPoint(g, m, p, a, d, t);
                          c.add(v);
                        }
                        l.add(c);
                      }
                  },
                },
                {
                  key: "drawPoint",
                  value: function (e, t, n, i, o, a) {
                    var s = this.w,
                      r = i,
                      l = new w(this.ctx),
                      c = new S(this.ctx),
                      u = new W(this.ctx),
                      d = new H(this.ctx),
                      h = new k(this.ctx),
                      p = d.getMarkerConfig({
                        cssClass: "apexcharts-marker",
                        seriesIndex: r,
                        dataPointIndex: o,
                        radius:
                          "bubble" === s.config.chart.type ||
                          (s.globals.comboCharts &&
                            s.config.series[i] &&
                            "bubble" === s.config.series[i].type)
                            ? n
                            : null,
                      }),
                      f = u.fillPath({
                        seriesNumber: i,
                        dataPointIndex: o,
                        color: p.pointFillColor,
                        patternUnits: "objectBoundingBox",
                        value: s.globals.series[i][a],
                      }),
                      g = h.drawMarker(e, t, p);
                    if (
                      (s.config.series[r].data[o] &&
                        s.config.series[r].data[o].fillColor &&
                        (f = s.config.series[r].data[o].fillColor),
                      g.attr({ fill: f }),
                      s.config.chart.dropShadow.enabled)
                    ) {
                      var m = s.config.chart.dropShadow;
                      c.dropShadow(g, m, i);
                    }
                    if (
                      !this.initialAnim ||
                      s.globals.dataChanged ||
                      s.globals.resized
                    )
                      s.globals.animationEnded = !0;
                    else {
                      var v = s.config.chart.animations.speed;
                      l.animateMarker(g, v, s.globals.easing, function () {
                        window.setTimeout(function () {
                          l.animationCompleted(g);
                        }, 100);
                      });
                    }
                    return (
                      g.attr({
                        rel: o,
                        j: o,
                        index: i,
                        "default-marker-size": p.pSize,
                      }),
                      c.setSelectionFilter(g, i, o),
                      d.addEvents(g),
                      g.node.classList.add("apexcharts-marker"),
                      g
                    );
                  },
                },
                {
                  key: "centerTextInBubble",
                  value: function (e) {
                    var t = this.w;
                    return {
                      y: (e +=
                        parseInt(t.config.dataLabels.style.fontSize, 10) / 4),
                    };
                  },
                },
              ]),
              e
            );
          })(),
          V = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "dataLabelsCorrection",
                  value: function (e, t, n, i, o, a, s) {
                    var r = this.w,
                      l = !1,
                      c = new k(this.ctx).getTextRects(n, s),
                      u = c.width,
                      d = c.height;
                    t < 0 && (t = 0),
                      t > r.globals.gridHeight + d &&
                        (t = r.globals.gridHeight + d / 2),
                      void 0 === r.globals.dataLabelsRects[i] &&
                        (r.globals.dataLabelsRects[i] = []),
                      r.globals.dataLabelsRects[i].push({
                        x: e,
                        y: t,
                        width: u,
                        height: d,
                      });
                    var h = r.globals.dataLabelsRects[i].length - 2,
                      p =
                        void 0 !== r.globals.lastDrawnDataLabelsIndexes[i]
                          ? r.globals.lastDrawnDataLabelsIndexes[i][
                              r.globals.lastDrawnDataLabelsIndexes[i].length - 1
                            ]
                          : 0;
                    if (void 0 !== r.globals.dataLabelsRects[i][h]) {
                      var f = r.globals.dataLabelsRects[i][p];
                      (e > f.x + f.width ||
                        t > f.y + f.height ||
                        t + d < f.y ||
                        e + u < f.x) &&
                        (l = !0);
                    }
                    return (
                      (0 === o || a) && (l = !0),
                      { x: e, y: t, textRects: c, drawnextLabel: l }
                    );
                  },
                },
                {
                  key: "drawDataLabel",
                  value: function (e) {
                    var t = this,
                      n = e.type,
                      i = e.pos,
                      o = e.i,
                      a = e.j,
                      s = e.isRangeStart,
                      r = e.strokeWidth,
                      l = void 0 === r ? 2 : r,
                      c = this.w,
                      u = new k(this.ctx),
                      d = c.config.dataLabels,
                      h = 0,
                      p = 0,
                      f = a,
                      g = null;
                    if (
                      -1 !== c.globals.collapsedSeriesIndices.indexOf(o) ||
                      !d.enabled ||
                      !Array.isArray(i.x)
                    )
                      return g;
                    g = u.group({ class: "apexcharts-data-labels" });
                    for (var m = 0; m < i.x.length; m++)
                      if (
                        ((h = i.x[m] + d.offsetX),
                        (p = i.y[m] + d.offsetY + l),
                        !isNaN(h))
                      ) {
                        1 === a && 0 === m && (f = 0),
                          1 === a && 1 === m && (f = 1);
                        var v = c.globals.series[o][f];
                        "rangeArea" === n &&
                          (v = s
                            ? c.globals.seriesRangeStart[o][f]
                            : c.globals.seriesRangeEnd[o][f]);
                        var b = "",
                          x = function (e) {
                            return c.config.dataLabels.formatter(e, {
                              ctx: t.ctx,
                              seriesIndex: o,
                              dataPointIndex: f,
                              w: c,
                            });
                          };
                        "bubble" === c.config.chart.type
                          ? ((b = x((v = c.globals.seriesZ[o][f]))),
                            (p = i.y[m]),
                            (p = new G(this.ctx).centerTextInBubble(p, o, f).y))
                          : void 0 !== v && (b = x(v));
                        var y = c.config.dataLabels.textAnchor;
                        c.globals.isSlopeChart &&
                          (y =
                            0 === f
                              ? "end"
                              : f === c.config.series[o].data.length - 1
                              ? "start"
                              : "middle"),
                          this.plotDataLabelsText({
                            x: h,
                            y: p,
                            text: b,
                            i: o,
                            j: f,
                            parent: g,
                            offsetCorrection: !0,
                            dataLabelsConfig: c.config.dataLabels,
                            textAnchor: y,
                          });
                      }
                    return g;
                  },
                },
                {
                  key: "plotDataLabelsText",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = e.x,
                      o = e.y,
                      a = e.i,
                      s = e.j,
                      r = e.text,
                      l = e.textAnchor,
                      c = e.fontSize,
                      u = e.parent,
                      d = e.dataLabelsConfig,
                      h = e.color,
                      p = e.alwaysDrawDataLabel,
                      f = e.offsetCorrection,
                      g = e.className,
                      m = null;
                    if (
                      Array.isArray(t.config.dataLabels.enabledOnSeries) &&
                      t.config.dataLabels.enabledOnSeries.indexOf(a) < 0
                    )
                      return m;
                    var v = { x: i, y: o, drawnextLabel: !0, textRects: null };
                    f &&
                      (v = this.dataLabelsCorrection(
                        i,
                        o,
                        r,
                        a,
                        s,
                        p,
                        parseInt(d.style.fontSize, 10)
                      )),
                      t.globals.zoomed || ((i = v.x), (o = v.y)),
                      v.textRects &&
                        (i < -20 - v.textRects.width ||
                          i > t.globals.gridWidth + v.textRects.width + 30) &&
                        (r = "");
                    var b = t.globals.dataLabels.style.colors[a];
                    ((("bar" === t.config.chart.type ||
                      "rangeBar" === t.config.chart.type) &&
                      t.config.plotOptions.bar.distributed) ||
                      t.config.dataLabels.distributed) &&
                      (b = t.globals.dataLabels.style.colors[s]),
                      "function" == typeof b &&
                        (b = b({
                          series: t.globals.series,
                          seriesIndex: a,
                          dataPointIndex: s,
                          w: t,
                        })),
                      h && (b = h);
                    var x = d.offsetX,
                      y = d.offsetY;
                    if (
                      (("bar" !== t.config.chart.type &&
                        "rangeBar" !== t.config.chart.type) ||
                        ((x = 0), (y = 0)),
                      t.globals.isSlopeChart &&
                        (0 !== s && (x = -2 * d.offsetX + 5),
                        0 !== s &&
                          s !== t.config.series[a].data.length - 1 &&
                          (x = 0)),
                      v.drawnextLabel)
                    ) {
                      if (
                        ((m = n.drawText({
                          width: 100,
                          height: parseInt(d.style.fontSize, 10),
                          x: i + x,
                          y: o + y,
                          foreColor: b,
                          textAnchor: l || d.textAnchor,
                          text: r,
                          fontSize: c || d.style.fontSize,
                          fontFamily: d.style.fontFamily,
                          fontWeight: d.style.fontWeight || "normal",
                        })).attr({
                          class: g || "apexcharts-datalabel",
                          cx: i,
                          cy: o,
                        }),
                        d.dropShadow.enabled)
                      ) {
                        var w = d.dropShadow;
                        new S(this.ctx).dropShadow(m, w);
                      }
                      u.add(m),
                        void 0 === t.globals.lastDrawnDataLabelsIndexes[a] &&
                          (t.globals.lastDrawnDataLabelsIndexes[a] = []),
                        t.globals.lastDrawnDataLabelsIndexes[a].push(s);
                    }
                    return m;
                  },
                },
                {
                  key: "addBackgroundToDataLabel",
                  value: function (e, t) {
                    var n = this.w,
                      i = n.config.dataLabels.background,
                      o = i.padding,
                      a = i.padding / 2,
                      s = t.width,
                      r = t.height,
                      l = new k(this.ctx).drawRect(
                        t.x - o,
                        t.y - a / 2,
                        s + 2 * o,
                        r + a,
                        i.borderRadius,
                        "transparent" !== n.config.chart.background &&
                          n.config.chart.background
                          ? n.config.chart.background
                          : "#fff",
                        i.opacity,
                        i.borderWidth,
                        i.borderColor
                      );
                    return (
                      i.dropShadow.enabled &&
                        new S(this.ctx).dropShadow(l, i.dropShadow),
                      l
                    );
                  },
                },
                {
                  key: "dataLabelsBackground",
                  value: function () {
                    var e = this.w;
                    if ("bubble" !== e.config.chart.type)
                      for (
                        var t = e.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-datalabels text"
                          ),
                          n = 0;
                        n < t.length;
                        n++
                      ) {
                        var i = t[n],
                          o = i.getBBox(),
                          a = null;
                        if (
                          (o.width &&
                            o.height &&
                            (a = this.addBackgroundToDataLabel(i, o)),
                          a)
                        ) {
                          i.parentNode.insertBefore(a.node, i);
                          var s = i.getAttribute("fill");
                          !e.config.chart.animations.enabled ||
                          e.globals.resized ||
                          e.globals.dataChanged
                            ? a.attr({ fill: s })
                            : a.animate().attr({ fill: s }),
                            i.setAttribute(
                              "fill",
                              e.config.dataLabels.background.foreColor
                            );
                        }
                      }
                  },
                },
                {
                  key: "bringForward",
                  value: function () {
                    for (
                      var e = this.w,
                        t = e.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-datalabels"
                        ),
                        n = e.globals.dom.baseEl.querySelector(
                          ".apexcharts-plot-series:last-child"
                        ),
                        i = 0;
                      i < t.length;
                      i++
                    )
                      n && n.insertBefore(t[i], n.nextSibling);
                  },
                },
              ]),
              e
            );
          })(),
          U = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.legendInactiveClass = "legend-mouseover-inactive");
            }
            return (
              c(e, [
                {
                  key: "getAllSeriesEls",
                  value: function () {
                    return this.w.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-series"
                    );
                  },
                },
                {
                  key: "getSeriesByName",
                  value: function (e) {
                    return this.w.globals.dom.baseEl.querySelector(
                      ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                        y.escapeString(e),
                        "']"
                      )
                    );
                  },
                },
                {
                  key: "isSeriesHidden",
                  value: function (e) {
                    var t = this.getSeriesByName(e),
                      n = parseInt(t.getAttribute("data:realIndex"), 10);
                    return {
                      isHidden: t.classList.contains(
                        "apexcharts-series-collapsed"
                      ),
                      realIndex: n,
                    };
                  },
                },
                {
                  key: "addCollapsedClassToSeries",
                  value: function (e, t) {
                    var n = this.w;
                    function i(n) {
                      for (var i = 0; i < n.length; i++)
                        n[i].index === t &&
                          e.node.classList.add("apexcharts-series-collapsed");
                    }
                    i(n.globals.collapsedSeries),
                      i(n.globals.ancillaryCollapsedSeries);
                  },
                },
                {
                  key: "toggleSeries",
                  value: function (e) {
                    var t = this.isSeriesHidden(e);
                    return (
                      this.ctx.legend.legendHelpers.toggleDataSeries(
                        t.realIndex,
                        t.isHidden
                      ),
                      t.isHidden
                    );
                  },
                },
                {
                  key: "showSeries",
                  value: function (e) {
                    var t = this.isSeriesHidden(e);
                    t.isHidden &&
                      this.ctx.legend.legendHelpers.toggleDataSeries(
                        t.realIndex,
                        !0
                      );
                  },
                },
                {
                  key: "hideSeries",
                  value: function (e) {
                    var t = this.isSeriesHidden(e);
                    t.isHidden ||
                      this.ctx.legend.legendHelpers.toggleDataSeries(
                        t.realIndex,
                        !1
                      );
                  },
                },
                {
                  key: "resetSeries",
                  value: function () {
                    var e =
                        !(arguments.length > 0 && void 0 !== arguments[0]) ||
                        arguments[0],
                      t =
                        !(arguments.length > 1 && void 0 !== arguments[1]) ||
                        arguments[1],
                      n =
                        !(arguments.length > 2 && void 0 !== arguments[2]) ||
                        arguments[2],
                      i = this.w,
                      o = y.clone(i.globals.initialSeries);
                    (i.globals.previousPaths = []),
                      n
                        ? ((i.globals.collapsedSeries = []),
                          (i.globals.ancillaryCollapsedSeries = []),
                          (i.globals.collapsedSeriesIndices = []),
                          (i.globals.ancillaryCollapsedSeriesIndices = []))
                        : (o = this.emptyCollapsedSeries(o)),
                      (i.config.series = o),
                      e &&
                        (t &&
                          ((i.globals.zoomed = !1),
                          this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                        this.ctx.updateHelpers._updateSeries(
                          o,
                          i.config.chart.animations.dynamicAnimation.enabled
                        ));
                  },
                },
                {
                  key: "emptyCollapsedSeries",
                  value: function (e) {
                    for (var t = this.w, n = 0; n < e.length; n++)
                      t.globals.collapsedSeriesIndices.indexOf(n) > -1 &&
                        (e[n].data = []);
                    return e;
                  },
                },
                {
                  key: "toggleSeriesOnHover",
                  value: function (e, t) {
                    var n = this.w;
                    t || (t = e.target);
                    var i = n.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series, .apexcharts-datalabels, .apexcharts-yaxis"
                    );
                    if ("mousemove" === e.type) {
                      var o = parseInt(t.getAttribute("rel"), 10) - 1,
                        a = null,
                        s = null,
                        r = null;
                      if (
                        n.globals.axisCharts ||
                        "radialBar" === n.config.chart.type
                      )
                        if (n.globals.axisCharts) {
                          (a = n.globals.dom.baseEl.querySelector(
                            ".apexcharts-series[data\\:realIndex='".concat(
                              o,
                              "']"
                            )
                          )),
                            (s = n.globals.dom.baseEl.querySelector(
                              ".apexcharts-datalabels[data\\:realIndex='".concat(
                                o,
                                "']"
                              )
                            ));
                          var l = n.globals.seriesYAxisReverseMap[o];
                          r = n.globals.dom.baseEl.querySelector(
                            ".apexcharts-yaxis[rel='".concat(l, "']")
                          );
                        } else
                          a = n.globals.dom.baseEl.querySelector(
                            ".apexcharts-series[rel='".concat(o + 1, "']")
                          );
                      else
                        a = n.globals.dom.baseEl.querySelector(
                          ".apexcharts-series[rel='".concat(o + 1, "'] path")
                        );
                      for (var c = 0; c < i.length; c++)
                        i[c].classList.add(this.legendInactiveClass);
                      null !== a &&
                        (n.globals.axisCharts ||
                          a.parentNode.classList.remove(
                            this.legendInactiveClass
                          ),
                        a.classList.remove(this.legendInactiveClass),
                        null !== s &&
                          s.classList.remove(this.legendInactiveClass),
                        null !== r &&
                          r.classList.remove(this.legendInactiveClass));
                    } else if ("mouseout" === e.type)
                      for (var u = 0; u < i.length; u++)
                        i[u].classList.remove(this.legendInactiveClass);
                  },
                },
                {
                  key: "highlightRangeInSeries",
                  value: function (e, t) {
                    var n = this,
                      i = this.w,
                      o = i.globals.dom.baseEl.getElementsByClassName(
                        "apexcharts-heatmap-rect"
                      ),
                      a = function (e) {
                        for (var t = 0; t < o.length; t++)
                          o[t].classList[e](n.legendInactiveClass);
                      };
                    if ("mousemove" === e.type) {
                      var s = parseInt(t.getAttribute("rel"), 10) - 1;
                      a("add"),
                        (function (e) {
                          for (var t = 0; t < o.length; t++) {
                            var i = parseInt(o[t].getAttribute("val"), 10);
                            i >= e.from &&
                              i <= e.to &&
                              o[t].classList.remove(n.legendInactiveClass);
                          }
                        })(i.config.plotOptions.heatmap.colorScale.ranges[s]);
                    } else "mouseout" === e.type && a("remove");
                  },
                },
                {
                  key: "getActiveConfigSeriesIndex",
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : "asc",
                      t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : [],
                      n = this.w,
                      i = 0;
                    if (n.config.series.length > 1)
                      for (
                        var o = n.config.series.map(function (e, i) {
                            return e.data &&
                              e.data.length > 0 &&
                              -1 ===
                                n.globals.collapsedSeriesIndices.indexOf(i) &&
                              (!n.globals.comboCharts ||
                                0 === t.length ||
                                (t.length &&
                                  t.indexOf(n.config.series[i].type) > -1))
                              ? i
                              : -1;
                          }),
                          a = "asc" === e ? 0 : o.length - 1;
                        "asc" === e ? a < o.length : a >= 0;
                        "asc" === e ? a++ : a--
                      )
                        if (-1 !== o[a]) {
                          i = o[a];
                          break;
                        }
                    return i;
                  },
                },
                {
                  key: "getBarSeriesIndices",
                  value: function () {
                    return this.w.globals.comboCharts
                      ? this.w.config.series
                          .map(function (e, t) {
                            return "bar" === e.type || "column" === e.type
                              ? t
                              : -1;
                          })
                          .filter(function (e) {
                            return -1 !== e;
                          })
                      : this.w.config.series.map(function (e, t) {
                          return t;
                        });
                  },
                },
                {
                  key: "getPreviousPaths",
                  value: function () {
                    var e = this.w;
                    function t(t, n, i) {
                      for (
                        var o = t[n].childNodes,
                          a = {
                            type: i,
                            paths: [],
                            realIndex: t[n].getAttribute("data:realIndex"),
                          },
                          s = 0;
                        s < o.length;
                        s++
                      )
                        if (o[s].hasAttribute("pathTo")) {
                          var r = o[s].getAttribute("pathTo");
                          a.paths.push({ d: r });
                        }
                      e.globals.previousPaths.push(a);
                    }
                    (e.globals.previousPaths = []),
                      [
                        "line",
                        "area",
                        "bar",
                        "rangebar",
                        "rangeArea",
                        "candlestick",
                        "radar",
                      ].forEach(function (n) {
                        for (
                          var i,
                            o =
                              ((i = n),
                              e.globals.dom.baseEl.querySelectorAll(
                                ".apexcharts-".concat(
                                  i,
                                  "-series .apexcharts-series"
                                )
                              )),
                            a = 0;
                          a < o.length;
                          a++
                        )
                          t(o, a, n);
                      }),
                      this.handlePrevBubbleScatterPaths("bubble"),
                      this.handlePrevBubbleScatterPaths("scatter");
                    var n = e.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-".concat(
                        e.config.chart.type,
                        " .apexcharts-series"
                      )
                    );
                    if (n.length > 0)
                      for (
                        var i = function (t) {
                            for (
                              var n = e.globals.dom.baseEl.querySelectorAll(
                                  ".apexcharts-"
                                    .concat(
                                      e.config.chart.type,
                                      " .apexcharts-series[data\\:realIndex='"
                                    )
                                    .concat(t, "'] rect")
                                ),
                                i = [],
                                o = function (e) {
                                  var t = function (t) {
                                      return n[e].getAttribute(t);
                                    },
                                    o = {
                                      x: parseFloat(t("x")),
                                      y: parseFloat(t("y")),
                                      width: parseFloat(t("width")),
                                      height: parseFloat(t("height")),
                                    };
                                  i.push({
                                    rect: o,
                                    color: n[e].getAttribute("color"),
                                  });
                                },
                                a = 0;
                              a < n.length;
                              a++
                            )
                              o(a);
                            e.globals.previousPaths.push(i);
                          },
                          o = 0;
                        o < n.length;
                        o++
                      )
                        i(o);
                    e.globals.axisCharts ||
                      (e.globals.previousPaths = e.globals.series);
                  },
                },
                {
                  key: "handlePrevBubbleScatterPaths",
                  value: function (e) {
                    var t = this.w,
                      n = t.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-".concat(e, "-series .apexcharts-series")
                      );
                    if (n.length > 0)
                      for (var i = 0; i < n.length; i++) {
                        for (
                          var o = t.globals.dom.baseEl.querySelectorAll(
                              ".apexcharts-"
                                .concat(
                                  e,
                                  "-series .apexcharts-series[data\\:realIndex='"
                                )
                                .concat(i, "'] circle")
                            ),
                            a = [],
                            s = 0;
                          s < o.length;
                          s++
                        )
                          a.push({
                            x: o[s].getAttribute("cx"),
                            y: o[s].getAttribute("cy"),
                            r: o[s].getAttribute("r"),
                          });
                        t.globals.previousPaths.push(a);
                      }
                  },
                },
                {
                  key: "clearPreviousPaths",
                  value: function () {
                    var e = this.w;
                    (e.globals.previousPaths = []),
                      (e.globals.allSeriesCollapsed = !1);
                  },
                },
                {
                  key: "handleNoData",
                  value: function () {
                    var e = this.w,
                      t = e.config.noData,
                      n = new k(this.ctx),
                      i = e.globals.svgWidth / 2,
                      o = e.globals.svgHeight / 2,
                      a = "middle";
                    if (
                      ((e.globals.noData = !0),
                      (e.globals.animationEnded = !0),
                      "left" === t.align
                        ? ((i = 10), (a = "start"))
                        : "right" === t.align &&
                          ((i = e.globals.svgWidth - 10), (a = "end")),
                      "top" === t.verticalAlign
                        ? (o = 50)
                        : "bottom" === t.verticalAlign &&
                          (o = e.globals.svgHeight - 50),
                      (i += t.offsetX),
                      (o = o + parseInt(t.style.fontSize, 10) + 2 + t.offsetY),
                      void 0 !== t.text && "" !== t.text)
                    ) {
                      var s = n.drawText({
                        x: i,
                        y: o,
                        text: t.text,
                        textAnchor: a,
                        fontSize: t.style.fontSize,
                        fontFamily: t.style.fontFamily,
                        foreColor: t.style.color,
                        opacity: 1,
                        class: "apexcharts-text-nodata",
                      });
                      e.globals.dom.Paper.add(s);
                    }
                  },
                },
                {
                  key: "setNullSeriesToZeroValues",
                  value: function (e) {
                    for (var t = this.w, n = 0; n < e.length; n++)
                      if (0 === e[n].length)
                        for (
                          var i = 0;
                          i < e[t.globals.maxValsInArrayIndex].length;
                          i++
                        )
                          e[n].push(0);
                    return e;
                  },
                },
                {
                  key: "hasAllSeriesEqualX",
                  value: function () {
                    for (
                      var e = !0, t = this.w, n = this.filteredSeriesX(), i = 0;
                      i < n.length - 1;
                      i++
                    )
                      if (n[i][0] !== n[i + 1][0]) {
                        e = !1;
                        break;
                      }
                    return (t.globals.allSeriesHasEqualX = e), e;
                  },
                },
                {
                  key: "filteredSeriesX",
                  value: function () {
                    return this.w.globals.seriesX.map(function (e) {
                      return e.length > 0 ? e : [];
                    });
                  },
                },
              ]),
              e
            );
          })(),
          Y = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.twoDSeries = []),
                (this.threeDSeries = []),
                (this.twoDSeriesX = []),
                (this.seriesGoals = []),
                (this.coreUtils = new A(this.ctx));
            }
            return (
              c(e, [
                {
                  key: "isMultiFormat",
                  value: function () {
                    return this.isFormatXY() || this.isFormat2DArray();
                  },
                },
                {
                  key: "isFormatXY",
                  value: function () {
                    var e = this.w.config.series.slice(),
                      t = new U(this.ctx);
                    if (
                      ((this.activeSeriesIndex =
                        t.getActiveConfigSeriesIndex()),
                      void 0 !== e[this.activeSeriesIndex].data &&
                        e[this.activeSeriesIndex].data.length > 0 &&
                        null !== e[this.activeSeriesIndex].data[0] &&
                        void 0 !== e[this.activeSeriesIndex].data[0].x &&
                        null !== e[this.activeSeriesIndex].data[0])
                    )
                      return !0;
                  },
                },
                {
                  key: "isFormat2DArray",
                  value: function () {
                    var e = this.w.config.series.slice(),
                      t = new U(this.ctx);
                    if (
                      ((this.activeSeriesIndex =
                        t.getActiveConfigSeriesIndex()),
                      void 0 !== e[this.activeSeriesIndex].data &&
                        e[this.activeSeriesIndex].data.length > 0 &&
                        void 0 !== e[this.activeSeriesIndex].data[0] &&
                        null !== e[this.activeSeriesIndex].data[0] &&
                        e[this.activeSeriesIndex].data[0].constructor === Array)
                    )
                      return !0;
                  },
                },
                {
                  key: "handleFormat2DArray",
                  value: function (e, t) {
                    for (
                      var n = this.w.config,
                        i = this.w.globals,
                        o =
                          "boxPlot" === n.chart.type ||
                          "boxPlot" === n.series[t].type,
                        a = 0;
                      a < e[t].data.length;
                      a++
                    )
                      if (
                        (void 0 !== e[t].data[a][1] &&
                          (Array.isArray(e[t].data[a][1]) &&
                          4 === e[t].data[a][1].length &&
                          !o
                            ? this.twoDSeries.push(
                                y.parseNumber(e[t].data[a][1][3])
                              )
                            : e[t].data[a].length >= 5
                            ? this.twoDSeries.push(
                                y.parseNumber(e[t].data[a][4])
                              )
                            : this.twoDSeries.push(
                                y.parseNumber(e[t].data[a][1])
                              ),
                          (i.dataFormatXNumeric = !0)),
                        "datetime" === n.xaxis.type)
                      ) {
                        var s = new Date(e[t].data[a][0]);
                        (s = new Date(s).getTime()), this.twoDSeriesX.push(s);
                      } else this.twoDSeriesX.push(e[t].data[a][0]);
                    for (var r = 0; r < e[t].data.length; r++)
                      void 0 !== e[t].data[r][2] &&
                        (this.threeDSeries.push(e[t].data[r][2]),
                        (i.isDataXYZ = !0));
                  },
                },
                {
                  key: "handleFormatXY",
                  value: function (e, t) {
                    var n = this.w.config,
                      i = this.w.globals,
                      o = new P(this.ctx),
                      a = t;
                    i.collapsedSeriesIndices.indexOf(t) > -1 &&
                      (a = this.activeSeriesIndex);
                    for (var s = 0; s < e[t].data.length; s++)
                      void 0 !== e[t].data[s].y &&
                        (Array.isArray(e[t].data[s].y)
                          ? this.twoDSeries.push(
                              y.parseNumber(
                                e[t].data[s].y[e[t].data[s].y.length - 1]
                              )
                            )
                          : this.twoDSeries.push(
                              y.parseNumber(e[t].data[s].y)
                            )),
                        void 0 !== e[t].data[s].goals &&
                        Array.isArray(e[t].data[s].goals)
                          ? (void 0 === this.seriesGoals[t] &&
                              (this.seriesGoals[t] = []),
                            this.seriesGoals[t].push(e[t].data[s].goals))
                          : (void 0 === this.seriesGoals[t] &&
                              (this.seriesGoals[t] = []),
                            this.seriesGoals[t].push(null));
                    for (var r = 0; r < e[a].data.length; r++) {
                      var l = "string" == typeof e[a].data[r].x,
                        c = Array.isArray(e[a].data[r].x),
                        u = !c && !!o.isValidDate(e[a].data[r].x);
                      if (l || u)
                        if (l || n.xaxis.convertedCatToNumeric) {
                          var d = i.isBarHorizontal && i.isRangeData;
                          "datetime" !== n.xaxis.type || d
                            ? ((this.fallbackToCategory = !0),
                              this.twoDSeriesX.push(e[a].data[r].x),
                              isNaN(e[a].data[r].x) ||
                                "category" === this.w.config.xaxis.type ||
                                "string" == typeof e[a].data[r].x ||
                                (i.isXNumeric = !0))
                            : this.twoDSeriesX.push(
                                o.parseDate(e[a].data[r].x)
                              );
                        } else
                          "datetime" === n.xaxis.type
                            ? this.twoDSeriesX.push(
                                o.parseDate(e[a].data[r].x.toString())
                              )
                            : ((i.dataFormatXNumeric = !0),
                              (i.isXNumeric = !0),
                              this.twoDSeriesX.push(
                                parseFloat(e[a].data[r].x)
                              ));
                      else
                        c
                          ? ((this.fallbackToCategory = !0),
                            this.twoDSeriesX.push(e[a].data[r].x))
                          : ((i.isXNumeric = !0),
                            (i.dataFormatXNumeric = !0),
                            this.twoDSeriesX.push(e[a].data[r].x));
                    }
                    if (e[t].data[0] && void 0 !== e[t].data[0].z) {
                      for (var h = 0; h < e[t].data.length; h++)
                        this.threeDSeries.push(e[t].data[h].z);
                      i.isDataXYZ = !0;
                    }
                  },
                },
                {
                  key: "handleRangeData",
                  value: function (e, t) {
                    var n = this.w.globals,
                      i = {};
                    return (
                      this.isFormat2DArray()
                        ? (i = this.handleRangeDataFormat("array", e, t))
                        : this.isFormatXY() &&
                          (i = this.handleRangeDataFormat("xy", e, t)),
                      n.seriesRangeStart.push(
                        void 0 === i.start ? [] : i.start
                      ),
                      n.seriesRangeEnd.push(void 0 === i.end ? [] : i.end),
                      n.seriesRange.push(i.rangeUniques),
                      n.seriesRange.forEach(function (e, t) {
                        e &&
                          e.forEach(function (e, t) {
                            e.y.forEach(function (t, n) {
                              for (var i = 0; i < e.y.length; i++)
                                if (n !== i) {
                                  var o = t.y1,
                                    a = t.y2,
                                    s = e.y[i].y1;
                                  o <= e.y[i].y2 &&
                                    s <= a &&
                                    (e.overlaps.indexOf(t.rangeName) < 0 &&
                                      e.overlaps.push(t.rangeName),
                                    e.overlaps.indexOf(e.y[i].rangeName) < 0 &&
                                      e.overlaps.push(e.y[i].rangeName));
                                }
                            });
                          });
                      }),
                      i
                    );
                  },
                },
                {
                  key: "handleCandleStickBoxData",
                  value: function (e, t) {
                    var n = this.w.globals,
                      i = {};
                    return (
                      this.isFormat2DArray()
                        ? (i = this.handleCandleStickBoxDataFormat(
                            "array",
                            e,
                            t
                          ))
                        : this.isFormatXY() &&
                          (i = this.handleCandleStickBoxDataFormat("xy", e, t)),
                      (n.seriesCandleO[t] = i.o),
                      (n.seriesCandleH[t] = i.h),
                      (n.seriesCandleM[t] = i.m),
                      (n.seriesCandleL[t] = i.l),
                      (n.seriesCandleC[t] = i.c),
                      i
                    );
                  },
                },
                {
                  key: "handleRangeDataFormat",
                  value: function (e, t, n) {
                    var i = [],
                      o = [],
                      a = t[n].data
                        .filter(function (e, t, n) {
                          return (
                            t ===
                            n.findIndex(function (t) {
                              return t.x === e.x;
                            })
                          );
                        })
                        .map(function (e, t) {
                          return { x: e.x, overlaps: [], y: [] };
                        });
                    if ("array" === e)
                      for (var s = 0; s < t[n].data.length; s++)
                        Array.isArray(t[n].data[s])
                          ? (i.push(t[n].data[s][1][0]),
                            o.push(t[n].data[s][1][1]))
                          : (i.push(t[n].data[s]), o.push(t[n].data[s]));
                    else if ("xy" === e)
                      for (
                        var r = function (e) {
                            var s = Array.isArray(t[n].data[e].y),
                              r = y.randomId(),
                              l = t[n].data[e].x,
                              c = {
                                y1: s ? t[n].data[e].y[0] : t[n].data[e].y,
                                y2: s ? t[n].data[e].y[1] : t[n].data[e].y,
                                rangeName: r,
                              };
                            t[n].data[e].rangeName = r;
                            var u = a.findIndex(function (e) {
                              return e.x === l;
                            });
                            a[u].y.push(c), i.push(c.y1), o.push(c.y2);
                          },
                          l = 0;
                        l < t[n].data.length;
                        l++
                      )
                        r(l);
                    return { start: i, end: o, rangeUniques: a };
                  },
                },
                {
                  key: "handleCandleStickBoxDataFormat",
                  value: function (e, t, n) {
                    var i = this.w,
                      o =
                        "boxPlot" === i.config.chart.type ||
                        "boxPlot" === i.config.series[n].type,
                      a = [],
                      s = [],
                      r = [],
                      l = [],
                      c = [];
                    if ("array" === e)
                      if (
                        (o && 6 === t[n].data[0].length) ||
                        (!o && 5 === t[n].data[0].length)
                      )
                        for (var u = 0; u < t[n].data.length; u++)
                          a.push(t[n].data[u][1]),
                            s.push(t[n].data[u][2]),
                            o
                              ? (r.push(t[n].data[u][3]),
                                l.push(t[n].data[u][4]),
                                c.push(t[n].data[u][5]))
                              : (l.push(t[n].data[u][3]),
                                c.push(t[n].data[u][4]));
                      else
                        for (var d = 0; d < t[n].data.length; d++)
                          Array.isArray(t[n].data[d][1]) &&
                            (a.push(t[n].data[d][1][0]),
                            s.push(t[n].data[d][1][1]),
                            o
                              ? (r.push(t[n].data[d][1][2]),
                                l.push(t[n].data[d][1][3]),
                                c.push(t[n].data[d][1][4]))
                              : (l.push(t[n].data[d][1][2]),
                                c.push(t[n].data[d][1][3])));
                    else if ("xy" === e)
                      for (var h = 0; h < t[n].data.length; h++)
                        Array.isArray(t[n].data[h].y) &&
                          (a.push(t[n].data[h].y[0]),
                          s.push(t[n].data[h].y[1]),
                          o
                            ? (r.push(t[n].data[h].y[2]),
                              l.push(t[n].data[h].y[3]),
                              c.push(t[n].data[h].y[4]))
                            : (l.push(t[n].data[h].y[2]),
                              c.push(t[n].data[h].y[3])));
                    return { o: a, h: s, m: r, l: l, c: c };
                  },
                },
                {
                  key: "parseDataAxisCharts",
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : this.ctx,
                      i = this.w.config,
                      o = this.w.globals,
                      a = new P(n),
                      s =
                        i.labels.length > 0
                          ? i.labels.slice()
                          : i.xaxis.categories.slice();
                    (o.isRangeBar =
                      "rangeBar" === i.chart.type && o.isBarHorizontal),
                      (o.hasXaxisGroups =
                        "category" === i.xaxis.type &&
                        i.xaxis.group.groups.length > 0),
                      o.hasXaxisGroups && (o.groups = i.xaxis.group.groups),
                      e.forEach(function (e, t) {
                        void 0 !== e.name
                          ? o.seriesNames.push(e.name)
                          : o.seriesNames.push("series-" + parseInt(t + 1, 10));
                      }),
                      this.coreUtils.setSeriesYAxisMappings();
                    var r = [],
                      l = v(
                        new Set(
                          i.series.map(function (e) {
                            return e.group;
                          })
                        )
                      );
                    i.series.forEach(function (e, t) {
                      var n = l.indexOf(e.group);
                      r[n] || (r[n] = []), r[n].push(o.seriesNames[t]);
                    }),
                      (o.seriesGroups = r);
                    for (
                      var c = function () {
                          for (var e = 0; e < s.length; e++)
                            if ("string" == typeof s[e]) {
                              if (!a.isValidDate(s[e]))
                                throw new Error(
                                  "You have provided invalid Date format. Please provide a valid JavaScript Date"
                                );
                              t.twoDSeriesX.push(a.parseDate(s[e]));
                            } else t.twoDSeriesX.push(s[e]);
                        },
                        u = 0;
                      u < e.length;
                      u++
                    ) {
                      if (
                        ((this.twoDSeries = []),
                        (this.twoDSeriesX = []),
                        (this.threeDSeries = []),
                        void 0 === e[u].data)
                      )
                        return void console.error(
                          "It is a possibility that you may have not included 'data' property in series."
                        );
                      if (
                        (("rangeBar" !== i.chart.type &&
                          "rangeArea" !== i.chart.type &&
                          "rangeBar" !== e[u].type &&
                          "rangeArea" !== e[u].type) ||
                          ((o.isRangeData = !0),
                          ("rangeBar" !== i.chart.type &&
                            "rangeArea" !== i.chart.type) ||
                            this.handleRangeData(e, u)),
                        this.isMultiFormat())
                      )
                        this.isFormat2DArray()
                          ? this.handleFormat2DArray(e, u)
                          : this.isFormatXY() && this.handleFormatXY(e, u),
                          ("candlestick" !== i.chart.type &&
                            "candlestick" !== e[u].type &&
                            "boxPlot" !== i.chart.type &&
                            "boxPlot" !== e[u].type) ||
                            this.handleCandleStickBoxData(e, u),
                          o.series.push(this.twoDSeries),
                          o.labels.push(this.twoDSeriesX),
                          o.seriesX.push(this.twoDSeriesX),
                          (o.seriesGoals = this.seriesGoals),
                          u !== this.activeSeriesIndex ||
                            this.fallbackToCategory ||
                            (o.isXNumeric = !0);
                      else {
                        "datetime" === i.xaxis.type
                          ? ((o.isXNumeric = !0),
                            c(),
                            o.seriesX.push(this.twoDSeriesX))
                          : "numeric" === i.xaxis.type &&
                            ((o.isXNumeric = !0),
                            s.length > 0 &&
                              ((this.twoDSeriesX = s),
                              o.seriesX.push(this.twoDSeriesX))),
                          o.labels.push(this.twoDSeriesX);
                        var d = e[u].data.map(function (e) {
                          return y.parseNumber(e);
                        });
                        o.series.push(d);
                      }
                      o.seriesZ.push(this.threeDSeries),
                        void 0 !== e[u].color
                          ? o.seriesColors.push(e[u].color)
                          : o.seriesColors.push(void 0);
                    }
                    return this.w;
                  },
                },
                {
                  key: "parseDataNonAxisCharts",
                  value: function (e) {
                    var t = this.w.globals,
                      n = this.w.config;
                    (t.series = e.slice()), (t.seriesNames = n.labels.slice());
                    for (var i = 0; i < t.series.length; i++)
                      void 0 === t.seriesNames[i] &&
                        t.seriesNames.push("series-" + (i + 1));
                    return this.w;
                  },
                },
                {
                  key: "handleExternalLabelsData",
                  value: function (e) {
                    var t = this.w.config,
                      n = this.w.globals;
                    t.xaxis.categories.length > 0
                      ? (n.labels = t.xaxis.categories)
                      : t.labels.length > 0
                      ? (n.labels = t.labels.slice())
                      : this.fallbackToCategory
                      ? ((n.labels = n.labels[0]),
                        n.seriesRange.length &&
                          (n.seriesRange.map(function (e) {
                            e.forEach(function (e) {
                              n.labels.indexOf(e.x) < 0 &&
                                e.x &&
                                n.labels.push(e.x);
                            });
                          }),
                          (n.labels = Array.from(
                            new Set(n.labels.map(JSON.stringify)),
                            JSON.parse
                          ))),
                        t.xaxis.convertedCatToNumeric &&
                          (new z(t).convertCatToNumericXaxis(
                            t,
                            this.ctx,
                            n.seriesX[0]
                          ),
                          this._generateExternalLabels(e)))
                      : this._generateExternalLabels(e);
                  },
                },
                {
                  key: "_generateExternalLabels",
                  value: function (e) {
                    var t = this.w.globals,
                      n = this.w.config,
                      i = [];
                    if (t.axisCharts) {
                      if (t.series.length > 0)
                        if (this.isFormatXY())
                          for (
                            var o = n.series.map(function (e, t) {
                                return e.data.filter(function (e, t, n) {
                                  return (
                                    n.findIndex(function (t) {
                                      return t.x === e.x;
                                    }) === t
                                  );
                                });
                              }),
                              a = o.reduce(function (e, t, n, i) {
                                return i[e].length > t.length ? e : n;
                              }, 0),
                              s = 0;
                            s < o[a].length;
                            s++
                          )
                            i.push(s + 1);
                        else
                          for (
                            var r = 0;
                            r < t.series[t.maxValsInArrayIndex].length;
                            r++
                          )
                            i.push(r + 1);
                      t.seriesX = [];
                      for (var l = 0; l < e.length; l++) t.seriesX.push(i);
                      this.w.globals.isBarHorizontal || (t.isXNumeric = !0);
                    }
                    if (0 === i.length) {
                      i = t.axisCharts
                        ? []
                        : t.series.map(function (e, t) {
                            return t + 1;
                          });
                      for (var c = 0; c < e.length; c++) t.seriesX.push(i);
                    }
                    (t.labels = i),
                      n.xaxis.convertedCatToNumeric &&
                        (t.categoryLabels = i.map(function (e) {
                          return n.xaxis.labels.formatter(e);
                        })),
                      (t.noLabelsProvided = !0);
                  },
                },
                {
                  key: "parseData",
                  value: function (e) {
                    var t = this.w,
                      n = t.config,
                      i = t.globals;
                    if (
                      (this.excludeCollapsedSeriesInYAxis(),
                      (this.fallbackToCategory = !1),
                      this.ctx.core.resetGlobals(),
                      this.ctx.core.isMultipleY(),
                      i.axisCharts
                        ? (this.parseDataAxisCharts(e),
                          this.coreUtils.getLargestSeries())
                        : this.parseDataNonAxisCharts(e),
                      n.chart.stacked)
                    ) {
                      var o = new U(this.ctx);
                      i.series = o.setNullSeriesToZeroValues(i.series);
                    }
                    this.coreUtils.getSeriesTotals(),
                      i.axisCharts &&
                        ((i.stackedSeriesTotals =
                          this.coreUtils.getStackedSeriesTotals()),
                        (i.stackedSeriesTotalsByGroups =
                          this.coreUtils.getStackedSeriesTotalsByGroups())),
                      this.coreUtils.getPercentSeries(),
                      i.dataFormatXNumeric ||
                        (i.isXNumeric &&
                          ("numeric" !== n.xaxis.type ||
                            0 !== n.labels.length ||
                            0 !== n.xaxis.categories.length)) ||
                        this.handleExternalLabelsData(e);
                    for (
                      var a = this.coreUtils.getCategoryLabels(i.labels), s = 0;
                      s < a.length;
                      s++
                    )
                      if (Array.isArray(a[s])) {
                        i.isMultiLineX = !0;
                        break;
                      }
                  },
                },
                {
                  key: "excludeCollapsedSeriesInYAxis",
                  value: function () {
                    var e = this.w,
                      t = [];
                    e.globals.seriesYAxisMap.forEach(function (n, i) {
                      var o = 0;
                      n.forEach(function (t) {
                        -1 !== e.globals.collapsedSeriesIndices.indexOf(t) &&
                          o++;
                      }),
                        o > 0 && o == n.length && t.push(i);
                    }),
                      (e.globals.ignoreYAxisIndexes = t.map(function (e) {
                        return e;
                      }));
                  },
                },
              ]),
              e
            );
          })(),
          X = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "scaleSvgNode",
                  value: function (e, t) {
                    var n = parseFloat(e.getAttributeNS(null, "width")),
                      i = parseFloat(e.getAttributeNS(null, "height"));
                    e.setAttributeNS(null, "width", n * t),
                      e.setAttributeNS(null, "height", i * t),
                      e.setAttributeNS(null, "viewBox", "0 0 " + n + " " + i);
                  },
                },
                {
                  key: "fixSvgStringForIe11",
                  value: function (e) {
                    if (!y.isIE11()) return e.replace(/&nbsp;/g, "&#160;");
                    var t = 0,
                      n = e.replace(
                        /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                        function (e) {
                          return 2 === ++t
                            ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                            : e;
                        }
                      );
                    return (n = n.replace(/xmlns:NS\d+=""/g, "")).replace(
                      /NS\d+:(\w+:\w+=")/g,
                      "$1"
                    );
                  },
                },
                {
                  key: "getSvgString",
                  value: function (e) {
                    null == e && (e = 1);
                    var t = this.w.globals.dom.Paper.svg();
                    if (1 !== e) {
                      var n = this.w.globals.dom.Paper.node.cloneNode(!0);
                      this.scaleSvgNode(n, e),
                        (t = new XMLSerializer().serializeToString(n));
                    }
                    return this.fixSvgStringForIe11(t);
                  },
                },
                {
                  key: "cleanup",
                  value: function () {
                    var e = this.w,
                      t = e.globals.dom.baseEl.getElementsByClassName(
                        "apexcharts-xcrosshairs"
                      ),
                      n = e.globals.dom.baseEl.getElementsByClassName(
                        "apexcharts-ycrosshairs"
                      ),
                      i = e.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-zoom-rect, .apexcharts-selection-rect"
                      );
                    Array.prototype.forEach.call(i, function (e) {
                      e.setAttribute("width", 0);
                    }),
                      t &&
                        t[0] &&
                        (t[0].setAttribute("x", -500),
                        t[0].setAttribute("x1", -500),
                        t[0].setAttribute("x2", -500)),
                      n &&
                        n[0] &&
                        (n[0].setAttribute("y", -100),
                        n[0].setAttribute("y1", -100),
                        n[0].setAttribute("y2", -100));
                  },
                },
                {
                  key: "svgUrl",
                  value: function () {
                    this.cleanup();
                    var e = this.getSvgString(),
                      t = new Blob([e], {
                        type: "image/svg+xml;charset=utf-8",
                      });
                    return URL.createObjectURL(t);
                  },
                },
                {
                  key: "dataURI",
                  value: function (e) {
                    var t = this;
                    return new Promise(function (n) {
                      var i = t.w,
                        o = e ? e.scale || e.width / i.globals.svgWidth : 1;
                      t.cleanup();
                      var a = document.createElement("canvas");
                      (a.width = i.globals.svgWidth * o),
                        (a.height =
                          parseInt(i.globals.dom.elWrap.style.height, 10) * o);
                      var s =
                          "transparent" !== i.config.chart.background &&
                          i.config.chart.background
                            ? i.config.chart.background
                            : "#fff",
                        r = a.getContext("2d");
                      (r.fillStyle = s),
                        r.fillRect(0, 0, a.width * o, a.height * o);
                      var l = t.getSvgString(o);
                      if (window.canvg && y.isIE11()) {
                        var c = window.canvg.Canvg.fromString(r, l, {
                          ignoreClear: !0,
                          ignoreDimensions: !0,
                        });
                        c.start();
                        var u = a.msToBlob();
                        c.stop(), n({ blob: u });
                      } else {
                        var d = "data:image/svg+xml," + encodeURIComponent(l),
                          h = new Image();
                        (h.crossOrigin = "anonymous"),
                          (h.onload = function () {
                            if ((r.drawImage(h, 0, 0), a.msToBlob)) {
                              var e = a.msToBlob();
                              n({ blob: e });
                            } else {
                              var t = a.toDataURL("image/png");
                              n({ imgURI: t });
                            }
                          }),
                          (h.src = d);
                      }
                    });
                  },
                },
                {
                  key: "exportToSVG",
                  value: function () {
                    this.triggerDownload(
                      this.svgUrl(),
                      this.w.config.chart.toolbar.export.svg.filename,
                      ".svg"
                    );
                  },
                },
                {
                  key: "exportToPng",
                  value: function () {
                    var e = this;
                    this.dataURI().then(function (t) {
                      var n = t.imgURI,
                        i = t.blob;
                      i
                        ? navigator.msSaveOrOpenBlob(
                            i,
                            e.w.globals.chartID + ".png"
                          )
                        : e.triggerDownload(
                            n,
                            e.w.config.chart.toolbar.export.png.filename,
                            ".png"
                          );
                    });
                  },
                },
                {
                  key: "exportToCSV",
                  value: function (e) {
                    var t = this,
                      n = e.series,
                      i = e.fileName,
                      o = e.columnDelimiter,
                      a = void 0 === o ? "," : o,
                      s = e.lineDelimiter,
                      r = void 0 === s ? "\n" : s,
                      l = this.w;
                    n || (n = l.config.series);
                    var c,
                      u,
                      d = [],
                      h = [],
                      p = "",
                      f = l.globals.series.map(function (e, t) {
                        return -1 ===
                          l.globals.collapsedSeriesIndices.indexOf(t)
                          ? e
                          : [];
                      }),
                      g = function (e) {
                        return "function" ==
                          typeof l.config.chart.toolbar.export.csv
                            .categoryFormatter
                          ? l.config.chart.toolbar.export.csv.categoryFormatter(
                              e
                            )
                          : "datetime" === l.config.xaxis.type &&
                            String(e).length >= 10
                          ? new Date(e).toDateString()
                          : y.isNumber(e)
                          ? e
                          : e.split(a).join("");
                      },
                      m = function (e) {
                        return "function" ==
                          typeof l.config.chart.toolbar.export.csv
                            .valueFormatter
                          ? l.config.chart.toolbar.export.csv.valueFormatter(e)
                          : e;
                      },
                      b = Math.max.apply(
                        Math,
                        v(
                          n.map(function (e) {
                            return e.data ? e.data.length : 0;
                          })
                        )
                      ),
                      x = new Y(this.ctx),
                      w = new L(this.ctx),
                      S = function (e) {
                        var n = "";
                        if (l.globals.axisCharts) {
                          if (
                            "category" === l.config.xaxis.type ||
                            l.config.xaxis.convertedCatToNumeric
                          )
                            if (l.globals.isBarHorizontal) {
                              var i = l.globals.yLabelFormatters[0],
                                o = new U(t.ctx).getActiveConfigSeriesIndex();
                              n = i(l.globals.labels[e], {
                                seriesIndex: o,
                                dataPointIndex: e,
                                w: l,
                              });
                            } else
                              n = w.getLabel(
                                l.globals.labels,
                                l.globals.timescaleLabels,
                                0,
                                e
                              ).text;
                          "datetime" === l.config.xaxis.type &&
                            (l.config.xaxis.categories.length
                              ? (n = l.config.xaxis.categories[e])
                              : l.config.labels.length &&
                                (n = l.config.labels[e]));
                        } else n = l.config.labels[e];
                        return null === n
                          ? "nullvalue"
                          : (Array.isArray(n) && (n = n.join(" ")),
                            y.isNumber(n) ? n : n.split(a).join(""));
                      };
                    d.push(l.config.chart.toolbar.export.csv.headerCategory),
                      "boxPlot" === l.config.chart.type
                        ? (d.push("minimum"),
                          d.push("q1"),
                          d.push("median"),
                          d.push("q3"),
                          d.push("maximum"))
                        : "candlestick" === l.config.chart.type
                        ? (d.push("open"),
                          d.push("high"),
                          d.push("low"),
                          d.push("close"))
                        : "rangeBar" === l.config.chart.type
                        ? (d.push("minimum"), d.push("maximum"))
                        : n.map(function (e, t) {
                            var n =
                              (e.name ? e.name : "series-".concat(t)) + "";
                            l.globals.axisCharts &&
                              d.push(
                                n.split(a).join("")
                                  ? n.split(a).join("")
                                  : "series-".concat(t)
                              );
                          }),
                      l.globals.axisCharts ||
                        (d.push(l.config.chart.toolbar.export.csv.headerValue),
                        h.push(d.join(a))),
                      l.globals.allSeriesHasEqualX ||
                      !l.globals.axisCharts ||
                      l.config.xaxis.categories.length ||
                      l.config.labels.length
                        ? n.map(function (e, t) {
                            l.globals.axisCharts
                              ? (function (e, t) {
                                  if (
                                    (d.length && 0 === t && h.push(d.join(a)),
                                    e.data)
                                  ) {
                                    e.data =
                                      (e.data.length && e.data) ||
                                      v(Array(b)).map(function () {
                                        return "";
                                      });
                                    for (var i = 0; i < e.data.length; i++) {
                                      d = [];
                                      var o = S(i);
                                      if ("nullvalue" !== o) {
                                        if (
                                          (o ||
                                            (x.isFormatXY()
                                              ? (o = n[t].data[i].x)
                                              : x.isFormat2DArray() &&
                                                (o = n[t].data[i]
                                                  ? n[t].data[i][0]
                                                  : "")),
                                          0 === t)
                                        ) {
                                          d.push(g(o));
                                          for (
                                            var s = 0;
                                            s < l.globals.series.length;
                                            s++
                                          ) {
                                            var r,
                                              c = x.isFormatXY()
                                                ? null === (r = n[s].data[i]) ||
                                                  void 0 === r
                                                  ? void 0
                                                  : r.y
                                                : f[s][i];
                                            d.push(m(c));
                                          }
                                        }
                                        ("candlestick" ===
                                          l.config.chart.type ||
                                          (e.type &&
                                            "candlestick" === e.type)) &&
                                          (d.pop(),
                                          d.push(l.globals.seriesCandleO[t][i]),
                                          d.push(l.globals.seriesCandleH[t][i]),
                                          d.push(l.globals.seriesCandleL[t][i]),
                                          d.push(
                                            l.globals.seriesCandleC[t][i]
                                          )),
                                          ("boxPlot" === l.config.chart.type ||
                                            (e.type && "boxPlot" === e.type)) &&
                                            (d.pop(),
                                            d.push(
                                              l.globals.seriesCandleO[t][i]
                                            ),
                                            d.push(
                                              l.globals.seriesCandleH[t][i]
                                            ),
                                            d.push(
                                              l.globals.seriesCandleM[t][i]
                                            ),
                                            d.push(
                                              l.globals.seriesCandleL[t][i]
                                            ),
                                            d.push(
                                              l.globals.seriesCandleC[t][i]
                                            )),
                                          "rangeBar" === l.config.chart.type &&
                                            (d.pop(),
                                            d.push(
                                              l.globals.seriesRangeStart[t][i]
                                            ),
                                            d.push(
                                              l.globals.seriesRangeEnd[t][i]
                                            )),
                                          d.length && h.push(d.join(a));
                                      }
                                    }
                                  }
                                })(e, t)
                              : ((d = []).push(g(l.globals.labels[t])),
                                d.push(m(f[t])),
                                h.push(d.join(a)));
                          })
                        : ((c = new Set()),
                          (u = {}),
                          n.forEach(function (e, t) {
                            null == e ||
                              e.data.forEach(function (e) {
                                var i, o;
                                if (x.isFormatXY()) (i = e.x), (o = e.y);
                                else {
                                  if (!x.isFormat2DArray()) return;
                                  (i = e[0]), (o = e[1]);
                                }
                                u[i] || (u[i] = Array(n.length).fill("")),
                                  (u[i][t] = m(o)),
                                  c.add(i);
                              });
                          }),
                          d.length && h.push(d.join(a)),
                          Array.from(c)
                            .sort()
                            .forEach(function (e) {
                              h.push([g(e), u[e].join(a)]);
                            })),
                      (p += h.join(r)),
                      this.triggerDownload(
                        "data:text/csv; charset=utf-8," +
                          encodeURIComponent("\ufeff" + p),
                        i || l.config.chart.toolbar.export.csv.filename,
                        ".csv"
                      );
                  },
                },
                {
                  key: "triggerDownload",
                  value: function (e, t, n) {
                    var i = document.createElement("a");
                    (i.href = e),
                      (i.download = (t || this.w.globals.chartID) + n),
                      document.body.appendChild(i),
                      i.click(),
                      document.body.removeChild(i);
                  },
                },
              ]),
              e
            );
          })(),
          K = (function () {
            function e(t, n) {
              r(this, e), (this.ctx = t), (this.elgrid = n), (this.w = t.w);
              var i = this.w;
              (this.axesUtils = new L(t)),
                (this.xaxisLabels = i.globals.labels.slice()),
                i.globals.timescaleLabels.length > 0 &&
                  !i.globals.isBarHorizontal &&
                  (this.xaxisLabels = i.globals.timescaleLabels.slice()),
                i.config.xaxis.overwriteCategories &&
                  (this.xaxisLabels = i.config.xaxis.overwriteCategories),
                (this.drawnLabels = []),
                (this.drawnLabelsRects = []),
                "top" === i.config.xaxis.position
                  ? (this.offY = 0)
                  : (this.offY = i.globals.gridHeight),
                (this.offY = this.offY + i.config.xaxis.axisBorder.offsetY),
                (this.isCategoryBarHorizontal =
                  "bar" === i.config.chart.type &&
                  i.config.plotOptions.bar.horizontal),
                (this.xaxisFontSize = i.config.xaxis.labels.style.fontSize),
                (this.xaxisFontFamily = i.config.xaxis.labels.style.fontFamily),
                (this.xaxisForeColors = i.config.xaxis.labels.style.colors),
                (this.xaxisBorderWidth = i.config.xaxis.axisBorder.width),
                this.isCategoryBarHorizontal &&
                  (this.xaxisBorderWidth =
                    i.config.yaxis[0].axisBorder.width.toString()),
                this.xaxisBorderWidth.indexOf("%") > -1
                  ? (this.xaxisBorderWidth =
                      (i.globals.gridWidth *
                        parseInt(this.xaxisBorderWidth, 10)) /
                      100)
                  : (this.xaxisBorderWidth = parseInt(
                      this.xaxisBorderWidth,
                      10
                    )),
                (this.xaxisBorderHeight = i.config.xaxis.axisBorder.height),
                (this.yaxis = i.config.yaxis[0]);
            }
            return (
              c(e, [
                {
                  key: "drawXaxis",
                  value: function () {
                    var e = this.w,
                      t = new k(this.ctx),
                      n = t.group({
                        class: "apexcharts-xaxis",
                        transform: "translate("
                          .concat(e.config.xaxis.offsetX, ", ")
                          .concat(e.config.xaxis.offsetY, ")"),
                      }),
                      i = t.group({
                        class: "apexcharts-xaxis-texts-g",
                        transform: "translate("
                          .concat(e.globals.translateXAxisX, ", ")
                          .concat(e.globals.translateXAxisY, ")"),
                      });
                    n.add(i);
                    for (var o = [], a = 0; a < this.xaxisLabels.length; a++)
                      o.push(this.xaxisLabels[a]);
                    if (
                      (this.drawXAxisLabelAndGroup(
                        !0,
                        t,
                        i,
                        o,
                        e.globals.isXNumeric,
                        function (e, t) {
                          return t;
                        }
                      ),
                      e.globals.hasXaxisGroups)
                    ) {
                      var s = e.globals.groups;
                      o = [];
                      for (var r = 0; r < s.length; r++) o.push(s[r].title);
                      var l = {};
                      e.config.xaxis.group.style &&
                        ((l.xaxisFontSize =
                          e.config.xaxis.group.style.fontSize),
                        (l.xaxisFontFamily =
                          e.config.xaxis.group.style.fontFamily),
                        (l.xaxisForeColors = e.config.xaxis.group.style.colors),
                        (l.fontWeight = e.config.xaxis.group.style.fontWeight),
                        (l.cssClass = e.config.xaxis.group.style.cssClass)),
                        this.drawXAxisLabelAndGroup(
                          !1,
                          t,
                          i,
                          o,
                          !1,
                          function (e, t) {
                            return s[e].cols * t;
                          },
                          l
                        );
                    }
                    if (void 0 !== e.config.xaxis.title.text) {
                      var c = t.group({ class: "apexcharts-xaxis-title" }),
                        u = t.drawText({
                          x:
                            e.globals.gridWidth / 2 +
                            e.config.xaxis.title.offsetX,
                          y:
                            this.offY +
                            parseFloat(this.xaxisFontSize) +
                            ("bottom" === e.config.xaxis.position
                              ? e.globals.xAxisLabelsHeight
                              : -e.globals.xAxisLabelsHeight - 10) +
                            e.config.xaxis.title.offsetY,
                          text: e.config.xaxis.title.text,
                          textAnchor: "middle",
                          fontSize: e.config.xaxis.title.style.fontSize,
                          fontFamily: e.config.xaxis.title.style.fontFamily,
                          fontWeight: e.config.xaxis.title.style.fontWeight,
                          foreColor: e.config.xaxis.title.style.color,
                          cssClass:
                            "apexcharts-xaxis-title-text " +
                            e.config.xaxis.title.style.cssClass,
                        });
                      c.add(u), n.add(c);
                    }
                    if (e.config.xaxis.axisBorder.show) {
                      var d = e.globals.barPadForNumericAxis,
                        h = t.drawLine(
                          e.globals.padHorizontal +
                            e.config.xaxis.axisBorder.offsetX -
                            d,
                          this.offY,
                          this.xaxisBorderWidth + d,
                          this.offY,
                          e.config.xaxis.axisBorder.color,
                          0,
                          this.xaxisBorderHeight
                        );
                      this.elgrid &&
                      this.elgrid.elGridBorders &&
                      e.config.grid.show
                        ? this.elgrid.elGridBorders.add(h)
                        : n.add(h);
                    }
                    return n;
                  },
                },
                {
                  key: "drawXAxisLabelAndGroup",
                  value: function (e, t, n, i, o, a) {
                    var s,
                      r = this,
                      l =
                        arguments.length > 6 && void 0 !== arguments[6]
                          ? arguments[6]
                          : {},
                      c = [],
                      u = [],
                      d = this.w,
                      h = l.xaxisFontSize || this.xaxisFontSize,
                      p = l.xaxisFontFamily || this.xaxisFontFamily,
                      f = l.xaxisForeColors || this.xaxisForeColors,
                      g =
                        l.fontWeight || d.config.xaxis.labels.style.fontWeight,
                      m = l.cssClass || d.config.xaxis.labels.style.cssClass,
                      v = d.globals.padHorizontal,
                      b = i.length,
                      x =
                        "category" === d.config.xaxis.type
                          ? d.globals.dataPoints
                          : b;
                    if ((0 === x && b > x && (x = b), o)) {
                      var y = x > 1 ? x - 1 : x;
                      (s = d.globals.gridWidth / Math.min(y, b - 1)),
                        (v = v + a(0, s) / 2 + d.config.xaxis.labels.offsetX);
                    } else
                      (s = d.globals.gridWidth / x),
                        (v = v + a(0, s) + d.config.xaxis.labels.offsetX);
                    for (
                      var w = function (o) {
                          var l =
                            v - a(o, s) / 2 + d.config.xaxis.labels.offsetX;
                          0 === o &&
                            1 === b &&
                            s / 2 === v &&
                            1 === x &&
                            (l = d.globals.gridWidth / 2);
                          var y = r.axesUtils.getLabel(
                              i,
                              d.globals.timescaleLabels,
                              l,
                              o,
                              c,
                              h,
                              e
                            ),
                            w = 28;
                          if (
                            (d.globals.rotateXLabels && e && (w = 22),
                            d.config.xaxis.title.text &&
                              "top" === d.config.xaxis.position &&
                              (w +=
                                parseFloat(
                                  d.config.xaxis.title.style.fontSize
                                ) + 2),
                            e ||
                              (w =
                                w +
                                parseFloat(h) +
                                (d.globals.xAxisLabelsHeight -
                                  d.globals.xAxisGroupLabelsHeight) +
                                (d.globals.rotateXLabels ? 10 : 0)),
                            (y =
                              void 0 !== d.config.xaxis.tickAmount &&
                              "dataPoints" !== d.config.xaxis.tickAmount &&
                              "datetime" !== d.config.xaxis.type
                                ? r.axesUtils.checkLabelBasedOnTickamount(
                                    o,
                                    y,
                                    b
                                  )
                                : r.axesUtils.checkForOverflowingLabels(
                                    o,
                                    y,
                                    b,
                                    c,
                                    u
                                  )),
                            d.config.xaxis.labels.show)
                          ) {
                            var S = t.drawText({
                              x: y.x,
                              y:
                                r.offY +
                                d.config.xaxis.labels.offsetY +
                                w -
                                ("top" === d.config.xaxis.position
                                  ? d.globals.xAxisHeight +
                                    d.config.xaxis.axisTicks.height -
                                    2
                                  : 0),
                              text: y.text,
                              textAnchor: "middle",
                              fontWeight: y.isBold ? 600 : g,
                              fontSize: h,
                              fontFamily: p,
                              foreColor: Array.isArray(f)
                                ? e && d.config.xaxis.convertedCatToNumeric
                                  ? f[d.globals.minX + o - 1]
                                  : f[o]
                                : f,
                              isPlainText: !1,
                              cssClass:
                                (e
                                  ? "apexcharts-xaxis-label "
                                  : "apexcharts-xaxis-group-label ") + m,
                            });
                            if (
                              (n.add(S),
                              S.on("click", function (e) {
                                if (
                                  "function" ==
                                  typeof d.config.chart.events.xAxisLabelClick
                                ) {
                                  var t = Object.assign({}, d, {
                                    labelIndex: o,
                                  });
                                  d.config.chart.events.xAxisLabelClick(
                                    e,
                                    r.ctx,
                                    t
                                  );
                                }
                              }),
                              e)
                            ) {
                              var k = document.createElementNS(
                                d.globals.SVGNS,
                                "title"
                              );
                              (k.textContent = Array.isArray(y.text)
                                ? y.text.join(" ")
                                : y.text),
                                S.node.appendChild(k),
                                "" !== y.text && (c.push(y.text), u.push(y));
                            }
                          }
                          o < b - 1 && (v += a(o + 1, s));
                        },
                        S = 0;
                      S <= b - 1;
                      S++
                    )
                      w(S);
                  },
                },
                {
                  key: "drawXaxisInversed",
                  value: function (e) {
                    var t,
                      n,
                      i = this,
                      o = this.w,
                      a = new k(this.ctx),
                      s = o.config.yaxis[0].opposite
                        ? o.globals.translateYAxisX[e]
                        : 0,
                      r = a.group({
                        class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                        rel: e,
                      }),
                      l = a.group({
                        class:
                          "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                        transform: "translate(" + s + ", 0)",
                      });
                    r.add(l);
                    var c = [];
                    if (o.config.yaxis[e].show)
                      for (var u = 0; u < this.xaxisLabels.length; u++)
                        c.push(this.xaxisLabels[u]);
                    (t = o.globals.gridHeight / c.length), (n = -t / 2.2);
                    var d = o.globals.yLabelFormatters[0],
                      h = o.config.yaxis[0].labels;
                    if (h.show)
                      for (
                        var p = function (s) {
                            var r = void 0 === c[s] ? "" : c[s];
                            r = d(r, {
                              seriesIndex: e,
                              dataPointIndex: s,
                              w: o,
                            });
                            var u = i.axesUtils.getYAxisForeColor(
                                h.style.colors,
                                e
                              ),
                              p = 0;
                            Array.isArray(r) &&
                              (p =
                                (r.length / 2) *
                                parseInt(h.style.fontSize, 10));
                            var f = h.offsetX - 15,
                              g = "end";
                            i.yaxis.opposite && (g = "start"),
                              "left" === o.config.yaxis[0].labels.align
                                ? ((f = h.offsetX), (g = "start"))
                                : "center" === o.config.yaxis[0].labels.align
                                ? ((f = h.offsetX), (g = "middle"))
                                : "right" === o.config.yaxis[0].labels.align &&
                                  (g = "end");
                            var m = a.drawText({
                              x: f,
                              y: n + t + h.offsetY - p,
                              text: r,
                              textAnchor: g,
                              foreColor: Array.isArray(u) ? u[s] : u,
                              fontSize: h.style.fontSize,
                              fontFamily: h.style.fontFamily,
                              fontWeight: h.style.fontWeight,
                              isPlainText: !1,
                              cssClass:
                                "apexcharts-yaxis-label " + h.style.cssClass,
                              maxWidth: h.maxWidth,
                            });
                            l.add(m),
                              m.on("click", function (e) {
                                if (
                                  "function" ==
                                  typeof o.config.chart.events.xAxisLabelClick
                                ) {
                                  var t = Object.assign({}, o, {
                                    labelIndex: s,
                                  });
                                  o.config.chart.events.xAxisLabelClick(
                                    e,
                                    i.ctx,
                                    t
                                  );
                                }
                              });
                            var v = document.createElementNS(
                              o.globals.SVGNS,
                              "title"
                            );
                            if (
                              ((v.textContent = Array.isArray(r)
                                ? r.join(" ")
                                : r),
                              m.node.appendChild(v),
                              0 !== o.config.yaxis[e].labels.rotate)
                            ) {
                              var b = a.rotateAroundCenter(m.node);
                              m.node.setAttribute(
                                "transform",
                                "rotate("
                                  .concat(
                                    o.config.yaxis[e].labels.rotate,
                                    " 0 "
                                  )
                                  .concat(b.y, ")")
                              );
                            }
                            n += t;
                          },
                          f = 0;
                        f <= c.length - 1;
                        f++
                      )
                        p(f);
                    if (void 0 !== o.config.yaxis[0].title.text) {
                      var g = a.group({
                          class:
                            "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                          transform: "translate(" + s + ", 0)",
                        }),
                        m = a.drawText({
                          x: o.config.yaxis[0].title.offsetX,
                          y:
                            o.globals.gridHeight / 2 +
                            o.config.yaxis[0].title.offsetY,
                          text: o.config.yaxis[0].title.text,
                          textAnchor: "middle",
                          foreColor: o.config.yaxis[0].title.style.color,
                          fontSize: o.config.yaxis[0].title.style.fontSize,
                          fontWeight: o.config.yaxis[0].title.style.fontWeight,
                          fontFamily: o.config.yaxis[0].title.style.fontFamily,
                          cssClass:
                            "apexcharts-yaxis-title-text " +
                            o.config.yaxis[0].title.style.cssClass,
                        });
                      g.add(m), r.add(g);
                    }
                    var v = 0;
                    this.isCategoryBarHorizontal &&
                      o.config.yaxis[0].opposite &&
                      (v = o.globals.gridWidth);
                    var b = o.config.xaxis.axisBorder;
                    if (b.show) {
                      var x = a.drawLine(
                        o.globals.padHorizontal + b.offsetX + v,
                        1 + b.offsetY,
                        o.globals.padHorizontal + b.offsetX + v,
                        o.globals.gridHeight + b.offsetY,
                        b.color,
                        0
                      );
                      this.elgrid &&
                      this.elgrid.elGridBorders &&
                      o.config.grid.show
                        ? this.elgrid.elGridBorders.add(x)
                        : r.add(x);
                    }
                    return (
                      o.config.yaxis[0].axisTicks.show &&
                        this.axesUtils.drawYAxisTicks(
                          v,
                          c.length,
                          o.config.yaxis[0].axisBorder,
                          o.config.yaxis[0].axisTicks,
                          0,
                          t,
                          r
                        ),
                      r
                    );
                  },
                },
                {
                  key: "drawXaxisTicks",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = e;
                    if (!(e < 0 || e - 2 > i.globals.gridWidth)) {
                      var a = this.offY + i.config.xaxis.axisTicks.offsetY;
                      if (
                        ((t = t + a + i.config.xaxis.axisTicks.height),
                        "top" === i.config.xaxis.position &&
                          (t = a - i.config.xaxis.axisTicks.height),
                        i.config.xaxis.axisTicks.show)
                      ) {
                        var s = new k(this.ctx).drawLine(
                          e + i.config.xaxis.axisTicks.offsetX,
                          a + i.config.xaxis.offsetY,
                          o + i.config.xaxis.axisTicks.offsetX,
                          t + i.config.xaxis.offsetY,
                          i.config.xaxis.axisTicks.color
                        );
                        n.add(s), s.node.classList.add("apexcharts-xaxis-tick");
                      }
                    }
                  },
                },
                {
                  key: "getXAxisTicksPositions",
                  value: function () {
                    var e = this.w,
                      t = [],
                      n = this.xaxisLabels.length,
                      i = e.globals.padHorizontal;
                    if (e.globals.timescaleLabels.length > 0)
                      for (var o = 0; o < n; o++)
                        (i = this.xaxisLabels[o].position), t.push(i);
                    else
                      for (var a = n, s = 0; s < a; s++) {
                        var r = a;
                        e.globals.isXNumeric &&
                          "bar" !== e.config.chart.type &&
                          (r -= 1),
                          (i += e.globals.gridWidth / r),
                          t.push(i);
                      }
                    return t;
                  },
                },
                {
                  key: "xAxisLabelCorrections",
                  value: function () {
                    var e = this.w,
                      t = new k(this.ctx),
                      n = e.globals.dom.baseEl.querySelector(
                        ".apexcharts-xaxis-texts-g"
                      ),
                      i = e.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"
                      ),
                      o = e.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-yaxis-inversed text"
                      ),
                      a = e.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-xaxis-inversed-texts-g text tspan"
                      );
                    if (
                      e.globals.rotateXLabels ||
                      e.config.xaxis.labels.rotateAlways
                    )
                      for (var s = 0; s < i.length; s++) {
                        var r = t.rotateAroundCenter(i[s]);
                        (r.y = r.y - 1),
                          (r.x = r.x + 1),
                          i[s].setAttribute(
                            "transform",
                            "rotate("
                              .concat(e.config.xaxis.labels.rotate, " ")
                              .concat(r.x, " ")
                              .concat(r.y, ")")
                          ),
                          i[s].setAttribute("text-anchor", "end"),
                          n.setAttribute(
                            "transform",
                            "translate(0, ".concat(-10, ")")
                          );
                        var l = i[s].childNodes;
                        e.config.xaxis.labels.trim &&
                          Array.prototype.forEach.call(l, function (n) {
                            t.placeTextWithEllipsis(
                              n,
                              n.textContent,
                              e.globals.xAxisLabelsHeight -
                                ("bottom" === e.config.legend.position
                                  ? 20
                                  : 10)
                            );
                          });
                      }
                    else
                      !(function () {
                        for (
                          var n =
                              e.globals.gridWidth /
                              (e.globals.labels.length + 1),
                            o = 0;
                          o < i.length;
                          o++
                        ) {
                          var a = i[o].childNodes;
                          e.config.xaxis.labels.trim &&
                            "datetime" !== e.config.xaxis.type &&
                            Array.prototype.forEach.call(a, function (e) {
                              t.placeTextWithEllipsis(e, e.textContent, n);
                            });
                        }
                      })();
                    if (o.length > 0) {
                      var c = o[o.length - 1].getBBox(),
                        u = o[0].getBBox();
                      c.x < -20 &&
                        o[o.length - 1].parentNode.removeChild(o[o.length - 1]),
                        u.x + u.width > e.globals.gridWidth &&
                          !e.globals.isBarHorizontal &&
                          o[0].parentNode.removeChild(o[0]);
                      for (var d = 0; d < a.length; d++)
                        t.placeTextWithEllipsis(
                          a[d],
                          a[d].textContent,
                          e.config.yaxis[0].labels.maxWidth -
                            (e.config.yaxis[0].title.text
                              ? 2 *
                                parseFloat(
                                  e.config.yaxis[0].title.style.fontSize
                                )
                              : 0) -
                            15
                        );
                    }
                  },
                },
              ]),
              e
            );
          })(),
          q = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
              var n = this.w;
              (this.xaxisLabels = n.globals.labels.slice()),
                (this.axesUtils = new L(t)),
                (this.isRangeBar =
                  n.globals.seriesRange.length && n.globals.isBarHorizontal),
                n.globals.timescaleLabels.length > 0 &&
                  (this.xaxisLabels = n.globals.timescaleLabels.slice());
            }
            return (
              c(e, [
                {
                  key: "drawGridArea",
                  value: function () {
                    var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : null,
                      t = this.w,
                      n = new k(this.ctx);
                    null === e && (e = n.group({ class: "apexcharts-grid" }));
                    var i = n.drawLine(
                        t.globals.padHorizontal,
                        1,
                        t.globals.padHorizontal,
                        t.globals.gridHeight,
                        "transparent"
                      ),
                      o = n.drawLine(
                        t.globals.padHorizontal,
                        t.globals.gridHeight,
                        t.globals.gridWidth,
                        t.globals.gridHeight,
                        "transparent"
                      );
                    return e.add(o), e.add(i), e;
                  },
                },
                {
                  key: "drawGrid",
                  value: function () {
                    var e = null;
                    return (
                      this.w.globals.axisCharts &&
                        ((e = this.renderGrid()), this.drawGridArea(e.el)),
                      e
                    );
                  },
                },
                {
                  key: "createGridMask",
                  value: function () {
                    var e = this.w,
                      t = e.globals,
                      n = new k(this.ctx),
                      i = Array.isArray(e.config.stroke.width)
                        ? 0
                        : e.config.stroke.width;
                    if (Array.isArray(e.config.stroke.width)) {
                      var o = 0;
                      e.config.stroke.width.forEach(function (e) {
                        o = Math.max(o, e);
                      }),
                        (i = o);
                    }
                    (t.dom.elGridRectMask = document.createElementNS(
                      t.SVGNS,
                      "clipPath"
                    )),
                      t.dom.elGridRectMask.setAttribute(
                        "id",
                        "gridRectMask".concat(t.cuid)
                      ),
                      (t.dom.elGridRectMarkerMask = document.createElementNS(
                        t.SVGNS,
                        "clipPath"
                      )),
                      t.dom.elGridRectMarkerMask.setAttribute(
                        "id",
                        "gridRectMarkerMask".concat(t.cuid)
                      ),
                      (t.dom.elForecastMask = document.createElementNS(
                        t.SVGNS,
                        "clipPath"
                      )),
                      t.dom.elForecastMask.setAttribute(
                        "id",
                        "forecastMask".concat(t.cuid)
                      ),
                      (t.dom.elNonForecastMask = document.createElementNS(
                        t.SVGNS,
                        "clipPath"
                      )),
                      t.dom.elNonForecastMask.setAttribute(
                        "id",
                        "nonForecastMask".concat(t.cuid)
                      );
                    var a = e.config.chart.type,
                      s = 0,
                      r = 0;
                    ("bar" === a ||
                      "rangeBar" === a ||
                      "candlestick" === a ||
                      "boxPlot" === a ||
                      e.globals.comboBarCount > 0) &&
                      e.globals.isXNumeric &&
                      !e.globals.isBarHorizontal &&
                      ((s = e.config.grid.padding.left),
                      (r = e.config.grid.padding.right),
                      t.barPadForNumericAxis > s &&
                        ((s = t.barPadForNumericAxis),
                        (r = t.barPadForNumericAxis))),
                      (t.dom.elGridRect = n.drawRect(
                        -i / 2 - s - 2,
                        -i / 2 - 2,
                        t.gridWidth + i + r + s + 4,
                        t.gridHeight + i + 4,
                        0,
                        "#fff"
                      ));
                    var l = e.globals.markers.largestSize + 1;
                    (t.dom.elGridRectMarker = n.drawRect(
                      2 * -l,
                      2 * -l,
                      t.gridWidth + 4 * l,
                      t.gridHeight + 4 * l,
                      0,
                      "#fff"
                    )),
                      t.dom.elGridRectMask.appendChild(t.dom.elGridRect.node),
                      t.dom.elGridRectMarkerMask.appendChild(
                        t.dom.elGridRectMarker.node
                      );
                    var c = t.dom.baseEl.querySelector("defs");
                    c.appendChild(t.dom.elGridRectMask),
                      c.appendChild(t.dom.elForecastMask),
                      c.appendChild(t.dom.elNonForecastMask),
                      c.appendChild(t.dom.elGridRectMarkerMask);
                  },
                },
                {
                  key: "_drawGridLines",
                  value: function (e) {
                    var t = e.i,
                      n = e.x1,
                      i = e.y1,
                      o = e.x2,
                      a = e.y2,
                      s = e.xCount,
                      r = e.parent,
                      l = this.w;
                    if (
                      !(
                        (0 === t && l.globals.skipFirstTimelinelabel) ||
                        (t === s - 1 &&
                          l.globals.skipLastTimelinelabel &&
                          !l.config.xaxis.labels.formatter) ||
                        "radar" === l.config.chart.type
                      )
                    ) {
                      l.config.grid.xaxis.lines.show &&
                        this._drawGridLine({
                          i: t,
                          x1: n,
                          y1: i,
                          x2: o,
                          y2: a,
                          xCount: s,
                          parent: r,
                        });
                      var c = 0;
                      if (
                        l.globals.hasXaxisGroups &&
                        "between" === l.config.xaxis.tickPlacement
                      ) {
                        var u = l.globals.groups;
                        if (u) {
                          for (var d = 0, h = 0; d < t && h < u.length; h++)
                            d += u[h].cols;
                          d === t && (c = 0.6 * l.globals.xAxisLabelsHeight);
                        }
                      }
                      new K(this.ctx).drawXaxisTicks(
                        n,
                        c,
                        l.globals.dom.elGraphical
                      );
                    }
                  },
                },
                {
                  key: "_drawGridLine",
                  value: function (e) {
                    var t = e.i,
                      n = e.x1,
                      i = e.y1,
                      o = e.x2,
                      a = e.y2,
                      s = e.xCount,
                      r = e.parent,
                      l = this.w,
                      c = !1,
                      u = r.node.classList.contains(
                        "apexcharts-gridlines-horizontal"
                      ),
                      d = l.config.grid.strokeDashArray,
                      h = l.globals.barPadForNumericAxis;
                    ((0 === i && 0 === a) || (0 === n && 0 === o)) && (c = !0),
                      i === l.globals.gridHeight &&
                        a === l.globals.gridHeight &&
                        (c = !0),
                      !l.globals.isBarHorizontal ||
                        (0 !== t && t !== s - 1) ||
                        (c = !0);
                    var p = new k(this).drawLine(
                      n - (u ? h : 0),
                      i,
                      o + (u ? h : 0),
                      a,
                      l.config.grid.borderColor,
                      d
                    );
                    p.node.classList.add("apexcharts-gridline"),
                      c && l.config.grid.show
                        ? this.elGridBorders.add(p)
                        : r.add(p);
                  },
                },
                {
                  key: "_drawGridBandRect",
                  value: function (e) {
                    var t = e.c,
                      n = e.x1,
                      i = e.y1,
                      o = e.x2,
                      a = e.y2,
                      s = e.type,
                      r = this.w,
                      l = new k(this.ctx),
                      c = r.globals.barPadForNumericAxis;
                    if ("column" !== s || "datetime" !== r.config.xaxis.type) {
                      var u = r.config.grid[s].colors[t],
                        d = l.drawRect(
                          n - ("row" === s ? c : 0),
                          i,
                          o + ("row" === s ? 2 * c : 0),
                          a,
                          0,
                          u,
                          r.config.grid[s].opacity
                        );
                      this.elg.add(d),
                        d.attr(
                          "clip-path",
                          "url(#gridRectMask".concat(r.globals.cuid, ")")
                        ),
                        d.node.classList.add("apexcharts-grid-".concat(s));
                    }
                  },
                },
                {
                  key: "_drawXYLines",
                  value: function (e) {
                    var t = this,
                      n = e.xCount,
                      i = e.tickAmount,
                      o = this.w;
                    if (
                      o.config.grid.xaxis.lines.show ||
                      o.config.xaxis.axisTicks.show
                    ) {
                      var a,
                        s = o.globals.padHorizontal,
                        r = o.globals.gridHeight;
                      o.globals.timescaleLabels.length
                        ? (function (e) {
                            for (
                              var i = e.xC,
                                o = e.x1,
                                a = e.y1,
                                s = e.x2,
                                r = e.y2,
                                l = 0;
                              l < i;
                              l++
                            )
                              (o = t.xaxisLabels[l].position),
                                (s = t.xaxisLabels[l].position),
                                t._drawGridLines({
                                  i: l,
                                  x1: o,
                                  y1: a,
                                  x2: s,
                                  y2: r,
                                  xCount: n,
                                  parent: t.elgridLinesV,
                                });
                          })({ xC: n, x1: s, y1: 0, x2: a, y2: r })
                        : (o.globals.isXNumeric &&
                            (n = o.globals.xAxisScale.result.length),
                          (function (e) {
                            for (
                              var i = e.xC,
                                a = e.x1,
                                s = e.y1,
                                r = e.x2,
                                l = e.y2,
                                c = 0;
                              c < i + (o.globals.isXNumeric ? 0 : 1);
                              c++
                            )
                              0 === c &&
                                1 === i &&
                                1 === o.globals.dataPoints &&
                                (r = a = o.globals.gridWidth / 2),
                                t._drawGridLines({
                                  i: c,
                                  x1: a,
                                  y1: s,
                                  x2: r,
                                  y2: l,
                                  xCount: n,
                                  parent: t.elgridLinesV,
                                }),
                                (r = a +=
                                  o.globals.gridWidth /
                                  (o.globals.isXNumeric ? i - 1 : i));
                          })({ xC: n, x1: s, y1: 0, x2: a, y2: r }));
                    }
                    if (o.config.grid.yaxis.lines.show) {
                      var l = 0,
                        c = 0,
                        u = o.globals.gridWidth,
                        d = i + 1;
                      this.isRangeBar && (d = o.globals.labels.length);
                      for (var h = 0; h < d + (this.isRangeBar ? 1 : 0); h++)
                        this._drawGridLine({
                          i: h,
                          xCount: d + (this.isRangeBar ? 1 : 0),
                          x1: 0,
                          y1: l,
                          x2: u,
                          y2: c,
                          parent: this.elgridLinesH,
                        }),
                          (c = l +=
                            o.globals.gridHeight / (this.isRangeBar ? d : i));
                    }
                  },
                },
                {
                  key: "_drawInvertedXYLines",
                  value: function (e) {
                    var t = e.xCount,
                      n = this.w;
                    if (
                      n.config.grid.xaxis.lines.show ||
                      n.config.xaxis.axisTicks.show
                    )
                      for (
                        var i,
                          o = n.globals.padHorizontal,
                          a = n.globals.gridHeight,
                          s = 0;
                        s < t + 1;
                        s++
                      )
                        n.config.grid.xaxis.lines.show &&
                          this._drawGridLine({
                            i: s,
                            xCount: t + 1,
                            x1: o,
                            y1: 0,
                            x2: i,
                            y2: a,
                            parent: this.elgridLinesV,
                          }),
                          new K(this.ctx).drawXaxisTicks(
                            o,
                            0,
                            n.globals.dom.elGraphical
                          ),
                          (i = o += n.globals.gridWidth / t);
                    if (n.config.grid.yaxis.lines.show)
                      for (
                        var r = 0, l = 0, c = n.globals.gridWidth, u = 0;
                        u < n.globals.dataPoints + 1;
                        u++
                      )
                        this._drawGridLine({
                          i: u,
                          xCount: n.globals.dataPoints + 1,
                          x1: 0,
                          y1: r,
                          x2: c,
                          y2: l,
                          parent: this.elgridLinesH,
                        }),
                          (l = r +=
                            n.globals.gridHeight / n.globals.dataPoints);
                  },
                },
                {
                  key: "renderGrid",
                  value: function () {
                    var e = this.w,
                      t = e.globals,
                      n = new k(this.ctx);
                    (this.elg = n.group({ class: "apexcharts-grid" })),
                      (this.elgridLinesH = n.group({
                        class: "apexcharts-gridlines-horizontal",
                      })),
                      (this.elgridLinesV = n.group({
                        class: "apexcharts-gridlines-vertical",
                      })),
                      (this.elGridBorders = n.group({
                        class: "apexcharts-grid-borders",
                      })),
                      this.elg.add(this.elgridLinesH),
                      this.elg.add(this.elgridLinesV),
                      e.config.grid.show ||
                        (this.elgridLinesV.hide(),
                        this.elgridLinesH.hide(),
                        this.elGridBorders.hide());
                    for (
                      var i = 0;
                      i < t.seriesYAxisMap.length &&
                      -1 !== t.ignoreYAxisIndexes.indexOf(i);

                    )
                      i++;
                    i === t.seriesYAxisMap.length && (i = 0);
                    var o,
                      a,
                      s,
                      r,
                      l = t.yAxisScale[i].result.length - 1;
                    !t.isBarHorizontal || this.isRangeBar
                      ? ((o = this.xaxisLabels.length),
                        this.isRangeBar &&
                          ((l = t.labels.length),
                          e.config.xaxis.tickAmount &&
                            e.config.xaxis.labels.formatter &&
                            (o = e.config.xaxis.tickAmount),
                          (null === (a = t.yAxisScale) ||
                          void 0 === a ||
                          null === (s = a[i]) ||
                          void 0 === s ||
                          null === (r = s.result) ||
                          void 0 === r
                            ? void 0
                            : r.length) > 0 &&
                            "datetime" !== e.config.xaxis.type &&
                            (o = t.yAxisScale[i].result.length - 1)),
                        this._drawXYLines({ xCount: o, tickAmount: l }))
                      : ((o = l),
                        (l = t.xTickAmount),
                        this._drawInvertedXYLines({
                          xCount: o,
                          tickAmount: l,
                        }));
                    return (
                      this.drawGridBands(o, l),
                      {
                        el: this.elg,
                        elGridBorders: this.elGridBorders,
                        xAxisTickWidth: t.gridWidth / o,
                      }
                    );
                  },
                },
                {
                  key: "drawGridBands",
                  value: function (e, t) {
                    var n = this.w;
                    if (
                      void 0 !== n.config.grid.row.colors &&
                      n.config.grid.row.colors.length > 0
                    )
                      for (
                        var i = 0,
                          o = n.globals.gridHeight / t,
                          a = n.globals.gridWidth,
                          s = 0,
                          r = 0;
                        s < t;
                        s++, r++
                      )
                        r >= n.config.grid.row.colors.length && (r = 0),
                          this._drawGridBandRect({
                            c: r,
                            x1: 0,
                            y1: i,
                            x2: a,
                            y2: o,
                            type: "row",
                          }),
                          (i += n.globals.gridHeight / t);
                    if (
                      void 0 !== n.config.grid.column.colors &&
                      n.config.grid.column.colors.length > 0
                    )
                      for (
                        var l =
                            n.globals.isBarHorizontal ||
                            "on" !== n.config.xaxis.tickPlacement ||
                            ("category" !== n.config.xaxis.type &&
                              !n.config.xaxis.convertedCatToNumeric)
                              ? e
                              : e - 1,
                          c = n.globals.padHorizontal,
                          u = n.globals.padHorizontal + n.globals.gridWidth / l,
                          d = n.globals.gridHeight,
                          h = 0,
                          p = 0;
                        h < e;
                        h++, p++
                      )
                        p >= n.config.grid.column.colors.length && (p = 0),
                          this._drawGridBandRect({
                            c: p,
                            x1: c,
                            y1: 0,
                            x2: u,
                            y2: d,
                            type: "column",
                          }),
                          (c += n.globals.gridWidth / l);
                  },
                },
              ]),
              e
            );
          })(),
          Z = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "niceScale",
                  value: function (e, t) {
                    var n,
                      i,
                      o,
                      a,
                      s =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 0,
                      r = 1e-11,
                      l = this.w,
                      c = l.globals;
                    c.isBarHorizontal
                      ? ((n = l.config.xaxis),
                        (i = Math.max((c.svgWidth - 100) / 25, 2)))
                      : ((n = l.config.yaxis[s]),
                        (i = Math.max((c.svgHeight - 100) / 15, 2))),
                      (o = void 0 !== n.min && null !== n.min),
                      (a = void 0 !== n.max && null !== n.min);
                    var u = void 0 !== n.stepSize && null !== n.stepSize,
                      d = void 0 !== n.tickAmount && null !== n.tickAmount,
                      h = d
                        ? n.tickAmount
                        : n.forceNiceScale
                        ? c.niceScaleDefaultTicks[
                            Math.min(
                              Math.round(i / 2),
                              c.niceScaleDefaultTicks.length - 1
                            )
                          ]
                        : 10;
                    if (
                      (c.isMultipleYAxis &&
                        !d &&
                        c.multiAxisTickAmount > 0 &&
                        ((h = c.multiAxisTickAmount), (d = !0)),
                      (h =
                        "dataPoints" === h
                          ? c.dataPoints - 1
                          : Math.abs(Math.round(h))),
                      ((e === Number.MIN_VALUE && 0 === t) ||
                        (!y.isNumber(e) && !y.isNumber(t)) ||
                        (e === Number.MIN_VALUE && t === -Number.MAX_VALUE)) &&
                        ((e = y.isNumber(n.min) ? n.min : 0),
                        (t = y.isNumber(n.max) ? n.max : e + h),
                        (c.allSeriesCollapsed = !1)),
                      e > t)
                    ) {
                      console.warn(
                        "axis.min cannot be greater than axis.max: swapping min and max"
                      );
                      var p = t;
                      (t = e), (e = p);
                    } else
                      e === t &&
                        ((e = 0 === e ? 0 : e - 1), (t = 0 === t ? 2 : t + 1));
                    var f = [];
                    h < 1 && (h = 1);
                    var g = h,
                      m = Math.abs(t - e);
                    n.forceNiceScale &&
                      (!o && e > 0 && e / m < 0.15 && ((e = 0), (o = !0)),
                      !a && t < 0 && -t / m < 0.15 && ((t = 0), (a = !0)),
                      (m = Math.abs(t - e)));
                    var v = m / g,
                      b = v,
                      x = Math.floor(Math.log10(b)),
                      w = Math.pow(10, x),
                      S = Math.ceil(b / w);
                    if (
                      ((v = b =
                        (S =
                          c.niceScaleAllowedMagMsd[
                            0 === c.yValueDecimal ? 0 : 1
                          ][S]) * w),
                      c.isBarHorizontal && n.stepSize && "datetime" !== n.type
                        ? ((v = n.stepSize), (u = !0))
                        : u && (v = n.stepSize),
                      u && n.forceNiceScale)
                    ) {
                      var k = Math.floor(Math.log10(v));
                      v *= Math.pow(10, x - k);
                    }
                    if (o && a) {
                      var A = m / g;
                      if (d)
                        if (u)
                          if (0 != y.mod(m, v)) {
                            var C = y.getGCD(v, A);
                            v = A / C < 10 ? C : A;
                          } else
                            0 == y.mod(v, A) ? (v = A) : ((A = v), (d = !1));
                        else v = A;
                      else if (u) 0 == y.mod(m, v) ? (A = v) : (v = A);
                      else if (0 == y.mod(m, v)) A = v;
                      else {
                        A = m / (g = Math.ceil(m / v));
                        var M = y.getGCD(m, v);
                        m / M < i && (A = M), (v = A);
                      }
                      g = Math.round(m / v);
                    } else {
                      if (o || a) {
                        if (a)
                          if (d) e = t - v * g;
                          else {
                            var P = e;
                            (e = v * Math.floor(e / v)),
                              Math.abs(t - e) / y.getGCD(m, v) > i &&
                                ((e = t - v * h),
                                (e += v * Math.floor((P - e) / v)));
                          }
                        else if (o)
                          if (d) t = e + v * g;
                          else {
                            var E = t;
                            (t = v * Math.ceil(t / v)),
                              Math.abs(t - e) / y.getGCD(m, v) > i &&
                                ((t = e + v * h),
                                (t += v * Math.ceil((E - t) / v)));
                          }
                      } else if (d) {
                        var L = v / (t - e > t ? 1 : 2),
                          T = L * Math.floor(e / L);
                        Math.abs(T - e) <= L / 2
                          ? (t = (e = T) + v * g)
                          : (e = (t = L * Math.ceil(t / L)) - v * g);
                      } else
                        (e = v * Math.floor(e / v)), (t = v * Math.ceil(t / v));
                      (m = Math.abs(t - e)),
                        (v = y.getGCD(m, v)),
                        (g = Math.round(m / v));
                    }
                    if (
                      (d ||
                        o ||
                        a ||
                        ((g = Math.ceil((m - r) / (v + r))) > 16 &&
                          y.getPrimeFactors(g).length < 2 &&
                          g++),
                      !d &&
                        n.forceNiceScale &&
                        0 === c.yValueDecimal &&
                        g > m &&
                        ((g = m), (v = Math.round(m / g))),
                      g > i && ((!d && !u) || n.forceNiceScale))
                    ) {
                      var O = y.getPrimeFactors(g),
                        R = O.length - 1,
                        I = g;
                      e: for (var N = 0; N < R; N++)
                        for (var _ = 0; _ <= R - N; _++) {
                          for (
                            var D = Math.min(_ + N, R), z = I, j = 1, B = _;
                            B <= D;
                            B++
                          )
                            j *= O[B];
                          if ((z /= j) < i) {
                            I = z;
                            break e;
                          }
                        }
                      (v = I === g ? m : m / I), (g = Math.round(m / v));
                    }
                    c.isMultipleYAxis &&
                      0 == c.multiAxisTickAmount &&
                      c.ignoreYAxisIndexes.indexOf(s) < 0 &&
                      (c.multiAxisTickAmount = g);
                    var F = e - v,
                      W = v * r;
                    do {
                      (F += v), f.push(y.stripNumber(F, 7));
                    } while (t - F > W);
                    return {
                      result: f,
                      niceMin: f[0],
                      niceMax: f[f.length - 1],
                    };
                  },
                },
                {
                  key: "linearScale",
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : 10,
                      i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : 0,
                      o =
                        arguments.length > 4 && void 0 !== arguments[4]
                          ? arguments[4]
                          : void 0,
                      a = Math.abs(t - e),
                      s = [];
                    if (e === t)
                      return {
                        result: (s = [e]),
                        niceMin: s[0],
                        niceMax: s[s.length - 1],
                      };
                    "dataPoints" ===
                      (n = this._adjustTicksForSmallRange(n, i, a)) &&
                      (n = this.w.globals.dataPoints - 1),
                      o || (o = a / n),
                      (o = Math.round(10 * (o + Number.EPSILON)) / 10),
                      n === Number.MAX_VALUE && ((n = 5), (o = 1));
                    for (var r = e; n >= 0; )
                      s.push(r), (r = y.preciseAddition(r, o)), (n -= 1);
                    return {
                      result: s,
                      niceMin: s[0],
                      niceMax: s[s.length - 1],
                    };
                  },
                },
                {
                  key: "logarithmicScaleNice",
                  value: function (e, t, n) {
                    t <= 0 && (t = Math.max(e, n)),
                      e <= 0 && (e = Math.min(t, n));
                    for (
                      var i = [],
                        o = Math.ceil(Math.log(t) / Math.log(n) + 1),
                        a = Math.floor(Math.log(e) / Math.log(n));
                      a < o;
                      a++
                    )
                      i.push(Math.pow(n, a));
                    return {
                      result: i,
                      niceMin: i[0],
                      niceMax: i[i.length - 1],
                    };
                  },
                },
                {
                  key: "logarithmicScale",
                  value: function (e, t, n) {
                    t <= 0 && (t = Math.max(e, n)),
                      e <= 0 && (e = Math.min(t, n));
                    for (
                      var i = [],
                        o = Math.log(t) / Math.log(n),
                        a = Math.log(e) / Math.log(n),
                        s = o - a,
                        r = Math.round(s),
                        l = s / r,
                        c = 0,
                        u = a;
                      c < r;
                      c++, u += l
                    )
                      i.push(Math.pow(n, u));
                    return (
                      i.push(Math.pow(n, o)),
                      { result: i, niceMin: e, niceMax: t }
                    );
                  },
                },
                {
                  key: "_adjustTicksForSmallRange",
                  value: function (e, t, n) {
                    var i = e;
                    if (
                      void 0 !== t &&
                      this.w.config.yaxis[t].labels.formatter &&
                      void 0 === this.w.config.yaxis[t].tickAmount
                    ) {
                      var o = Number(
                        this.w.config.yaxis[t].labels.formatter(1)
                      );
                      y.isNumber(o) &&
                        0 === this.w.globals.yValueDecimal &&
                        (i = Math.ceil(n));
                    }
                    return i < e ? i : e;
                  },
                },
                {
                  key: "setYScaleForIndex",
                  value: function (e, t, n) {
                    var i = this.w.globals,
                      o = this.w.config,
                      a = i.isBarHorizontal ? o.xaxis : o.yaxis[e];
                    void 0 === i.yAxisScale[e] && (i.yAxisScale[e] = []);
                    var s = Math.abs(n - t);
                    a.logarithmic && s <= 5 && (i.invalidLogScale = !0),
                      a.logarithmic && s > 5
                        ? ((i.allSeriesCollapsed = !1),
                          (i.yAxisScale[e] = a.forceNiceScale
                            ? this.logarithmicScaleNice(t, n, a.logBase)
                            : this.logarithmicScale(t, n, a.logBase)))
                        : n !== -Number.MAX_VALUE &&
                          y.isNumber(n) &&
                          t !== Number.MAX_VALUE &&
                          y.isNumber(t)
                        ? ((i.allSeriesCollapsed = !1),
                          (i.yAxisScale[e] = this.niceScale(t, n, e)))
                        : (i.yAxisScale[e] = this.niceScale(
                            Number.MIN_VALUE,
                            0,
                            e
                          ));
                  },
                },
                {
                  key: "setXScale",
                  value: function (e, t) {
                    var n = this.w,
                      i = n.globals,
                      o = Math.abs(t - e);
                    if (t !== -Number.MAX_VALUE && y.isNumber(t)) {
                      var a = i.xTickAmount + 1;
                      o < 10 && o > 1 && (a = o),
                        (i.xAxisScale = this.linearScale(
                          e,
                          t,
                          a,
                          0,
                          n.config.xaxis.stepSize
                        ));
                    } else i.xAxisScale = this.linearScale(0, 10, 10);
                    return i.xAxisScale;
                  },
                },
                {
                  key: "setSeriesYAxisMappings",
                  value: function () {
                    var e = this.w.globals,
                      t = this.w.config,
                      n = [],
                      i = [],
                      o = [],
                      a =
                        e.series.length > t.yaxis.length ||
                        t.yaxis.some(function (e) {
                          return Array.isArray(e.seriesName);
                        });
                    t.series.forEach(function (e, t) {
                      o.push(t), i.push(null);
                    }),
                      t.yaxis.forEach(function (e, t) {
                        n[t] = [];
                      });
                    var s = [];
                    t.yaxis.forEach(function (e, i) {
                      var r = !1;
                      if (e.seriesName) {
                        var l = [];
                        Array.isArray(e.seriesName)
                          ? (l = e.seriesName)
                          : l.push(e.seriesName),
                          l.forEach(function (e) {
                            t.series.forEach(function (t, s) {
                              if (t.name === e) {
                                var l = s;
                                i === s || a
                                  ? !a || o.indexOf(s) > -1
                                    ? n[i].push([i, s])
                                    : console.warn(
                                        "Series '" +
                                          t.name +
                                          "' referenced more than once in what looks like the new style. That is, when using either seriesName: [], or when there are more series than yaxes."
                                      )
                                  : (n[s].push([s, i]), (l = i)),
                                  (r = !0),
                                  -1 !== (l = o.indexOf(l)) && o.splice(l, 1);
                              }
                            });
                          });
                      }
                      r || s.push(i);
                    }),
                      (n = n.map(function (e, t) {
                        var n = [];
                        return (
                          e.forEach(function (e) {
                            (i[e[1]] = e[0]), n.push(e[1]);
                          }),
                          n
                        );
                      }));
                    for (
                      var r = t.yaxis.length - 1, l = 0;
                      l < s.length && ((r = s[l]), (n[r] = []), o);
                      l++
                    ) {
                      var c = o[0];
                      o.shift(), n[r].push(c), (i[c] = r);
                    }
                    o.forEach(function (e) {
                      n[r].push(e), (i[e] = r);
                    }),
                      (e.seriesYAxisMap = n.map(function (e) {
                        return e;
                      })),
                      (e.seriesYAxisReverseMap = i.map(function (e) {
                        return e;
                      }));
                  },
                },
                {
                  key: "scaleMultipleYAxes",
                  value: function () {
                    var e = this,
                      t = this.w.config,
                      n = this.w.globals;
                    this.setSeriesYAxisMappings();
                    var i = n.seriesYAxisMap,
                      o = n.minYArr,
                      a = n.maxYArr;
                    (n.allSeriesCollapsed = !0),
                      (n.barGroups = []),
                      i.forEach(function (i, s) {
                        var r = [];
                        i.forEach(function (e) {
                          var n = t.series[e].group;
                          r.indexOf(n) < 0 && r.push(n);
                        }),
                          i.length > 0
                            ? (function () {
                                var l,
                                  c,
                                  u = Number.MAX_VALUE,
                                  d = -Number.MAX_VALUE,
                                  h = u,
                                  p = d;
                                if (t.chart.stacked)
                                  !(function () {
                                    var e = n.seriesX[i[0]],
                                      o = [],
                                      a = [],
                                      f = [];
                                    r.forEach(function () {
                                      o.push(
                                        e.map(function () {
                                          return Number.MIN_VALUE;
                                        })
                                      ),
                                        a.push(
                                          e.map(function () {
                                            return Number.MIN_VALUE;
                                          })
                                        ),
                                        f.push(
                                          e.map(function () {
                                            return Number.MIN_VALUE;
                                          })
                                        );
                                    });
                                    for (
                                      var g = function (e) {
                                          !l &&
                                            t.series[i[e]].type &&
                                            (l = t.series[i[e]].type);
                                          var u = i[e];
                                          (c = t.series[u].group
                                            ? t.series[u].group
                                            : "axis-".concat(s)),
                                            !(
                                              n.collapsedSeriesIndices.indexOf(
                                                u
                                              ) < 0 &&
                                              n.ancillaryCollapsedSeriesIndices.indexOf(
                                                u
                                              ) < 0
                                            ) ||
                                              ((n.allSeriesCollapsed = !1),
                                              r.forEach(function (e, i) {
                                                if (t.series[u].group === e)
                                                  for (
                                                    var s = 0;
                                                    s < n.series[u].length;
                                                    s++
                                                  ) {
                                                    var r = n.series[u][s];
                                                    r >= 0
                                                      ? (a[i][s] += r)
                                                      : (f[i][s] += r),
                                                      (o[i][s] += r),
                                                      (h = Math.min(h, r)),
                                                      (p = Math.max(p, r));
                                                  }
                                              })),
                                            ("bar" !== l && "column" !== l) ||
                                              n.barGroups.push(c);
                                        },
                                        m = 0;
                                      m < i.length;
                                      m++
                                    )
                                      g(m);
                                    l || (l = t.chart.type),
                                      "bar" === l || "column" === l
                                        ? r.forEach(function (e, t) {
                                            (u = Math.min(
                                              u,
                                              Math.min.apply(null, f[t])
                                            )),
                                              (d = Math.max(
                                                d,
                                                Math.max.apply(null, a[t])
                                              ));
                                          })
                                        : (r.forEach(function (e, t) {
                                            (h = Math.min(
                                              h,
                                              Math.min.apply(null, o[t])
                                            )),
                                              (p = Math.max(
                                                p,
                                                Math.max.apply(null, o[t])
                                              ));
                                          }),
                                          (u = h),
                                          (d = p)),
                                      u === Number.MIN_VALUE &&
                                        d === Number.MIN_VALUE &&
                                        (d = -Number.MAX_VALUE);
                                  })();
                                else
                                  for (var f = 0; f < i.length; f++) {
                                    var g = i[f];
                                    (u = Math.min(u, o[g])),
                                      (d = Math.max(d, a[g])),
                                      !(
                                        n.collapsedSeriesIndices.indexOf(g) <
                                          0 &&
                                        n.ancillaryCollapsedSeriesIndices.indexOf(
                                          g
                                        ) < 0
                                      ) || (n.allSeriesCollapsed = !1);
                                  }
                                void 0 !== t.yaxis[s].min &&
                                  (u =
                                    "function" == typeof t.yaxis[s].min
                                      ? t.yaxis[s].min(u)
                                      : t.yaxis[s].min),
                                  void 0 !== t.yaxis[s].max &&
                                    (d =
                                      "function" == typeof t.yaxis[s].max
                                        ? t.yaxis[s].max(d)
                                        : t.yaxis[s].max),
                                  (n.barGroups = n.barGroups.filter(function (
                                    e,
                                    t,
                                    n
                                  ) {
                                    return n.indexOf(e) === t;
                                  })),
                                  e.setYScaleForIndex(s, u, d),
                                  i.forEach(function (e) {
                                    (o[e] = n.yAxisScale[s].niceMin),
                                      (a[e] = n.yAxisScale[s].niceMax);
                                  });
                              })()
                            : e.setYScaleForIndex(s, 0, -Number.MAX_VALUE);
                      });
                  },
                },
              ]),
              e
            );
          })(),
          Q = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.scales = new Z(t));
            }
            return (
              c(e, [
                {
                  key: "init",
                  value: function () {
                    this.setYRange(), this.setXRange(), this.setZRange();
                  },
                },
                {
                  key: "getMinYMaxY",
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : Number.MAX_VALUE,
                      n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : -Number.MAX_VALUE,
                      i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : null,
                      o = this.w.config,
                      a = this.w.globals,
                      s = -Number.MAX_VALUE,
                      r = Number.MIN_VALUE;
                    null === i && (i = e + 1);
                    var l = a.series,
                      c = l,
                      u = l;
                    "candlestick" === o.chart.type
                      ? ((c = a.seriesCandleL), (u = a.seriesCandleH))
                      : "boxPlot" === o.chart.type
                      ? ((c = a.seriesCandleO), (u = a.seriesCandleC))
                      : a.isRangeData &&
                        ((c = a.seriesRangeStart), (u = a.seriesRangeEnd));
                    var d = !1;
                    if (a.seriesX.length >= i) {
                      var h,
                        p =
                          null === (h = a.brushSource) || void 0 === h
                            ? void 0
                            : h.w.config.chart.brush;
                      ((o.chart.zoom.enabled && o.chart.zoom.autoScaleYaxis) ||
                        (null != p &&
                          p.enabled &&
                          null != p &&
                          p.autoScaleYaxis)) &&
                        (d = !0);
                    }
                    for (var f = e; f < i; f++) {
                      a.dataPoints = Math.max(a.dataPoints, l[f].length);
                      var g = o.series[f].type;
                      a.categoryLabels.length &&
                        (a.dataPoints = a.categoryLabels.filter(function (e) {
                          return void 0 !== e;
                        }).length),
                        a.labels.length &&
                          "datetime" !== o.xaxis.type &&
                          0 !==
                            a.series.reduce(function (e, t) {
                              return e + t.length;
                            }, 0) &&
                          (a.dataPoints = Math.max(
                            a.dataPoints,
                            a.labels.length
                          ));
                      var m = 0,
                        v = l[f].length - 1;
                      if (d) {
                        if (o.xaxis.min)
                          for (; m < v && a.seriesX[f][m] < o.xaxis.min; m++);
                        if (o.xaxis.max)
                          for (; v > m && a.seriesX[f][v] > o.xaxis.max; v--);
                      }
                      for (var b = m; b <= v && b < a.series[f].length; b++) {
                        var x = l[f][b];
                        if (null !== x && y.isNumber(x)) {
                          switch (
                            (void 0 !== u[f][b] &&
                              ((s = Math.max(s, u[f][b])),
                              (t = Math.min(t, u[f][b]))),
                            void 0 !== c[f][b] &&
                              ((t = Math.min(t, c[f][b])),
                              (n = Math.max(n, c[f][b]))),
                            g)
                          ) {
                            case "candlestick":
                              void 0 !== a.seriesCandleC[f][b] &&
                                ((s = Math.max(s, a.seriesCandleH[f][b])),
                                (t = Math.min(t, a.seriesCandleL[f][b])));
                              break;
                            case "boxPlot":
                              void 0 !== a.seriesCandleC[f][b] &&
                                ((s = Math.max(s, a.seriesCandleC[f][b])),
                                (t = Math.min(t, a.seriesCandleO[f][b])));
                          }
                          g &&
                            "candlestick" !== g &&
                            "boxPlot" !== g &&
                            "rangeArea" !== g &&
                            "rangeBar" !== g &&
                            ((s = Math.max(s, a.series[f][b])),
                            (t = Math.min(t, a.series[f][b]))),
                            (n = s),
                            a.seriesGoals[f] &&
                              a.seriesGoals[f][b] &&
                              Array.isArray(a.seriesGoals[f][b]) &&
                              a.seriesGoals[f][b].forEach(function (e) {
                                r !== Number.MIN_VALUE &&
                                  ((r = Math.min(r, e.value)), (t = r)),
                                  (s = Math.max(s, e.value)),
                                  (n = s);
                              }),
                            y.isFloat(x) &&
                              ((x = y.noExponents(x)),
                              (a.yValueDecimal = Math.max(
                                a.yValueDecimal,
                                x.toString().split(".")[1].length
                              ))),
                            r > c[f][b] && c[f][b] < 0 && (r = c[f][b]);
                        } else a.hasNullValues = !0;
                      }
                      ("bar" !== g && "column" !== g) ||
                        (r < 0 && s < 0 && ((s = 0), (n = Math.max(n, 0))),
                        r === Number.MIN_VALUE &&
                          ((r = 0), (t = Math.min(t, 0))));
                    }
                    return (
                      "rangeBar" === o.chart.type &&
                        a.seriesRangeStart.length &&
                        a.isBarHorizontal &&
                        (r = t),
                      "bar" === o.chart.type &&
                        (r < 0 && s < 0 && (s = 0),
                        r === Number.MIN_VALUE && (r = 0)),
                      { minY: r, maxY: s, lowestY: t, highestY: n }
                    );
                  },
                },
                {
                  key: "setYRange",
                  value: function () {
                    var e = this.w.globals,
                      t = this.w.config;
                    (e.maxY = -Number.MAX_VALUE), (e.minY = Number.MIN_VALUE);
                    var n,
                      i = Number.MAX_VALUE;
                    if (e.isMultipleYAxis) {
                      i = Number.MAX_VALUE;
                      for (var o = 0; o < e.series.length; o++)
                        (n = this.getMinYMaxY(o)),
                          (e.minYArr[o] = n.lowestY),
                          (e.maxYArr[o] = n.highestY),
                          (i = Math.min(i, n.lowestY));
                    }
                    return (
                      (n = this.getMinYMaxY(0, i, null, e.series.length)),
                      "bar" === t.chart.type
                        ? ((e.minY = n.minY), (e.maxY = n.maxY))
                        : ((e.minY = n.lowestY), (e.maxY = n.highestY)),
                      (i = n.lowestY),
                      t.chart.stacked && this._setStackedMinMax(),
                      "line" === t.chart.type ||
                      "area" === t.chart.type ||
                      "scatter" === t.chart.type ||
                      "candlestick" === t.chart.type ||
                      "boxPlot" === t.chart.type ||
                      ("rangeBar" === t.chart.type && !e.isBarHorizontal)
                        ? e.minY === Number.MIN_VALUE &&
                          i !== -Number.MAX_VALUE &&
                          i !== e.maxY &&
                          (e.minY = i)
                        : (e.minY = n.minY),
                      t.yaxis.forEach(function (t, n) {
                        void 0 !== t.max &&
                          ("number" == typeof t.max
                            ? (e.maxYArr[n] = t.max)
                            : "function" == typeof t.max &&
                              (e.maxYArr[n] = t.max(
                                e.isMultipleYAxis ? e.maxYArr[n] : e.maxY
                              )),
                          (e.maxY = e.maxYArr[n])),
                          void 0 !== t.min &&
                            ("number" == typeof t.min
                              ? (e.minYArr[n] = t.min)
                              : "function" == typeof t.min &&
                                (e.minYArr[n] = t.min(
                                  e.isMultipleYAxis
                                    ? e.minYArr[n] === Number.MIN_VALUE
                                      ? 0
                                      : e.minYArr[n]
                                    : e.minY
                                )),
                            (e.minY = e.minYArr[n]));
                      }),
                      e.isBarHorizontal &&
                        ["min", "max"].forEach(function (n) {
                          void 0 !== t.xaxis[n] &&
                            "number" == typeof t.xaxis[n] &&
                            ("min" === n
                              ? (e.minY = t.xaxis[n])
                              : (e.maxY = t.xaxis[n]));
                        }),
                      e.isMultipleYAxis
                        ? (this.scales.scaleMultipleYAxes(), (e.minY = i))
                        : (this.scales.setYScaleForIndex(0, e.minY, e.maxY),
                          (e.minY = e.yAxisScale[0].niceMin),
                          (e.maxY = e.yAxisScale[0].niceMax),
                          (e.minYArr[0] = e.minY),
                          (e.maxYArr[0] = e.maxY)),
                      (e.barGroups = []),
                      (e.lineGroups = []),
                      (e.areaGroups = []),
                      t.series.forEach(function (n) {
                        switch (n.type || t.chart.type) {
                          case "bar":
                          case "column":
                            e.barGroups.push(n.group);
                            break;
                          case "line":
                            e.lineGroups.push(n.group);
                            break;
                          case "area":
                            e.areaGroups.push(n.group);
                        }
                      }),
                      (e.barGroups = e.barGroups.filter(function (e, t, n) {
                        return n.indexOf(e) === t;
                      })),
                      (e.lineGroups = e.lineGroups.filter(function (e, t, n) {
                        return n.indexOf(e) === t;
                      })),
                      (e.areaGroups = e.areaGroups.filter(function (e, t, n) {
                        return n.indexOf(e) === t;
                      })),
                      {
                        minY: e.minY,
                        maxY: e.maxY,
                        minYArr: e.minYArr,
                        maxYArr: e.maxYArr,
                        yAxisScale: e.yAxisScale,
                      }
                    );
                  },
                },
                {
                  key: "setXRange",
                  value: function () {
                    var e = this.w.globals,
                      t = this.w.config,
                      n =
                        "numeric" === t.xaxis.type ||
                        "datetime" === t.xaxis.type ||
                        ("category" === t.xaxis.type && !e.noLabelsProvided) ||
                        e.noLabelsProvided ||
                        e.isXNumeric;
                    if (
                      (e.isXNumeric &&
                        (function () {
                          for (var t = 0; t < e.series.length; t++)
                            if (e.labels[t])
                              for (var n = 0; n < e.labels[t].length; n++)
                                null !== e.labels[t][n] &&
                                  y.isNumber(e.labels[t][n]) &&
                                  ((e.maxX = Math.max(e.maxX, e.labels[t][n])),
                                  (e.initialMaxX = Math.max(
                                    e.maxX,
                                    e.labels[t][n]
                                  )),
                                  (e.minX = Math.min(e.minX, e.labels[t][n])),
                                  (e.initialMinX = Math.min(
                                    e.minX,
                                    e.labels[t][n]
                                  )));
                        })(),
                      e.noLabelsProvided &&
                        0 === t.xaxis.categories.length &&
                        ((e.maxX = e.labels[e.labels.length - 1]),
                        (e.initialMaxX = e.labels[e.labels.length - 1]),
                        (e.minX = 1),
                        (e.initialMinX = 1)),
                      e.isXNumeric ||
                        e.noLabelsProvided ||
                        e.dataFormatXNumeric)
                    ) {
                      var i;
                      if (
                        (void 0 === t.xaxis.tickAmount
                          ? ((i = Math.round(e.svgWidth / 150)),
                            "numeric" === t.xaxis.type &&
                              e.dataPoints < 30 &&
                              (i = e.dataPoints - 1),
                            i > e.dataPoints &&
                              0 !== e.dataPoints &&
                              (i = e.dataPoints - 1))
                          : "dataPoints" === t.xaxis.tickAmount
                          ? (e.series.length > 1 &&
                              (i = e.series[e.maxValsInArrayIndex].length - 1),
                            e.isXNumeric && (i = e.maxX - e.minX - 1))
                          : (i = t.xaxis.tickAmount),
                        (e.xTickAmount = i),
                        void 0 !== t.xaxis.max &&
                          "number" == typeof t.xaxis.max &&
                          (e.maxX = t.xaxis.max),
                        void 0 !== t.xaxis.min &&
                          "number" == typeof t.xaxis.min &&
                          (e.minX = t.xaxis.min),
                        void 0 !== t.xaxis.range &&
                          (e.minX = e.maxX - t.xaxis.range),
                        e.minX !== Number.MAX_VALUE &&
                          e.maxX !== -Number.MAX_VALUE)
                      )
                        if (
                          t.xaxis.convertedCatToNumeric &&
                          !e.dataFormatXNumeric
                        ) {
                          for (var o = [], a = e.minX - 1; a < e.maxX; a++)
                            o.push(a + 1);
                          e.xAxisScale = {
                            result: o,
                            niceMin: o[0],
                            niceMax: o[o.length - 1],
                          };
                        } else
                          e.xAxisScale = this.scales.setXScale(e.minX, e.maxX);
                      else
                        (e.xAxisScale = this.scales.linearScale(
                          0,
                          i,
                          i,
                          0,
                          t.xaxis.stepSize
                        )),
                          e.noLabelsProvided &&
                            e.labels.length > 0 &&
                            ((e.xAxisScale = this.scales.linearScale(
                              1,
                              e.labels.length,
                              i - 1,
                              0,
                              t.xaxis.stepSize
                            )),
                            (e.seriesX = e.labels.slice()));
                      n && (e.labels = e.xAxisScale.result.slice());
                    }
                    return (
                      e.isBarHorizontal &&
                        e.labels.length &&
                        (e.xTickAmount = e.labels.length),
                      this._handleSingleDataPoint(),
                      this._getMinXDiff(),
                      { minX: e.minX, maxX: e.maxX }
                    );
                  },
                },
                {
                  key: "setZRange",
                  value: function () {
                    var e = this.w.globals;
                    if (e.isDataXYZ)
                      for (var t = 0; t < e.series.length; t++)
                        if (void 0 !== e.seriesZ[t])
                          for (var n = 0; n < e.seriesZ[t].length; n++)
                            null !== e.seriesZ[t][n] &&
                              y.isNumber(e.seriesZ[t][n]) &&
                              ((e.maxZ = Math.max(e.maxZ, e.seriesZ[t][n])),
                              (e.minZ = Math.min(e.minZ, e.seriesZ[t][n])));
                  },
                },
                {
                  key: "_handleSingleDataPoint",
                  value: function () {
                    var e = this.w.globals,
                      t = this.w.config;
                    if (e.minX === e.maxX) {
                      var n = new P(this.ctx);
                      if ("datetime" === t.xaxis.type) {
                        var i = n.getDate(e.minX);
                        t.xaxis.labels.datetimeUTC
                          ? i.setUTCDate(i.getUTCDate() - 2)
                          : i.setDate(i.getDate() - 2),
                          (e.minX = new Date(i).getTime());
                        var o = n.getDate(e.maxX);
                        t.xaxis.labels.datetimeUTC
                          ? o.setUTCDate(o.getUTCDate() + 2)
                          : o.setDate(o.getDate() + 2),
                          (e.maxX = new Date(o).getTime());
                      } else
                        ("numeric" === t.xaxis.type ||
                          ("category" === t.xaxis.type &&
                            !e.noLabelsProvided)) &&
                          ((e.minX = e.minX - 2),
                          (e.initialMinX = e.minX),
                          (e.maxX = e.maxX + 2),
                          (e.initialMaxX = e.maxX));
                    }
                  },
                },
                {
                  key: "_getMinXDiff",
                  value: function () {
                    var e = this.w.globals;
                    e.isXNumeric &&
                      e.seriesX.forEach(function (t, n) {
                        1 === t.length &&
                          t.push(
                            e.seriesX[e.maxValsInArrayIndex][
                              e.seriesX[e.maxValsInArrayIndex].length - 1
                            ]
                          );
                        var i = t.slice();
                        i.sort(function (e, t) {
                          return e - t;
                        }),
                          i.forEach(function (t, n) {
                            if (n > 0) {
                              var o = t - i[n - 1];
                              o > 0 && (e.minXDiff = Math.min(o, e.minXDiff));
                            }
                          }),
                          (1 !== e.dataPoints &&
                            e.minXDiff !== Number.MAX_VALUE) ||
                            (e.minXDiff = 0.5);
                      });
                  },
                },
                {
                  key: "_setStackedMinMax",
                  value: function () {
                    var e = this,
                      t = this.w.globals;
                    if (t.series.length) {
                      var n = t.seriesGroups;
                      n.length ||
                        (n = [
                          this.w.globals.seriesNames.map(function (e) {
                            return e;
                          }),
                        ]);
                      var i = {},
                        o = {};
                      n.forEach(function (n) {
                        (i[n] = []),
                          (o[n] = []),
                          e.w.config.series
                            .map(function (e, i) {
                              return n.indexOf(t.seriesNames[i]) > -1
                                ? i
                                : null;
                            })
                            .filter(function (e) {
                              return null !== e;
                            })
                            .forEach(function (a) {
                              for (
                                var s = 0;
                                s < t.series[t.maxValsInArrayIndex].length;
                                s++
                              ) {
                                var r, l, c, u;
                                void 0 === i[n][s] &&
                                  ((i[n][s] = 0), (o[n][s] = 0)),
                                  ((e.w.config.chart.stacked &&
                                    !t.comboCharts) ||
                                    (e.w.config.chart.stacked &&
                                      t.comboCharts &&
                                      (!e.w.config.chart.stackOnlyBar ||
                                        "bar" ===
                                          (null === (r = e.w.config.series) ||
                                          void 0 === r ||
                                          null === (l = r[a]) ||
                                          void 0 === l
                                            ? void 0
                                            : l.type) ||
                                        "column" ===
                                          (null === (c = e.w.config.series) ||
                                          void 0 === c ||
                                          null === (u = c[a]) ||
                                          void 0 === u
                                            ? void 0
                                            : u.type)))) &&
                                    null !== t.series[a][s] &&
                                    y.isNumber(t.series[a][s]) &&
                                    (t.series[a][s] > 0
                                      ? (i[n][s] +=
                                          parseFloat(t.series[a][s]) + 1e-4)
                                      : (o[n][s] += parseFloat(
                                          t.series[a][s]
                                        )));
                              }
                            });
                      }),
                        Object.entries(i).forEach(function (e) {
                          var n = m(e, 1)[0];
                          i[n].forEach(function (e, a) {
                            (t.maxY = Math.max(t.maxY, i[n][a])),
                              (t.minY = Math.min(t.minY, o[n][a]));
                          });
                        });
                    }
                  },
                },
              ]),
              e
            );
          })(),
          $ = (function () {
            function e(t, n) {
              r(this, e), (this.ctx = t), (this.elgrid = n), (this.w = t.w);
              var i = this.w;
              (this.xaxisFontSize = i.config.xaxis.labels.style.fontSize),
                (this.axisFontFamily = i.config.xaxis.labels.style.fontFamily),
                (this.xaxisForeColors = i.config.xaxis.labels.style.colors),
                (this.isCategoryBarHorizontal =
                  "bar" === i.config.chart.type &&
                  i.config.plotOptions.bar.horizontal),
                (this.xAxisoffX = 0),
                "bottom" === i.config.xaxis.position &&
                  (this.xAxisoffX = i.globals.gridHeight),
                (this.drawnLabels = []),
                (this.axesUtils = new L(t));
            }
            return (
              c(e, [
                {
                  key: "drawYaxis",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = new k(this.ctx),
                      o = n.config.yaxis[e].labels.style,
                      a = o.fontSize,
                      s = o.fontFamily,
                      r = o.fontWeight,
                      l = i.group({
                        class: "apexcharts-yaxis",
                        rel: e,
                        transform:
                          "translate(" + n.globals.translateYAxisX[e] + ", 0)",
                      });
                    if (this.axesUtils.isYAxisHidden(e)) return l;
                    var c = i.group({ class: "apexcharts-yaxis-texts-g" });
                    l.add(c);
                    var u = n.globals.yAxisScale[e].result.length - 1,
                      d = n.globals.gridHeight / u,
                      h = n.globals.yLabelFormatters[e],
                      p = n.globals.yAxisScale[e].result.slice();
                    p = this.axesUtils.checkForReversedLabels(e, p);
                    var f = "";
                    if (n.config.yaxis[e].labels.show) {
                      var g =
                        n.globals.translateY + n.config.yaxis[e].labels.offsetY;
                      n.globals.isBarHorizontal
                        ? (g = 0)
                        : "heatmap" === n.config.chart.type && (g -= d / 2),
                        (g +=
                          parseInt(
                            n.config.yaxis[e].labels.style.fontSize,
                            10
                          ) / 3);
                      for (
                        var m = function (l) {
                            var m = p[l];
                            m = h(m, l, n);
                            var v = n.config.yaxis[e].labels.padding;
                            n.config.yaxis[e].opposite &&
                              0 !== n.config.yaxis.length &&
                              (v *= -1);
                            var b = "end";
                            n.config.yaxis[e].opposite && (b = "start"),
                              "left" === n.config.yaxis[e].labels.align
                                ? (b = "start")
                                : "center" === n.config.yaxis[e].labels.align
                                ? (b = "middle")
                                : "right" === n.config.yaxis[e].labels.align &&
                                  (b = "end");
                            var x = t.axesUtils.getYAxisForeColor(o.colors, e),
                              w = y
                                .listToArray(
                                  n.globals.dom.baseEl.querySelectorAll(
                                    ".apexcharts-yaxis[rel='".concat(
                                      e,
                                      "'] .apexcharts-yaxis-label tspan"
                                    )
                                  )
                                )
                                .map(function (e) {
                                  return e.textContent;
                                }),
                              S = i.drawText({
                                x: v,
                                y: g,
                                text: w.indexOf(m) >= 0 ? "" : m,
                                textAnchor: b,
                                fontSize: a,
                                fontFamily: s,
                                fontWeight: r,
                                maxWidth: n.config.yaxis[e].labels.maxWidth,
                                foreColor: Array.isArray(x) ? x[l] : x,
                                isPlainText: !1,
                                cssClass:
                                  "apexcharts-yaxis-label " + o.cssClass,
                              });
                            l === u && (f = S), c.add(S);
                            var k = document.createElementNS(
                              n.globals.SVGNS,
                              "title"
                            );
                            if (
                              ((k.textContent = Array.isArray(m)
                                ? m.join(" ")
                                : m),
                              S.node.appendChild(k),
                              0 !== n.config.yaxis[e].labels.rotate)
                            ) {
                              var A = i.rotateAroundCenter(f.node),
                                C = i.rotateAroundCenter(S.node);
                              S.node.setAttribute(
                                "transform",
                                "rotate("
                                  .concat(n.config.yaxis[e].labels.rotate, " ")
                                  .concat(A.x, " ")
                                  .concat(C.y, ")")
                              );
                            }
                            g += d;
                          },
                          v = u;
                        v >= 0;
                        v--
                      )
                        m(v);
                    }
                    if (void 0 !== n.config.yaxis[e].title.text) {
                      var b = i.group({ class: "apexcharts-yaxis-title" }),
                        x = 0;
                      n.config.yaxis[e].opposite &&
                        (x = n.globals.translateYAxisX[e]);
                      var w = i.drawText({
                        x: x,
                        y:
                          n.globals.gridHeight / 2 +
                          n.globals.translateY +
                          n.config.yaxis[e].title.offsetY,
                        text: n.config.yaxis[e].title.text,
                        textAnchor: "end",
                        foreColor: n.config.yaxis[e].title.style.color,
                        fontSize: n.config.yaxis[e].title.style.fontSize,
                        fontWeight: n.config.yaxis[e].title.style.fontWeight,
                        fontFamily: n.config.yaxis[e].title.style.fontFamily,
                        cssClass:
                          "apexcharts-yaxis-title-text " +
                          n.config.yaxis[e].title.style.cssClass,
                      });
                      b.add(w), l.add(b);
                    }
                    var S = n.config.yaxis[e].axisBorder,
                      A = 31 + S.offsetX;
                    if (
                      (n.config.yaxis[e].opposite && (A = -31 - S.offsetX),
                      S.show)
                    ) {
                      var C = i.drawLine(
                        A,
                        n.globals.translateY + S.offsetY - 2,
                        A,
                        n.globals.gridHeight +
                          n.globals.translateY +
                          S.offsetY +
                          2,
                        S.color,
                        0,
                        S.width
                      );
                      l.add(C);
                    }
                    return (
                      n.config.yaxis[e].axisTicks.show &&
                        this.axesUtils.drawYAxisTicks(
                          A,
                          u,
                          S,
                          n.config.yaxis[e].axisTicks,
                          e,
                          d,
                          l
                        ),
                      l
                    );
                  },
                },
                {
                  key: "drawYaxisInversed",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = n.group({
                        class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                      }),
                      o = n.group({
                        class: "apexcharts-xaxis-texts-g",
                        transform: "translate("
                          .concat(t.globals.translateXAxisX, ", ")
                          .concat(t.globals.translateXAxisY, ")"),
                      });
                    i.add(o);
                    var a = t.globals.yAxisScale[e].result.length - 1,
                      s = t.globals.gridWidth / a + 0.1,
                      r = s + t.config.xaxis.labels.offsetX,
                      l = t.globals.xLabelFormatter,
                      c = t.globals.yAxisScale[e].result.slice(),
                      u = t.globals.timescaleLabels;
                    u.length > 0 &&
                      ((this.xaxisLabels = u.slice()),
                      (a = (c = u.slice()).length)),
                      (c = this.axesUtils.checkForReversedLabels(e, c));
                    var d = u.length;
                    if (t.config.xaxis.labels.show)
                      for (
                        var h = d ? 0 : a;
                        d ? h < d : h >= 0;
                        d ? h++ : h--
                      ) {
                        var p = c[h];
                        p = l(p, h, t);
                        var f =
                          t.globals.gridWidth +
                          t.globals.padHorizontal -
                          (r - s + t.config.xaxis.labels.offsetX);
                        if (u.length) {
                          var g = this.axesUtils.getLabel(
                            c,
                            u,
                            f,
                            h,
                            this.drawnLabels,
                            this.xaxisFontSize
                          );
                          (f = g.x),
                            (p = g.text),
                            this.drawnLabels.push(g.text),
                            0 === h &&
                              t.globals.skipFirstTimelinelabel &&
                              (p = ""),
                            h === c.length - 1 &&
                              t.globals.skipLastTimelinelabel &&
                              (p = "");
                        }
                        var m = n.drawText({
                          x: f,
                          y:
                            this.xAxisoffX +
                            t.config.xaxis.labels.offsetY +
                            30 -
                            ("top" === t.config.xaxis.position
                              ? t.globals.xAxisHeight +
                                t.config.xaxis.axisTicks.height -
                                2
                              : 0),
                          text: p,
                          textAnchor: "middle",
                          foreColor: Array.isArray(this.xaxisForeColors)
                            ? this.xaxisForeColors[e]
                            : this.xaxisForeColors,
                          fontSize: this.xaxisFontSize,
                          fontFamily: this.xaxisFontFamily,
                          fontWeight: t.config.xaxis.labels.style.fontWeight,
                          isPlainText: !1,
                          cssClass:
                            "apexcharts-xaxis-label " +
                            t.config.xaxis.labels.style.cssClass,
                        });
                        o.add(m), m.tspan(p);
                        var v = document.createElementNS(
                          t.globals.SVGNS,
                          "title"
                        );
                        (v.textContent = p), m.node.appendChild(v), (r += s);
                      }
                    return (
                      this.inversedYAxisTitleText(i),
                      this.inversedYAxisBorder(i),
                      i
                    );
                  },
                },
                {
                  key: "inversedYAxisBorder",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = t.config.xaxis.axisBorder;
                    if (i.show) {
                      var o = 0;
                      "bar" === t.config.chart.type &&
                        t.globals.isXNumeric &&
                        (o -= 15);
                      var a = n.drawLine(
                        t.globals.padHorizontal + o + i.offsetX,
                        this.xAxisoffX,
                        t.globals.gridWidth,
                        this.xAxisoffX,
                        i.color,
                        0,
                        i.height
                      );
                      this.elgrid &&
                      this.elgrid.elGridBorders &&
                      t.config.grid.show
                        ? this.elgrid.elGridBorders.add(a)
                        : e.add(a);
                    }
                  },
                },
                {
                  key: "inversedYAxisTitleText",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx);
                    if (void 0 !== t.config.xaxis.title.text) {
                      var i = n.group({
                          class:
                            "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                        }),
                        o = n.drawText({
                          x:
                            t.globals.gridWidth / 2 +
                            t.config.xaxis.title.offsetX,
                          y:
                            this.xAxisoffX +
                            parseFloat(this.xaxisFontSize) +
                            parseFloat(t.config.xaxis.title.style.fontSize) +
                            t.config.xaxis.title.offsetY +
                            20,
                          text: t.config.xaxis.title.text,
                          textAnchor: "middle",
                          fontSize: t.config.xaxis.title.style.fontSize,
                          fontFamily: t.config.xaxis.title.style.fontFamily,
                          fontWeight: t.config.xaxis.title.style.fontWeight,
                          foreColor: t.config.xaxis.title.style.color,
                          cssClass:
                            "apexcharts-xaxis-title-text " +
                            t.config.xaxis.title.style.cssClass,
                        });
                      i.add(o), e.add(i);
                    }
                  },
                },
                {
                  key: "yAxisTitleRotate",
                  value: function (e, t) {
                    var n = this.w,
                      i = new k(this.ctx),
                      o = { width: 0, height: 0 },
                      a = { width: 0, height: 0 },
                      s = n.globals.dom.baseEl.querySelector(
                        " .apexcharts-yaxis[rel='".concat(
                          e,
                          "'] .apexcharts-yaxis-texts-g"
                        )
                      );
                    null !== s && (o = s.getBoundingClientRect());
                    var r = n.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis[rel='".concat(
                        e,
                        "'] .apexcharts-yaxis-title text"
                      )
                    );
                    if (
                      (null !== r && (a = r.getBoundingClientRect()),
                      null !== r)
                    ) {
                      var l = this.xPaddingForYAxisTitle(e, o, a, t);
                      r.setAttribute("x", l.xPos - (t ? 10 : 0));
                    }
                    if (null !== r) {
                      var c = i.rotateAroundCenter(r);
                      r.setAttribute(
                        "transform",
                        "rotate("
                          .concat(
                            t
                              ? -1 * n.config.yaxis[e].title.rotate
                              : n.config.yaxis[e].title.rotate,
                            " "
                          )
                          .concat(c.x, " ")
                          .concat(c.y, ")")
                      );
                    }
                  },
                },
                {
                  key: "xPaddingForYAxisTitle",
                  value: function (e, t, n, i) {
                    var o = this.w,
                      a = 0,
                      s = 0,
                      r = 10;
                    return void 0 === o.config.yaxis[e].title.text || e < 0
                      ? { xPos: s, padd: 0 }
                      : (i
                          ? ((s =
                              t.width +
                              o.config.yaxis[e].title.offsetX +
                              n.width / 2 +
                              r / 2),
                            0 === (a += 1) && (s -= r / 2))
                          : ((s =
                              -1 * t.width +
                              o.config.yaxis[e].title.offsetX +
                              r / 2 +
                              n.width / 2),
                            o.globals.isBarHorizontal &&
                              ((r = 25),
                              (s =
                                -1 * t.width -
                                o.config.yaxis[e].title.offsetX -
                                r))),
                        { xPos: s, padd: r });
                  },
                },
                {
                  key: "setYAxisXPosition",
                  value: function (e, t) {
                    var n = this.w,
                      i = 0,
                      o = 0,
                      a = 18,
                      s = 1;
                    n.config.yaxis.length > 1 && (this.multipleYs = !0),
                      n.config.yaxis.map(function (r, l) {
                        var c =
                            n.globals.ignoreYAxisIndexes.indexOf(l) > -1 ||
                            !r.show ||
                            r.floating ||
                            0 === e[l].width,
                          u = e[l].width + t[l].width;
                        r.opposite
                          ? n.globals.isBarHorizontal
                            ? ((o =
                                n.globals.gridWidth + n.globals.translateX - 1),
                              (n.globals.translateYAxisX[l] =
                                o - r.labels.offsetX))
                            : ((o =
                                n.globals.gridWidth + n.globals.translateX + s),
                              c || (s = s + u + 20),
                              (n.globals.translateYAxisX[l] =
                                o - r.labels.offsetX + 20))
                          : ((i = n.globals.translateX - a),
                            c || (a = a + u + 20),
                            (n.globals.translateYAxisX[l] =
                              i + r.labels.offsetX));
                      });
                  },
                },
                {
                  key: "setYAxisTextAlignments",
                  value: function () {
                    var e = this.w,
                      t =
                        e.globals.dom.baseEl.getElementsByClassName(
                          "apexcharts-yaxis"
                        );
                    (t = y.listToArray(t)).forEach(function (t, n) {
                      var i = e.config.yaxis[n];
                      if (i && !i.floating && void 0 !== i.labels.align) {
                        var o = e.globals.dom.baseEl.querySelector(
                            ".apexcharts-yaxis[rel='".concat(
                              n,
                              "'] .apexcharts-yaxis-texts-g"
                            )
                          ),
                          a = e.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-yaxis[rel='".concat(
                              n,
                              "'] .apexcharts-yaxis-label"
                            )
                          );
                        a = y.listToArray(a);
                        var s = o.getBoundingClientRect();
                        "left" === i.labels.align
                          ? (a.forEach(function (e, t) {
                              e.setAttribute("text-anchor", "start");
                            }),
                            i.opposite ||
                              o.setAttribute(
                                "transform",
                                "translate(-".concat(s.width, ", 0)")
                              ))
                          : "center" === i.labels.align
                          ? (a.forEach(function (e, t) {
                              e.setAttribute("text-anchor", "middle");
                            }),
                            o.setAttribute(
                              "transform",
                              "translate(".concat(
                                (s.width / 2) * (i.opposite ? 1 : -1),
                                ", 0)"
                              )
                            ))
                          : "right" === i.labels.align &&
                            (a.forEach(function (e, t) {
                              e.setAttribute("text-anchor", "end");
                            }),
                            i.opposite &&
                              o.setAttribute(
                                "transform",
                                "translate(".concat(s.width, ", 0)")
                              ));
                      }
                    });
                  },
                },
              ]),
              e
            );
          })(),
          J = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.documentEvent = y.bind(this.documentEvent, this));
            }
            return (
              c(e, [
                {
                  key: "addEventListener",
                  value: function (e, t) {
                    var n = this.w;
                    n.globals.events.hasOwnProperty(e)
                      ? n.globals.events[e].push(t)
                      : (n.globals.events[e] = [t]);
                  },
                },
                {
                  key: "removeEventListener",
                  value: function (e, t) {
                    var n = this.w;
                    if (n.globals.events.hasOwnProperty(e)) {
                      var i = n.globals.events[e].indexOf(t);
                      -1 !== i && n.globals.events[e].splice(i, 1);
                    }
                  },
                },
                {
                  key: "fireEvent",
                  value: function (e, t) {
                    var n = this.w;
                    if (n.globals.events.hasOwnProperty(e)) {
                      (t && t.length) || (t = []);
                      for (
                        var i = n.globals.events[e], o = i.length, a = 0;
                        a < o;
                        a++
                      )
                        i[a].apply(null, t);
                    }
                  },
                },
                {
                  key: "setupEventHandlers",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = this.ctx,
                      i = t.globals.dom.baseEl.querySelector(
                        t.globals.chartClass
                      );
                    this.ctx.eventList.forEach(function (e) {
                      i.addEventListener(
                        e,
                        function (e) {
                          var i = Object.assign({}, t, {
                            seriesIndex: t.globals.axisCharts
                              ? t.globals.capturedSeriesIndex
                              : 0,
                            dataPointIndex: t.globals.capturedDataPointIndex,
                          });
                          "mousemove" === e.type || "touchmove" === e.type
                            ? "function" ==
                                typeof t.config.chart.events.mouseMove &&
                              t.config.chart.events.mouseMove(e, n, i)
                            : "mouseleave" === e.type || "touchleave" === e.type
                            ? "function" ==
                                typeof t.config.chart.events.mouseLeave &&
                              t.config.chart.events.mouseLeave(e, n, i)
                            : (("mouseup" === e.type && 1 === e.which) ||
                                "touchend" === e.type) &&
                              ("function" ==
                                typeof t.config.chart.events.click &&
                                t.config.chart.events.click(e, n, i),
                              n.ctx.events.fireEvent("click", [e, n, i]));
                        },
                        { capture: !1, passive: !0 }
                      );
                    }),
                      this.ctx.eventList.forEach(function (n) {
                        t.globals.dom.baseEl.addEventListener(
                          n,
                          e.documentEvent,
                          { passive: !0 }
                        );
                      }),
                      this.ctx.core.setupBrushHandler();
                  },
                },
                {
                  key: "documentEvent",
                  value: function (e) {
                    var t = this.w,
                      n = e.target.className;
                    if ("click" === e.type) {
                      var i =
                        t.globals.dom.baseEl.querySelector(".apexcharts-menu");
                      i &&
                        i.classList.contains("apexcharts-menu-open") &&
                        "apexcharts-menu-icon" !== n &&
                        i.classList.remove("apexcharts-menu-open");
                    }
                    (t.globals.clientX =
                      "touchmove" === e.type
                        ? e.touches[0].clientX
                        : e.clientX),
                      (t.globals.clientY =
                        "touchmove" === e.type
                          ? e.touches[0].clientY
                          : e.clientY);
                  },
                },
              ]),
              e
            );
          })(),
          ee = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "setCurrentLocaleValues",
                  value: function (e) {
                    var t = this.w.config.chart.locales;
                    window.Apex.chart &&
                      window.Apex.chart.locales &&
                      window.Apex.chart.locales.length > 0 &&
                      (t = this.w.config.chart.locales.concat(
                        window.Apex.chart.locales
                      ));
                    var n = t.filter(function (t) {
                      return t.name === e;
                    })[0];
                    if (!n)
                      throw new Error(
                        "Wrong locale name provided. Please make sure you set the correct locale name in options"
                      );
                    var i = y.extend(R, n);
                    this.w.globals.locale = i.options;
                  },
                },
              ]),
              e
            );
          })(),
          te = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "drawAxis",
                  value: function (e, t) {
                    var n,
                      i,
                      o = this,
                      a = this.w.globals,
                      s = this.w.config,
                      r = new K(this.ctx, t),
                      l = new $(this.ctx, t);
                    a.axisCharts &&
                      "radar" !== e &&
                      (a.isBarHorizontal
                        ? ((i = l.drawYaxisInversed(0)),
                          (n = r.drawXaxisInversed(0)),
                          a.dom.elGraphical.add(n),
                          a.dom.elGraphical.add(i))
                        : ((n = r.drawXaxis()),
                          a.dom.elGraphical.add(n),
                          s.yaxis.map(function (e, t) {
                            if (
                              -1 === a.ignoreYAxisIndexes.indexOf(t) &&
                              ((i = l.drawYaxis(t)),
                              a.dom.Paper.add(i),
                              "back" === o.w.config.grid.position)
                            ) {
                              var n = a.dom.Paper.children()[1];
                              n.remove(), a.dom.Paper.add(n);
                            }
                          })));
                  },
                },
              ]),
              e
            );
          })(),
          ne = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "drawXCrosshairs",
                  value: function () {
                    var e = this.w,
                      t = new k(this.ctx),
                      n = new S(this.ctx),
                      i = e.config.xaxis.crosshairs.fill.gradient,
                      o = e.config.xaxis.crosshairs.dropShadow,
                      a = e.config.xaxis.crosshairs.fill.type,
                      s = i.colorFrom,
                      r = i.colorTo,
                      l = i.opacityFrom,
                      c = i.opacityTo,
                      u = i.stops,
                      d = o.enabled,
                      h = o.left,
                      p = o.top,
                      f = o.blur,
                      g = o.color,
                      m = o.opacity,
                      v = e.config.xaxis.crosshairs.fill.color;
                    if (e.config.xaxis.crosshairs.show) {
                      "gradient" === a &&
                        (v = t.drawGradient(
                          "vertical",
                          s,
                          r,
                          l,
                          c,
                          null,
                          u,
                          null
                        ));
                      var b = t.drawRect();
                      1 === e.config.xaxis.crosshairs.width &&
                        (b = t.drawLine());
                      var x = e.globals.gridHeight;
                      (!y.isNumber(x) || x < 0) && (x = 0);
                      var w = e.config.xaxis.crosshairs.width;
                      (!y.isNumber(w) || w < 0) && (w = 0),
                        b.attr({
                          class: "apexcharts-xcrosshairs",
                          x: 0,
                          y: 0,
                          y2: x,
                          width: w,
                          height: x,
                          fill: v,
                          filter: "none",
                          "fill-opacity": e.config.xaxis.crosshairs.opacity,
                          stroke: e.config.xaxis.crosshairs.stroke.color,
                          "stroke-width":
                            e.config.xaxis.crosshairs.stroke.width,
                          "stroke-dasharray":
                            e.config.xaxis.crosshairs.stroke.dashArray,
                        }),
                        d &&
                          (b = n.dropShadow(b, {
                            left: h,
                            top: p,
                            blur: f,
                            color: g,
                            opacity: m,
                          })),
                        e.globals.dom.elGraphical.add(b);
                    }
                  },
                },
                {
                  key: "drawYCrosshairs",
                  value: function () {
                    var e = this.w,
                      t = new k(this.ctx),
                      n = e.config.yaxis[0].crosshairs,
                      i = e.globals.barPadForNumericAxis;
                    if (e.config.yaxis[0].crosshairs.show) {
                      var o = t.drawLine(
                        -i,
                        0,
                        e.globals.gridWidth + i,
                        0,
                        n.stroke.color,
                        n.stroke.dashArray,
                        n.stroke.width
                      );
                      o.attr({ class: "apexcharts-ycrosshairs" }),
                        e.globals.dom.elGraphical.add(o);
                    }
                    var a = t.drawLine(
                      -i,
                      0,
                      e.globals.gridWidth + i,
                      0,
                      n.stroke.color,
                      0,
                      0
                    );
                    a.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                      e.globals.dom.elGraphical.add(a);
                  },
                },
              ]),
              e
            );
          })(),
          ie = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "checkResponsiveConfig",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = n.config;
                    if (0 !== i.responsive.length) {
                      var o = i.responsive.slice();
                      o.sort(function (e, t) {
                        return e.breakpoint > t.breakpoint
                          ? 1
                          : t.breakpoint > e.breakpoint
                          ? -1
                          : 0;
                      }).reverse();
                      var a = new j({}),
                        s = function () {
                          var e =
                              arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : {},
                            i = o[0].breakpoint,
                            s =
                              window.innerWidth > 0
                                ? window.innerWidth
                                : screen.width;
                          if (s > i) {
                            var r = y.clone(n.globals.initialConfig);
                            r.series = y.clone(n.config.series);
                            var l = A.extendArrayProps(a, r, n);
                            (e = y.extend(l, e)),
                              (e = y.extend(n.config, e)),
                              t.overrideResponsiveOptions(e);
                          } else
                            for (var c = 0; c < o.length; c++)
                              s < o[c].breakpoint &&
                                ((e = A.extendArrayProps(a, o[c].options, n)),
                                (e = y.extend(n.config, e)),
                                t.overrideResponsiveOptions(e));
                        };
                      if (e) {
                        var r = A.extendArrayProps(a, e, n);
                        (r = y.extend(n.config, r)), s((r = y.extend(r, e)));
                      } else s({});
                    }
                  },
                },
                {
                  key: "overrideResponsiveOptions",
                  value: function (e) {
                    var t = new j(e).init({ responsiveOverride: !0 });
                    this.w.config = t;
                  },
                },
              ]),
              e
            );
          })(),
          oe = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.colors = []), (this.w = t.w);
              var n = this.w;
              (this.isColorFn = !1),
                (this.isHeatmapDistributed =
                  ("treemap" === n.config.chart.type &&
                    n.config.plotOptions.treemap.distributed) ||
                  ("heatmap" === n.config.chart.type &&
                    n.config.plotOptions.heatmap.distributed)),
                (this.isBarDistributed =
                  n.config.plotOptions.bar.distributed &&
                  ("bar" === n.config.chart.type ||
                    "rangeBar" === n.config.chart.type));
            }
            return (
              c(e, [
                {
                  key: "init",
                  value: function () {
                    this.setDefaultColors();
                  },
                },
                {
                  key: "setDefaultColors",
                  value: function () {
                    var e,
                      t = this,
                      n = this.w,
                      i = new y();
                    if (
                      (n.globals.dom.elWrap.classList.add(
                        "apexcharts-theme-".concat(n.config.theme.mode)
                      ),
                      void 0 === n.config.colors ||
                      0 ===
                        (null === (e = n.config.colors) || void 0 === e
                          ? void 0
                          : e.length)
                        ? (n.globals.colors = this.predefined())
                        : ((n.globals.colors = n.config.colors),
                          Array.isArray(n.config.colors) &&
                            n.config.colors.length > 0 &&
                            "function" == typeof n.config.colors[0] &&
                            (n.globals.colors = n.config.series.map(function (
                              e,
                              i
                            ) {
                              var o = n.config.colors[i];
                              return (
                                o || (o = n.config.colors[0]),
                                "function" == typeof o
                                  ? ((t.isColorFn = !0),
                                    o({
                                      value: n.globals.axisCharts
                                        ? n.globals.series[i][0]
                                          ? n.globals.series[i][0]
                                          : 0
                                        : n.globals.series[i],
                                      seriesIndex: i,
                                      dataPointIndex: i,
                                      w: n,
                                    }))
                                  : o
                              );
                            }))),
                      n.globals.seriesColors.map(function (e, t) {
                        e && (n.globals.colors[t] = e);
                      }),
                      n.config.theme.monochrome.enabled)
                    ) {
                      var o = [],
                        a = n.globals.series.length;
                      (this.isBarDistributed || this.isHeatmapDistributed) &&
                        (a =
                          n.globals.series[0].length * n.globals.series.length);
                      for (
                        var s = n.config.theme.monochrome.color,
                          r =
                            1 / (a / n.config.theme.monochrome.shadeIntensity),
                          l = n.config.theme.monochrome.shadeTo,
                          c = 0,
                          u = 0;
                        u < a;
                        u++
                      ) {
                        var d = void 0;
                        "dark" === l
                          ? ((d = i.shadeColor(-1 * c, s)), (c += r))
                          : ((d = i.shadeColor(c, s)), (c += r)),
                          o.push(d);
                      }
                      n.globals.colors = o.slice();
                    }
                    var h = n.globals.colors.slice();
                    this.pushExtraColors(n.globals.colors),
                      ["fill", "stroke"].forEach(function (e) {
                        void 0 === n.config[e].colors
                          ? (n.globals[e].colors = t.isColorFn
                              ? n.config.colors
                              : h)
                          : (n.globals[e].colors = n.config[e].colors.slice()),
                          t.pushExtraColors(n.globals[e].colors);
                      }),
                      void 0 === n.config.dataLabels.style.colors
                        ? (n.globals.dataLabels.style.colors = h)
                        : (n.globals.dataLabels.style.colors =
                            n.config.dataLabels.style.colors.slice()),
                      this.pushExtraColors(
                        n.globals.dataLabels.style.colors,
                        50
                      ),
                      void 0 === n.config.plotOptions.radar.polygons.fill.colors
                        ? (n.globals.radarPolygons.fill.colors = [
                            "dark" === n.config.theme.mode ? "#424242" : "none",
                          ])
                        : (n.globals.radarPolygons.fill.colors =
                            n.config.plotOptions.radar.polygons.fill.colors.slice()),
                      this.pushExtraColors(
                        n.globals.radarPolygons.fill.colors,
                        20
                      ),
                      void 0 === n.config.markers.colors
                        ? (n.globals.markers.colors = h)
                        : (n.globals.markers.colors =
                            n.config.markers.colors.slice()),
                      this.pushExtraColors(n.globals.markers.colors);
                  },
                },
                {
                  key: "pushExtraColors",
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : null,
                      i = this.w,
                      o = t || i.globals.series.length;
                    if (
                      (null === n &&
                        (n =
                          this.isBarDistributed ||
                          this.isHeatmapDistributed ||
                          ("heatmap" === i.config.chart.type &&
                            i.config.plotOptions.heatmap.colorScale.inverse)),
                      n &&
                        i.globals.series.length &&
                        (o =
                          i.globals.series[i.globals.maxValsInArrayIndex]
                            .length * i.globals.series.length),
                      e.length < o)
                    )
                      for (var a = o - e.length, s = 0; s < a; s++)
                        e.push(e[s]);
                  },
                },
                {
                  key: "updateThemeOptions",
                  value: function (e) {
                    (e.chart = e.chart || {}), (e.tooltip = e.tooltip || {});
                    var t = e.theme.mode,
                      n =
                        "dark" === t
                          ? "palette4"
                          : "light" === t
                          ? "palette1"
                          : e.theme.palette || "palette1",
                      i =
                        "dark" === t
                          ? "#f6f7f8"
                          : "light" === t
                          ? "#373d3f"
                          : e.chart.foreColor || "#373d3f";
                    return (
                      (e.tooltip.theme = t || "light"),
                      (e.chart.foreColor = i),
                      (e.theme.palette = n),
                      e
                    );
                  },
                },
                {
                  key: "predefined",
                  value: function () {
                    switch (this.w.config.theme.palette) {
                      case "palette1":
                      default:
                        this.colors = [
                          "#008FFB",
                          "#00E396",
                          "#FEB019",
                          "#FF4560",
                          "#775DD0",
                        ];
                        break;
                      case "palette2":
                        this.colors = [
                          "#3f51b5",
                          "#03a9f4",
                          "#4caf50",
                          "#f9ce1d",
                          "#FF9800",
                        ];
                        break;
                      case "palette3":
                        this.colors = [
                          "#33b2df",
                          "#546E7A",
                          "#d4526e",
                          "#13d8aa",
                          "#A5978B",
                        ];
                        break;
                      case "palette4":
                        this.colors = [
                          "#4ecdc4",
                          "#c7f464",
                          "#81D4FA",
                          "#fd6a6a",
                          "#546E7A",
                        ];
                        break;
                      case "palette5":
                        this.colors = [
                          "#2b908f",
                          "#f9a3a4",
                          "#90ee7e",
                          "#fa4443",
                          "#69d2e7",
                        ];
                        break;
                      case "palette6":
                        this.colors = [
                          "#449DD1",
                          "#F86624",
                          "#EA3546",
                          "#662E9B",
                          "#C5D86D",
                        ];
                        break;
                      case "palette7":
                        this.colors = [
                          "#D7263D",
                          "#1B998B",
                          "#2E294E",
                          "#F46036",
                          "#E2C044",
                        ];
                        break;
                      case "palette8":
                        this.colors = [
                          "#662E9B",
                          "#F86624",
                          "#F9C80E",
                          "#EA3546",
                          "#43BCCD",
                        ];
                        break;
                      case "palette9":
                        this.colors = [
                          "#5C4742",
                          "#A5978B",
                          "#8D5B4C",
                          "#5A2A27",
                          "#C4BBAF",
                        ];
                        break;
                      case "palette10":
                        this.colors = [
                          "#A300D6",
                          "#7D02EB",
                          "#5653FE",
                          "#2983FF",
                          "#00B1F2",
                        ];
                    }
                    return this.colors;
                  },
                },
              ]),
              e
            );
          })(),
          ae = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function () {
                    this.drawTitleSubtitle("title"),
                      this.drawTitleSubtitle("subtitle");
                  },
                },
                {
                  key: "drawTitleSubtitle",
                  value: function (e) {
                    var t = this.w,
                      n = "title" === e ? t.config.title : t.config.subtitle,
                      i = t.globals.svgWidth / 2,
                      o = n.offsetY,
                      a = "middle";
                    if (
                      ("left" === n.align
                        ? ((i = 10), (a = "start"))
                        : "right" === n.align &&
                          ((i = t.globals.svgWidth - 10), (a = "end")),
                      (i += n.offsetX),
                      (o = o + parseInt(n.style.fontSize, 10) + n.margin / 2),
                      void 0 !== n.text)
                    ) {
                      var s = new k(this.ctx).drawText({
                        x: i,
                        y: o,
                        text: n.text,
                        textAnchor: a,
                        fontSize: n.style.fontSize,
                        fontFamily: n.style.fontFamily,
                        fontWeight: n.style.fontWeight,
                        foreColor: n.style.color,
                        opacity: 1,
                      });
                      s.node.setAttribute(
                        "class",
                        "apexcharts-".concat(e, "-text")
                      ),
                        t.globals.dom.Paper.add(s);
                    }
                  },
                },
              ]),
              e
            );
          })(),
          se = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.dCtx = t);
            }
            return (
              c(e, [
                {
                  key: "getTitleSubtitleCoords",
                  value: function (e) {
                    var t = this.w,
                      n = 0,
                      i = 0,
                      o =
                        "title" === e
                          ? t.config.title.floating
                          : t.config.subtitle.floating,
                      a = t.globals.dom.baseEl.querySelector(
                        ".apexcharts-".concat(e, "-text")
                      );
                    if (null !== a && !o) {
                      var s = a.getBoundingClientRect();
                      (n = s.width),
                        (i = t.globals.axisCharts ? s.height + 5 : s.height);
                    }
                    return { width: n, height: i };
                  },
                },
                {
                  key: "getLegendsRect",
                  value: function () {
                    var e = this.w,
                      t = e.globals.dom.elLegendWrap;
                    e.config.legend.height ||
                      ("top" !== e.config.legend.position &&
                        "bottom" !== e.config.legend.position) ||
                      (t.style.maxHeight = e.globals.svgHeight / 2 + "px");
                    var n = Object.assign({}, y.getBoundingClientRect(t));
                    return (
                      null !== t &&
                      !e.config.legend.floating &&
                      e.config.legend.show
                        ? (this.dCtx.lgRect = {
                            x: n.x,
                            y: n.y,
                            height: n.height,
                            width: 0 === n.height ? 0 : n.width,
                          })
                        : (this.dCtx.lgRect = {
                            x: 0,
                            y: 0,
                            height: 0,
                            width: 0,
                          }),
                      ("left" !== e.config.legend.position &&
                        "right" !== e.config.legend.position) ||
                        (1.5 * this.dCtx.lgRect.width > e.globals.svgWidth &&
                          (this.dCtx.lgRect.width = e.globals.svgWidth / 1.5)),
                      this.dCtx.lgRect
                    );
                  },
                },
                {
                  key: "getDatalabelsRect",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = [];
                    t.config.series.forEach(function (o, a) {
                      o.data.forEach(function (o, s) {
                        var r;
                        (r = t.globals.series[a][s]),
                          (i = t.config.dataLabels.formatter(r, {
                            ctx: e.dCtx.ctx,
                            seriesIndex: a,
                            dataPointIndex: s,
                            w: t,
                          })),
                          n.push(i);
                      });
                    });
                    var i = y.getLargestStringFromArr(n),
                      o = new k(this.dCtx.ctx),
                      a = t.config.dataLabels.style,
                      s = o.getTextRects(i, parseInt(a.fontSize), a.fontFamily);
                    return { width: 1.05 * s.width, height: s.height };
                  },
                },
                {
                  key: "getLargestStringFromMultiArr",
                  value: function (e, t) {
                    var n = e;
                    if (this.w.globals.isMultiLineX) {
                      var i = t.map(function (e, t) {
                          return Array.isArray(e) ? e.length : 1;
                        }),
                        o = Math.max.apply(Math, v(i));
                      n = t[i.indexOf(o)];
                    }
                    return n;
                  },
                },
              ]),
              e
            );
          })(),
          re = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.dCtx = t);
            }
            return (
              c(e, [
                {
                  key: "getxAxisLabelsCoords",
                  value: function () {
                    var e,
                      t = this.w,
                      n = t.globals.labels.slice();
                    if (
                      (t.config.xaxis.convertedCatToNumeric &&
                        0 === n.length &&
                        (n = t.globals.categoryLabels),
                      t.globals.timescaleLabels.length > 0)
                    ) {
                      var i = this.getxAxisTimeScaleLabelsCoords();
                      (e = { width: i.width, height: i.height }),
                        (t.globals.rotateXLabels = !1);
                    } else {
                      this.dCtx.lgWidthForSideLegends =
                        ("left" !== t.config.legend.position &&
                          "right" !== t.config.legend.position) ||
                        t.config.legend.floating
                          ? 0
                          : this.dCtx.lgRect.width;
                      var o = t.globals.xLabelFormatter,
                        a = y.getLargestStringFromArr(n),
                        s = this.dCtx.dimHelpers.getLargestStringFromMultiArr(
                          a,
                          n
                        );
                      t.globals.isBarHorizontal &&
                        (s = a =
                          t.globals.yAxisScale[0].result.reduce(function (
                            e,
                            t
                          ) {
                            return e.length > t.length ? e : t;
                          },
                          0));
                      var r = new E(this.dCtx.ctx),
                        l = a;
                      (a = r.xLabelFormat(o, a, l, {
                        i: void 0,
                        dateFormatter: new P(this.dCtx.ctx).formatDate,
                        w: t,
                      })),
                        (s = r.xLabelFormat(o, s, l, {
                          i: void 0,
                          dateFormatter: new P(this.dCtx.ctx).formatDate,
                          w: t,
                        })),
                        ((t.config.xaxis.convertedCatToNumeric &&
                          void 0 === a) ||
                          "" === String(a).trim()) &&
                          (s = a = "1");
                      var c = new k(this.dCtx.ctx),
                        u = c.getTextRects(
                          a,
                          t.config.xaxis.labels.style.fontSize
                        ),
                        d = u;
                      if (
                        (a !== s &&
                          (d = c.getTextRects(
                            s,
                            t.config.xaxis.labels.style.fontSize
                          )),
                        ((e = {
                          width: u.width >= d.width ? u.width : d.width,
                          height: u.height >= d.height ? u.height : d.height,
                        }).width *
                          n.length >
                          t.globals.svgWidth -
                            this.dCtx.lgWidthForSideLegends -
                            this.dCtx.yAxisWidth -
                            this.dCtx.gridPad.left -
                            this.dCtx.gridPad.right &&
                          0 !== t.config.xaxis.labels.rotate) ||
                          t.config.xaxis.labels.rotateAlways)
                      ) {
                        if (!t.globals.isBarHorizontal) {
                          t.globals.rotateXLabels = !0;
                          var h = function (e) {
                            return c.getTextRects(
                              e,
                              t.config.xaxis.labels.style.fontSize,
                              t.config.xaxis.labels.style.fontFamily,
                              "rotate(".concat(
                                t.config.xaxis.labels.rotate,
                                " 0 0)"
                              ),
                              !1
                            );
                          };
                          (u = h(a)),
                            a !== s && (d = h(s)),
                            (e.height =
                              (u.height > d.height ? u.height : d.height) /
                              1.5),
                            (e.width = u.width > d.width ? u.width : d.width);
                        }
                      } else t.globals.rotateXLabels = !1;
                    }
                    return (
                      t.config.xaxis.labels.show ||
                        (e = { width: 0, height: 0 }),
                      { width: e.width, height: e.height }
                    );
                  },
                },
                {
                  key: "getxAxisGroupLabelsCoords",
                  value: function () {
                    var e,
                      t = this.w;
                    if (!t.globals.hasXaxisGroups)
                      return { width: 0, height: 0 };
                    var n,
                      i =
                        (null === (e = t.config.xaxis.group.style) ||
                        void 0 === e
                          ? void 0
                          : e.fontSize) || t.config.xaxis.labels.style.fontSize,
                      o = t.globals.groups.map(function (e) {
                        return e.title;
                      }),
                      a = y.getLargestStringFromArr(o),
                      s = this.dCtx.dimHelpers.getLargestStringFromMultiArr(
                        a,
                        o
                      ),
                      r = new k(this.dCtx.ctx),
                      l = r.getTextRects(a, i),
                      c = l;
                    return (
                      a !== s && (c = r.getTextRects(s, i)),
                      (n = {
                        width: l.width >= c.width ? l.width : c.width,
                        height: l.height >= c.height ? l.height : c.height,
                      }),
                      t.config.xaxis.labels.show ||
                        (n = { width: 0, height: 0 }),
                      { width: n.width, height: n.height }
                    );
                  },
                },
                {
                  key: "getxAxisTitleCoords",
                  value: function () {
                    var e = this.w,
                      t = 0,
                      n = 0;
                    if (void 0 !== e.config.xaxis.title.text) {
                      var i = new k(this.dCtx.ctx).getTextRects(
                        e.config.xaxis.title.text,
                        e.config.xaxis.title.style.fontSize
                      );
                      (t = i.width), (n = i.height);
                    }
                    return { width: t, height: n };
                  },
                },
                {
                  key: "getxAxisTimeScaleLabelsCoords",
                  value: function () {
                    var e,
                      t = this.w;
                    this.dCtx.timescaleLabels =
                      t.globals.timescaleLabels.slice();
                    var n = this.dCtx.timescaleLabels.map(function (e) {
                        return e.value;
                      }),
                      i = n.reduce(function (e, t) {
                        return void 0 === e
                          ? (console.error(
                              "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"
                            ),
                            0)
                          : e.length > t.length
                          ? e
                          : t;
                      }, 0);
                    return (
                      1.05 *
                        (e = new k(this.dCtx.ctx).getTextRects(
                          i,
                          t.config.xaxis.labels.style.fontSize
                        )).width *
                        n.length >
                        t.globals.gridWidth &&
                        0 !== t.config.xaxis.labels.rotate &&
                        (t.globals.overlappingXLabels = !0),
                      e
                    );
                  },
                },
                {
                  key: "additionalPaddingXLabels",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = n.globals,
                      o = n.config,
                      a = o.xaxis.type,
                      s = e.width;
                    (i.skipLastTimelinelabel = !1),
                      (i.skipFirstTimelinelabel = !1);
                    var r =
                        n.config.yaxis[0].opposite && n.globals.isBarHorizontal,
                      l = function (e, r) {
                        (o.yaxis.length > 1 &&
                          (function (e) {
                            return -1 !== i.collapsedSeriesIndices.indexOf(e);
                          })(r)) ||
                          (function (e) {
                            if (
                              t.dCtx.timescaleLabels &&
                              t.dCtx.timescaleLabels.length
                            ) {
                              var r = t.dCtx.timescaleLabels[0],
                                l =
                                  t.dCtx.timescaleLabels[
                                    t.dCtx.timescaleLabels.length - 1
                                  ].position +
                                  s / 1.75 -
                                  t.dCtx.yAxisWidthRight,
                                c =
                                  r.position - s / 1.75 + t.dCtx.yAxisWidthLeft,
                                u =
                                  "right" === n.config.legend.position &&
                                  t.dCtx.lgRect.width > 0
                                    ? t.dCtx.lgRect.width
                                    : 0;
                              l > i.svgWidth - i.translateX - u &&
                                (i.skipLastTimelinelabel = !0),
                                c <
                                  -((e.show && !e.floating) ||
                                  ("bar" !== o.chart.type &&
                                    "candlestick" !== o.chart.type &&
                                    "rangeBar" !== o.chart.type &&
                                    "boxPlot" !== o.chart.type)
                                    ? 10
                                    : s / 1.75) &&
                                  (i.skipFirstTimelinelabel = !0);
                            } else
                              "datetime" === a
                                ? t.dCtx.gridPad.right < s &&
                                  !i.rotateXLabels &&
                                  (i.skipLastTimelinelabel = !0)
                                : "datetime" !== a &&
                                  t.dCtx.gridPad.right <
                                    s / 2 - t.dCtx.yAxisWidthRight &&
                                  !i.rotateXLabels &&
                                  !n.config.xaxis.labels.trim &&
                                  (t.dCtx.xPadRight = s / 2 + 1);
                          })(e);
                      };
                    o.yaxis.forEach(function (e, n) {
                      r
                        ? (t.dCtx.gridPad.left < s &&
                            (t.dCtx.xPadLeft = s / 2 + 1),
                          (t.dCtx.xPadRight = s / 2 + 1))
                        : l(e, n);
                    });
                  },
                },
              ]),
              e
            );
          })(),
          le = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.dCtx = t);
            }
            return (
              c(e, [
                {
                  key: "getyAxisLabelsCoords",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = [],
                      i = 10,
                      o = new L(this.dCtx.ctx);
                    return (
                      t.config.yaxis.map(function (a, s) {
                        var r = { seriesIndex: s, dataPointIndex: -1, w: t },
                          l = t.globals.yAxisScale[s],
                          c = 0;
                        if (
                          (!o.isYAxisHidden(s) &&
                            a.labels.show &&
                            void 0 !== a.labels.minWidth &&
                            (c = a.labels.minWidth),
                          !o.isYAxisHidden(s) &&
                            a.labels.show &&
                            l.result.length)
                        ) {
                          var u = t.globals.yLabelFormatters[s],
                            d = l.niceMin === Number.MIN_VALUE ? 0 : l.niceMin,
                            h = l.result.reduce(function (e, t) {
                              var n, i;
                              return (null === (n = String(u(e, r))) ||
                              void 0 === n
                                ? void 0
                                : n.length) >
                                (null === (i = String(u(t, r))) || void 0 === i
                                  ? void 0
                                  : i.length)
                                ? e
                                : t;
                            }, d),
                            p = (h = u(h, r));
                          if (
                            ((void 0 !== h && 0 !== h.length) ||
                              (h = l.niceMax),
                            t.globals.isBarHorizontal)
                          ) {
                            i = 0;
                            var f = t.globals.labels.slice();
                            (h = y.getLargestStringFromArr(f)),
                              (h = u(h, {
                                seriesIndex: s,
                                dataPointIndex: -1,
                                w: t,
                              })),
                              (p =
                                e.dCtx.dimHelpers.getLargestStringFromMultiArr(
                                  h,
                                  f
                                ));
                          }
                          var g = new k(e.dCtx.ctx),
                            m = "rotate(".concat(a.labels.rotate, " 0 0)"),
                            v = g.getTextRects(
                              h,
                              a.labels.style.fontSize,
                              a.labels.style.fontFamily,
                              m,
                              !1
                            ),
                            b = v;
                          h !== p &&
                            (b = g.getTextRects(
                              p,
                              a.labels.style.fontSize,
                              a.labels.style.fontFamily,
                              m,
                              !1
                            )),
                            n.push({
                              width:
                                (c > b.width || c > v.width
                                  ? c
                                  : b.width > v.width
                                  ? b.width
                                  : v.width) + i,
                              height: b.height > v.height ? b.height : v.height,
                            });
                        } else n.push({ width: 0, height: 0 });
                      }),
                      n
                    );
                  },
                },
                {
                  key: "getyAxisTitleCoords",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = [];
                    return (
                      t.config.yaxis.map(function (t, i) {
                        if (t.show && void 0 !== t.title.text) {
                          var o = new k(e.dCtx.ctx),
                            a = "rotate(".concat(t.title.rotate, " 0 0)"),
                            s = o.getTextRects(
                              t.title.text,
                              t.title.style.fontSize,
                              t.title.style.fontFamily,
                              a,
                              !1
                            );
                          n.push({ width: s.width, height: s.height });
                        } else n.push({ width: 0, height: 0 });
                      }),
                      n
                    );
                  },
                },
                {
                  key: "getTotalYAxisWidth",
                  value: function () {
                    var e = this.w,
                      t = 0,
                      n = 0,
                      i = 0,
                      o = e.globals.yAxisScale.length > 1 ? 10 : 0,
                      a = new L(this.dCtx.ctx),
                      s = function (s, r) {
                        var l = e.config.yaxis[r].floating,
                          c = 0;
                        s.width > 0 && !l
                          ? ((c = s.width + o),
                            (function (t) {
                              return (
                                e.globals.ignoreYAxisIndexes.indexOf(t) > -1
                              );
                            })(r) && (c = c - s.width - o))
                          : (c = l || a.isYAxisHidden(r) ? 0 : 5),
                          e.config.yaxis[r].opposite ? (i += c) : (n += c),
                          (t += c);
                      };
                    return (
                      e.globals.yLabelsCoords.map(function (e, t) {
                        s(e, t);
                      }),
                      e.globals.yTitleCoords.map(function (e, t) {
                        s(e, t);
                      }),
                      e.globals.isBarHorizontal &&
                        !e.config.yaxis[0].floating &&
                        (t =
                          e.globals.yLabelsCoords[0].width +
                          e.globals.yTitleCoords[0].width +
                          15),
                      (this.dCtx.yAxisWidthLeft = n),
                      (this.dCtx.yAxisWidthRight = i),
                      t
                    );
                  },
                },
              ]),
              e
            );
          })(),
          ce = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.dCtx = t);
            }
            return (
              c(e, [
                {
                  key: "gridPadForColumnsInNumericAxis",
                  value: function (e) {
                    var t = this.w,
                      n = t.config,
                      i = t.globals;
                    if (
                      i.noData ||
                      i.collapsedSeries.length +
                        i.ancillaryCollapsedSeries.length ===
                        n.series.length
                    )
                      return 0;
                    var o = function (e) {
                        return (
                          "bar" === e ||
                          "rangeBar" === e ||
                          "candlestick" === e ||
                          "boxPlot" === e
                        );
                      },
                      a = n.chart.type,
                      s = 0,
                      r = o(a) ? n.series.length : 1;
                    i.comboBarCount > 0 && (r = i.comboBarCount),
                      i.collapsedSeries.forEach(function (e) {
                        o(e.type) && (r -= 1);
                      }),
                      n.chart.stacked && (r = 1);
                    var l,
                      c,
                      u = o(a) || i.comboBarCount > 0,
                      d = Math.abs(i.initialMaxX - i.initialMinX);
                    u &&
                      i.isXNumeric &&
                      !i.isBarHorizontal &&
                      r > 0 &&
                      0 !== d &&
                      (d <= 3 && (d = i.dataPoints),
                      (l = d / e),
                      i.minXDiff && i.minXDiff / l > 0 && (c = i.minXDiff / l),
                      c > e / 2 && (c /= 2),
                      (s =
                        (c * parseInt(n.plotOptions.bar.columnWidth, 10)) /
                        100) < 1 && (s = 1),
                      (i.barPadForNumericAxis = s));
                    return s;
                  },
                },
                {
                  key: "gridPadFortitleSubtitle",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = t.globals,
                      i =
                        this.dCtx.isSparkline || !t.globals.axisCharts ? 0 : 10;
                    ["title", "subtitle"].forEach(function (n) {
                      void 0 !== t.config[n].text
                        ? (i += t.config[n].margin)
                        : (i +=
                            e.dCtx.isSparkline || !t.globals.axisCharts
                              ? 0
                              : 5);
                    }),
                      !t.config.legend.show ||
                        "bottom" !== t.config.legend.position ||
                        t.config.legend.floating ||
                        t.globals.axisCharts ||
                        (i += 10);
                    var o =
                        this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                      a =
                        this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                    (n.gridHeight = n.gridHeight - o.height - a.height - i),
                      (n.translateY = n.translateY + o.height + a.height + i);
                  },
                },
                {
                  key: "setGridXPosForDualYAxis",
                  value: function (e, t) {
                    var n = this.w,
                      i = new L(this.dCtx.ctx);
                    n.config.yaxis.map(function (o, a) {
                      -1 !== n.globals.ignoreYAxisIndexes.indexOf(a) ||
                        o.floating ||
                        i.isYAxisHidden(a) ||
                        (o.opposite &&
                          (n.globals.translateX =
                            n.globals.translateX -
                            (t[a].width + e[a].width) -
                            parseInt(
                              n.config.yaxis[a].labels.style.fontSize,
                              10
                            ) /
                              1.2 -
                            12),
                        n.globals.translateX < 2 && (n.globals.translateX = 2));
                    });
                  },
                },
              ]),
              e
            );
          })(),
          ue = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.lgRect = {}),
                (this.yAxisWidth = 0),
                (this.yAxisWidthLeft = 0),
                (this.yAxisWidthRight = 0),
                (this.xAxisHeight = 0),
                (this.isSparkline = this.w.config.chart.sparkline.enabled),
                (this.dimHelpers = new se(this)),
                (this.dimYAxis = new le(this)),
                (this.dimXAxis = new re(this)),
                (this.dimGrid = new ce(this)),
                (this.lgWidthForSideLegends = 0),
                (this.gridPad = this.w.config.grid.padding),
                (this.xPadRight = 0),
                (this.xPadLeft = 0);
            }
            return (
              c(e, [
                {
                  key: "plotCoords",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = t.globals;
                    (this.lgRect = this.dimHelpers.getLegendsRect()),
                      (this.datalabelsCoords = { width: 0, height: 0 });
                    var i = Array.isArray(t.config.stroke.width)
                      ? Math.max.apply(Math, v(t.config.stroke.width))
                      : t.config.stroke.width;
                    this.isSparkline &&
                      ((t.config.markers.discrete.length > 0 ||
                        t.config.markers.size > 0) &&
                        Object.entries(this.gridPad).forEach(function (t) {
                          var n = m(t, 2),
                            i = n[0],
                            o = n[1];
                          e.gridPad[i] = Math.max(
                            o,
                            e.w.globals.markers.largestSize / 1.5
                          );
                        }),
                      (this.gridPad.top = Math.max(i / 2, this.gridPad.top)),
                      (this.gridPad.bottom = Math.max(
                        i / 2,
                        this.gridPad.bottom
                      ))),
                      n.axisCharts
                        ? this.setDimensionsForAxisCharts()
                        : this.setDimensionsForNonAxisCharts(),
                      this.dimGrid.gridPadFortitleSubtitle(),
                      (n.gridHeight =
                        n.gridHeight - this.gridPad.top - this.gridPad.bottom),
                      (n.gridWidth =
                        n.gridWidth -
                        this.gridPad.left -
                        this.gridPad.right -
                        this.xPadRight -
                        this.xPadLeft);
                    var o = this.dimGrid.gridPadForColumnsInNumericAxis(
                      n.gridWidth
                    );
                    (n.gridWidth = n.gridWidth - 2 * o),
                      (n.translateX =
                        n.translateX +
                        this.gridPad.left +
                        this.xPadLeft +
                        (o > 0 ? o : 0)),
                      (n.translateY = n.translateY + this.gridPad.top);
                  },
                },
                {
                  key: "setDimensionsForAxisCharts",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = t.globals,
                      i = this.dimYAxis.getyAxisLabelsCoords(),
                      o = this.dimYAxis.getyAxisTitleCoords();
                    n.isSlopeChart &&
                      (this.datalabelsCoords =
                        this.dimHelpers.getDatalabelsRect()),
                      (t.globals.yLabelsCoords = []),
                      (t.globals.yTitleCoords = []),
                      t.config.yaxis.map(function (e, n) {
                        t.globals.yLabelsCoords.push({
                          width: i[n].width,
                          index: n,
                        }),
                          t.globals.yTitleCoords.push({
                            width: o[n].width,
                            index: n,
                          });
                      }),
                      (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
                    var a = this.dimXAxis.getxAxisLabelsCoords(),
                      s = this.dimXAxis.getxAxisGroupLabelsCoords(),
                      r = this.dimXAxis.getxAxisTitleCoords();
                    this.conditionalChecksForAxisCoords(a, r, s),
                      (n.translateXAxisY = t.globals.rotateXLabels
                        ? this.xAxisHeight / 8
                        : -4),
                      (n.translateXAxisX =
                        t.globals.rotateXLabels &&
                        t.globals.isXNumeric &&
                        t.config.xaxis.labels.rotate <= -45
                          ? -this.xAxisWidth / 4
                          : 0),
                      t.globals.isBarHorizontal &&
                        ((n.rotateXLabels = !1),
                        (n.translateXAxisY =
                          (parseInt(t.config.xaxis.labels.style.fontSize, 10) /
                            1.5) *
                          -1)),
                      (n.translateXAxisY =
                        n.translateXAxisY + t.config.xaxis.labels.offsetY),
                      (n.translateXAxisX =
                        n.translateXAxisX + t.config.xaxis.labels.offsetX);
                    var l = this.yAxisWidth,
                      c = this.xAxisHeight;
                    (n.xAxisLabelsHeight = this.xAxisHeight - r.height),
                      (n.xAxisGroupLabelsHeight =
                        n.xAxisLabelsHeight - a.height),
                      (n.xAxisLabelsWidth = this.xAxisWidth),
                      (n.xAxisHeight = this.xAxisHeight);
                    var u = 10;
                    ("radar" === t.config.chart.type || this.isSparkline) &&
                      ((l = 0), (c = n.goldenPadding)),
                      this.isSparkline &&
                        (this.lgRect = { height: 0, width: 0 }),
                      (this.isSparkline || "treemap" === t.config.chart.type) &&
                        ((l = 0), (c = 0), (u = 0)),
                      this.isSparkline ||
                        this.dimXAxis.additionalPaddingXLabels(a);
                    var d = function () {
                      (n.translateX = l + e.datalabelsCoords.width),
                        (n.gridHeight =
                          n.svgHeight -
                          e.lgRect.height -
                          c -
                          (e.isSparkline || "treemap" === t.config.chart.type
                            ? 0
                            : t.globals.rotateXLabels
                            ? 10
                            : 15)),
                        (n.gridWidth =
                          n.svgWidth - l - 2 * e.datalabelsCoords.width);
                    };
                    switch (
                      ("top" === t.config.xaxis.position &&
                        (u =
                          n.xAxisHeight - t.config.xaxis.axisTicks.height - 5),
                      t.config.legend.position)
                    ) {
                      case "bottom":
                        (n.translateY = u), d();
                        break;
                      case "top":
                        (n.translateY = this.lgRect.height + u), d();
                        break;
                      case "left":
                        (n.translateY = u),
                          (n.translateX =
                            this.lgRect.width +
                            l +
                            this.datalabelsCoords.width),
                          (n.gridHeight = n.svgHeight - c - 12),
                          (n.gridWidth =
                            n.svgWidth -
                            this.lgRect.width -
                            l -
                            2 * this.datalabelsCoords.width);
                        break;
                      case "right":
                        (n.translateY = u),
                          (n.translateX = l + this.datalabelsCoords.width),
                          (n.gridHeight = n.svgHeight - c - 12),
                          (n.gridWidth =
                            n.svgWidth -
                            this.lgRect.width -
                            l -
                            2 * this.datalabelsCoords.width -
                            5);
                        break;
                      default:
                        throw new Error("Legend position not supported");
                    }
                    this.dimGrid.setGridXPosForDualYAxis(o, i),
                      new $(this.ctx).setYAxisXPosition(i, o);
                  },
                },
                {
                  key: "setDimensionsForNonAxisCharts",
                  value: function () {
                    var e = this.w,
                      t = e.globals,
                      n = e.config,
                      i = 0;
                    e.config.legend.show &&
                      !e.config.legend.floating &&
                      (i = 20);
                    var o =
                        "pie" === n.chart.type ||
                        "polarArea" === n.chart.type ||
                        "donut" === n.chart.type
                          ? "pie"
                          : "radialBar",
                      a = n.plotOptions[o].offsetY,
                      s = n.plotOptions[o].offsetX;
                    if (!n.legend.show || n.legend.floating) {
                      t.gridHeight =
                        t.svgHeight -
                        n.grid.padding.top -
                        n.grid.padding.bottom;
                      var r = t.dom.elWrap.getBoundingClientRect().width;
                      return (
                        (t.gridWidth =
                          Math.min(r, t.gridHeight) -
                          n.grid.padding.left -
                          n.grid.padding.right),
                        (t.translateY = a),
                        void (t.translateX = s + (t.svgWidth - t.gridWidth) / 2)
                      );
                    }
                    switch (n.legend.position) {
                      case "bottom":
                        (t.gridHeight =
                          t.svgHeight - this.lgRect.height - t.goldenPadding),
                          (t.gridWidth = t.svgWidth),
                          (t.translateY = a - 10),
                          (t.translateX = s + (t.svgWidth - t.gridWidth) / 2);
                        break;
                      case "top":
                        (t.gridHeight =
                          t.svgHeight - this.lgRect.height - t.goldenPadding),
                          (t.gridWidth = t.svgWidth),
                          (t.translateY = this.lgRect.height + a + 10),
                          (t.translateX = s + (t.svgWidth - t.gridWidth) / 2);
                        break;
                      case "left":
                        (t.gridWidth = t.svgWidth - this.lgRect.width - i),
                          (t.gridHeight =
                            "auto" !== n.chart.height
                              ? t.svgHeight
                              : t.gridWidth),
                          (t.translateY = a),
                          (t.translateX = s + this.lgRect.width + i);
                        break;
                      case "right":
                        (t.gridWidth = t.svgWidth - this.lgRect.width - i - 5),
                          (t.gridHeight =
                            "auto" !== n.chart.height
                              ? t.svgHeight
                              : t.gridWidth),
                          (t.translateY = a),
                          (t.translateX = s + 10);
                        break;
                      default:
                        throw new Error("Legend position not supported");
                    }
                  },
                },
                {
                  key: "conditionalChecksForAxisCoords",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = i.globals.hasXaxisGroups ? 2 : 1,
                      a = n.height + e.height + t.height,
                      s = i.globals.isMultiLineX
                        ? 1.2
                        : i.globals.LINE_HEIGHT_RATIO,
                      r = i.globals.rotateXLabels ? 22 : 10,
                      l =
                        i.globals.rotateXLabels &&
                        "bottom" === i.config.legend.position
                          ? 10
                          : 0;
                    (this.xAxisHeight = a * s + o * r + l),
                      (this.xAxisWidth = e.width),
                      this.xAxisHeight - t.height >
                        i.config.xaxis.labels.maxHeight &&
                        (this.xAxisHeight = i.config.xaxis.labels.maxHeight),
                      i.config.xaxis.labels.minHeight &&
                        this.xAxisHeight < i.config.xaxis.labels.minHeight &&
                        (this.xAxisHeight = i.config.xaxis.labels.minHeight),
                      i.config.xaxis.floating && (this.xAxisHeight = 0);
                    var c = 0,
                      u = 0;
                    i.config.yaxis.forEach(function (e) {
                      (c += e.labels.minWidth), (u += e.labels.maxWidth);
                    }),
                      this.yAxisWidth < c && (this.yAxisWidth = c),
                      this.yAxisWidth > u && (this.yAxisWidth = u);
                  },
                },
              ]),
              e
            );
          })(),
          de = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.lgCtx = t);
            }
            return (
              c(e, [
                {
                  key: "getLegendStyles",
                  value: function () {
                    var e,
                      t,
                      n,
                      i = document.createElement("style");
                    i.setAttribute("type", "text/css");
                    var o =
                      (null === (e = this.lgCtx.ctx) ||
                      void 0 === e ||
                      null === (t = e.opts) ||
                      void 0 === t ||
                      null === (n = t.chart) ||
                      void 0 === n
                        ? void 0
                        : n.nonce) || this.w.config.chart.nonce;
                    o && i.setAttribute("nonce", o);
                    var a = document.createTextNode(
                      "\n      .apexcharts-legend {\n        display: flex;\n        overflow: auto;\n        padding: 0 10px;\n      }\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\n        flex-wrap: wrap\n      }\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\n        flex-direction: column;\n        bottom: 0;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\n        justify-content: flex-start;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\n        justify-content: center;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\n        justify-content: flex-end;\n      }\n      .apexcharts-legend-series {\n        cursor: pointer;\n        line-height: normal;\n        display: flex;\n        align-items: center;\n      }\n      .apexcharts-legend-text {\n        position: relative;\n        font-size: 14px;\n      }\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\n        pointer-events: none;\n      }\n      .apexcharts-legend-marker {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        margin-right: 1px;\n      }\n\n      .apexcharts-legend-series.apexcharts-no-click {\n        cursor: auto;\n      }\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\n        display: none !important;\n      }\n      .apexcharts-inactive-legend {\n        opacity: 0.45;\n      }"
                    );
                    return i.appendChild(a), i;
                  },
                },
                {
                  key: "getLegendDimensions",
                  value: function () {
                    var e =
                        this.w.globals.dom.baseEl.querySelector(
                          ".apexcharts-legend"
                        ),
                      t = e.offsetWidth;
                    return { clwh: e.offsetHeight, clww: t };
                  },
                },
                {
                  key: "appendToForeignObject",
                  value: function () {
                    this.w.globals.dom.elLegendForeign.appendChild(
                      this.getLegendStyles()
                    );
                  },
                },
                {
                  key: "toggleDataSeries",
                  value: function (e, t) {
                    var n = this,
                      i = this.w;
                    if (
                      i.globals.axisCharts ||
                      "radialBar" === i.config.chart.type
                    ) {
                      i.globals.resized = !0;
                      var o = null,
                        a = null;
                      (i.globals.risingSeries = []),
                        i.globals.axisCharts
                          ? ((o = i.globals.dom.baseEl.querySelector(
                              ".apexcharts-series[data\\:realIndex='".concat(
                                e,
                                "']"
                              )
                            )),
                            (a = parseInt(
                              o.getAttribute("data:realIndex"),
                              10
                            )))
                          : ((o = i.globals.dom.baseEl.querySelector(
                              ".apexcharts-series[rel='".concat(e + 1, "']")
                            )),
                            (a = parseInt(o.getAttribute("rel"), 10) - 1)),
                        t
                          ? [
                              {
                                cs: i.globals.collapsedSeries,
                                csi: i.globals.collapsedSeriesIndices,
                              },
                              {
                                cs: i.globals.ancillaryCollapsedSeries,
                                csi: i.globals.ancillaryCollapsedSeriesIndices,
                              },
                            ].forEach(function (e) {
                              n.riseCollapsedSeries(e.cs, e.csi, a);
                            })
                          : this.hideSeries({ seriesEl: o, realIndex: a });
                    } else {
                      var s = i.globals.dom.Paper.select(
                          " .apexcharts-series[rel='".concat(e + 1, "'] path")
                        ),
                        r = i.config.chart.type;
                      if ("pie" === r || "polarArea" === r || "donut" === r) {
                        var l = i.config.plotOptions.pie.donut.labels;
                        new k(this.lgCtx.ctx).pathMouseDown(s.members[0], null),
                          this.lgCtx.ctx.pie.printDataLabelsInner(
                            s.members[0].node,
                            l
                          );
                      }
                      s.fire("click");
                    }
                  },
                },
                {
                  key: "hideSeries",
                  value: function (e) {
                    var t = e.seriesEl,
                      n = e.realIndex,
                      i = this.w,
                      o = i.globals,
                      a = y.clone(i.config.series);
                    if (o.axisCharts) {
                      var s = i.config.yaxis[o.seriesYAxisReverseMap[n]];
                      if (s && s.show && s.showAlways)
                        o.ancillaryCollapsedSeriesIndices.indexOf(n) < 0 &&
                          (o.ancillaryCollapsedSeries.push({
                            index: n,
                            data: a[n].data.slice(),
                            type: t.parentNode.className.baseVal.split("-")[1],
                          }),
                          o.ancillaryCollapsedSeriesIndices.push(n));
                      else if (o.collapsedSeriesIndices.indexOf(n) < 0) {
                        o.collapsedSeries.push({
                          index: n,
                          data: a[n].data.slice(),
                          type: t.parentNode.className.baseVal.split("-")[1],
                        }),
                          o.collapsedSeriesIndices.push(n);
                        var r = o.risingSeries.indexOf(n);
                        o.risingSeries.splice(r, 1);
                      }
                    } else
                      o.collapsedSeries.push({ index: n, data: a[n] }),
                        o.collapsedSeriesIndices.push(n);
                    for (var l = t.childNodes, c = 0; c < l.length; c++)
                      l[c].classList.contains(
                        "apexcharts-series-markers-wrap"
                      ) &&
                        (l[c].classList.contains("apexcharts-hide")
                          ? l[c].classList.remove("apexcharts-hide")
                          : l[c].classList.add("apexcharts-hide"));
                    (o.allSeriesCollapsed =
                      o.collapsedSeries.length +
                        o.ancillaryCollapsedSeries.length ===
                      i.config.series.length),
                      (a = this._getSeriesBasedOnCollapsedState(a)),
                      this.lgCtx.ctx.updateHelpers._updateSeries(
                        a,
                        i.config.chart.animations.dynamicAnimation.enabled
                      );
                  },
                },
                {
                  key: "riseCollapsedSeries",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = y.clone(i.config.series);
                    if (e.length > 0) {
                      for (var a = 0; a < e.length; a++)
                        e[a].index === n &&
                          (i.globals.axisCharts
                            ? ((o[n].data = e[a].data.slice()),
                              e.splice(a, 1),
                              t.splice(a, 1),
                              i.globals.risingSeries.push(n))
                            : ((o[n] = e[a].data),
                              e.splice(a, 1),
                              t.splice(a, 1),
                              i.globals.risingSeries.push(n)));
                      (o = this._getSeriesBasedOnCollapsedState(o)),
                        this.lgCtx.ctx.updateHelpers._updateSeries(
                          o,
                          i.config.chart.animations.dynamicAnimation.enabled
                        );
                    }
                  },
                },
                {
                  key: "_getSeriesBasedOnCollapsedState",
                  value: function (e) {
                    var t = this.w,
                      n = 0;
                    return (
                      t.globals.axisCharts
                        ? e.forEach(function (i, o) {
                            (t.globals.collapsedSeriesIndices.indexOf(o) < 0 &&
                              t.globals.ancillaryCollapsedSeriesIndices.indexOf(
                                o
                              ) < 0) ||
                              ((e[o].data = []), n++);
                          })
                        : e.forEach(function (i, o) {
                            !t.globals.collapsedSeriesIndices.indexOf(o) < 0 &&
                              ((e[o] = 0), n++);
                          }),
                      (t.globals.allSeriesCollapsed = n === e.length),
                      e
                    );
                  },
                },
              ]),
              e
            );
          })(),
          he = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.onLegendClick = this.onLegendClick.bind(this)),
                (this.onLegendHovered = this.onLegendHovered.bind(this)),
                (this.isBarsDistributed =
                  "bar" === this.w.config.chart.type &&
                  this.w.config.plotOptions.bar.distributed &&
                  1 === this.w.config.series.length),
                (this.legendHelpers = new de(this));
            }
            return (
              c(e, [
                {
                  key: "init",
                  value: function () {
                    var e = this.w,
                      t = e.globals,
                      n = e.config;
                    if (
                      ((n.legend.showForSingleSeries &&
                        1 === t.series.length) ||
                        this.isBarsDistributed ||
                        t.series.length > 1 ||
                        !t.axisCharts) &&
                      n.legend.show
                    ) {
                      for (; t.dom.elLegendWrap.firstChild; )
                        t.dom.elLegendWrap.removeChild(
                          t.dom.elLegendWrap.firstChild
                        );
                      this.drawLegends(),
                        y.isIE11()
                          ? document
                              .getElementsByTagName("head")[0]
                              .appendChild(this.legendHelpers.getLegendStyles())
                          : this.legendHelpers.appendToForeignObject(),
                        "bottom" === n.legend.position ||
                        "top" === n.legend.position
                          ? this.legendAlignHorizontal()
                          : ("right" !== n.legend.position &&
                              "left" !== n.legend.position) ||
                            this.legendAlignVertical();
                    }
                  },
                },
                {
                  key: "createLegendMarker",
                  value: function (e) {
                    var t = e.i,
                      n = e.fillcolor,
                      i = this.w,
                      o = document.createElement("span");
                    o.classList.add("apexcharts-legend-marker");
                    var s =
                        i.config.legend.markers.shape || i.config.markers.shape,
                      r = s;
                    Array.isArray(s) && (r = s[t]);
                    var l = Array.isArray(i.config.legend.markers.size)
                        ? parseFloat(i.config.legend.markers.size[t])
                        : parseFloat(i.config.legend.markers.size),
                      c = Array.isArray(i.config.legend.markers.offsetX)
                        ? parseFloat(i.config.legend.markers.offsetX[t])
                        : parseFloat(i.config.legend.markers.offsetX),
                      u = Array.isArray(i.config.legend.markers.offsetY)
                        ? parseFloat(i.config.legend.markers.offsetY[t])
                        : parseFloat(i.config.legend.markers.offsetY),
                      d = Array.isArray(i.config.legend.markers.strokeWidth)
                        ? parseFloat(i.config.legend.markers.strokeWidth[t])
                        : parseFloat(i.config.legend.markers.strokeWidth),
                      h = o.style;
                    if (
                      ((h.height = 2 * (l + d) + "px"),
                      (h.width = 2 * (l + d) + "px"),
                      (h.left = c + "px"),
                      (h.top = u + "px"),
                      i.config.legend.markers.customHTML)
                    )
                      (h.background = "transparent"),
                        (h.color = n[t]),
                        Array.isArray(i.config.legend.markers.customHTML)
                          ? i.config.legend.markers.customHTML[t] &&
                            (o.innerHTML =
                              i.config.legend.markers.customHTML[t]())
                          : (o.innerHTML =
                              i.config.legend.markers.customHTML());
                    else {
                      var p = new H(this.ctx).getMarkerConfig({
                          cssClass:
                            "apexcharts-legend-marker apexcharts-marker apexcharts-marker-".concat(
                              r
                            ),
                          seriesIndex: t,
                          strokeWidth: d,
                          size: l,
                        }),
                        f = SVG(o).size("100%", "100%"),
                        g = new k(this.ctx).drawMarker(
                          0,
                          0,
                          a(
                            a({}, p),
                            {},
                            {
                              pointFillColor: Array.isArray(n)
                                ? n[t]
                                : p.pointFillColor,
                              shape: r,
                            }
                          )
                        );
                      SVG.select(
                        ".apexcharts-legend-marker.apexcharts-marker"
                      ).members.forEach(function (e) {
                        e.node.classList.contains("apexcharts-marker-triangle")
                          ? (e.node.style.transform = "translate(50%, 45%)")
                          : (e.node.style.transform = "translate(50%, 50%)");
                      }),
                        f.add(g);
                    }
                    return o;
                  },
                },
                {
                  key: "drawLegends",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = t.config.legend.fontFamily,
                      i = t.globals.seriesNames,
                      o = t.config.legend.markers.fillColors
                        ? t.config.legend.markers.fillColors.slice()
                        : t.globals.colors.slice();
                    if ("heatmap" === t.config.chart.type) {
                      var a = t.config.plotOptions.heatmap.colorScale.ranges;
                      (i = a.map(function (e) {
                        return e.name ? e.name : e.from + " - " + e.to;
                      })),
                        (o = a.map(function (e) {
                          return e.color;
                        }));
                    } else
                      this.isBarsDistributed && (i = t.globals.labels.slice());
                    t.config.legend.customLegendItems.length &&
                      (i = t.config.legend.customLegendItems);
                    for (
                      var s = t.globals.legendFormatter,
                        r = t.config.legend.inverseOrder,
                        l = r ? i.length - 1 : 0;
                      r ? l >= 0 : l <= i.length - 1;
                      r ? l-- : l++
                    ) {
                      var c,
                        u = s(i[l], { seriesIndex: l, w: t }),
                        d = !1,
                        h = !1;
                      if (t.globals.collapsedSeries.length > 0)
                        for (
                          var p = 0;
                          p < t.globals.collapsedSeries.length;
                          p++
                        )
                          t.globals.collapsedSeries[p].index === l && (d = !0);
                      if (t.globals.ancillaryCollapsedSeriesIndices.length > 0)
                        for (
                          var f = 0;
                          f < t.globals.ancillaryCollapsedSeriesIndices.length;
                          f++
                        )
                          t.globals.ancillaryCollapsedSeriesIndices[f] === l &&
                            (h = !0);
                      var g = this.createLegendMarker({ i: l, fillcolor: o });
                      k.setAttrs(g, { rel: l + 1, "data:collapsed": d || h }),
                        (d || h) &&
                          g.classList.add("apexcharts-inactive-legend");
                      var m = document.createElement("div"),
                        v = document.createElement("span");
                      v.classList.add("apexcharts-legend-text"),
                        (v.innerHTML = Array.isArray(u) ? u.join(" ") : u);
                      var b = t.config.legend.labels.useSeriesColors
                        ? t.globals.colors[l]
                        : Array.isArray(t.config.legend.labels.colors)
                        ? null === (c = t.config.legend.labels.colors) ||
                          void 0 === c
                          ? void 0
                          : c[l]
                        : t.config.legend.labels.colors;
                      b || (b = t.config.chart.foreColor),
                        (v.style.color = b),
                        (v.style.fontSize =
                          parseFloat(t.config.legend.fontSize) + "px"),
                        (v.style.fontWeight = t.config.legend.fontWeight),
                        (v.style.fontFamily = n || t.config.chart.fontFamily),
                        k.setAttrs(v, {
                          rel: l + 1,
                          i: l,
                          "data:default-text": encodeURIComponent(u),
                          "data:collapsed": d || h,
                        }),
                        m.appendChild(g),
                        m.appendChild(v);
                      var x = new A(this.ctx);
                      t.config.legend.showForZeroSeries ||
                        (0 === x.getSeriesTotalByIndex(l) &&
                          x.seriesHaveSameValues(l) &&
                          !x.isSeriesNull(l) &&
                          -1 === t.globals.collapsedSeriesIndices.indexOf(l) &&
                          -1 ===
                            t.globals.ancillaryCollapsedSeriesIndices.indexOf(
                              l
                            ) &&
                          m.classList.add("apexcharts-hidden-zero-series")),
                        t.config.legend.showForNullSeries ||
                          (x.isSeriesNull(l) &&
                            -1 ===
                              t.globals.collapsedSeriesIndices.indexOf(l) &&
                            -1 ===
                              t.globals.ancillaryCollapsedSeriesIndices.indexOf(
                                l
                              ) &&
                            m.classList.add("apexcharts-hidden-null-series")),
                        t.globals.dom.elLegendWrap.appendChild(m),
                        t.globals.dom.elLegendWrap.classList.add(
                          "apexcharts-align-".concat(
                            t.config.legend.horizontalAlign
                          )
                        ),
                        t.globals.dom.elLegendWrap.classList.add(
                          "apx-legend-position-" + t.config.legend.position
                        ),
                        m.classList.add("apexcharts-legend-series"),
                        (m.style.margin = ""
                          .concat(t.config.legend.itemMargin.vertical, "px ")
                          .concat(t.config.legend.itemMargin.horizontal, "px")),
                        (t.globals.dom.elLegendWrap.style.width = t.config
                          .legend.width
                          ? t.config.legend.width + "px"
                          : ""),
                        (t.globals.dom.elLegendWrap.style.height = t.config
                          .legend.height
                          ? t.config.legend.height + "px"
                          : ""),
                        k.setAttrs(m, {
                          rel: l + 1,
                          seriesName: y.escapeString(i[l]),
                          "data:collapsed": d || h,
                        }),
                        (d || h) &&
                          m.classList.add("apexcharts-inactive-legend"),
                        t.config.legend.onItemClick.toggleDataSeries ||
                          m.classList.add("apexcharts-no-click");
                    }
                    t.globals.dom.elWrap.addEventListener(
                      "click",
                      e.onLegendClick,
                      !0
                    ),
                      t.config.legend.onItemHover.highlightDataSeries &&
                        0 === t.config.legend.customLegendItems.length &&
                        (t.globals.dom.elWrap.addEventListener(
                          "mousemove",
                          e.onLegendHovered,
                          !0
                        ),
                        t.globals.dom.elWrap.addEventListener(
                          "mouseout",
                          e.onLegendHovered,
                          !0
                        ));
                  },
                },
                {
                  key: "setLegendWrapXY",
                  value: function (e, t) {
                    var n = this.w,
                      i = n.globals.dom.elLegendWrap,
                      o = i.getBoundingClientRect(),
                      a = 0,
                      s = 0;
                    if ("bottom" === n.config.legend.position)
                      s += n.globals.svgHeight - o.height / 2;
                    else if ("top" === n.config.legend.position) {
                      var r = new ue(this.ctx),
                        l = r.dimHelpers.getTitleSubtitleCoords("title").height,
                        c =
                          r.dimHelpers.getTitleSubtitleCoords(
                            "subtitle"
                          ).height;
                      s = s + (l > 0 ? l - 10 : 0) + (c > 0 ? c - 10 : 0);
                    }
                    (i.style.position = "absolute"),
                      (a = a + e + n.config.legend.offsetX),
                      (s = s + t + n.config.legend.offsetY),
                      (i.style.left = a + "px"),
                      (i.style.top = s + "px"),
                      "bottom" === n.config.legend.position
                        ? ((i.style.top = "auto"),
                          (i.style.bottom = 5 - n.config.legend.offsetY + "px"))
                        : "right" === n.config.legend.position &&
                          ((i.style.left = "auto"),
                          (i.style.right =
                            25 + n.config.legend.offsetX + "px")),
                      ["width", "height"].forEach(function (e) {
                        i.style[e] &&
                          (i.style[e] =
                            parseInt(n.config.legend[e], 10) + "px");
                      });
                  },
                },
                {
                  key: "legendAlignHorizontal",
                  value: function () {
                    var e = this.w;
                    e.globals.dom.elLegendWrap.style.right = 0;
                    var t = this.legendHelpers.getLegendDimensions(),
                      n = new ue(this.ctx),
                      i = n.dimHelpers.getTitleSubtitleCoords("title"),
                      o = n.dimHelpers.getTitleSubtitleCoords("subtitle"),
                      a = 0;
                    "bottom" === e.config.legend.position
                      ? (a = -t.clwh / 1.8)
                      : "top" === e.config.legend.position &&
                        (a =
                          i.height +
                          o.height +
                          e.config.title.margin +
                          e.config.subtitle.margin -
                          10),
                      this.setLegendWrapXY(20, a);
                  },
                },
                {
                  key: "legendAlignVertical",
                  value: function () {
                    var e = this.w,
                      t = this.legendHelpers.getLegendDimensions(),
                      n = 0;
                    "left" === e.config.legend.position && (n = 20),
                      "right" === e.config.legend.position &&
                        (n = e.globals.svgWidth - t.clww - 10),
                      this.setLegendWrapXY(n, 20);
                  },
                },
                {
                  key: "onLegendHovered",
                  value: function (e) {
                    var t = this.w,
                      n =
                        e.target.classList.contains(
                          "apexcharts-legend-series"
                        ) ||
                        e.target.classList.contains("apexcharts-legend-text") ||
                        e.target.classList.contains("apexcharts-legend-marker");
                    if (
                      "heatmap" === t.config.chart.type ||
                      this.isBarsDistributed
                    ) {
                      if (n) {
                        var i = parseInt(e.target.getAttribute("rel"), 10) - 1;
                        this.ctx.events.fireEvent("legendHover", [
                          this.ctx,
                          i,
                          this.w,
                        ]),
                          new U(this.ctx).highlightRangeInSeries(e, e.target);
                      }
                    } else
                      !e.target.classList.contains(
                        "apexcharts-inactive-legend"
                      ) &&
                        n &&
                        new U(this.ctx).toggleSeriesOnHover(e, e.target);
                  },
                },
                {
                  key: "onLegendClick",
                  value: function (e) {
                    var t = this.w;
                    if (
                      !t.config.legend.customLegendItems.length &&
                      (e.target.classList.contains(
                        "apexcharts-legend-series"
                      ) ||
                        e.target.classList.contains("apexcharts-legend-text") ||
                        e.target.classList.contains("apexcharts-legend-marker"))
                    ) {
                      var n = parseInt(e.target.getAttribute("rel"), 10) - 1,
                        i = "true" === e.target.getAttribute("data:collapsed"),
                        o = this.w.config.chart.events.legendClick;
                      "function" == typeof o && o(this.ctx, n, this.w),
                        this.ctx.events.fireEvent("legendClick", [
                          this.ctx,
                          n,
                          this.w,
                        ]);
                      var a = this.w.config.legend.markers.onClick;
                      "function" == typeof a &&
                        e.target.classList.contains(
                          "apexcharts-legend-marker"
                        ) &&
                        (a(this.ctx, n, this.w),
                        this.ctx.events.fireEvent("legendMarkerClick", [
                          this.ctx,
                          n,
                          this.w,
                        ])),
                        "treemap" !== t.config.chart.type &&
                          "heatmap" !== t.config.chart.type &&
                          !this.isBarsDistributed &&
                          t.config.legend.onItemClick.toggleDataSeries &&
                          this.legendHelpers.toggleDataSeries(n, i);
                    }
                  },
                },
              ]),
              e
            );
          })(),
          pe = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
              var n = this.w;
              (this.ev = this.w.config.chart.events),
                (this.selectedClass = "apexcharts-selected"),
                (this.localeValues = this.w.globals.locale.toolbar),
                (this.minX = n.globals.minX),
                (this.maxX = n.globals.maxX);
            }
            return (
              c(e, [
                {
                  key: "createToolbar",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = function () {
                        return document.createElement("div");
                      },
                      i = n();
                    if (
                      (i.setAttribute("class", "apexcharts-toolbar"),
                      (i.style.top = t.config.chart.toolbar.offsetY + "px"),
                      (i.style.right =
                        3 - t.config.chart.toolbar.offsetX + "px"),
                      t.globals.dom.elWrap.appendChild(i),
                      (this.elZoom = n()),
                      (this.elZoomIn = n()),
                      (this.elZoomOut = n()),
                      (this.elPan = n()),
                      (this.elSelection = n()),
                      (this.elZoomReset = n()),
                      (this.elMenuIcon = n()),
                      (this.elMenu = n()),
                      (this.elCustomIcons = []),
                      (this.t = t.config.chart.toolbar.tools),
                      Array.isArray(this.t.customIcons))
                    )
                      for (var o = 0; o < this.t.customIcons.length; o++)
                        this.elCustomIcons.push(n());
                    var a = [],
                      s = function (n, i, o) {
                        var s = n.toLowerCase();
                        e.t[s] &&
                          t.config.chart.zoom.enabled &&
                          a.push({
                            el: i,
                            icon: "string" == typeof e.t[s] ? e.t[s] : o,
                            title: e.localeValues[n],
                            class: "apexcharts-".concat(s, "-icon"),
                          });
                      };
                    s(
                      "zoomIn",
                      this.elZoomIn,
                      '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'
                    ),
                      s(
                        "zoomOut",
                        this.elZoomOut,
                        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'
                      );
                    var r = function (n) {
                      e.t[n] &&
                        t.config.chart[n].enabled &&
                        a.push({
                          el: "zoom" === n ? e.elZoom : e.elSelection,
                          icon:
                            "string" == typeof e.t[n]
                              ? e.t[n]
                              : "zoom" === n
                              ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>'
                              : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
                          title:
                            e.localeValues[
                              "zoom" === n ? "selectionZoom" : "selection"
                            ],
                          class: t.globals.isTouchDevice
                            ? "apexcharts-element-hidden"
                            : "apexcharts-".concat(n, "-icon"),
                        });
                    };
                    r("zoom"),
                      r("selection"),
                      this.t.pan &&
                        t.config.chart.zoom.enabled &&
                        a.push({
                          el: this.elPan,
                          icon:
                            "string" == typeof this.t.pan
                              ? this.t.pan
                              : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
                          title: this.localeValues.pan,
                          class: t.globals.isTouchDevice
                            ? "apexcharts-element-hidden"
                            : "apexcharts-pan-icon",
                        }),
                      s(
                        "reset",
                        this.elZoomReset,
                        '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'
                      ),
                      this.t.download &&
                        a.push({
                          el: this.elMenuIcon,
                          icon:
                            "string" == typeof this.t.download
                              ? this.t.download
                              : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                          title: this.localeValues.menu,
                          class: "apexcharts-menu-icon",
                        });
                    for (var l = 0; l < this.elCustomIcons.length; l++)
                      a.push({
                        el: this.elCustomIcons[l],
                        icon: this.t.customIcons[l].icon,
                        title: this.t.customIcons[l].title,
                        index: this.t.customIcons[l].index,
                        class:
                          "apexcharts-toolbar-custom-icon " +
                          this.t.customIcons[l].class,
                      });
                    a.forEach(function (e, t) {
                      e.index && y.moveIndexInArray(a, t, e.index);
                    });
                    for (var c = 0; c < a.length; c++)
                      k.setAttrs(a[c].el, {
                        class: a[c].class,
                        title: a[c].title,
                      }),
                        (a[c].el.innerHTML = a[c].icon),
                        i.appendChild(a[c].el);
                    this._createHamburgerMenu(i),
                      t.globals.zoomEnabled
                        ? this.elZoom.classList.add(this.selectedClass)
                        : t.globals.panEnabled
                        ? this.elPan.classList.add(this.selectedClass)
                        : t.globals.selectionEnabled &&
                          this.elSelection.classList.add(this.selectedClass),
                      this.addToolbarEventListeners();
                  },
                },
                {
                  key: "_createHamburgerMenu",
                  value: function (e) {
                    (this.elMenuItems = []),
                      e.appendChild(this.elMenu),
                      k.setAttrs(this.elMenu, { class: "apexcharts-menu" });
                    for (
                      var t = [
                          {
                            name: "exportSVG",
                            title: this.localeValues.exportToSVG,
                          },
                          {
                            name: "exportPNG",
                            title: this.localeValues.exportToPNG,
                          },
                          {
                            name: "exportCSV",
                            title: this.localeValues.exportToCSV,
                          },
                        ],
                        n = 0;
                      n < t.length;
                      n++
                    )
                      this.elMenuItems.push(document.createElement("div")),
                        (this.elMenuItems[n].innerHTML = t[n].title),
                        k.setAttrs(this.elMenuItems[n], {
                          class: "apexcharts-menu-item ".concat(t[n].name),
                          title: t[n].title,
                        }),
                        this.elMenu.appendChild(this.elMenuItems[n]);
                  },
                },
                {
                  key: "addToolbarEventListeners",
                  value: function () {
                    var e = this;
                    this.elZoomReset.addEventListener(
                      "click",
                      this.handleZoomReset.bind(this)
                    ),
                      this.elSelection.addEventListener(
                        "click",
                        this.toggleZoomSelection.bind(this, "selection")
                      ),
                      this.elZoom.addEventListener(
                        "click",
                        this.toggleZoomSelection.bind(this, "zoom")
                      ),
                      this.elZoomIn.addEventListener(
                        "click",
                        this.handleZoomIn.bind(this)
                      ),
                      this.elZoomOut.addEventListener(
                        "click",
                        this.handleZoomOut.bind(this)
                      ),
                      this.elPan.addEventListener(
                        "click",
                        this.togglePanning.bind(this)
                      ),
                      this.elMenuIcon.addEventListener(
                        "click",
                        this.toggleMenu.bind(this)
                      ),
                      this.elMenuItems.forEach(function (t) {
                        t.classList.contains("exportSVG")
                          ? t.addEventListener(
                              "click",
                              e.handleDownload.bind(e, "svg")
                            )
                          : t.classList.contains("exportPNG")
                          ? t.addEventListener(
                              "click",
                              e.handleDownload.bind(e, "png")
                            )
                          : t.classList.contains("exportCSV") &&
                            t.addEventListener(
                              "click",
                              e.handleDownload.bind(e, "csv")
                            );
                      });
                    for (var t = 0; t < this.t.customIcons.length; t++)
                      this.elCustomIcons[t].addEventListener(
                        "click",
                        this.t.customIcons[t].click.bind(
                          this,
                          this.ctx,
                          this.ctx.w
                        )
                      );
                  },
                },
                {
                  key: "toggleZoomSelection",
                  value: function (e) {
                    this.ctx.getSyncedCharts().forEach(function (t) {
                      t.ctx.toolbar.toggleOtherControls();
                      var n =
                          "selection" === e
                            ? t.ctx.toolbar.elSelection
                            : t.ctx.toolbar.elZoom,
                        i =
                          "selection" === e
                            ? "selectionEnabled"
                            : "zoomEnabled";
                      (t.w.globals[i] = !t.w.globals[i]),
                        n.classList.contains(t.ctx.toolbar.selectedClass)
                          ? n.classList.remove(t.ctx.toolbar.selectedClass)
                          : n.classList.add(t.ctx.toolbar.selectedClass);
                    });
                  },
                },
                {
                  key: "getToolbarIconsReference",
                  value: function () {
                    var e = this.w;
                    this.elZoom ||
                      (this.elZoom = e.globals.dom.baseEl.querySelector(
                        ".apexcharts-zoom-icon"
                      )),
                      this.elPan ||
                        (this.elPan = e.globals.dom.baseEl.querySelector(
                          ".apexcharts-pan-icon"
                        )),
                      this.elSelection ||
                        (this.elSelection = e.globals.dom.baseEl.querySelector(
                          ".apexcharts-selection-icon"
                        ));
                  },
                },
                {
                  key: "enableZoomPanFromToolbar",
                  value: function (e) {
                    this.toggleOtherControls(),
                      "pan" === e
                        ? (this.w.globals.panEnabled = !0)
                        : (this.w.globals.zoomEnabled = !0);
                    var t = "pan" === e ? this.elPan : this.elZoom,
                      n = "pan" === e ? this.elZoom : this.elPan;
                    t && t.classList.add(this.selectedClass),
                      n && n.classList.remove(this.selectedClass);
                  },
                },
                {
                  key: "togglePanning",
                  value: function () {
                    this.ctx.getSyncedCharts().forEach(function (e) {
                      e.ctx.toolbar.toggleOtherControls(),
                        (e.w.globals.panEnabled = !e.w.globals.panEnabled),
                        e.ctx.toolbar.elPan.classList.contains(
                          e.ctx.toolbar.selectedClass
                        )
                          ? e.ctx.toolbar.elPan.classList.remove(
                              e.ctx.toolbar.selectedClass
                            )
                          : e.ctx.toolbar.elPan.classList.add(
                              e.ctx.toolbar.selectedClass
                            );
                    });
                  },
                },
                {
                  key: "toggleOtherControls",
                  value: function () {
                    var e = this,
                      t = this.w;
                    (t.globals.panEnabled = !1),
                      (t.globals.zoomEnabled = !1),
                      (t.globals.selectionEnabled = !1),
                      this.getToolbarIconsReference(),
                      [this.elPan, this.elSelection, this.elZoom].forEach(
                        function (t) {
                          t && t.classList.remove(e.selectedClass);
                        }
                      );
                  },
                },
                {
                  key: "handleZoomIn",
                  value: function () {
                    var e = this.w;
                    e.globals.isRangeBar &&
                      ((this.minX = e.globals.minY),
                      (this.maxX = e.globals.maxY));
                    var t = (this.minX + this.maxX) / 2,
                      n = (this.minX + t) / 2,
                      i = (this.maxX + t) / 2,
                      o = this._getNewMinXMaxX(n, i);
                    e.globals.disableZoomIn ||
                      this.zoomUpdateOptions(o.minX, o.maxX);
                  },
                },
                {
                  key: "handleZoomOut",
                  value: function () {
                    var e = this.w;
                    if (
                      (e.globals.isRangeBar &&
                        ((this.minX = e.globals.minY),
                        (this.maxX = e.globals.maxY)),
                      !(
                        "datetime" === e.config.xaxis.type &&
                        new Date(this.minX).getUTCFullYear() < 1e3
                      ))
                    ) {
                      var t = (this.minX + this.maxX) / 2,
                        n = this.minX - (t - this.minX),
                        i = this.maxX - (t - this.maxX),
                        o = this._getNewMinXMaxX(n, i);
                      e.globals.disableZoomOut ||
                        this.zoomUpdateOptions(o.minX, o.maxX);
                    }
                  },
                },
                {
                  key: "_getNewMinXMaxX",
                  value: function (e, t) {
                    var n = this.w.config.xaxis.convertedCatToNumeric;
                    return {
                      minX: n ? Math.floor(e) : e,
                      maxX: n ? Math.floor(t) : t,
                    };
                  },
                },
                {
                  key: "zoomUpdateOptions",
                  value: function (e, t) {
                    var n = this.w;
                    if (void 0 !== e || void 0 !== t) {
                      if (
                        !(
                          n.config.xaxis.convertedCatToNumeric &&
                          (e < 1 && ((e = 1), (t = n.globals.dataPoints)),
                          t - e < 2)
                        )
                      ) {
                        var i = { min: e, max: t },
                          o = this.getBeforeZoomRange(i);
                        o && (i = o.xaxis);
                        var a = { xaxis: i },
                          s = y.clone(n.globals.initialConfig.yaxis);
                        n.config.chart.group || (a.yaxis = s),
                          (this.w.globals.zoomed = !0),
                          this.ctx.updateHelpers._updateOptions(
                            a,
                            !1,
                            this.w.config.chart.animations.dynamicAnimation
                              .enabled
                          ),
                          this.zoomCallback(i, s);
                      }
                    } else this.handleZoomReset();
                  },
                },
                {
                  key: "zoomCallback",
                  value: function (e, t) {
                    "function" == typeof this.ev.zoomed &&
                      this.ev.zoomed(this.ctx, { xaxis: e, yaxis: t });
                  },
                },
                {
                  key: "getBeforeZoomRange",
                  value: function (e, t) {
                    var n = null;
                    return (
                      "function" == typeof this.ev.beforeZoom &&
                        (n = this.ev.beforeZoom(this, { xaxis: e, yaxis: t })),
                      n
                    );
                  },
                },
                {
                  key: "toggleMenu",
                  value: function () {
                    var e = this;
                    window.setTimeout(function () {
                      e.elMenu.classList.contains("apexcharts-menu-open")
                        ? e.elMenu.classList.remove("apexcharts-menu-open")
                        : e.elMenu.classList.add("apexcharts-menu-open");
                    }, 0);
                  },
                },
                {
                  key: "handleDownload",
                  value: function (e) {
                    var t = this.w,
                      n = new X(this.ctx);
                    switch (e) {
                      case "svg":
                        n.exportToSVG(this.ctx);
                        break;
                      case "png":
                        n.exportToPng(this.ctx);
                        break;
                      case "csv":
                        n.exportToCSV({
                          series: t.config.series,
                          columnDelimiter:
                            t.config.chart.toolbar.export.csv.columnDelimiter,
                        });
                    }
                  },
                },
                {
                  key: "handleZoomReset",
                  value: function (e) {
                    this.ctx.getSyncedCharts().forEach(function (e) {
                      var t = e.w;
                      if (
                        ((t.globals.lastXAxis.min =
                          t.globals.initialConfig.xaxis.min),
                        (t.globals.lastXAxis.max =
                          t.globals.initialConfig.xaxis.max),
                        e.updateHelpers.revertDefaultAxisMinMax(),
                        "function" ==
                          typeof t.config.chart.events.beforeResetZoom)
                      ) {
                        var n = t.config.chart.events.beforeResetZoom(e, t);
                        n && e.updateHelpers.revertDefaultAxisMinMax(n);
                      }
                      "function" == typeof t.config.chart.events.zoomed &&
                        e.ctx.toolbar.zoomCallback({
                          min: t.config.xaxis.min,
                          max: t.config.xaxis.max,
                        }),
                        (t.globals.zoomed = !1);
                      var i = e.ctx.series.emptyCollapsedSeries(
                        y.clone(t.globals.initialSeries)
                      );
                      e.updateHelpers._updateSeries(
                        i,
                        t.config.chart.animations.dynamicAnimation.enabled
                      );
                    });
                  },
                },
                {
                  key: "destroy",
                  value: function () {
                    (this.elZoom = null),
                      (this.elZoomIn = null),
                      (this.elZoomOut = null),
                      (this.elPan = null),
                      (this.elSelection = null),
                      (this.elZoomReset = null),
                      (this.elMenuIcon = null);
                  },
                },
              ]),
              e
            );
          })(),
          fe = (function (e) {
            d(n, pe);
            var t = g(n);
            function n(e) {
              var i;
              return (
                r(this, n),
                ((i = t.call(this, e)).ctx = e),
                (i.w = e.w),
                (i.dragged = !1),
                (i.graphics = new k(i.ctx)),
                (i.eventList = [
                  "mousedown",
                  "mouseleave",
                  "mousemove",
                  "touchstart",
                  "touchmove",
                  "mouseup",
                  "touchend",
                ]),
                (i.clientX = 0),
                (i.clientY = 0),
                (i.startX = 0),
                (i.endX = 0),
                (i.dragX = 0),
                (i.startY = 0),
                (i.endY = 0),
                (i.dragY = 0),
                (i.moveDirection = "none"),
                i
              );
            }
            return (
              c(n, [
                {
                  key: "init",
                  value: function (e) {
                    var t = this,
                      n = e.xyRatios,
                      i = this.w,
                      o = this;
                    (this.xyRatios = n),
                      (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                      (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                      (this.gridRect =
                        i.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                      this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                      this.selectionRect.node.classList.add(
                        "apexcharts-selection-rect"
                      ),
                      i.globals.dom.elGraphical.add(this.zoomRect),
                      i.globals.dom.elGraphical.add(this.selectionRect),
                      "x" === i.config.chart.selection.type
                        ? (this.slDraggableRect = this.selectionRect
                            .draggable({
                              minX: 0,
                              minY: 0,
                              maxX: i.globals.gridWidth,
                              maxY: i.globals.gridHeight,
                            })
                            .on(
                              "dragmove",
                              this.selectionDragging.bind(this, "dragging")
                            ))
                        : "y" === i.config.chart.selection.type
                        ? (this.slDraggableRect = this.selectionRect
                            .draggable({ minX: 0, maxX: i.globals.gridWidth })
                            .on(
                              "dragmove",
                              this.selectionDragging.bind(this, "dragging")
                            ))
                        : (this.slDraggableRect = this.selectionRect
                            .draggable()
                            .on(
                              "dragmove",
                              this.selectionDragging.bind(this, "dragging")
                            )),
                      this.preselectedSelection(),
                      (this.hoverArea = i.globals.dom.baseEl.querySelector(
                        "".concat(i.globals.chartClass, " .apexcharts-svg")
                      )),
                      this.hoverArea.classList.add("apexcharts-zoomable"),
                      this.eventList.forEach(function (e) {
                        t.hoverArea.addEventListener(
                          e,
                          o.svgMouseEvents.bind(o, n),
                          { capture: !1, passive: !0 }
                        );
                      });
                  },
                },
                {
                  key: "destroy",
                  value: function () {
                    this.slDraggableRect &&
                      (this.slDraggableRect.draggable(!1),
                      this.slDraggableRect.off(),
                      this.selectionRect.off()),
                      (this.selectionRect = null),
                      (this.zoomRect = null),
                      (this.gridRect = null);
                  },
                },
                {
                  key: "svgMouseEvents",
                  value: function (e, t) {
                    var n = this.w,
                      i = this,
                      o = this.ctx.toolbar,
                      a = n.globals.zoomEnabled
                        ? n.config.chart.zoom.type
                        : n.config.chart.selection.type,
                      s = n.config.chart.toolbar.autoSelected;
                    if (
                      (t.shiftKey
                        ? ((this.shiftWasPressed = !0),
                          o.enableZoomPanFromToolbar(
                            "pan" === s ? "zoom" : "pan"
                          ))
                        : this.shiftWasPressed &&
                          (o.enableZoomPanFromToolbar(s),
                          (this.shiftWasPressed = !1)),
                      t.target)
                    ) {
                      var r,
                        l = t.target.classList;
                      if (
                        (t.target.parentNode &&
                          null !== t.target.parentNode &&
                          (r = t.target.parentNode.classList),
                        !(
                          l.contains("apexcharts-selection-rect") ||
                          l.contains("apexcharts-legend-marker") ||
                          l.contains("apexcharts-legend-text") ||
                          (r && r.contains("apexcharts-toolbar"))
                        ))
                      ) {
                        if (
                          ((i.clientX =
                            "touchmove" === t.type || "touchstart" === t.type
                              ? t.touches[0].clientX
                              : "touchend" === t.type
                              ? t.changedTouches[0].clientX
                              : t.clientX),
                          (i.clientY =
                            "touchmove" === t.type || "touchstart" === t.type
                              ? t.touches[0].clientY
                              : "touchend" === t.type
                              ? t.changedTouches[0].clientY
                              : t.clientY),
                          "mousedown" === t.type && 1 === t.which)
                        ) {
                          var c = i.gridRect.getBoundingClientRect();
                          (i.startX = i.clientX - c.left),
                            (i.startY = i.clientY - c.top),
                            (i.dragged = !1),
                            (i.w.globals.mousedown = !0);
                        }
                        if (
                          ((("mousemove" === t.type && 1 === t.which) ||
                            "touchmove" === t.type) &&
                            ((i.dragged = !0),
                            n.globals.panEnabled
                              ? ((n.globals.selection = null),
                                i.w.globals.mousedown &&
                                  i.panDragging({
                                    context: i,
                                    zoomtype: a,
                                    xyRatios: e,
                                  }))
                              : ((i.w.globals.mousedown &&
                                  n.globals.zoomEnabled) ||
                                  (i.w.globals.mousedown &&
                                    n.globals.selectionEnabled)) &&
                                (i.selection = i.selectionDrawing({
                                  context: i,
                                  zoomtype: a,
                                }))),
                          "mouseup" === t.type ||
                            "touchend" === t.type ||
                            "mouseleave" === t.type)
                        ) {
                          var u,
                            d =
                              null === (u = i.gridRect) || void 0 === u
                                ? void 0
                                : u.getBoundingClientRect();
                          d &&
                            i.w.globals.mousedown &&
                            ((i.endX = i.clientX - d.left),
                            (i.endY = i.clientY - d.top),
                            (i.dragX = Math.abs(i.endX - i.startX)),
                            (i.dragY = Math.abs(i.endY - i.startY)),
                            (n.globals.zoomEnabled ||
                              n.globals.selectionEnabled) &&
                              i.selectionDrawn({ context: i, zoomtype: a }),
                            n.globals.panEnabled &&
                              n.config.xaxis.convertedCatToNumeric &&
                              i.delayedPanScrolled()),
                            n.globals.zoomEnabled &&
                              i.hideSelectionRect(this.selectionRect),
                            (i.dragged = !1),
                            (i.w.globals.mousedown = !1);
                        }
                        this.makeSelectionRectDraggable();
                      }
                    }
                  },
                },
                {
                  key: "makeSelectionRectDraggable",
                  value: function () {
                    var e = this.w;
                    if (this.selectionRect) {
                      var t = this.selectionRect.node.getBoundingClientRect();
                      t.width > 0 &&
                        t.height > 0 &&
                        this.slDraggableRect
                          .selectize({
                            points: "l, r",
                            pointSize: 8,
                            pointType: "rect",
                          })
                          .resize({
                            constraint: {
                              minX: 0,
                              minY: 0,
                              maxX: e.globals.gridWidth,
                              maxY: e.globals.gridHeight,
                            },
                          })
                          .on(
                            "resizing",
                            this.selectionDragging.bind(this, "resizing")
                          );
                    }
                  },
                },
                {
                  key: "preselectedSelection",
                  value: function () {
                    var e = this.w,
                      t = this.xyRatios;
                    if (!e.globals.zoomEnabled)
                      if (
                        void 0 !== e.globals.selection &&
                        null !== e.globals.selection
                      )
                        this.drawSelectionRect(e.globals.selection);
                      else if (
                        void 0 !== e.config.chart.selection.xaxis.min &&
                        void 0 !== e.config.chart.selection.xaxis.max
                      ) {
                        var n =
                            (e.config.chart.selection.xaxis.min -
                              e.globals.minX) /
                            t.xRatio,
                          i =
                            e.globals.gridWidth -
                            (e.globals.maxX -
                              e.config.chart.selection.xaxis.max) /
                              t.xRatio -
                            n;
                        e.globals.isRangeBar &&
                          ((n =
                            (e.config.chart.selection.xaxis.min -
                              e.globals.yAxisScale[0].niceMin) /
                            t.invertedYRatio),
                          (i =
                            (e.config.chart.selection.xaxis.max -
                              e.config.chart.selection.xaxis.min) /
                            t.invertedYRatio));
                        var o = {
                          x: n,
                          y: 0,
                          width: i,
                          height: e.globals.gridHeight,
                          translateX: 0,
                          translateY: 0,
                          selectionEnabled: !0,
                        };
                        this.drawSelectionRect(o),
                          this.makeSelectionRectDraggable(),
                          "function" ==
                            typeof e.config.chart.events.selection &&
                            e.config.chart.events.selection(this.ctx, {
                              xaxis: {
                                min: e.config.chart.selection.xaxis.min,
                                max: e.config.chart.selection.xaxis.max,
                              },
                              yaxis: {},
                            });
                      }
                  },
                },
                {
                  key: "drawSelectionRect",
                  value: function (e) {
                    var t = e.x,
                      n = e.y,
                      i = e.width,
                      o = e.height,
                      a = e.translateX,
                      s = void 0 === a ? 0 : a,
                      r = e.translateY,
                      l = void 0 === r ? 0 : r,
                      c = this.w,
                      u = this.zoomRect,
                      d = this.selectionRect;
                    if (this.dragged || null !== c.globals.selection) {
                      var h = { transform: "translate(" + s + ", " + l + ")" };
                      c.globals.zoomEnabled &&
                        this.dragged &&
                        (i < 0 && (i = 1),
                        u.attr({
                          x: t,
                          y: n,
                          width: i,
                          height: o,
                          fill: c.config.chart.zoom.zoomedArea.fill.color,
                          "fill-opacity":
                            c.config.chart.zoom.zoomedArea.fill.opacity,
                          stroke: c.config.chart.zoom.zoomedArea.stroke.color,
                          "stroke-width":
                            c.config.chart.zoom.zoomedArea.stroke.width,
                          "stroke-opacity":
                            c.config.chart.zoom.zoomedArea.stroke.opacity,
                        }),
                        k.setAttrs(u.node, h)),
                        c.globals.selectionEnabled &&
                          (d.attr({
                            x: t,
                            y: n,
                            width: i > 0 ? i : 0,
                            height: o > 0 ? o : 0,
                            fill: c.config.chart.selection.fill.color,
                            "fill-opacity":
                              c.config.chart.selection.fill.opacity,
                            stroke: c.config.chart.selection.stroke.color,
                            "stroke-width":
                              c.config.chart.selection.stroke.width,
                            "stroke-dasharray":
                              c.config.chart.selection.stroke.dashArray,
                            "stroke-opacity":
                              c.config.chart.selection.stroke.opacity,
                          }),
                          k.setAttrs(d.node, h));
                    }
                  },
                },
                {
                  key: "hideSelectionRect",
                  value: function (e) {
                    e && e.attr({ x: 0, y: 0, width: 0, height: 0 });
                  },
                },
                {
                  key: "selectionDrawing",
                  value: function (e) {
                    var t,
                      n = e.context,
                      i = e.zoomtype,
                      o = this.w,
                      a = n,
                      s = this.gridRect.getBoundingClientRect(),
                      r = a.startX - 1,
                      l = a.startY,
                      c = !1,
                      u = !1,
                      d = a.clientX - s.left - r,
                      h = a.clientY - s.top - l;
                    return (
                      Math.abs(d + r) > o.globals.gridWidth
                        ? (d = o.globals.gridWidth - r)
                        : a.clientX - s.left < 0 && (d = r),
                      r > a.clientX - s.left && ((c = !0), (d = Math.abs(d))),
                      l > a.clientY - s.top && ((u = !0), (h = Math.abs(h))),
                      (t =
                        "x" === i
                          ? {
                              x: c ? r - d : r,
                              y: 0,
                              width: d,
                              height: o.globals.gridHeight,
                            }
                          : "y" === i
                          ? {
                              x: 0,
                              y: u ? l - h : l,
                              width: o.globals.gridWidth,
                              height: h,
                            }
                          : {
                              x: c ? r - d : r,
                              y: u ? l - h : l,
                              width: d,
                              height: h,
                            }),
                      a.drawSelectionRect(t),
                      a.selectionDragging("resizing"),
                      t
                    );
                  },
                },
                {
                  key: "selectionDragging",
                  value: function (e, t) {
                    var n = this,
                      i = this.w,
                      o = this.xyRatios,
                      a = this.selectionRect,
                      s = 0;
                    "resizing" === e && (s = 30);
                    var r = function (e) {
                        return parseFloat(a.node.getAttribute(e));
                      },
                      l = {
                        x: r("x"),
                        y: r("y"),
                        width: r("width"),
                        height: r("height"),
                      };
                    (i.globals.selection = l),
                      "function" == typeof i.config.chart.events.selection &&
                        i.globals.selectionEnabled &&
                        (clearTimeout(this.w.globals.selectionResizeTimer),
                        (this.w.globals.selectionResizeTimer =
                          window.setTimeout(function () {
                            var e,
                              t,
                              s,
                              r,
                              l = n.gridRect.getBoundingClientRect(),
                              c = a.node.getBoundingClientRect();
                            i.globals.isRangeBar
                              ? ((e =
                                  i.globals.yAxisScale[0].niceMin +
                                  (c.left - l.left) * o.invertedYRatio),
                                (t =
                                  i.globals.yAxisScale[0].niceMin +
                                  (c.right - l.left) * o.invertedYRatio),
                                (s = 0),
                                (r = 1))
                              : ((e =
                                  i.globals.xAxisScale.niceMin +
                                  (c.left - l.left) * o.xRatio),
                                (t =
                                  i.globals.xAxisScale.niceMin +
                                  (c.right - l.left) * o.xRatio),
                                (s =
                                  i.globals.yAxisScale[0].niceMin +
                                  (l.bottom - c.bottom) * o.yRatio[0]),
                                (r =
                                  i.globals.yAxisScale[0].niceMax -
                                  (c.top - l.top) * o.yRatio[0]));
                            var u = {
                              xaxis: { min: e, max: t },
                              yaxis: { min: s, max: r },
                            };
                            i.config.chart.events.selection(n.ctx, u),
                              i.config.chart.brush.enabled &&
                                void 0 !==
                                  i.config.chart.events.brushScrolled &&
                                i.config.chart.events.brushScrolled(n.ctx, u);
                          }, s)));
                  },
                },
                {
                  key: "selectionDrawn",
                  value: function (e) {
                    var t = e.context,
                      n = e.zoomtype,
                      i = this.w,
                      o = t,
                      a = this.xyRatios,
                      s = this.ctx.toolbar;
                    if (o.startX > o.endX) {
                      var r = o.startX;
                      (o.startX = o.endX), (o.endX = r);
                    }
                    if (o.startY > o.endY) {
                      var l = o.startY;
                      (o.startY = o.endY), (o.endY = l);
                    }
                    var c = void 0,
                      u = void 0;
                    i.globals.isRangeBar
                      ? ((c =
                          i.globals.yAxisScale[0].niceMin +
                          o.startX * a.invertedYRatio),
                        (u =
                          i.globals.yAxisScale[0].niceMin +
                          o.endX * a.invertedYRatio))
                      : ((c =
                          i.globals.xAxisScale.niceMin + o.startX * a.xRatio),
                        (u = i.globals.xAxisScale.niceMin + o.endX * a.xRatio));
                    var d = [],
                      h = [];
                    if (
                      (i.config.yaxis.forEach(function (e, t) {
                        var n = i.globals.seriesYAxisMap[t][0];
                        d.push(
                          i.globals.yAxisScale[t].niceMax -
                            a.yRatio[n] * o.startY
                        ),
                          h.push(
                            i.globals.yAxisScale[t].niceMax -
                              a.yRatio[n] * o.endY
                          );
                      }),
                      o.dragged && (o.dragX > 10 || o.dragY > 10) && c !== u)
                    )
                      if (i.globals.zoomEnabled) {
                        var p = y.clone(i.globals.initialConfig.yaxis),
                          f = y.clone(i.globals.initialConfig.xaxis);
                        if (
                          ((i.globals.zoomed = !0),
                          i.config.xaxis.convertedCatToNumeric &&
                            ((c = Math.floor(c)),
                            (u = Math.floor(u)),
                            c < 1 && ((c = 1), (u = i.globals.dataPoints)),
                            u - c < 2 && (u = c + 1)),
                          ("xy" !== n && "x" !== n) || (f = { min: c, max: u }),
                          ("xy" !== n && "y" !== n) ||
                            p.forEach(function (e, t) {
                              (p[t].min = h[t]), (p[t].max = d[t]);
                            }),
                          s)
                        ) {
                          var g = s.getBeforeZoomRange(f, p);
                          g &&
                            ((f = g.xaxis ? g.xaxis : f),
                            (p = g.yaxis ? g.yaxis : p));
                        }
                        var m = { xaxis: f };
                        i.config.chart.group || (m.yaxis = p),
                          o.ctx.updateHelpers._updateOptions(
                            m,
                            !1,
                            o.w.config.chart.animations.dynamicAnimation.enabled
                          ),
                          "function" == typeof i.config.chart.events.zoomed &&
                            s.zoomCallback(f, p);
                      } else if (i.globals.selectionEnabled) {
                        var v,
                          b = null;
                        (v = { min: c, max: u }),
                          ("xy" !== n && "y" !== n) ||
                            (b = y.clone(i.config.yaxis)).forEach(function (
                              e,
                              t
                            ) {
                              (b[t].min = h[t]), (b[t].max = d[t]);
                            }),
                          (i.globals.selection = o.selection),
                          "function" ==
                            typeof i.config.chart.events.selection &&
                            i.config.chart.events.selection(o.ctx, {
                              xaxis: v,
                              yaxis: b,
                            });
                      }
                  },
                },
                {
                  key: "panDragging",
                  value: function (e) {
                    var t = e.context,
                      n = this.w,
                      i = t;
                    if (void 0 !== n.globals.lastClientPosition.x) {
                      var o = n.globals.lastClientPosition.x - i.clientX,
                        a = n.globals.lastClientPosition.y - i.clientY;
                      Math.abs(o) > Math.abs(a) && o > 0
                        ? (this.moveDirection = "left")
                        : Math.abs(o) > Math.abs(a) && o < 0
                        ? (this.moveDirection = "right")
                        : Math.abs(a) > Math.abs(o) && a > 0
                        ? (this.moveDirection = "up")
                        : Math.abs(a) > Math.abs(o) &&
                          a < 0 &&
                          (this.moveDirection = "down");
                    }
                    n.globals.lastClientPosition = {
                      x: i.clientX,
                      y: i.clientY,
                    };
                    var s = n.globals.isRangeBar
                        ? n.globals.minY
                        : n.globals.minX,
                      r = n.globals.isRangeBar
                        ? n.globals.maxY
                        : n.globals.maxX;
                    n.config.xaxis.convertedCatToNumeric || i.panScrolled(s, r);
                  },
                },
                {
                  key: "delayedPanScrolled",
                  value: function () {
                    var e = this.w,
                      t = e.globals.minX,
                      n = e.globals.maxX,
                      i = (e.globals.maxX - e.globals.minX) / 2;
                    "left" === this.moveDirection
                      ? ((t = e.globals.minX + i), (n = e.globals.maxX + i))
                      : "right" === this.moveDirection &&
                        ((t = e.globals.minX - i), (n = e.globals.maxX - i)),
                      (t = Math.floor(t)),
                      (n = Math.floor(n)),
                      this.updateScrolledChart(
                        { xaxis: { min: t, max: n } },
                        t,
                        n
                      );
                  },
                },
                {
                  key: "panScrolled",
                  value: function (e, t) {
                    var n = this.w,
                      i = this.xyRatios,
                      o = y.clone(n.globals.initialConfig.yaxis),
                      a = i.xRatio,
                      s = n.globals.minX,
                      r = n.globals.maxX;
                    n.globals.isRangeBar &&
                      ((a = i.invertedYRatio),
                      (s = n.globals.minY),
                      (r = n.globals.maxY)),
                      "left" === this.moveDirection
                        ? ((e = s + (n.globals.gridWidth / 15) * a),
                          (t = r + (n.globals.gridWidth / 15) * a))
                        : "right" === this.moveDirection &&
                          ((e = s - (n.globals.gridWidth / 15) * a),
                          (t = r - (n.globals.gridWidth / 15) * a)),
                      n.globals.isRangeBar ||
                        ((e < n.globals.initialMinX ||
                          t > n.globals.initialMaxX) &&
                          ((e = s), (t = r)));
                    var l = { xaxis: { min: e, max: t } };
                    n.config.chart.group || (l.yaxis = o),
                      this.updateScrolledChart(l, e, t);
                  },
                },
                {
                  key: "updateScrolledChart",
                  value: function (e, t, n) {
                    var i = this.w;
                    this.ctx.updateHelpers._updateOptions(e, !1, !1),
                      "function" == typeof i.config.chart.events.scrolled &&
                        i.config.chart.events.scrolled(this.ctx, {
                          xaxis: { min: t, max: n },
                        });
                  },
                },
              ]),
              n
            );
          })(),
          ge = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.ttCtx = t), (this.ctx = t.ctx);
            }
            return (
              c(e, [
                {
                  key: "getNearestValues",
                  value: function (e) {
                    var t = e.hoverArea,
                      n = e.elGrid,
                      i = e.clientX,
                      o = e.clientY,
                      a = this.w,
                      s = n.getBoundingClientRect(),
                      r = s.width,
                      l = s.height,
                      c = r / (a.globals.dataPoints - 1),
                      u = l / a.globals.dataPoints,
                      d = this.hasBars();
                    (!a.globals.comboCharts && !d) ||
                      a.config.xaxis.convertedCatToNumeric ||
                      (c = r / a.globals.dataPoints);
                    var h = i - s.left - a.globals.barPadForNumericAxis,
                      p = o - s.top;
                    h < 0 || p < 0 || h > r || p > l
                      ? (t.classList.remove("hovering-zoom"),
                        t.classList.remove("hovering-pan"))
                      : a.globals.zoomEnabled
                      ? (t.classList.remove("hovering-pan"),
                        t.classList.add("hovering-zoom"))
                      : a.globals.panEnabled &&
                        (t.classList.remove("hovering-zoom"),
                        t.classList.add("hovering-pan"));
                    var f = Math.round(h / c),
                      g = Math.floor(p / u);
                    d &&
                      !a.config.xaxis.convertedCatToNumeric &&
                      ((f = Math.ceil(h / c)), (f -= 1));
                    var m = null,
                      v = null,
                      b = a.globals.seriesXvalues.map(function (e) {
                        return e.filter(function (e) {
                          return y.isNumber(e);
                        });
                      }),
                      x = a.globals.seriesYvalues.map(function (e) {
                        return e.filter(function (e) {
                          return y.isNumber(e);
                        });
                      });
                    if (a.globals.isXNumeric) {
                      var w = this.ttCtx.getElGrid().getBoundingClientRect(),
                        S = h * (w.width / r),
                        k = p * (w.height / l);
                      (m = (v = this.closestInMultiArray(S, k, b, x)).index),
                        (f = v.j),
                        null !== m &&
                          ((b = a.globals.seriesXvalues[m]),
                          (f = (v = this.closestInArray(S, b)).index));
                    }
                    return (
                      (a.globals.capturedSeriesIndex = null === m ? -1 : m),
                      (!f || f < 1) && (f = 0),
                      a.globals.isBarHorizontal
                        ? (a.globals.capturedDataPointIndex = g)
                        : (a.globals.capturedDataPointIndex = f),
                      {
                        capturedSeries: m,
                        j: a.globals.isBarHorizontal ? g : f,
                        hoverX: h,
                        hoverY: p,
                      }
                    );
                  },
                },
                {
                  key: "closestInMultiArray",
                  value: function (e, t, n, i) {
                    var o = this.w,
                      a = 0,
                      s = null,
                      r = -1;
                    o.globals.series.length > 1
                      ? (a = this.getFirstActiveXArray(n))
                      : (s = 0);
                    var l = n[a][0],
                      c = Math.abs(e - l);
                    if (
                      (n.forEach(function (t) {
                        t.forEach(function (t, n) {
                          var i = Math.abs(e - t);
                          i <= c && ((c = i), (r = n));
                        });
                      }),
                      -1 !== r)
                    ) {
                      var u = i[a][r],
                        d = Math.abs(t - u);
                      (s = a),
                        i.forEach(function (e, n) {
                          var i = Math.abs(t - e[r]);
                          i <= d && ((d = i), (s = n));
                        });
                    }
                    return { index: s, j: r };
                  },
                },
                {
                  key: "getFirstActiveXArray",
                  value: function (e) {
                    for (
                      var t = this.w,
                        n = 0,
                        i = e.map(function (e, t) {
                          return e.length > 0 ? t : -1;
                        }),
                        o = 0;
                      o < i.length;
                      o++
                    )
                      if (
                        -1 !== i[o] &&
                        -1 === t.globals.collapsedSeriesIndices.indexOf(o) &&
                        -1 ===
                          t.globals.ancillaryCollapsedSeriesIndices.indexOf(o)
                      ) {
                        n = i[o];
                        break;
                      }
                    return n;
                  },
                },
                {
                  key: "closestInArray",
                  value: function (e, t) {
                    for (
                      var n = t[0], i = null, o = Math.abs(e - n), a = 0;
                      a < t.length;
                      a++
                    ) {
                      var s = Math.abs(e - t[a]);
                      s < o && ((o = s), (i = a));
                    }
                    return { index: i };
                  },
                },
                {
                  key: "isXoverlap",
                  value: function (e) {
                    var t = [],
                      n = this.w.globals.seriesX.filter(function (e) {
                        return void 0 !== e[0];
                      });
                    if (n.length > 0)
                      for (var i = 0; i < n.length - 1; i++)
                        void 0 !== n[i][e] &&
                          void 0 !== n[i + 1][e] &&
                          n[i][e] !== n[i + 1][e] &&
                          t.push("unEqual");
                    return 0 === t.length;
                  },
                },
                {
                  key: "isInitialSeriesSameLen",
                  value: function () {
                    for (
                      var e = !0, t = this.w.globals.initialSeries, n = 0;
                      n < t.length - 1;
                      n++
                    )
                      if (t[n].data.length !== t[n + 1].data.length) {
                        e = !1;
                        break;
                      }
                    return e;
                  },
                },
                {
                  key: "getBarsHeight",
                  value: function (e) {
                    return v(e).reduce(function (e, t) {
                      return e + t.getBBox().height;
                    }, 0);
                  },
                },
                {
                  key: "getElMarkers",
                  value: function (e) {
                    return "number" == typeof e
                      ? this.w.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series[data\\:realIndex='".concat(
                            e,
                            "'] .apexcharts-series-markers-wrap > *"
                          )
                        )
                      : this.w.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series-markers-wrap > *"
                        );
                  },
                },
                {
                  key: "getAllMarkers",
                  value: function () {
                    var e = this.w.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series-markers-wrap"
                    );
                    (e = v(e)).sort(function (e, t) {
                      var n = Number(e.getAttribute("data:realIndex")),
                        i = Number(t.getAttribute("data:realIndex"));
                      return i < n ? 1 : i > n ? -1 : 0;
                    });
                    var t = [];
                    return (
                      e.forEach(function (e) {
                        t.push(e.querySelector(".apexcharts-marker"));
                      }),
                      t
                    );
                  },
                },
                {
                  key: "hasMarkers",
                  value: function (e) {
                    return this.getElMarkers(e).length > 0;
                  },
                },
                {
                  key: "getPathFromPoint",
                  value: function (e, t) {
                    var n = Number(e.getAttribute("cx")),
                      i = Number(e.getAttribute("cy")),
                      o = e.getAttribute("shape");
                    return new k(this.ctx).getMarkerPath(n, i, o, t);
                  },
                },
                {
                  key: "getElBars",
                  value: function () {
                    return this.w.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series"
                    );
                  },
                },
                {
                  key: "hasBars",
                  value: function () {
                    return this.getElBars().length > 0;
                  },
                },
                {
                  key: "getHoverMarkerSize",
                  value: function (e) {
                    var t = this.w,
                      n = t.config.markers.hover.size;
                    return (
                      void 0 === n &&
                        (n =
                          t.globals.markers.size[e] +
                          t.config.markers.hover.sizeOffset),
                      n
                    );
                  },
                },
                {
                  key: "toggleAllTooltipSeriesGroups",
                  value: function (e) {
                    var t = this.w,
                      n = this.ttCtx;
                    0 === n.allTooltipSeriesGroups.length &&
                      (n.allTooltipSeriesGroups =
                        t.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-tooltip-series-group"
                        ));
                    for (
                      var i = n.allTooltipSeriesGroups, o = 0;
                      o < i.length;
                      o++
                    )
                      "enable" === e
                        ? (i[o].classList.add("apexcharts-active"),
                          (i[o].style.display = t.config.tooltip.items.display))
                        : (i[o].classList.remove("apexcharts-active"),
                          (i[o].style.display = "none"));
                  },
                },
              ]),
              e
            );
          })(),
          me = (function () {
            function e(t) {
              r(this, e),
                (this.w = t.w),
                (this.ctx = t.ctx),
                (this.ttCtx = t),
                (this.tooltipUtil = new ge(t));
            }
            return (
              c(e, [
                {
                  key: "drawSeriesTexts",
                  value: function (e) {
                    var t = e.shared,
                      n = void 0 === t || t,
                      i = e.ttItems,
                      o = e.i,
                      a = void 0 === o ? 0 : o,
                      s = e.j,
                      r = void 0 === s ? null : s,
                      l = e.y1,
                      c = e.y2,
                      u = e.e,
                      d = this.w;
                    void 0 !== d.config.tooltip.custom
                      ? this.handleCustomTooltip({
                          i: a,
                          j: r,
                          y1: l,
                          y2: c,
                          w: d,
                        })
                      : this.toggleActiveInactiveSeries(n, a);
                    var h = this.getValuesToPrint({ i: a, j: r });
                    this.printLabels({
                      i: a,
                      j: r,
                      values: h,
                      ttItems: i,
                      shared: n,
                      e: u,
                    });
                    var p = this.ttCtx.getElTooltip();
                    (this.ttCtx.tooltipRect.ttWidth =
                      p.getBoundingClientRect().width),
                      (this.ttCtx.tooltipRect.ttHeight =
                        p.getBoundingClientRect().height);
                  },
                },
                {
                  key: "printLabels",
                  value: function (e) {
                    var t,
                      n = this,
                      i = e.i,
                      o = e.j,
                      s = e.values,
                      r = e.ttItems,
                      l = e.shared,
                      c = e.e,
                      u = this.w,
                      d = [],
                      h = function (e) {
                        return (
                          u.globals.seriesGoals[e] &&
                          u.globals.seriesGoals[e][o] &&
                          Array.isArray(u.globals.seriesGoals[e][o])
                        );
                      },
                      p = s.xVal,
                      f = s.zVal,
                      g = s.xAxisTTVal,
                      m = "",
                      v = u.globals.colors[i];
                    null !== o &&
                      u.config.plotOptions.bar.distributed &&
                      (v = u.globals.colors[o]);
                    for (
                      var b = function (e, s) {
                          var b = n.getFormatters(i);
                          (m = n.getSeriesName({
                            fn: b.yLbTitleFormatter,
                            index: i,
                            seriesIndex: i,
                            j: o,
                          })),
                            "treemap" === u.config.chart.type &&
                              (m = b.yLbTitleFormatter(
                                String(u.config.series[i].data[o].x),
                                {
                                  series: u.globals.series,
                                  seriesIndex: i,
                                  dataPointIndex: o,
                                  w: u,
                                }
                              ));
                          var x = u.config.tooltip.inverseOrder ? s : e;
                          if (u.globals.axisCharts) {
                            var y = function (e) {
                              var t, n, i, a;
                              return u.globals.isRangeData
                                ? b.yLbFormatter(
                                    null === (t = u.globals.seriesRangeStart) ||
                                      void 0 === t ||
                                      null === (n = t[e]) ||
                                      void 0 === n
                                      ? void 0
                                      : n[o],
                                    {
                                      series: u.globals.seriesRangeStart,
                                      seriesIndex: e,
                                      dataPointIndex: o,
                                      w: u,
                                    }
                                  ) +
                                    " - " +
                                    b.yLbFormatter(
                                      null === (i = u.globals.seriesRangeEnd) ||
                                        void 0 === i ||
                                        null === (a = i[e]) ||
                                        void 0 === a
                                        ? void 0
                                        : a[o],
                                      {
                                        series: u.globals.seriesRangeEnd,
                                        seriesIndex: e,
                                        dataPointIndex: o,
                                        w: u,
                                      }
                                    )
                                : b.yLbFormatter(u.globals.series[e][o], {
                                    series: u.globals.series,
                                    seriesIndex: e,
                                    dataPointIndex: o,
                                    w: u,
                                  });
                            };
                            if (l)
                              (b = n.getFormatters(x)),
                                (m = n.getSeriesName({
                                  fn: b.yLbTitleFormatter,
                                  index: x,
                                  seriesIndex: i,
                                  j: o,
                                })),
                                (v = u.globals.colors[x]),
                                (t = y(x)),
                                h(x) &&
                                  (d = u.globals.seriesGoals[x][o].map(
                                    function (e) {
                                      return {
                                        attrs: e,
                                        val: b.yLbFormatter(e.value, {
                                          seriesIndex: x,
                                          dataPointIndex: o,
                                          w: u,
                                        }),
                                      };
                                    }
                                  ));
                            else {
                              var w,
                                S =
                                  null == c ||
                                  null === (w = c.target) ||
                                  void 0 === w
                                    ? void 0
                                    : w.getAttribute("fill");
                              S &&
                                (v =
                                  -1 !== S.indexOf("url")
                                    ? document
                                        .querySelector(S.substr(4).slice(0, -1))
                                        .childNodes[0].getAttribute("stroke")
                                    : S),
                                (t = y(i)),
                                h(i) &&
                                  Array.isArray(u.globals.seriesGoals[i][o]) &&
                                  (d = u.globals.seriesGoals[i][o].map(
                                    function (e) {
                                      return {
                                        attrs: e,
                                        val: b.yLbFormatter(e.value, {
                                          seriesIndex: i,
                                          dataPointIndex: o,
                                          w: u,
                                        }),
                                      };
                                    }
                                  ));
                            }
                          }
                          null === o &&
                            (t = b.yLbFormatter(
                              u.globals.series[i],
                              a(
                                a({}, u),
                                {},
                                { seriesIndex: i, dataPointIndex: i }
                              )
                            )),
                            n.DOMHandling({
                              i: i,
                              t: x,
                              j: o,
                              ttItems: r,
                              values: {
                                val: t,
                                goalVals: d,
                                xVal: p,
                                xAxisTTVal: g,
                                zVal: f,
                              },
                              seriesName: m,
                              shared: l,
                              pColor: v,
                            });
                        },
                        x = 0,
                        y = u.globals.series.length - 1;
                      x < u.globals.series.length;
                      x++, y--
                    )
                      b(x, y);
                  },
                },
                {
                  key: "getFormatters",
                  value: function (e) {
                    var t,
                      n = this.w,
                      i = n.globals.yLabelFormatters[e];
                    return (
                      void 0 !== n.globals.ttVal
                        ? Array.isArray(n.globals.ttVal)
                          ? ((i =
                              n.globals.ttVal[e] &&
                              n.globals.ttVal[e].formatter),
                            (t =
                              n.globals.ttVal[e] &&
                              n.globals.ttVal[e].title &&
                              n.globals.ttVal[e].title.formatter))
                          : ((i = n.globals.ttVal.formatter),
                            "function" ==
                              typeof n.globals.ttVal.title.formatter &&
                              (t = n.globals.ttVal.title.formatter))
                        : (t = n.config.tooltip.y.title.formatter),
                      "function" != typeof i &&
                        (i = n.globals.yLabelFormatters[0]
                          ? n.globals.yLabelFormatters[0]
                          : function (e) {
                              return e;
                            }),
                      "function" != typeof t &&
                        (t = function (e) {
                          return e;
                        }),
                      { yLbFormatter: i, yLbTitleFormatter: t }
                    );
                  },
                },
                {
                  key: "getSeriesName",
                  value: function (e) {
                    var t = e.fn,
                      n = e.index,
                      i = e.seriesIndex,
                      o = e.j,
                      a = this.w;
                    return t(String(a.globals.seriesNames[n]), {
                      series: a.globals.series,
                      seriesIndex: i,
                      dataPointIndex: o,
                      w: a,
                    });
                  },
                },
                {
                  key: "DOMHandling",
                  value: function (e) {
                    e.i;
                    var t = e.t,
                      n = e.j,
                      i = e.ttItems,
                      o = e.values,
                      a = e.seriesName,
                      s = e.shared,
                      r = e.pColor,
                      l = this.w,
                      c = this.ttCtx,
                      u = o.val,
                      d = o.goalVals,
                      h = o.xVal,
                      p = o.xAxisTTVal,
                      f = o.zVal,
                      g = null;
                    (g = i[t].children),
                      l.config.tooltip.fillSeriesColor &&
                        ((i[t].style.backgroundColor = r),
                        (g[0].style.display = "none")),
                      c.showTooltipTitle &&
                        (null === c.tooltipTitle &&
                          (c.tooltipTitle = l.globals.dom.baseEl.querySelector(
                            ".apexcharts-tooltip-title"
                          )),
                        (c.tooltipTitle.innerHTML = h)),
                      c.isXAxisTooltipEnabled &&
                        (c.xaxisTooltipText.innerHTML = "" !== p ? p : h);
                    var m = i[t].querySelector(
                      ".apexcharts-tooltip-text-y-label"
                    );
                    m && (m.innerHTML = a || "");
                    var v = i[t].querySelector(
                      ".apexcharts-tooltip-text-y-value"
                    );
                    v && (v.innerHTML = void 0 !== u ? u : ""),
                      g[0] &&
                        g[0].classList.contains("apexcharts-tooltip-marker") &&
                        (l.config.tooltip.marker.fillColors &&
                          Array.isArray(l.config.tooltip.marker.fillColors) &&
                          (r = l.config.tooltip.marker.fillColors[t]),
                        (g[0].style.backgroundColor = r)),
                      l.config.tooltip.marker.show ||
                        (g[0].style.display = "none");
                    var b = i[t].querySelector(
                        ".apexcharts-tooltip-text-goals-label"
                      ),
                      x = i[t].querySelector(
                        ".apexcharts-tooltip-text-goals-value"
                      );
                    if (d.length && l.globals.seriesGoals[t]) {
                      var y = function () {
                        var e = "<div >",
                          t = "<div>";
                        d.forEach(function (n, i) {
                          (e +=
                            ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                              .concat(
                                n.attrs.strokeColor,
                                '; height: 3px; border-radius: 0; top: 5px;"></span> '
                              )
                              .concat(n.attrs.name, "</div>")),
                            (t += "<div>".concat(n.val, "</div>"));
                        }),
                          (b.innerHTML = e + "</div>"),
                          (x.innerHTML = t + "</div>");
                      };
                      s
                        ? l.globals.seriesGoals[t][n] &&
                          Array.isArray(l.globals.seriesGoals[t][n])
                          ? y()
                          : ((b.innerHTML = ""), (x.innerHTML = ""))
                        : y();
                    } else (b.innerHTML = ""), (x.innerHTML = "");
                    if (
                      (null !== f &&
                        ((i[t].querySelector(
                          ".apexcharts-tooltip-text-z-label"
                        ).innerHTML = l.config.tooltip.z.title),
                        (i[t].querySelector(
                          ".apexcharts-tooltip-text-z-value"
                        ).innerHTML = void 0 !== f ? f : "")),
                      s && g[0])
                    ) {
                      if (l.config.tooltip.hideEmptySeries) {
                        var w = i[t].querySelector(
                            ".apexcharts-tooltip-marker"
                          ),
                          S = i[t].querySelector(".apexcharts-tooltip-text");
                        0 == parseFloat(u)
                          ? ((w.style.display = "none"),
                            (S.style.display = "none"))
                          : ((w.style.display = "block"),
                            (S.style.display = "block"));
                      }
                      null == u ||
                      l.globals.ancillaryCollapsedSeriesIndices.indexOf(t) >
                        -1 ||
                      l.globals.collapsedSeriesIndices.indexOf(t) > -1 ||
                      (Array.isArray(c.tConfig.enabledOnSeries) &&
                        -1 === c.tConfig.enabledOnSeries.indexOf(t))
                        ? (g[0].parentNode.style.display = "none")
                        : (g[0].parentNode.style.display =
                            l.config.tooltip.items.display);
                    } else
                      Array.isArray(c.tConfig.enabledOnSeries) &&
                        -1 === c.tConfig.enabledOnSeries.indexOf(t) &&
                        (g[0].parentNode.style.display = "none");
                  },
                },
                {
                  key: "toggleActiveInactiveSeries",
                  value: function (e, t) {
                    var n = this.w;
                    if (e)
                      this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                    else {
                      this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                      var i = n.globals.dom.baseEl.querySelector(
                        ".apexcharts-tooltip-series-group-".concat(t)
                      );
                      i &&
                        (i.classList.add("apexcharts-active"),
                        (i.style.display = n.config.tooltip.items.display));
                    }
                  },
                },
                {
                  key: "getValuesToPrint",
                  value: function (e) {
                    var t = e.i,
                      n = e.j,
                      i = this.w,
                      o = this.ctx.series.filteredSeriesX(),
                      a = "",
                      s = "",
                      r = null,
                      l = null,
                      c = {
                        series: i.globals.series,
                        seriesIndex: t,
                        dataPointIndex: n,
                        w: i,
                      },
                      u = i.globals.ttZFormatter;
                    null === n
                      ? (l = i.globals.series[t])
                      : i.globals.isXNumeric &&
                        "treemap" !== i.config.chart.type
                      ? ((a = o[t][n]),
                        0 === o[t].length &&
                          (a = o[this.tooltipUtil.getFirstActiveXArray(o)][n]))
                      : (a =
                          void 0 !== i.globals.labels[n]
                            ? i.globals.labels[n]
                            : "");
                    var d = a;
                    return (
                      (a =
                        i.globals.isXNumeric &&
                        "datetime" === i.config.xaxis.type
                          ? new E(this.ctx).xLabelFormat(
                              i.globals.ttKeyFormatter,
                              d,
                              d,
                              {
                                i: void 0,
                                dateFormatter: new P(this.ctx).formatDate,
                                w: this.w,
                              }
                            )
                          : i.globals.isBarHorizontal
                          ? i.globals.yLabelFormatters[0](d, c)
                          : i.globals.xLabelFormatter(d, c)),
                      void 0 !== i.config.tooltip.x.formatter &&
                        (a = i.globals.ttKeyFormatter(d, c)),
                      i.globals.seriesZ.length > 0 &&
                        i.globals.seriesZ[t].length > 0 &&
                        (r = u(i.globals.seriesZ[t][n], i)),
                      (s =
                        "function" == typeof i.config.xaxis.tooltip.formatter
                          ? i.globals.xaxisTooltipFormatter(d, c)
                          : a),
                      {
                        val: Array.isArray(l) ? l.join(" ") : l,
                        xVal: Array.isArray(a) ? a.join(" ") : a,
                        xAxisTTVal: Array.isArray(s) ? s.join(" ") : s,
                        zVal: r,
                      }
                    );
                  },
                },
                {
                  key: "handleCustomTooltip",
                  value: function (e) {
                    var t = e.i,
                      n = e.j,
                      i = e.y1,
                      o = e.y2,
                      a = e.w,
                      s = this.ttCtx.getElTooltip(),
                      r = a.config.tooltip.custom;
                    Array.isArray(r) && r[t] && (r = r[t]),
                      (s.innerHTML = r({
                        ctx: this.ctx,
                        series: a.globals.series,
                        seriesIndex: t,
                        dataPointIndex: n,
                        y1: i,
                        y2: o,
                        w: a,
                      }));
                  },
                },
              ]),
              e
            );
          })(),
          ve = (function () {
            function e(t) {
              r(this, e), (this.ttCtx = t), (this.ctx = t.ctx), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "moveXCrosshairs",
                  value: function (e) {
                    var t =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : null,
                      n = this.ttCtx,
                      i = this.w,
                      o = n.getElXCrosshairs(),
                      a = e - n.xcrosshairsWidth / 2,
                      s = i.globals.labels.slice().length;
                    if (
                      (null !== t && (a = (i.globals.gridWidth / s) * t),
                      null === o ||
                        i.globals.isBarHorizontal ||
                        (o.setAttribute("x", a),
                        o.setAttribute("x1", a),
                        o.setAttribute("x2", a),
                        o.setAttribute("y2", i.globals.gridHeight),
                        o.classList.add("apexcharts-active")),
                      a < 0 && (a = 0),
                      a > i.globals.gridWidth && (a = i.globals.gridWidth),
                      n.isXAxisTooltipEnabled)
                    ) {
                      var r = a;
                      ("tickWidth" !== i.config.xaxis.crosshairs.width &&
                        "barWidth" !== i.config.xaxis.crosshairs.width) ||
                        (r = a + n.xcrosshairsWidth / 2),
                        this.moveXAxisTooltip(r);
                    }
                  },
                },
                {
                  key: "moveYCrosshairs",
                  value: function (e) {
                    var t = this.ttCtx;
                    null !== t.ycrosshairs &&
                      k.setAttrs(t.ycrosshairs, { y1: e, y2: e }),
                      null !== t.ycrosshairsHidden &&
                        k.setAttrs(t.ycrosshairsHidden, { y1: e, y2: e });
                  },
                },
                {
                  key: "moveXAxisTooltip",
                  value: function (e) {
                    var t = this.w,
                      n = this.ttCtx;
                    if (null !== n.xaxisTooltip && 0 !== n.xcrosshairsWidth) {
                      n.xaxisTooltip.classList.add("apexcharts-active");
                      var i,
                        o =
                          n.xaxisOffY +
                          t.config.xaxis.tooltip.offsetY +
                          t.globals.translateY +
                          1 +
                          t.config.xaxis.offsetY;
                      if (
                        ((e -=
                          n.xaxisTooltip.getBoundingClientRect().width / 2),
                        !isNaN(e))
                      )
                        (e += t.globals.translateX),
                          (i = new k(this.ctx).getTextRects(
                            n.xaxisTooltipText.innerHTML
                          )),
                          (n.xaxisTooltipText.style.minWidth = i.width + "px"),
                          (n.xaxisTooltip.style.left = e + "px"),
                          (n.xaxisTooltip.style.top = o + "px");
                    }
                  },
                },
                {
                  key: "moveYAxisTooltip",
                  value: function (e) {
                    var t = this.w,
                      n = this.ttCtx;
                    null === n.yaxisTTEls &&
                      (n.yaxisTTEls = t.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-yaxistooltip"
                      ));
                    var i = parseInt(
                        n.ycrosshairsHidden.getAttribute("y1"),
                        10
                      ),
                      o = t.globals.translateY + i,
                      a = n.yaxisTTEls[e].getBoundingClientRect().height,
                      s = t.globals.translateYAxisX[e] - 2;
                    t.config.yaxis[e].opposite && (s -= 26),
                      (o -= a / 2),
                      -1 === t.globals.ignoreYAxisIndexes.indexOf(e)
                        ? (n.yaxisTTEls[e].classList.add("apexcharts-active"),
                          (n.yaxisTTEls[e].style.top = o + "px"),
                          (n.yaxisTTEls[e].style.left =
                            s + t.config.yaxis[e].tooltip.offsetX + "px"))
                        : n.yaxisTTEls[e].classList.remove("apexcharts-active");
                  },
                },
                {
                  key: "moveTooltip",
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : null,
                      i = this.w,
                      o = this.ttCtx,
                      a = o.getElTooltip(),
                      s = o.tooltipRect,
                      r = null !== n ? parseFloat(n) : 1,
                      l = parseFloat(e) + r + 5,
                      c = parseFloat(t) + r / 2;
                    if (
                      (l > i.globals.gridWidth / 2 &&
                        (l = l - s.ttWidth - r - 10),
                      l > i.globals.gridWidth - s.ttWidth - 10 &&
                        (l = i.globals.gridWidth - s.ttWidth),
                      l < -20 && (l = -20),
                      i.config.tooltip.followCursor)
                    ) {
                      var u = o.getElGrid().getBoundingClientRect();
                      (l = o.e.clientX - u.left) > i.globals.gridWidth / 2 &&
                        (l -= o.tooltipRect.ttWidth),
                        (c = o.e.clientY + i.globals.translateY - u.top) >
                          i.globals.gridHeight / 2 &&
                          (c -= o.tooltipRect.ttHeight);
                    } else
                      i.globals.isBarHorizontal ||
                        (s.ttHeight / 2 + c > i.globals.gridHeight &&
                          (c =
                            i.globals.gridHeight -
                            s.ttHeight +
                            i.globals.translateY));
                    isNaN(l) ||
                      ((l += i.globals.translateX),
                      (a.style.left = l + "px"),
                      (a.style.top = c + "px"));
                  },
                },
                {
                  key: "moveMarkers",
                  value: function (e, t) {
                    var n = this.w,
                      i = this.ttCtx;
                    if (n.globals.markers.size[e] > 0)
                      for (
                        var o = n.globals.dom.baseEl.querySelectorAll(
                            " .apexcharts-series[data\\:realIndex='".concat(
                              e,
                              "'] .apexcharts-marker"
                            )
                          ),
                          a = 0;
                        a < o.length;
                        a++
                      )
                        parseInt(o[a].getAttribute("rel"), 10) === t &&
                          (i.marker.resetPointsSize(),
                          i.marker.enlargeCurrentPoint(t, o[a]));
                    else
                      i.marker.resetPointsSize(),
                        this.moveDynamicPointOnHover(t, e);
                  },
                },
                {
                  key: "moveDynamicPointOnHover",
                  value: function (e, t) {
                    var n,
                      i,
                      o,
                      a,
                      s = this.w,
                      r = this.ttCtx,
                      l = new k(this.ctx),
                      c = s.globals.pointsArray,
                      u = r.tooltipUtil.getHoverMarkerSize(t),
                      d = s.config.series[t].type;
                    if (
                      !d ||
                      ("column" !== d && "candlestick" !== d && "boxPlot" !== d)
                    ) {
                      (o =
                        null === (n = c[t][e]) || void 0 === n ? void 0 : n[0]),
                        (a =
                          (null === (i = c[t][e]) || void 0 === i
                            ? void 0
                            : i[1]) || 0);
                      var h = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(
                          t,
                          "'] .apexcharts-series-markers path"
                        )
                      );
                      if (h && a < s.globals.gridHeight && a > 0) {
                        var p = h.getAttribute("shape"),
                          f = l.getMarkerPath(o, a, p, 1.5 * u);
                        h.setAttribute("d", f);
                      }
                      this.moveXCrosshairs(o),
                        r.fixedTooltip || this.moveTooltip(o, a, u);
                    }
                  },
                },
                {
                  key: "moveDynamicPointsOnHover",
                  value: function (e) {
                    var t,
                      n = this.ttCtx,
                      i = n.w,
                      o = 0,
                      a = 0,
                      s = i.globals.pointsArray,
                      r = new U(this.ctx),
                      l = new k(this.ctx);
                    t = r.getActiveConfigSeriesIndex("asc", [
                      "line",
                      "area",
                      "scatter",
                      "bubble",
                    ]);
                    var c = n.tooltipUtil.getHoverMarkerSize(t);
                    s[t] && ((o = s[t][e][0]), (a = s[t][e][1]));
                    var u = n.tooltipUtil.getAllMarkers();
                    if (null !== u)
                      for (var d = 0; d < i.globals.series.length; d++) {
                        var h = s[d];
                        if (
                          (i.globals.comboCharts &&
                            void 0 === h &&
                            u.splice(d, 0, null),
                          h && h.length)
                        ) {
                          var p = s[d][e][1],
                            f = void 0;
                          u[d].setAttribute("cx", o);
                          var g = u[d].getAttribute("shape");
                          if (
                            "rangeArea" === i.config.chart.type &&
                            !i.globals.comboCharts
                          ) {
                            var m = e + i.globals.series[d].length;
                            (f = s[d][m][1]), (p -= Math.abs(p - f) / 2);
                          }
                          if (
                            null !== p &&
                            !isNaN(p) &&
                            p < i.globals.gridHeight + c &&
                            p + c > 0
                          ) {
                            var v = l.getMarkerPath(o, p, g, c);
                            u[d].setAttribute("d", v);
                          } else u[d].setAttribute("d", "");
                        }
                      }
                    this.moveXCrosshairs(o),
                      n.fixedTooltip ||
                        this.moveTooltip(o, a || i.globals.gridHeight, c);
                  },
                },
                {
                  key: "moveStickyTooltipOverBars",
                  value: function (e, t) {
                    var n = this.w,
                      i = this.ttCtx,
                      o = n.globals.columnSeries
                        ? n.globals.columnSeries.length
                        : n.globals.series.length,
                      a =
                        o >= 2 && o % 2 == 0
                          ? Math.floor(o / 2)
                          : Math.floor(o / 2) + 1;
                    n.globals.isBarHorizontal &&
                      (a =
                        new U(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
                    var s = n.globals.dom.baseEl.querySelector(
                      ".apexcharts-bar-series .apexcharts-series[rel='"
                        .concat(a, "'] path[j='")
                        .concat(
                          e,
                          "'], .apexcharts-candlestick-series .apexcharts-series[rel='"
                        )
                        .concat(a, "'] path[j='")
                        .concat(
                          e,
                          "'], .apexcharts-boxPlot-series .apexcharts-series[rel='"
                        )
                        .concat(a, "'] path[j='")
                        .concat(
                          e,
                          "'], .apexcharts-rangebar-series .apexcharts-series[rel='"
                        )
                        .concat(a, "'] path[j='")
                        .concat(e, "']")
                    );
                    s ||
                      "number" != typeof t ||
                      (s = n.globals.dom.baseEl.querySelector(
                        ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                          .concat(t, "'] path[j='")
                          .concat(
                            e,
                            "'],\n        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='"
                          )
                          .concat(t, "'] path[j='")
                          .concat(
                            e,
                            "'],\n        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='"
                          )
                          .concat(t, "'] path[j='")
                          .concat(
                            e,
                            "'],\n        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='"
                          )
                          .concat(t, "'] path[j='")
                          .concat(e, "']")
                      ));
                    var r = s ? parseFloat(s.getAttribute("cx")) : 0,
                      l = s ? parseFloat(s.getAttribute("cy")) : 0,
                      c = s ? parseFloat(s.getAttribute("barWidth")) : 0,
                      u = i.getElGrid().getBoundingClientRect(),
                      d =
                        s &&
                        (s.classList.contains("apexcharts-candlestick-area") ||
                          s.classList.contains("apexcharts-boxPlot-area"));
                    n.globals.isXNumeric
                      ? (s && !d && (r -= o % 2 != 0 ? c / 2 : 0),
                        s && d && n.globals.comboCharts && (r -= c / 2))
                      : n.globals.isBarHorizontal ||
                        ((r =
                          i.xAxisTicksPositions[e - 1] +
                          i.dataPointsDividedWidth / 2),
                        isNaN(r) &&
                          (r =
                            i.xAxisTicksPositions[e] -
                            i.dataPointsDividedWidth / 2)),
                      n.globals.isBarHorizontal
                        ? (l -= i.tooltipRect.ttHeight)
                        : n.config.tooltip.followCursor
                        ? (l = i.e.clientY - u.top - i.tooltipRect.ttHeight / 2)
                        : l + i.tooltipRect.ttHeight + 15 >
                            n.globals.gridHeight && (l = n.globals.gridHeight),
                      n.globals.isBarHorizontal || this.moveXCrosshairs(r),
                      i.fixedTooltip ||
                        this.moveTooltip(r, l || n.globals.gridHeight);
                  },
                },
              ]),
              e
            );
          })(),
          be = (function () {
            function e(t) {
              r(this, e),
                (this.w = t.w),
                (this.ttCtx = t),
                (this.ctx = t.ctx),
                (this.tooltipPosition = new ve(t));
            }
            return (
              c(e, [
                {
                  key: "drawDynamicPoints",
                  value: function () {
                    var e = this.w,
                      t = new k(this.ctx),
                      n = new H(this.ctx),
                      i =
                        e.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series"
                        );
                    (i = v(i)),
                      e.config.chart.stacked &&
                        i.sort(function (e, t) {
                          return (
                            parseFloat(e.getAttribute("data:realIndex")) -
                            parseFloat(t.getAttribute("data:realIndex"))
                          );
                        });
                    for (var o = 0; o < i.length; o++) {
                      var a = i[o].querySelector(
                        ".apexcharts-series-markers-wrap"
                      );
                      if (null !== a) {
                        var s = void 0,
                          r = "apexcharts-marker w".concat(
                            (Math.random() + 1).toString(36).substring(4)
                          );
                        ("line" !== e.config.chart.type &&
                          "area" !== e.config.chart.type) ||
                          e.globals.comboCharts ||
                          e.config.tooltip.intersect ||
                          (r += " no-pointer-events");
                        var l = n.getMarkerConfig({
                          cssClass: r,
                          seriesIndex: Number(a.getAttribute("data:realIndex")),
                        });
                        (s = t.drawMarker(0, 0, l)).node.setAttribute(
                          "default-marker-size",
                          0
                        );
                        var c = document.createElementNS(e.globals.SVGNS, "g");
                        c.classList.add("apexcharts-series-markers"),
                          c.appendChild(s.node),
                          a.appendChild(c);
                      }
                    }
                  },
                },
                {
                  key: "enlargeCurrentPoint",
                  value: function (e, t) {
                    var n =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : null,
                      i =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : null,
                      o = this.w;
                    "bubble" !== o.config.chart.type && this.newPointSize(e, t);
                    var a = t.getAttribute("cx"),
                      s = t.getAttribute("cy");
                    if (
                      (null !== n && null !== i && ((a = n), (s = i)),
                      this.tooltipPosition.moveXCrosshairs(a),
                      !this.fixedTooltip)
                    ) {
                      if ("radar" === o.config.chart.type) {
                        var r = this.ttCtx.getElGrid().getBoundingClientRect();
                        a = this.ttCtx.e.clientX - r.left;
                      }
                      this.tooltipPosition.moveTooltip(
                        a,
                        s,
                        o.config.markers.hover.size
                      );
                    }
                  },
                },
                {
                  key: "enlargePoints",
                  value: function (e) {
                    for (
                      var t = this.w,
                        n = this,
                        i = this.ttCtx,
                        o = e,
                        a = t.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                        ),
                        s = t.config.markers.hover.size,
                        r = 0;
                      r < a.length;
                      r++
                    ) {
                      var l = a[r].getAttribute("rel"),
                        c = a[r].getAttribute("index");
                      if (
                        (void 0 === s &&
                          (s =
                            t.globals.markers.size[c] +
                            t.config.markers.hover.sizeOffset),
                        o === parseInt(l, 10))
                      ) {
                        n.newPointSize(o, a[r]);
                        var u = a[r].getAttribute("cx"),
                          d = a[r].getAttribute("cy");
                        n.tooltipPosition.moveXCrosshairs(u),
                          i.fixedTooltip ||
                            n.tooltipPosition.moveTooltip(u, d, s);
                      } else n.oldPointSize(a[r]);
                    }
                  },
                },
                {
                  key: "newPointSize",
                  value: function (e, t) {
                    var n = this.w,
                      i = n.config.markers.hover.size,
                      o =
                        0 === e
                          ? t.parentNode.firstChild
                          : t.parentNode.lastChild;
                    if ("0" !== o.getAttribute("default-marker-size")) {
                      var a = parseInt(o.getAttribute("index"), 10);
                      void 0 === i &&
                        (i =
                          n.globals.markers.size[a] +
                          n.config.markers.hover.sizeOffset),
                        i < 0 && (i = 0);
                      var s = this.ttCtx.tooltipUtil.getPathFromPoint(t, i);
                      t.setAttribute("d", s);
                    }
                  },
                },
                {
                  key: "oldPointSize",
                  value: function (e) {
                    var t = parseFloat(e.getAttribute("default-marker-size")),
                      n = this.ttCtx.tooltipUtil.getPathFromPoint(e, t);
                    e.setAttribute("d", n);
                  },
                },
                {
                  key: "resetPointsSize",
                  value: function () {
                    for (
                      var e = this.w.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                        ),
                        t = 0;
                      t < e.length;
                      t++
                    ) {
                      var n = parseFloat(
                        e[t].getAttribute("default-marker-size")
                      );
                      if (y.isNumber(n) && n >= 0) {
                        var i = this.ttCtx.tooltipUtil.getPathFromPoint(
                          e[t],
                          n
                        );
                        e[t].setAttribute("d", i);
                      } else e[t].setAttribute("d", "M0,0");
                    }
                  },
                },
              ]),
              e
            );
          })(),
          xe = (function () {
            function e(t) {
              r(this, e), (this.w = t.w);
              var n = this.w;
              (this.ttCtx = t),
                (this.isVerticalGroupedRangeBar =
                  !n.globals.isBarHorizontal &&
                  "rangeBar" === n.config.chart.type &&
                  n.config.plotOptions.bar.rangeBarGroupRows);
            }
            return (
              c(e, [
                {
                  key: "getAttr",
                  value: function (e, t) {
                    return parseFloat(e.target.getAttribute(t));
                  },
                },
                {
                  key: "handleHeatTreeTooltip",
                  value: function (e) {
                    var t = e.e,
                      n = e.opt,
                      i = e.x,
                      o = e.y,
                      a = e.type,
                      s = this.ttCtx,
                      r = this.w;
                    if (
                      t.target.classList.contains(
                        "apexcharts-".concat(a, "-rect")
                      )
                    ) {
                      var l = this.getAttr(t, "i"),
                        c = this.getAttr(t, "j"),
                        u = this.getAttr(t, "cx"),
                        d = this.getAttr(t, "cy"),
                        h = this.getAttr(t, "width"),
                        p = this.getAttr(t, "height");
                      if (
                        (s.tooltipLabels.drawSeriesTexts({
                          ttItems: n.ttItems,
                          i: l,
                          j: c,
                          shared: !1,
                          e: t,
                        }),
                        (r.globals.capturedSeriesIndex = l),
                        (r.globals.capturedDataPointIndex = c),
                        (i = u + s.tooltipRect.ttWidth / 2 + h),
                        (o = d + s.tooltipRect.ttHeight / 2 - p / 2),
                        s.tooltipPosition.moveXCrosshairs(u + h / 2),
                        i > r.globals.gridWidth / 2 &&
                          (i = u - s.tooltipRect.ttWidth / 2 + h),
                        s.w.config.tooltip.followCursor)
                      ) {
                        var f = r.globals.dom.elWrap.getBoundingClientRect();
                        (i =
                          r.globals.clientX -
                          f.left -
                          (i > r.globals.gridWidth / 2
                            ? s.tooltipRect.ttWidth
                            : 0)),
                          (o =
                            r.globals.clientY -
                            f.top -
                            (o > r.globals.gridHeight / 2
                              ? s.tooltipRect.ttHeight
                              : 0));
                      }
                    }
                    return { x: i, y: o };
                  },
                },
                {
                  key: "handleMarkerTooltip",
                  value: function (e) {
                    var t,
                      n,
                      i = e.e,
                      o = e.opt,
                      a = e.x,
                      s = e.y,
                      r = this.w,
                      l = this.ttCtx;
                    if (i.target.classList.contains("apexcharts-marker")) {
                      var c = parseInt(o.paths.getAttribute("cx"), 10),
                        u = parseInt(o.paths.getAttribute("cy"), 10),
                        d = parseFloat(o.paths.getAttribute("val"));
                      if (
                        ((n = parseInt(o.paths.getAttribute("rel"), 10)),
                        (t =
                          parseInt(
                            o.paths.parentNode.parentNode.parentNode.getAttribute(
                              "rel"
                            ),
                            10
                          ) - 1),
                        l.intersect)
                      ) {
                        var h = y.findAncestor(o.paths, "apexcharts-series");
                        h &&
                          (t = parseInt(h.getAttribute("data:realIndex"), 10));
                      }
                      if (
                        (l.tooltipLabels.drawSeriesTexts({
                          ttItems: o.ttItems,
                          i: t,
                          j: n,
                          shared: !l.showOnIntersect && r.config.tooltip.shared,
                          e: i,
                        }),
                        "mouseup" === i.type && l.markerClick(i, t, n),
                        (r.globals.capturedSeriesIndex = t),
                        (r.globals.capturedDataPointIndex = n),
                        (a = c),
                        (s =
                          u +
                          r.globals.translateY -
                          1.4 * l.tooltipRect.ttHeight),
                        l.w.config.tooltip.followCursor)
                      ) {
                        var p = l.getElGrid().getBoundingClientRect();
                        s = l.e.clientY + r.globals.translateY - p.top;
                      }
                      d < 0 && (s = u),
                        l.marker.enlargeCurrentPoint(n, o.paths, a, s);
                    }
                    return { x: a, y: s };
                  },
                },
                {
                  key: "handleBarTooltip",
                  value: function (e) {
                    var t,
                      n,
                      i = e.e,
                      o = e.opt,
                      a = this.w,
                      s = this.ttCtx,
                      r = s.getElTooltip(),
                      l = 0,
                      c = 0,
                      u = 0,
                      d = this.getBarTooltipXY({ e: i, opt: o });
                    (t = d.i), d.barHeight;
                    var h = d.j;
                    (a.globals.capturedSeriesIndex = t),
                      (a.globals.capturedDataPointIndex = h),
                      (a.globals.isBarHorizontal && s.tooltipUtil.hasBars()) ||
                      !a.config.tooltip.shared
                        ? ((c = d.x),
                          (u = d.y),
                          (n = Array.isArray(a.config.stroke.width)
                            ? a.config.stroke.width[t]
                            : a.config.stroke.width),
                          (l = c))
                        : a.globals.comboCharts ||
                          a.config.tooltip.shared ||
                          (l /= 2),
                      isNaN(u) &&
                        (u = a.globals.svgHeight - s.tooltipRect.ttHeight);
                    var p = parseInt(
                      o.paths.parentNode.getAttribute("data:realIndex"),
                      10
                    );
                    if (
                      (a.globals.isMultipleYAxis
                        ? a.config.yaxis[p] && a.config.yaxis[p].reversed
                        : a.config.yaxis[0].reversed,
                      c + s.tooltipRect.ttWidth > a.globals.gridWidth
                        ? (c -= s.tooltipRect.ttWidth)
                        : c < 0 && (c = 0),
                      s.w.config.tooltip.followCursor)
                    ) {
                      var f = s.getElGrid().getBoundingClientRect();
                      u = s.e.clientY - f.top;
                    }
                    null === s.tooltip &&
                      (s.tooltip = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-tooltip"
                      )),
                      a.config.tooltip.shared ||
                        (a.globals.comboBarCount > 0
                          ? s.tooltipPosition.moveXCrosshairs(l + n / 2)
                          : s.tooltipPosition.moveXCrosshairs(l)),
                      !s.fixedTooltip &&
                        (!a.config.tooltip.shared ||
                          (a.globals.isBarHorizontal &&
                            s.tooltipUtil.hasBars())) &&
                        ((u =
                          u +
                          a.globals.translateY -
                          s.tooltipRect.ttHeight / 2),
                        (r.style.left = c + a.globals.translateX + "px"),
                        (r.style.top = u + "px"));
                  },
                },
                {
                  key: "getBarTooltipXY",
                  value: function (e) {
                    var t = this,
                      n = e.e,
                      i = e.opt,
                      o = this.w,
                      a = null,
                      s = this.ttCtx,
                      r = 0,
                      l = 0,
                      c = 0,
                      u = 0,
                      d = 0,
                      h = n.target.classList;
                    if (
                      h.contains("apexcharts-bar-area") ||
                      h.contains("apexcharts-candlestick-area") ||
                      h.contains("apexcharts-boxPlot-area") ||
                      h.contains("apexcharts-rangebar-area")
                    ) {
                      var p = n.target,
                        f = p.getBoundingClientRect(),
                        g = i.elGrid.getBoundingClientRect(),
                        m = f.height;
                      d = f.height;
                      var v = f.width,
                        b = parseInt(p.getAttribute("cx"), 10),
                        x = parseInt(p.getAttribute("cy"), 10);
                      u = parseFloat(p.getAttribute("barWidth"));
                      var y =
                        "touchmove" === n.type
                          ? n.touches[0].clientX
                          : n.clientX;
                      (a = parseInt(p.getAttribute("j"), 10)),
                        (r =
                          parseInt(p.parentNode.getAttribute("rel"), 10) - 1);
                      var w = p.getAttribute("data-range-y1"),
                        S = p.getAttribute("data-range-y2");
                      o.globals.comboCharts &&
                        (r = parseInt(
                          p.parentNode.getAttribute("data:realIndex"),
                          10
                        ));
                      var k = function (e) {
                          return o.globals.isXNumeric
                            ? b - v / 2
                            : t.isVerticalGroupedRangeBar
                            ? b + v / 2
                            : b - s.dataPointsDividedWidth + v / 2;
                        },
                        A = function () {
                          return (
                            x -
                            s.dataPointsDividedHeight +
                            m / 2 -
                            s.tooltipRect.ttHeight / 2
                          );
                        };
                      s.tooltipLabels.drawSeriesTexts({
                        ttItems: i.ttItems,
                        i: r,
                        j: a,
                        y1: w ? parseInt(w, 10) : null,
                        y2: S ? parseInt(S, 10) : null,
                        shared: !s.showOnIntersect && o.config.tooltip.shared,
                        e: n,
                      }),
                        o.config.tooltip.followCursor
                          ? o.globals.isBarHorizontal
                            ? ((l = y - g.left + 15), (c = A()))
                            : ((l = k()),
                              (c =
                                n.clientY -
                                g.top -
                                s.tooltipRect.ttHeight / 2 -
                                15))
                          : o.globals.isBarHorizontal
                          ? ((l = b) < s.xyRatios.baseLineInvertedY &&
                              (l = b - s.tooltipRect.ttWidth),
                            (c = A()))
                          : ((l = k()), (c = x));
                    }
                    return {
                      x: l,
                      y: c,
                      barHeight: d,
                      barWidth: u,
                      i: r,
                      j: a,
                    };
                  },
                },
              ]),
              e
            );
          })(),
          ye = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.ttCtx = t);
            }
            return (
              c(e, [
                {
                  key: "drawXaxisTooltip",
                  value: function () {
                    var e = this.w,
                      t = this.ttCtx,
                      n = "bottom" === e.config.xaxis.position;
                    t.xaxisOffY = n
                      ? e.globals.gridHeight + 1
                      : -e.globals.xAxisHeight -
                        e.config.xaxis.axisTicks.height +
                        3;
                    var i = n
                        ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                        : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                      o = e.globals.dom.elWrap;
                    t.isXAxisTooltipEnabled &&
                      null ===
                        e.globals.dom.baseEl.querySelector(
                          ".apexcharts-xaxistooltip"
                        ) &&
                      ((t.xaxisTooltip = document.createElement("div")),
                      t.xaxisTooltip.setAttribute(
                        "class",
                        i + " apexcharts-theme-" + e.config.tooltip.theme
                      ),
                      o.appendChild(t.xaxisTooltip),
                      (t.xaxisTooltipText = document.createElement("div")),
                      t.xaxisTooltipText.classList.add(
                        "apexcharts-xaxistooltip-text"
                      ),
                      (t.xaxisTooltipText.style.fontFamily =
                        e.config.xaxis.tooltip.style.fontFamily ||
                        e.config.chart.fontFamily),
                      (t.xaxisTooltipText.style.fontSize =
                        e.config.xaxis.tooltip.style.fontSize),
                      t.xaxisTooltip.appendChild(t.xaxisTooltipText));
                  },
                },
                {
                  key: "drawYaxisTooltip",
                  value: function () {
                    for (
                      var e = this.w, t = this.ttCtx, n = 0;
                      n < e.config.yaxis.length;
                      n++
                    ) {
                      var i =
                        e.config.yaxis[n].opposite ||
                        e.config.yaxis[n].crosshairs.opposite;
                      t.yaxisOffX = i ? e.globals.gridWidth + 1 : 1;
                      var o =
                          "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                            n,
                            i
                              ? " apexcharts-yaxistooltip-right"
                              : " apexcharts-yaxistooltip-left"
                          ),
                        a = e.globals.dom.elWrap;
                      null ===
                        e.globals.dom.baseEl.querySelector(
                          ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                            n
                          )
                        ) &&
                        ((t.yaxisTooltip = document.createElement("div")),
                        t.yaxisTooltip.setAttribute(
                          "class",
                          o + " apexcharts-theme-" + e.config.tooltip.theme
                        ),
                        a.appendChild(t.yaxisTooltip),
                        0 === n && (t.yaxisTooltipText = []),
                        (t.yaxisTooltipText[n] = document.createElement("div")),
                        t.yaxisTooltipText[n].classList.add(
                          "apexcharts-yaxistooltip-text"
                        ),
                        t.yaxisTooltip.appendChild(t.yaxisTooltipText[n]));
                    }
                  },
                },
                {
                  key: "setXCrosshairWidth",
                  value: function () {
                    var e = this.w,
                      t = this.ttCtx,
                      n = t.getElXCrosshairs();
                    if (
                      ((t.xcrosshairsWidth = parseInt(
                        e.config.xaxis.crosshairs.width,
                        10
                      )),
                      e.globals.comboCharts)
                    ) {
                      var i = e.globals.dom.baseEl.querySelector(
                        ".apexcharts-bar-area"
                      );
                      if (
                        null !== i &&
                        "barWidth" === e.config.xaxis.crosshairs.width
                      ) {
                        var o = parseFloat(i.getAttribute("barWidth"));
                        t.xcrosshairsWidth = o;
                      } else if (
                        "tickWidth" === e.config.xaxis.crosshairs.width
                      ) {
                        var a = e.globals.labels.length;
                        t.xcrosshairsWidth = e.globals.gridWidth / a;
                      }
                    } else if (
                      "tickWidth" === e.config.xaxis.crosshairs.width
                    ) {
                      var s = e.globals.labels.length;
                      t.xcrosshairsWidth = e.globals.gridWidth / s;
                    } else if ("barWidth" === e.config.xaxis.crosshairs.width) {
                      var r = e.globals.dom.baseEl.querySelector(
                        ".apexcharts-bar-area"
                      );
                      if (null !== r) {
                        var l = parseFloat(r.getAttribute("barWidth"));
                        t.xcrosshairsWidth = l;
                      } else t.xcrosshairsWidth = 1;
                    }
                    e.globals.isBarHorizontal && (t.xcrosshairsWidth = 0),
                      null !== n &&
                        t.xcrosshairsWidth > 0 &&
                        n.setAttribute("width", t.xcrosshairsWidth);
                  },
                },
                {
                  key: "handleYCrosshair",
                  value: function () {
                    var e = this.w,
                      t = this.ttCtx;
                    (t.ycrosshairs = e.globals.dom.baseEl.querySelector(
                      ".apexcharts-ycrosshairs"
                    )),
                      (t.ycrosshairsHidden = e.globals.dom.baseEl.querySelector(
                        ".apexcharts-ycrosshairs-hidden"
                      ));
                  },
                },
                {
                  key: "drawYaxisTooltipText",
                  value: function (e, t, n) {
                    var i = this.ttCtx,
                      o = this.w,
                      a = o.globals,
                      s = a.seriesYAxisMap[e];
                    if (i.yaxisTooltips[e] && s.length > 0) {
                      var r = a.yLabelFormatters[e],
                        l = i.getElGrid().getBoundingClientRect(),
                        c = s[0],
                        u = 0;
                      n.yRatio.length > 1 && (u = c);
                      var d = (t - l.top) * n.yRatio[u],
                        h = a.maxYArr[c] - a.minYArr[c],
                        p = a.minYArr[c] + (h - d);
                      o.config.yaxis[e].reversed &&
                        (p = a.maxYArr[c] - (h - d)),
                        i.tooltipPosition.moveYCrosshairs(t - l.top),
                        (i.yaxisTooltipText[e].innerHTML = r(p)),
                        i.tooltipPosition.moveYAxisTooltip(e);
                    }
                  },
                },
              ]),
              e
            );
          })(),
          we = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
              var n = this.w;
              (this.tConfig = n.config.tooltip),
                (this.tooltipUtil = new ge(this)),
                (this.tooltipLabels = new me(this)),
                (this.tooltipPosition = new ve(this)),
                (this.marker = new be(this)),
                (this.intersect = new xe(this)),
                (this.axesTooltip = new ye(this)),
                (this.showOnIntersect = this.tConfig.intersect),
                (this.showTooltipTitle = this.tConfig.x.show),
                (this.fixedTooltip = this.tConfig.fixed.enabled),
                (this.xaxisTooltip = null),
                (this.yaxisTTEls = null),
                (this.isBarShared =
                  !n.globals.isBarHorizontal && this.tConfig.shared),
                (this.lastHoverTime = Date.now());
            }
            return (
              c(e, [
                {
                  key: "getElTooltip",
                  value: function (e) {
                    return (
                      e || (e = this),
                      e.w.globals.dom.baseEl
                        ? e.w.globals.dom.baseEl.querySelector(
                            ".apexcharts-tooltip"
                          )
                        : null
                    );
                  },
                },
                {
                  key: "getElXCrosshairs",
                  value: function () {
                    return this.w.globals.dom.baseEl.querySelector(
                      ".apexcharts-xcrosshairs"
                    );
                  },
                },
                {
                  key: "getElGrid",
                  value: function () {
                    return this.w.globals.dom.baseEl.querySelector(
                      ".apexcharts-grid"
                    );
                  },
                },
                {
                  key: "drawTooltip",
                  value: function (e) {
                    var t = this.w;
                    (this.xyRatios = e),
                      (this.isXAxisTooltipEnabled =
                        t.config.xaxis.tooltip.enabled && t.globals.axisCharts),
                      (this.yaxisTooltips = t.config.yaxis.map(function (e, n) {
                        return !!(
                          e.show &&
                          e.tooltip.enabled &&
                          t.globals.axisCharts
                        );
                      })),
                      (this.allTooltipSeriesGroups = []),
                      t.globals.axisCharts || (this.showTooltipTitle = !1);
                    var n = document.createElement("div");
                    if (
                      (n.classList.add("apexcharts-tooltip"),
                      t.config.tooltip.cssClass &&
                        n.classList.add(t.config.tooltip.cssClass),
                      n.classList.add(
                        "apexcharts-theme-".concat(this.tConfig.theme)
                      ),
                      t.globals.dom.elWrap.appendChild(n),
                      t.globals.axisCharts)
                    ) {
                      this.axesTooltip.drawXaxisTooltip(),
                        this.axesTooltip.drawYaxisTooltip(),
                        this.axesTooltip.setXCrosshairWidth(),
                        this.axesTooltip.handleYCrosshair();
                      var i = new K(this.ctx);
                      this.xAxisTicksPositions = i.getXAxisTicksPositions();
                    }
                    if (
                      ((!t.globals.comboCharts &&
                        !this.tConfig.intersect &&
                        "rangeBar" !== t.config.chart.type) ||
                        this.tConfig.shared ||
                        (this.showOnIntersect = !0),
                      (0 !== t.config.markers.size &&
                        0 !== t.globals.markers.largestSize) ||
                        this.marker.drawDynamicPoints(this),
                      t.globals.collapsedSeries.length !==
                        t.globals.series.length)
                    ) {
                      (this.dataPointsDividedHeight =
                        t.globals.gridHeight / t.globals.dataPoints),
                        (this.dataPointsDividedWidth =
                          t.globals.gridWidth / t.globals.dataPoints),
                        this.showTooltipTitle &&
                          ((this.tooltipTitle = document.createElement("div")),
                          this.tooltipTitle.classList.add(
                            "apexcharts-tooltip-title"
                          ),
                          (this.tooltipTitle.style.fontFamily =
                            this.tConfig.style.fontFamily ||
                            t.config.chart.fontFamily),
                          (this.tooltipTitle.style.fontSize =
                            this.tConfig.style.fontSize),
                          n.appendChild(this.tooltipTitle));
                      var o = t.globals.series.length;
                      (t.globals.xyCharts || t.globals.comboCharts) &&
                        this.tConfig.shared &&
                        (o = this.showOnIntersect
                          ? 1
                          : t.globals.series.length),
                        (this.legendLabels =
                          t.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-legend-text"
                          )),
                        (this.ttItems = this.createTTElements(o)),
                        this.addSVGEvents();
                    }
                  },
                },
                {
                  key: "createTTElements",
                  value: function (e) {
                    for (
                      var t = this,
                        n = this.w,
                        i = [],
                        o = this.getElTooltip(),
                        a = function (a) {
                          var s = document.createElement("div");
                          s.classList.add(
                            "apexcharts-tooltip-series-group",
                            "apexcharts-tooltip-series-group-".concat(a)
                          ),
                            (s.style.order = n.config.tooltip.inverseOrder
                              ? e - a
                              : a + 1);
                          var r = document.createElement("span");
                          r.classList.add("apexcharts-tooltip-marker"),
                            (r.style.backgroundColor = n.globals.colors[a]),
                            s.appendChild(r);
                          var l = document.createElement("div");
                          l.classList.add("apexcharts-tooltip-text"),
                            (l.style.fontFamily =
                              t.tConfig.style.fontFamily ||
                              n.config.chart.fontFamily),
                            (l.style.fontSize = t.tConfig.style.fontSize),
                            ["y", "goals", "z"].forEach(function (e) {
                              var t = document.createElement("div");
                              t.classList.add(
                                "apexcharts-tooltip-".concat(e, "-group")
                              );
                              var n = document.createElement("span");
                              n.classList.add(
                                "apexcharts-tooltip-text-".concat(e, "-label")
                              ),
                                t.appendChild(n);
                              var i = document.createElement("span");
                              i.classList.add(
                                "apexcharts-tooltip-text-".concat(e, "-value")
                              ),
                                t.appendChild(i),
                                l.appendChild(t);
                            }),
                            s.appendChild(l),
                            o.appendChild(s),
                            i.push(s);
                        },
                        s = 0;
                      s < e;
                      s++
                    )
                      a(s);
                    return i;
                  },
                },
                {
                  key: "addSVGEvents",
                  value: function () {
                    var e = this.w,
                      t = e.config.chart.type,
                      n = this.getElTooltip(),
                      i = !(
                        "bar" !== t &&
                        "candlestick" !== t &&
                        "boxPlot" !== t &&
                        "rangeBar" !== t
                      ),
                      o =
                        "area" === t ||
                        "line" === t ||
                        "scatter" === t ||
                        "bubble" === t ||
                        "radar" === t,
                      a = e.globals.dom.Paper.node,
                      s = this.getElGrid();
                    s && (this.seriesBound = s.getBoundingClientRect());
                    var r,
                      l = [],
                      c = [],
                      u = {
                        hoverArea: a,
                        elGrid: s,
                        tooltipEl: n,
                        tooltipY: l,
                        tooltipX: c,
                        ttItems: this.ttItems,
                      };
                    if (
                      e.globals.axisCharts &&
                      (o
                        ? (r = e.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"
                          ))
                        : i
                        ? (r = e.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"
                          ))
                        : ("heatmap" !== t && "treemap" !== t) ||
                          (r = e.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap"
                          )),
                      r && r.length)
                    )
                      for (var d = 0; d < r.length; d++)
                        l.push(r[d].getAttribute("cy")),
                          c.push(r[d].getAttribute("cx"));
                    if (
                      (e.globals.xyCharts && !this.showOnIntersect) ||
                      (e.globals.comboCharts && !this.showOnIntersect) ||
                      (i && this.tooltipUtil.hasBars() && this.tConfig.shared)
                    )
                      this.addPathsEventListeners([a], u);
                    else if (
                      (i && !e.globals.comboCharts) ||
                      (o && this.showOnIntersect)
                    )
                      this.addDatapointEventsListeners(u);
                    else if (
                      !e.globals.axisCharts ||
                      "heatmap" === t ||
                      "treemap" === t
                    ) {
                      var h =
                        e.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series"
                        );
                      this.addPathsEventListeners(h, u);
                    }
                    if (this.showOnIntersect) {
                      var p = e.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker"
                      );
                      p.length > 0 && this.addPathsEventListeners(p, u),
                        this.tooltipUtil.hasBars() &&
                          !this.tConfig.shared &&
                          this.addDatapointEventsListeners(u);
                    }
                  },
                },
                {
                  key: "drawFixedTooltipRect",
                  value: function () {
                    var e = this.w,
                      t = this.getElTooltip(),
                      n = t.getBoundingClientRect(),
                      i = n.width + 10,
                      o = n.height + 10,
                      a = this.tConfig.fixed.offsetX,
                      s = this.tConfig.fixed.offsetY,
                      r = this.tConfig.fixed.position.toLowerCase();
                    return (
                      r.indexOf("right") > -1 &&
                        (a = a + e.globals.svgWidth - i + 10),
                      r.indexOf("bottom") > -1 &&
                        (s = s + e.globals.svgHeight - o - 10),
                      (t.style.left = a + "px"),
                      (t.style.top = s + "px"),
                      { x: a, y: s, ttWidth: i, ttHeight: o }
                    );
                  },
                },
                {
                  key: "addDatapointEventsListeners",
                  value: function (e) {
                    var t = this.w.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area"
                    );
                    this.addPathsEventListeners(t, e);
                  },
                },
                {
                  key: "addPathsEventListeners",
                  value: function (e, t) {
                    for (
                      var n = this,
                        i = function (i) {
                          var o = {
                            paths: e[i],
                            tooltipEl: t.tooltipEl,
                            tooltipY: t.tooltipY,
                            tooltipX: t.tooltipX,
                            elGrid: t.elGrid,
                            hoverArea: t.hoverArea,
                            ttItems: t.ttItems,
                          };
                          [
                            "mousemove",
                            "mouseup",
                            "touchmove",
                            "mouseout",
                            "touchend",
                          ].map(function (t) {
                            return e[i].addEventListener(
                              t,
                              n.onSeriesHover.bind(n, o),
                              { capture: !1, passive: !0 }
                            );
                          });
                        },
                        o = 0;
                      o < e.length;
                      o++
                    )
                      i(o);
                  },
                },
                {
                  key: "onSeriesHover",
                  value: function (e, t) {
                    var n = this,
                      i = Date.now() - this.lastHoverTime;
                    i >= 100
                      ? this.seriesHover(e, t)
                      : (clearTimeout(this.seriesHoverTimeout),
                        (this.seriesHoverTimeout = setTimeout(function () {
                          n.seriesHover(e, t);
                        }, 100 - i)));
                  },
                },
                {
                  key: "seriesHover",
                  value: function (e, t) {
                    var n = this;
                    this.lastHoverTime = Date.now();
                    var i = [],
                      o = this.w;
                    o.config.chart.group && (i = this.ctx.getGroupedCharts()),
                      (o.globals.axisCharts &&
                        ((o.globals.minX === -1 / 0 &&
                          o.globals.maxX === 1 / 0) ||
                          0 === o.globals.dataPoints)) ||
                        (i.length
                          ? i.forEach(function (i) {
                              var o = n.getElTooltip(i),
                                a = {
                                  paths: e.paths,
                                  tooltipEl: o,
                                  tooltipY: e.tooltipY,
                                  tooltipX: e.tooltipX,
                                  elGrid: e.elGrid,
                                  hoverArea: e.hoverArea,
                                  ttItems: i.w.globals.tooltip.ttItems,
                                };
                              i.w.globals.minX === n.w.globals.minX &&
                                i.w.globals.maxX === n.w.globals.maxX &&
                                i.w.globals.tooltip.seriesHoverByContext({
                                  chartCtx: i,
                                  ttCtx: i.w.globals.tooltip,
                                  opt: a,
                                  e: t,
                                });
                            })
                          : this.seriesHoverByContext({
                              chartCtx: this.ctx,
                              ttCtx: this.w.globals.tooltip,
                              opt: e,
                              e: t,
                            }));
                  },
                },
                {
                  key: "seriesHoverByContext",
                  value: function (e) {
                    var t = e.chartCtx,
                      n = e.ttCtx,
                      i = e.opt,
                      o = e.e,
                      a = t.w,
                      s = this.getElTooltip();
                    s &&
                      ((n.tooltipRect = {
                        x: 0,
                        y: 0,
                        ttWidth: s.getBoundingClientRect().width,
                        ttHeight: s.getBoundingClientRect().height,
                      }),
                      (n.e = o),
                      !n.tooltipUtil.hasBars() ||
                        a.globals.comboCharts ||
                        n.isBarShared ||
                        (this.tConfig.onDatasetHover.highlightDataSeries &&
                          new U(t).toggleSeriesOnHover(o, o.target.parentNode)),
                      n.fixedTooltip && n.drawFixedTooltipRect(),
                      a.globals.axisCharts
                        ? n.axisChartsTooltips({
                            e: o,
                            opt: i,
                            tooltipRect: n.tooltipRect,
                          })
                        : n.nonAxisChartsTooltips({
                            e: o,
                            opt: i,
                            tooltipRect: n.tooltipRect,
                          }));
                  },
                },
                {
                  key: "axisChartsTooltips",
                  value: function (e) {
                    var t,
                      n,
                      i = e.e,
                      o = e.opt,
                      a = this.w,
                      s = o.elGrid.getBoundingClientRect(),
                      r =
                        "touchmove" === i.type
                          ? i.touches[0].clientX
                          : i.clientX,
                      l =
                        "touchmove" === i.type
                          ? i.touches[0].clientY
                          : i.clientY;
                    if (
                      ((this.clientY = l),
                      (this.clientX = r),
                      (a.globals.capturedSeriesIndex = -1),
                      (a.globals.capturedDataPointIndex = -1),
                      l < s.top || l > s.top + s.height)
                    )
                      this.handleMouseOut(o);
                    else {
                      if (
                        Array.isArray(this.tConfig.enabledOnSeries) &&
                        !a.config.tooltip.shared
                      ) {
                        var c = parseInt(o.paths.getAttribute("index"), 10);
                        if (this.tConfig.enabledOnSeries.indexOf(c) < 0)
                          return void this.handleMouseOut(o);
                      }
                      var u = this.getElTooltip(),
                        d = this.getElXCrosshairs(),
                        h =
                          a.globals.xyCharts ||
                          ("bar" === a.config.chart.type &&
                            !a.globals.isBarHorizontal &&
                            this.tooltipUtil.hasBars() &&
                            this.tConfig.shared) ||
                          (a.globals.comboCharts && this.tooltipUtil.hasBars());
                      if (
                        "mousemove" === i.type ||
                        "touchmove" === i.type ||
                        "mouseup" === i.type
                      ) {
                        if (
                          a.globals.collapsedSeries.length +
                            a.globals.ancillaryCollapsedSeries.length ===
                          a.globals.series.length
                        )
                          return;
                        null !== d && d.classList.add("apexcharts-active");
                        var p = this.yaxisTooltips.filter(function (e) {
                          return !0 === e;
                        });
                        if (
                          (null !== this.ycrosshairs &&
                            p.length &&
                            this.ycrosshairs.classList.add("apexcharts-active"),
                          h && !this.showOnIntersect)
                        )
                          this.handleStickyTooltip(i, r, l, o);
                        else if (
                          "heatmap" === a.config.chart.type ||
                          "treemap" === a.config.chart.type
                        ) {
                          var f = this.intersect.handleHeatTreeTooltip({
                            e: i,
                            opt: o,
                            x: t,
                            y: n,
                            type: a.config.chart.type,
                          });
                          (t = f.x),
                            (n = f.y),
                            (u.style.left = t + "px"),
                            (u.style.top = n + "px");
                        } else
                          this.tooltipUtil.hasBars() &&
                            this.intersect.handleBarTooltip({ e: i, opt: o }),
                            this.tooltipUtil.hasMarkers() &&
                              this.intersect.handleMarkerTooltip({
                                e: i,
                                opt: o,
                                x: t,
                                y: n,
                              });
                        if (this.yaxisTooltips.length)
                          for (var g = 0; g < a.config.yaxis.length; g++)
                            this.axesTooltip.drawYaxisTooltipText(
                              g,
                              l,
                              this.xyRatios
                            );
                        a.globals.dom.baseEl.classList.add(
                          "apexcharts-tooltip-active"
                        ),
                          o.tooltipEl.classList.add("apexcharts-active");
                      } else
                        ("mouseout" !== i.type && "touchend" !== i.type) ||
                          this.handleMouseOut(o);
                    }
                  },
                },
                {
                  key: "nonAxisChartsTooltips",
                  value: function (e) {
                    var t = e.e,
                      n = e.opt,
                      i = e.tooltipRect,
                      o = this.w,
                      a = n.paths.getAttribute("rel"),
                      s = this.getElTooltip(),
                      r = o.globals.dom.elWrap.getBoundingClientRect();
                    if ("mousemove" === t.type || "touchmove" === t.type) {
                      o.globals.dom.baseEl.classList.add(
                        "apexcharts-tooltip-active"
                      ),
                        s.classList.add("apexcharts-active"),
                        this.tooltipLabels.drawSeriesTexts({
                          ttItems: n.ttItems,
                          i: parseInt(a, 10) - 1,
                          shared: !1,
                        });
                      var l = o.globals.clientX - r.left - i.ttWidth / 2,
                        c = o.globals.clientY - r.top - i.ttHeight - 10;
                      if (
                        ((s.style.left = l + "px"),
                        (s.style.top = c + "px"),
                        o.config.legend.tooltipHoverFormatter)
                      ) {
                        var u = a - 1,
                          d = (0, o.config.legend.tooltipHoverFormatter)(
                            this.legendLabels[u].getAttribute(
                              "data:default-text"
                            ),
                            { seriesIndex: u, dataPointIndex: u, w: o }
                          );
                        this.legendLabels[u].innerHTML = d;
                      }
                    } else
                      ("mouseout" !== t.type && "touchend" !== t.type) ||
                        (s.classList.remove("apexcharts-active"),
                        o.globals.dom.baseEl.classList.remove(
                          "apexcharts-tooltip-active"
                        ),
                        o.config.legend.tooltipHoverFormatter &&
                          this.legendLabels.forEach(function (e) {
                            var t = e.getAttribute("data:default-text");
                            e.innerHTML = decodeURIComponent(t);
                          }));
                  },
                },
                {
                  key: "handleStickyTooltip",
                  value: function (e, t, n, i) {
                    var o = this.w,
                      a = this.tooltipUtil.getNearestValues({
                        context: this,
                        hoverArea: i.hoverArea,
                        elGrid: i.elGrid,
                        clientX: t,
                        clientY: n,
                      }),
                      s = a.j,
                      r = a.capturedSeries;
                    o.globals.collapsedSeriesIndices.includes(r) && (r = null);
                    var l = i.elGrid.getBoundingClientRect();
                    if (a.hoverX < 0 || a.hoverX > l.width)
                      this.handleMouseOut(i);
                    else if (null !== r)
                      this.handleStickyCapturedSeries(e, r, i, s);
                    else if (
                      this.tooltipUtil.isXoverlap(s) ||
                      o.globals.isBarHorizontal
                    ) {
                      var c = o.globals.series.findIndex(function (e, t) {
                        return !o.globals.collapsedSeriesIndices.includes(t);
                      });
                      this.create(e, this, c, s, i.ttItems);
                    }
                  },
                },
                {
                  key: "handleStickyCapturedSeries",
                  value: function (e, t, n, i) {
                    var o = this.w;
                    if (
                      this.tConfig.shared ||
                      null !== o.globals.series[t][i]
                    ) {
                      if (void 0 !== o.globals.series[t][i])
                        this.tConfig.shared &&
                        this.tooltipUtil.isXoverlap(i) &&
                        this.tooltipUtil.isInitialSeriesSameLen()
                          ? this.create(e, this, t, i, n.ttItems)
                          : this.create(e, this, t, i, n.ttItems, !1);
                      else if (this.tooltipUtil.isXoverlap(i)) {
                        var a = o.globals.series.findIndex(function (e, t) {
                          return !o.globals.collapsedSeriesIndices.includes(t);
                        });
                        this.create(e, this, a, i, n.ttItems);
                      }
                    } else this.handleMouseOut(n);
                  },
                },
                {
                  key: "deactivateHoverFilter",
                  value: function () {
                    for (
                      var e = this.w,
                        t = new k(this.ctx),
                        n = e.globals.dom.Paper.select(".apexcharts-bar-area"),
                        i = 0;
                      i < n.length;
                      i++
                    )
                      t.pathMouseLeave(n[i]);
                  },
                },
                {
                  key: "handleMouseOut",
                  value: function (e) {
                    var t = this.w,
                      n = this.getElXCrosshairs();
                    if (
                      (t.globals.dom.baseEl.classList.remove(
                        "apexcharts-tooltip-active"
                      ),
                      e.tooltipEl.classList.remove("apexcharts-active"),
                      this.deactivateHoverFilter(),
                      "bubble" !== t.config.chart.type &&
                        this.marker.resetPointsSize(),
                      null !== n && n.classList.remove("apexcharts-active"),
                      null !== this.ycrosshairs &&
                        this.ycrosshairs.classList.remove("apexcharts-active"),
                      this.isXAxisTooltipEnabled &&
                        this.xaxisTooltip.classList.remove("apexcharts-active"),
                      this.yaxisTooltips.length)
                    ) {
                      null === this.yaxisTTEls &&
                        (this.yaxisTTEls =
                          t.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-yaxistooltip"
                          ));
                      for (var i = 0; i < this.yaxisTTEls.length; i++)
                        this.yaxisTTEls[i].classList.remove(
                          "apexcharts-active"
                        );
                    }
                    t.config.legend.tooltipHoverFormatter &&
                      this.legendLabels.forEach(function (e) {
                        var t = e.getAttribute("data:default-text");
                        e.innerHTML = decodeURIComponent(t);
                      });
                  },
                },
                {
                  key: "markerClick",
                  value: function (e, t, n) {
                    var i = this.w;
                    "function" == typeof i.config.chart.events.markerClick &&
                      i.config.chart.events.markerClick(e, this.ctx, {
                        seriesIndex: t,
                        dataPointIndex: n,
                        w: i,
                      }),
                      this.ctx.events.fireEvent("markerClick", [
                        e,
                        this.ctx,
                        { seriesIndex: t, dataPointIndex: n, w: i },
                      ]);
                  },
                },
                {
                  key: "create",
                  value: function (e, t, n, i, o) {
                    var s,
                      r,
                      l,
                      c,
                      u,
                      d,
                      h,
                      p,
                      f,
                      g,
                      m,
                      v,
                      b,
                      x,
                      y,
                      w,
                      S =
                        arguments.length > 5 && void 0 !== arguments[5]
                          ? arguments[5]
                          : null,
                      A = this.w,
                      C = t;
                    "mouseup" === e.type && this.markerClick(e, n, i),
                      null === S && (S = this.tConfig.shared);
                    var M = this.tooltipUtil.hasMarkers(n),
                      P = this.tooltipUtil.getElBars();
                    if (A.config.legend.tooltipHoverFormatter) {
                      var E = A.config.legend.tooltipHoverFormatter,
                        L = Array.from(this.legendLabels);
                      L.forEach(function (e) {
                        var t = e.getAttribute("data:default-text");
                        e.innerHTML = decodeURIComponent(t);
                      });
                      for (var T = 0; T < L.length; T++) {
                        var O = L[T],
                          R = parseInt(O.getAttribute("i"), 10),
                          I = decodeURIComponent(
                            O.getAttribute("data:default-text")
                          ),
                          N = E(I, {
                            seriesIndex: S ? R : n,
                            dataPointIndex: i,
                            w: A,
                          });
                        if (S)
                          O.innerHTML =
                            A.globals.collapsedSeriesIndices.indexOf(R) < 0
                              ? N
                              : I;
                        else if (((O.innerHTML = R === n ? N : I), n === R))
                          break;
                      }
                    }
                    var _ = a(
                      a(
                        { ttItems: o, i: n, j: i },
                        void 0 !==
                          (null === (s = A.globals.seriesRange) ||
                          void 0 === s ||
                          null === (r = s[n]) ||
                          void 0 === r ||
                          null === (l = r[i]) ||
                          void 0 === l ||
                          null === (c = l.y[0]) ||
                          void 0 === c
                            ? void 0
                            : c.y1) && {
                          y1:
                            null === (u = A.globals.seriesRange) ||
                            void 0 === u ||
                            null === (d = u[n]) ||
                            void 0 === d ||
                            null === (h = d[i]) ||
                            void 0 === h ||
                            null === (p = h.y[0]) ||
                            void 0 === p
                              ? void 0
                              : p.y1,
                        }
                      ),
                      void 0 !==
                        (null === (f = A.globals.seriesRange) ||
                        void 0 === f ||
                        null === (g = f[n]) ||
                        void 0 === g ||
                        null === (m = g[i]) ||
                        void 0 === m ||
                        null === (v = m.y[0]) ||
                        void 0 === v
                          ? void 0
                          : v.y2) && {
                        y2:
                          null === (b = A.globals.seriesRange) ||
                          void 0 === b ||
                          null === (x = b[n]) ||
                          void 0 === x ||
                          null === (y = x[i]) ||
                          void 0 === y ||
                          null === (w = y.y[0]) ||
                          void 0 === w
                            ? void 0
                            : w.y2,
                      }
                    );
                    if (S) {
                      if (
                        (C.tooltipLabels.drawSeriesTexts(
                          a(
                            a({}, _),
                            {},
                            {
                              shared:
                                !this.showOnIntersect && this.tConfig.shared,
                            }
                          )
                        ),
                        M)
                      )
                        A.globals.markers.largestSize > 0
                          ? C.marker.enlargePoints(i)
                          : C.tooltipPosition.moveDynamicPointsOnHover(i);
                      else if (
                        this.tooltipUtil.hasBars() &&
                        ((this.barSeriesHeight =
                          this.tooltipUtil.getBarsHeight(P)),
                        this.barSeriesHeight > 0)
                      ) {
                        var D = new k(this.ctx),
                          z = A.globals.dom.Paper.select(
                            ".apexcharts-bar-area[j='".concat(i, "']")
                          );
                        this.deactivateHoverFilter(),
                          this.tooltipPosition.moveStickyTooltipOverBars(i, n);
                        for (var j = 0; j < z.length; j++)
                          D.pathMouseEnter(z[j]);
                      }
                    } else
                      C.tooltipLabels.drawSeriesTexts(a({ shared: !1 }, _)),
                        this.tooltipUtil.hasBars() &&
                          C.tooltipPosition.moveStickyTooltipOverBars(i, n),
                        M && C.tooltipPosition.moveMarkers(n, i);
                  },
                },
              ]),
              e
            );
          })(),
          Se = (function () {
            function e(t) {
              r(this, e),
                (this.w = t.w),
                (this.barCtx = t),
                (this.totalFormatter =
                  this.w.config.plotOptions.bar.dataLabels.total.formatter),
                this.totalFormatter ||
                  (this.totalFormatter = this.w.config.dataLabels.formatter);
            }
            return (
              c(e, [
                {
                  key: "handleBarDataLabels",
                  value: function (e) {
                    var t,
                      n,
                      i = e.x,
                      o = e.y,
                      a = e.y1,
                      s = e.y2,
                      r = e.i,
                      l = e.j,
                      c = e.realIndex,
                      u = e.columnGroupIndex,
                      d = e.series,
                      h = e.barHeight,
                      p = e.barWidth,
                      f = e.barXPosition,
                      g = e.barYPosition,
                      m = e.visibleSeries,
                      v = e.renderedPath,
                      b = this.w,
                      x = new k(this.barCtx.ctx),
                      y = Array.isArray(this.barCtx.strokeWidth)
                        ? this.barCtx.strokeWidth[c]
                        : this.barCtx.strokeWidth;
                    b.globals.isXNumeric && !b.globals.isBarHorizontal
                      ? ((t = i + parseFloat(p * (m + 1))),
                        (n = o + parseFloat(h * (m + 1)) - y))
                      : ((t = i + parseFloat(p * m)),
                        (n = o + parseFloat(h * m)));
                    var w,
                      S,
                      A = null,
                      C = i,
                      M = o,
                      P = b.config.dataLabels,
                      E = this.barCtx.barOptions.dataLabels,
                      L = this.barCtx.barOptions.dataLabels.total;
                    void 0 !== g &&
                      this.barCtx.isRangeBar &&
                      ((n = g), (M = g)),
                      void 0 !== f &&
                        this.barCtx.isVerticalGroupedRangeBar &&
                        ((t = f), (C = f));
                    var T = P.offsetX,
                      O = P.offsetY,
                      R = { width: 0, height: 0 };
                    if (b.config.dataLabels.enabled) {
                      var I = b.globals.series[r][l];
                      R = x.getTextRects(
                        b.globals.yLabelFormatters[0](I),
                        parseFloat(P.style.fontSize)
                      );
                    }
                    var N = {
                      x: i,
                      y: o,
                      i: r,
                      j: l,
                      realIndex: c,
                      columnGroupIndex: u,
                      renderedPath: v,
                      bcx: t,
                      bcy: n,
                      barHeight: h,
                      barWidth: p,
                      textRects: R,
                      strokeWidth: y,
                      dataLabelsX: C,
                      dataLabelsY: M,
                      dataLabelsConfig: P,
                      barDataLabelsConfig: E,
                      barTotalDataLabelsConfig: L,
                      offX: T,
                      offY: O,
                    };
                    return (
                      (S = this.barCtx.isHorizontal
                        ? this.calculateBarsDataLabelsPosition(N)
                        : this.calculateColumnsDataLabelsPosition(N)),
                      v.attr({
                        cy: S.bcy,
                        cx: S.bcx,
                        j: l,
                        val: b.globals.series[r][l],
                        barHeight: h,
                        barWidth: p,
                      }),
                      (w = this.drawCalculatedDataLabels({
                        x: S.dataLabelsX,
                        y: S.dataLabelsY,
                        val: this.barCtx.isRangeBar
                          ? [a, s]
                          : "100%" === b.config.chart.stackType
                          ? d[r][l]
                          : b.globals.series[r][l],
                        i: c,
                        j: l,
                        barWidth: p,
                        barHeight: h,
                        textRects: R,
                        dataLabelsConfig: P,
                      })),
                      b.config.chart.stacked &&
                        L.enabled &&
                        (A = this.drawTotalDataLabels({
                          x: S.totalDataLabelsX,
                          y: S.totalDataLabelsY,
                          barWidth: p,
                          barHeight: h,
                          realIndex: c,
                          textAnchor: S.totalDataLabelsAnchor,
                          val: this.getStackedTotalDataLabel({
                            realIndex: c,
                            j: l,
                          }),
                          dataLabelsConfig: P,
                          barTotalDataLabelsConfig: L,
                        })),
                      { dataLabels: w, totalDataLabels: A }
                    );
                  },
                },
                {
                  key: "getStackedTotalDataLabel",
                  value: function (e) {
                    var t = e.realIndex,
                      n = e.j,
                      i = this.w,
                      o = this.barCtx.stackedSeriesTotals[n];
                    return (
                      this.totalFormatter &&
                        (o = this.totalFormatter(
                          o,
                          a(
                            a({}, i),
                            {},
                            { seriesIndex: t, dataPointIndex: n, w: i }
                          )
                        )),
                      o
                    );
                  },
                },
                {
                  key: "calculateColumnsDataLabelsPosition",
                  value: function (e) {
                    var t = this.w,
                      n = e.i,
                      i = e.j,
                      o = e.realIndex;
                    e.columnGroupIndex;
                    var a,
                      s,
                      r = e.y,
                      l = e.bcx,
                      c = e.barWidth,
                      u = e.barHeight,
                      d = e.textRects,
                      h = e.dataLabelsX,
                      p = e.dataLabelsY,
                      f = e.dataLabelsConfig,
                      g = e.barDataLabelsConfig,
                      m = e.barTotalDataLabelsConfig,
                      v = e.strokeWidth,
                      b = e.offX,
                      x = e.offY,
                      y = l;
                    u = Math.abs(u);
                    var w =
                        "vertical" ===
                        t.config.plotOptions.bar.dataLabels.orientation,
                      S = this.barCtx.barHelpers.getZeroValueEncounters({
                        i: n,
                        j: i,
                      }).zeroEncounters;
                    l -= v / 2;
                    var A = t.globals.gridWidth / t.globals.dataPoints;
                    this.barCtx.isVerticalGroupedRangeBar
                      ? (h += c / 2)
                      : ((h = t.globals.isXNumeric
                          ? l - c / 2 + b
                          : l - A + c / 2 + b),
                        S > 0 &&
                          t.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                          (h -= c * S)),
                      w && (h = h + d.height / 2 - v / 2 - 2);
                    var C = t.globals.series[n][i] < 0,
                      M = r;
                    switch (
                      (this.barCtx.isReversed && (M = r + (C ? u : -u)),
                      g.position)
                    ) {
                      case "center":
                        p = w
                          ? C
                            ? M - u / 2 + x
                            : M + u / 2 - x
                          : C
                          ? M - u / 2 + d.height / 2 + x
                          : M + u / 2 + d.height / 2 - x;
                        break;
                      case "bottom":
                        p = w
                          ? C
                            ? M - u + x
                            : M + u - x
                          : C
                          ? M - u + d.height + v + x
                          : M + u - d.height / 2 + v - x;
                        break;
                      case "top":
                        p = w
                          ? C
                            ? M + x
                            : M - x
                          : C
                          ? M - d.height / 2 - x
                          : M + d.height + x;
                    }
                    if (
                      this.barCtx.lastActiveBarSerieIndex === o &&
                      m.enabled
                    ) {
                      var P = new k(this.barCtx.ctx).getTextRects(
                        this.getStackedTotalDataLabel({ realIndex: o, j: i }),
                        f.fontSize
                      );
                      a = C
                        ? M - P.height / 2 - x - m.offsetY + 18
                        : M + P.height + x + m.offsetY - 18;
                      var E = A;
                      s =
                        y +
                        (t.globals.isXNumeric
                          ? (-c * t.globals.barGroups.length) / 2
                          : (t.globals.barGroups.length * c) / 2 -
                            (t.globals.barGroups.length - 1) * c -
                            E) +
                        m.offsetX;
                    }
                    return (
                      t.config.chart.stacked ||
                        (p < 0
                          ? (p = 0 + v)
                          : p + d.height / 3 > t.globals.gridHeight &&
                            (p = t.globals.gridHeight - v)),
                      {
                        bcx: l,
                        bcy: r,
                        dataLabelsX: h,
                        dataLabelsY: p,
                        totalDataLabelsX: s,
                        totalDataLabelsY: a,
                        totalDataLabelsAnchor: "middle",
                      }
                    );
                  },
                },
                {
                  key: "calculateBarsDataLabelsPosition",
                  value: function (e) {
                    var t = this.w,
                      n = e.x,
                      i = e.i,
                      o = e.j,
                      a = e.realIndex;
                    e.columnGroupIndex;
                    var s = e.bcy,
                      r = e.barHeight,
                      l = e.barWidth,
                      c = e.textRects,
                      u = e.dataLabelsX,
                      d = e.strokeWidth,
                      h = e.dataLabelsConfig,
                      p = e.barDataLabelsConfig,
                      f = e.barTotalDataLabelsConfig,
                      g = e.offX,
                      m = e.offY,
                      v = t.globals.gridHeight / t.globals.dataPoints;
                    l = Math.abs(l);
                    var b,
                      x,
                      y =
                        s -
                        (this.barCtx.isRangeBar ? 0 : v) +
                        r / 2 +
                        c.height / 2 +
                        m -
                        3,
                      w = "start",
                      S = t.globals.series[i][o] < 0,
                      A = n;
                    switch (
                      (this.barCtx.isReversed &&
                        ((A = n + (S ? -l : l)), (w = S ? "start" : "end")),
                      p.position)
                    ) {
                      case "center":
                        u = S
                          ? A + l / 2 - g
                          : Math.max(c.width / 2, A - l / 2) + g;
                        break;
                      case "bottom":
                        u = S
                          ? A + l - d - Math.round(c.width / 2) - g
                          : A - l + d + Math.round(c.width / 2) + g;
                        break;
                      case "top":
                        u = S
                          ? A - d + Math.round(c.width / 2) - g
                          : A - d - Math.round(c.width / 2) + g;
                    }
                    if (
                      this.barCtx.lastActiveBarSerieIndex === a &&
                      f.enabled
                    ) {
                      var C = new k(this.barCtx.ctx).getTextRects(
                        this.getStackedTotalDataLabel({ realIndex: a, j: o }),
                        h.fontSize
                      );
                      S
                        ? ((b = A - d - g - f.offsetX), (w = "end"))
                        : (b =
                            A +
                            g +
                            f.offsetX +
                            (this.barCtx.isReversed ? -(l + d) : d)),
                        (x = y - c.height / 2 + C.height / 2 + f.offsetY + d);
                    }
                    return (
                      t.config.chart.stacked ||
                        (u < 0
                          ? (u = u + c.width + d)
                          : u + c.width / 2 > t.globals.gridWidth &&
                            (u = t.globals.gridWidth - c.width - d)),
                      {
                        bcx: n,
                        bcy: s,
                        dataLabelsX: u,
                        dataLabelsY: y,
                        totalDataLabelsX: b,
                        totalDataLabelsY: x,
                        totalDataLabelsAnchor: w,
                      }
                    );
                  },
                },
                {
                  key: "drawCalculatedDataLabels",
                  value: function (e) {
                    var t = e.x,
                      n = e.y,
                      i = e.val,
                      o = e.i,
                      s = e.j,
                      r = e.textRects,
                      l = e.barHeight,
                      c = e.barWidth,
                      u = e.dataLabelsConfig,
                      d = this.w,
                      h = "rotate(0)";
                    "vertical" ===
                      d.config.plotOptions.bar.dataLabels.orientation &&
                      (h = "rotate(-90, ".concat(t, ", ").concat(n, ")"));
                    var p = new V(this.barCtx.ctx),
                      f = new k(this.barCtx.ctx),
                      g = u.formatter,
                      m = null,
                      v = d.globals.collapsedSeriesIndices.indexOf(o) > -1;
                    if (u.enabled && !v) {
                      m = f.group({
                        class: "apexcharts-data-labels",
                        transform: h,
                      });
                      var b = "";
                      void 0 !== i &&
                        (b = g(
                          i,
                          a(
                            a({}, d),
                            {},
                            { seriesIndex: o, dataPointIndex: s, w: d }
                          )
                        )),
                        !i &&
                          d.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                          (b = "");
                      var x = d.globals.series[o][s] < 0,
                        y = d.config.plotOptions.bar.dataLabels.position;
                      "vertical" ===
                        d.config.plotOptions.bar.dataLabels.orientation &&
                        ("top" === y && (u.textAnchor = x ? "end" : "start"),
                        "center" === y && (u.textAnchor = "middle"),
                        "bottom" === y && (u.textAnchor = x ? "end" : "start")),
                        this.barCtx.isRangeBar &&
                          this.barCtx.barOptions.dataLabels
                            .hideOverflowingLabels &&
                          c <
                            f.getTextRects(b, parseFloat(u.style.fontSize))
                              .width &&
                          (b = ""),
                        d.config.chart.stacked &&
                          this.barCtx.barOptions.dataLabels
                            .hideOverflowingLabels &&
                          (this.barCtx.isHorizontal
                            ? r.width / 1.6 > Math.abs(c) && (b = "")
                            : r.height / 1.6 > Math.abs(l) && (b = ""));
                      var w = a({}, u);
                      this.barCtx.isHorizontal &&
                        i < 0 &&
                        ("start" === u.textAnchor
                          ? (w.textAnchor = "end")
                          : "end" === u.textAnchor && (w.textAnchor = "start")),
                        p.plotDataLabelsText({
                          x: t,
                          y: n,
                          text: b,
                          i: o,
                          j: s,
                          parent: m,
                          dataLabelsConfig: w,
                          alwaysDrawDataLabel: !0,
                          offsetCorrection: !0,
                        });
                    }
                    return m;
                  },
                },
                {
                  key: "drawTotalDataLabels",
                  value: function (e) {
                    var t = e.x,
                      n = e.y,
                      i = e.val;
                    e.barWidth, e.barHeight;
                    var o = e.realIndex,
                      a = e.textAnchor,
                      s = e.barTotalDataLabelsConfig;
                    this.w;
                    var r,
                      l = new k(this.barCtx.ctx);
                    return (
                      s.enabled &&
                        void 0 !== t &&
                        void 0 !== n &&
                        this.barCtx.lastActiveBarSerieIndex === o &&
                        (r = l.drawText({
                          x: t,
                          y: n,
                          foreColor: s.style.color,
                          text: i,
                          textAnchor: a,
                          fontFamily: s.style.fontFamily,
                          fontSize: s.style.fontSize,
                          fontWeight: s.style.fontWeight,
                        })),
                      r
                    );
                  },
                },
              ]),
              e
            );
          })(),
          ke = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.barCtx = t);
            }
            return (
              c(e, [
                {
                  key: "initVariables",
                  value: function (e) {
                    var t = this.w;
                    (this.barCtx.series = e),
                      (this.barCtx.totalItems = 0),
                      (this.barCtx.seriesLen = 0),
                      (this.barCtx.visibleI = -1),
                      (this.barCtx.visibleItems = 1);
                    for (var n = 0; n < e.length; n++)
                      if (
                        (e[n].length > 0 &&
                          ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                          (this.barCtx.totalItems += e[n].length)),
                        t.globals.isXNumeric)
                      )
                        for (var i = 0; i < e[n].length; i++)
                          t.globals.seriesX[n][i] > t.globals.minX &&
                            t.globals.seriesX[n][i] < t.globals.maxX &&
                            this.barCtx.visibleItems++;
                      else this.barCtx.visibleItems = t.globals.dataPoints;
                    0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1),
                      (this.barCtx.zeroSerieses = []),
                      t.globals.comboCharts ||
                        this.checkZeroSeries({ series: e });
                  },
                },
                {
                  key: "initialPositions",
                  value: function () {
                    var e,
                      t,
                      n,
                      i,
                      o,
                      a,
                      s,
                      r,
                      l = this.w,
                      c = l.globals.dataPoints;
                    this.barCtx.isRangeBar && (c = l.globals.labels.length);
                    var u = this.barCtx.seriesLen;
                    if (
                      (l.config.plotOptions.bar.rangeBarGroupRows && (u = 1),
                      this.barCtx.isHorizontal)
                    )
                      (o = (n = l.globals.gridHeight / c) / u),
                        l.globals.isXNumeric &&
                          (o =
                            (n =
                              l.globals.gridHeight / this.barCtx.totalItems) /
                            this.barCtx.seriesLen),
                        (o =
                          (o * parseInt(this.barCtx.barOptions.barHeight, 10)) /
                          100),
                        -1 ===
                          String(this.barCtx.barOptions.barHeight).indexOf(
                            "%"
                          ) &&
                          (o = parseInt(this.barCtx.barOptions.barHeight, 10)),
                        (r =
                          this.barCtx.baseLineInvertedY +
                          l.globals.padHorizontal +
                          (this.barCtx.isReversed ? l.globals.gridWidth : 0) -
                          (this.barCtx.isReversed
                            ? 2 * this.barCtx.baseLineInvertedY
                            : 0)),
                        this.barCtx.isFunnel && (r = l.globals.gridWidth / 2),
                        (t = (n - o * this.barCtx.seriesLen) / 2);
                    else {
                      if (
                        ((i = l.globals.gridWidth / this.barCtx.visibleItems),
                        l.config.xaxis.convertedCatToNumeric &&
                          (i = l.globals.gridWidth / l.globals.dataPoints),
                        (a =
                          ((i / u) *
                            parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                          100),
                        l.globals.isXNumeric)
                      ) {
                        var d = this.barCtx.xRatio;
                        l.globals.minXDiff &&
                          0.5 !== l.globals.minXDiff &&
                          l.globals.minXDiff / d > 0 &&
                          (i = l.globals.minXDiff / d),
                          (a =
                            ((i / u) *
                              parseInt(
                                this.barCtx.barOptions.columnWidth,
                                10
                              )) /
                            100) < 1 && (a = 1);
                      }
                      -1 ===
                        String(this.barCtx.barOptions.columnWidth).indexOf(
                          "%"
                        ) &&
                        (a = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                        (s =
                          l.globals.gridHeight -
                          this.barCtx.baseLineY[this.barCtx.translationsIndex] -
                          (this.barCtx.isReversed ? l.globals.gridHeight : 0) +
                          (this.barCtx.isReversed
                            ? 2 *
                              this.barCtx.baseLineY[
                                this.barCtx.translationsIndex
                              ]
                            : 0)),
                        (e =
                          l.globals.padHorizontal +
                          (i - a * this.barCtx.seriesLen) / 2);
                    }
                    return (
                      (l.globals.barHeight = o),
                      (l.globals.barWidth = a),
                      {
                        x: e,
                        y: t,
                        yDivision: n,
                        xDivision: i,
                        barHeight: o,
                        barWidth: a,
                        zeroH: s,
                        zeroW: r,
                      }
                    );
                  },
                },
                {
                  key: "initializeStackedPrevVars",
                  value: function (e) {
                    e.w.globals.seriesGroups.forEach(function (t) {
                      e[t] || (e[t] = {}),
                        (e[t].prevY = []),
                        (e[t].prevX = []),
                        (e[t].prevYF = []),
                        (e[t].prevXF = []),
                        (e[t].prevYVal = []),
                        (e[t].prevXVal = []);
                    });
                  },
                },
                {
                  key: "initializeStackedXYVars",
                  value: function (e) {
                    e.w.globals.seriesGroups.forEach(function (t) {
                      e[t] || (e[t] = {}),
                        (e[t].xArrj = []),
                        (e[t].xArrjF = []),
                        (e[t].xArrjVal = []),
                        (e[t].yArrj = []),
                        (e[t].yArrjF = []),
                        (e[t].yArrjVal = []);
                    });
                  },
                },
                {
                  key: "getPathFillColor",
                  value: function (e, t, n, i) {
                    var o,
                      a,
                      s,
                      r,
                      l,
                      c = this.w,
                      u = new W(this.barCtx.ctx),
                      d = null,
                      h = this.barCtx.barOptions.distributed ? n : t;
                    return (
                      this.barCtx.barOptions.colors.ranges.length > 0 &&
                        this.barCtx.barOptions.colors.ranges.map(function (i) {
                          e[t][n] >= i.from && e[t][n] <= i.to && (d = i.color);
                        }),
                      null !== (o = c.config.series[t].data[n]) &&
                        void 0 !== o &&
                        o.fillColor &&
                        (d = c.config.series[t].data[n].fillColor),
                      u.fillPath({
                        seriesNumber: this.barCtx.barOptions.distributed
                          ? h
                          : i,
                        dataPointIndex: n,
                        color: d,
                        value: e[t][n],
                        fillConfig:
                          null === (a = c.config.series[t].data[n]) ||
                          void 0 === a
                            ? void 0
                            : a.fill,
                        fillType:
                          null !== (s = c.config.series[t].data[n]) &&
                          void 0 !== s &&
                          null !== (r = s.fill) &&
                          void 0 !== r &&
                          r.type
                            ? null === (l = c.config.series[t].data[n]) ||
                              void 0 === l
                              ? void 0
                              : l.fill.type
                            : Array.isArray(c.config.fill.type)
                            ? c.config.fill.type[i]
                            : c.config.fill.type,
                      })
                    );
                  },
                },
                {
                  key: "getStrokeWidth",
                  value: function (e, t, n) {
                    var i = 0,
                      o = this.w;
                    return (
                      void 0 === this.barCtx.series[e][t] ||
                      null === this.barCtx.series[e][t]
                        ? (this.barCtx.isNullValue = !0)
                        : (this.barCtx.isNullValue = !1),
                      o.config.stroke.show &&
                        (this.barCtx.isNullValue ||
                          (i = Array.isArray(this.barCtx.strokeWidth)
                            ? this.barCtx.strokeWidth[n]
                            : this.barCtx.strokeWidth)),
                      i
                    );
                  },
                },
                {
                  key: "shouldApplyRadius",
                  value: function (e) {
                    var t = this.w,
                      n = !1;
                    return (
                      t.config.plotOptions.bar.borderRadius > 0 &&
                        (t.config.chart.stacked &&
                        "last" ===
                          t.config.plotOptions.bar.borderRadiusWhenStacked
                          ? this.barCtx.lastActiveBarSerieIndex === e &&
                            (n = !0)
                          : (n = !0)),
                      n
                    );
                  },
                },
                {
                  key: "barBackground",
                  value: function (e) {
                    var t = e.j,
                      n = e.i,
                      i = e.x1,
                      o = e.x2,
                      a = e.y1,
                      s = e.y2,
                      r = e.elSeries,
                      l = this.w,
                      c = new k(this.barCtx.ctx),
                      u = new U(this.barCtx.ctx).getActiveConfigSeriesIndex();
                    if (
                      this.barCtx.barOptions.colors.backgroundBarColors.length >
                        0 &&
                      u === n
                    ) {
                      t >=
                        this.barCtx.barOptions.colors.backgroundBarColors
                          .length &&
                        (t %=
                          this.barCtx.barOptions.colors.backgroundBarColors
                            .length);
                      var d =
                          this.barCtx.barOptions.colors.backgroundBarColors[t],
                        h = c.drawRect(
                          void 0 !== i ? i : 0,
                          void 0 !== a ? a : 0,
                          void 0 !== o ? o : l.globals.gridWidth,
                          void 0 !== s ? s : l.globals.gridHeight,
                          this.barCtx.barOptions.colors.backgroundBarRadius,
                          d,
                          this.barCtx.barOptions.colors.backgroundBarOpacity
                        );
                      r.add(h),
                        h.node.classList.add("apexcharts-backgroundBar");
                    }
                  },
                },
                {
                  key: "getColumnPaths",
                  value: function (e) {
                    var t,
                      n = e.barWidth,
                      i = e.barXPosition,
                      o = e.y1,
                      a = e.y2,
                      s = e.strokeWidth,
                      r = e.seriesGroup,
                      l = e.realIndex,
                      c = e.i,
                      u = e.j,
                      d = e.w,
                      h = new k(this.barCtx.ctx);
                    (s = Array.isArray(s) ? s[l] : s) || (s = 0);
                    var p = n,
                      f = i;
                    null !== (t = d.config.series[l].data[u]) &&
                      void 0 !== t &&
                      t.columnWidthOffset &&
                      ((f =
                        i - d.config.series[l].data[u].columnWidthOffset / 2),
                      (p = n + d.config.series[l].data[u].columnWidthOffset));
                    var g = s / 2,
                      m = f + g,
                      v = f + p - g;
                    (o += 0.001 - g), (a += 0.001 + g);
                    var b = h.move(m, o),
                      x = h.move(m, o),
                      y = h.line(v, o);
                    if (
                      (d.globals.previousPaths.length > 0 &&
                        (x = this.barCtx.getPreviousPath(l, u, !1)),
                      (b =
                        b +
                        h.line(m, a) +
                        h.line(v, a) +
                        h.line(v, o) +
                        ("around" ===
                        d.config.plotOptions.bar.borderRadiusApplication
                          ? " Z"
                          : " z")),
                      (x =
                        x +
                        h.line(m, o) +
                        y +
                        y +
                        y +
                        y +
                        y +
                        h.line(m, o) +
                        ("around" ===
                        d.config.plotOptions.bar.borderRadiusApplication
                          ? " Z"
                          : " z")),
                      this.shouldApplyRadius(l) &&
                        (b = h.roundPathCorners(
                          b,
                          d.config.plotOptions.bar.borderRadius
                        )),
                      d.config.chart.stacked)
                    ) {
                      var w = this.barCtx;
                      (w = this.barCtx[r]).yArrj.push(a - g),
                        w.yArrjF.push(Math.abs(o - a + s)),
                        w.yArrjVal.push(this.barCtx.series[c][u]);
                    }
                    return { pathTo: b, pathFrom: x };
                  },
                },
                {
                  key: "getBarpaths",
                  value: function (e) {
                    var t,
                      n = e.barYPosition,
                      i = e.barHeight,
                      o = e.x1,
                      a = e.x2,
                      s = e.strokeWidth,
                      r = e.seriesGroup,
                      l = e.realIndex,
                      c = e.i,
                      u = e.j,
                      d = e.w,
                      h = new k(this.barCtx.ctx);
                    (s = Array.isArray(s) ? s[l] : s) || (s = 0);
                    var p = n,
                      f = i;
                    null !== (t = d.config.series[l].data[u]) &&
                      void 0 !== t &&
                      t.barHeightOffset &&
                      ((p = n - d.config.series[l].data[u].barHeightOffset / 2),
                      (f = i + d.config.series[l].data[u].barHeightOffset));
                    var g = s / 2,
                      m = p + g,
                      v = p + f - g;
                    (o += 0.001 - g), (a += 0.001 + g);
                    var b = h.move(o, m),
                      x = h.move(o, m);
                    d.globals.previousPaths.length > 0 &&
                      (x = this.barCtx.getPreviousPath(l, u, !1));
                    var y = h.line(o, v);
                    if (
                      ((b =
                        b +
                        h.line(a, m) +
                        h.line(a, v) +
                        y +
                        ("around" ===
                        d.config.plotOptions.bar.borderRadiusApplication
                          ? " Z"
                          : " z")),
                      (x =
                        x +
                        h.line(o, m) +
                        y +
                        y +
                        y +
                        y +
                        y +
                        h.line(o, m) +
                        ("around" ===
                        d.config.plotOptions.bar.borderRadiusApplication
                          ? " Z"
                          : " z")),
                      this.shouldApplyRadius(l) &&
                        (b = h.roundPathCorners(
                          b,
                          d.config.plotOptions.bar.borderRadius
                        )),
                      d.config.chart.stacked)
                    ) {
                      var w = this.barCtx;
                      (w = this.barCtx[r]).xArrj.push(a + g),
                        w.xArrjF.push(Math.abs(o - a)),
                        w.xArrjVal.push(this.barCtx.series[c][u]);
                    }
                    return { pathTo: b, pathFrom: x };
                  },
                },
                {
                  key: "checkZeroSeries",
                  value: function (e) {
                    for (
                      var t = e.series, n = this.w, i = 0;
                      i < t.length;
                      i++
                    ) {
                      for (
                        var o = 0, a = 0;
                        a < t[n.globals.maxValsInArrayIndex].length;
                        a++
                      )
                        o += t[i][a];
                      0 === o && this.barCtx.zeroSerieses.push(i);
                    }
                  },
                },
                {
                  key: "getXForValue",
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 &&
                      void 0 !== arguments[2] &&
                      !arguments[2]
                        ? null
                        : t;
                    return (
                      null != e &&
                        (n =
                          t +
                          e / this.barCtx.invertedYRatio -
                          2 *
                            (this.barCtx.isReversed
                              ? e / this.barCtx.invertedYRatio
                              : 0)),
                      n
                    );
                  },
                },
                {
                  key: "getYForValue",
                  value: function (e, t, n) {
                    var i =
                      arguments.length > 3 &&
                      void 0 !== arguments[3] &&
                      !arguments[3]
                        ? null
                        : t;
                    return (
                      null != e &&
                        (i =
                          t -
                          e / this.barCtx.yRatio[n] +
                          2 *
                            (this.barCtx.isReversed
                              ? e / this.barCtx.yRatio[n]
                              : 0)),
                      i
                    );
                  },
                },
                {
                  key: "getGoalValues",
                  value: function (e, t, n, i, o, s) {
                    var r = this,
                      l = this.w,
                      c = [],
                      d = function (i, o) {
                        var a;
                        c.push(
                          (u(
                            (a = {}),
                            e,
                            "x" === e
                              ? r.getXForValue(i, t, !1)
                              : r.getYForValue(i, n, s, !1)
                          ),
                          u(a, "attrs", o),
                          a)
                        );
                      };
                    if (
                      (l.globals.seriesGoals[i] &&
                        l.globals.seriesGoals[i][o] &&
                        Array.isArray(l.globals.seriesGoals[i][o]) &&
                        l.globals.seriesGoals[i][o].forEach(function (e) {
                          d(e.value, e);
                        }),
                      this.barCtx.barOptions.isDumbbell &&
                        l.globals.seriesRange.length)
                    ) {
                      var h = this.barCtx.barOptions.dumbbellColors
                          ? this.barCtx.barOptions.dumbbellColors
                          : l.globals.colors,
                        p = {
                          strokeHeight:
                            "x" === e ? 0 : l.globals.markers.size[i],
                          strokeWidth:
                            "x" === e ? l.globals.markers.size[i] : 0,
                          strokeDashArray: 0,
                          strokeLineCap: "round",
                          strokeColor: Array.isArray(h[i]) ? h[i][0] : h[i],
                        };
                      d(l.globals.seriesRangeStart[i][o], p),
                        d(
                          l.globals.seriesRangeEnd[i][o],
                          a(
                            a({}, p),
                            {},
                            {
                              strokeColor: Array.isArray(h[i]) ? h[i][1] : h[i],
                            }
                          )
                        );
                    }
                    return c;
                  },
                },
                {
                  key: "drawGoalLine",
                  value: function (e) {
                    var t = e.barXPosition,
                      n = e.barYPosition,
                      i = e.goalX,
                      o = e.goalY,
                      a = e.barWidth,
                      s = e.barHeight,
                      r = new k(this.barCtx.ctx),
                      l = r.group({ className: "apexcharts-bar-goals-groups" });
                    l.node.classList.add("apexcharts-element-hidden"),
                      this.barCtx.w.globals.delayedElements.push({
                        el: l.node,
                      }),
                      l.attr(
                        "clip-path",
                        "url(#gridRectMarkerMask".concat(
                          this.barCtx.w.globals.cuid,
                          ")"
                        )
                      );
                    var c = null;
                    return (
                      this.barCtx.isHorizontal
                        ? Array.isArray(i) &&
                          i.forEach(function (e) {
                            if (e.x >= -1 && e.x <= r.w.globals.gridWidth + 1) {
                              var t =
                                  void 0 !== e.attrs.strokeHeight
                                    ? e.attrs.strokeHeight
                                    : s / 2,
                                i = n + t + s / 2;
                              (c = r.drawLine(
                                e.x,
                                i - 2 * t,
                                e.x,
                                i,
                                e.attrs.strokeColor
                                  ? e.attrs.strokeColor
                                  : void 0,
                                e.attrs.strokeDashArray,
                                e.attrs.strokeWidth ? e.attrs.strokeWidth : 2,
                                e.attrs.strokeLineCap
                              )),
                                l.add(c);
                            }
                          })
                        : Array.isArray(o) &&
                          o.forEach(function (e) {
                            if (
                              e.y >= -1 &&
                              e.y <= r.w.globals.gridHeight + 1
                            ) {
                              var n =
                                  void 0 !== e.attrs.strokeWidth
                                    ? e.attrs.strokeWidth
                                    : a / 2,
                                i = t + n + a / 2;
                              (c = r.drawLine(
                                i - 2 * n,
                                e.y,
                                i,
                                e.y,
                                e.attrs.strokeColor
                                  ? e.attrs.strokeColor
                                  : void 0,
                                e.attrs.strokeDashArray,
                                e.attrs.strokeHeight ? e.attrs.strokeHeight : 2,
                                e.attrs.strokeLineCap
                              )),
                                l.add(c);
                            }
                          }),
                      l
                    );
                  },
                },
                {
                  key: "drawBarShadow",
                  value: function (e) {
                    var t = e.prevPaths,
                      n = e.currPaths,
                      i = e.color,
                      o = this.w,
                      a = t.x,
                      s = t.x1,
                      r = t.barYPosition,
                      l = n.x,
                      c = n.x1,
                      u = n.barYPosition,
                      d = r + n.barHeight,
                      h = new k(this.barCtx.ctx),
                      p = new y(),
                      f =
                        h.move(s, d) +
                        h.line(a, d) +
                        h.line(l, u) +
                        h.line(c, u) +
                        h.line(s, d) +
                        ("around" ===
                        o.config.plotOptions.bar.borderRadiusApplication
                          ? " Z"
                          : " z");
                    return h.drawPath({
                      d: f,
                      fill: p.shadeColor(0.5, y.rgb2hex(i)),
                      stroke: "none",
                      strokeWidth: 0,
                      fillOpacity: 1,
                      classes: "apexcharts-bar-shadows",
                    });
                  },
                },
                {
                  key: "getZeroValueEncounters",
                  value: function (e) {
                    var t,
                      n = e.i,
                      i = e.j,
                      o = this.w,
                      a = 0,
                      s = 0;
                    return (
                      (o.config.plotOptions.bar.horizontal
                        ? o.globals.series.map(function (e, t) {
                            return t;
                          })
                        : (null === (t = o.globals.columnSeries) || void 0 === t
                            ? void 0
                            : t.i.map(function (e) {
                                return e;
                              })) || []
                      ).forEach(function (e) {
                        var t = o.globals.seriesPercent[e][i];
                        t && a++, e < n && 0 === t && s++;
                      }),
                      { nonZeroColumns: a, zeroEncounters: s }
                    );
                  },
                },
                {
                  key: "getGroupIndex",
                  value: function (e) {
                    var t = this.w,
                      n = t.globals.seriesGroups.findIndex(function (n) {
                        return n.indexOf(t.globals.seriesNames[e]) > -1;
                      }),
                      i = this.barCtx.columnGroupIndices,
                      o = i.indexOf(n);
                    return (
                      o < 0 && (i.push(n), (o = i.length - 1)),
                      { groupIndex: n, columnGroupIndex: o }
                    );
                  },
                },
              ]),
              e
            );
          })(),
          Ae = (function () {
            function e(t, n) {
              r(this, e), (this.ctx = t), (this.w = t.w);
              var i = this.w;
              (this.barOptions = i.config.plotOptions.bar),
                (this.isHorizontal = this.barOptions.horizontal),
                (this.strokeWidth = i.config.stroke.width),
                (this.isNullValue = !1),
                (this.isRangeBar =
                  i.globals.seriesRange.length && this.isHorizontal),
                (this.isVerticalGroupedRangeBar =
                  !i.globals.isBarHorizontal &&
                  i.globals.seriesRange.length &&
                  i.config.plotOptions.bar.rangeBarGroupRows),
                (this.isFunnel = this.barOptions.isFunnel),
                (this.xyRatios = n),
                null !== this.xyRatios &&
                  ((this.xRatio = n.xRatio),
                  (this.yRatio = n.yRatio),
                  (this.invertedXRatio = n.invertedXRatio),
                  (this.invertedYRatio = n.invertedYRatio),
                  (this.baseLineY = n.baseLineY),
                  (this.baseLineInvertedY = n.baseLineInvertedY)),
                (this.yaxisIndex = 0),
                (this.translationsIndex = 0),
                (this.seriesLen = 0),
                (this.pathArr = []);
              var o = new U(this.ctx);
              (this.lastActiveBarSerieIndex = o.getActiveConfigSeriesIndex(
                "desc",
                ["bar", "column"]
              )),
                (this.columnGroupIndices = []);
              var a = o.getBarSeriesIndices(),
                s = new A(this.ctx);
              (this.stackedSeriesTotals = s.getStackedSeriesTotals(
                this.w.config.series
                  .map(function (e, t) {
                    return -1 === a.indexOf(t) ? t : -1;
                  })
                  .filter(function (e) {
                    return -1 !== e;
                  })
              )),
                (this.barHelpers = new ke(this));
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function (e, t) {
                    var n = this.w,
                      i = new k(this.ctx),
                      o = new A(this.ctx, n);
                    (e = o.getLogSeries(e)),
                      (this.series = e),
                      (this.yRatio = o.getLogYRatios(this.yRatio)),
                      this.barHelpers.initVariables(e);
                    var s = i.group({
                      class: "apexcharts-bar-series apexcharts-plot-series",
                    });
                    n.config.dataLabels.enabled &&
                      this.totalItems > this.barOptions.dataLabels.maxItems &&
                      console.warn(
                        "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts"
                      );
                    for (var r = 0, l = 0; r < e.length; r++, l++) {
                      var c,
                        u,
                        d,
                        h,
                        p = void 0,
                        f = void 0,
                        g = [],
                        m = [],
                        v = n.globals.comboCharts ? t[r] : r,
                        b = this.barHelpers.getGroupIndex(v).columnGroupIndex,
                        x = i.group({
                          class: "apexcharts-series",
                          rel: r + 1,
                          seriesName: y.escapeString(n.globals.seriesNames[v]),
                          "data:realIndex": v,
                        });
                      this.ctx.series.addCollapsedClassToSeries(x, v),
                        e[r].length > 0 && (this.visibleI = this.visibleI + 1);
                      var w = 0,
                        S = 0;
                      this.yRatio.length > 1 &&
                        ((this.yaxisIndex = n.globals.seriesYAxisReverseMap[v]),
                        (this.translationsIndex = v));
                      var C = this.translationsIndex;
                      this.isReversed =
                        n.config.yaxis[this.yaxisIndex] &&
                        n.config.yaxis[this.yaxisIndex].reversed;
                      var M = this.barHelpers.initialPositions();
                      (f = M.y),
                        (w = M.barHeight),
                        (u = M.yDivision),
                        (h = M.zeroW),
                        (p = M.x),
                        (S = M.barWidth),
                        (c = M.xDivision),
                        (d = M.zeroH),
                        this.horizontal || m.push(p + S / 2);
                      var P = i.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": v,
                      });
                      n.globals.delayedElements.push({ el: P.node }),
                        P.node.classList.add("apexcharts-element-hidden");
                      var E = i.group({
                          class: "apexcharts-bar-goals-markers",
                        }),
                        L = i.group({ class: "apexcharts-bar-shadows" });
                      n.globals.delayedElements.push({ el: L.node }),
                        L.node.classList.add("apexcharts-element-hidden");
                      for (var T = 0; T < e[r].length; T++) {
                        var O = this.barHelpers.getStrokeWidth(r, T, v),
                          R = null,
                          I = {
                            indexes: {
                              i: r,
                              j: T,
                              realIndex: v,
                              translationsIndex: C,
                              bc: l,
                            },
                            x: p,
                            y: f,
                            strokeWidth: O,
                            elSeries: x,
                          };
                        this.isHorizontal
                          ? ((R = this.drawBarPaths(
                              a(
                                a({}, I),
                                {},
                                { barHeight: w, zeroW: h, yDivision: u }
                              )
                            )),
                            (S = this.series[r][T] / this.invertedYRatio))
                          : ((R = this.drawColumnPaths(
                              a(
                                a({}, I),
                                {},
                                { xDivision: c, barWidth: S, zeroH: d }
                              )
                            )),
                            (w = this.series[r][T] / this.yRatio[C]));
                        var N = this.barHelpers.getPathFillColor(e, r, T, v);
                        if (
                          this.isFunnel &&
                          this.barOptions.isFunnel3d &&
                          this.pathArr.length &&
                          T > 0
                        ) {
                          var _ = this.barHelpers.drawBarShadow({
                            color:
                              "string" == typeof N &&
                              -1 === (null == N ? void 0 : N.indexOf("url"))
                                ? N
                                : y.hexToRgba(n.globals.colors[r]),
                            prevPaths: this.pathArr[this.pathArr.length - 1],
                            currPaths: R,
                          });
                          _ && L.add(_);
                        }
                        this.pathArr.push(R);
                        var D = this.barHelpers.drawGoalLine({
                          barXPosition: R.barXPosition,
                          barYPosition: R.barYPosition,
                          goalX: R.goalX,
                          goalY: R.goalY,
                          barHeight: w,
                          barWidth: S,
                        });
                        D && E.add(D),
                          (f = R.y),
                          (p = R.x),
                          T > 0 && m.push(p + S / 2),
                          g.push(f),
                          this.renderSeries({
                            realIndex: v,
                            pathFill: N,
                            j: T,
                            i: r,
                            columnGroupIndex: b,
                            pathFrom: R.pathFrom,
                            pathTo: R.pathTo,
                            strokeWidth: O,
                            elSeries: x,
                            x: p,
                            y: f,
                            series: e,
                            barHeight: Math.abs(R.barHeight ? R.barHeight : w),
                            barWidth: Math.abs(R.barWidth ? R.barWidth : S),
                            elDataLabelsWrap: P,
                            elGoalsMarkers: E,
                            elBarShadows: L,
                            visibleSeries: this.visibleI,
                            type: "bar",
                          });
                      }
                      (n.globals.seriesXvalues[v] = m),
                        (n.globals.seriesYvalues[v] = g),
                        s.add(x);
                    }
                    return s;
                  },
                },
                {
                  key: "renderSeries",
                  value: function (e) {
                    var t = e.realIndex,
                      n = e.pathFill,
                      i = e.lineFill,
                      o = e.j,
                      a = e.i,
                      s = e.columnGroupIndex,
                      r = e.pathFrom,
                      l = e.pathTo,
                      c = e.strokeWidth,
                      u = e.elSeries,
                      d = e.x,
                      h = e.y,
                      p = e.y1,
                      f = e.y2,
                      g = e.series,
                      m = e.barHeight,
                      v = e.barWidth,
                      b = e.barXPosition,
                      x = e.barYPosition,
                      y = e.elDataLabelsWrap,
                      w = e.elGoalsMarkers,
                      A = e.elBarShadows,
                      C = e.visibleSeries,
                      M = e.type,
                      P = this.w,
                      E = new k(this.ctx);
                    if (!i) {
                      var L =
                        "function" == typeof P.globals.stroke.colors[t]
                          ? (function (e) {
                              var t,
                                n = P.config.stroke.colors;
                              return Array.isArray(n) &&
                                n.length > 0 &&
                                ((t = n[e]) || (t = ""), "function" == typeof t)
                                ? t({
                                    value: P.globals.series[e][o],
                                    dataPointIndex: o,
                                    w: P,
                                  })
                                : t;
                            })(t)
                          : P.globals.stroke.colors[t];
                      i = this.barOptions.distributed
                        ? P.globals.stroke.colors[o]
                        : L;
                    }
                    P.config.series[a].data[o] &&
                      P.config.series[a].data[o].strokeColor &&
                      (i = P.config.series[a].data[o].strokeColor),
                      this.isNullValue && (n = "none");
                    var T =
                        ((o /
                          P.config.chart.animations.animateGradually.delay) *
                          (P.config.chart.animations.speed /
                            P.globals.dataPoints)) /
                        2.4,
                      O = E.renderPaths({
                        i: a,
                        j: o,
                        realIndex: t,
                        pathFrom: r,
                        pathTo: l,
                        stroke: i,
                        strokeWidth: c,
                        strokeLineCap: P.config.stroke.lineCap,
                        fill: n,
                        animationDelay: T,
                        initialSpeed: P.config.chart.animations.speed,
                        dataChangeSpeed:
                          P.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-".concat(M, "-area"),
                      });
                    O.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(P.globals.cuid, ")")
                    );
                    var R = P.config.forecastDataPoints;
                    R.count > 0 &&
                      o >= P.globals.dataPoints - R.count &&
                      (O.node.setAttribute("stroke-dasharray", R.dashArray),
                      O.node.setAttribute("stroke-width", R.strokeWidth),
                      O.node.setAttribute("fill-opacity", R.fillOpacity)),
                      void 0 !== p &&
                        void 0 !== f &&
                        (O.attr("data-range-y1", p),
                        O.attr("data-range-y2", f)),
                      new S(this.ctx).setSelectionFilter(O, t, o),
                      u.add(O);
                    var I = new Se(this).handleBarDataLabels({
                      x: d,
                      y: h,
                      y1: p,
                      y2: f,
                      i: a,
                      j: o,
                      series: g,
                      realIndex: t,
                      columnGroupIndex: s,
                      barHeight: m,
                      barWidth: v,
                      barXPosition: b,
                      barYPosition: x,
                      renderedPath: O,
                      visibleSeries: C,
                    });
                    return (
                      null !== I.dataLabels && y.add(I.dataLabels),
                      I.totalDataLabels && y.add(I.totalDataLabels),
                      u.add(y),
                      w && u.add(w),
                      A && u.add(A),
                      u
                    );
                  },
                },
                {
                  key: "drawBarPaths",
                  value: function (e) {
                    var t,
                      n = e.indexes,
                      i = e.barHeight,
                      o = e.strokeWidth,
                      a = e.zeroW,
                      s = e.x,
                      r = e.y,
                      l = e.yDivision,
                      c = e.elSeries,
                      u = this.w,
                      d = n.i,
                      h = n.j;
                    if (u.globals.isXNumeric)
                      t =
                        (r =
                          (u.globals.seriesX[d][h] - u.globals.minX) /
                            this.invertedXRatio -
                          i) +
                        i * this.visibleI;
                    else if (u.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                      var p = 0,
                        f = 0;
                      u.globals.seriesPercent.forEach(function (e, t) {
                        e[h] && p++, t < d && 0 === e[h] && f++;
                      }),
                        p > 0 && (i = (this.seriesLen * i) / p),
                        (t = r + i * this.visibleI),
                        (t -= i * f);
                    } else t = r + i * this.visibleI;
                    this.isFunnel &&
                      (a -=
                        (this.barHelpers.getXForValue(this.series[d][h], a) -
                          a) /
                        2),
                      (s = this.barHelpers.getXForValue(this.series[d][h], a));
                    var g = this.barHelpers.getBarpaths({
                      barYPosition: t,
                      barHeight: i,
                      x1: a,
                      x2: s,
                      strokeWidth: o,
                      series: this.series,
                      realIndex: n.realIndex,
                      i: d,
                      j: h,
                      w: u,
                    });
                    return (
                      u.globals.isXNumeric || (r += l),
                      this.barHelpers.barBackground({
                        j: h,
                        i: d,
                        y1: t - i * this.visibleI,
                        y2: i * this.seriesLen,
                        elSeries: c,
                      }),
                      {
                        pathTo: g.pathTo,
                        pathFrom: g.pathFrom,
                        x1: a,
                        x: s,
                        y: r,
                        goalX: this.barHelpers.getGoalValues(
                          "x",
                          a,
                          null,
                          d,
                          h
                        ),
                        barYPosition: t,
                        barHeight: i,
                      }
                    );
                  },
                },
                {
                  key: "drawColumnPaths",
                  value: function (e) {
                    var t,
                      n = e.indexes,
                      i = e.x,
                      o = e.y,
                      a = e.xDivision,
                      s = e.barWidth,
                      r = e.zeroH,
                      l = e.strokeWidth,
                      c = e.elSeries,
                      u = this.w,
                      d = n.realIndex,
                      h = n.translationsIndex,
                      p = n.i,
                      f = n.j,
                      g = n.bc;
                    if (u.globals.isXNumeric) {
                      var m = this.getBarXForNumericXAxis({
                        x: i,
                        j: f,
                        realIndex: d,
                        barWidth: s,
                      });
                      (i = m.x), (t = m.barXPosition);
                    } else if (
                      u.config.plotOptions.bar.hideZeroBarsWhenGrouped
                    ) {
                      var v = this.barHelpers.getZeroValueEncounters({
                          i: p,
                          j: f,
                        }),
                        b = v.nonZeroColumns,
                        x = v.zeroEncounters;
                      b > 0 && (s = (this.seriesLen * s) / b),
                        (t = i + s * this.visibleI),
                        (t -= s * x);
                    } else t = i + s * this.visibleI;
                    o = this.barHelpers.getYForValue(this.series[p][f], r, h);
                    var y = this.barHelpers.getColumnPaths({
                      barXPosition: t,
                      barWidth: s,
                      y1: r,
                      y2: o,
                      strokeWidth: l,
                      series: this.series,
                      realIndex: d,
                      i: p,
                      j: f,
                      w: u,
                    });
                    return (
                      u.globals.isXNumeric || (i += a),
                      this.barHelpers.barBackground({
                        bc: g,
                        j: f,
                        i: p,
                        x1: t - l / 2 - s * this.visibleI,
                        x2: s * this.seriesLen + l / 2,
                        elSeries: c,
                      }),
                      {
                        pathTo: y.pathTo,
                        pathFrom: y.pathFrom,
                        x: i,
                        y: o,
                        goalY: this.barHelpers.getGoalValues(
                          "y",
                          null,
                          r,
                          p,
                          f,
                          h
                        ),
                        barXPosition: t,
                        barWidth: s,
                      }
                    );
                  },
                },
                {
                  key: "getBarXForNumericXAxis",
                  value: function (e) {
                    var t = e.x,
                      n = e.barWidth,
                      i = e.realIndex,
                      o = e.j,
                      a = this.w,
                      s = i;
                    return (
                      a.globals.seriesX[i].length ||
                        (s = a.globals.maxValsInArrayIndex),
                      a.globals.seriesX[s][o] &&
                        (t =
                          (a.globals.seriesX[s][o] - a.globals.minX) /
                            this.xRatio -
                          (n * this.seriesLen) / 2),
                      { barXPosition: t + n * this.visibleI, x: t }
                    );
                  },
                },
                {
                  key: "getPreviousPath",
                  value: function (e, t) {
                    for (
                      var n, i = this.w, o = 0;
                      o < i.globals.previousPaths.length;
                      o++
                    ) {
                      var a = i.globals.previousPaths[o];
                      a.paths &&
                        a.paths.length > 0 &&
                        parseInt(a.realIndex, 10) === parseInt(e, 10) &&
                        void 0 !== i.globals.previousPaths[o].paths[t] &&
                        (n = i.globals.previousPaths[o].paths[t].d);
                    }
                    return n;
                  },
                },
              ]),
              e
            );
          })(),
          Ce = (function (e) {
            d(n, Ae);
            var t = g(n);
            function n() {
              return r(this, n), t.apply(this, arguments);
            }
            return (
              c(n, [
                {
                  key: "draw",
                  value: function (e, t) {
                    var n = this,
                      i = this.w;
                    (this.graphics = new k(this.ctx)),
                      (this.bar = new Ae(this.ctx, this.xyRatios));
                    var o = new A(this.ctx, i);
                    (e = o.getLogSeries(e)),
                      (this.yRatio = o.getLogYRatios(this.yRatio)),
                      this.barHelpers.initVariables(e),
                      "100%" === i.config.chart.stackType &&
                        (e = i.globals.comboCharts
                          ? t.map(function (e) {
                              return i.globals.seriesPercent[e];
                            })
                          : i.globals.seriesPercent.slice()),
                      (this.series = e),
                      this.barHelpers.initializeStackedPrevVars(this);
                    for (
                      var s = this.graphics.group({
                          class: "apexcharts-bar-series apexcharts-plot-series",
                        }),
                        r = 0,
                        l = 0,
                        c = function (o, c) {
                          var u = void 0,
                            d = void 0,
                            h = void 0,
                            p = void 0,
                            f = i.globals.comboCharts ? t[o] : o,
                            g = n.barHelpers.getGroupIndex(f),
                            m = g.groupIndex,
                            v = g.columnGroupIndex;
                          n.groupCtx = n[i.globals.seriesGroups[m]];
                          var b = [],
                            x = [],
                            w = 0;
                          n.yRatio.length > 1 &&
                            ((n.yaxisIndex =
                              i.globals.seriesYAxisReverseMap[f][0]),
                            (w = f)),
                            (n.isReversed =
                              i.config.yaxis[n.yaxisIndex] &&
                              i.config.yaxis[n.yaxisIndex].reversed);
                          var S = n.graphics.group({
                            class: "apexcharts-series",
                            seriesName: y.escapeString(
                              i.globals.seriesNames[f]
                            ),
                            rel: o + 1,
                            "data:realIndex": f,
                          });
                          n.ctx.series.addCollapsedClassToSeries(S, f);
                          var k = n.graphics.group({
                              class: "apexcharts-datalabels",
                              "data:realIndex": f,
                            }),
                            A = n.graphics.group({
                              class: "apexcharts-bar-goals-markers",
                            }),
                            C = 0,
                            M = 0,
                            P = n.initialPositions(r, l, u, d, h, p, w);
                          (l = P.y),
                            (C = P.barHeight),
                            (d = P.yDivision),
                            (p = P.zeroW),
                            (r = P.x),
                            (M = P.barWidth),
                            (u = P.xDivision),
                            (h = P.zeroH),
                            (i.globals.barHeight = C),
                            (i.globals.barWidth = M),
                            n.barHelpers.initializeStackedXYVars(n),
                            1 === n.groupCtx.prevY.length &&
                              n.groupCtx.prevY[0].every(function (e) {
                                return isNaN(e);
                              }) &&
                              ((n.groupCtx.prevY[0] = n.groupCtx.prevY[0].map(
                                function () {
                                  return h;
                                }
                              )),
                              (n.groupCtx.prevYF[0] = n.groupCtx.prevYF[0].map(
                                function () {
                                  return 0;
                                }
                              )));
                          for (var E = 0; E < i.globals.dataPoints; E++) {
                            var L = n.barHelpers.getStrokeWidth(o, E, f),
                              T = {
                                indexes: {
                                  i: o,
                                  j: E,
                                  realIndex: f,
                                  translationsIndex: w,
                                  bc: c,
                                },
                                strokeWidth: L,
                                x: r,
                                y: l,
                                elSeries: S,
                                columnGroupIndex: v,
                                seriesGroup: i.globals.seriesGroups[m],
                              },
                              O = null;
                            n.isHorizontal
                              ? ((O = n.drawStackedBarPaths(
                                  a(
                                    a({}, T),
                                    {},
                                    { zeroW: p, barHeight: C, yDivision: d }
                                  )
                                )),
                                (M = n.series[o][E] / n.invertedYRatio))
                              : ((O = n.drawStackedColumnPaths(
                                  a(
                                    a({}, T),
                                    {},
                                    { xDivision: u, barWidth: M, zeroH: h }
                                  )
                                )),
                                (C = n.series[o][E] / n.yRatio[w]));
                            var R = n.barHelpers.drawGoalLine({
                              barXPosition: O.barXPosition,
                              barYPosition: O.barYPosition,
                              goalX: O.goalX,
                              goalY: O.goalY,
                              barHeight: C,
                              barWidth: M,
                            });
                            R && A.add(R),
                              (l = O.y),
                              (r = O.x),
                              b.push(r),
                              x.push(l);
                            var I = n.barHelpers.getPathFillColor(e, o, E, f);
                            S = n.renderSeries({
                              realIndex: f,
                              pathFill: I,
                              j: E,
                              i: o,
                              columnGroupIndex: v,
                              pathFrom: O.pathFrom,
                              pathTo: O.pathTo,
                              strokeWidth: L,
                              elSeries: S,
                              x: r,
                              y: l,
                              series: e,
                              barHeight: C,
                              barWidth: M,
                              elDataLabelsWrap: k,
                              elGoalsMarkers: A,
                              type: "bar",
                              visibleSeries: v,
                            });
                          }
                          (i.globals.seriesXvalues[f] = b),
                            (i.globals.seriesYvalues[f] = x),
                            n.groupCtx.prevY.push(n.groupCtx.yArrj),
                            n.groupCtx.prevYF.push(n.groupCtx.yArrjF),
                            n.groupCtx.prevYVal.push(n.groupCtx.yArrjVal),
                            n.groupCtx.prevX.push(n.groupCtx.xArrj),
                            n.groupCtx.prevXF.push(n.groupCtx.xArrjF),
                            n.groupCtx.prevXVal.push(n.groupCtx.xArrjVal),
                            s.add(S);
                        },
                        u = 0,
                        d = 0;
                      u < e.length;
                      u++, d++
                    )
                      c(u, d);
                    return s;
                  },
                },
                {
                  key: "initialPositions",
                  value: function (e, t, n, i, o, a, s) {
                    var r,
                      l,
                      c = this.w;
                    if (this.isHorizontal) {
                      i = c.globals.gridHeight / c.globals.dataPoints;
                      var u = c.config.plotOptions.bar.barHeight;
                      (r =
                        -1 === String(u).indexOf("%")
                          ? parseInt(u, 10)
                          : (i * parseInt(u, 10)) / 100),
                        (a =
                          c.globals.padHorizontal +
                          (this.isReversed
                            ? c.globals.gridWidth - this.baseLineInvertedY
                            : this.baseLineInvertedY)),
                        (t = (i - r) / 2);
                    } else {
                      l = n = c.globals.gridWidth / c.globals.dataPoints;
                      var d = c.config.plotOptions.bar.columnWidth;
                      c.globals.isXNumeric && c.globals.dataPoints > 1
                        ? (l =
                            ((n = c.globals.minXDiff / this.xRatio) *
                              parseInt(this.barOptions.columnWidth, 10)) /
                            100)
                        : -1 === String(d).indexOf("%")
                        ? (l = parseInt(d, 10))
                        : (l *= parseInt(d, 10) / 100),
                        (o =
                          c.globals.gridHeight -
                          this.baseLineY[s] -
                          (this.isReversed ? c.globals.gridHeight : 0)),
                        (e = c.globals.padHorizontal + (n - l) / 2);
                    }
                    var h = c.globals.barGroups.length || 1;
                    return {
                      x: e,
                      y: t,
                      yDivision: i,
                      xDivision: n,
                      barHeight: r / h,
                      barWidth: l / h,
                      zeroH: o,
                      zeroW: a,
                    };
                  },
                },
                {
                  key: "drawStackedBarPaths",
                  value: function (e) {
                    for (
                      var t,
                        n = e.indexes,
                        i = e.barHeight,
                        o = e.strokeWidth,
                        a = e.zeroW,
                        s = e.x,
                        r = e.y,
                        l = e.columnGroupIndex,
                        c = e.seriesGroup,
                        u = e.yDivision,
                        d = e.elSeries,
                        h = this.w,
                        p = r + l * i,
                        f = n.i,
                        g = n.j,
                        m = n.realIndex,
                        v = n.translationsIndex,
                        b = 0,
                        x = 0;
                      x < this.groupCtx.prevXF.length;
                      x++
                    )
                      b += this.groupCtx.prevXF[x][g];
                    var y;
                    if ((y = c.indexOf(h.config.series[m].name)) > 0) {
                      var w = a;
                      this.groupCtx.prevXVal[y - 1][g] < 0
                        ? (w =
                            this.series[f][g] >= 0
                              ? this.groupCtx.prevX[y - 1][g] +
                                b -
                                2 * (this.isReversed ? b : 0)
                              : this.groupCtx.prevX[y - 1][g])
                        : this.groupCtx.prevXVal[y - 1][g] >= 0 &&
                          (w =
                            this.series[f][g] >= 0
                              ? this.groupCtx.prevX[y - 1][g]
                              : this.groupCtx.prevX[y - 1][g] -
                                b +
                                2 * (this.isReversed ? b : 0)),
                        (t = w);
                    } else t = a;
                    s =
                      null === this.series[f][g]
                        ? t
                        : t +
                          this.series[f][g] / this.invertedYRatio -
                          2 *
                            (this.isReversed
                              ? this.series[f][g] / this.invertedYRatio
                              : 0);
                    var S = this.barHelpers.getBarpaths({
                      barYPosition: p,
                      barHeight: i,
                      x1: t,
                      x2: s,
                      strokeWidth: o,
                      series: this.series,
                      realIndex: n.realIndex,
                      seriesGroup: c,
                      i: f,
                      j: g,
                      w: h,
                    });
                    return (
                      this.barHelpers.barBackground({
                        j: g,
                        i: f,
                        y1: p,
                        y2: i,
                        elSeries: d,
                      }),
                      (r += u),
                      {
                        pathTo: S.pathTo,
                        pathFrom: S.pathFrom,
                        goalX: this.barHelpers.getGoalValues(
                          "x",
                          a,
                          null,
                          f,
                          g,
                          v
                        ),
                        barXPosition: t,
                        barYPosition: p,
                        x: s,
                        y: r,
                      }
                    );
                  },
                },
                {
                  key: "drawStackedColumnPaths",
                  value: function (e) {
                    var t = e.indexes,
                      n = e.x,
                      i = e.y,
                      o = e.xDivision,
                      a = e.barWidth,
                      s = e.zeroH,
                      r = e.columnGroupIndex,
                      l = e.seriesGroup,
                      c = e.elSeries,
                      u = this.w,
                      d = t.i,
                      h = t.j,
                      p = t.bc,
                      f = t.realIndex,
                      g = t.translationsIndex;
                    if (u.globals.isXNumeric) {
                      var m = u.globals.seriesX[f][h];
                      m || (m = 0),
                        (n =
                          (m - u.globals.minX) / this.xRatio -
                          (a / 2) * u.globals.barGroups.length);
                    }
                    for (
                      var v, b = n + r * a, x = 0, y = 0;
                      y < this.groupCtx.prevYF.length;
                      y++
                    )
                      x += isNaN(this.groupCtx.prevYF[y][h])
                        ? 0
                        : this.groupCtx.prevYF[y][h];
                    var w = d;
                    if (
                      (l && (w = l.indexOf(u.globals.seriesNames[f])),
                      (w > 0 && !u.globals.isXNumeric) ||
                        (w > 0 &&
                          u.globals.isXNumeric &&
                          u.globals.seriesX[f - 1][h] ===
                            u.globals.seriesX[f][h]))
                    ) {
                      var S,
                        k,
                        A,
                        C = Math.min(this.yRatio.length + 1, f + 1);
                      if (
                        void 0 !== this.groupCtx.prevY[w - 1] &&
                        this.groupCtx.prevY[w - 1].length
                      )
                        for (var M = 1; M < C; M++) {
                          var P;
                          if (
                            !isNaN(
                              null === (P = this.groupCtx.prevY[w - M]) ||
                                void 0 === P
                                ? void 0
                                : P[h]
                            )
                          ) {
                            A = this.groupCtx.prevY[w - M][h];
                            break;
                          }
                        }
                      for (var E = 1; E < C; E++) {
                        var L, T;
                        if (
                          (null === (L = this.groupCtx.prevYVal[w - E]) ||
                          void 0 === L
                            ? void 0
                            : L[h]) < 0
                        ) {
                          k =
                            this.series[d][h] >= 0
                              ? A - x + 2 * (this.isReversed ? x : 0)
                              : A;
                          break;
                        }
                        if (
                          (null === (T = this.groupCtx.prevYVal[w - E]) ||
                          void 0 === T
                            ? void 0
                            : T[h]) >= 0
                        ) {
                          k =
                            this.series[d][h] >= 0
                              ? A
                              : A + x - 2 * (this.isReversed ? x : 0);
                          break;
                        }
                      }
                      void 0 === k && (k = u.globals.gridHeight),
                        (v =
                          null !== (S = this.groupCtx.prevYF[0]) &&
                          void 0 !== S &&
                          S.every(function (e) {
                            return 0 === e;
                          }) &&
                          this.groupCtx.prevYF.slice(1, w).every(function (e) {
                            return e.every(function (e) {
                              return isNaN(e);
                            });
                          })
                            ? s
                            : k);
                    } else v = s;
                    i = this.series[d][h]
                      ? v -
                        this.series[d][h] / this.yRatio[g] +
                        2 *
                          (this.isReversed
                            ? this.series[d][h] / this.yRatio[g]
                            : 0)
                      : v;
                    var O = this.barHelpers.getColumnPaths({
                      barXPosition: b,
                      barWidth: a,
                      y1: v,
                      y2: i,
                      yRatio: this.yRatio[g],
                      strokeWidth: this.strokeWidth,
                      series: this.series,
                      seriesGroup: l,
                      realIndex: t.realIndex,
                      i: d,
                      j: h,
                      w: u,
                    });
                    return (
                      this.barHelpers.barBackground({
                        bc: p,
                        j: h,
                        i: d,
                        x1: b,
                        x2: a,
                        elSeries: c,
                      }),
                      {
                        pathTo: O.pathTo,
                        pathFrom: O.pathFrom,
                        goalY: this.barHelpers.getGoalValues(
                          "y",
                          null,
                          s,
                          d,
                          h
                        ),
                        barXPosition: b,
                        x: u.globals.isXNumeric ? n : n + o,
                        y: i,
                      }
                    );
                  },
                },
              ]),
              n
            );
          })(),
          Me = (function (e) {
            d(n, Ae);
            var t = g(n);
            function n() {
              return r(this, n), t.apply(this, arguments);
            }
            return (
              c(n, [
                {
                  key: "draw",
                  value: function (e, t, n) {
                    var i = this,
                      o = this.w,
                      s = new k(this.ctx),
                      r = o.globals.comboCharts ? t : o.config.chart.type,
                      l = new W(this.ctx);
                    (this.candlestickOptions =
                      this.w.config.plotOptions.candlestick),
                      (this.boxOptions = this.w.config.plotOptions.boxPlot),
                      (this.isHorizontal = o.config.plotOptions.bar.horizontal);
                    var c = new A(this.ctx, o);
                    (e = c.getLogSeries(e)),
                      (this.series = e),
                      (this.yRatio = c.getLogYRatios(this.yRatio)),
                      this.barHelpers.initVariables(e);
                    for (
                      var u = s.group({
                          class: "apexcharts-".concat(
                            r,
                            "-series apexcharts-plot-series"
                          ),
                        }),
                        d = function (t) {
                          i.isBoxPlot =
                            "boxPlot" === o.config.chart.type ||
                            "boxPlot" === o.config.series[t].type;
                          var r,
                            c,
                            d,
                            h,
                            p = void 0,
                            f = void 0,
                            g = [],
                            m = [],
                            v = o.globals.comboCharts ? n[t] : t,
                            b = i.barHelpers.getGroupIndex(v).columnGroupIndex,
                            x = s.group({
                              class: "apexcharts-series",
                              seriesName: y.escapeString(
                                o.globals.seriesNames[v]
                              ),
                              rel: t + 1,
                              "data:realIndex": v,
                            });
                          i.ctx.series.addCollapsedClassToSeries(x, v),
                            e[t].length > 0 && (i.visibleI = i.visibleI + 1);
                          var w,
                            S,
                            k = 0;
                          i.yRatio.length > 1 &&
                            ((i.yaxisIndex =
                              o.globals.seriesYAxisReverseMap[v][0]),
                            (k = v));
                          var A = i.barHelpers.initialPositions();
                          (f = A.y),
                            (w = A.barHeight),
                            (c = A.yDivision),
                            (h = A.zeroW),
                            (p = A.x),
                            (S = A.barWidth),
                            (r = A.xDivision),
                            (d = A.zeroH),
                            m.push(p + S / 2);
                          for (
                            var C = s.group({
                                class: "apexcharts-datalabels",
                                "data:realIndex": v,
                              }),
                              M = function (n) {
                                var s = i.barHelpers.getStrokeWidth(t, n, v),
                                  u = null,
                                  y = {
                                    indexes: {
                                      i: t,
                                      j: n,
                                      realIndex: v,
                                      translationsIndex: k,
                                    },
                                    x: p,
                                    y: f,
                                    strokeWidth: s,
                                    elSeries: x,
                                  };
                                (u = i.isHorizontal
                                  ? i.drawHorizontalBoxPaths(
                                      a(
                                        a({}, y),
                                        {},
                                        { yDivision: c, barHeight: w, zeroW: h }
                                      )
                                    )
                                  : i.drawVerticalBoxPaths(
                                      a(
                                        a({}, y),
                                        {},
                                        { xDivision: r, barWidth: S, zeroH: d }
                                      )
                                    )),
                                  (f = u.y),
                                  (p = u.x),
                                  n > 0 && m.push(p + S / 2),
                                  g.push(f),
                                  u.pathTo.forEach(function (a, r) {
                                    var c =
                                        !i.isBoxPlot &&
                                        i.candlestickOptions.wick.useFillColor
                                          ? u.color[r]
                                          : o.globals.stroke.colors[t],
                                      d = l.fillPath({
                                        seriesNumber: v,
                                        dataPointIndex: n,
                                        color: u.color[r],
                                        value: e[t][n],
                                      });
                                    i.renderSeries({
                                      realIndex: v,
                                      pathFill: d,
                                      lineFill: c,
                                      j: n,
                                      i: t,
                                      pathFrom: u.pathFrom,
                                      pathTo: a,
                                      strokeWidth: s,
                                      elSeries: x,
                                      x: p,
                                      y: f,
                                      series: e,
                                      columnGroupIndex: b,
                                      barHeight: w,
                                      barWidth: S,
                                      elDataLabelsWrap: C,
                                      visibleSeries: i.visibleI,
                                      type: o.config.chart.type,
                                    });
                                  });
                              },
                              P = 0;
                            P < o.globals.dataPoints;
                            P++
                          )
                            M(P);
                          (o.globals.seriesXvalues[v] = m),
                            (o.globals.seriesYvalues[v] = g),
                            u.add(x);
                        },
                        h = 0;
                      h < e.length;
                      h++
                    )
                      d(h);
                    return u;
                  },
                },
                {
                  key: "drawVerticalBoxPaths",
                  value: function (e) {
                    var t = e.indexes,
                      n = e.x;
                    e.y;
                    var i = e.xDivision,
                      o = e.barWidth,
                      a = e.zeroH,
                      s = e.strokeWidth,
                      r = this.w,
                      l = new k(this.ctx),
                      c = t.i,
                      u = t.j,
                      d = !0,
                      h = r.config.plotOptions.candlestick.colors.upward,
                      p = r.config.plotOptions.candlestick.colors.downward,
                      f = "";
                    this.isBoxPlot &&
                      (f = [
                        this.boxOptions.colors.lower,
                        this.boxOptions.colors.upper,
                      ]);
                    var g = this.yRatio[t.translationsIndex],
                      m = t.realIndex,
                      v = this.getOHLCValue(m, u),
                      b = a,
                      x = a;
                    v.o > v.c && (d = !1);
                    var y = Math.min(v.o, v.c),
                      w = Math.max(v.o, v.c),
                      S = v.m;
                    r.globals.isXNumeric &&
                      (n =
                        (r.globals.seriesX[m][u] - r.globals.minX) /
                          this.xRatio -
                        o / 2);
                    var A = n + o * this.visibleI;
                    void 0 === this.series[c][u] || null === this.series[c][u]
                      ? ((y = a), (w = a))
                      : ((y = a - y / g),
                        (w = a - w / g),
                        (b = a - v.h / g),
                        (x = a - v.l / g),
                        (S = a - v.m / g));
                    var C = l.move(A, a),
                      M = l.move(A + o / 2, y);
                    return (
                      r.globals.previousPaths.length > 0 &&
                        (M = this.getPreviousPath(m, u, !0)),
                      (C = this.isBoxPlot
                        ? [
                            l.move(A, y) +
                              l.line(A + o / 2, y) +
                              l.line(A + o / 2, b) +
                              l.line(A + o / 4, b) +
                              l.line(A + o - o / 4, b) +
                              l.line(A + o / 2, b) +
                              l.line(A + o / 2, y) +
                              l.line(A + o, y) +
                              l.line(A + o, S) +
                              l.line(A, S) +
                              l.line(A, y + s / 2),
                            l.move(A, S) +
                              l.line(A + o, S) +
                              l.line(A + o, w) +
                              l.line(A + o / 2, w) +
                              l.line(A + o / 2, x) +
                              l.line(A + o - o / 4, x) +
                              l.line(A + o / 4, x) +
                              l.line(A + o / 2, x) +
                              l.line(A + o / 2, w) +
                              l.line(A, w) +
                              l.line(A, S) +
                              "z",
                          ]
                        : [
                            l.move(A, w) +
                              l.line(A + o / 2, w) +
                              l.line(A + o / 2, b) +
                              l.line(A + o / 2, w) +
                              l.line(A + o, w) +
                              l.line(A + o, y) +
                              l.line(A + o / 2, y) +
                              l.line(A + o / 2, x) +
                              l.line(A + o / 2, y) +
                              l.line(A, y) +
                              l.line(A, w - s / 2),
                          ]),
                      (M += l.move(A, y)),
                      r.globals.isXNumeric || (n += i),
                      {
                        pathTo: C,
                        pathFrom: M,
                        x: n,
                        y: w,
                        barXPosition: A,
                        color: this.isBoxPlot ? f : d ? [h] : [p],
                      }
                    );
                  },
                },
                {
                  key: "drawHorizontalBoxPaths",
                  value: function (e) {
                    var t = e.indexes;
                    e.x;
                    var n = e.y,
                      i = e.yDivision,
                      o = e.barHeight,
                      a = e.zeroW,
                      s = e.strokeWidth,
                      r = this.w,
                      l = new k(this.ctx),
                      c = t.i,
                      u = t.j,
                      d = this.boxOptions.colors.lower;
                    this.isBoxPlot &&
                      (d = [
                        this.boxOptions.colors.lower,
                        this.boxOptions.colors.upper,
                      ]);
                    var h = this.invertedYRatio,
                      p = t.realIndex,
                      f = this.getOHLCValue(p, u),
                      g = a,
                      m = a,
                      v = Math.min(f.o, f.c),
                      b = Math.max(f.o, f.c),
                      x = f.m;
                    r.globals.isXNumeric &&
                      (n =
                        (r.globals.seriesX[p][u] - r.globals.minX) /
                          this.invertedXRatio -
                        o / 2);
                    var y = n + o * this.visibleI;
                    void 0 === this.series[c][u] || null === this.series[c][u]
                      ? ((v = a), (b = a))
                      : ((v = a + v / h),
                        (b = a + b / h),
                        (g = a + f.h / h),
                        (m = a + f.l / h),
                        (x = a + f.m / h));
                    var w = l.move(a, y),
                      S = l.move(v, y + o / 2);
                    return (
                      r.globals.previousPaths.length > 0 &&
                        (S = this.getPreviousPath(p, u, !0)),
                      (w = [
                        l.move(v, y) +
                          l.line(v, y + o / 2) +
                          l.line(g, y + o / 2) +
                          l.line(g, y + o / 2 - o / 4) +
                          l.line(g, y + o / 2 + o / 4) +
                          l.line(g, y + o / 2) +
                          l.line(v, y + o / 2) +
                          l.line(v, y + o) +
                          l.line(x, y + o) +
                          l.line(x, y) +
                          l.line(v + s / 2, y),
                        l.move(x, y) +
                          l.line(x, y + o) +
                          l.line(b, y + o) +
                          l.line(b, y + o / 2) +
                          l.line(m, y + o / 2) +
                          l.line(m, y + o - o / 4) +
                          l.line(m, y + o / 4) +
                          l.line(m, y + o / 2) +
                          l.line(b, y + o / 2) +
                          l.line(b, y) +
                          l.line(x, y) +
                          "z",
                      ]),
                      (S += l.move(v, y)),
                      r.globals.isXNumeric || (n += i),
                      {
                        pathTo: w,
                        pathFrom: S,
                        x: b,
                        y: n,
                        barYPosition: y,
                        color: d,
                      }
                    );
                  },
                },
                {
                  key: "getOHLCValue",
                  value: function (e, t) {
                    var n = this.w;
                    return {
                      o: this.isBoxPlot
                        ? n.globals.seriesCandleH[e][t]
                        : n.globals.seriesCandleO[e][t],
                      h: this.isBoxPlot
                        ? n.globals.seriesCandleO[e][t]
                        : n.globals.seriesCandleH[e][t],
                      m: n.globals.seriesCandleM[e][t],
                      l: this.isBoxPlot
                        ? n.globals.seriesCandleC[e][t]
                        : n.globals.seriesCandleL[e][t],
                      c: this.isBoxPlot
                        ? n.globals.seriesCandleL[e][t]
                        : n.globals.seriesCandleC[e][t],
                    };
                  },
                },
              ]),
              n
            );
          })(),
          Pe = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "checkColorRange",
                  value: function () {
                    var e = this.w,
                      t = !1,
                      n = e.config.plotOptions[e.config.chart.type];
                    return (
                      n.colorScale.ranges.length > 0 &&
                        n.colorScale.ranges.map(function (e, n) {
                          e.from <= 0 && (t = !0);
                        }),
                      t
                    );
                  },
                },
                {
                  key: "getShadeColor",
                  value: function (e, t, n, i) {
                    var o = this.w,
                      a = 1,
                      s = o.config.plotOptions[e].shadeIntensity,
                      r = this.determineColor(e, t, n);
                    o.globals.hasNegs || i
                      ? (a = o.config.plotOptions[e].reverseNegativeShade
                          ? r.percent < 0
                            ? (r.percent / 100) * (1.25 * s)
                            : (1 - r.percent / 100) * (1.25 * s)
                          : r.percent <= 0
                          ? 1 - (1 + r.percent / 100) * s
                          : (1 - r.percent / 100) * s)
                      : ((a = 1 - r.percent / 100),
                        "treemap" === e &&
                          (a = (1 - r.percent / 100) * (1.25 * s)));
                    var l = r.color,
                      c = new y();
                    return (
                      o.config.plotOptions[e].enableShades &&
                        (l =
                          "dark" === this.w.config.theme.mode
                            ? y.hexToRgba(
                                c.shadeColor(-1 * a, r.color),
                                o.config.fill.opacity
                              )
                            : y.hexToRgba(
                                c.shadeColor(a, r.color),
                                o.config.fill.opacity
                              )),
                      { color: l, colorProps: r }
                    );
                  },
                },
                {
                  key: "determineColor",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = i.globals.series[t][n],
                      a = i.config.plotOptions[e],
                      s = a.colorScale.inverse ? n : t;
                    a.distributed &&
                      "treemap" === i.config.chart.type &&
                      (s = n);
                    var r = i.globals.colors[s],
                      l = null,
                      c = Math.min.apply(Math, v(i.globals.series[t])),
                      u = Math.max.apply(Math, v(i.globals.series[t]));
                    a.distributed ||
                      "heatmap" !== e ||
                      ((c = i.globals.minY), (u = i.globals.maxY)),
                      void 0 !== a.colorScale.min &&
                        ((c =
                          a.colorScale.min < i.globals.minY
                            ? a.colorScale.min
                            : i.globals.minY),
                        (u =
                          a.colorScale.max > i.globals.maxY
                            ? a.colorScale.max
                            : i.globals.maxY));
                    var d = Math.abs(u) + Math.abs(c),
                      h = (100 * o) / (0 === d ? d - 1e-6 : d);
                    return (
                      a.colorScale.ranges.length > 0 &&
                        a.colorScale.ranges.map(function (e, t) {
                          if (o >= e.from && o <= e.to) {
                            (r = e.color),
                              (l = e.foreColor ? e.foreColor : null),
                              (c = e.from),
                              (u = e.to);
                            var n = Math.abs(u) + Math.abs(c);
                            h = (100 * o) / (0 === n ? n - 1e-6 : n);
                          }
                        }),
                      { color: r, foreColor: l, percent: h }
                    );
                  },
                },
                {
                  key: "calculateDataLabels",
                  value: function (e) {
                    var t = e.text,
                      n = e.x,
                      i = e.y,
                      o = e.i,
                      a = e.j,
                      s = e.colorProps,
                      r = e.fontSize,
                      l = this.w.config.dataLabels,
                      c = new k(this.ctx),
                      u = new V(this.ctx),
                      d = null;
                    if (l.enabled) {
                      d = c.group({ class: "apexcharts-data-labels" });
                      var h = l.offsetX,
                        p = l.offsetY,
                        f = n + h,
                        g = i + parseFloat(l.style.fontSize) / 3 + p;
                      u.plotDataLabelsText({
                        x: f,
                        y: g,
                        text: t,
                        i: o,
                        j: a,
                        color: s.foreColor,
                        parent: d,
                        fontSize: r,
                        dataLabelsConfig: l,
                      });
                    }
                    return d;
                  },
                },
                {
                  key: "addListeners",
                  value: function (e) {
                    var t = new k(this.ctx);
                    e.node.addEventListener(
                      "mouseenter",
                      t.pathMouseEnter.bind(this, e)
                    ),
                      e.node.addEventListener(
                        "mouseleave",
                        t.pathMouseLeave.bind(this, e)
                      ),
                      e.node.addEventListener(
                        "mousedown",
                        t.pathMouseDown.bind(this, e)
                      );
                  },
                },
              ]),
              e
            );
          })(),
          Ee = (function () {
            function e(t, n) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.xRatio = n.xRatio),
                (this.yRatio = n.yRatio),
                (this.dynamicAnim =
                  this.w.config.chart.animations.dynamicAnimation),
                (this.helpers = new Pe(t)),
                (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
                (this.strokeWidth = this.w.config.stroke.show
                  ? this.w.config.stroke.width
                  : 0);
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = n.group({ class: "apexcharts-heatmap" });
                    i.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(t.globals.cuid, ")")
                    );
                    var o = t.globals.gridWidth / t.globals.dataPoints,
                      a = t.globals.gridHeight / t.globals.series.length,
                      s = 0,
                      r = !1;
                    this.negRange = this.helpers.checkColorRange();
                    var l = e.slice();
                    t.config.yaxis[0].reversed && ((r = !0), l.reverse());
                    for (
                      var c = r ? 0 : l.length - 1;
                      r ? c < l.length : c >= 0;
                      r ? c++ : c--
                    ) {
                      var u = n.group({
                        class: "apexcharts-series apexcharts-heatmap-series",
                        seriesName: y.escapeString(t.globals.seriesNames[c]),
                        rel: c + 1,
                        "data:realIndex": c,
                      });
                      if (
                        (this.ctx.series.addCollapsedClassToSeries(u, c),
                        t.config.chart.dropShadow.enabled)
                      ) {
                        var d = t.config.chart.dropShadow;
                        new S(this.ctx).dropShadow(u, d, c);
                      }
                      for (
                        var h = 0,
                          p = t.config.plotOptions.heatmap.shadeIntensity,
                          f = 0;
                        f < l[c].length;
                        f++
                      ) {
                        var g = this.helpers.getShadeColor(
                            t.config.chart.type,
                            c,
                            f,
                            this.negRange
                          ),
                          m = g.color,
                          v = g.colorProps;
                        "image" === t.config.fill.type &&
                          (m = new W(this.ctx).fillPath({
                            seriesNumber: c,
                            dataPointIndex: f,
                            opacity: t.globals.hasNegs
                              ? v.percent < 0
                                ? 1 - (1 + v.percent / 100)
                                : p + v.percent / 100
                              : v.percent / 100,
                            patternID: y.randomId(),
                            width: t.config.fill.image.width
                              ? t.config.fill.image.width
                              : o,
                            height: t.config.fill.image.height
                              ? t.config.fill.image.height
                              : a,
                          }));
                        var b = this.rectRadius,
                          x = n.drawRect(h, s, o, a, b);
                        if (
                          (x.attr({ cx: h, cy: s }),
                          x.node.classList.add("apexcharts-heatmap-rect"),
                          u.add(x),
                          x.attr({
                            fill: m,
                            i: c,
                            index: c,
                            j: f,
                            val: e[c][f],
                            "stroke-width": this.strokeWidth,
                            stroke: t.config.plotOptions.heatmap
                              .useFillColorAsStroke
                              ? m
                              : t.globals.stroke.colors[0],
                            color: m,
                          }),
                          this.helpers.addListeners(x),
                          t.config.chart.animations.enabled &&
                            !t.globals.dataChanged)
                        ) {
                          var w = 1;
                          t.globals.resized ||
                            (w = t.config.chart.animations.speed),
                            this.animateHeatMap(x, h, s, o, a, w);
                        }
                        if (t.globals.dataChanged) {
                          var A = 1;
                          if (
                            this.dynamicAnim.enabled &&
                            t.globals.shouldAnimate
                          ) {
                            A = this.dynamicAnim.speed;
                            var C =
                              t.globals.previousPaths[c] &&
                              t.globals.previousPaths[c][f] &&
                              t.globals.previousPaths[c][f].color;
                            C || (C = "rgba(255, 255, 255, 0)"),
                              this.animateHeatColor(
                                x,
                                y.isColorHex(C) ? C : y.rgb2hex(C),
                                y.isColorHex(m) ? m : y.rgb2hex(m),
                                A
                              );
                          }
                        }
                        var M = (0, t.config.dataLabels.formatter)(
                            t.globals.series[c][f],
                            {
                              value: t.globals.series[c][f],
                              seriesIndex: c,
                              dataPointIndex: f,
                              w: t,
                            }
                          ),
                          P = this.helpers.calculateDataLabels({
                            text: M,
                            x: h + o / 2,
                            y: s + a / 2,
                            i: c,
                            j: f,
                            colorProps: v,
                            series: l,
                          });
                        null !== P && u.add(P), (h += o);
                      }
                      (s += a), i.add(u);
                    }
                    var E = t.globals.yAxisScale[0].result.slice();
                    return (
                      t.config.yaxis[0].reversed ? E.unshift("") : E.push(""),
                      (t.globals.yAxisScale[0].result = E),
                      i
                    );
                  },
                },
                {
                  key: "animateHeatMap",
                  value: function (e, t, n, i, o, a) {
                    var s = new w(this.ctx);
                    s.animateRect(
                      e,
                      { x: t + i / 2, y: n + o / 2, width: 0, height: 0 },
                      { x: t, y: n, width: i, height: o },
                      a,
                      function () {
                        s.animationCompleted(e);
                      }
                    );
                  },
                },
                {
                  key: "animateHeatColor",
                  value: function (e, t, n, i) {
                    e.attr({ fill: t }).animate(i).attr({ fill: n });
                  },
                },
              ]),
              e
            );
          })(),
          Le = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "drawYAxisTexts",
                  value: function (e, t, n, i) {
                    var o = this.w,
                      a = o.config.yaxis[0],
                      s = o.globals.yLabelFormatters[0];
                    return new k(this.ctx).drawText({
                      x: e + a.labels.offsetX,
                      y: t + a.labels.offsetY,
                      text: s(i, n),
                      textAnchor: "middle",
                      fontSize: a.labels.style.fontSize,
                      fontFamily: a.labels.style.fontFamily,
                      foreColor: Array.isArray(a.labels.style.colors)
                        ? a.labels.style.colors[n]
                        : a.labels.style.colors,
                    });
                  },
                },
              ]),
              e
            );
          })(),
          Te = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
              var n = this.w;
              (this.chartType = this.w.config.chart.type),
                (this.initialAnim = this.w.config.chart.animations.enabled),
                (this.dynamicAnim =
                  this.initialAnim &&
                  this.w.config.chart.animations.dynamicAnimation.enabled),
                (this.animBeginArr = [0]),
                (this.animDur = 0),
                (this.donutDataLabels =
                  this.w.config.plotOptions.pie.donut.labels),
                (this.lineColorArr =
                  void 0 !== n.globals.stroke.colors
                    ? n.globals.stroke.colors
                    : n.globals.colors),
                (this.defaultSize = Math.min(
                  n.globals.gridWidth,
                  n.globals.gridHeight
                )),
                (this.centerY = this.defaultSize / 2),
                (this.centerX = n.globals.gridWidth / 2),
                "radialBar" === n.config.chart.type
                  ? (this.fullAngle = 360)
                  : (this.fullAngle = Math.abs(
                      n.config.plotOptions.pie.endAngle -
                        n.config.plotOptions.pie.startAngle
                    )),
                (this.initialAngle =
                  n.config.plotOptions.pie.startAngle % this.fullAngle),
                (n.globals.radialSize =
                  this.defaultSize / 2.05 -
                  n.config.stroke.width -
                  (n.config.chart.sparkline.enabled
                    ? 0
                    : n.config.chart.dropShadow.blur)),
                (this.donutSize =
                  (n.globals.radialSize *
                    parseInt(n.config.plotOptions.pie.donut.size, 10)) /
                  100);
              var i = n.config.plotOptions.pie.customScale,
                o = n.globals.gridWidth / 2,
                a = n.globals.gridHeight / 2;
              (this.translateX = o - o * i),
                (this.translateY = a - a * i),
                (this.dataLabelsGroup = new k(this.ctx).group({
                  class: "apexcharts-datalabels-group",
                  transform: "translate("
                    .concat(this.translateX, ", ")
                    .concat(this.translateY, ") scale(")
                    .concat(i, ")"),
                })),
                (this.maxY = 0),
                (this.sliceLabels = []),
                (this.sliceSizes = []),
                (this.prevSectorAngleArr = []);
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = new k(this.ctx),
                      o = i.group({ class: "apexcharts-pie" });
                    if (n.globals.noData) return o;
                    for (var a = 0, s = 0; s < e.length; s++)
                      a += y.negToZero(e[s]);
                    var r = [],
                      l = i.group();
                    0 === a && (a = 1e-5),
                      e.forEach(function (e) {
                        t.maxY = Math.max(t.maxY, e);
                      }),
                      n.config.yaxis[0].max &&
                        (this.maxY = n.config.yaxis[0].max),
                      "back" === n.config.grid.position &&
                        "polarArea" === this.chartType &&
                        this.drawPolarElements(o);
                    for (var c = 0; c < e.length; c++) {
                      var u = (this.fullAngle * y.negToZero(e[c])) / a;
                      r.push(u),
                        "polarArea" === this.chartType
                          ? ((r[c] = this.fullAngle / e.length),
                            this.sliceSizes.push(
                              (n.globals.radialSize * e[c]) / this.maxY
                            ))
                          : this.sliceSizes.push(n.globals.radialSize);
                    }
                    if (n.globals.dataChanged) {
                      for (
                        var d, h = 0, p = 0;
                        p < n.globals.previousPaths.length;
                        p++
                      )
                        h += y.negToZero(n.globals.previousPaths[p]);
                      for (var f = 0; f < n.globals.previousPaths.length; f++)
                        (d =
                          (this.fullAngle *
                            y.negToZero(n.globals.previousPaths[f])) /
                          h),
                          this.prevSectorAngleArr.push(d);
                    }
                    if (
                      (this.donutSize < 0 && (this.donutSize = 0),
                      "donut" === this.chartType)
                    ) {
                      var g = i.drawCircle(this.donutSize);
                      g.attr({
                        cx: this.centerX,
                        cy: this.centerY,
                        fill: n.config.plotOptions.pie.donut.background
                          ? n.config.plotOptions.pie.donut.background
                          : "transparent",
                      }),
                        l.add(g);
                    }
                    var m = this.drawArcs(r, e);
                    if (
                      (this.sliceLabels.forEach(function (e) {
                        m.add(e);
                      }),
                      l.attr({
                        transform: "translate("
                          .concat(this.translateX, ", ")
                          .concat(this.translateY, ") scale(")
                          .concat(n.config.plotOptions.pie.customScale, ")"),
                      }),
                      l.add(m),
                      o.add(l),
                      this.donutDataLabels.show)
                    ) {
                      var v = this.renderInnerDataLabels(
                        this.dataLabelsGroup,
                        this.donutDataLabels,
                        {
                          hollowSize: this.donutSize,
                          centerX: this.centerX,
                          centerY: this.centerY,
                          opacity: this.donutDataLabels.show,
                        }
                      );
                      o.add(v);
                    }
                    return (
                      "front" === n.config.grid.position &&
                        "polarArea" === this.chartType &&
                        this.drawPolarElements(o),
                      o
                    );
                  },
                },
                {
                  key: "drawArcs",
                  value: function (e, t) {
                    var n = this.w,
                      i = new S(this.ctx),
                      o = new k(this.ctx),
                      a = new W(this.ctx),
                      s = o.group({ class: "apexcharts-slices" }),
                      r = this.initialAngle,
                      l = this.initialAngle,
                      c = this.initialAngle,
                      u = this.initialAngle;
                    this.strokeWidth = n.config.stroke.show
                      ? n.config.stroke.width
                      : 0;
                    for (var d = 0; d < e.length; d++) {
                      var h = o.group({
                        class: "apexcharts-series apexcharts-pie-series",
                        seriesName: y.escapeString(n.globals.seriesNames[d]),
                        rel: d + 1,
                        "data:realIndex": d,
                      });
                      s.add(h),
                        (l = u),
                        (c = (r = c) + e[d]),
                        (u = l + this.prevSectorAngleArr[d]);
                      var p = c < r ? this.fullAngle + c - r : c - r,
                        f = a.fillPath({
                          seriesNumber: d,
                          size: this.sliceSizes[d],
                          value: t[d],
                        }),
                        g = this.getChangedPath(l, u),
                        m = o.drawPath({
                          d: g,
                          stroke: Array.isArray(this.lineColorArr)
                            ? this.lineColorArr[d]
                            : this.lineColorArr,
                          strokeWidth: 0,
                          fill: f,
                          fillOpacity: n.config.fill.opacity,
                          classes: "apexcharts-pie-area apexcharts-"
                            .concat(this.chartType.toLowerCase(), "-slice-")
                            .concat(d),
                        });
                      if (
                        (m.attr({ index: 0, j: d }),
                        i.setSelectionFilter(m, 0, d),
                        n.config.chart.dropShadow.enabled)
                      ) {
                        var v = n.config.chart.dropShadow;
                        i.dropShadow(m, v, d);
                      }
                      this.addListeners(m, this.donutDataLabels),
                        k.setAttrs(m.node, {
                          "data:angle": p,
                          "data:startAngle": r,
                          "data:strokeWidth": this.strokeWidth,
                          "data:value": t[d],
                        });
                      var b = { x: 0, y: 0 };
                      "pie" === this.chartType || "polarArea" === this.chartType
                        ? (b = y.polarToCartesian(
                            this.centerX,
                            this.centerY,
                            n.globals.radialSize / 1.25 +
                              n.config.plotOptions.pie.dataLabels.offset,
                            (r + p / 2) % this.fullAngle
                          ))
                        : "donut" === this.chartType &&
                          (b = y.polarToCartesian(
                            this.centerX,
                            this.centerY,
                            (n.globals.radialSize + this.donutSize) / 2 +
                              n.config.plotOptions.pie.dataLabels.offset,
                            (r + p / 2) % this.fullAngle
                          )),
                        h.add(m);
                      var x = 0;
                      if (
                        (!this.initialAnim ||
                        n.globals.resized ||
                        n.globals.dataChanged
                          ? this.animBeginArr.push(0)
                          : (0 ===
                              (x =
                                (p / this.fullAngle) *
                                n.config.chart.animations.speed) && (x = 1),
                            (this.animDur = x + this.animDur),
                            this.animBeginArr.push(this.animDur)),
                        this.dynamicAnim && n.globals.dataChanged
                          ? this.animatePaths(m, {
                              size: this.sliceSizes[d],
                              endAngle: c,
                              startAngle: r,
                              prevStartAngle: l,
                              prevEndAngle: u,
                              animateStartingPos: !0,
                              i: d,
                              animBeginArr: this.animBeginArr,
                              shouldSetPrevPaths: !0,
                              dur: n.config.chart.animations.dynamicAnimation
                                .speed,
                            })
                          : this.animatePaths(m, {
                              size: this.sliceSizes[d],
                              endAngle: c,
                              startAngle: r,
                              i: d,
                              totalItems: e.length - 1,
                              animBeginArr: this.animBeginArr,
                              dur: x,
                            }),
                        n.config.plotOptions.pie.expandOnClick &&
                          "polarArea" !== this.chartType &&
                          m.node.addEventListener(
                            "mouseup",
                            this.pieClicked.bind(this, d)
                          ),
                        void 0 !== n.globals.selectedDataPoints[0] &&
                          n.globals.selectedDataPoints[0].indexOf(d) > -1 &&
                          this.pieClicked(d),
                        n.config.dataLabels.enabled)
                      ) {
                        var w = b.x,
                          A = b.y,
                          C = (100 * p) / this.fullAngle + "%";
                        if (
                          0 !== p &&
                          n.config.plotOptions.pie.dataLabels
                            .minAngleToShowLabel < e[d]
                        ) {
                          var M = n.config.dataLabels.formatter;
                          void 0 !== M &&
                            (C = M(n.globals.seriesPercent[d][0], {
                              seriesIndex: d,
                              w: n,
                            }));
                          var P = n.globals.dataLabels.style.colors[d],
                            E = o.group({ class: "apexcharts-datalabels" }),
                            L = o.drawText({
                              x: w,
                              y: A,
                              text: C,
                              textAnchor: "middle",
                              fontSize: n.config.dataLabels.style.fontSize,
                              fontFamily: n.config.dataLabels.style.fontFamily,
                              fontWeight: n.config.dataLabels.style.fontWeight,
                              foreColor: P,
                            });
                          if (
                            (E.add(L), n.config.dataLabels.dropShadow.enabled)
                          ) {
                            var T = n.config.dataLabels.dropShadow;
                            i.dropShadow(L, T);
                          }
                          L.node.classList.add("apexcharts-pie-label"),
                            n.config.chart.animations.animate &&
                              !1 === n.globals.resized &&
                              (L.node.classList.add(
                                "apexcharts-pie-label-delay"
                              ),
                              (L.node.style.animationDelay =
                                n.config.chart.animations.speed / 940 + "s")),
                            this.sliceLabels.push(E);
                        }
                      }
                    }
                    return s;
                  },
                },
                {
                  key: "addListeners",
                  value: function (e, t) {
                    var n = new k(this.ctx);
                    e.node.addEventListener(
                      "mouseenter",
                      n.pathMouseEnter.bind(this, e)
                    ),
                      e.node.addEventListener(
                        "mouseleave",
                        n.pathMouseLeave.bind(this, e)
                      ),
                      e.node.addEventListener(
                        "mouseleave",
                        this.revertDataLabelsInner.bind(this, e.node, t)
                      ),
                      e.node.addEventListener(
                        "mousedown",
                        n.pathMouseDown.bind(this, e)
                      ),
                      this.donutDataLabels.total.showAlways ||
                        (e.node.addEventListener(
                          "mouseenter",
                          this.printDataLabelsInner.bind(this, e.node, t)
                        ),
                        e.node.addEventListener(
                          "mousedown",
                          this.printDataLabelsInner.bind(this, e.node, t)
                        ));
                  },
                },
                {
                  key: "animatePaths",
                  value: function (e, t) {
                    var n = this.w,
                      i =
                        t.endAngle < t.startAngle
                          ? this.fullAngle + t.endAngle - t.startAngle
                          : t.endAngle - t.startAngle,
                      o = i,
                      a = t.startAngle,
                      s = t.startAngle;
                    void 0 !== t.prevStartAngle &&
                      void 0 !== t.prevEndAngle &&
                      ((a = t.prevEndAngle),
                      (o =
                        t.prevEndAngle < t.prevStartAngle
                          ? this.fullAngle + t.prevEndAngle - t.prevStartAngle
                          : t.prevEndAngle - t.prevStartAngle)),
                      t.i === n.config.series.length - 1 &&
                        (i + s > this.fullAngle
                          ? (t.endAngle = t.endAngle - (i + s))
                          : i + s < this.fullAngle &&
                            (t.endAngle =
                              t.endAngle + (this.fullAngle - (i + s)))),
                      i === this.fullAngle && (i = this.fullAngle - 0.01),
                      this.animateArc(e, a, s, i, o, t);
                  },
                },
                {
                  key: "animateArc",
                  value: function (e, t, n, i, o, a) {
                    var s,
                      r = this,
                      l = this.w,
                      c = new w(this.ctx),
                      u = a.size;
                    (isNaN(t) || isNaN(o)) && ((t = n), (o = i), (a.dur = 0));
                    var d = i,
                      h = n,
                      p = t < n ? this.fullAngle + t - n : t - n;
                    l.globals.dataChanged &&
                      a.shouldSetPrevPaths &&
                      a.prevEndAngle &&
                      ((s = r.getPiePath({
                        me: r,
                        startAngle: a.prevStartAngle,
                        angle:
                          a.prevEndAngle < a.prevStartAngle
                            ? this.fullAngle + a.prevEndAngle - a.prevStartAngle
                            : a.prevEndAngle - a.prevStartAngle,
                        size: u,
                      })),
                      e.attr({ d: s })),
                      0 !== a.dur
                        ? e
                            .animate(
                              a.dur,
                              l.globals.easing,
                              a.animBeginArr[a.i]
                            )
                            .afterAll(function () {
                              ("pie" !== r.chartType &&
                                "donut" !== r.chartType &&
                                "polarArea" !== r.chartType) ||
                                this.animate(
                                  l.config.chart.animations.dynamicAnimation
                                    .speed
                                ).attr({ "stroke-width": r.strokeWidth }),
                                a.i === l.config.series.length - 1 &&
                                  c.animationCompleted(e);
                            })
                            .during(function (l) {
                              (d = p + (i - p) * l),
                                a.animateStartingPos &&
                                  ((d = o + (i - o) * l),
                                  (h = t - o + (n - (t - o)) * l)),
                                (s = r.getPiePath({
                                  me: r,
                                  startAngle: h,
                                  angle: d,
                                  size: u,
                                })),
                                e.node.setAttribute("data:pathOrig", s),
                                e.attr({ d: s });
                            })
                        : ((s = r.getPiePath({
                            me: r,
                            startAngle: h,
                            angle: i,
                            size: u,
                          })),
                          a.isTrack || (l.globals.animationEnded = !0),
                          e.node.setAttribute("data:pathOrig", s),
                          e.attr({ d: s, "stroke-width": r.strokeWidth }));
                  },
                },
                {
                  key: "pieClicked",
                  value: function (e) {
                    var t,
                      n = this.w,
                      i = this,
                      o =
                        i.sliceSizes[e] +
                        (n.config.plotOptions.pie.expandOnClick ? 4 : 0),
                      a = n.globals.dom.Paper.select(
                        ".apexcharts-"
                          .concat(i.chartType.toLowerCase(), "-slice-")
                          .concat(e)
                      ).members[0];
                    if ("true" !== a.attr("data:pieClicked")) {
                      var s = n.globals.dom.baseEl.getElementsByClassName(
                        "apexcharts-pie-area"
                      );
                      Array.prototype.forEach.call(s, function (e) {
                        e.setAttribute("data:pieClicked", "false");
                        var t = e.getAttribute("data:pathOrig");
                        t && e.setAttribute("d", t);
                      }),
                        (n.globals.capturedDataPointIndex = e),
                        a.attr("data:pieClicked", "true");
                      var r = parseInt(a.attr("data:startAngle"), 10),
                        l = parseInt(a.attr("data:angle"), 10);
                      (t = i.getPiePath({
                        me: i,
                        startAngle: r,
                        angle: l,
                        size: o,
                      })),
                        360 !== l && a.plot(t);
                    } else {
                      a.attr({ "data:pieClicked": "false" }),
                        this.revertDataLabelsInner(
                          a.node,
                          this.donutDataLabels
                        );
                      var c = a.attr("data:pathOrig");
                      a.attr({ d: c });
                    }
                  },
                },
                {
                  key: "getChangedPath",
                  value: function (e, t) {
                    var n = "";
                    return (
                      this.dynamicAnim &&
                        this.w.globals.dataChanged &&
                        (n = this.getPiePath({
                          me: this,
                          startAngle: e,
                          angle: t - e,
                          size: this.size,
                        })),
                      n
                    );
                  },
                },
                {
                  key: "getPiePath",
                  value: function (e) {
                    var t,
                      n = e.me,
                      i = e.startAngle,
                      o = e.angle,
                      a = e.size,
                      s = new k(this.ctx),
                      r = i,
                      l = (Math.PI * (r - 90)) / 180,
                      c = o + i;
                    Math.ceil(c) >=
                      this.fullAngle +
                        (this.w.config.plotOptions.pie.startAngle %
                          this.fullAngle) &&
                      (c =
                        this.fullAngle +
                        (this.w.config.plotOptions.pie.startAngle %
                          this.fullAngle) -
                        0.01),
                      Math.ceil(c) > this.fullAngle && (c -= this.fullAngle);
                    var u = (Math.PI * (c - 90)) / 180,
                      d = n.centerX + a * Math.cos(l),
                      h = n.centerY + a * Math.sin(l),
                      p = n.centerX + a * Math.cos(u),
                      f = n.centerY + a * Math.sin(u),
                      g = y.polarToCartesian(
                        n.centerX,
                        n.centerY,
                        n.donutSize,
                        c
                      ),
                      m = y.polarToCartesian(
                        n.centerX,
                        n.centerY,
                        n.donutSize,
                        r
                      ),
                      v = o > 180 ? 1 : 0,
                      b = ["M", d, h, "A", a, a, 0, v, 1, p, f];
                    return (
                      (t =
                        "donut" === n.chartType
                          ? []
                              .concat(b, [
                                "L",
                                g.x,
                                g.y,
                                "A",
                                n.donutSize,
                                n.donutSize,
                                0,
                                v,
                                0,
                                m.x,
                                m.y,
                                "L",
                                d,
                                h,
                                "z",
                              ])
                              .join(" ")
                          : "pie" === n.chartType || "polarArea" === n.chartType
                          ? []
                              .concat(b, ["L", n.centerX, n.centerY, "L", d, h])
                              .join(" ")
                          : [].concat(b).join(" ")),
                      s.roundPathCorners(t, 2 * this.strokeWidth)
                    );
                  },
                },
                {
                  key: "drawPolarElements",
                  value: function (e) {
                    var t = this.w,
                      n = new Z(this.ctx),
                      i = new k(this.ctx),
                      o = new Le(this.ctx),
                      a = i.group(),
                      s = i.group(),
                      r = n.niceScale(0, Math.ceil(this.maxY), 0),
                      l = r.result.reverse(),
                      c = r.result.length;
                    this.maxY = r.niceMax;
                    for (
                      var u = t.globals.radialSize, d = u / (c - 1), h = 0;
                      h < c - 1;
                      h++
                    ) {
                      var p = i.drawCircle(u);
                      if (
                        (p.attr({
                          cx: this.centerX,
                          cy: this.centerY,
                          fill: "none",
                          "stroke-width":
                            t.config.plotOptions.polarArea.rings.strokeWidth,
                          stroke:
                            t.config.plotOptions.polarArea.rings.strokeColor,
                        }),
                        t.config.yaxis[0].show)
                      ) {
                        var f = o.drawYAxisTexts(
                          this.centerX,
                          this.centerY -
                            u +
                            parseInt(
                              t.config.yaxis[0].labels.style.fontSize,
                              10
                            ) /
                              2,
                          h,
                          l[h]
                        );
                        s.add(f);
                      }
                      a.add(p), (u -= d);
                    }
                    this.drawSpokes(e), e.add(a), e.add(s);
                  },
                },
                {
                  key: "renderInnerDataLabels",
                  value: function (e, t, n) {
                    var i = this.w,
                      o = new k(this.ctx),
                      a = t.total.show;
                    (e.node.innerHTML = ""), (e.node.style.opacity = n.opacity);
                    var s,
                      r,
                      l = n.centerX,
                      c = n.centerY;
                    s =
                      void 0 === t.name.color
                        ? i.globals.colors[0]
                        : t.name.color;
                    var u = t.name.fontSize,
                      d = t.name.fontFamily,
                      h = t.name.fontWeight;
                    r =
                      void 0 === t.value.color
                        ? i.config.chart.foreColor
                        : t.value.color;
                    var p = t.value.formatter,
                      f = "",
                      g = "";
                    if (
                      (a
                        ? ((s = t.total.color),
                          (u = t.total.fontSize),
                          (d = t.total.fontFamily),
                          (h = t.total.fontWeight),
                          (g = t.total.label),
                          (f = t.total.formatter(i)))
                        : 1 === i.globals.series.length &&
                          ((f = p(i.globals.series[0], i)),
                          (g = i.globals.seriesNames[0])),
                      g && (g = t.name.formatter(g, t.total.show, i)),
                      t.name.show)
                    ) {
                      var m = o.drawText({
                        x: l,
                        y: c + parseFloat(t.name.offsetY),
                        text: g,
                        textAnchor: "middle",
                        foreColor: s,
                        fontSize: u,
                        fontWeight: h,
                        fontFamily: d,
                      });
                      m.node.classList.add("apexcharts-datalabel-label"),
                        e.add(m);
                    }
                    if (t.value.show) {
                      var v = t.name.show
                          ? parseFloat(t.value.offsetY) + 16
                          : t.value.offsetY,
                        b = o.drawText({
                          x: l,
                          y: c + v,
                          text: f,
                          textAnchor: "middle",
                          foreColor: r,
                          fontWeight: t.value.fontWeight,
                          fontSize: t.value.fontSize,
                          fontFamily: t.value.fontFamily,
                        });
                      b.node.classList.add("apexcharts-datalabel-value"),
                        e.add(b);
                    }
                    return e;
                  },
                },
                {
                  key: "printInnerLabels",
                  value: function (e, t, n, i) {
                    var o,
                      a = this.w;
                    i
                      ? (o =
                          void 0 === e.name.color
                            ? a.globals.colors[
                                parseInt(i.parentNode.getAttribute("rel"), 10) -
                                  1
                              ]
                            : e.name.color)
                      : a.globals.series.length > 1 &&
                        e.total.show &&
                        (o = e.total.color);
                    var s = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabel-label"
                      ),
                      r = a.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabel-value"
                      );
                    (n = (0, e.value.formatter)(n, a)),
                      i ||
                        "function" != typeof e.total.formatter ||
                        (n = e.total.formatter(a));
                    var l = t === e.total.label;
                    (t = e.name.formatter(t, l, a)),
                      null !== s && (s.textContent = t),
                      null !== r && (r.textContent = n),
                      null !== s && (s.style.fill = o);
                  },
                },
                {
                  key: "printDataLabelsInner",
                  value: function (e, t) {
                    var n = this.w,
                      i = e.getAttribute("data:value"),
                      o =
                        n.globals.seriesNames[
                          parseInt(e.parentNode.getAttribute("rel"), 10) - 1
                        ];
                    n.globals.series.length > 1 &&
                      this.printInnerLabels(t, o, i, e);
                    var a = n.globals.dom.baseEl.querySelector(
                      ".apexcharts-datalabels-group"
                    );
                    null !== a && (a.style.opacity = 1);
                  },
                },
                {
                  key: "drawSpokes",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = new k(this.ctx),
                      o = n.config.plotOptions.polarArea.spokes;
                    if (0 !== o.strokeWidth) {
                      for (
                        var a = [], s = 360 / n.globals.series.length, r = 0;
                        r < n.globals.series.length;
                        r++
                      )
                        a.push(
                          y.polarToCartesian(
                            this.centerX,
                            this.centerY,
                            n.globals.radialSize,
                            n.config.plotOptions.pie.startAngle + s * r
                          )
                        );
                      a.forEach(function (n, a) {
                        var s = i.drawLine(
                          n.x,
                          n.y,
                          t.centerX,
                          t.centerY,
                          Array.isArray(o.connectorColors)
                            ? o.connectorColors[a]
                            : o.connectorColors
                        );
                        e.add(s);
                      });
                    }
                  },
                },
                {
                  key: "revertDataLabelsInner",
                  value: function () {
                    var e = this.w;
                    if (this.donutDataLabels.show) {
                      var t = e.globals.dom.Paper.select(
                          ".apexcharts-datalabels-group"
                        ).members[0],
                        n = this.renderInnerDataLabels(
                          t,
                          this.donutDataLabels,
                          {
                            hollowSize: this.donutSize,
                            centerX: this.centerX,
                            centerY: this.centerY,
                            opacity: this.donutDataLabels.show,
                          }
                        );
                      e.globals.dom.Paper.select(
                        ".apexcharts-radialbar, .apexcharts-pie"
                      ).members[0].add(n);
                    }
                  },
                },
              ]),
              e
            );
          })(),
          Oe = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.chartType = this.w.config.chart.type),
                (this.initialAnim = this.w.config.chart.animations.enabled),
                (this.dynamicAnim =
                  this.initialAnim &&
                  this.w.config.chart.animations.dynamicAnimation.enabled),
                (this.animDur = 0);
              var n = this.w;
              (this.graphics = new k(this.ctx)),
                (this.lineColorArr =
                  void 0 !== n.globals.stroke.colors
                    ? n.globals.stroke.colors
                    : n.globals.colors),
                (this.defaultSize =
                  n.globals.svgHeight < n.globals.svgWidth
                    ? n.globals.gridHeight + 1.5 * n.globals.goldenPadding
                    : n.globals.gridWidth),
                (this.isLog = n.config.yaxis[0].logarithmic),
                (this.logBase = n.config.yaxis[0].logBase),
                (this.coreUtils = new A(this.ctx)),
                (this.maxValue = this.isLog
                  ? this.coreUtils.getLogVal(this.logBase, n.globals.maxY, 0)
                  : n.globals.maxY),
                (this.minValue = this.isLog
                  ? this.coreUtils.getLogVal(
                      this.logBase,
                      this.w.globals.minY,
                      0
                    )
                  : n.globals.minY),
                (this.polygons = n.config.plotOptions.radar.polygons),
                (this.strokeWidth = n.config.stroke.show
                  ? n.config.stroke.width
                  : 0),
                (this.size =
                  this.defaultSize / 2.1 -
                  this.strokeWidth -
                  n.config.chart.dropShadow.blur),
                n.config.xaxis.labels.show &&
                  (this.size = this.size - n.globals.xAxisLabelsWidth / 1.75),
                void 0 !== n.config.plotOptions.radar.size &&
                  (this.size = n.config.plotOptions.radar.size),
                (this.dataRadiusOfPercent = []),
                (this.dataRadius = []),
                (this.angleArr = []),
                (this.yaxisLabelsTextsPos = []);
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = new W(this.ctx),
                      o = [],
                      s = new V(this.ctx);
                    e.length &&
                      (this.dataPointsLen =
                        e[n.globals.maxValsInArrayIndex].length),
                      (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
                    var r = n.globals.gridWidth / 2,
                      l = n.globals.gridHeight / 2,
                      c = r + n.config.plotOptions.radar.offsetX,
                      u = l + n.config.plotOptions.radar.offsetY,
                      d = this.graphics.group({
                        class: "apexcharts-radar-series apexcharts-plot-series",
                        transform: "translate("
                          .concat(c || 0, ", ")
                          .concat(u || 0, ")"),
                      }),
                      h = [],
                      p = null,
                      f = null;
                    if (
                      ((this.yaxisLabels = this.graphics.group({
                        class: "apexcharts-yaxis",
                      })),
                      e.forEach(function (e, r) {
                        var l = e.length === n.globals.dataPoints,
                          c = t.graphics
                            .group()
                            .attr({
                              class: "apexcharts-series",
                              "data:longestSeries": l,
                              seriesName: y.escapeString(
                                n.globals.seriesNames[r]
                              ),
                              rel: r + 1,
                              "data:realIndex": r,
                            });
                        (t.dataRadiusOfPercent[r] = []),
                          (t.dataRadius[r] = []),
                          (t.angleArr[r] = []),
                          e.forEach(function (e, n) {
                            var i = Math.abs(t.maxValue - t.minValue);
                            (e -= t.minValue),
                              t.isLog &&
                                (e = t.coreUtils.getLogVal(t.logBase, e, 0)),
                              (t.dataRadiusOfPercent[r][n] = e / i),
                              (t.dataRadius[r][n] =
                                t.dataRadiusOfPercent[r][n] * t.size),
                              (t.angleArr[r][n] = n * t.disAngle);
                          }),
                          (h = t.getDataPointsPos(
                            t.dataRadius[r],
                            t.angleArr[r]
                          ));
                        var u = t.createPaths(h, { x: 0, y: 0 });
                        (p = t.graphics.group({
                          class:
                            "apexcharts-series-markers-wrap apexcharts-element-hidden",
                        })),
                          (f = t.graphics.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": r,
                          })),
                          n.globals.delayedElements.push({
                            el: p.node,
                            index: r,
                          });
                        var d = {
                            i: r,
                            realIndex: r,
                            animationDelay: r,
                            initialSpeed: n.config.chart.animations.speed,
                            dataChangeSpeed:
                              n.config.chart.animations.dynamicAnimation.speed,
                            className: "apexcharts-radar",
                            shouldClipToGrid: !1,
                            bindEventsOnPaths: !1,
                            stroke: n.globals.stroke.colors[r],
                            strokeLineCap: n.config.stroke.lineCap,
                          },
                          g = null;
                        n.globals.previousPaths.length > 0 &&
                          (g = t.getPreviousPath(r));
                        for (var m = 0; m < u.linePathsTo.length; m++) {
                          var v = t.graphics.renderPaths(
                            a(
                              a({}, d),
                              {},
                              {
                                pathFrom: null === g ? u.linePathsFrom[m] : g,
                                pathTo: u.linePathsTo[m],
                                strokeWidth: Array.isArray(t.strokeWidth)
                                  ? t.strokeWidth[r]
                                  : t.strokeWidth,
                                fill: "none",
                                drawShadow: !1,
                              }
                            )
                          );
                          c.add(v);
                          var b = i.fillPath({ seriesNumber: r }),
                            x = t.graphics.renderPaths(
                              a(
                                a({}, d),
                                {},
                                {
                                  pathFrom: null === g ? u.areaPathsFrom[m] : g,
                                  pathTo: u.areaPathsTo[m],
                                  strokeWidth: 0,
                                  fill: b,
                                  drawShadow: !1,
                                }
                              )
                            );
                          if (n.config.chart.dropShadow.enabled) {
                            var w = new S(t.ctx),
                              k = n.config.chart.dropShadow;
                            w.dropShadow(
                              x,
                              Object.assign({}, k, { noUserSpaceOnUse: !0 }),
                              r
                            );
                          }
                          c.add(x);
                        }
                        e.forEach(function (e, i) {
                          var o = new H(t.ctx).getMarkerConfig({
                              cssClass: "apexcharts-marker",
                              seriesIndex: r,
                              dataPointIndex: i,
                            }),
                            l = t.graphics.drawMarker(h[i].x, h[i].y, o);
                          l.attr("rel", i),
                            l.attr("j", i),
                            l.attr("index", r),
                            l.node.setAttribute("default-marker-size", o.pSize);
                          var u = t.graphics.group({
                            class: "apexcharts-series-markers",
                          });
                          u && u.add(l), p.add(u), c.add(p);
                          var d = n.config.dataLabels;
                          if (d.enabled) {
                            var g = d.formatter(n.globals.series[r][i], {
                              seriesIndex: r,
                              dataPointIndex: i,
                              w: n,
                            });
                            s.plotDataLabelsText({
                              x: h[i].x,
                              y: h[i].y,
                              text: g,
                              textAnchor: "middle",
                              i: r,
                              j: r,
                              parent: f,
                              offsetCorrection: !1,
                              dataLabelsConfig: a({}, d),
                            });
                          }
                          c.add(f);
                        }),
                          o.push(c);
                      }),
                      this.drawPolygons({ parent: d }),
                      n.config.xaxis.labels.show)
                    ) {
                      var g = this.drawXAxisTexts();
                      d.add(g);
                    }
                    return (
                      o.forEach(function (e) {
                        d.add(e);
                      }),
                      d.add(this.yaxisLabels),
                      d
                    );
                  },
                },
                {
                  key: "drawPolygons",
                  value: function (e) {
                    for (
                      var t = this,
                        n = this.w,
                        i = e.parent,
                        o = new Le(this.ctx),
                        a = n.globals.yAxisScale[0].result.reverse(),
                        s = a.length,
                        r = [],
                        l = this.size / (s - 1),
                        c = 0;
                      c < s;
                      c++
                    )
                      r[c] = l * c;
                    r.reverse();
                    var u = [],
                      d = [];
                    r.forEach(function (e, n) {
                      var i = y.getPolygonPos(e, t.dataPointsLen),
                        o = "";
                      i.forEach(function (e, i) {
                        if (0 === n) {
                          var a = t.graphics.drawLine(
                            e.x,
                            e.y,
                            0,
                            0,
                            Array.isArray(t.polygons.connectorColors)
                              ? t.polygons.connectorColors[i]
                              : t.polygons.connectorColors
                          );
                          d.push(a);
                        }
                        0 === i &&
                          t.yaxisLabelsTextsPos.push({ x: e.x, y: e.y }),
                          (o += e.x + "," + e.y + " ");
                      }),
                        u.push(o);
                    }),
                      u.forEach(function (e, o) {
                        var a = t.polygons.strokeColors,
                          s = t.polygons.strokeWidth,
                          r = t.graphics.drawPolygon(
                            e,
                            Array.isArray(a) ? a[o] : a,
                            Array.isArray(s) ? s[o] : s,
                            n.globals.radarPolygons.fill.colors[o]
                          );
                        i.add(r);
                      }),
                      d.forEach(function (e) {
                        i.add(e);
                      }),
                      n.config.yaxis[0].show &&
                        this.yaxisLabelsTextsPos.forEach(function (e, n) {
                          var i = o.drawYAxisTexts(e.x, e.y, n, a[n]);
                          t.yaxisLabels.add(i);
                        });
                  },
                },
                {
                  key: "drawXAxisTexts",
                  value: function () {
                    var e = this,
                      t = this.w,
                      n = t.config.xaxis.labels,
                      i = this.graphics.group({ class: "apexcharts-xaxis" }),
                      o = y.getPolygonPos(this.size, this.dataPointsLen);
                    return (
                      t.globals.labels.forEach(function (s, r) {
                        var l = t.config.xaxis.labels.formatter,
                          c = new V(e.ctx);
                        if (o[r]) {
                          var u = e.getTextPos(o[r], e.size),
                            d = l(s, {
                              seriesIndex: -1,
                              dataPointIndex: r,
                              w: t,
                            });
                          c.plotDataLabelsText({
                            x: u.newX,
                            y: u.newY,
                            text: d,
                            textAnchor: u.textAnchor,
                            i: r,
                            j: r,
                            parent: i,
                            className: "apexcharts-xaxis-label",
                            color:
                              Array.isArray(n.style.colors) && n.style.colors[r]
                                ? n.style.colors[r]
                                : "#a8a8a8",
                            dataLabelsConfig: a(
                              {
                                textAnchor: u.textAnchor,
                                dropShadow: { enabled: !1 },
                              },
                              n
                            ),
                            offsetCorrection: !1,
                          }).on("click", function (n) {
                            if (
                              "function" ==
                              typeof t.config.chart.events.xAxisLabelClick
                            ) {
                              var i = Object.assign({}, t, { labelIndex: r });
                              t.config.chart.events.xAxisLabelClick(
                                n,
                                e.ctx,
                                i
                              );
                            }
                          });
                        }
                      }),
                      i
                    );
                  },
                },
                {
                  key: "createPaths",
                  value: function (e, t) {
                    var n = this,
                      i = [],
                      o = [],
                      a = [],
                      s = [];
                    if (e.length) {
                      (o = [this.graphics.move(t.x, t.y)]),
                        (s = [this.graphics.move(t.x, t.y)]);
                      var r = this.graphics.move(e[0].x, e[0].y),
                        l = this.graphics.move(e[0].x, e[0].y);
                      e.forEach(function (t, i) {
                        (r += n.graphics.line(t.x, t.y)),
                          (l += n.graphics.line(t.x, t.y)),
                          i === e.length - 1 && ((r += "Z"), (l += "Z"));
                      }),
                        i.push(r),
                        a.push(l);
                    }
                    return {
                      linePathsFrom: o,
                      linePathsTo: i,
                      areaPathsFrom: s,
                      areaPathsTo: a,
                    };
                  },
                },
                {
                  key: "getTextPos",
                  value: function (e, t) {
                    var n = "middle",
                      i = e.x,
                      o = e.y;
                    return (
                      Math.abs(e.x) >= 10
                        ? e.x > 0
                          ? ((n = "start"), (i += 10))
                          : e.x < 0 && ((n = "end"), (i -= 10))
                        : (n = "middle"),
                      Math.abs(e.y) >= t - 10 &&
                        (e.y < 0 ? (o -= 10) : e.y > 0 && (o += 10)),
                      { textAnchor: n, newX: i, newY: o }
                    );
                  },
                },
                {
                  key: "getPreviousPath",
                  value: function (e) {
                    for (
                      var t = this.w, n = null, i = 0;
                      i < t.globals.previousPaths.length;
                      i++
                    ) {
                      var o = t.globals.previousPaths[i];
                      o.paths.length > 0 &&
                        parseInt(o.realIndex, 10) === parseInt(e, 10) &&
                        void 0 !== t.globals.previousPaths[i].paths[0] &&
                        (n = t.globals.previousPaths[i].paths[0].d);
                    }
                    return n;
                  },
                },
                {
                  key: "getDataPointsPos",
                  value: function (e, t) {
                    var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : this.dataPointsLen;
                    (e = e || []), (t = t || []);
                    for (var i = [], o = 0; o < n; o++) {
                      var a = {};
                      (a.x = e[o] * Math.sin(t[o])),
                        (a.y = -e[o] * Math.cos(t[o])),
                        i.push(a);
                    }
                    return i;
                  },
                },
              ]),
              e
            );
          })(),
          Re = (function (e) {
            d(n, Te);
            var t = g(n);
            function n(e) {
              var i;
              r(this, n),
                ((i = t.call(this, e)).ctx = e),
                (i.w = e.w),
                (i.animBeginArr = [0]),
                (i.animDur = 0);
              var o = i.w;
              return (
                (i.startAngle = o.config.plotOptions.radialBar.startAngle),
                (i.endAngle = o.config.plotOptions.radialBar.endAngle),
                (i.totalAngle = Math.abs(
                  o.config.plotOptions.radialBar.endAngle -
                    o.config.plotOptions.radialBar.startAngle
                )),
                (i.trackStartAngle =
                  o.config.plotOptions.radialBar.track.startAngle),
                (i.trackEndAngle =
                  o.config.plotOptions.radialBar.track.endAngle),
                (i.barLabels = i.w.config.plotOptions.radialBar.barLabels),
                (i.donutDataLabels =
                  i.w.config.plotOptions.radialBar.dataLabels),
                (i.radialDataLabels = i.donutDataLabels),
                i.trackStartAngle || (i.trackStartAngle = i.startAngle),
                i.trackEndAngle || (i.trackEndAngle = i.endAngle),
                360 === i.endAngle && (i.endAngle = 359.99),
                (i.margin = parseInt(
                  o.config.plotOptions.radialBar.track.margin,
                  10
                )),
                (i.onBarLabelClick = i.onBarLabelClick.bind(f(i))),
                i
              );
            }
            return (
              c(n, [
                {
                  key: "draw",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = n.group({ class: "apexcharts-radialbar" });
                    if (t.globals.noData) return i;
                    var o = n.group(),
                      a = this.defaultSize / 2,
                      s = t.globals.gridWidth / 2,
                      r = this.defaultSize / 2.05;
                    t.config.chart.sparkline.enabled ||
                      (r =
                        r -
                        t.config.stroke.width -
                        t.config.chart.dropShadow.blur);
                    var l = t.globals.fill.colors;
                    if (t.config.plotOptions.radialBar.track.show) {
                      var c = this.drawTracks({
                        size: r,
                        centerX: s,
                        centerY: a,
                        colorArr: l,
                        series: e,
                      });
                      o.add(c);
                    }
                    var u = this.drawArcs({
                        size: r,
                        centerX: s,
                        centerY: a,
                        colorArr: l,
                        series: e,
                      }),
                      d = 360;
                    t.config.plotOptions.radialBar.startAngle < 0 &&
                      (d = this.totalAngle);
                    var h = (360 - d) / 360;
                    if (
                      ((t.globals.radialSize = r - r * h),
                      this.radialDataLabels.value.show)
                    ) {
                      var p = Math.max(
                        this.radialDataLabels.value.offsetY,
                        this.radialDataLabels.name.offsetY
                      );
                      t.globals.radialSize += p * h;
                    }
                    return (
                      o.add(u.g),
                      "front" ===
                        t.config.plotOptions.radialBar.hollow.position &&
                        (u.g.add(u.elHollow),
                        u.dataLabels && u.g.add(u.dataLabels)),
                      i.add(o),
                      i
                    );
                  },
                },
                {
                  key: "drawTracks",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = n.group({ class: "apexcharts-tracks" }),
                      o = new S(this.ctx),
                      a = new W(this.ctx),
                      s = this.getStrokeWidth(e);
                    e.size = e.size - s / 2;
                    for (var r = 0; r < e.series.length; r++) {
                      var l = n.group({
                        class: "apexcharts-radialbar-track apexcharts-track",
                      });
                      i.add(l),
                        l.attr({ rel: r + 1 }),
                        (e.size = e.size - s - this.margin);
                      var c = t.config.plotOptions.radialBar.track,
                        u = a.fillPath({
                          seriesNumber: 0,
                          size: e.size,
                          fillColors: Array.isArray(c.background)
                            ? c.background[r]
                            : c.background,
                          solid: !0,
                        }),
                        d = this.trackStartAngle,
                        h = this.trackEndAngle;
                      Math.abs(h) + Math.abs(d) >= 360 &&
                        (h = 360 - Math.abs(this.startAngle) - 0.1);
                      var p = n.drawPath({
                        d: "",
                        stroke: u,
                        strokeWidth: (s * parseInt(c.strokeWidth, 10)) / 100,
                        fill: "none",
                        strokeOpacity: c.opacity,
                        classes: "apexcharts-radialbar-area",
                      });
                      if (c.dropShadow.enabled) {
                        var f = c.dropShadow;
                        o.dropShadow(p, f);
                      }
                      l.add(p),
                        p.attr("id", "apexcharts-radialbarTrack-" + r),
                        this.animatePaths(p, {
                          centerX: e.centerX,
                          centerY: e.centerY,
                          endAngle: h,
                          startAngle: d,
                          size: e.size,
                          i: r,
                          totalItems: 2,
                          animBeginArr: 0,
                          dur: 0,
                          isTrack: !0,
                          easing: t.globals.easing,
                        });
                    }
                    return i;
                  },
                },
                {
                  key: "drawArcs",
                  value: function (e) {
                    var t = this.w,
                      n = new k(this.ctx),
                      i = new W(this.ctx),
                      o = new S(this.ctx),
                      a = n.group(),
                      s = this.getStrokeWidth(e);
                    e.size = e.size - s / 2;
                    var r = t.config.plotOptions.radialBar.hollow.background,
                      l =
                        e.size -
                        s * e.series.length -
                        this.margin * e.series.length -
                        (s *
                          parseInt(
                            t.config.plotOptions.radialBar.track.strokeWidth,
                            10
                          )) /
                          100 /
                          2,
                      c = l - t.config.plotOptions.radialBar.hollow.margin;
                    void 0 !== t.config.plotOptions.radialBar.hollow.image &&
                      (r = this.drawHollowImage(e, a, l, r));
                    var u = this.drawHollow({
                      size: c,
                      centerX: e.centerX,
                      centerY: e.centerY,
                      fill: r || "transparent",
                    });
                    if (
                      t.config.plotOptions.radialBar.hollow.dropShadow.enabled
                    ) {
                      var d = t.config.plotOptions.radialBar.hollow.dropShadow;
                      o.dropShadow(u, d);
                    }
                    var h = 1;
                    !this.radialDataLabels.total.show &&
                      t.globals.series.length > 1 &&
                      (h = 0);
                    var p = null;
                    if (this.radialDataLabels.show) {
                      var f = t.globals.dom.Paper.select(
                        ".apexcharts-datalabels-group"
                      ).members[0];
                      p = this.renderInnerDataLabels(f, this.radialDataLabels, {
                        hollowSize: l,
                        centerX: e.centerX,
                        centerY: e.centerY,
                        opacity: h,
                      });
                    }
                    "back" === t.config.plotOptions.radialBar.hollow.position &&
                      (a.add(u), p && a.add(p));
                    var g = !1;
                    t.config.plotOptions.radialBar.inverseOrder && (g = !0);
                    for (
                      var m = g ? e.series.length - 1 : 0;
                      g ? m >= 0 : m < e.series.length;
                      g ? m-- : m++
                    ) {
                      var v = n.group({
                        class: "apexcharts-series apexcharts-radial-series",
                        seriesName: y.escapeString(t.globals.seriesNames[m]),
                      });
                      a.add(v),
                        v.attr({ rel: m + 1, "data:realIndex": m }),
                        this.ctx.series.addCollapsedClassToSeries(v, m),
                        (e.size = e.size - s - this.margin);
                      var b = i.fillPath({
                          seriesNumber: m,
                          size: e.size,
                          value: e.series[m],
                        }),
                        x = this.startAngle,
                        w = void 0,
                        A =
                          y.negToZero(e.series[m] > 100 ? 100 : e.series[m]) /
                          100,
                        C = Math.round(this.totalAngle * A) + this.startAngle,
                        M = void 0;
                      t.globals.dataChanged &&
                        ((w = this.startAngle),
                        (M =
                          Math.round(
                            (this.totalAngle *
                              y.negToZero(t.globals.previousPaths[m])) /
                              100
                          ) + w)),
                        Math.abs(C) + Math.abs(x) >= 360 && (C -= 0.01),
                        Math.abs(M) + Math.abs(w) >= 360 && (M -= 0.01);
                      var P = C - x,
                        E = Array.isArray(t.config.stroke.dashArray)
                          ? t.config.stroke.dashArray[m]
                          : t.config.stroke.dashArray,
                        L = n.drawPath({
                          d: "",
                          stroke: b,
                          strokeWidth: s,
                          fill: "none",
                          fillOpacity: t.config.fill.opacity,
                          classes:
                            "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                            m,
                          strokeDashArray: E,
                        });
                      if (
                        (k.setAttrs(L.node, {
                          "data:angle": P,
                          "data:value": e.series[m],
                        }),
                        t.config.chart.dropShadow.enabled)
                      ) {
                        var T = t.config.chart.dropShadow;
                        o.dropShadow(L, T, m);
                      }
                      if (
                        (o.setSelectionFilter(L, 0, m),
                        this.addListeners(L, this.radialDataLabels),
                        v.add(L),
                        L.attr({ index: 0, j: m }),
                        this.barLabels.enabled)
                      ) {
                        var O = y.polarToCartesian(
                            e.centerX,
                            e.centerY,
                            e.size,
                            x
                          ),
                          R = this.barLabels.formatter(
                            t.globals.seriesNames[m],
                            { seriesIndex: m, w: t }
                          ),
                          I = ["apexcharts-radialbar-label"];
                        this.barLabels.onClick || I.push("apexcharts-no-click");
                        var N = this.barLabels.useSeriesColors
                          ? t.globals.colors[m]
                          : t.config.chart.foreColor;
                        N || (N = t.config.chart.foreColor);
                        var _ = O.x + this.barLabels.offsetX,
                          D = O.y + this.barLabels.offsetY,
                          z = n.drawText({
                            x: _,
                            y: D,
                            text: R,
                            textAnchor: "end",
                            dominantBaseline: "middle",
                            fontFamily: this.barLabels.fontFamily,
                            fontWeight: this.barLabels.fontWeight,
                            fontSize: this.barLabels.fontSize,
                            foreColor: N,
                            cssClass: I.join(" "),
                          });
                        z.on("click", this.onBarLabelClick),
                          z.attr({ rel: m + 1 }),
                          0 !== x &&
                            z.attr({
                              "transform-origin": "".concat(_, " ").concat(D),
                              transform: "rotate(".concat(x, " 0 0)"),
                            }),
                          v.add(z);
                      }
                      var j = 0;
                      !this.initialAnim ||
                        t.globals.resized ||
                        t.globals.dataChanged ||
                        (j = t.config.chart.animations.speed),
                        t.globals.dataChanged &&
                          (j =
                            t.config.chart.animations.dynamicAnimation.speed),
                        (this.animDur =
                          j / (1.2 * e.series.length) + this.animDur),
                        this.animBeginArr.push(this.animDur),
                        this.animatePaths(L, {
                          centerX: e.centerX,
                          centerY: e.centerY,
                          endAngle: C,
                          startAngle: x,
                          prevEndAngle: M,
                          prevStartAngle: w,
                          size: e.size,
                          i: m,
                          totalItems: 2,
                          animBeginArr: this.animBeginArr,
                          dur: j,
                          shouldSetPrevPaths: !0,
                          easing: t.globals.easing,
                        });
                    }
                    return { g: a, elHollow: u, dataLabels: p };
                  },
                },
                {
                  key: "drawHollow",
                  value: function (e) {
                    var t = new k(this.ctx).drawCircle(2 * e.size);
                    return (
                      t.attr({
                        class: "apexcharts-radialbar-hollow",
                        cx: e.centerX,
                        cy: e.centerY,
                        r: e.size,
                        fill: e.fill,
                      }),
                      t
                    );
                  },
                },
                {
                  key: "drawHollowImage",
                  value: function (e, t, n, i) {
                    var o = this.w,
                      a = new W(this.ctx),
                      s = y.randomId(),
                      r = o.config.plotOptions.radialBar.hollow.image;
                    if (o.config.plotOptions.radialBar.hollow.imageClipped)
                      a.clippedImgArea({
                        width: n,
                        height: n,
                        image: r,
                        patternID: "pattern".concat(o.globals.cuid).concat(s),
                      }),
                        (i = "url(#pattern"
                          .concat(o.globals.cuid)
                          .concat(s, ")"));
                    else {
                      var l = o.config.plotOptions.radialBar.hollow.imageWidth,
                        c = o.config.plotOptions.radialBar.hollow.imageHeight;
                      if (void 0 === l && void 0 === c) {
                        var u = o.globals.dom.Paper.image(r).loaded(function (
                          t
                        ) {
                          this.move(
                            e.centerX -
                              t.width / 2 +
                              o.config.plotOptions.radialBar.hollow
                                .imageOffsetX,
                            e.centerY -
                              t.height / 2 +
                              o.config.plotOptions.radialBar.hollow.imageOffsetY
                          );
                        });
                        t.add(u);
                      } else {
                        var d = o.globals.dom.Paper.image(r).loaded(function (
                          t
                        ) {
                          this.move(
                            e.centerX -
                              l / 2 +
                              o.config.plotOptions.radialBar.hollow
                                .imageOffsetX,
                            e.centerY -
                              c / 2 +
                              o.config.plotOptions.radialBar.hollow.imageOffsetY
                          ),
                            this.size(l, c);
                        });
                        t.add(d);
                      }
                    }
                    return i;
                  },
                },
                {
                  key: "getStrokeWidth",
                  value: function (e) {
                    var t = this.w;
                    return (
                      (e.size *
                        (100 -
                          parseInt(
                            t.config.plotOptions.radialBar.hollow.size,
                            10
                          ))) /
                        100 /
                        (e.series.length + 1) -
                      this.margin
                    );
                  },
                },
                {
                  key: "onBarLabelClick",
                  value: function (e) {
                    var t = parseInt(e.target.getAttribute("rel"), 10) - 1,
                      n = this.barLabels.onClick,
                      i = this.w;
                    n && n(i.globals.seriesNames[t], { w: i, seriesIndex: t });
                  },
                },
              ]),
              n
            );
          })(),
          Ie = (function (e) {
            d(n, Ae);
            var t = g(n);
            function n() {
              return r(this, n), t.apply(this, arguments);
            }
            return (
              c(n, [
                {
                  key: "draw",
                  value: function (e, t) {
                    var n = this.w,
                      i = new k(this.ctx);
                    (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                      (this.series = e),
                      (this.seriesRangeStart = n.globals.seriesRangeStart),
                      (this.seriesRangeEnd = n.globals.seriesRangeEnd),
                      this.barHelpers.initVariables(e);
                    for (
                      var o = i.group({
                          class:
                            "apexcharts-rangebar-series apexcharts-plot-series",
                        }),
                        s = 0;
                      s < e.length;
                      s++
                    ) {
                      var r,
                        l,
                        c,
                        u,
                        d = void 0,
                        h = void 0,
                        p = n.globals.comboCharts ? t[s] : s,
                        f = this.barHelpers.getGroupIndex(p).columnGroupIndex,
                        g = i.group({
                          class: "apexcharts-series",
                          seriesName: y.escapeString(n.globals.seriesNames[p]),
                          rel: s + 1,
                          "data:realIndex": p,
                        });
                      this.ctx.series.addCollapsedClassToSeries(g, p),
                        e[s].length > 0 && (this.visibleI = this.visibleI + 1);
                      var m = 0,
                        v = 0,
                        b = 0;
                      this.yRatio.length > 1 &&
                        ((this.yaxisIndex =
                          n.globals.seriesYAxisReverseMap[p][0]),
                        (b = p));
                      var x = this.barHelpers.initialPositions();
                      (h = x.y),
                        (u = x.zeroW),
                        (d = x.x),
                        (v = x.barWidth),
                        (m = x.barHeight),
                        (r = x.xDivision),
                        (l = x.yDivision),
                        (c = x.zeroH);
                      for (
                        var w = i.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": p,
                          }),
                          S = i.group({
                            class: "apexcharts-rangebar-goals-markers",
                          }),
                          A = 0;
                        A < n.globals.dataPoints;
                        A++
                      ) {
                        var C = this.barHelpers.getStrokeWidth(s, A, p),
                          M = this.seriesRangeStart[s][A],
                          P = this.seriesRangeEnd[s][A],
                          E = null,
                          L = null,
                          T = null,
                          O = { x: d, y: h, strokeWidth: C, elSeries: g },
                          R = this.seriesLen;
                        if (
                          (n.config.plotOptions.bar.rangeBarGroupRows &&
                            (R = 1),
                          void 0 === n.config.series[s].data[A])
                        )
                          break;
                        if (this.isHorizontal) {
                          T = h + m * this.visibleI;
                          var I = (l - m * R) / 2;
                          if (n.config.series[s].data[A].x) {
                            var N = this.detectOverlappingBars({
                              i: s,
                              j: A,
                              barYPosition: T,
                              srty: I,
                              barHeight: m,
                              yDivision: l,
                              initPositions: x,
                            });
                            (m = N.barHeight), (T = N.barYPosition);
                          }
                          v = (E = this.drawRangeBarPaths(
                            a(
                              {
                                indexes: { i: s, j: A, realIndex: p },
                                barHeight: m,
                                barYPosition: T,
                                zeroW: u,
                                yDivision: l,
                                y1: M,
                                y2: P,
                              },
                              O
                            )
                          )).barWidth;
                        } else {
                          n.globals.isXNumeric &&
                            (d =
                              (n.globals.seriesX[s][A] - n.globals.minX) /
                                this.xRatio -
                              v / 2),
                            (L = d + v * this.visibleI);
                          var _ = (r - v * R) / 2;
                          if (n.config.series[s].data[A].x) {
                            var D = this.detectOverlappingBars({
                              i: s,
                              j: A,
                              barXPosition: L,
                              srtx: _,
                              barWidth: v,
                              xDivision: r,
                              initPositions: x,
                            });
                            (v = D.barWidth), (L = D.barXPosition);
                          }
                          m = (E = this.drawRangeColumnPaths(
                            a(
                              {
                                indexes: {
                                  i: s,
                                  j: A,
                                  realIndex: p,
                                  translationsIndex: b,
                                },
                                barWidth: v,
                                barXPosition: L,
                                zeroH: c,
                                xDivision: r,
                              },
                              O
                            )
                          )).barHeight;
                        }
                        var z = this.barHelpers.drawGoalLine({
                          barXPosition: E.barXPosition,
                          barYPosition: T,
                          goalX: E.goalX,
                          goalY: E.goalY,
                          barHeight: m,
                          barWidth: v,
                        });
                        z && S.add(z), (h = E.y), (d = E.x);
                        var j = this.barHelpers.getPathFillColor(e, s, A, p),
                          B = n.globals.stroke.colors[p];
                        this.renderSeries({
                          realIndex: p,
                          pathFill: j,
                          lineFill: B,
                          j: A,
                          i: s,
                          x: d,
                          y: h,
                          y1: M,
                          y2: P,
                          pathFrom: E.pathFrom,
                          pathTo: E.pathTo,
                          strokeWidth: C,
                          elSeries: g,
                          series: e,
                          barHeight: m,
                          barWidth: v,
                          barXPosition: L,
                          barYPosition: T,
                          columnGroupIndex: f,
                          elDataLabelsWrap: w,
                          elGoalsMarkers: S,
                          visibleSeries: this.visibleI,
                          type: "rangebar",
                        });
                      }
                      o.add(g);
                    }
                    return o;
                  },
                },
                {
                  key: "detectOverlappingBars",
                  value: function (e) {
                    var t = e.i,
                      n = e.j,
                      i = e.barYPosition,
                      o = e.barXPosition,
                      a = e.srty,
                      s = e.srtx,
                      r = e.barHeight,
                      l = e.barWidth,
                      c = e.yDivision,
                      u = e.xDivision,
                      d = e.initPositions,
                      h = this.w,
                      p = [],
                      f = h.config.series[t].data[n].rangeName,
                      g = h.config.series[t].data[n].x,
                      m = Array.isArray(g) ? g.join(" ") : g,
                      v = h.globals.labels
                        .map(function (e) {
                          return Array.isArray(e) ? e.join(" ") : e;
                        })
                        .indexOf(m),
                      b = h.globals.seriesRange[t].findIndex(function (e) {
                        return e.x === m && e.overlaps.length > 0;
                      });
                    return (
                      this.isHorizontal
                        ? ((i = h.config.plotOptions.bar.rangeBarGroupRows
                            ? a + c * v
                            : a + r * this.visibleI + c * v),
                          b > -1 &&
                            !h.config.plotOptions.bar.rangeBarOverlap &&
                            (p = h.globals.seriesRange[t][b].overlaps).indexOf(
                              f
                            ) > -1 &&
                            (i =
                              (r = d.barHeight / p.length) * this.visibleI +
                              (c *
                                (100 -
                                  parseInt(this.barOptions.barHeight, 10))) /
                                100 /
                                2 +
                              r * (this.visibleI + p.indexOf(f)) +
                              c * v))
                        : (v > -1 &&
                            !h.globals.timescaleLabels.length &&
                            (o = h.config.plotOptions.bar.rangeBarGroupRows
                              ? s + u * v
                              : s + l * this.visibleI + u * v),
                          b > -1 &&
                            !h.config.plotOptions.bar.rangeBarOverlap &&
                            (p = h.globals.seriesRange[t][b].overlaps).indexOf(
                              f
                            ) > -1 &&
                            (o =
                              (l = d.barWidth / p.length) * this.visibleI +
                              (u *
                                (100 -
                                  parseInt(this.barOptions.barWidth, 10))) /
                                100 /
                                2 +
                              l * (this.visibleI + p.indexOf(f)) +
                              u * v)),
                      {
                        barYPosition: i,
                        barXPosition: o,
                        barHeight: r,
                        barWidth: l,
                      }
                    );
                  },
                },
                {
                  key: "drawRangeColumnPaths",
                  value: function (e) {
                    var t = e.indexes,
                      n = e.x,
                      i = e.xDivision,
                      o = e.barWidth,
                      a = e.barXPosition,
                      s = e.zeroH,
                      r = this.w,
                      l = t.i,
                      c = t.j,
                      u = t.realIndex,
                      d = t.translationsIndex,
                      h = this.yRatio[d],
                      p = this.getRangeValue(u, c),
                      f = Math.min(p.start, p.end),
                      g = Math.max(p.start, p.end);
                    void 0 === this.series[l][c] || null === this.series[l][c]
                      ? (f = s)
                      : ((f = s - f / h), (g = s - g / h));
                    var m = Math.abs(g - f),
                      v = this.barHelpers.getColumnPaths({
                        barXPosition: a,
                        barWidth: o,
                        y1: f,
                        y2: g,
                        strokeWidth: this.strokeWidth,
                        series: this.seriesRangeEnd,
                        realIndex: u,
                        i: u,
                        j: c,
                        w: r,
                      });
                    if (r.globals.isXNumeric) {
                      var b = this.getBarXForNumericXAxis({
                        x: n,
                        j: c,
                        realIndex: u,
                        barWidth: o,
                      });
                      (n = b.x), (a = b.barXPosition);
                    } else n += i;
                    return {
                      pathTo: v.pathTo,
                      pathFrom: v.pathFrom,
                      barHeight: m,
                      x: n,
                      y: p.start < 0 && p.end < 0 ? f : g,
                      goalY: this.barHelpers.getGoalValues(
                        "y",
                        null,
                        s,
                        l,
                        c,
                        d
                      ),
                      barXPosition: a,
                    };
                  },
                },
                {
                  key: "preventBarOverflow",
                  value: function (e) {
                    var t = this.w;
                    return (
                      e < 0 && (e = 0),
                      e > t.globals.gridWidth && (e = t.globals.gridWidth),
                      e
                    );
                  },
                },
                {
                  key: "drawRangeBarPaths",
                  value: function (e) {
                    var t = e.indexes,
                      n = e.y,
                      i = e.y1,
                      o = e.y2,
                      a = e.yDivision,
                      s = e.barHeight,
                      r = e.barYPosition,
                      l = e.zeroW,
                      c = this.w,
                      u = t.realIndex,
                      d = t.j,
                      h = this.preventBarOverflow(l + i / this.invertedYRatio),
                      p = this.preventBarOverflow(l + o / this.invertedYRatio),
                      f = this.getRangeValue(u, d),
                      g = Math.abs(p - h),
                      m = this.barHelpers.getBarpaths({
                        barYPosition: r,
                        barHeight: s,
                        x1: h,
                        x2: p,
                        strokeWidth: this.strokeWidth,
                        series: this.seriesRangeEnd,
                        i: u,
                        realIndex: u,
                        j: d,
                        w: c,
                      });
                    return (
                      c.globals.isXNumeric || (n += a),
                      {
                        pathTo: m.pathTo,
                        pathFrom: m.pathFrom,
                        barWidth: g,
                        x: f.start < 0 && f.end < 0 ? h : p,
                        goalX: this.barHelpers.getGoalValues(
                          "x",
                          l,
                          null,
                          u,
                          d
                        ),
                        y: n,
                      }
                    );
                  },
                },
                {
                  key: "getRangeValue",
                  value: function (e, t) {
                    var n = this.w;
                    return {
                      start: n.globals.seriesRangeStart[e][t],
                      end: n.globals.seriesRangeEnd[e][t],
                    };
                  },
                },
              ]),
              n
            );
          })(),
          Ne = (function () {
            function e(t) {
              r(this, e), (this.w = t.w), (this.lineCtx = t);
            }
            return (
              c(e, [
                {
                  key: "sameValueSeriesFix",
                  value: function (e, t) {
                    var n = this.w;
                    if (
                      ("gradient" === n.config.fill.type ||
                        "gradient" === n.config.fill.type[e]) &&
                      new A(this.lineCtx.ctx, n).seriesHaveSameValues(e)
                    ) {
                      var i = t[e].slice();
                      (i[i.length - 1] = i[i.length - 1] + 1e-6), (t[e] = i);
                    }
                    return t;
                  },
                },
                {
                  key: "calculatePoints",
                  value: function (e) {
                    var t = e.series,
                      n = e.realIndex,
                      i = e.x,
                      o = e.y,
                      a = e.i,
                      s = e.j,
                      r = e.prevY,
                      l = this.w,
                      c = [],
                      u = [];
                    if (0 === s) {
                      var d =
                        this.lineCtx.categoryAxisCorrection +
                        l.config.markers.offsetX;
                      l.globals.isXNumeric &&
                        (d =
                          (l.globals.seriesX[n][0] - l.globals.minX) /
                            this.lineCtx.xRatio +
                          l.config.markers.offsetX),
                        c.push(d),
                        u.push(
                          y.isNumber(t[a][0])
                            ? r + l.config.markers.offsetY
                            : null
                        ),
                        c.push(i + l.config.markers.offsetX),
                        u.push(
                          y.isNumber(t[a][s + 1])
                            ? o + l.config.markers.offsetY
                            : null
                        );
                    } else
                      c.push(i + l.config.markers.offsetX),
                        u.push(
                          y.isNumber(t[a][s + 1])
                            ? o + l.config.markers.offsetY
                            : null
                        );
                    return { x: c, y: u };
                  },
                },
                {
                  key: "checkPreviousPaths",
                  value: function (e) {
                    for (
                      var t = e.pathFromLine,
                        n = e.pathFromArea,
                        i = e.realIndex,
                        o = this.w,
                        a = 0;
                      a < o.globals.previousPaths.length;
                      a++
                    ) {
                      var s = o.globals.previousPaths[a];
                      ("line" === s.type || "area" === s.type) &&
                        s.paths.length > 0 &&
                        parseInt(s.realIndex, 10) === parseInt(i, 10) &&
                        ("line" === s.type
                          ? ((this.lineCtx.appendPathFrom = !1),
                            (t = o.globals.previousPaths[a].paths[0].d))
                          : "area" === s.type &&
                            ((this.lineCtx.appendPathFrom = !1),
                            (n = o.globals.previousPaths[a].paths[0].d),
                            o.config.stroke.show &&
                              o.globals.previousPaths[a].paths[1] &&
                              (t = o.globals.previousPaths[a].paths[1].d)));
                    }
                    return { pathFromLine: t, pathFromArea: n };
                  },
                },
                {
                  key: "determineFirstPrevY",
                  value: function (e) {
                    var t,
                      n,
                      i,
                      o = e.i,
                      a = e.realIndex,
                      s = e.series,
                      r = e.prevY,
                      l = e.lineYPosition,
                      c = e.translationsIndex,
                      u = this.w,
                      d =
                        (u.config.chart.stacked && !u.globals.comboCharts) ||
                        (u.config.chart.stacked &&
                          u.globals.comboCharts &&
                          (!this.w.config.chart.stackOnlyBar ||
                            "bar" ===
                              (null === (t = this.w.config.series[a]) ||
                              void 0 === t
                                ? void 0
                                : t.type) ||
                            "column" ===
                              (null === (n = this.w.config.series[a]) ||
                              void 0 === n
                                ? void 0
                                : n.type)));
                    if (
                      void 0 !==
                      (null === (i = s[o]) || void 0 === i ? void 0 : i[0])
                    )
                      r =
                        (l =
                          d && o > 0
                            ? this.lineCtx.prevSeriesY[o - 1][0]
                            : this.lineCtx.zeroY) -
                        s[o][0] / this.lineCtx.yRatio[c] +
                        2 *
                          (this.lineCtx.isReversed
                            ? s[o][0] / this.lineCtx.yRatio[c]
                            : 0);
                    else if (d && o > 0 && void 0 === s[o][0])
                      for (var h = o - 1; h >= 0; h--)
                        if (null !== s[h][0] && void 0 !== s[h][0]) {
                          r = l = this.lineCtx.prevSeriesY[h][0];
                          break;
                        }
                    return { prevY: r, lineYPosition: l };
                  },
                },
              ]),
              e
            );
          })(),
          _e = function (e) {
            var t = (function (e) {
                for (
                  var t,
                    n,
                    i,
                    o,
                    a = (function (e) {
                      for (
                        var t = [],
                          n = e[0],
                          i = e[1],
                          o = (t[0] = ze(n, i)),
                          a = 1,
                          s = e.length - 1;
                        a < s;
                        a++
                      )
                        (n = i),
                          (i = e[a + 1]),
                          (t[a] = 0.5 * (o + (o = ze(n, i))));
                      return (t[a] = o), t;
                    })(e),
                    s = e.length - 1,
                    r = [],
                    l = 0;
                  l < s;
                  l++
                )
                  (i = ze(e[l], e[l + 1])),
                    Math.abs(i) < 1e-6
                      ? (a[l] = a[l + 1] = 0)
                      : (o = (t = a[l] / i) * t + (n = a[l + 1] / i) * n) > 9 &&
                        ((o = (3 * i) / Math.sqrt(o)),
                        (a[l] = o * t),
                        (a[l + 1] = o * n));
                for (var c = 0; c <= s; c++)
                  (o =
                    (e[Math.min(s, c + 1)][0] - e[Math.max(0, c - 1)][0]) /
                    (6 * (1 + a[c] * a[c]))),
                    r.push([o || 0, a[c] * o || 0]);
                return r;
              })(e),
              n = e[1],
              i = e[0],
              o = [],
              a = t[1],
              s = t[0];
            o.push(i, [
              i[0] + s[0],
              i[1] + s[1],
              n[0] - a[0],
              n[1] - a[1],
              n[0],
              n[1],
            ]);
            for (var r = 2, l = t.length; r < l; r++) {
              var c = e[r],
                u = t[r];
              o.push([c[0] - u[0], c[1] - u[1], c[0], c[1]]);
            }
            return o;
          },
          De = function (e, t, n) {
            var i = e.slice(t, n);
            if (t) {
              if (n - t > 1 && i[1].length < 6) {
                var o = i[0].length;
                i[1] = [
                  2 * i[0][o - 2] - i[0][o - 4],
                  2 * i[0][o - 1] - i[0][o - 3],
                ].concat(i[1]);
              }
              i[0] = i[0].slice(-2);
            }
            return i;
          };
        function ze(e, t) {
          return (t[1] - e[1]) / (t[0] - e[0]);
        }
        var je = (function () {
          function e(t, n, i) {
            r(this, e),
              (this.ctx = t),
              (this.w = t.w),
              (this.xyRatios = n),
              (this.pointsChart =
                !(
                  "bubble" !== this.w.config.chart.type &&
                  "scatter" !== this.w.config.chart.type
                ) || i),
              (this.scatter = new G(this.ctx)),
              (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
              (this.lineHelpers = new Ne(this)),
              (this.markers = new H(this.ctx)),
              (this.prevSeriesY = []),
              (this.categoryAxisCorrection = 0),
              (this.yaxisIndex = 0);
          }
          return (
            c(e, [
              {
                key: "draw",
                value: function (e, t, n, i) {
                  var o,
                    s = this.w,
                    r = new k(this.ctx),
                    l = s.globals.comboCharts ? t : s.config.chart.type,
                    c = r.group({
                      class: "apexcharts-".concat(
                        l,
                        "-series apexcharts-plot-series"
                      ),
                    }),
                    u = new A(this.ctx, s);
                  (this.yRatio = this.xyRatios.yRatio),
                    (this.zRatio = this.xyRatios.zRatio),
                    (this.xRatio = this.xyRatios.xRatio),
                    (this.baseLineY = this.xyRatios.baseLineY),
                    (e = u.getLogSeries(e)),
                    (this.yRatio = u.getLogYRatios(this.yRatio)),
                    (this.prevSeriesY = []);
                  for (var d = [], h = 0; h < e.length; h++) {
                    e = this.lineHelpers.sameValueSeriesFix(h, e);
                    var p = s.globals.comboCharts ? n[h] : h,
                      f = this.yRatio.length > 1 ? p : 0;
                    this._initSerieVariables(e, h, p);
                    var g = [],
                      m = [],
                      v = [],
                      b = s.globals.padHorizontal + this.categoryAxisCorrection;
                    this.ctx.series.addCollapsedClassToSeries(this.elSeries, p),
                      s.globals.isXNumeric &&
                        s.globals.seriesX.length > 0 &&
                        (b =
                          (s.globals.seriesX[p][0] - s.globals.minX) /
                          this.xRatio),
                      v.push(b);
                    var x,
                      y = b,
                      w = void 0,
                      S = y,
                      C = this.zeroY,
                      M = this.zeroY;
                    (C = this.lineHelpers.determineFirstPrevY({
                      i: h,
                      realIndex: p,
                      series: e,
                      prevY: C,
                      lineYPosition: 0,
                      translationsIndex: f,
                    }).prevY),
                      "monotoneCubic" === s.config.stroke.curve &&
                      null === e[h][0]
                        ? g.push(null)
                        : g.push(C),
                      (x = C),
                      "rangeArea" === l &&
                        ((w = M =
                          this.lineHelpers.determineFirstPrevY({
                            i: h,
                            realIndex: p,
                            series: i,
                            prevY: M,
                            lineYPosition: 0,
                            translationsIndex: f,
                          }).prevY),
                        m.push(null !== g[0] ? M : null));
                    var P = this._calculatePathsFrom({
                        type: l,
                        series: e,
                        i: h,
                        realIndex: p,
                        translationsIndex: f,
                        prevX: S,
                        prevY: C,
                        prevY2: M,
                      }),
                      E = [g[0]],
                      L = [m[0]],
                      T = {
                        type: l,
                        series: e,
                        realIndex: p,
                        translationsIndex: f,
                        i: h,
                        x: b,
                        y: 1,
                        pX: y,
                        pY: x,
                        pathsFrom: P,
                        linePaths: [],
                        areaPaths: [],
                        seriesIndex: n,
                        lineYPosition: 0,
                        xArrj: v,
                        yArrj: g,
                        y2Arrj: m,
                        seriesRangeEnd: i,
                      },
                      O = this._iterateOverDataPoints(
                        a(
                          a({}, T),
                          {},
                          {
                            iterations:
                              "rangeArea" === l ? e[h].length - 1 : void 0,
                            isRangeStart: !0,
                          }
                        )
                      );
                    if ("rangeArea" === l) {
                      for (
                        var R = this._calculatePathsFrom({
                            series: i,
                            i: h,
                            realIndex: p,
                            prevX: S,
                            prevY: M,
                          }),
                          I = this._iterateOverDataPoints(
                            a(
                              a({}, T),
                              {},
                              {
                                series: i,
                                xArrj: [b],
                                yArrj: E,
                                y2Arrj: L,
                                pY: w,
                                areaPaths: O.areaPaths,
                                pathsFrom: R,
                                iterations: i[h].length - 1,
                                isRangeStart: !1,
                              }
                            )
                          ),
                          N = O.linePaths.length / 2,
                          _ = 0;
                        _ < N;
                        _++
                      )
                        O.linePaths[_] = I.linePaths[_ + N] + O.linePaths[_];
                      O.linePaths.splice(N),
                        (O.pathFromLine = I.pathFromLine + O.pathFromLine);
                    } else O.pathFromArea += "z";
                    this._handlePaths({
                      type: l,
                      realIndex: p,
                      i: h,
                      paths: O,
                    }),
                      this.elSeries.add(this.elPointsMain),
                      this.elSeries.add(this.elDataLabelsWrap),
                      d.push(this.elSeries);
                  }
                  if (
                    (void 0 !==
                      (null === (o = s.config.series[0]) || void 0 === o
                        ? void 0
                        : o.zIndex) &&
                      d.sort(function (e, t) {
                        return (
                          Number(e.node.getAttribute("zIndex")) -
                          Number(t.node.getAttribute("zIndex"))
                        );
                      }),
                    s.config.chart.stacked)
                  )
                    for (var D = d.length - 1; D >= 0; D--) c.add(d[D]);
                  else for (var z = 0; z < d.length; z++) c.add(d[z]);
                  return c;
                },
              },
              {
                key: "_initSerieVariables",
                value: function (e, t, n) {
                  var i = this.w,
                    o = new k(this.ctx);
                  (this.xDivision =
                    i.globals.gridWidth /
                    (i.globals.dataPoints -
                      ("on" === i.config.xaxis.tickPlacement ? 1 : 0))),
                    (this.strokeWidth = Array.isArray(i.config.stroke.width)
                      ? i.config.stroke.width[n]
                      : i.config.stroke.width);
                  var a = 0;
                  this.yRatio.length > 1 &&
                    ((this.yaxisIndex = i.globals.seriesYAxisReverseMap[n]),
                    (a = n)),
                    (this.isReversed =
                      i.config.yaxis[this.yaxisIndex] &&
                      i.config.yaxis[this.yaxisIndex].reversed),
                    (this.zeroY =
                      i.globals.gridHeight -
                      this.baseLineY[a] -
                      (this.isReversed ? i.globals.gridHeight : 0) +
                      (this.isReversed ? 2 * this.baseLineY[a] : 0)),
                    (this.areaBottomY = this.zeroY),
                    (this.zeroY > i.globals.gridHeight ||
                      "end" === i.config.plotOptions.area.fillTo) &&
                      (this.areaBottomY = i.globals.gridHeight),
                    (this.categoryAxisCorrection = this.xDivision / 2),
                    (this.elSeries = o.group({
                      class: "apexcharts-series",
                      zIndex:
                        void 0 !== i.config.series[n].zIndex
                          ? i.config.series[n].zIndex
                          : n,
                      seriesName: y.escapeString(i.globals.seriesNames[n]),
                    })),
                    (this.elPointsMain = o.group({
                      class: "apexcharts-series-markers-wrap",
                      "data:realIndex": n,
                    })),
                    (this.elDataLabelsWrap = o.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": n,
                    }));
                  var s = e[t].length === i.globals.dataPoints;
                  this.elSeries.attr({
                    "data:longestSeries": s,
                    rel: t + 1,
                    "data:realIndex": n,
                  }),
                    (this.appendPathFrom = !0);
                },
              },
              {
                key: "_calculatePathsFrom",
                value: function (e) {
                  var t,
                    n,
                    i,
                    o,
                    a = e.type,
                    s = e.series,
                    r = e.i,
                    l = e.realIndex,
                    c = e.translationsIndex,
                    u = e.prevX,
                    d = e.prevY,
                    h = e.prevY2,
                    p = this.w,
                    f = new k(this.ctx);
                  if (null === s[r][0]) {
                    for (var g = 0; g < s[r].length; g++)
                      if (null !== s[r][g]) {
                        (u = this.xDivision * g),
                          (d = this.zeroY - s[r][g] / this.yRatio[c]),
                          (t = f.move(u, d)),
                          (n = f.move(u, this.areaBottomY));
                        break;
                      }
                  } else
                    (t = f.move(u, d)),
                      "rangeArea" === a && (t = f.move(u, h) + f.line(u, d)),
                      (n = f.move(u, this.areaBottomY) + f.line(u, d));
                  if (
                    ((i = f.move(0, this.zeroY) + f.line(0, this.zeroY)),
                    (o = f.move(0, this.zeroY) + f.line(0, this.zeroY)),
                    p.globals.previousPaths.length > 0)
                  ) {
                    var m = this.lineHelpers.checkPreviousPaths({
                      pathFromLine: i,
                      pathFromArea: o,
                      realIndex: l,
                    });
                    (i = m.pathFromLine), (o = m.pathFromArea);
                  }
                  return {
                    prevX: u,
                    prevY: d,
                    linePath: t,
                    areaPath: n,
                    pathFromLine: i,
                    pathFromArea: o,
                  };
                },
              },
              {
                key: "_handlePaths",
                value: function (e) {
                  var t = e.type,
                    n = e.realIndex,
                    i = e.i,
                    o = e.paths,
                    s = this.w,
                    r = new k(this.ctx),
                    l = new W(this.ctx);
                  this.prevSeriesY.push(o.yArrj),
                    (s.globals.seriesXvalues[n] = o.xArrj),
                    (s.globals.seriesYvalues[n] = o.yArrj);
                  var c = s.config.forecastDataPoints;
                  if (c.count > 0 && "rangeArea" !== t) {
                    var u =
                        s.globals.seriesXvalues[n][
                          s.globals.seriesXvalues[n].length - c.count - 1
                        ],
                      d = r.drawRect(
                        u,
                        0,
                        s.globals.gridWidth,
                        s.globals.gridHeight,
                        0
                      );
                    s.globals.dom.elForecastMask.appendChild(d.node);
                    var h = r.drawRect(0, 0, u, s.globals.gridHeight, 0);
                    s.globals.dom.elNonForecastMask.appendChild(h.node);
                  }
                  this.pointsChart ||
                    s.globals.delayedElements.push({
                      el: this.elPointsMain.node,
                      index: n,
                    });
                  var p = {
                    i: i,
                    realIndex: n,
                    animationDelay: i,
                    initialSpeed: s.config.chart.animations.speed,
                    dataChangeSpeed:
                      s.config.chart.animations.dynamicAnimation.speed,
                    className: "apexcharts-".concat(t),
                  };
                  if ("area" === t)
                    for (
                      var f = l.fillPath({ seriesNumber: n }), g = 0;
                      g < o.areaPaths.length;
                      g++
                    ) {
                      var m = r.renderPaths(
                        a(
                          a({}, p),
                          {},
                          {
                            pathFrom: o.pathFromArea,
                            pathTo: o.areaPaths[g],
                            stroke: "none",
                            strokeWidth: 0,
                            strokeLineCap: null,
                            fill: f,
                          }
                        )
                      );
                      this.elSeries.add(m);
                    }
                  if (s.config.stroke.show && !this.pointsChart) {
                    var v = null;
                    if ("line" === t) v = l.fillPath({ seriesNumber: n, i: i });
                    else if ("solid" === s.config.stroke.fill.type)
                      v = s.globals.stroke.colors[n];
                    else {
                      var b = s.config.fill;
                      (s.config.fill = s.config.stroke.fill),
                        (v = l.fillPath({ seriesNumber: n, i: i })),
                        (s.config.fill = b);
                    }
                    for (var x = 0; x < o.linePaths.length; x++) {
                      var y = v;
                      "rangeArea" === t &&
                        (y = l.fillPath({ seriesNumber: n }));
                      var w = a(
                          a({}, p),
                          {},
                          {
                            pathFrom: o.pathFromLine,
                            pathTo: o.linePaths[x],
                            stroke: v,
                            strokeWidth: this.strokeWidth,
                            strokeLineCap: s.config.stroke.lineCap,
                            fill: "rangeArea" === t ? y : "none",
                          }
                        ),
                        S = r.renderPaths(w);
                      if (
                        (this.elSeries.add(S),
                        S.attr("fill-rule", "evenodd"),
                        c.count > 0 && "rangeArea" !== t)
                      ) {
                        var A = r.renderPaths(w);
                        A.node.setAttribute("stroke-dasharray", c.dashArray),
                          c.strokeWidth &&
                            A.node.setAttribute("stroke-width", c.strokeWidth),
                          this.elSeries.add(A),
                          A.attr(
                            "clip-path",
                            "url(#forecastMask".concat(s.globals.cuid, ")")
                          ),
                          S.attr(
                            "clip-path",
                            "url(#nonForecastMask".concat(s.globals.cuid, ")")
                          );
                      }
                    }
                  }
                },
              },
              {
                key: "_iterateOverDataPoints",
                value: function (e) {
                  var t,
                    n,
                    i = this,
                    o = e.type,
                    a = e.series,
                    s = e.iterations,
                    r = e.realIndex,
                    l = e.translationsIndex,
                    c = e.i,
                    u = e.x,
                    d = e.y,
                    h = e.pX,
                    p = e.pY,
                    f = e.pathsFrom,
                    g = e.linePaths,
                    m = e.areaPaths,
                    v = e.seriesIndex,
                    b = e.lineYPosition,
                    x = e.xArrj,
                    w = e.yArrj,
                    S = e.y2Arrj,
                    A = e.isRangeStart,
                    C = e.seriesRangeEnd,
                    M = this.w,
                    P = new k(this.ctx),
                    E = this.yRatio,
                    L = f.prevY,
                    T = f.linePath,
                    O = f.areaPath,
                    R = f.pathFromLine,
                    I = f.pathFromArea,
                    N = y.isNumber(M.globals.minYArr[r])
                      ? M.globals.minYArr[r]
                      : M.globals.minY;
                  s ||
                    (s =
                      M.globals.dataPoints > 1
                        ? M.globals.dataPoints - 1
                        : M.globals.dataPoints);
                  var _ = function (e, t) {
                      return t - e / E[l] + 2 * (i.isReversed ? e / E[l] : 0);
                    },
                    D = d,
                    z =
                      (M.config.chart.stacked && !M.globals.comboCharts) ||
                      (M.config.chart.stacked &&
                        M.globals.comboCharts &&
                        (!this.w.config.chart.stackOnlyBar ||
                          "bar" ===
                            (null === (t = this.w.config.series[r]) ||
                            void 0 === t
                              ? void 0
                              : t.type) ||
                          "column" ===
                            (null === (n = this.w.config.series[r]) ||
                            void 0 === n
                              ? void 0
                              : n.type))),
                    j = M.config.stroke.curve;
                  Array.isArray(j) && (j = Array.isArray(v) ? j[v[c]] : j[c]);
                  for (var B, F = 0, W = 0; W < s; W++) {
                    var H = void 0 === a[c][W + 1] || null === a[c][W + 1];
                    if (M.globals.isXNumeric) {
                      var G = M.globals.seriesX[r][W + 1];
                      void 0 === M.globals.seriesX[r][W + 1] &&
                        (G = M.globals.seriesX[r][s - 1]),
                        (u = (G - M.globals.minX) / this.xRatio);
                    } else u += this.xDivision;
                    (b =
                      z &&
                      c > 0 &&
                      M.globals.collapsedSeries.length <
                        M.config.series.length - 1
                        ? this.prevSeriesY[
                            (function (e) {
                              for (var t = e; t > 0; t--) {
                                if (
                                  !(
                                    M.globals.collapsedSeriesIndices.indexOf(
                                      (null == v ? void 0 : v[t]) || t
                                    ) > -1
                                  )
                                )
                                  return t;
                                t--;
                              }
                              return 0;
                            })(c - 1)
                          ][W + 1]
                        : this.zeroY),
                      H
                        ? (d = _(N, b))
                        : ((d = _(a[c][W + 1], b)),
                          "rangeArea" === o && (D = _(C[c][W + 1], b))),
                      x.push(u),
                      !H ||
                      ("smooth" !== M.config.stroke.curve &&
                        "monotoneCubic" !== M.config.stroke.curve)
                        ? (w.push(d), S.push(D))
                        : (w.push(null), S.push(null));
                    var V = this.lineHelpers.calculatePoints({
                        series: a,
                        x: u,
                        y: d,
                        realIndex: r,
                        i: c,
                        j: W,
                        prevY: L,
                      }),
                      U = this._createPaths({
                        type: o,
                        series: a,
                        i: c,
                        realIndex: r,
                        j: W,
                        x: u,
                        y: d,
                        y2: D,
                        xArrj: x,
                        yArrj: w,
                        y2Arrj: S,
                        pX: h,
                        pY: p,
                        pathState: F,
                        segmentStartX: B,
                        linePath: T,
                        areaPath: O,
                        linePaths: g,
                        areaPaths: m,
                        curve: j,
                        isRangeStart: A,
                      });
                    (m = U.areaPaths),
                      (g = U.linePaths),
                      (h = U.pX),
                      (p = U.pY),
                      (F = U.pathState),
                      (B = U.segmentStartX),
                      (O = U.areaPath),
                      (T = U.linePath),
                      !this.appendPathFrom ||
                        ("monotoneCubic" === j && "rangeArea" === o) ||
                        ((R += P.line(u, this.zeroY)),
                        (I += P.line(u, this.zeroY))),
                      this.handleNullDataPoints(a, V, c, W, r),
                      this._handleMarkersAndLabels({
                        type: o,
                        pointsPos: V,
                        i: c,
                        j: W,
                        realIndex: r,
                        isRangeStart: A,
                      });
                  }
                  return {
                    yArrj: w,
                    xArrj: x,
                    pathFromArea: I,
                    areaPaths: m,
                    pathFromLine: R,
                    linePaths: g,
                    linePath: T,
                    areaPath: O,
                  };
                },
              },
              {
                key: "_handleMarkersAndLabels",
                value: function (e) {
                  var t = e.type,
                    n = e.pointsPos,
                    i = e.isRangeStart,
                    o = e.i,
                    a = e.j,
                    s = e.realIndex,
                    r = this.w,
                    l = new V(this.ctx);
                  if (this.pointsChart)
                    this.scatter.draw(this.elSeries, a, {
                      realIndex: s,
                      pointsPos: n,
                      zRatio: this.zRatio,
                      elParent: this.elPointsMain,
                    });
                  else {
                    r.globals.series[o].length > 1 &&
                      this.elPointsMain.node.classList.add(
                        "apexcharts-element-hidden"
                      );
                    var c = this.markers.plotChartMarkers(n, s, a + 1);
                    null !== c && this.elPointsMain.add(c);
                  }
                  var u = l.drawDataLabel({
                    type: t,
                    isRangeStart: i,
                    pos: n,
                    i: s,
                    j: a + 1,
                  });
                  null !== u && this.elDataLabelsWrap.add(u);
                },
              },
              {
                key: "_createPaths",
                value: function (e) {
                  var t = e.type,
                    n = e.series,
                    i = e.i;
                  e.realIndex;
                  var o = e.j,
                    a = e.x,
                    s = e.y,
                    r = e.xArrj,
                    l = e.yArrj,
                    c = e.y2,
                    u = e.y2Arrj,
                    d = e.pX,
                    h = e.pY,
                    p = e.pathState,
                    f = e.segmentStartX,
                    g = e.linePath,
                    m = e.areaPath,
                    v = e.linePaths,
                    b = e.areaPaths,
                    x = e.curve,
                    y = e.isRangeStart;
                  this.w;
                  var w,
                    S = new k(this.ctx),
                    A = this.areaBottomY,
                    C = "rangeArea" === t,
                    M = "rangeArea" === t && y;
                  switch (x) {
                    case "monotoneCubic":
                      var P = y ? l : u;
                      switch (p) {
                        case 0:
                          if (null === P[o + 1]) break;
                          p = 1;
                        case 1:
                          if (
                            !(C
                              ? r.length === n[i].length
                              : o === n[i].length - 2)
                          )
                            break;
                        case 2:
                          var E = y ? r : r.slice().reverse(),
                            L = y ? P : P.slice().reverse(),
                            T =
                              ((w = L),
                              E.map(function (e, t) {
                                return [e, w[t]];
                              }).filter(function (e) {
                                return null !== e[1];
                              })),
                            O = T.length > 1 ? _e(T) : T,
                            R = [];
                          C && (M ? (b = T) : (R = b.reverse()));
                          var I = 0,
                            N = 0;
                          if (
                            ((function (e, t) {
                              for (
                                var n = (function (e) {
                                    var t = [],
                                      n = 0;
                                    return (
                                      e.forEach(function (e) {
                                        null !== e
                                          ? n++
                                          : n > 0 && (t.push(n), (n = 0));
                                      }),
                                      n > 0 && t.push(n),
                                      t
                                    );
                                  })(e),
                                  i = [],
                                  o = 0,
                                  a = 0;
                                o < n.length;
                                a += n[o++]
                              )
                                i[o] = De(t, a, a + n[o]);
                              return i;
                            })(L, O).forEach(function (e) {
                              I++;
                              var t = (function (e) {
                                  for (var t = "", n = 0; n < e.length; n++) {
                                    var i = e[n],
                                      o = i.length;
                                    o > 4
                                      ? ((t += "C"
                                          .concat(i[0], ", ")
                                          .concat(i[1])),
                                        (t += ", "
                                          .concat(i[2], ", ")
                                          .concat(i[3])),
                                        (t += ", "
                                          .concat(i[4], ", ")
                                          .concat(i[5])))
                                      : o > 2 &&
                                        ((t += "S"
                                          .concat(i[0], ", ")
                                          .concat(i[1])),
                                        (t += ", "
                                          .concat(i[2], ", ")
                                          .concat(i[3])));
                                  }
                                  return t;
                                })(e),
                                n = N,
                                i = (N += e.length) - 1;
                              M
                                ? (g = S.move(T[n][0], T[n][1]) + t)
                                : C
                                ? (g =
                                    S.move(R[n][0], R[n][1]) +
                                    S.line(T[n][0], T[n][1]) +
                                    t +
                                    S.line(R[i][0], R[i][1]))
                                : ((g = S.move(T[n][0], T[n][1]) + t),
                                  (m =
                                    g +
                                    S.line(T[i][0], A) +
                                    S.line(T[n][0], A) +
                                    "z"),
                                  b.push(m)),
                                v.push(g);
                            }),
                            C && I > 1 && !M)
                          ) {
                            var _ = v.slice(I).reverse();
                            v.splice(I),
                              _.forEach(function (e) {
                                return v.push(e);
                              });
                          }
                          p = 0;
                      }
                      break;
                    case "smooth":
                      var D = 0.35 * (a - d);
                      if (null === n[i][o]) p = 0;
                      else
                        switch (p) {
                          case 0:
                            if (
                              ((f = d),
                              (g = M
                                ? S.move(d, u[o]) + S.line(d, h)
                                : S.move(d, h)),
                              (m = S.move(d, h)),
                              (p = 1),
                              o < n[i].length - 2)
                            ) {
                              var z = S.curve(d + D, h, a - D, s, a, s);
                              (g += z), (m += z);
                              break;
                            }
                          case 1:
                            if (null === n[i][o + 1])
                              (g += M ? S.line(d, c) : S.move(d, h)),
                                (m += S.line(d, A) + S.line(f, A) + "z"),
                                v.push(g),
                                b.push(m),
                                (p = -1);
                            else {
                              var j = S.curve(d + D, h, a - D, s, a, s);
                              (g += j),
                                (m += j),
                                o >= n[i].length - 2 &&
                                  (M &&
                                    (g +=
                                      S.curve(a, s, a, s, a, c) + S.move(a, c)),
                                  (m +=
                                    S.curve(a, s, a, s, a, A) +
                                    S.line(f, A) +
                                    "z"),
                                  v.push(g),
                                  b.push(m),
                                  (p = -1));
                            }
                        }
                      (d = a), (h = s);
                      break;
                    default:
                      var B = function (e, t, n) {
                        var i = [];
                        switch (e) {
                          case "stepline":
                            i = S.line(t, null, "H") + S.line(null, n, "V");
                            break;
                          case "linestep":
                            i = S.line(null, n, "V") + S.line(t, null, "H");
                            break;
                          case "straight":
                            i = S.line(t, n);
                        }
                        return i;
                      };
                      if (null === n[i][o]) p = 0;
                      else
                        switch (p) {
                          case 0:
                            if (
                              ((f = d),
                              (g = M
                                ? S.move(d, u[o]) + S.line(d, h)
                                : S.move(d, h)),
                              (m = S.move(d, h)),
                              (p = 1),
                              o < n[i].length - 2)
                            ) {
                              var F = B(x, a, s);
                              (g += F), (m += F);
                              break;
                            }
                          case 1:
                            if (null === n[i][o + 1])
                              (g += M ? S.line(d, c) : S.move(d, h)),
                                (m += S.line(d, A) + S.line(f, A) + "z"),
                                v.push(g),
                                b.push(m),
                                (p = -1);
                            else {
                              var W = B(x, a, s);
                              (g += W),
                                (m += W),
                                o >= n[i].length - 2 &&
                                  (M && (g += S.line(a, c)),
                                  (m += S.line(a, A) + S.line(f, A) + "z"),
                                  v.push(g),
                                  b.push(m),
                                  (p = -1));
                            }
                        }
                      (d = a), (h = s);
                  }
                  return {
                    linePaths: v,
                    areaPaths: b,
                    pX: d,
                    pY: h,
                    pathState: p,
                    segmentStartX: f,
                    linePath: g,
                    areaPath: m,
                  };
                },
              },
              {
                key: "handleNullDataPoints",
                value: function (e, t, n, i, o) {
                  var a = this.w;
                  if (
                    (null === e[n][i] && a.config.markers.showNullDataPoints) ||
                    1 === e[n].length
                  ) {
                    var s = this.strokeWidth - a.config.markers.strokeWidth / 2;
                    s > 0 || (s = 0);
                    var r = this.markers.plotChartMarkers(t, o, i + 1, s, !0);
                    null !== r && this.elPointsMain.add(r);
                  }
                },
              },
            ]),
            e
          );
        })();
        (window.TreemapSquared = {}),
          (window.TreemapSquared.generate = (function () {
            function e(t, n, i, o) {
              (this.xoffset = t),
                (this.yoffset = n),
                (this.height = o),
                (this.width = i),
                (this.shortestEdge = function () {
                  return Math.min(this.height, this.width);
                }),
                (this.getCoordinates = function (e) {
                  var t,
                    n = [],
                    i = this.xoffset,
                    o = this.yoffset,
                    s = a(e) / this.height,
                    r = a(e) / this.width;
                  if (this.width >= this.height)
                    for (t = 0; t < e.length; t++)
                      n.push([i, o, i + s, o + e[t] / s]), (o += e[t] / s);
                  else
                    for (t = 0; t < e.length; t++)
                      n.push([i, o, i + e[t] / r, o + r]), (i += e[t] / r);
                  return n;
                }),
                (this.cutArea = function (t) {
                  var n;
                  if (this.width >= this.height) {
                    var i = t / this.height,
                      o = this.width - i;
                    n = new e(this.xoffset + i, this.yoffset, o, this.height);
                  } else {
                    var a = t / this.width,
                      s = this.height - a;
                    n = new e(this.xoffset, this.yoffset + a, this.width, s);
                  }
                  return n;
                });
            }
            function t(t, i, o, s, r) {
              (s = void 0 === s ? 0 : s), (r = void 0 === r ? 0 : r);
              var l = n(
                (function (e, t) {
                  var n,
                    i = [],
                    o = t / a(e);
                  for (n = 0; n < e.length; n++) i[n] = e[n] * o;
                  return i;
                })(t, i * o),
                [],
                new e(s, r, i, o),
                []
              );
              return (function (e) {
                var t,
                  n,
                  i = [];
                for (t = 0; t < e.length; t++)
                  for (n = 0; n < e[t].length; n++) i.push(e[t][n]);
                return i;
              })(l);
            }
            function n(e, t, o, s) {
              var r, l, c;
              if (0 !== e.length)
                return (
                  (r = o.shortestEdge()),
                  (function (e, t, n) {
                    var o;
                    return (
                      0 === e.length ||
                      ((o = e.slice()).push(t), i(e, n) >= i(o, n))
                    );
                  })(t, (l = e[0]), r)
                    ? (t.push(l), n(e.slice(1), t, o, s))
                    : ((c = o.cutArea(a(t), s)),
                      s.push(o.getCoordinates(t)),
                      n(e, [], c, s)),
                  s
                );
              s.push(o.getCoordinates(t));
            }
            function i(e, t) {
              var n = Math.min.apply(Math, e),
                i = Math.max.apply(Math, e),
                o = a(e);
              return Math.max(
                (Math.pow(t, 2) * i) / Math.pow(o, 2),
                Math.pow(o, 2) / (Math.pow(t, 2) * n)
              );
            }
            function o(e) {
              return e && e.constructor === Array;
            }
            function a(e) {
              var t,
                n = 0;
              for (t = 0; t < e.length; t++) n += e[t];
              return n;
            }
            function s(e) {
              var t,
                n = 0;
              if (o(e[0])) for (t = 0; t < e.length; t++) n += s(e[t]);
              else n = a(e);
              return n;
            }
            return function e(n, i, a, r, l) {
              (r = void 0 === r ? 0 : r), (l = void 0 === l ? 0 : l);
              var c,
                u,
                d = [],
                h = [];
              if (o(n[0])) {
                for (u = 0; u < n.length; u++) d[u] = s(n[u]);
                for (c = t(d, i, a, r, l), u = 0; u < n.length; u++)
                  h.push(
                    e(
                      n[u],
                      c[u][2] - c[u][0],
                      c[u][3] - c[u][1],
                      c[u][0],
                      c[u][1]
                    )
                  );
              } else h = t(n, i, a, r, l);
              return h;
            };
          })());
        var Be,
          Fe,
          We = (function () {
            function e(t, n) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.strokeWidth = this.w.config.stroke.width),
                (this.helpers = new Pe(t)),
                (this.dynamicAnim =
                  this.w.config.chart.animations.dynamicAnimation),
                (this.labels = []);
            }
            return (
              c(e, [
                {
                  key: "draw",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = new k(this.ctx),
                      o = new W(this.ctx),
                      a = i.group({ class: "apexcharts-treemap" });
                    if (n.globals.noData) return a;
                    var s = [];
                    return (
                      e.forEach(function (e) {
                        var t = e.map(function (e) {
                          return Math.abs(e);
                        });
                        s.push(t);
                      }),
                      (this.negRange = this.helpers.checkColorRange()),
                      n.config.series.forEach(function (e, n) {
                        e.data.forEach(function (e) {
                          Array.isArray(t.labels[n]) || (t.labels[n] = []),
                            t.labels[n].push(e.x);
                        });
                      }),
                      window.TreemapSquared.generate(
                        s,
                        n.globals.gridWidth,
                        n.globals.gridHeight
                      ).forEach(function (s, r) {
                        var l = i.group({
                          class: "apexcharts-series apexcharts-treemap-series",
                          seriesName: y.escapeString(n.globals.seriesNames[r]),
                          rel: r + 1,
                          "data:realIndex": r,
                        });
                        if (n.config.chart.dropShadow.enabled) {
                          var c = n.config.chart.dropShadow;
                          new S(t.ctx).dropShadow(a, c, r);
                        }
                        var u = i.group({ class: "apexcharts-data-labels" });
                        s.forEach(function (a, s) {
                          var c = a[0],
                            u = a[1],
                            d = a[2],
                            h = a[3],
                            p = i.drawRect(
                              c,
                              u,
                              d - c,
                              h - u,
                              n.config.plotOptions.treemap.borderRadius,
                              "#fff",
                              1,
                              t.strokeWidth,
                              n.config.plotOptions.treemap.useFillColorAsStroke
                                ? g
                                : n.globals.stroke.colors[r]
                            );
                          p.attr({
                            cx: c,
                            cy: u,
                            index: r,
                            i: r,
                            j: s,
                            width: d - c,
                            height: h - u,
                          });
                          var f = t.helpers.getShadeColor(
                              n.config.chart.type,
                              r,
                              s,
                              t.negRange
                            ),
                            g = f.color;
                          void 0 !== n.config.series[r].data[s] &&
                            n.config.series[r].data[s].fillColor &&
                            (g = n.config.series[r].data[s].fillColor);
                          var m = o.fillPath({
                            color: g,
                            seriesNumber: r,
                            dataPointIndex: s,
                          });
                          p.node.classList.add("apexcharts-treemap-rect"),
                            p.attr({ fill: m }),
                            t.helpers.addListeners(p);
                          var v = {
                              x: c + (d - c) / 2,
                              y: u + (h - u) / 2,
                              width: 0,
                              height: 0,
                            },
                            b = { x: c, y: u, width: d - c, height: h - u };
                          if (
                            n.config.chart.animations.enabled &&
                            !n.globals.dataChanged
                          ) {
                            var x = 1;
                            n.globals.resized ||
                              (x = n.config.chart.animations.speed),
                              t.animateTreemap(p, v, b, x);
                          }
                          if (n.globals.dataChanged) {
                            var y = 1;
                            t.dynamicAnim.enabled &&
                              n.globals.shouldAnimate &&
                              ((y = t.dynamicAnim.speed),
                              n.globals.previousPaths[r] &&
                                n.globals.previousPaths[r][s] &&
                                n.globals.previousPaths[r][s].rect &&
                                (v = n.globals.previousPaths[r][s].rect),
                              t.animateTreemap(p, v, b, y));
                          }
                          var w = t.getFontSize(a),
                            S = n.config.dataLabels.formatter(t.labels[r][s], {
                              value: n.globals.series[r][s],
                              seriesIndex: r,
                              dataPointIndex: s,
                              w: n,
                            });
                          "truncate" ===
                            n.config.plotOptions.treemap.dataLabels.format &&
                            ((w = parseInt(
                              n.config.dataLabels.style.fontSize,
                              10
                            )),
                            (S = t.truncateLabels(S, w, c, u, d, h)));
                          var k = t.helpers.calculateDataLabels({
                            text: S,
                            x: (c + d) / 2,
                            y: (u + h) / 2 + t.strokeWidth / 2 + w / 3,
                            i: r,
                            j: s,
                            colorProps: f,
                            fontSize: w,
                            series: e,
                          });
                          n.config.dataLabels.enabled &&
                            k &&
                            t.rotateToFitLabel(k, w, S, c, u, d, h),
                            l.add(p),
                            null !== k && l.add(k);
                        }),
                          l.add(u),
                          a.add(l);
                      }),
                      a
                    );
                  },
                },
                {
                  key: "getFontSize",
                  value: function (e) {
                    var t,
                      n,
                      i = this.w,
                      o =
                        (function e(t) {
                          var n,
                            i = 0;
                          if (Array.isArray(t[0]))
                            for (n = 0; n < t.length; n++) i += e(t[n]);
                          else for (n = 0; n < t.length; n++) i += t[n].length;
                          return i;
                        })(this.labels) /
                        (function e(t) {
                          var n,
                            i = 0;
                          if (Array.isArray(t[0]))
                            for (n = 0; n < t.length; n++) i += e(t[n]);
                          else for (n = 0; n < t.length; n++) i += 1;
                          return i;
                        })(this.labels);
                    return (
                      (t = (e[2] - e[0]) * (e[3] - e[1])),
                      (n = Math.pow(t, 0.5)),
                      Math.min(
                        n / o,
                        parseInt(i.config.dataLabels.style.fontSize, 10)
                      )
                    );
                  },
                },
                {
                  key: "rotateToFitLabel",
                  value: function (e, t, n, i, o, a, s) {
                    var r = new k(this.ctx),
                      l = r.getTextRects(n, t);
                    if (
                      l.width + this.w.config.stroke.width + 5 > a - i &&
                      l.width <= s - o
                    ) {
                      var c = r.rotateAroundCenter(e.node);
                      e.node.setAttribute(
                        "transform",
                        "rotate(-90 "
                          .concat(c.x, " ")
                          .concat(c.y, ") translate(")
                          .concat(l.height / 3, ")")
                      );
                    }
                  },
                },
                {
                  key: "truncateLabels",
                  value: function (e, t, n, i, o, a) {
                    var s = new k(this.ctx),
                      r =
                        s.getTextRects(e, t).width +
                          this.w.config.stroke.width +
                          5 >
                          o - n && a - i > o - n
                          ? a - i
                          : o - n,
                      l = s.getTextBasedOnMaxWidth({
                        text: e,
                        maxWidth: r,
                        fontSize: t,
                      });
                    return e.length !== l.length && r / t < 5 ? "" : l;
                  },
                },
                {
                  key: "animateTreemap",
                  value: function (e, t, n, i) {
                    var o = new w(this.ctx);
                    o.animateRect(
                      e,
                      { x: t.x, y: t.y, width: t.width, height: t.height },
                      { x: n.x, y: n.y, width: n.width, height: n.height },
                      i,
                      function () {
                        o.animationCompleted(e);
                      }
                    );
                  },
                },
              ]),
              e
            );
          })(),
          He = 10 / 86400,
          Ge = (function () {
            function e(t) {
              r(this, e),
                (this.ctx = t),
                (this.w = t.w),
                (this.timeScaleArray = []),
                (this.utc = this.w.config.xaxis.labels.datetimeUTC);
            }
            return (
              c(e, [
                {
                  key: "calculateTimeScaleTicks",
                  value: function (e, t) {
                    var n = this,
                      i = this.w;
                    if (i.globals.allSeriesCollapsed)
                      return (
                        (i.globals.labels = []),
                        (i.globals.timescaleLabels = []),
                        []
                      );
                    var o = new P(this.ctx),
                      s = (t - e) / 864e5;
                    this.determineInterval(s),
                      (i.globals.disableZoomIn = !1),
                      (i.globals.disableZoomOut = !1),
                      s < He
                        ? (i.globals.disableZoomIn = !0)
                        : s > 5e4 && (i.globals.disableZoomOut = !0);
                    var r = o.getTimeUnitsfromTimestamp(e, t, this.utc),
                      l = i.globals.gridWidth / s,
                      c = l / 24,
                      u = c / 60,
                      d = u / 60,
                      h = Math.floor(24 * s),
                      p = Math.floor(1440 * s),
                      f = Math.floor(86400 * s),
                      g = Math.floor(s),
                      m = Math.floor(s / 30),
                      v = Math.floor(s / 365),
                      b = {
                        minMillisecond: r.minMillisecond,
                        minSecond: r.minSecond,
                        minMinute: r.minMinute,
                        minHour: r.minHour,
                        minDate: r.minDate,
                        minMonth: r.minMonth,
                        minYear: r.minYear,
                      },
                      x = {
                        firstVal: b,
                        currentMillisecond: b.minMillisecond,
                        currentSecond: b.minSecond,
                        currentMinute: b.minMinute,
                        currentHour: b.minHour,
                        currentMonthDate: b.minDate,
                        currentDate: b.minDate,
                        currentMonth: b.minMonth,
                        currentYear: b.minYear,
                        daysWidthOnXAxis: l,
                        hoursWidthOnXAxis: c,
                        minutesWidthOnXAxis: u,
                        secondsWidthOnXAxis: d,
                        numberOfSeconds: f,
                        numberOfMinutes: p,
                        numberOfHours: h,
                        numberOfDays: g,
                        numberOfMonths: m,
                        numberOfYears: v,
                      };
                    switch (this.tickInterval) {
                      case "years":
                        this.generateYearScale(x);
                        break;
                      case "months":
                      case "half_year":
                        this.generateMonthScale(x);
                        break;
                      case "months_days":
                      case "months_fortnight":
                      case "days":
                      case "week_days":
                        this.generateDayScale(x);
                        break;
                      case "hours":
                        this.generateHourScale(x);
                        break;
                      case "minutes_fives":
                      case "minutes":
                        this.generateMinuteScale(x);
                        break;
                      case "seconds_tens":
                      case "seconds_fives":
                      case "seconds":
                        this.generateSecondScale(x);
                    }
                    var y = this.timeScaleArray.map(function (e) {
                      var t = {
                        position: e.position,
                        unit: e.unit,
                        year: e.year,
                        day: e.day ? e.day : 1,
                        hour: e.hour ? e.hour : 0,
                        month: e.month + 1,
                      };
                      return "month" === e.unit
                        ? a(a({}, t), {}, { day: 1, value: e.value + 1 })
                        : "day" === e.unit || "hour" === e.unit
                        ? a(a({}, t), {}, { value: e.value })
                        : "minute" === e.unit
                        ? a(a({}, t), {}, { value: e.value, minute: e.value })
                        : "second" === e.unit
                        ? a(
                            a({}, t),
                            {},
                            {
                              value: e.value,
                              minute: e.minute,
                              second: e.second,
                            }
                          )
                        : e;
                    });
                    return y.filter(function (e) {
                      var t = 1,
                        o = Math.ceil(i.globals.gridWidth / 120),
                        a = e.value;
                      void 0 !== i.config.xaxis.tickAmount &&
                        (o = i.config.xaxis.tickAmount),
                        y.length > o && (t = Math.floor(y.length / o));
                      var s = !1,
                        r = !1;
                      switch (n.tickInterval) {
                        case "years":
                          "year" === e.unit && (s = !0);
                          break;
                        case "half_year":
                          (t = 7), "year" === e.unit && (s = !0);
                          break;
                        case "months":
                          (t = 1), "year" === e.unit && (s = !0);
                          break;
                        case "months_fortnight":
                          (t = 15),
                            ("year" !== e.unit && "month" !== e.unit) ||
                              (s = !0),
                            30 === a && (r = !0);
                          break;
                        case "months_days":
                          (t = 10),
                            "month" === e.unit && (s = !0),
                            30 === a && (r = !0);
                          break;
                        case "week_days":
                          (t = 8), "month" === e.unit && (s = !0);
                          break;
                        case "days":
                          (t = 1), "month" === e.unit && (s = !0);
                          break;
                        case "hours":
                          "day" === e.unit && (s = !0);
                          break;
                        case "minutes_fives":
                        case "seconds_fives":
                          a % 5 != 0 && (r = !0);
                          break;
                        case "seconds_tens":
                          a % 10 != 0 && (r = !0);
                      }
                      if (
                        "hours" === n.tickInterval ||
                        "minutes_fives" === n.tickInterval ||
                        "seconds_tens" === n.tickInterval ||
                        "seconds_fives" === n.tickInterval
                      ) {
                        if (!r) return !0;
                      } else if ((a % t == 0 || s) && !r) return !0;
                    });
                  },
                },
                {
                  key: "recalcDimensionsBasedOnFormat",
                  value: function (e, t) {
                    var n = this.w,
                      i = this.formatDates(e),
                      o = this.removeOverlappingTS(i);
                    (n.globals.timescaleLabels = o.slice()),
                      new ue(this.ctx).plotCoords();
                  },
                },
                {
                  key: "determineInterval",
                  value: function (e) {
                    var t = 24 * e,
                      n = 60 * t;
                    switch (!0) {
                      case e / 365 > 5:
                        this.tickInterval = "years";
                        break;
                      case e > 800:
                        this.tickInterval = "half_year";
                        break;
                      case e > 180:
                        this.tickInterval = "months";
                        break;
                      case e > 90:
                        this.tickInterval = "months_fortnight";
                        break;
                      case e > 60:
                        this.tickInterval = "months_days";
                        break;
                      case e > 30:
                        this.tickInterval = "week_days";
                        break;
                      case e > 2:
                        this.tickInterval = "days";
                        break;
                      case t > 2.4:
                        this.tickInterval = "hours";
                        break;
                      case n > 15:
                        this.tickInterval = "minutes_fives";
                        break;
                      case n > 5:
                        this.tickInterval = "minutes";
                        break;
                      case n > 1:
                        this.tickInterval = "seconds_tens";
                        break;
                      case 60 * n > 20:
                        this.tickInterval = "seconds_fives";
                        break;
                      default:
                        this.tickInterval = "seconds";
                    }
                  },
                },
                {
                  key: "generateYearScale",
                  value: function (e) {
                    var t = e.firstVal,
                      n = e.currentMonth,
                      i = e.currentYear,
                      o = e.daysWidthOnXAxis,
                      a = e.numberOfYears,
                      s = t.minYear,
                      r = 0,
                      l = new P(this.ctx),
                      c = "year";
                    if (t.minDate > 1 || t.minMonth > 0) {
                      var u = l.determineRemainingDaysOfYear(
                        t.minYear,
                        t.minMonth,
                        t.minDate
                      );
                      (r = (l.determineDaysOfYear(t.minYear) - u + 1) * o),
                        (s = t.minYear + 1),
                        this.timeScaleArray.push({
                          position: r,
                          value: s,
                          unit: c,
                          year: s,
                          month: y.monthMod(n + 1),
                        });
                    } else
                      1 === t.minDate &&
                        0 === t.minMonth &&
                        this.timeScaleArray.push({
                          position: r,
                          value: s,
                          unit: c,
                          year: i,
                          month: y.monthMod(n + 1),
                        });
                    for (var d = s, h = r, p = 0; p < a; p++)
                      d++,
                        (h = l.determineDaysOfYear(d - 1) * o + h),
                        this.timeScaleArray.push({
                          position: h,
                          value: d,
                          unit: c,
                          year: d,
                          month: 1,
                        });
                  },
                },
                {
                  key: "generateMonthScale",
                  value: function (e) {
                    var t = e.firstVal,
                      n = e.currentMonthDate,
                      i = e.currentMonth,
                      o = e.currentYear,
                      a = e.daysWidthOnXAxis,
                      s = e.numberOfMonths,
                      r = i,
                      l = 0,
                      c = new P(this.ctx),
                      u = "month",
                      d = 0;
                    if (t.minDate > 1) {
                      (l =
                        (c.determineDaysOfMonths(i + 1, t.minYear) - n + 1) *
                        a),
                        (r = y.monthMod(i + 1));
                      var h = o + d,
                        p = y.monthMod(r),
                        f = r;
                      0 === r &&
                        ((u = "year"), (f = h), (p = 1), (h += d += 1)),
                        this.timeScaleArray.push({
                          position: l,
                          value: f,
                          unit: u,
                          year: h,
                          month: p,
                        });
                    } else
                      this.timeScaleArray.push({
                        position: l,
                        value: r,
                        unit: u,
                        year: o,
                        month: y.monthMod(i),
                      });
                    for (var g = r + 1, m = l, v = 0, b = 1; v < s; v++, b++) {
                      0 === (g = y.monthMod(g))
                        ? ((u = "year"), (d += 1))
                        : (u = "month");
                      var x = this._getYear(o, g, d);
                      m = c.determineDaysOfMonths(g, x) * a + m;
                      var w = 0 === g ? x : g;
                      this.timeScaleArray.push({
                        position: m,
                        value: w,
                        unit: u,
                        year: x,
                        month: 0 === g ? 1 : g,
                      }),
                        g++;
                    }
                  },
                },
                {
                  key: "generateDayScale",
                  value: function (e) {
                    var t = e.firstVal,
                      n = e.currentMonth,
                      i = e.currentYear,
                      o = e.hoursWidthOnXAxis,
                      a = e.numberOfDays,
                      s = new P(this.ctx),
                      r = "day",
                      l = t.minDate + 1,
                      c = l,
                      u = function (e, t, n) {
                        return e > s.determineDaysOfMonths(t + 1, n)
                          ? ((c = 1), (r = "month"), (h = t += 1), t)
                          : t;
                      },
                      d = (24 - t.minHour) * o,
                      h = l,
                      p = u(c, n, i);
                    0 === t.minHour && 1 === t.minDate
                      ? ((d = 0),
                        (h = y.monthMod(t.minMonth)),
                        (r = "month"),
                        (c = t.minDate))
                      : 1 !== t.minDate &&
                        0 === t.minHour &&
                        0 === t.minMinute &&
                        ((d = 0),
                        (l = t.minDate),
                        (h = l),
                        (p = u((c = l), n, i))),
                      this.timeScaleArray.push({
                        position: d,
                        value: h,
                        unit: r,
                        year: this._getYear(i, p, 0),
                        month: y.monthMod(p),
                        day: c,
                      });
                    for (var f = d, g = 0; g < a; g++) {
                      (r = "day"), (p = u((c += 1), p, this._getYear(i, p, 0)));
                      var m = this._getYear(i, p, 0);
                      f = 24 * o + f;
                      var v = 1 === c ? y.monthMod(p) : c;
                      this.timeScaleArray.push({
                        position: f,
                        value: v,
                        unit: r,
                        year: m,
                        month: y.monthMod(p),
                        day: v,
                      });
                    }
                  },
                },
                {
                  key: "generateHourScale",
                  value: function (e) {
                    var t = e.firstVal,
                      n = e.currentDate,
                      i = e.currentMonth,
                      o = e.currentYear,
                      a = e.minutesWidthOnXAxis,
                      s = e.numberOfHours,
                      r = new P(this.ctx),
                      l = "hour",
                      c = function (e, t) {
                        return (
                          e > r.determineDaysOfMonths(t + 1, o) &&
                            ((g = 1), (t += 1)),
                          { month: t, date: g }
                        );
                      },
                      u = function (e, t) {
                        return e > r.determineDaysOfMonths(t + 1, o)
                          ? (t += 1)
                          : t;
                      },
                      d = 60 - (t.minMinute + t.minSecond / 60),
                      h = d * a,
                      p = t.minHour + 1,
                      f = p;
                    60 === d && ((h = 0), (f = p = t.minHour));
                    var g = n;
                    f >= 24 && ((f = 0), (g += 1), (l = "day"));
                    var m = c(g, i).month;
                    (m = u(g, m)),
                      this.timeScaleArray.push({
                        position: h,
                        value: p,
                        unit: l,
                        day: g,
                        hour: f,
                        year: o,
                        month: y.monthMod(m),
                      }),
                      f++;
                    for (var v = h, b = 0; b < s; b++) {
                      (l = "hour"),
                        f >= 24 &&
                          ((f = 0),
                          (l = "day"),
                          (m = c((g += 1), m).month),
                          (m = u(g, m)));
                      var x = this._getYear(o, m, 0);
                      v = 60 * a + v;
                      var w = 0 === f ? g : f;
                      this.timeScaleArray.push({
                        position: v,
                        value: w,
                        unit: l,
                        hour: f,
                        day: g,
                        year: x,
                        month: y.monthMod(m),
                      }),
                        f++;
                    }
                  },
                },
                {
                  key: "generateMinuteScale",
                  value: function (e) {
                    for (
                      var t = e.currentMillisecond,
                        n = e.currentSecond,
                        i = e.currentMinute,
                        o = e.currentHour,
                        a = e.currentDate,
                        s = e.currentMonth,
                        r = e.currentYear,
                        l = e.minutesWidthOnXAxis,
                        c = e.secondsWidthOnXAxis,
                        u = e.numberOfMinutes,
                        d = i + 1,
                        h = a,
                        p = s,
                        f = r,
                        g = o,
                        m = (60 - n - t / 1e3) * c,
                        v = 0;
                      v < u;
                      v++
                    )
                      d >= 60 && ((d = 0), 24 === (g += 1) && (g = 0)),
                        this.timeScaleArray.push({
                          position: m,
                          value: d,
                          unit: "minute",
                          hour: g,
                          minute: d,
                          day: h,
                          year: this._getYear(f, p, 0),
                          month: y.monthMod(p),
                        }),
                        (m += l),
                        d++;
                  },
                },
                {
                  key: "generateSecondScale",
                  value: function (e) {
                    for (
                      var t = e.currentMillisecond,
                        n = e.currentSecond,
                        i = e.currentMinute,
                        o = e.currentHour,
                        a = e.currentDate,
                        s = e.currentMonth,
                        r = e.currentYear,
                        l = e.secondsWidthOnXAxis,
                        c = e.numberOfSeconds,
                        u = n + 1,
                        d = i,
                        h = a,
                        p = s,
                        f = r,
                        g = o,
                        m = ((1e3 - t) / 1e3) * l,
                        v = 0;
                      v < c;
                      v++
                    )
                      u >= 60 &&
                        ((u = 0),
                        ++d >= 60 && ((d = 0), 24 === ++g && (g = 0))),
                        this.timeScaleArray.push({
                          position: m,
                          value: u,
                          unit: "second",
                          hour: g,
                          minute: d,
                          second: u,
                          day: h,
                          year: this._getYear(f, p, 0),
                          month: y.monthMod(p),
                        }),
                        (m += l),
                        u++;
                  },
                },
                {
                  key: "createRawDateString",
                  value: function (e, t) {
                    var n = e.year;
                    return (
                      0 === e.month && (e.month = 1),
                      (n += "-" + ("0" + e.month.toString()).slice(-2)),
                      "day" === e.unit
                        ? (n +=
                            "day" === e.unit
                              ? "-" + ("0" + t).slice(-2)
                              : "-01")
                        : (n += "-" + ("0" + (e.day ? e.day : "1")).slice(-2)),
                      "hour" === e.unit
                        ? (n +=
                            "hour" === e.unit
                              ? "T" + ("0" + t).slice(-2)
                              : "T00")
                        : (n +=
                            "T" + ("0" + (e.hour ? e.hour : "0")).slice(-2)),
                      "minute" === e.unit
                        ? (n += ":" + ("0" + t).slice(-2))
                        : (n +=
                            ":" +
                            (e.minute ? ("0" + e.minute).slice(-2) : "00")),
                      "second" === e.unit
                        ? (n += ":" + ("0" + t).slice(-2))
                        : (n += ":00"),
                      this.utc && (n += ".000Z"),
                      n
                    );
                  },
                },
                {
                  key: "formatDates",
                  value: function (e) {
                    var t = this,
                      n = this.w;
                    return e.map(function (e) {
                      var i = e.value.toString(),
                        o = new P(t.ctx),
                        a = t.createRawDateString(e, i),
                        s = o.getDate(o.parseDate(a));
                      if (
                        (t.utc || (s = o.getDate(o.parseDateWithTimezone(a))),
                        void 0 === n.config.xaxis.labels.format)
                      ) {
                        var r = "dd MMM",
                          l = n.config.xaxis.labels.datetimeFormatter;
                        "year" === e.unit && (r = l.year),
                          "month" === e.unit && (r = l.month),
                          "day" === e.unit && (r = l.day),
                          "hour" === e.unit && (r = l.hour),
                          "minute" === e.unit && (r = l.minute),
                          "second" === e.unit && (r = l.second),
                          (i = o.formatDate(s, r));
                      } else i = o.formatDate(s, n.config.xaxis.labels.format);
                      return {
                        dateString: a,
                        position: e.position,
                        value: i,
                        unit: e.unit,
                        year: e.year,
                        month: e.month,
                      };
                    });
                  },
                },
                {
                  key: "removeOverlappingTS",
                  value: function (e) {
                    var t,
                      n = this,
                      i = new k(this.ctx),
                      o = !1;
                    e.length > 0 &&
                      e[0].value &&
                      e.every(function (t) {
                        return t.value.length === e[0].value.length;
                      }) &&
                      ((o = !0), (t = i.getTextRects(e[0].value).width));
                    var a = 0,
                      s = e.map(function (s, r) {
                        if (
                          r > 0 &&
                          n.w.config.xaxis.labels.hideOverlappingLabels
                        ) {
                          var l = o ? t : i.getTextRects(e[a].value).width,
                            c = e[a].position;
                          return s.position > c + l + 10 ? ((a = r), s) : null;
                        }
                        return s;
                      });
                    return s.filter(function (e) {
                      return null !== e;
                    });
                  },
                },
                {
                  key: "_getYear",
                  value: function (e, t, n) {
                    return e + Math.floor(t / 12) + n;
                  },
                },
              ]),
              e
            );
          })(),
          Ve = (function () {
            function e(t, n) {
              r(this, e), (this.ctx = n), (this.w = n.w), (this.el = t);
            }
            return (
              c(e, [
                {
                  key: "setupElements",
                  value: function () {
                    var e = this.w.globals,
                      t = this.w.config,
                      n = t.chart.type;
                    (e.axisCharts =
                      [
                        "line",
                        "area",
                        "bar",
                        "rangeBar",
                        "rangeArea",
                        "candlestick",
                        "boxPlot",
                        "scatter",
                        "bubble",
                        "radar",
                        "heatmap",
                        "treemap",
                      ].indexOf(n) > -1),
                      (e.xyCharts =
                        [
                          "line",
                          "area",
                          "bar",
                          "rangeBar",
                          "rangeArea",
                          "candlestick",
                          "boxPlot",
                          "scatter",
                          "bubble",
                        ].indexOf(n) > -1),
                      (e.isBarHorizontal =
                        ("bar" === t.chart.type ||
                          "rangeBar" === t.chart.type ||
                          "boxPlot" === t.chart.type) &&
                        t.plotOptions.bar.horizontal),
                      (e.chartClass = ".apexcharts" + e.chartID),
                      (e.dom.baseEl = this.el),
                      (e.dom.elWrap = document.createElement("div")),
                      k.setAttrs(e.dom.elWrap, {
                        id: e.chartClass.substring(1),
                        class: "apexcharts-canvas " + e.chartClass.substring(1),
                      }),
                      this.el.appendChild(e.dom.elWrap),
                      (e.dom.Paper = new window.SVG.Doc(e.dom.elWrap)),
                      e.dom.Paper.attr({
                        class: "apexcharts-svg",
                        "xmlns:data": "ApexChartsNS",
                        transform: "translate("
                          .concat(t.chart.offsetX, ", ")
                          .concat(t.chart.offsetY, ")"),
                      }),
                      (e.dom.Paper.node.style.background =
                        "dark" !== t.theme.mode || t.chart.background
                          ? "light" !== t.theme.mode || t.chart.background
                            ? t.chart.background
                            : "#fff"
                          : "#424242"),
                      this.setSVGDimensions(),
                      (e.dom.elLegendForeign = document.createElementNS(
                        e.SVGNS,
                        "foreignObject"
                      )),
                      k.setAttrs(e.dom.elLegendForeign, {
                        x: 0,
                        y: 0,
                        width: e.svgWidth,
                        height: e.svgHeight,
                      }),
                      (e.dom.elLegendWrap = document.createElement("div")),
                      e.dom.elLegendWrap.classList.add("apexcharts-legend"),
                      e.dom.elLegendWrap.setAttribute(
                        "xmlns",
                        "http://www.w3.org/1999/xhtml"
                      ),
                      e.dom.elLegendForeign.appendChild(e.dom.elLegendWrap),
                      e.dom.Paper.node.appendChild(e.dom.elLegendForeign),
                      (e.dom.elGraphical = e.dom.Paper.group().attr({
                        class: "apexcharts-inner apexcharts-graphical",
                      })),
                      (e.dom.elDefs = e.dom.Paper.defs()),
                      e.dom.Paper.add(e.dom.elGraphical),
                      e.dom.elGraphical.add(e.dom.elDefs);
                  },
                },
                {
                  key: "plotChartType",
                  value: function (e, t) {
                    var n = this.w,
                      i = n.config,
                      o = n.globals,
                      a = { series: [], i: [] },
                      s = { series: [], i: [] },
                      r = { series: [], i: [] },
                      l = { series: [], i: [] },
                      c = { series: [], i: [] },
                      u = { series: [], i: [] },
                      d = { series: [], i: [] },
                      h = { series: [], i: [] },
                      p = { series: [], seriesRangeEnd: [], i: [] },
                      f = void 0 !== i.chart.type ? i.chart.type : "line",
                      g = null,
                      m = 0;
                    o.series.forEach(function (t, i) {
                      var v = e[i].type || f;
                      switch (v) {
                        case "column":
                        case "bar":
                          c.series.push(t),
                            c.i.push(i),
                            (n.globals.columnSeries = c);
                          break;
                        case "area":
                          s.series.push(t), s.i.push(i);
                          break;
                        case "line":
                          a.series.push(t), a.i.push(i);
                          break;
                        case "scatter":
                          r.series.push(t), r.i.push(i);
                          break;
                        case "bubble":
                          l.series.push(t), l.i.push(i);
                          break;
                        case "candlestick":
                          u.series.push(t), u.i.push(i);
                          break;
                        case "boxPlot":
                          d.series.push(t), d.i.push(i);
                          break;
                        case "rangeBar":
                          h.series.push(t), h.i.push(i);
                          break;
                        case "rangeArea":
                          p.series.push(o.seriesRangeStart[i]),
                            p.seriesRangeEnd.push(o.seriesRangeEnd[i]),
                            p.i.push(i);
                          break;
                        case "heatmap":
                        case "treemap":
                        case "pie":
                        case "donut":
                        case "polarArea":
                        case "radialBar":
                        case "radar":
                          g = v;
                          break;
                        default:
                          console.warn(
                            "You have specified an unrecognized series type (",
                            v,
                            ")."
                          );
                      }
                      f !== v && "scatter" !== v && m++;
                    }),
                      m > 0 &&
                        (null !== g &&
                          console.warn(
                            "Chart or series type ",
                            g,
                            " can not appear with other chart or series types."
                          ),
                        c.series.length > 0 &&
                          i.plotOptions.bar.horizontal &&
                          ((m -= c.length),
                          (c = { series: [], i: [] }),
                          (n.globals.columnSeries = { series: [], i: [] }),
                          console.warn(
                            "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"
                          ))),
                      o.comboCharts || (o.comboCharts = m > 0);
                    var b = new je(this.ctx, t),
                      x = new Me(this.ctx, t);
                    this.ctx.pie = new Te(this.ctx);
                    var y = new Re(this.ctx);
                    this.ctx.rangeBar = new Ie(this.ctx, t);
                    var w = new Oe(this.ctx),
                      S = [];
                    if (o.comboCharts) {
                      var k,
                        C,
                        M = new A(this.ctx);
                      if (
                        (s.series.length > 0 &&
                          (k = S).push.apply(
                            k,
                            v(M.drawSeriesByGroup(s, o.areaGroups, "area", b))
                          ),
                        c.series.length > 0)
                      )
                        if (n.config.chart.stacked) {
                          var P = new Ce(this.ctx, t);
                          S.push(P.draw(c.series, c.i));
                        } else
                          (this.ctx.bar = new Ae(this.ctx, t)),
                            S.push(this.ctx.bar.draw(c.series, c.i));
                      if (
                        (p.series.length > 0 &&
                          S.push(
                            b.draw(p.series, "rangeArea", p.i, p.seriesRangeEnd)
                          ),
                        a.series.length > 0 &&
                          (C = S).push.apply(
                            C,
                            v(M.drawSeriesByGroup(a, o.lineGroups, "line", b))
                          ),
                        u.series.length > 0 &&
                          S.push(x.draw(u.series, "candlestick", u.i)),
                        d.series.length > 0 &&
                          S.push(x.draw(d.series, "boxPlot", d.i)),
                        h.series.length > 0 &&
                          S.push(this.ctx.rangeBar.draw(h.series, h.i)),
                        r.series.length > 0)
                      ) {
                        var E = new je(this.ctx, t, !0);
                        S.push(E.draw(r.series, "scatter", r.i));
                      }
                      if (l.series.length > 0) {
                        var L = new je(this.ctx, t, !0);
                        S.push(L.draw(l.series, "bubble", l.i));
                      }
                    } else
                      switch (i.chart.type) {
                        case "line":
                          S = b.draw(o.series, "line");
                          break;
                        case "area":
                          S = b.draw(o.series, "area");
                          break;
                        case "bar":
                          i.chart.stacked
                            ? (S = new Ce(this.ctx, t).draw(o.series))
                            : ((this.ctx.bar = new Ae(this.ctx, t)),
                              (S = this.ctx.bar.draw(o.series)));
                          break;
                        case "candlestick":
                          S = new Me(this.ctx, t).draw(o.series, "candlestick");
                          break;
                        case "boxPlot":
                          S = new Me(this.ctx, t).draw(o.series, i.chart.type);
                          break;
                        case "rangeBar":
                          S = this.ctx.rangeBar.draw(o.series);
                          break;
                        case "rangeArea":
                          S = b.draw(
                            o.seriesRangeStart,
                            "rangeArea",
                            void 0,
                            o.seriesRangeEnd
                          );
                          break;
                        case "heatmap":
                          S = new Ee(this.ctx, t).draw(o.series);
                          break;
                        case "treemap":
                          S = new We(this.ctx, t).draw(o.series);
                          break;
                        case "pie":
                        case "donut":
                        case "polarArea":
                          S = this.ctx.pie.draw(o.series);
                          break;
                        case "radialBar":
                          S = y.draw(o.series);
                          break;
                        case "radar":
                          S = w.draw(o.series);
                          break;
                        default:
                          S = b.draw(o.series);
                      }
                    return S;
                  },
                },
                {
                  key: "setSVGDimensions",
                  value: function () {
                    var e = this.w.globals,
                      t = this.w.config;
                    t.chart.width || (t.chart.width = "100%"),
                      t.chart.height || (t.chart.height = "auto"),
                      (e.svgWidth = t.chart.width),
                      (e.svgHeight = t.chart.height);
                    var n = y.getDimensions(this.el),
                      i = t.chart.width
                        .toString()
                        .split(/[0-9]+/g)
                        .pop();
                    "%" === i
                      ? y.isNumber(n[0]) &&
                        (0 === n[0].width &&
                          (n = y.getDimensions(this.el.parentNode)),
                        (e.svgWidth =
                          (n[0] * parseInt(t.chart.width, 10)) / 100))
                      : ("px" !== i && "" !== i) ||
                        (e.svgWidth = parseInt(t.chart.width, 10));
                    var o = String(t.chart.height)
                      .toString()
                      .split(/[0-9]+/g)
                      .pop();
                    if ("auto" !== e.svgHeight && "" !== e.svgHeight)
                      if ("%" === o) {
                        var a = y.getDimensions(this.el.parentNode);
                        e.svgHeight =
                          (a[1] * parseInt(t.chart.height, 10)) / 100;
                      } else e.svgHeight = parseInt(t.chart.height, 10);
                    else
                      e.axisCharts
                        ? (e.svgHeight = e.svgWidth / 1.61)
                        : (e.svgHeight = e.svgWidth / 1.2);
                    if (
                      (e.svgWidth < 0 && (e.svgWidth = 0),
                      e.svgHeight < 0 && (e.svgHeight = 0),
                      k.setAttrs(e.dom.Paper.node, {
                        width: e.svgWidth,
                        height: e.svgHeight,
                      }),
                      "%" !== o)
                    ) {
                      var s = t.chart.sparkline.enabled
                        ? 0
                        : e.axisCharts
                        ? t.chart.parentHeightOffset
                        : 0;
                      e.dom.Paper.node.parentNode.parentNode.style.minHeight =
                        e.svgHeight + s + "px";
                    }
                    (e.dom.elWrap.style.width = e.svgWidth + "px"),
                      (e.dom.elWrap.style.height = e.svgHeight + "px");
                  },
                },
                {
                  key: "shiftGraphPosition",
                  value: function () {
                    var e = this.w.globals,
                      t = e.translateY,
                      n = {
                        transform: "translate(" + e.translateX + ", " + t + ")",
                      };
                    k.setAttrs(e.dom.elGraphical.node, n);
                  },
                },
                {
                  key: "resizeNonAxisCharts",
                  value: function () {
                    var e = this.w,
                      t = e.globals,
                      n = 0,
                      i = e.config.chart.sparkline.enabled ? 1 : 15;
                    (i += e.config.grid.padding.bottom),
                      ("top" !== e.config.legend.position &&
                        "bottom" !== e.config.legend.position) ||
                        !e.config.legend.show ||
                        e.config.legend.floating ||
                        (n =
                          new he(this.ctx).legendHelpers.getLegendDimensions()
                            .clwh + 10);
                    var o = e.globals.dom.baseEl.querySelector(
                        ".apexcharts-radialbar, .apexcharts-pie"
                      ),
                      a = 2.05 * e.globals.radialSize;
                    if (
                      o &&
                      !e.config.chart.sparkline.enabled &&
                      0 !== e.config.plotOptions.radialBar.startAngle
                    ) {
                      var s = y.getBoundingClientRect(o);
                      a = s.bottom;
                      var r = s.bottom - s.top;
                      a = Math.max(2.05 * e.globals.radialSize, r);
                    }
                    var l = a + t.translateY + n + i;
                    t.dom.elLegendForeign &&
                      t.dom.elLegendForeign.setAttribute("height", l),
                      (e.config.chart.height &&
                        String(e.config.chart.height).indexOf("%") > 0) ||
                        ((t.dom.elWrap.style.height = l + "px"),
                        k.setAttrs(t.dom.Paper.node, { height: l }),
                        (t.dom.Paper.node.parentNode.parentNode.style.minHeight =
                          l + "px"));
                  },
                },
                {
                  key: "coreCalculations",
                  value: function () {
                    new Q(this.ctx).init();
                  },
                },
                {
                  key: "resetGlobals",
                  value: function () {
                    var e = this,
                      t = function () {
                        return e.w.config.series.map(function (e) {
                          return [];
                        });
                      },
                      n = new B(),
                      i = this.w.globals;
                    n.initGlobalVars(i),
                      (i.seriesXvalues = t()),
                      (i.seriesYvalues = t());
                  },
                },
                {
                  key: "isMultipleY",
                  value: function () {
                    if (
                      this.w.config.yaxis.constructor === Array &&
                      this.w.config.yaxis.length > 1
                    )
                      return (this.w.globals.isMultipleYAxis = !0), !0;
                  },
                },
                {
                  key: "xySettings",
                  value: function () {
                    var e = null,
                      t = this.w;
                    if (t.globals.axisCharts) {
                      if (
                        ("back" === t.config.xaxis.crosshairs.position &&
                          new ne(this.ctx).drawXCrosshairs(),
                        "back" === t.config.yaxis[0].crosshairs.position &&
                          new ne(this.ctx).drawYCrosshairs(),
                        "datetime" === t.config.xaxis.type &&
                          void 0 === t.config.xaxis.labels.formatter)
                      ) {
                        this.ctx.timeScale = new Ge(this.ctx);
                        var n = [];
                        isFinite(t.globals.minX) &&
                        isFinite(t.globals.maxX) &&
                        !t.globals.isBarHorizontal
                          ? (n = this.ctx.timeScale.calculateTimeScaleTicks(
                              t.globals.minX,
                              t.globals.maxX
                            ))
                          : t.globals.isBarHorizontal &&
                            (n = this.ctx.timeScale.calculateTimeScaleTicks(
                              t.globals.minY,
                              t.globals.maxY
                            )),
                          this.ctx.timeScale.recalcDimensionsBasedOnFormat(n);
                      }
                      e = new A(this.ctx).getCalculatedRatios();
                    }
                    return e;
                  },
                },
                {
                  key: "updateSourceChart",
                  value: function (e) {
                    (this.ctx.w.globals.selection = void 0),
                      this.ctx.updateHelpers._updateOptions(
                        {
                          chart: {
                            selection: {
                              xaxis: {
                                min: e.w.globals.minX,
                                max: e.w.globals.maxX,
                              },
                            },
                          },
                        },
                        !1,
                        !1
                      );
                  },
                },
                {
                  key: "setupBrushHandler",
                  value: function () {
                    var e = this,
                      t = this.w;
                    if (
                      t.config.chart.brush.enabled &&
                      "function" != typeof t.config.chart.events.selection
                    ) {
                      var n = Array.isArray(t.config.chart.brush.targets)
                        ? t.config.chart.brush.targets
                        : [t.config.chart.brush.target];
                      n.forEach(function (t) {
                        var n = ApexCharts.getChartByID(t);
                        (n.w.globals.brushSource = e.ctx),
                          "function" != typeof n.w.config.chart.events.zoomed &&
                            (n.w.config.chart.events.zoomed = function () {
                              e.updateSourceChart(n);
                            }),
                          "function" !=
                            typeof n.w.config.chart.events.scrolled &&
                            (n.w.config.chart.events.scrolled = function () {
                              e.updateSourceChart(n);
                            });
                      }),
                        (t.config.chart.events.selection = function (e, t) {
                          n.forEach(function (e) {
                            ApexCharts.getChartByID(
                              e
                            ).ctx.updateHelpers._updateOptions(
                              { xaxis: { min: t.xaxis.min, max: t.xaxis.max } },
                              !1,
                              !1,
                              !1,
                              !1
                            );
                          });
                        });
                    }
                  },
                },
              ]),
              e
            );
          })(),
          Ue = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "_updateOptions",
                  value: function (e) {
                    var t = this,
                      n =
                        arguments.length > 1 &&
                        void 0 !== arguments[1] &&
                        arguments[1],
                      i =
                        !(arguments.length > 2 && void 0 !== arguments[2]) ||
                        arguments[2],
                      o =
                        !(arguments.length > 3 && void 0 !== arguments[3]) ||
                        arguments[3],
                      a =
                        arguments.length > 4 &&
                        void 0 !== arguments[4] &&
                        arguments[4];
                    return new Promise(function (r) {
                      var l = [t.ctx];
                      o && (l = t.ctx.getSyncedCharts()),
                        t.ctx.w.globals.isExecCalled &&
                          ((l = [t.ctx]), (t.ctx.w.globals.isExecCalled = !1)),
                        l.forEach(function (o, c) {
                          var u = o.w;
                          if (
                            ((u.globals.shouldAnimate = i),
                            n ||
                              ((u.globals.resized = !0),
                              (u.globals.dataChanged = !0),
                              i && o.series.getPreviousPaths()),
                            e &&
                              "object" === s(e) &&
                              ((o.config = new j(e)),
                              (e = A.extendArrayProps(o.config, e, u)),
                              o.w.globals.chartID !== t.ctx.w.globals.chartID &&
                                delete e.series,
                              (u.config = y.extend(u.config, e)),
                              a &&
                                ((u.globals.lastXAxis = e.xaxis
                                  ? y.clone(e.xaxis)
                                  : []),
                                (u.globals.lastYAxis = e.yaxis
                                  ? y.clone(e.yaxis)
                                  : []),
                                (u.globals.initialConfig = y.extend(
                                  {},
                                  u.config
                                )),
                                (u.globals.initialSeries = y.clone(
                                  u.config.series
                                )),
                                e.series)))
                          ) {
                            for (
                              var d = 0;
                              d < u.globals.collapsedSeriesIndices.length;
                              d++
                            ) {
                              var h =
                                u.config.series[
                                  u.globals.collapsedSeriesIndices[d]
                                ];
                              u.globals.collapsedSeries[d].data = u.globals
                                .axisCharts
                                ? h.data.slice()
                                : h;
                            }
                            for (
                              var p = 0;
                              p <
                              u.globals.ancillaryCollapsedSeriesIndices.length;
                              p++
                            ) {
                              var f =
                                u.config.series[
                                  u.globals.ancillaryCollapsedSeriesIndices[p]
                                ];
                              u.globals.ancillaryCollapsedSeries[p].data = u
                                .globals.axisCharts
                                ? f.data.slice()
                                : f;
                            }
                            o.series.emptyCollapsedSeries(u.config.series);
                          }
                          return o.update(e).then(function () {
                            c === l.length - 1 && r(o);
                          });
                        });
                    });
                  },
                },
                {
                  key: "_updateSeries",
                  value: function (e, t) {
                    var n = this,
                      i =
                        arguments.length > 2 &&
                        void 0 !== arguments[2] &&
                        arguments[2];
                    return new Promise(function (o) {
                      var a,
                        s = n.w;
                      return (
                        (s.globals.shouldAnimate = t),
                        (s.globals.dataChanged = !0),
                        t && n.ctx.series.getPreviousPaths(),
                        s.globals.axisCharts
                          ? (0 ===
                              (a = e.map(function (e, t) {
                                return n._extendSeries(e, t);
                              })).length && (a = [{ data: [] }]),
                            (s.config.series = a))
                          : (s.config.series = e.slice()),
                        i &&
                          ((s.globals.initialConfig.series = y.clone(
                            s.config.series
                          )),
                          (s.globals.initialSeries = y.clone(s.config.series))),
                        n.ctx.update().then(function () {
                          o(n.ctx);
                        })
                      );
                    });
                  },
                },
                {
                  key: "_extendSeries",
                  value: function (e, t) {
                    var n = this.w,
                      i = n.config.series[t];
                    return a(
                      a({}, n.config.series[t]),
                      {},
                      {
                        name: e.name ? e.name : null == i ? void 0 : i.name,
                        color: e.color ? e.color : null == i ? void 0 : i.color,
                        type: e.type ? e.type : null == i ? void 0 : i.type,
                        group: e.group ? e.group : null == i ? void 0 : i.group,
                        data: e.data ? e.data : null == i ? void 0 : i.data,
                        zIndex: void 0 !== e.zIndex ? e.zIndex : t,
                      }
                    );
                  },
                },
                {
                  key: "toggleDataPointSelection",
                  value: function (e, t) {
                    var n = this.w,
                      i = null,
                      o = ".apexcharts-series[data\\:realIndex='".concat(
                        e,
                        "']"
                      );
                    return (
                      n.globals.axisCharts
                        ? (i = n.globals.dom.Paper.select(
                            ""
                              .concat(o, " path[j='")
                              .concat(t, "'], ")
                              .concat(o, " circle[j='")
                              .concat(t, "'], ")
                              .concat(o, " rect[j='")
                              .concat(t, "']")
                          ).members[0])
                        : void 0 === t &&
                          ((i = n.globals.dom.Paper.select(
                            "".concat(o, " path[j='").concat(e, "']")
                          ).members[0]),
                          ("pie" !== n.config.chart.type &&
                            "polarArea" !== n.config.chart.type &&
                            "donut" !== n.config.chart.type) ||
                            this.ctx.pie.pieClicked(e)),
                      i
                        ? (new k(this.ctx).pathMouseDown(i, null),
                          i.node ? i.node : null)
                        : (console.warn(
                            "toggleDataPointSelection: Element not found"
                          ),
                          null)
                    );
                  },
                },
                {
                  key: "forceXAxisUpdate",
                  value: function (e) {
                    var t = this.w;
                    if (
                      (["min", "max"].forEach(function (n) {
                        void 0 !== e.xaxis[n] &&
                          ((t.config.xaxis[n] = e.xaxis[n]),
                          (t.globals.lastXAxis[n] = e.xaxis[n]));
                      }),
                      e.xaxis.categories &&
                        e.xaxis.categories.length &&
                        (t.config.xaxis.categories = e.xaxis.categories),
                      t.config.xaxis.convertedCatToNumeric)
                    ) {
                      var n = new z(e);
                      e = n.convertCatToNumericXaxis(e, this.ctx);
                    }
                    return e;
                  },
                },
                {
                  key: "forceYAxisUpdate",
                  value: function (e) {
                    return (
                      e.chart &&
                        e.chart.stacked &&
                        "100%" === e.chart.stackType &&
                        (Array.isArray(e.yaxis)
                          ? e.yaxis.forEach(function (t, n) {
                              (e.yaxis[n].min = 0), (e.yaxis[n].max = 100);
                            })
                          : ((e.yaxis.min = 0), (e.yaxis.max = 100))),
                      e
                    );
                  },
                },
                {
                  key: "revertDefaultAxisMinMax",
                  value: function (e) {
                    var t = this,
                      n = this.w,
                      i = n.globals.lastXAxis,
                      o = n.globals.lastYAxis;
                    e && e.xaxis && (i = e.xaxis),
                      e && e.yaxis && (o = e.yaxis),
                      (n.config.xaxis.min = i.min),
                      (n.config.xaxis.max = i.max);
                    n.config.yaxis.map(function (e, i) {
                      n.globals.zoomed || void 0 !== o[i]
                        ? (function (e) {
                            void 0 !== o[e] &&
                              ((n.config.yaxis[e].min = o[e].min),
                              (n.config.yaxis[e].max = o[e].max));
                          })(i)
                        : void 0 !== t.ctx.opts.yaxis[i] &&
                          ((e.min = t.ctx.opts.yaxis[i].min),
                          (e.max = t.ctx.opts.yaxis[i].max));
                    });
                  },
                },
              ]),
              e
            );
          })();
        (Be = "undefined" != typeof window ? window : void 0),
          (Fe = function (e, t) {
            var n = ((void 0 !== this ? this : e).SVG = function (e) {
              if (n.supported)
                return (e = new n.Doc(e)), n.parser.draw || n.prepare(), e;
            });
            if (
              ((n.ns = "http://www.w3.org/2000/svg"),
              (n.xmlns = "http://www.w3.org/2000/xmlns/"),
              (n.xlink = "http://www.w3.org/1999/xlink"),
              (n.svgjs = "http://svgjs.dev"),
              (n.supported = !0),
              !n.supported)
            )
              return !1;
            (n.did = 1e3),
              (n.eid = function (e) {
                return "Svgjs" + d(e) + n.did++;
              }),
              (n.create = function (e) {
                var n = t.createElementNS(this.ns, e);
                return n.setAttribute("id", this.eid(e)), n;
              }),
              (n.extend = function () {
                var e, t;
                t = (e = [].slice.call(arguments)).pop();
                for (var i = e.length - 1; i >= 0; i--)
                  if (e[i]) for (var o in t) e[i].prototype[o] = t[o];
                n.Set && n.Set.inherit && n.Set.inherit();
              }),
              (n.invent = function (e) {
                var t =
                  "function" == typeof e.create
                    ? e.create
                    : function () {
                        this.constructor.call(this, n.create(e.create));
                      };
                return (
                  e.inherit && (t.prototype = new e.inherit()),
                  e.extend && n.extend(t, e.extend),
                  e.construct && n.extend(e.parent || n.Container, e.construct),
                  t
                );
              }),
              (n.adopt = function (t) {
                return t
                  ? t.instance
                    ? t.instance
                    : (((i =
                        "svg" == t.nodeName
                          ? t.parentNode instanceof e.SVGElement
                            ? new n.Nested()
                            : new n.Doc()
                          : "linearGradient" == t.nodeName
                          ? new n.Gradient("linear")
                          : "radialGradient" == t.nodeName
                          ? new n.Gradient("radial")
                          : n[d(t.nodeName)]
                          ? new n[d(t.nodeName)]()
                          : new n.Element(t)).type = t.nodeName),
                      (i.node = t),
                      (t.instance = i),
                      i instanceof n.Doc && i.namespace().defs(),
                      i.setData(JSON.parse(t.getAttribute("svgjs:data")) || {}),
                      i)
                  : null;
                var i;
              }),
              (n.prepare = function () {
                var e = t.getElementsByTagName("body")[0],
                  i = (
                    e ? new n.Doc(e) : n.adopt(t.documentElement).nested()
                  ).size(2, 0);
                n.parser = {
                  body: e || t.documentElement,
                  draw: i.style(
                    "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden"
                  ).node,
                  poly: i.polyline().node,
                  path: i.path().node,
                  native: n.create("svg"),
                };
              }),
              (n.parser = { native: n.create("svg") }),
              t.addEventListener(
                "DOMContentLoaded",
                function () {
                  n.parser.draw || n.prepare();
                },
                !1
              ),
              (n.regex = {
                numberAndUnit:
                  /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                reference: /#([a-z0-9\-_]+)/i,
                transforms: /\)\s*,?\s*/,
                whitespace: /\s/g,
                isHex: /^#[a-f0-9]{3,6}$/i,
                isRgb: /^rgb\(/,
                isCss: /[^:]+:[^;]+;?/,
                isBlank: /^(\s+)?$/,
                isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                isPercent: /^-?[\d\.]+%$/,
                isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                delimiter: /[\s,]+/,
                hyphen: /([^e])\-/gi,
                pathLetters: /[MLHVCSQTAZ]/gi,
                isPathLetter: /[MLHVCSQTAZ]/i,
                numbersWithDots:
                  /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                dots: /\./g,
              }),
              (n.utils = {
                map: function (e, t) {
                  for (var n = e.length, i = [], o = 0; o < n; o++)
                    i.push(t(e[o]));
                  return i;
                },
                filter: function (e, t) {
                  for (var n = e.length, i = [], o = 0; o < n; o++)
                    t(e[o]) && i.push(e[o]);
                  return i;
                },
                filterSVGElements: function (t) {
                  return this.filter(t, function (t) {
                    return t instanceof e.SVGElement;
                  });
                },
              }),
              (n.defaults = {
                attrs: {
                  "fill-opacity": 1,
                  "stroke-opacity": 1,
                  "stroke-width": 0,
                  "stroke-linejoin": "miter",
                  "stroke-linecap": "butt",
                  fill: "#000000",
                  stroke: "#000000",
                  opacity: 1,
                  x: 0,
                  y: 0,
                  cx: 0,
                  cy: 0,
                  width: 0,
                  height: 0,
                  r: 0,
                  rx: 0,
                  ry: 0,
                  offset: 0,
                  "stop-opacity": 1,
                  "stop-color": "#000000",
                  "font-size": 16,
                  "font-family": "Helvetica, Arial, sans-serif",
                  "text-anchor": "start",
                },
              }),
              (n.Color = function (e) {
                var t, i;
                (this.r = 0),
                  (this.g = 0),
                  (this.b = 0),
                  e &&
                    ("string" == typeof e
                      ? n.regex.isRgb.test(e)
                        ? ((t = n.regex.rgb.exec(
                            e.replace(n.regex.whitespace, "")
                          )),
                          (this.r = parseInt(t[1])),
                          (this.g = parseInt(t[2])),
                          (this.b = parseInt(t[3])))
                        : n.regex.isHex.test(e) &&
                          ((t = n.regex.hex.exec(
                            4 == (i = e).length
                              ? [
                                  "#",
                                  i.substring(1, 2),
                                  i.substring(1, 2),
                                  i.substring(2, 3),
                                  i.substring(2, 3),
                                  i.substring(3, 4),
                                  i.substring(3, 4),
                                ].join("")
                              : i
                          )),
                          (this.r = parseInt(t[1], 16)),
                          (this.g = parseInt(t[2], 16)),
                          (this.b = parseInt(t[3], 16)))
                      : "object" === s(e) &&
                        ((this.r = e.r), (this.g = e.g), (this.b = e.b)));
              }),
              n.extend(n.Color, {
                toString: function () {
                  return this.toHex();
                },
                toHex: function () {
                  return "#" + h(this.r) + h(this.g) + h(this.b);
                },
                toRgb: function () {
                  return "rgb(" + [this.r, this.g, this.b].join() + ")";
                },
                brightness: function () {
                  return (
                    (this.r / 255) * 0.3 +
                    (this.g / 255) * 0.59 +
                    (this.b / 255) * 0.11
                  );
                },
                morph: function (e) {
                  return (this.destination = new n.Color(e)), this;
                },
                at: function (e) {
                  return this.destination
                    ? ((e = e < 0 ? 0 : e > 1 ? 1 : e),
                      new n.Color({
                        r: ~~(this.r + (this.destination.r - this.r) * e),
                        g: ~~(this.g + (this.destination.g - this.g) * e),
                        b: ~~(this.b + (this.destination.b - this.b) * e),
                      }))
                    : this;
                },
              }),
              (n.Color.test = function (e) {
                return (
                  (e += ""), n.regex.isHex.test(e) || n.regex.isRgb.test(e)
                );
              }),
              (n.Color.isRgb = function (e) {
                return (
                  e &&
                  "number" == typeof e.r &&
                  "number" == typeof e.g &&
                  "number" == typeof e.b
                );
              }),
              (n.Color.isColor = function (e) {
                return n.Color.isRgb(e) || n.Color.test(e);
              }),
              (n.Array = function (e, t) {
                0 == (e = (e || []).valueOf()).length && t && (e = t.valueOf()),
                  (this.value = this.parse(e));
              }),
              n.extend(n.Array, {
                toString: function () {
                  return this.value.join(" ");
                },
                valueOf: function () {
                  return this.value;
                },
                parse: function (e) {
                  return (
                    (e = e.valueOf()), Array.isArray(e) ? e : this.split(e)
                  );
                },
              }),
              (n.PointArray = function (e, t) {
                n.Array.call(this, e, t || [[0, 0]]);
              }),
              (n.PointArray.prototype = new n.Array()),
              (n.PointArray.prototype.constructor = n.PointArray);
            for (
              var i = {
                  M: function (e, t, n) {
                    return (
                      (t.x = n.x = e[0]), (t.y = n.y = e[1]), ["M", t.x, t.y]
                    );
                  },
                  L: function (e, t) {
                    return (t.x = e[0]), (t.y = e[1]), ["L", e[0], e[1]];
                  },
                  H: function (e, t) {
                    return (t.x = e[0]), ["H", e[0]];
                  },
                  V: function (e, t) {
                    return (t.y = e[0]), ["V", e[0]];
                  },
                  C: function (e, t) {
                    return (
                      (t.x = e[4]),
                      (t.y = e[5]),
                      ["C", e[0], e[1], e[2], e[3], e[4], e[5]]
                    );
                  },
                  Q: function (e, t) {
                    return (
                      (t.x = e[2]), (t.y = e[3]), ["Q", e[0], e[1], e[2], e[3]]
                    );
                  },
                  S: function (e, t) {
                    return (
                      (t.x = e[2]), (t.y = e[3]), ["S", e[0], e[1], e[2], e[3]]
                    );
                  },
                  Z: function (e, t, n) {
                    return (t.x = n.x), (t.y = n.y), ["Z"];
                  },
                },
                o = "mlhvqtcsaz".split(""),
                a = 0,
                r = o.length;
              a < r;
              ++a
            )
              i[o[a]] = (function (e) {
                return function (t, n, o) {
                  if ("H" == e) t[0] = t[0] + n.x;
                  else if ("V" == e) t[0] = t[0] + n.y;
                  else if ("A" == e) (t[5] = t[5] + n.x), (t[6] = t[6] + n.y);
                  else
                    for (var a = 0, s = t.length; a < s; ++a)
                      t[a] = t[a] + (a % 2 ? n.y : n.x);
                  if (i && "function" == typeof i[e]) return i[e](t, n, o);
                };
              })(o[a].toUpperCase());
            (n.PathArray = function (e, t) {
              n.Array.call(this, e, t || [["M", 0, 0]]);
            }),
              (n.PathArray.prototype = new n.Array()),
              (n.PathArray.prototype.constructor = n.PathArray),
              n.extend(n.PathArray, {
                toString: function () {
                  return (function (e) {
                    for (var t = 0, n = e.length, i = ""; t < n; t++)
                      (i += e[t][0]),
                        null != e[t][1] &&
                          ((i += e[t][1]),
                          null != e[t][2] &&
                            ((i += " "),
                            (i += e[t][2]),
                            null != e[t][3] &&
                              ((i += " "),
                              (i += e[t][3]),
                              (i += " "),
                              (i += e[t][4]),
                              null != e[t][5] &&
                                ((i += " "),
                                (i += e[t][5]),
                                (i += " "),
                                (i += e[t][6]),
                                null != e[t][7] &&
                                  ((i += " "), (i += e[t][7]))))));
                    return i + " ";
                  })(this.value);
                },
                move: function (e, t) {
                  var n = this.bbox();
                  return n.x, n.y, this;
                },
                at: function (e) {
                  if (!this.destination) return this;
                  for (
                    var t = this.value,
                      i = this.destination.value,
                      o = [],
                      a = new n.PathArray(),
                      s = 0,
                      r = t.length;
                    s < r;
                    s++
                  ) {
                    o[s] = [t[s][0]];
                    for (var l = 1, c = t[s].length; l < c; l++)
                      o[s][l] = t[s][l] + (i[s][l] - t[s][l]) * e;
                    "A" === o[s][0] &&
                      ((o[s][4] = +(0 != o[s][4])),
                      (o[s][5] = +(0 != o[s][5])));
                  }
                  return (a.value = o), a;
                },
                parse: function (e) {
                  if (e instanceof n.PathArray) return e.valueOf();
                  var t,
                    o = {
                      M: 2,
                      L: 2,
                      H: 1,
                      V: 1,
                      C: 6,
                      S: 4,
                      Q: 4,
                      T: 2,
                      A: 7,
                      Z: 0,
                    };
                  e =
                    "string" == typeof e
                      ? e
                          .replace(n.regex.numbersWithDots, c)
                          .replace(n.regex.pathLetters, " $& ")
                          .replace(n.regex.hyphen, "$1 -")
                          .trim()
                          .split(n.regex.delimiter)
                      : e.reduce(function (e, t) {
                          return [].concat.call(e, t);
                        }, []);
                  var a = [],
                    s = new n.Point(),
                    r = new n.Point(),
                    l = 0,
                    u = e.length;
                  do {
                    n.regex.isPathLetter.test(e[l])
                      ? ((t = e[l]), ++l)
                      : "M" == t
                      ? (t = "L")
                      : "m" == t && (t = "l"),
                      a.push(
                        i[t].call(
                          null,
                          e.slice(l, (l += o[t.toUpperCase()])).map(parseFloat),
                          s,
                          r
                        )
                      );
                  } while (u > l);
                  return a;
                },
                bbox: function () {
                  return (
                    n.parser.draw || n.prepare(),
                    n.parser.path.setAttribute("d", this.toString()),
                    n.parser.path.getBBox()
                  );
                },
              }),
              (n.Number = n.invent({
                create: function (e, t) {
                  (this.value = 0),
                    (this.unit = t || ""),
                    "number" == typeof e
                      ? (this.value = isNaN(e)
                          ? 0
                          : isFinite(e)
                          ? e
                          : e < 0
                          ? -34e37
                          : 34e37)
                      : "string" == typeof e
                      ? (t = e.match(n.regex.numberAndUnit)) &&
                        ((this.value = parseFloat(t[1])),
                        "%" == t[5]
                          ? (this.value /= 100)
                          : "s" == t[5] && (this.value *= 1e3),
                        (this.unit = t[5]))
                      : e instanceof n.Number &&
                        ((this.value = e.valueOf()), (this.unit = e.unit));
                },
                extend: {
                  toString: function () {
                    return (
                      ("%" == this.unit
                        ? ~~(1e8 * this.value) / 1e6
                        : "s" == this.unit
                        ? this.value / 1e3
                        : this.value) + this.unit
                    );
                  },
                  toJSON: function () {
                    return this.toString();
                  },
                  valueOf: function () {
                    return this.value;
                  },
                  plus: function (e) {
                    return (
                      (e = new n.Number(e)),
                      new n.Number(this + e, this.unit || e.unit)
                    );
                  },
                  minus: function (e) {
                    return (
                      (e = new n.Number(e)),
                      new n.Number(this - e, this.unit || e.unit)
                    );
                  },
                  times: function (e) {
                    return (
                      (e = new n.Number(e)),
                      new n.Number(this * e, this.unit || e.unit)
                    );
                  },
                  divide: function (e) {
                    return (
                      (e = new n.Number(e)),
                      new n.Number(this / e, this.unit || e.unit)
                    );
                  },
                  to: function (e) {
                    var t = new n.Number(this);
                    return "string" == typeof e && (t.unit = e), t;
                  },
                  morph: function (e) {
                    return (
                      (this.destination = new n.Number(e)),
                      e.relative && (this.destination.value += this.value),
                      this
                    );
                  },
                  at: function (e) {
                    return this.destination
                      ? new n.Number(this.destination)
                          .minus(this)
                          .times(e)
                          .plus(this)
                      : this;
                  },
                },
              })),
              (n.Element = n.invent({
                create: function (e) {
                  (this._stroke = n.defaults.attrs.stroke),
                    (this._event = null),
                    (this.dom = {}),
                    (this.node = e) &&
                      ((this.type = e.nodeName),
                      (this.node.instance = this),
                      (this._stroke =
                        e.getAttribute("stroke") || this._stroke));
                },
                extend: {
                  x: function (e) {
                    return this.attr("x", e);
                  },
                  y: function (e) {
                    return this.attr("y", e);
                  },
                  cx: function (e) {
                    return null == e
                      ? this.x() + this.width() / 2
                      : this.x(e - this.width() / 2);
                  },
                  cy: function (e) {
                    return null == e
                      ? this.y() + this.height() / 2
                      : this.y(e - this.height() / 2);
                  },
                  move: function (e, t) {
                    return this.x(e).y(t);
                  },
                  center: function (e, t) {
                    return this.cx(e).cy(t);
                  },
                  width: function (e) {
                    return this.attr("width", e);
                  },
                  height: function (e) {
                    return this.attr("height", e);
                  },
                  size: function (e, t) {
                    var i = p(this, e, t);
                    return this.width(new n.Number(i.width)).height(
                      new n.Number(i.height)
                    );
                  },
                  clone: function (e) {
                    this.writeDataToDom();
                    var t = m(this.node.cloneNode(!0));
                    return e ? e.add(t) : this.after(t), t;
                  },
                  remove: function () {
                    return (
                      this.parent() && this.parent().removeElement(this), this
                    );
                  },
                  replace: function (e) {
                    return this.after(e).remove(), e;
                  },
                  addTo: function (e) {
                    return e.put(this);
                  },
                  putIn: function (e) {
                    return e.add(this);
                  },
                  id: function (e) {
                    return this.attr("id", e);
                  },
                  show: function () {
                    return this.style("display", "");
                  },
                  hide: function () {
                    return this.style("display", "none");
                  },
                  visible: function () {
                    return "none" != this.style("display");
                  },
                  toString: function () {
                    return this.attr("id");
                  },
                  classes: function () {
                    var e = this.attr("class");
                    return null == e ? [] : e.trim().split(n.regex.delimiter);
                  },
                  hasClass: function (e) {
                    return -1 != this.classes().indexOf(e);
                  },
                  addClass: function (e) {
                    if (!this.hasClass(e)) {
                      var t = this.classes();
                      t.push(e), this.attr("class", t.join(" "));
                    }
                    return this;
                  },
                  removeClass: function (e) {
                    return (
                      this.hasClass(e) &&
                        this.attr(
                          "class",
                          this.classes()
                            .filter(function (t) {
                              return t != e;
                            })
                            .join(" ")
                        ),
                      this
                    );
                  },
                  toggleClass: function (e) {
                    return this.hasClass(e)
                      ? this.removeClass(e)
                      : this.addClass(e);
                  },
                  reference: function (e) {
                    return n.get(this.attr(e));
                  },
                  parent: function (t) {
                    var i = this;
                    if (!i.node.parentNode) return null;
                    if (((i = n.adopt(i.node.parentNode)), !t)) return i;
                    for (; i && i.node instanceof e.SVGElement; ) {
                      if ("string" == typeof t ? i.matches(t) : i instanceof t)
                        return i;
                      if (
                        !i.node.parentNode ||
                        "#document" == i.node.parentNode.nodeName
                      )
                        return null;
                      i = n.adopt(i.node.parentNode);
                    }
                  },
                  doc: function () {
                    return this instanceof n.Doc ? this : this.parent(n.Doc);
                  },
                  parents: function (e) {
                    var t = [],
                      n = this;
                    do {
                      if (!(n = n.parent(e)) || !n.node) break;
                      t.push(n);
                    } while (n.parent);
                    return t;
                  },
                  matches: function (e) {
                    return (function (e, t) {
                      return (
                        e.matches ||
                        e.matchesSelector ||
                        e.msMatchesSelector ||
                        e.mozMatchesSelector ||
                        e.webkitMatchesSelector ||
                        e.oMatchesSelector
                      ).call(e, t);
                    })(this.node, e);
                  },
                  native: function () {
                    return this.node;
                  },
                  svg: function (e) {
                    var i = t.createElementNS(
                      "http://www.w3.org/2000/svg",
                      "svg"
                    );
                    if (!(e && this instanceof n.Parent))
                      return (
                        i.appendChild(
                          (e = t.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "svg"
                          ))
                        ),
                        this.writeDataToDom(),
                        e.appendChild(this.node.cloneNode(!0)),
                        i.innerHTML
                          .replace(/^<svg>/, "")
                          .replace(/<\/svg>$/, "")
                      );
                    i.innerHTML =
                      "<svg>" +
                      e
                        .replace(/\n/, "")
                        .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                      "</svg>";
                    for (
                      var o = 0, a = i.firstChild.childNodes.length;
                      o < a;
                      o++
                    )
                      this.node.appendChild(i.firstChild.firstChild);
                    return this;
                  },
                  writeDataToDom: function () {
                    return (
                      (this.each || this.lines) &&
                        (this.each ? this : this.lines()).each(function () {
                          this.writeDataToDom();
                        }),
                      this.node.removeAttribute("svgjs:data"),
                      Object.keys(this.dom).length &&
                        this.node.setAttribute(
                          "svgjs:data",
                          JSON.stringify(this.dom)
                        ),
                      this
                    );
                  },
                  setData: function (e) {
                    return (this.dom = e), this;
                  },
                  is: function (e) {
                    return (function (e, t) {
                      return e instanceof t;
                    })(this, e);
                  },
                },
              })),
              (n.easing = {
                "-": function (e) {
                  return e;
                },
                "<>": function (e) {
                  return -Math.cos(e * Math.PI) / 2 + 0.5;
                },
                ">": function (e) {
                  return Math.sin((e * Math.PI) / 2);
                },
                "<": function (e) {
                  return 1 - Math.cos((e * Math.PI) / 2);
                },
              }),
              (n.morph = function (e) {
                return function (t, i) {
                  return new n.MorphObj(t, i).at(e);
                };
              }),
              (n.Situation = n.invent({
                create: function (e) {
                  (this.init = !1),
                    (this.reversed = !1),
                    (this.reversing = !1),
                    (this.duration = new n.Number(e.duration).valueOf()),
                    (this.delay = new n.Number(e.delay).valueOf()),
                    (this.start = +new Date() + this.delay),
                    (this.finish = this.start + this.duration),
                    (this.ease = e.ease),
                    (this.loop = 0),
                    (this.loops = !1),
                    (this.animations = {}),
                    (this.attrs = {}),
                    (this.styles = {}),
                    (this.transforms = []),
                    (this.once = {});
                },
              })),
              (n.FX = n.invent({
                create: function (e) {
                  (this._target = e),
                    (this.situations = []),
                    (this.active = !1),
                    (this.situation = null),
                    (this.paused = !1),
                    (this.lastPos = 0),
                    (this.pos = 0),
                    (this.absPos = 0),
                    (this._speed = 1);
                },
                extend: {
                  animate: function (e, t, i) {
                    "object" === s(e) &&
                      ((t = e.ease), (i = e.delay), (e = e.duration));
                    var o = new n.Situation({
                      duration: e || 1e3,
                      delay: i || 0,
                      ease: n.easing[t || "-"] || t,
                    });
                    return this.queue(o), this;
                  },
                  target: function (e) {
                    return e && e instanceof n.Element
                      ? ((this._target = e), this)
                      : this._target;
                  },
                  timeToAbsPos: function (e) {
                    return (
                      (e - this.situation.start) /
                      (this.situation.duration / this._speed)
                    );
                  },
                  absPosToTime: function (e) {
                    return (
                      (this.situation.duration / this._speed) * e +
                      this.situation.start
                    );
                  },
                  startAnimFrame: function () {
                    this.stopAnimFrame(),
                      (this.animationFrame = e.requestAnimationFrame(
                        function () {
                          this.step();
                        }.bind(this)
                      ));
                  },
                  stopAnimFrame: function () {
                    e.cancelAnimationFrame(this.animationFrame);
                  },
                  start: function () {
                    return (
                      !this.active &&
                        this.situation &&
                        ((this.active = !0), this.startCurrent()),
                      this
                    );
                  },
                  startCurrent: function () {
                    return (
                      (this.situation.start =
                        +new Date() + this.situation.delay / this._speed),
                      (this.situation.finish =
                        this.situation.start +
                        this.situation.duration / this._speed),
                      this.initAnimations().step()
                    );
                  },
                  queue: function (e) {
                    return (
                      ("function" == typeof e || e instanceof n.Situation) &&
                        this.situations.push(e),
                      this.situation ||
                        (this.situation = this.situations.shift()),
                      this
                    );
                  },
                  dequeue: function () {
                    return (
                      this.stop(),
                      (this.situation = this.situations.shift()),
                      this.situation &&
                        (this.situation instanceof n.Situation
                          ? this.start()
                          : this.situation.call(this)),
                      this
                    );
                  },
                  initAnimations: function () {
                    var e,
                      t = this.situation;
                    if (t.init) return this;
                    for (var i in t.animations) {
                      (e = this.target()[i]()),
                        Array.isArray(e) || (e = [e]),
                        Array.isArray(t.animations[i]) ||
                          (t.animations[i] = [t.animations[i]]);
                      for (var o = e.length; o--; )
                        t.animations[i][o] instanceof n.Number &&
                          (e[o] = new n.Number(e[o])),
                          (t.animations[i][o] = e[o].morph(t.animations[i][o]));
                    }
                    for (var i in t.attrs)
                      t.attrs[i] = new n.MorphObj(
                        this.target().attr(i),
                        t.attrs[i]
                      );
                    for (var i in t.styles)
                      t.styles[i] = new n.MorphObj(
                        this.target().style(i),
                        t.styles[i]
                      );
                    return (
                      (t.initialTransformation = this.target().matrixify()),
                      (t.init = !0),
                      this
                    );
                  },
                  clearQueue: function () {
                    return (this.situations = []), this;
                  },
                  clearCurrent: function () {
                    return (this.situation = null), this;
                  },
                  stop: function (e, t) {
                    var n = this.active;
                    return (
                      (this.active = !1),
                      t && this.clearQueue(),
                      e &&
                        this.situation &&
                        (!n && this.startCurrent(), this.atEnd()),
                      this.stopAnimFrame(),
                      this.clearCurrent()
                    );
                  },
                  after: function (e) {
                    var t = this.last();
                    return (
                      this.target().on("finished.fx", function n(i) {
                        i.detail.situation == t &&
                          (e.call(this, t), this.off("finished.fx", n));
                      }),
                      this._callStart()
                    );
                  },
                  during: function (e) {
                    var t = this.last(),
                      i = function (i) {
                        i.detail.situation == t &&
                          e.call(
                            this,
                            i.detail.pos,
                            n.morph(i.detail.pos),
                            i.detail.eased,
                            t
                          );
                      };
                    return (
                      this.target().off("during.fx", i).on("during.fx", i),
                      this.after(function () {
                        this.off("during.fx", i);
                      }),
                      this._callStart()
                    );
                  },
                  afterAll: function (e) {
                    var t = function t(n) {
                      e.call(this), this.off("allfinished.fx", t);
                    };
                    return (
                      this.target()
                        .off("allfinished.fx", t)
                        .on("allfinished.fx", t),
                      this._callStart()
                    );
                  },
                  last: function () {
                    return this.situations.length
                      ? this.situations[this.situations.length - 1]
                      : this.situation;
                  },
                  add: function (e, t, n) {
                    return (
                      (this.last()[n || "animations"][e] = t), this._callStart()
                    );
                  },
                  step: function (e) {
                    var t, n, i;
                    e || (this.absPos = this.timeToAbsPos(+new Date())),
                      !1 !== this.situation.loops
                        ? ((t = Math.max(this.absPos, 0)),
                          (n = Math.floor(t)),
                          !0 === this.situation.loops ||
                          n < this.situation.loops
                            ? ((this.pos = t - n),
                              (i = this.situation.loop),
                              (this.situation.loop = n))
                            : ((this.absPos = this.situation.loops),
                              (this.pos = 1),
                              (i = this.situation.loop - 1),
                              (this.situation.loop = this.situation.loops)),
                          this.situation.reversing &&
                            (this.situation.reversed =
                              this.situation.reversed !=
                              Boolean((this.situation.loop - i) % 2)))
                        : ((this.absPos = Math.min(this.absPos, 1)),
                          (this.pos = this.absPos)),
                      this.pos < 0 && (this.pos = 0),
                      this.situation.reversed && (this.pos = 1 - this.pos);
                    var o = this.situation.ease(this.pos);
                    for (var a in this.situation.once)
                      a > this.lastPos &&
                        a <= o &&
                        (this.situation.once[a].call(
                          this.target(),
                          this.pos,
                          o
                        ),
                        delete this.situation.once[a]);
                    return (
                      this.active &&
                        this.target().fire("during", {
                          pos: this.pos,
                          eased: o,
                          fx: this,
                          situation: this.situation,
                        }),
                      this.situation
                        ? (this.eachAt(),
                          (1 == this.pos && !this.situation.reversed) ||
                          (this.situation.reversed && 0 == this.pos)
                            ? (this.stopAnimFrame(),
                              this.target().fire("finished", {
                                fx: this,
                                situation: this.situation,
                              }),
                              this.situations.length ||
                                (this.target().fire("allfinished"),
                                this.situations.length ||
                                  (this.target().off(".fx"),
                                  (this.active = !1))),
                              this.active
                                ? this.dequeue()
                                : this.clearCurrent())
                            : !this.paused &&
                              this.active &&
                              this.startAnimFrame(),
                          (this.lastPos = o),
                          this)
                        : this
                    );
                  },
                  eachAt: function () {
                    var e,
                      t = this,
                      i = this.target(),
                      o = this.situation;
                    for (var a in o.animations)
                      (e = [].concat(o.animations[a]).map(function (e) {
                        return "string" != typeof e && e.at
                          ? e.at(o.ease(t.pos), t.pos)
                          : e;
                      })),
                        i[a].apply(i, e);
                    for (var a in o.attrs)
                      (e = [a].concat(o.attrs[a]).map(function (e) {
                        return "string" != typeof e && e.at
                          ? e.at(o.ease(t.pos), t.pos)
                          : e;
                      })),
                        i.attr.apply(i, e);
                    for (var a in o.styles)
                      (e = [a].concat(o.styles[a]).map(function (e) {
                        return "string" != typeof e && e.at
                          ? e.at(o.ease(t.pos), t.pos)
                          : e;
                      })),
                        i.style.apply(i, e);
                    if (o.transforms.length) {
                      (e = o.initialTransformation), (a = 0);
                      for (var s = o.transforms.length; a < s; a++) {
                        var r = o.transforms[a];
                        r instanceof n.Matrix
                          ? (e = r.relative
                              ? e.multiply(
                                  new n.Matrix().morph(r).at(o.ease(this.pos))
                                )
                              : e.morph(r).at(o.ease(this.pos)))
                          : (r.relative || r.undo(e.extract()),
                            (e = e.multiply(r.at(o.ease(this.pos)))));
                      }
                      i.matrix(e);
                    }
                    return this;
                  },
                  once: function (e, t, n) {
                    var i = this.last();
                    return n || (e = i.ease(e)), (i.once[e] = t), this;
                  },
                  _callStart: function () {
                    return (
                      setTimeout(
                        function () {
                          this.start();
                        }.bind(this),
                        0
                      ),
                      this
                    );
                  },
                },
                parent: n.Element,
                construct: {
                  animate: function (e, t, i) {
                    return (this.fx || (this.fx = new n.FX(this))).animate(
                      e,
                      t,
                      i
                    );
                  },
                  delay: function (e) {
                    return (this.fx || (this.fx = new n.FX(this))).delay(e);
                  },
                  stop: function (e, t) {
                    return this.fx && this.fx.stop(e, t), this;
                  },
                  finish: function () {
                    return this.fx && this.fx.finish(), this;
                  },
                },
              })),
              (n.MorphObj = n.invent({
                create: function (e, t) {
                  return n.Color.isColor(t)
                    ? new n.Color(e).morph(t)
                    : n.regex.delimiter.test(e)
                    ? n.regex.pathLetters.test(e)
                      ? new n.PathArray(e).morph(t)
                      : new n.Array(e).morph(t)
                    : n.regex.numberAndUnit.test(t)
                    ? new n.Number(e).morph(t)
                    : ((this.value = e), void (this.destination = t));
                },
                extend: {
                  at: function (e, t) {
                    return t < 1 ? this.value : this.destination;
                  },
                  valueOf: function () {
                    return this.value;
                  },
                },
              })),
              n.extend(n.FX, {
                attr: function (e, t, n) {
                  if ("object" === s(e)) for (var i in e) this.attr(i, e[i]);
                  else this.add(e, t, "attrs");
                  return this;
                },
                plot: function (e, t, n, i) {
                  return 4 == arguments.length
                    ? this.plot([e, t, n, i])
                    : this.add("plot", new (this.target().morphArray)(e));
                },
              }),
              (n.Box = n.invent({
                create: function (e, t, i, o) {
                  if (!("object" !== s(e) || e instanceof n.Element))
                    return n.Box.call(
                      this,
                      null != e.left ? e.left : e.x,
                      null != e.top ? e.top : e.y,
                      e.width,
                      e.height
                    );
                  var a;
                  4 == arguments.length &&
                    ((this.x = e),
                    (this.y = t),
                    (this.width = i),
                    (this.height = o)),
                    null == (a = this).x &&
                      ((a.x = 0), (a.y = 0), (a.width = 0), (a.height = 0)),
                    (a.w = a.width),
                    (a.h = a.height),
                    (a.x2 = a.x + a.width),
                    (a.y2 = a.y + a.height),
                    (a.cx = a.x + a.width / 2),
                    (a.cy = a.y + a.height / 2);
                },
              })),
              (n.BBox = n.invent({
                create: function (e) {
                  if (
                    (n.Box.apply(this, [].slice.call(arguments)),
                    e instanceof n.Element)
                  ) {
                    var i;
                    try {
                      if (!t.documentElement.contains) {
                        for (var o = e.node; o.parentNode; ) o = o.parentNode;
                        if (o != t) throw new Error("Element not in the dom");
                      }
                      i = e.node.getBBox();
                    } catch (t) {
                      if (e instanceof n.Shape) {
                        n.parser.draw || n.prepare();
                        var a = e.clone(n.parser.draw.instance).show();
                        a &&
                          a.node &&
                          "function" == typeof a.node.getBBox &&
                          (i = a.node.getBBox()),
                          a && "function" == typeof a.remove && a.remove();
                      } else
                        i = {
                          x: e.node.clientLeft,
                          y: e.node.clientTop,
                          width: e.node.clientWidth,
                          height: e.node.clientHeight,
                        };
                    }
                    n.Box.call(this, i);
                  }
                },
                inherit: n.Box,
                parent: n.Element,
                construct: {
                  bbox: function () {
                    return new n.BBox(this);
                  },
                },
              })),
              (n.BBox.prototype.constructor = n.BBox),
              (n.Matrix = n.invent({
                create: function (e) {
                  var t = g([1, 0, 0, 1, 0, 0]);
                  e =
                    null === e
                      ? t
                      : e instanceof n.Element
                      ? e.matrixify()
                      : "string" == typeof e
                      ? g(e.split(n.regex.delimiter).map(parseFloat))
                      : 6 == arguments.length
                      ? g([].slice.call(arguments))
                      : Array.isArray(e)
                      ? g(e)
                      : e && "object" === s(e)
                      ? e
                      : t;
                  for (var i = b.length - 1; i >= 0; --i)
                    this[b[i]] = null != e[b[i]] ? e[b[i]] : t[b[i]];
                },
                extend: {
                  extract: function () {
                    var e = f(this, 0, 1);
                    f(this, 1, 0);
                    var t = (180 / Math.PI) * Math.atan2(e.y, e.x) - 90;
                    return {
                      x: this.e,
                      y: this.f,
                      transformedX:
                        (this.e * Math.cos((t * Math.PI) / 180) +
                          this.f * Math.sin((t * Math.PI) / 180)) /
                        Math.sqrt(this.a * this.a + this.b * this.b),
                      transformedY:
                        (this.f * Math.cos((t * Math.PI) / 180) +
                          this.e * Math.sin((-t * Math.PI) / 180)) /
                        Math.sqrt(this.c * this.c + this.d * this.d),
                      rotation: t,
                      a: this.a,
                      b: this.b,
                      c: this.c,
                      d: this.d,
                      e: this.e,
                      f: this.f,
                      matrix: new n.Matrix(this),
                    };
                  },
                  clone: function () {
                    return new n.Matrix(this);
                  },
                  morph: function (e) {
                    return (this.destination = new n.Matrix(e)), this;
                  },
                  multiply: function (e) {
                    return new n.Matrix(
                      this.native().multiply(
                        (function (e) {
                          return (
                            e instanceof n.Matrix || (e = new n.Matrix(e)), e
                          );
                        })(e).native()
                      )
                    );
                  },
                  inverse: function () {
                    return new n.Matrix(this.native().inverse());
                  },
                  translate: function (e, t) {
                    return new n.Matrix(
                      this.native().translate(e || 0, t || 0)
                    );
                  },
                  native: function () {
                    for (
                      var e = n.parser.native.createSVGMatrix(),
                        t = b.length - 1;
                      t >= 0;
                      t--
                    )
                      e[b[t]] = this[b[t]];
                    return e;
                  },
                  toString: function () {
                    return (
                      "matrix(" +
                      v(this.a) +
                      "," +
                      v(this.b) +
                      "," +
                      v(this.c) +
                      "," +
                      v(this.d) +
                      "," +
                      v(this.e) +
                      "," +
                      v(this.f) +
                      ")"
                    );
                  },
                },
                parent: n.Element,
                construct: {
                  ctm: function () {
                    return new n.Matrix(this.node.getCTM());
                  },
                  screenCTM: function () {
                    if (this instanceof n.Nested) {
                      var e = this.rect(1, 1),
                        t = e.node.getScreenCTM();
                      return e.remove(), new n.Matrix(t);
                    }
                    return new n.Matrix(this.node.getScreenCTM());
                  },
                },
              })),
              (n.Point = n.invent({
                create: function (e, t) {
                  var n;
                  (n = Array.isArray(e)
                    ? { x: e[0], y: e[1] }
                    : "object" === s(e)
                    ? { x: e.x, y: e.y }
                    : null != e
                    ? { x: e, y: null != t ? t : e }
                    : { x: 0, y: 0 }),
                    (this.x = n.x),
                    (this.y = n.y);
                },
                extend: {
                  clone: function () {
                    return new n.Point(this);
                  },
                  morph: function (e, t) {
                    return (this.destination = new n.Point(e, t)), this;
                  },
                },
              })),
              n.extend(n.Element, {
                point: function (e, t) {
                  return new n.Point(e, t).transform(
                    this.screenCTM().inverse()
                  );
                },
              }),
              n.extend(n.Element, {
                attr: function (e, t, i) {
                  if (null == e) {
                    for (
                      e = {}, i = (t = this.node.attributes).length - 1;
                      i >= 0;
                      i--
                    )
                      e[t[i].nodeName] = n.regex.isNumber.test(t[i].nodeValue)
                        ? parseFloat(t[i].nodeValue)
                        : t[i].nodeValue;
                    return e;
                  }
                  if ("object" === s(e)) for (var o in e) this.attr(o, e[o]);
                  else if (null === t) this.node.removeAttribute(e);
                  else {
                    if (null == t)
                      return null == (t = this.node.getAttribute(e))
                        ? n.defaults.attrs[e]
                        : n.regex.isNumber.test(t)
                        ? parseFloat(t)
                        : t;
                    "stroke-width" == e
                      ? this.attr(
                          "stroke",
                          parseFloat(t) > 0 ? this._stroke : null
                        )
                      : "stroke" == e && (this._stroke = t),
                      ("fill" != e && "stroke" != e) ||
                        (n.regex.isImage.test(t) &&
                          (t = this.doc().defs().image(t, 0, 0)),
                        t instanceof n.Image &&
                          (t = this.doc()
                            .defs()
                            .pattern(0, 0, function () {
                              this.add(t);
                            }))),
                      "number" == typeof t
                        ? (t = new n.Number(t))
                        : n.Color.isColor(t)
                        ? (t = new n.Color(t))
                        : Array.isArray(t) && (t = new n.Array(t)),
                      "leading" == e
                        ? this.leading && this.leading(t)
                        : "string" == typeof i
                        ? this.node.setAttributeNS(i, e, t.toString())
                        : this.node.setAttribute(e, t.toString()),
                      !this.rebuild ||
                        ("font-size" != e && "x" != e) ||
                        this.rebuild(e, t);
                  }
                  return this;
                },
              }),
              n.extend(n.Element, {
                transform: function (e, t) {
                  var i;
                  return "object" !== s(e)
                    ? ((i = new n.Matrix(this).extract()),
                      "string" == typeof e ? i[e] : i)
                    : ((i = new n.Matrix(this)),
                      (t = !!t || !!e.relative),
                      null != e.a &&
                        (i = t ? i.multiply(new n.Matrix(e)) : new n.Matrix(e)),
                      this.attr("transform", i));
                },
              }),
              n.extend(n.Element, {
                untransform: function () {
                  return this.attr("transform", null);
                },
                matrixify: function () {
                  return (this.attr("transform") || "")
                    .split(n.regex.transforms)
                    .slice(0, -1)
                    .map(function (e) {
                      var t = e.trim().split("(");
                      return [
                        t[0],
                        t[1].split(n.regex.delimiter).map(function (e) {
                          return parseFloat(e);
                        }),
                      ];
                    })
                    .reduce(function (e, t) {
                      return "matrix" == t[0]
                        ? e.multiply(g(t[1]))
                        : e[t[0]].apply(e, t[1]);
                    }, new n.Matrix());
                },
                toParent: function (e) {
                  if (this == e) return this;
                  var t = this.screenCTM(),
                    n = e.screenCTM().inverse();
                  return (
                    this.addTo(e).untransform().transform(n.multiply(t)), this
                  );
                },
                toDoc: function () {
                  return this.toParent(this.doc());
                },
              }),
              (n.Transformation = n.invent({
                create: function (e, t) {
                  if (arguments.length > 1 && "boolean" != typeof t)
                    return this.constructor.call(
                      this,
                      [].slice.call(arguments)
                    );
                  if (Array.isArray(e))
                    for (var n = 0, i = this.arguments.length; n < i; ++n)
                      this[this.arguments[n]] = e[n];
                  else if (e && "object" === s(e))
                    for (n = 0, i = this.arguments.length; n < i; ++n)
                      this[this.arguments[n]] = e[this.arguments[n]];
                  (this.inversed = !1), !0 === t && (this.inversed = !0);
                },
              })),
              (n.Translate = n.invent({
                parent: n.Matrix,
                inherit: n.Transformation,
                create: function (e, t) {
                  this.constructor.apply(this, [].slice.call(arguments));
                },
                extend: {
                  arguments: ["transformedX", "transformedY"],
                  method: "translate",
                },
              })),
              n.extend(n.Element, {
                style: function (e, t) {
                  if (0 == arguments.length)
                    return this.node.style.cssText || "";
                  if (arguments.length < 2)
                    if ("object" === s(e)) for (var i in e) this.style(i, e[i]);
                    else {
                      if (!n.regex.isCss.test(e)) return this.node.style[u(e)];
                      for (
                        e = e
                          .split(/\s*;\s*/)
                          .filter(function (e) {
                            return !!e;
                          })
                          .map(function (e) {
                            return e.split(/\s*:\s*/);
                          });
                        (t = e.pop());

                      )
                        this.style(t[0], t[1]);
                    }
                  else
                    this.node.style[u(e)] =
                      null === t || n.regex.isBlank.test(t) ? "" : t;
                  return this;
                },
              }),
              (n.Parent = n.invent({
                create: function (e) {
                  this.constructor.call(this, e);
                },
                inherit: n.Element,
                extend: {
                  children: function () {
                    return n.utils.map(
                      n.utils.filterSVGElements(this.node.childNodes),
                      function (e) {
                        return n.adopt(e);
                      }
                    );
                  },
                  add: function (e, t) {
                    return (
                      null == t
                        ? this.node.appendChild(e.node)
                        : e.node != this.node.childNodes[t] &&
                          this.node.insertBefore(
                            e.node,
                            this.node.childNodes[t]
                          ),
                      this
                    );
                  },
                  put: function (e, t) {
                    return this.add(e, t), e;
                  },
                  has: function (e) {
                    return this.index(e) >= 0;
                  },
                  index: function (e) {
                    return [].slice.call(this.node.childNodes).indexOf(e.node);
                  },
                  get: function (e) {
                    return n.adopt(this.node.childNodes[e]);
                  },
                  first: function () {
                    return this.get(0);
                  },
                  last: function () {
                    return this.get(this.node.childNodes.length - 1);
                  },
                  each: function (e, t) {
                    for (
                      var i = this.children(), o = 0, a = i.length;
                      o < a;
                      o++
                    )
                      i[o] instanceof n.Element && e.apply(i[o], [o, i]),
                        t && i[o] instanceof n.Container && i[o].each(e, t);
                    return this;
                  },
                  removeElement: function (e) {
                    return this.node.removeChild(e.node), this;
                  },
                  clear: function () {
                    for (; this.node.hasChildNodes(); )
                      this.node.removeChild(this.node.lastChild);
                    return delete this._defs, this;
                  },
                  defs: function () {
                    return this.doc().defs();
                  },
                },
              })),
              n.extend(n.Parent, {
                ungroup: function (e, t) {
                  return (
                    0 === t ||
                      this instanceof n.Defs ||
                      this.node == n.parser.draw ||
                      ((e =
                        e ||
                        (this instanceof n.Doc ? this : this.parent(n.Parent))),
                      (t = t || 1 / 0),
                      this.each(function () {
                        return this instanceof n.Defs
                          ? this
                          : this instanceof n.Parent
                          ? this.ungroup(e, t - 1)
                          : this.toParent(e);
                      }),
                      this.node.firstChild || this.remove()),
                    this
                  );
                },
                flatten: function (e, t) {
                  return this.ungroup(e, t);
                },
              }),
              (n.Container = n.invent({
                create: function (e) {
                  this.constructor.call(this, e);
                },
                inherit: n.Parent,
              })),
              (n.ViewBox = n.invent({ parent: n.Container, construct: {} })),
              [
                "click",
                "dblclick",
                "mousedown",
                "mouseup",
                "mouseover",
                "mouseout",
                "mousemove",
                "touchstart",
                "touchmove",
                "touchleave",
                "touchend",
                "touchcancel",
              ].forEach(function (e) {
                n.Element.prototype[e] = function (t) {
                  return n.on(this.node, e, t), this;
                };
              }),
              (n.listeners = []),
              (n.handlerMap = []),
              (n.listenerId = 0),
              (n.on = function (e, t, i, o, a) {
                var s = i.bind(o || e.instance || e),
                  r = (n.handlerMap.indexOf(e) + 1 || n.handlerMap.push(e)) - 1,
                  l = t.split(".")[0],
                  c = t.split(".")[1] || "*";
                (n.listeners[r] = n.listeners[r] || {}),
                  (n.listeners[r][l] = n.listeners[r][l] || {}),
                  (n.listeners[r][l][c] = n.listeners[r][l][c] || {}),
                  i._svgjsListenerId || (i._svgjsListenerId = ++n.listenerId),
                  (n.listeners[r][l][c][i._svgjsListenerId] = s),
                  e.addEventListener(l, s, a || { passive: !1 });
              }),
              (n.off = function (e, t, i) {
                var o = n.handlerMap.indexOf(e),
                  a = t && t.split(".")[0],
                  s = t && t.split(".")[1],
                  r = "";
                if (-1 != o)
                  if (i) {
                    if (
                      ("function" == typeof i && (i = i._svgjsListenerId), !i)
                    )
                      return;
                    n.listeners[o][a] &&
                      n.listeners[o][a][s || "*"] &&
                      (e.removeEventListener(
                        a,
                        n.listeners[o][a][s || "*"][i],
                        !1
                      ),
                      delete n.listeners[o][a][s || "*"][i]);
                  } else if (s && a) {
                    if (n.listeners[o][a] && n.listeners[o][a][s]) {
                      for (var l in n.listeners[o][a][s])
                        n.off(e, [a, s].join("."), l);
                      delete n.listeners[o][a][s];
                    }
                  } else if (s)
                    for (var c in n.listeners[o])
                      for (var r in n.listeners[o][c])
                        s === r && n.off(e, [c, s].join("."));
                  else if (a) {
                    if (n.listeners[o][a]) {
                      for (var r in n.listeners[o][a])
                        n.off(e, [a, r].join("."));
                      delete n.listeners[o][a];
                    }
                  } else {
                    for (var c in n.listeners[o]) n.off(e, c);
                    delete n.listeners[o], delete n.handlerMap[o];
                  }
              }),
              n.extend(n.Element, {
                on: function (e, t, i, o) {
                  return n.on(this.node, e, t, i, o), this;
                },
                off: function (e, t) {
                  return n.off(this.node, e, t), this;
                },
                fire: function (t, i) {
                  return (
                    t instanceof e.Event
                      ? this.node.dispatchEvent(t)
                      : this.node.dispatchEvent(
                          (t = new n.CustomEvent(t, {
                            detail: i,
                            cancelable: !0,
                          }))
                        ),
                    (this._event = t),
                    this
                  );
                },
                event: function () {
                  return this._event;
                },
              }),
              (n.Defs = n.invent({ create: "defs", inherit: n.Container })),
              (n.G = n.invent({
                create: "g",
                inherit: n.Container,
                extend: {
                  x: function (e) {
                    return null == e
                      ? this.transform("x")
                      : this.transform({ x: e - this.x() }, !0);
                  },
                },
                construct: {
                  group: function () {
                    return this.put(new n.G());
                  },
                },
              })),
              (n.Doc = n.invent({
                create: function (e) {
                  e &&
                    ("svg" ==
                    (e = "string" == typeof e ? t.getElementById(e) : e)
                      .nodeName
                      ? this.constructor.call(this, e)
                      : (this.constructor.call(this, n.create("svg")),
                        e.appendChild(this.node),
                        this.size("100%", "100%")),
                    this.namespace().defs());
                },
                inherit: n.Container,
                extend: {
                  namespace: function () {
                    return this.attr({ xmlns: n.ns, version: "1.1" })
                      .attr("xmlns:xlink", n.xlink, n.xmlns)
                      .attr("xmlns:svgjs", n.svgjs, n.xmlns);
                  },
                  defs: function () {
                    var e;
                    return (
                      this._defs ||
                        ((e = this.node.getElementsByTagName("defs")[0])
                          ? (this._defs = n.adopt(e))
                          : (this._defs = new n.Defs()),
                        this.node.appendChild(this._defs.node)),
                      this._defs
                    );
                  },
                  parent: function () {
                    return this.node.parentNode &&
                      "#document" != this.node.parentNode.nodeName
                      ? this.node.parentNode
                      : null;
                  },
                  remove: function () {
                    return (
                      this.parent() && this.parent().removeChild(this.node),
                      this
                    );
                  },
                  clear: function () {
                    for (; this.node.hasChildNodes(); )
                      this.node.removeChild(this.node.lastChild);
                    return (
                      delete this._defs,
                      n.parser.draw &&
                        !n.parser.draw.parentNode &&
                        this.node.appendChild(n.parser.draw),
                      this
                    );
                  },
                  clone: function (e) {
                    this.writeDataToDom();
                    var t = this.node,
                      n = m(t.cloneNode(!0));
                    return (
                      e
                        ? (e.node || e).appendChild(n.node)
                        : t.parentNode.insertBefore(n.node, t.nextSibling),
                      n
                    );
                  },
                },
              })),
              n.extend(n.Element, {}),
              (n.Gradient = n.invent({
                create: function (e) {
                  this.constructor.call(this, n.create(e + "Gradient")),
                    (this.type = e);
                },
                inherit: n.Container,
                extend: {
                  at: function (e, t, i) {
                    return this.put(new n.Stop()).update(e, t, i);
                  },
                  update: function (e) {
                    return (
                      this.clear(),
                      "function" == typeof e && e.call(this, this),
                      this
                    );
                  },
                  fill: function () {
                    return "url(#" + this.id() + ")";
                  },
                  toString: function () {
                    return this.fill();
                  },
                  attr: function (e, t, i) {
                    return (
                      "transform" == e && (e = "gradientTransform"),
                      n.Container.prototype.attr.call(this, e, t, i)
                    );
                  },
                },
                construct: {
                  gradient: function (e, t) {
                    return this.defs().gradient(e, t);
                  },
                },
              })),
              n.extend(n.Gradient, n.FX, {
                from: function (e, t) {
                  return "radial" == (this._target || this).type
                    ? this.attr({ fx: new n.Number(e), fy: new n.Number(t) })
                    : this.attr({ x1: new n.Number(e), y1: new n.Number(t) });
                },
                to: function (e, t) {
                  return "radial" == (this._target || this).type
                    ? this.attr({ cx: new n.Number(e), cy: new n.Number(t) })
                    : this.attr({ x2: new n.Number(e), y2: new n.Number(t) });
                },
              }),
              n.extend(n.Defs, {
                gradient: function (e, t) {
                  return this.put(new n.Gradient(e)).update(t);
                },
              }),
              (n.Stop = n.invent({
                create: "stop",
                inherit: n.Element,
                extend: {
                  update: function (e) {
                    return (
                      ("number" == typeof e || e instanceof n.Number) &&
                        (e = {
                          offset: arguments[0],
                          color: arguments[1],
                          opacity: arguments[2],
                        }),
                      null != e.opacity && this.attr("stop-opacity", e.opacity),
                      null != e.color && this.attr("stop-color", e.color),
                      null != e.offset &&
                        this.attr("offset", new n.Number(e.offset)),
                      this
                    );
                  },
                },
              })),
              (n.Pattern = n.invent({
                create: "pattern",
                inherit: n.Container,
                extend: {
                  fill: function () {
                    return "url(#" + this.id() + ")";
                  },
                  update: function (e) {
                    return (
                      this.clear(),
                      "function" == typeof e && e.call(this, this),
                      this
                    );
                  },
                  toString: function () {
                    return this.fill();
                  },
                  attr: function (e, t, i) {
                    return (
                      "transform" == e && (e = "patternTransform"),
                      n.Container.prototype.attr.call(this, e, t, i)
                    );
                  },
                },
                construct: {
                  pattern: function (e, t, n) {
                    return this.defs().pattern(e, t, n);
                  },
                },
              })),
              n.extend(n.Defs, {
                pattern: function (e, t, i) {
                  return this.put(new n.Pattern())
                    .update(i)
                    .attr({
                      x: 0,
                      y: 0,
                      width: e,
                      height: t,
                      patternUnits: "userSpaceOnUse",
                    });
                },
              }),
              (n.Shape = n.invent({
                create: function (e) {
                  this.constructor.call(this, e);
                },
                inherit: n.Element,
              })),
              (n.Symbol = n.invent({
                create: "symbol",
                inherit: n.Container,
                construct: {
                  symbol: function () {
                    return this.put(new n.Symbol());
                  },
                },
              })),
              (n.Use = n.invent({
                create: "use",
                inherit: n.Shape,
                extend: {
                  element: function (e, t) {
                    return this.attr("href", (t || "") + "#" + e, n.xlink);
                  },
                },
                construct: {
                  use: function (e, t) {
                    return this.put(new n.Use()).element(e, t);
                  },
                },
              })),
              (n.Rect = n.invent({
                create: "rect",
                inherit: n.Shape,
                construct: {
                  rect: function (e, t) {
                    return this.put(new n.Rect()).size(e, t);
                  },
                },
              })),
              (n.Circle = n.invent({
                create: "circle",
                inherit: n.Shape,
                construct: {
                  circle: function (e) {
                    return this.put(new n.Circle())
                      .rx(new n.Number(e).divide(2))
                      .move(0, 0);
                  },
                },
              })),
              n.extend(n.Circle, n.FX, {
                rx: function (e) {
                  return this.attr("r", e);
                },
                ry: function (e) {
                  return this.rx(e);
                },
              }),
              (n.Ellipse = n.invent({
                create: "ellipse",
                inherit: n.Shape,
                construct: {
                  ellipse: function (e, t) {
                    return this.put(new n.Ellipse()).size(e, t).move(0, 0);
                  },
                },
              })),
              n.extend(n.Ellipse, n.Rect, n.FX, {
                rx: function (e) {
                  return this.attr("rx", e);
                },
                ry: function (e) {
                  return this.attr("ry", e);
                },
              }),
              n.extend(n.Circle, n.Ellipse, {
                x: function (e) {
                  return null == e
                    ? this.cx() - this.rx()
                    : this.cx(e + this.rx());
                },
                y: function (e) {
                  return null == e
                    ? this.cy() - this.ry()
                    : this.cy(e + this.ry());
                },
                cx: function (e) {
                  return null == e ? this.attr("cx") : this.attr("cx", e);
                },
                cy: function (e) {
                  return null == e ? this.attr("cy") : this.attr("cy", e);
                },
                width: function (e) {
                  return null == e
                    ? 2 * this.rx()
                    : this.rx(new n.Number(e).divide(2));
                },
                height: function (e) {
                  return null == e
                    ? 2 * this.ry()
                    : this.ry(new n.Number(e).divide(2));
                },
                size: function (e, t) {
                  var i = p(this, e, t);
                  return this.rx(new n.Number(i.width).divide(2)).ry(
                    new n.Number(i.height).divide(2)
                  );
                },
              }),
              (n.Line = n.invent({
                create: "line",
                inherit: n.Shape,
                extend: {
                  array: function () {
                    return new n.PointArray([
                      [this.attr("x1"), this.attr("y1")],
                      [this.attr("x2"), this.attr("y2")],
                    ]);
                  },
                  plot: function (e, t, i, o) {
                    return null == e
                      ? this.array()
                      : ((e =
                          void 0 !== t
                            ? { x1: e, y1: t, x2: i, y2: o }
                            : new n.PointArray(e).toLine()),
                        this.attr(e));
                  },
                  move: function (e, t) {
                    return this.attr(this.array().move(e, t).toLine());
                  },
                  size: function (e, t) {
                    var n = p(this, e, t);
                    return this.attr(
                      this.array().size(n.width, n.height).toLine()
                    );
                  },
                },
                construct: {
                  line: function (e, t, i, o) {
                    return n.Line.prototype.plot.apply(
                      this.put(new n.Line()),
                      null != e ? [e, t, i, o] : [0, 0, 0, 0]
                    );
                  },
                },
              })),
              (n.Polyline = n.invent({
                create: "polyline",
                inherit: n.Shape,
                construct: {
                  polyline: function (e) {
                    return this.put(new n.Polyline()).plot(
                      e || new n.PointArray()
                    );
                  },
                },
              })),
              (n.Polygon = n.invent({
                create: "polygon",
                inherit: n.Shape,
                construct: {
                  polygon: function (e) {
                    return this.put(new n.Polygon()).plot(
                      e || new n.PointArray()
                    );
                  },
                },
              })),
              n.extend(n.Polyline, n.Polygon, {
                array: function () {
                  return (
                    this._array ||
                    (this._array = new n.PointArray(this.attr("points")))
                  );
                },
                plot: function (e) {
                  return null == e
                    ? this.array()
                    : this.clear().attr(
                        "points",
                        "string" == typeof e
                          ? e
                          : (this._array = new n.PointArray(e))
                      );
                },
                clear: function () {
                  return delete this._array, this;
                },
                move: function (e, t) {
                  return this.attr("points", this.array().move(e, t));
                },
                size: function (e, t) {
                  var n = p(this, e, t);
                  return this.attr(
                    "points",
                    this.array().size(n.width, n.height)
                  );
                },
              }),
              n.extend(n.Line, n.Polyline, n.Polygon, {
                morphArray: n.PointArray,
                x: function (e) {
                  return null == e
                    ? this.bbox().x
                    : this.move(e, this.bbox().y);
                },
                y: function (e) {
                  return null == e
                    ? this.bbox().y
                    : this.move(this.bbox().x, e);
                },
                width: function (e) {
                  var t = this.bbox();
                  return null == e ? t.width : this.size(e, t.height);
                },
                height: function (e) {
                  var t = this.bbox();
                  return null == e ? t.height : this.size(t.width, e);
                },
              }),
              (n.Path = n.invent({
                create: "path",
                inherit: n.Shape,
                extend: {
                  morphArray: n.PathArray,
                  array: function () {
                    return (
                      this._array ||
                      (this._array = new n.PathArray(this.attr("d")))
                    );
                  },
                  plot: function (e) {
                    return null == e
                      ? this.array()
                      : this.clear().attr(
                          "d",
                          "string" == typeof e
                            ? e
                            : (this._array = new n.PathArray(e))
                        );
                  },
                  clear: function () {
                    return delete this._array, this;
                  },
                },
                construct: {
                  path: function (e) {
                    return this.put(new n.Path()).plot(e || new n.PathArray());
                  },
                },
              })),
              (n.Image = n.invent({
                create: "image",
                inherit: n.Shape,
                extend: {
                  load: function (t) {
                    if (!t) return this;
                    var i = this,
                      o = new e.Image();
                    return (
                      n.on(o, "load", function () {
                        n.off(o);
                        var e = i.parent(n.Pattern);
                        null !== e &&
                          (0 == i.width() &&
                            0 == i.height() &&
                            i.size(o.width, o.height),
                          e &&
                            0 == e.width() &&
                            0 == e.height() &&
                            e.size(i.width(), i.height()),
                          "function" == typeof i._loaded &&
                            i._loaded.call(i, {
                              width: o.width,
                              height: o.height,
                              ratio: o.width / o.height,
                              url: t,
                            }));
                      }),
                      n.on(o, "error", function (e) {
                        n.off(o),
                          "function" == typeof i._error && i._error.call(i, e);
                      }),
                      this.attr("href", (o.src = this.src = t), n.xlink)
                    );
                  },
                  loaded: function (e) {
                    return (this._loaded = e), this;
                  },
                  error: function (e) {
                    return (this._error = e), this;
                  },
                },
                construct: {
                  image: function (e, t, i) {
                    return this.put(new n.Image())
                      .load(e)
                      .size(t || 0, i || t || 0);
                  },
                },
              })),
              (n.Text = n.invent({
                create: function () {
                  this.constructor.call(this, n.create("text")),
                    (this.dom.leading = new n.Number(1.3)),
                    (this._rebuild = !0),
                    (this._build = !1),
                    this.attr("font-family", n.defaults.attrs["font-family"]);
                },
                inherit: n.Shape,
                extend: {
                  x: function (e) {
                    return null == e ? this.attr("x") : this.attr("x", e);
                  },
                  text: function (e) {
                    if (void 0 === e) {
                      e = "";
                      for (
                        var t = this.node.childNodes, i = 0, o = t.length;
                        i < o;
                        ++i
                      )
                        0 != i &&
                          3 != t[i].nodeType &&
                          1 == n.adopt(t[i]).dom.newLined &&
                          (e += "\n"),
                          (e += t[i].textContent);
                      return e;
                    }
                    if ((this.clear().build(!0), "function" == typeof e))
                      e.call(this, this);
                    else {
                      i = 0;
                      for (var a = (e = e.split("\n")).length; i < a; i++)
                        this.tspan(e[i]).newLine();
                    }
                    return this.build(!1).rebuild();
                  },
                  size: function (e) {
                    return this.attr("font-size", e).rebuild();
                  },
                  leading: function (e) {
                    return null == e
                      ? this.dom.leading
                      : ((this.dom.leading = new n.Number(e)), this.rebuild());
                  },
                  lines: function () {
                    var e = ((this.textPath && this.textPath()) || this).node,
                      t = n.utils.map(
                        n.utils.filterSVGElements(e.childNodes),
                        function (e) {
                          return n.adopt(e);
                        }
                      );
                    return new n.Set(t);
                  },
                  rebuild: function (e) {
                    if (
                      ("boolean" == typeof e && (this._rebuild = e),
                      this._rebuild)
                    ) {
                      var t = this,
                        i = 0,
                        o =
                          this.dom.leading *
                          new n.Number(this.attr("font-size"));
                      this.lines().each(function () {
                        this.dom.newLined &&
                          (t.textPath() || this.attr("x", t.attr("x")),
                          "\n" == this.text()
                            ? (i += o)
                            : (this.attr("dy", o + i), (i = 0)));
                      }),
                        this.fire("rebuild");
                    }
                    return this;
                  },
                  build: function (e) {
                    return (this._build = !!e), this;
                  },
                  setData: function (e) {
                    return (
                      (this.dom = e),
                      (this.dom.leading = new n.Number(e.leading || 1.3)),
                      this
                    );
                  },
                },
                construct: {
                  text: function (e) {
                    return this.put(new n.Text()).text(e);
                  },
                  plain: function (e) {
                    return this.put(new n.Text()).plain(e);
                  },
                },
              })),
              (n.Tspan = n.invent({
                create: "tspan",
                inherit: n.Shape,
                extend: {
                  text: function (e) {
                    return null == e
                      ? this.node.textContent + (this.dom.newLined ? "\n" : "")
                      : ("function" == typeof e
                          ? e.call(this, this)
                          : this.plain(e),
                        this);
                  },
                  dx: function (e) {
                    return this.attr("dx", e);
                  },
                  dy: function (e) {
                    return this.attr("dy", e);
                  },
                  newLine: function () {
                    var e = this.parent(n.Text);
                    return (
                      (this.dom.newLined = !0),
                      this.dy(e.dom.leading * e.attr("font-size")).attr(
                        "x",
                        e.x()
                      )
                    );
                  },
                },
              })),
              n.extend(n.Text, n.Tspan, {
                plain: function (e) {
                  return (
                    !1 === this._build && this.clear(),
                    this.node.appendChild(t.createTextNode(e)),
                    this
                  );
                },
                tspan: function (e) {
                  var t = ((this.textPath && this.textPath()) || this).node,
                    i = new n.Tspan();
                  return (
                    !1 === this._build && this.clear(),
                    t.appendChild(i.node),
                    i.text(e)
                  );
                },
                clear: function () {
                  for (
                    var e = ((this.textPath && this.textPath()) || this).node;
                    e.hasChildNodes();

                  )
                    e.removeChild(e.lastChild);
                  return this;
                },
                length: function () {
                  return this.node.getComputedTextLength();
                },
              }),
              (n.TextPath = n.invent({
                create: "textPath",
                inherit: n.Parent,
                parent: n.Text,
                construct: {
                  morphArray: n.PathArray,
                  array: function () {
                    var e = this.track();
                    return e ? e.array() : null;
                  },
                  plot: function (e) {
                    var t = this.track(),
                      n = null;
                    return t && (n = t.plot(e)), null == e ? n : this;
                  },
                  track: function () {
                    var e = this.textPath();
                    if (e) return e.reference("href");
                  },
                  textPath: function () {
                    if (
                      this.node.firstChild &&
                      "textPath" == this.node.firstChild.nodeName
                    )
                      return n.adopt(this.node.firstChild);
                  },
                },
              })),
              (n.Nested = n.invent({
                create: function () {
                  this.constructor.call(this, n.create("svg")),
                    this.style("overflow", "visible");
                },
                inherit: n.Container,
                construct: {
                  nested: function () {
                    return this.put(new n.Nested());
                  },
                },
              }));
            var l = {
              stroke: [
                "color",
                "width",
                "opacity",
                "linecap",
                "linejoin",
                "miterlimit",
                "dasharray",
                "dashoffset",
              ],
              fill: ["color", "opacity", "rule"],
              prefix: function (e, t) {
                return "color" == t ? e : e + "-" + t;
              },
            };
            function c(e, t, i, o) {
              return i + o.replace(n.regex.dots, " .");
            }
            function u(e) {
              return e.toLowerCase().replace(/-(.)/g, function (e, t) {
                return t.toUpperCase();
              });
            }
            function d(e) {
              return e.charAt(0).toUpperCase() + e.slice(1);
            }
            function h(e) {
              var t = e.toString(16);
              return 1 == t.length ? "0" + t : t;
            }
            function p(e, t, n) {
              if (null == t || null == n) {
                var i = e.bbox();
                null == t
                  ? (t = (i.width / i.height) * n)
                  : null == n && (n = (i.height / i.width) * t);
              }
              return { width: t, height: n };
            }
            function f(e, t, n) {
              return { x: t * e.a + n * e.c + 0, y: t * e.b + n * e.d + 0 };
            }
            function g(e) {
              return { a: e[0], b: e[1], c: e[2], d: e[3], e: e[4], f: e[5] };
            }
            function m(t) {
              for (var i = t.childNodes.length - 1; i >= 0; i--)
                t.childNodes[i] instanceof e.SVGElement && m(t.childNodes[i]);
              return n.adopt(t).id(n.eid(t.nodeName));
            }
            function v(e) {
              return Math.abs(e) > 1e-37 ? e : 0;
            }
            ["fill", "stroke"].forEach(function (e) {
              var t = {};
              (t[e] = function (t) {
                if (void 0 === t) return this;
                if (
                  "string" == typeof t ||
                  n.Color.isRgb(t) ||
                  (t && "function" == typeof t.fill)
                )
                  this.attr(e, t);
                else
                  for (var i = l[e].length - 1; i >= 0; i--)
                    null != t[l[e][i]] &&
                      this.attr(l.prefix(e, l[e][i]), t[l[e][i]]);
                return this;
              }),
                n.extend(n.Element, n.FX, t);
            }),
              n.extend(n.Element, n.FX, {
                translate: function (e, t) {
                  return this.transform({ x: e, y: t });
                },
                matrix: function (e) {
                  return this.attr(
                    "transform",
                    new n.Matrix(
                      6 == arguments.length ? [].slice.call(arguments) : e
                    )
                  );
                },
                opacity: function (e) {
                  return this.attr("opacity", e);
                },
                dx: function (e) {
                  return this.x(
                    new n.Number(e).plus(this instanceof n.FX ? 0 : this.x()),
                    !0
                  );
                },
                dy: function (e) {
                  return this.y(
                    new n.Number(e).plus(this instanceof n.FX ? 0 : this.y()),
                    !0
                  );
                },
              }),
              n.extend(n.Path, {
                length: function () {
                  return this.node.getTotalLength();
                },
                pointAt: function (e) {
                  return this.node.getPointAtLength(e);
                },
              }),
              (n.Set = n.invent({
                create: function (e) {
                  Array.isArray(e) ? (this.members = e) : this.clear();
                },
                extend: {
                  add: function () {
                    for (
                      var e = [].slice.call(arguments), t = 0, n = e.length;
                      t < n;
                      t++
                    )
                      this.members.push(e[t]);
                    return this;
                  },
                  remove: function (e) {
                    var t = this.index(e);
                    return t > -1 && this.members.splice(t, 1), this;
                  },
                  each: function (e) {
                    for (var t = 0, n = this.members.length; t < n; t++)
                      e.apply(this.members[t], [t, this.members]);
                    return this;
                  },
                  clear: function () {
                    return (this.members = []), this;
                  },
                  length: function () {
                    return this.members.length;
                  },
                  has: function (e) {
                    return this.index(e) >= 0;
                  },
                  index: function (e) {
                    return this.members.indexOf(e);
                  },
                  get: function (e) {
                    return this.members[e];
                  },
                  first: function () {
                    return this.get(0);
                  },
                  last: function () {
                    return this.get(this.members.length - 1);
                  },
                  valueOf: function () {
                    return this.members;
                  },
                },
                construct: {
                  set: function (e) {
                    return new n.Set(e);
                  },
                },
              })),
              (n.FX.Set = n.invent({
                create: function (e) {
                  this.set = e;
                },
              })),
              (n.Set.inherit = function () {
                var e = [];
                for (var t in n.Shape.prototype)
                  "function" == typeof n.Shape.prototype[t] &&
                    "function" != typeof n.Set.prototype[t] &&
                    e.push(t);
                for (var t in (e.forEach(function (e) {
                  n.Set.prototype[e] = function () {
                    for (var t = 0, i = this.members.length; t < i; t++)
                      this.members[t] &&
                        "function" == typeof this.members[t][e] &&
                        this.members[t][e].apply(this.members[t], arguments);
                    return "animate" == e
                      ? this.fx || (this.fx = new n.FX.Set(this))
                      : this;
                  };
                }),
                (e = []),
                n.FX.prototype))
                  "function" == typeof n.FX.prototype[t] &&
                    "function" != typeof n.FX.Set.prototype[t] &&
                    e.push(t);
                e.forEach(function (e) {
                  n.FX.Set.prototype[e] = function () {
                    for (var t = 0, n = this.set.members.length; t < n; t++)
                      this.set.members[t].fx[e].apply(
                        this.set.members[t].fx,
                        arguments
                      );
                    return this;
                  };
                });
              }),
              n.extend(n.Element, {}),
              n.extend(n.Element, {
                remember: function (e, t) {
                  if ("object" === s(arguments[0]))
                    for (var n in e) this.remember(n, e[n]);
                  else {
                    if (1 == arguments.length) return this.memory()[e];
                    this.memory()[e] = t;
                  }
                  return this;
                },
                forget: function () {
                  if (0 == arguments.length) this._memory = {};
                  else
                    for (var e = arguments.length - 1; e >= 0; e--)
                      delete this.memory()[arguments[e]];
                  return this;
                },
                memory: function () {
                  return this._memory || (this._memory = {});
                },
              }),
              (n.get = function (e) {
                var i = t.getElementById(
                  (function (e) {
                    var t = (e || "").toString().match(n.regex.reference);
                    if (t) return t[1];
                  })(e) || e
                );
                return n.adopt(i);
              }),
              (n.select = function (e, i) {
                return new n.Set(
                  n.utils.map((i || t).querySelectorAll(e), function (e) {
                    return n.adopt(e);
                  })
                );
              }),
              n.extend(n.Parent, {
                select: function (e) {
                  return n.select(e, this.node);
                },
              });
            var b = "abcdef".split("");
            if ("function" != typeof e.CustomEvent) {
              var x = function (e, n) {
                n = n || { bubbles: !1, cancelable: !1, detail: void 0 };
                var i = t.createEvent("CustomEvent");
                return (
                  i.initCustomEvent(e, n.bubbles, n.cancelable, n.detail), i
                );
              };
              (x.prototype = e.Event.prototype), (n.CustomEvent = x);
            } else n.CustomEvent = e.CustomEvent;
            return n;
          }),
          void 0 !==
            (i = function () {
              return Fe(Be, Be.document);
            }.call(t, n, t, e)) && (e.exports = i),
          function () {
            (SVG.Filter = SVG.invent({
              create: "filter",
              inherit: SVG.Parent,
              extend: {
                source: "SourceGraphic",
                sourceAlpha: "SourceAlpha",
                background: "BackgroundImage",
                backgroundAlpha: "BackgroundAlpha",
                fill: "FillPaint",
                stroke: "StrokePaint",
                autoSetIn: !0,
                put: function (e, t) {
                  return (
                    this.add(e, t),
                    !e.attr("in") &&
                      this.autoSetIn &&
                      e.attr("in", this.source),
                    e.attr("result") || e.attr("result", e),
                    e
                  );
                },
                blend: function (e, t, n) {
                  return this.put(new SVG.BlendEffect(e, t, n));
                },
                colorMatrix: function (e, t) {
                  return this.put(new SVG.ColorMatrixEffect(e, t));
                },
                convolveMatrix: function (e) {
                  return this.put(new SVG.ConvolveMatrixEffect(e));
                },
                componentTransfer: function (e) {
                  return this.put(new SVG.ComponentTransferEffect(e));
                },
                composite: function (e, t, n) {
                  return this.put(new SVG.CompositeEffect(e, t, n));
                },
                flood: function (e, t) {
                  return this.put(new SVG.FloodEffect(e, t));
                },
                offset: function (e, t) {
                  return this.put(new SVG.OffsetEffect(e, t));
                },
                image: function (e) {
                  return this.put(new SVG.ImageEffect(e));
                },
                merge: function () {
                  var e = [void 0];
                  for (var t in arguments) e.push(arguments[t]);
                  return this.put(
                    new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, e))()
                  );
                },
                gaussianBlur: function (e, t) {
                  return this.put(new SVG.GaussianBlurEffect(e, t));
                },
                morphology: function (e, t) {
                  return this.put(new SVG.MorphologyEffect(e, t));
                },
                diffuseLighting: function (e, t, n) {
                  return this.put(new SVG.DiffuseLightingEffect(e, t, n));
                },
                displacementMap: function (e, t, n, i, o) {
                  return this.put(new SVG.DisplacementMapEffect(e, t, n, i, o));
                },
                specularLighting: function (e, t, n, i) {
                  return this.put(new SVG.SpecularLightingEffect(e, t, n, i));
                },
                tile: function () {
                  return this.put(new SVG.TileEffect());
                },
                turbulence: function (e, t, n, i, o) {
                  return this.put(new SVG.TurbulenceEffect(e, t, n, i, o));
                },
                toString: function () {
                  return "url(#" + this.attr("id") + ")";
                },
              },
            })),
              SVG.extend(SVG.Defs, {
                filter: function (e) {
                  var t = this.put(new SVG.Filter());
                  return "function" == typeof e && e.call(t, t), t;
                },
              }),
              SVG.extend(SVG.Container, {
                filter: function (e) {
                  return this.defs().filter(e);
                },
              }),
              SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
                filter: function (e) {
                  return (
                    (this.filterer =
                      e instanceof SVG.Element ? e : this.doc().filter(e)),
                    this.doc() &&
                      this.filterer.doc() !== this.doc() &&
                      this.doc().defs().add(this.filterer),
                    this.attr("filter", this.filterer),
                    this.filterer
                  );
                },
                unfilter: function (e) {
                  return (
                    this.filterer && !0 === e && this.filterer.remove(),
                    delete this.filterer,
                    this.attr("filter", null)
                  );
                },
              }),
              (SVG.Effect = SVG.invent({
                create: function () {
                  this.constructor.call(this);
                },
                inherit: SVG.Element,
                extend: {
                  in: function (e) {
                    return null == e
                      ? (this.parent() &&
                          this.parent()
                            .select('[result="' + this.attr("in") + '"]')
                            .get(0)) ||
                          this.attr("in")
                      : this.attr("in", e);
                  },
                  result: function (e) {
                    return null == e
                      ? this.attr("result")
                      : this.attr("result", e);
                  },
                  toString: function () {
                    return this.result();
                  },
                },
              })),
              (SVG.ParentEffect = SVG.invent({
                create: function () {
                  this.constructor.call(this);
                },
                inherit: SVG.Parent,
                extend: {
                  in: function (e) {
                    return null == e
                      ? (this.parent() &&
                          this.parent()
                            .select('[result="' + this.attr("in") + '"]')
                            .get(0)) ||
                          this.attr("in")
                      : this.attr("in", e);
                  },
                  result: function (e) {
                    return null == e
                      ? this.attr("result")
                      : this.attr("result", e);
                  },
                  toString: function () {
                    return this.result();
                  },
                },
              }));
            var e = {
              blend: function (e, t) {
                return this.parent() && this.parent().blend(this, e, t);
              },
              colorMatrix: function (e, t) {
                return (
                  this.parent() && this.parent().colorMatrix(e, t).in(this)
                );
              },
              convolveMatrix: function (e) {
                return (
                  this.parent() && this.parent().convolveMatrix(e).in(this)
                );
              },
              componentTransfer: function (e) {
                return (
                  this.parent() && this.parent().componentTransfer(e).in(this)
                );
              },
              composite: function (e, t) {
                return this.parent() && this.parent().composite(this, e, t);
              },
              flood: function (e, t) {
                return this.parent() && this.parent().flood(e, t);
              },
              offset: function (e, t) {
                return this.parent() && this.parent().offset(e, t).in(this);
              },
              image: function (e) {
                return this.parent() && this.parent().image(e);
              },
              merge: function () {
                return (
                  this.parent() &&
                  this.parent().merge.apply(
                    this.parent(),
                    [this].concat(arguments)
                  )
                );
              },
              gaussianBlur: function (e, t) {
                return (
                  this.parent() && this.parent().gaussianBlur(e, t).in(this)
                );
              },
              morphology: function (e, t) {
                return this.parent() && this.parent().morphology(e, t).in(this);
              },
              diffuseLighting: function (e, t, n) {
                return (
                  this.parent() &&
                  this.parent().diffuseLighting(e, t, n).in(this)
                );
              },
              displacementMap: function (e, t, n, i) {
                return (
                  this.parent() &&
                  this.parent().displacementMap(this, e, t, n, i)
                );
              },
              specularLighting: function (e, t, n, i) {
                return (
                  this.parent() &&
                  this.parent().specularLighting(e, t, n, i).in(this)
                );
              },
              tile: function () {
                return this.parent() && this.parent().tile().in(this);
              },
              turbulence: function (e, t, n, i, o) {
                return (
                  this.parent() &&
                  this.parent().turbulence(e, t, n, i, o).in(this)
                );
              },
            };
            SVG.extend(SVG.Effect, e),
              SVG.extend(SVG.ParentEffect, e),
              (SVG.ChildEffect = SVG.invent({
                create: function () {
                  this.constructor.call(this);
                },
                inherit: SVG.Element,
                extend: {
                  in: function (e) {
                    this.attr("in", e);
                  },
                },
              }));
            var t = {
                blend: function (e, t, n) {
                  this.attr({ in: e, in2: t, mode: n || "normal" });
                },
                colorMatrix: function (e, t) {
                  "matrix" == e && (t = o(t)),
                    this.attr({ type: e, values: void 0 === t ? null : t });
                },
                convolveMatrix: function (e) {
                  (e = o(e)),
                    this.attr({
                      order: Math.sqrt(e.split(" ").length),
                      kernelMatrix: e,
                    });
                },
                composite: function (e, t, n) {
                  this.attr({ in: e, in2: t, operator: n });
                },
                flood: function (e, t) {
                  this.attr("flood-color", e),
                    null != t && this.attr("flood-opacity", t);
                },
                offset: function (e, t) {
                  this.attr({ dx: e, dy: t });
                },
                image: function (e) {
                  this.attr("href", e, SVG.xlink);
                },
                displacementMap: function (e, t, n, i, o) {
                  this.attr({
                    in: e,
                    in2: t,
                    scale: n,
                    xChannelSelector: i,
                    yChannelSelector: o,
                  });
                },
                gaussianBlur: function (e, t) {
                  null != e || null != t
                    ? this.attr(
                        "stdDeviation",
                        (function (e) {
                          if (!Array.isArray(e)) return e;
                          for (var t = 0, n = e.length, i = []; t < n; t++)
                            i.push(e[t]);
                          return i.join(" ");
                        })(Array.prototype.slice.call(arguments))
                      )
                    : this.attr("stdDeviation", "0 0");
                },
                morphology: function (e, t) {
                  this.attr({ operator: e, radius: t });
                },
                tile: function () {},
                turbulence: function (e, t, n, i, o) {
                  this.attr({
                    numOctaves: t,
                    seed: n,
                    stitchTiles: i,
                    baseFrequency: e,
                    type: o,
                  });
                },
              },
              n = {
                merge: function () {
                  var e;
                  if (arguments[0] instanceof SVG.Set) {
                    var t = this;
                    arguments[0].each(function (e) {
                      this instanceof SVG.MergeNode
                        ? t.put(this)
                        : (this instanceof SVG.Effect ||
                            this instanceof SVG.ParentEffect) &&
                          t.put(new SVG.MergeNode(this));
                    });
                  } else {
                    e = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                    for (var n = 0; n < e.length; n++)
                      e[n] instanceof SVG.MergeNode
                        ? this.put(e[n])
                        : this.put(new SVG.MergeNode(e[n]));
                  }
                },
                componentTransfer: function (e) {
                  if (
                    ((this.rgb = new SVG.Set()),
                    ["r", "g", "b", "a"].forEach(
                      function (e) {
                        (this[e] = new SVG["Func" + e.toUpperCase()](
                          "identity"
                        )),
                          this.rgb.add(this[e]),
                          this.node.appendChild(this[e].node);
                      }.bind(this)
                    ),
                    e)
                  )
                    for (var t in (e.rgb &&
                      (["r", "g", "b"].forEach(
                        function (t) {
                          this[t].attr(e.rgb);
                        }.bind(this)
                      ),
                      delete e.rgb),
                    e))
                      this[t].attr(e[t]);
                },
                diffuseLighting: function (e, t, n) {
                  this.attr({
                    surfaceScale: e,
                    diffuseConstant: t,
                    kernelUnitLength: n,
                  });
                },
                specularLighting: function (e, t, n, i) {
                  this.attr({
                    surfaceScale: e,
                    diffuseConstant: t,
                    specularExponent: n,
                    kernelUnitLength: i,
                  });
                },
              },
              i = {
                distantLight: function (e, t) {
                  this.attr({ azimuth: e, elevation: t });
                },
                pointLight: function (e, t, n) {
                  this.attr({ x: e, y: t, z: n });
                },
                spotLight: function (e, t, n, i, o, a) {
                  this.attr({
                    x: e,
                    y: t,
                    z: n,
                    pointsAtX: i,
                    pointsAtY: o,
                    pointsAtZ: a,
                  });
                },
                mergeNode: function (e) {
                  this.attr("in", e);
                },
              };
            function o(e) {
              return (
                Array.isArray(e) && (e = new SVG.Array(e)),
                e
                  .toString()
                  .replace(/^\s+/, "")
                  .replace(/\s+$/, "")
                  .replace(/\s+/g, " ")
              );
            }
            function a() {
              var e = function () {};
              for (var t in ("function" ==
                typeof arguments[arguments.length - 1] &&
                ((e = arguments[arguments.length - 1]),
                Array.prototype.splice.call(
                  arguments,
                  arguments.length - 1,
                  1
                )),
              arguments))
                for (var n in arguments[t]) e(arguments[t][n], n, arguments[t]);
            }
            ["r", "g", "b", "a"].forEach(function (e) {
              i["Func" + e.toUpperCase()] = function (e) {
                switch ((this.attr("type", e), e)) {
                  case "table":
                    this.attr("tableValues", arguments[1]);
                    break;
                  case "linear":
                    this.attr("slope", arguments[1]),
                      this.attr("intercept", arguments[2]);
                    break;
                  case "gamma":
                    this.attr("amplitude", arguments[1]),
                      this.attr("exponent", arguments[2]),
                      this.attr("offset", arguments[2]);
                }
              };
            }),
              a(t, function (e, t) {
                var n = t.charAt(0).toUpperCase() + t.slice(1);
                SVG[n + "Effect"] = SVG.invent({
                  create: function () {
                    this.constructor.call(this, SVG.create("fe" + n)),
                      e.apply(this, arguments),
                      this.result(this.attr("id") + "Out");
                  },
                  inherit: SVG.Effect,
                  extend: {},
                });
              }),
              a(n, function (e, t) {
                var n = t.charAt(0).toUpperCase() + t.slice(1);
                SVG[n + "Effect"] = SVG.invent({
                  create: function () {
                    this.constructor.call(this, SVG.create("fe" + n)),
                      e.apply(this, arguments),
                      this.result(this.attr("id") + "Out");
                  },
                  inherit: SVG.ParentEffect,
                  extend: {},
                });
              }),
              a(i, function (e, t) {
                var n = t.charAt(0).toUpperCase() + t.slice(1);
                SVG[n] = SVG.invent({
                  create: function () {
                    this.constructor.call(this, SVG.create("fe" + n)),
                      e.apply(this, arguments);
                  },
                  inherit: SVG.ChildEffect,
                  extend: {},
                });
              }),
              SVG.extend(SVG.MergeEffect, {
                in: function (e) {
                  return (
                    e instanceof SVG.MergeNode
                      ? this.add(e, 0)
                      : this.add(new SVG.MergeNode(e), 0),
                    this
                  );
                },
              }),
              SVG.extend(
                SVG.CompositeEffect,
                SVG.BlendEffect,
                SVG.DisplacementMapEffect,
                {
                  in2: function (e) {
                    return null == e
                      ? (this.parent() &&
                          this.parent()
                            .select('[result="' + this.attr("in2") + '"]')
                            .get(0)) ||
                          this.attr("in2")
                      : this.attr("in2", e);
                  },
                }
              ),
              (SVG.filter = {
                sepiatone: [
                  0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172,
                  0.334, 0.111, 0, 0, 0, 0, 0, 1, 0,
                ],
              });
          }.call(void 0),
          (function () {
            function e(e, o, a, s, r, l, c) {
              for (
                var u = e.slice(o, a || c),
                  d = s.slice(r, l || c),
                  h = 0,
                  p = { pos: [0, 0], start: [0, 0] },
                  f = { pos: [0, 0], start: [0, 0] };
                (u[h] = t.call(p, u[h])),
                  (d[h] = t.call(f, d[h])),
                  u[h][0] != d[h][0] ||
                  "M" == u[h][0] ||
                  ("A" == u[h][0] && (u[h][4] != d[h][4] || u[h][5] != d[h][5]))
                    ? (Array.prototype.splice.apply(
                        u,
                        [h, 1].concat(i.call(p, u[h]))
                      ),
                      Array.prototype.splice.apply(
                        d,
                        [h, 1].concat(i.call(f, d[h]))
                      ))
                    : ((u[h] = n.call(p, u[h])), (d[h] = n.call(f, d[h]))),
                  ++h != u.length || h != d.length;

              )
                h == u.length &&
                  u.push([
                    "C",
                    p.pos[0],
                    p.pos[1],
                    p.pos[0],
                    p.pos[1],
                    p.pos[0],
                    p.pos[1],
                  ]),
                  h == d.length &&
                    d.push([
                      "C",
                      f.pos[0],
                      f.pos[1],
                      f.pos[0],
                      f.pos[1],
                      f.pos[0],
                      f.pos[1],
                    ]);
              return { start: u, dest: d };
            }
            function t(e) {
              switch (e[0]) {
                case "z":
                case "Z":
                  (e[0] = "L"), (e[1] = this.start[0]), (e[2] = this.start[1]);
                  break;
                case "H":
                  (e[0] = "L"), (e[2] = this.pos[1]);
                  break;
                case "V":
                  (e[0] = "L"), (e[2] = e[1]), (e[1] = this.pos[0]);
                  break;
                case "T":
                  (e[0] = "Q"),
                    (e[3] = e[1]),
                    (e[4] = e[2]),
                    (e[1] = this.reflection[1]),
                    (e[2] = this.reflection[0]);
                  break;
                case "S":
                  (e[0] = "C"),
                    (e[6] = e[4]),
                    (e[5] = e[3]),
                    (e[4] = e[2]),
                    (e[3] = e[1]),
                    (e[2] = this.reflection[1]),
                    (e[1] = this.reflection[0]);
              }
              return e;
            }
            function n(e) {
              var t = e.length;
              return (
                (this.pos = [e[t - 2], e[t - 1]]),
                -1 != "SCQT".indexOf(e[0]) &&
                  (this.reflection = [
                    2 * this.pos[0] - e[t - 4],
                    2 * this.pos[1] - e[t - 3],
                  ]),
                e
              );
            }
            function i(e) {
              var t = [e];
              switch (e[0]) {
                case "M":
                  return (this.pos = this.start = [e[1], e[2]]), t;
                case "L":
                  (e[5] = e[3] = e[1]),
                    (e[6] = e[4] = e[2]),
                    (e[1] = this.pos[0]),
                    (e[2] = this.pos[1]);
                  break;
                case "Q":
                  (e[6] = e[4]),
                    (e[5] = e[3]),
                    (e[4] = (1 * e[4]) / 3 + (2 * e[2]) / 3),
                    (e[3] = (1 * e[3]) / 3 + (2 * e[1]) / 3),
                    (e[2] = (1 * this.pos[1]) / 3 + (2 * e[2]) / 3),
                    (e[1] = (1 * this.pos[0]) / 3 + (2 * e[1]) / 3);
                  break;
                case "A":
                  (t = (function (e, t) {
                    var n,
                      i,
                      o,
                      a,
                      s,
                      r,
                      l,
                      c,
                      u,
                      d,
                      h,
                      p,
                      f,
                      g,
                      m,
                      v,
                      b,
                      x,
                      y,
                      w,
                      S,
                      k,
                      A,
                      C,
                      M,
                      P,
                      E = Math.abs(t[1]),
                      L = Math.abs(t[2]),
                      T = t[3] % 360,
                      O = t[4],
                      R = t[5],
                      I = t[6],
                      N = t[7],
                      _ = new SVG.Point(e),
                      D = new SVG.Point(I, N),
                      z = [];
                    if (0 === E || 0 === L || (_.x === D.x && _.y === D.y))
                      return [["C", _.x, _.y, D.x, D.y, D.x, D.y]];
                    for (
                      (i =
                        ((n = new SVG.Point(
                          (_.x - D.x) / 2,
                          (_.y - D.y) / 2
                        ).transform(new SVG.Matrix().rotate(T))).x *
                          n.x) /
                          (E * E) +
                        (n.y * n.y) / (L * L)) > 1 &&
                        ((E *= i = Math.sqrt(i)), (L *= i)),
                        o = new SVG.Matrix()
                          .rotate(T)
                          .scale(1 / E, 1 / L)
                          .rotate(-T),
                        _ = _.transform(o),
                        r =
                          (a = [(D = D.transform(o)).x - _.x, D.y - _.y])[0] *
                            a[0] +
                          a[1] * a[1],
                        s = Math.sqrt(r),
                        a[0] /= s,
                        a[1] /= s,
                        l = r < 4 ? Math.sqrt(1 - r / 4) : 0,
                        O === R && (l *= -1),
                        c = new SVG.Point(
                          (D.x + _.x) / 2 + l * -a[1],
                          (D.y + _.y) / 2 + l * a[0]
                        ),
                        u = new SVG.Point(_.x - c.x, _.y - c.y),
                        d = new SVG.Point(D.x - c.x, D.y - c.y),
                        h = Math.acos(u.x / Math.sqrt(u.x * u.x + u.y * u.y)),
                        u.y < 0 && (h *= -1),
                        p = Math.acos(d.x / Math.sqrt(d.x * d.x + d.y * d.y)),
                        d.y < 0 && (p *= -1),
                        R && h > p && (p += 2 * Math.PI),
                        !R && h < p && (p -= 2 * Math.PI),
                        v = [],
                        b = h,
                        f =
                          (p - h) /
                          (g = Math.ceil((2 * Math.abs(h - p)) / Math.PI)),
                        m = (4 * Math.tan(f / 4)) / 3,
                        S = 0;
                      S <= g;
                      S++
                    )
                      (y = Math.cos(b)),
                        (x = Math.sin(b)),
                        (w = new SVG.Point(c.x + y, c.y + x)),
                        (v[S] = [
                          new SVG.Point(w.x + m * x, w.y - m * y),
                          w,
                          new SVG.Point(w.x - m * x, w.y + m * y),
                        ]),
                        (b += f);
                    for (
                      v[0][0] = v[0][1].clone(),
                        v[v.length - 1][2] = v[v.length - 1][1].clone(),
                        o = new SVG.Matrix().rotate(T).scale(E, L).rotate(-T),
                        S = 0,
                        k = v.length;
                      S < k;
                      S++
                    )
                      (v[S][0] = v[S][0].transform(o)),
                        (v[S][1] = v[S][1].transform(o)),
                        (v[S][2] = v[S][2].transform(o));
                    for (S = 1, k = v.length; S < k; S++)
                      (A = (w = v[S - 1][2]).x),
                        (C = w.y),
                        (M = (w = v[S][0]).x),
                        (P = w.y),
                        (I = (w = v[S][1]).x),
                        (N = w.y),
                        z.push(["C", A, C, M, P, I, N]);
                    return z;
                  })(this.pos, e)),
                    (e = t[0]);
              }
              return (
                (e[0] = "C"),
                (this.pos = [e[5], e[6]]),
                (this.reflection = [2 * e[5] - e[3], 2 * e[6] - e[4]]),
                t
              );
            }
            function o(e, t) {
              if (!1 === t) return !1;
              for (var n = t, i = e.length; n < i; ++n)
                if ("M" == e[n][0]) return n;
              return !1;
            }
            SVG.extend(SVG.PathArray, {
              morph: function (t) {
                for (
                  var n = this.value,
                    i = this.parse(t),
                    a = 0,
                    s = 0,
                    r = !1,
                    l = !1;
                  !1 !== a || !1 !== s;

                ) {
                  var c;
                  (r = o(n, !1 !== a && a + 1)),
                    (l = o(i, !1 !== s && s + 1)),
                    !1 === a &&
                      (a =
                        0 == (c = new SVG.PathArray(u.start).bbox()).height ||
                        0 == c.width
                          ? n.push(n[0]) - 1
                          : n.push([
                              "M",
                              c.x + c.width / 2,
                              c.y + c.height / 2,
                            ]) - 1),
                    !1 === s &&
                      (s =
                        0 == (c = new SVG.PathArray(u.dest).bbox()).height ||
                        0 == c.width
                          ? i.push(i[0]) - 1
                          : i.push([
                              "M",
                              c.x + c.width / 2,
                              c.y + c.height / 2,
                            ]) - 1);
                  var u = e(n, a, r, i, s, l);
                  (n = n
                    .slice(0, a)
                    .concat(u.start, !1 === r ? [] : n.slice(r))),
                    (i = i
                      .slice(0, s)
                      .concat(u.dest, !1 === l ? [] : i.slice(l))),
                    (a = !1 !== r && a + u.start.length),
                    (s = !1 !== l && s + u.dest.length);
                }
                return (
                  (this.value = n),
                  (this.destination = new SVG.PathArray()),
                  (this.destination.value = i),
                  this
                );
              },
            });
          })(),
          function () {
            function e(e) {
              e.remember("_draggable", this), (this.el = e);
            }
            (e.prototype.init = function (e, t) {
              var n = this;
              (this.constraint = e),
                (this.value = t),
                this.el.on("mousedown.drag", function (e) {
                  n.start(e);
                }),
                this.el.on("touchstart.drag", function (e) {
                  n.start(e);
                });
            }),
              (e.prototype.transformPoint = function (e, t) {
                var n =
                  ((e = e || window.event).changedTouches &&
                    e.changedTouches[0]) ||
                  e;
                return (
                  (this.p.x = n.clientX - (t || 0)),
                  (this.p.y = n.clientY),
                  this.p.matrixTransform(this.m)
                );
              }),
              (e.prototype.getBBox = function () {
                var e = this.el.bbox();
                return (
                  this.el instanceof SVG.Nested && (e = this.el.rbox()),
                  (this.el instanceof SVG.G ||
                    this.el instanceof SVG.Use ||
                    this.el instanceof SVG.Nested) &&
                    ((e.x = this.el.x()), (e.y = this.el.y())),
                  e
                );
              }),
              (e.prototype.start = function (e) {
                if (
                  ("click" != e.type &&
                    "mousedown" != e.type &&
                    "mousemove" != e.type) ||
                  1 == (e.which || e.buttons)
                ) {
                  var t = this;
                  if (
                    (this.el.fire("beforedrag", { event: e, handler: this }),
                    !this.el.event().defaultPrevented)
                  ) {
                    e.preventDefault(),
                      e.stopPropagation(),
                      (this.parent =
                        this.parent ||
                        this.el.parent(SVG.Nested) ||
                        this.el.parent(SVG.Doc)),
                      (this.p = this.parent.node.createSVGPoint()),
                      (this.m = this.el.node.getScreenCTM().inverse());
                    var n,
                      i = this.getBBox();
                    if (this.el instanceof SVG.Text)
                      switch (
                        ((n = this.el.node.getComputedTextLength()),
                        this.el.attr("text-anchor"))
                      ) {
                        case "middle":
                          n /= 2;
                          break;
                        case "start":
                          n = 0;
                      }
                    (this.startPoints = {
                      point: this.transformPoint(e, n),
                      box: i,
                      transform: this.el.transform(),
                    }),
                      SVG.on(window, "mousemove.drag", function (e) {
                        t.drag(e);
                      }),
                      SVG.on(window, "touchmove.drag", function (e) {
                        t.drag(e);
                      }),
                      SVG.on(window, "mouseup.drag", function (e) {
                        t.end(e);
                      }),
                      SVG.on(window, "touchend.drag", function (e) {
                        t.end(e);
                      }),
                      this.el.fire("dragstart", {
                        event: e,
                        p: this.startPoints.point,
                        m: this.m,
                        handler: this,
                      });
                  }
                }
              }),
              (e.prototype.drag = function (e) {
                var t = this.getBBox(),
                  n = this.transformPoint(e),
                  i = this.startPoints.box.x + n.x - this.startPoints.point.x,
                  o = this.startPoints.box.y + n.y - this.startPoints.point.y,
                  a = this.constraint,
                  s = n.x - this.startPoints.point.x,
                  r = n.y - this.startPoints.point.y;
                if (
                  (this.el.fire("dragmove", {
                    event: e,
                    p: n,
                    m: this.m,
                    handler: this,
                  }),
                  this.el.event().defaultPrevented)
                )
                  return n;
                if ("function" == typeof a) {
                  var l = a.call(this.el, i, o, this.m);
                  "boolean" == typeof l && (l = { x: l, y: l }),
                    !0 === l.x ? this.el.x(i) : !1 !== l.x && this.el.x(l.x),
                    !0 === l.y ? this.el.y(o) : !1 !== l.y && this.el.y(l.y);
                } else
                  "object" == typeof a &&
                    (null != a.minX && i < a.minX
                      ? (s = (i = a.minX) - this.startPoints.box.x)
                      : null != a.maxX &&
                        i > a.maxX - t.width &&
                        (s = (i = a.maxX - t.width) - this.startPoints.box.x),
                    null != a.minY && o < a.minY
                      ? (r = (o = a.minY) - this.startPoints.box.y)
                      : null != a.maxY &&
                        o > a.maxY - t.height &&
                        (r = (o = a.maxY - t.height) - this.startPoints.box.y),
                    null != a.snapToGrid &&
                      ((i -= i % a.snapToGrid),
                      (o -= o % a.snapToGrid),
                      (s -= s % a.snapToGrid),
                      (r -= r % a.snapToGrid)),
                    this.el instanceof SVG.G
                      ? this.el
                          .matrix(this.startPoints.transform)
                          .transform({ x: s, y: r }, !0)
                      : this.el.move(i, o));
                return n;
              }),
              (e.prototype.end = function (e) {
                var t = this.drag(e);
                this.el.fire("dragend", {
                  event: e,
                  p: t,
                  m: this.m,
                  handler: this,
                }),
                  SVG.off(window, "mousemove.drag"),
                  SVG.off(window, "touchmove.drag"),
                  SVG.off(window, "mouseup.drag"),
                  SVG.off(window, "touchend.drag");
              }),
              SVG.extend(SVG.Element, {
                draggable: function (t, n) {
                  ("function" != typeof t && "object" != typeof t) ||
                    ((n = t), (t = !0));
                  var i = this.remember("_draggable") || new e(this);
                  return (
                    (t = void 0 === t || t)
                      ? i.init(n || {}, t)
                      : (this.off("mousedown.drag"),
                        this.off("touchstart.drag")),
                    this
                  );
                },
              });
          }.call(void 0),
          (function () {
            function e(e) {
              (this.el = e),
                e.remember("_selectHandler", this),
                (this.pointSelection = { isSelected: !1 }),
                (this.rectSelection = { isSelected: !1 }),
                (this.pointsList = {
                  lt: [0, 0],
                  rt: ["width", 0],
                  rb: ["width", "height"],
                  lb: [0, "height"],
                  t: ["width", 0],
                  r: ["width", "height"],
                  b: ["width", "height"],
                  l: [0, "height"],
                }),
                (this.pointCoord = function (e, t, n) {
                  var i = "string" != typeof e ? e : t[e];
                  return n ? i / 2 : i;
                }),
                (this.pointCoords = function (e, t) {
                  var n = this.pointsList[e];
                  return {
                    x: this.pointCoord(n[0], t, "t" === e || "b" === e),
                    y: this.pointCoord(n[1], t, "r" === e || "l" === e),
                  };
                });
            }
            (e.prototype.init = function (e, t) {
              var n = this.el.bbox();
              this.options = {};
              var i = this.el.selectize.defaults.points;
              for (var o in this.el.selectize.defaults)
                (this.options[o] = this.el.selectize.defaults[o]),
                  void 0 !== t[o] && (this.options[o] = t[o]);
              var a = ["points", "pointsExclude"];
              for (var o in a) {
                var s = this.options[a[o]];
                "string" == typeof s
                  ? (s = s.length > 0 ? s.split(/\s*,\s*/i) : [])
                  : "boolean" == typeof s &&
                    "points" === a[o] &&
                    (s = s ? i : []),
                  (this.options[a[o]] = s);
              }
              (this.options.points = [i, this.options.points].reduce(function (
                e,
                t
              ) {
                return e.filter(function (e) {
                  return t.indexOf(e) > -1;
                });
              })),
                (this.options.points = [
                  this.options.points,
                  this.options.pointsExclude,
                ].reduce(function (e, t) {
                  return e.filter(function (e) {
                    return t.indexOf(e) < 0;
                  });
                })),
                (this.parent = this.el.parent()),
                (this.nested = this.nested || this.parent.group()),
                this.nested.matrix(new SVG.Matrix(this.el).translate(n.x, n.y)),
                this.options.deepSelect &&
                -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type)
                  ? this.selectPoints(e)
                  : this.selectRect(e),
                this.observe(),
                this.cleanup();
            }),
              (e.prototype.selectPoints = function (e) {
                return (
                  (this.pointSelection.isSelected = e),
                  this.pointSelection.set ||
                    ((this.pointSelection.set = this.parent.set()),
                    this.drawPoints()),
                  this
                );
              }),
              (e.prototype.getPointArray = function () {
                var e = this.el.bbox();
                return this.el
                  .array()
                  .valueOf()
                  .map(function (t) {
                    return [t[0] - e.x, t[1] - e.y];
                  });
              }),
              (e.prototype.drawPoints = function () {
                for (
                  var e = this, t = this.getPointArray(), n = 0, i = t.length;
                  n < i;
                  ++n
                ) {
                  var o = (function (t) {
                      return function (n) {
                        (n = n || window.event).preventDefault
                          ? n.preventDefault()
                          : (n.returnValue = !1),
                          n.stopPropagation();
                        var i = n.pageX || n.touches[0].pageX,
                          o = n.pageY || n.touches[0].pageY;
                        e.el.fire("point", { x: i, y: o, i: t, event: n });
                      };
                    })(n),
                    a = this.drawPoint(t[n][0], t[n][1])
                      .addClass(this.options.classPoints)
                      .addClass(this.options.classPoints + "_point")
                      .on("touchstart", o)
                      .on("mousedown", o);
                  this.pointSelection.set.add(a);
                }
              }),
              (e.prototype.drawPoint = function (e, t) {
                var n = this.options.pointType;
                switch (n) {
                  case "circle":
                    return this.drawCircle(e, t);
                  case "rect":
                    return this.drawRect(e, t);
                  default:
                    if ("function" == typeof n) return n.call(this, e, t);
                    throw new Error("Unknown " + n + " point type!");
                }
              }),
              (e.prototype.drawCircle = function (e, t) {
                return this.nested.circle(this.options.pointSize).center(e, t);
              }),
              (e.prototype.drawRect = function (e, t) {
                return this.nested
                  .rect(this.options.pointSize, this.options.pointSize)
                  .center(e, t);
              }),
              (e.prototype.updatePointSelection = function () {
                var e = this.getPointArray();
                this.pointSelection.set.each(function (t) {
                  (this.cx() === e[t][0] && this.cy() === e[t][1]) ||
                    this.center(e[t][0], e[t][1]);
                });
              }),
              (e.prototype.updateRectSelection = function () {
                var e = this,
                  t = this.el.bbox();
                if (
                  (this.rectSelection.set
                    .get(0)
                    .attr({ width: t.width, height: t.height }),
                  this.options.points.length &&
                    this.options.points.map(function (n, i) {
                      var o = e.pointCoords(n, t);
                      e.rectSelection.set.get(i + 1).center(o.x, o.y);
                    }),
                  this.options.rotationPoint)
                ) {
                  var n = this.rectSelection.set.length();
                  this.rectSelection.set.get(n - 1).center(t.width / 2, 20);
                }
              }),
              (e.prototype.selectRect = function (e) {
                var t = this,
                  n = this.el.bbox();
                function i(e) {
                  return function (n) {
                    (n = n || window.event).preventDefault
                      ? n.preventDefault()
                      : (n.returnValue = !1),
                      n.stopPropagation();
                    var i = n.pageX || n.touches[0].pageX,
                      o = n.pageY || n.touches[0].pageY;
                    t.el.fire(e, { x: i, y: o, event: n });
                  };
                }
                if (
                  ((this.rectSelection.isSelected = e),
                  (this.rectSelection.set =
                    this.rectSelection.set || this.parent.set()),
                  this.rectSelection.set.get(0) ||
                    this.rectSelection.set.add(
                      this.nested
                        .rect(n.width, n.height)
                        .addClass(this.options.classRect)
                    ),
                  this.options.points.length &&
                    this.rectSelection.set.length() < 2 &&
                    (this.options.points.map(function (e, o) {
                      var a = t.pointCoords(e, n),
                        s = t
                          .drawPoint(a.x, a.y)
                          .attr("class", t.options.classPoints + "_" + e)
                          .on("mousedown", i(e))
                          .on("touchstart", i(e));
                      t.rectSelection.set.add(s);
                    }),
                    this.rectSelection.set.each(function () {
                      this.addClass(t.options.classPoints);
                    })),
                  this.options.rotationPoint &&
                    ((this.options.points && !this.rectSelection.set.get(9)) ||
                      (!this.options.points && !this.rectSelection.set.get(1))))
                ) {
                  var o = function (e) {
                      (e = e || window.event).preventDefault
                        ? e.preventDefault()
                        : (e.returnValue = !1),
                        e.stopPropagation();
                      var n = e.pageX || e.touches[0].pageX,
                        i = e.pageY || e.touches[0].pageY;
                      t.el.fire("rot", { x: n, y: i, event: e });
                    },
                    a = this.drawPoint(n.width / 2, 20)
                      .attr("class", this.options.classPoints + "_rot")
                      .on("touchstart", o)
                      .on("mousedown", o);
                  this.rectSelection.set.add(a);
                }
              }),
              (e.prototype.handler = function () {
                var e = this.el.bbox();
                this.nested.matrix(new SVG.Matrix(this.el).translate(e.x, e.y)),
                  this.rectSelection.isSelected && this.updateRectSelection(),
                  this.pointSelection.isSelected && this.updatePointSelection();
              }),
              (e.prototype.observe = function () {
                var e = this;
                if (MutationObserver)
                  if (
                    this.rectSelection.isSelected ||
                    this.pointSelection.isSelected
                  )
                    (this.observerInst =
                      this.observerInst ||
                      new MutationObserver(function () {
                        e.handler();
                      })),
                      this.observerInst.observe(this.el.node, {
                        attributes: !0,
                      });
                  else
                    try {
                      this.observerInst.disconnect(), delete this.observerInst;
                    } catch (e) {}
                else
                  this.el.off("DOMAttrModified.select"),
                    (this.rectSelection.isSelected ||
                      this.pointSelection.isSelected) &&
                      this.el.on("DOMAttrModified.select", function () {
                        e.handler();
                      });
              }),
              (e.prototype.cleanup = function () {
                !this.rectSelection.isSelected &&
                  this.rectSelection.set &&
                  (this.rectSelection.set.each(function () {
                    this.remove();
                  }),
                  this.rectSelection.set.clear(),
                  delete this.rectSelection.set),
                  !this.pointSelection.isSelected &&
                    this.pointSelection.set &&
                    (this.pointSelection.set.each(function () {
                      this.remove();
                    }),
                    this.pointSelection.set.clear(),
                    delete this.pointSelection.set),
                  this.pointSelection.isSelected ||
                    this.rectSelection.isSelected ||
                    (this.nested.remove(), delete this.nested);
              }),
              SVG.extend(SVG.Element, {
                selectize: function (t, n) {
                  return (
                    "object" == typeof t && ((n = t), (t = !0)),
                    (this.remember("_selectHandler") || new e(this)).init(
                      void 0 === t || t,
                      n || {}
                    ),
                    this
                  );
                },
              }),
              (SVG.Element.prototype.selectize.defaults = {
                points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
                pointsExclude: [],
                classRect: "svg_select_boundingRect",
                classPoints: "svg_select_points",
                pointSize: 7,
                rotationPoint: !0,
                deepSelect: !1,
                pointType: "circle",
              });
          })(),
          (function () {
            (function () {
              function e(e) {
                e.remember("_resizeHandler", this),
                  (this.el = e),
                  (this.parameters = {}),
                  (this.lastUpdateCall = null),
                  (this.p = e.doc().node.createSVGPoint());
              }
              (e.prototype.transformPoint = function (e, t, n) {
                return (
                  (this.p.x = e - (this.offset.x - window.pageXOffset)),
                  (this.p.y = t - (this.offset.y - window.pageYOffset)),
                  this.p.matrixTransform(n || this.m)
                );
              }),
                (e.prototype._extractPosition = function (e) {
                  return {
                    x: null != e.clientX ? e.clientX : e.touches[0].clientX,
                    y: null != e.clientY ? e.clientY : e.touches[0].clientY,
                  };
                }),
                (e.prototype.init = function (e) {
                  var t = this;
                  if ((this.stop(), "stop" !== e)) {
                    for (var n in ((this.options = {}),
                    this.el.resize.defaults))
                      (this.options[n] = this.el.resize.defaults[n]),
                        void 0 !== e[n] && (this.options[n] = e[n]);
                    this.el.on("lt.resize", function (e) {
                      t.resize(e || window.event);
                    }),
                      this.el.on("rt.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("rb.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("lb.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("t.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("r.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("b.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("l.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("rot.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.el.on("point.resize", function (e) {
                        t.resize(e || window.event);
                      }),
                      this.update();
                  }
                }),
                (e.prototype.stop = function () {
                  return (
                    this.el.off("lt.resize"),
                    this.el.off("rt.resize"),
                    this.el.off("rb.resize"),
                    this.el.off("lb.resize"),
                    this.el.off("t.resize"),
                    this.el.off("r.resize"),
                    this.el.off("b.resize"),
                    this.el.off("l.resize"),
                    this.el.off("rot.resize"),
                    this.el.off("point.resize"),
                    this
                  );
                }),
                (e.prototype.resize = function (e) {
                  var t = this;
                  (this.m = this.el.node.getScreenCTM().inverse()),
                    (this.offset = {
                      x: window.pageXOffset,
                      y: window.pageYOffset,
                    });
                  var n = this._extractPosition(e.detail.event);
                  if (
                    ((this.parameters = {
                      type: this.el.type,
                      p: this.transformPoint(n.x, n.y),
                      x: e.detail.x,
                      y: e.detail.y,
                      box: this.el.bbox(),
                      rotation: this.el.transform().rotation,
                    }),
                    "text" === this.el.type &&
                      (this.parameters.fontSize = this.el.attr()["font-size"]),
                    void 0 !== e.detail.i)
                  ) {
                    var i = this.el.array().valueOf();
                    (this.parameters.i = e.detail.i),
                      (this.parameters.pointCoords = [
                        i[e.detail.i][0],
                        i[e.detail.i][1],
                      ]);
                  }
                  switch (e.type) {
                    case "lt":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t);
                        if (
                          this.parameters.box.width - n[0] > 0 &&
                          this.parameters.box.height - n[1] > 0
                        ) {
                          if ("text" === this.parameters.type)
                            return (
                              this.el.move(
                                this.parameters.box.x + n[0],
                                this.parameters.box.y
                              ),
                              void this.el.attr(
                                "font-size",
                                this.parameters.fontSize - n[0]
                              )
                            );
                          (n = this.checkAspectRatio(n)),
                            this.el
                              .move(
                                this.parameters.box.x + n[0],
                                this.parameters.box.y + n[1]
                              )
                              .size(
                                this.parameters.box.width - n[0],
                                this.parameters.box.height - n[1]
                              );
                        }
                      };
                      break;
                    case "rt":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 2);
                        if (
                          this.parameters.box.width + n[0] > 0 &&
                          this.parameters.box.height - n[1] > 0
                        ) {
                          if ("text" === this.parameters.type)
                            return (
                              this.el.move(
                                this.parameters.box.x - n[0],
                                this.parameters.box.y
                              ),
                              void this.el.attr(
                                "font-size",
                                this.parameters.fontSize + n[0]
                              )
                            );
                          (n = this.checkAspectRatio(n, !0)),
                            this.el
                              .move(
                                this.parameters.box.x,
                                this.parameters.box.y + n[1]
                              )
                              .size(
                                this.parameters.box.width + n[0],
                                this.parameters.box.height - n[1]
                              );
                        }
                      };
                      break;
                    case "rb":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 0);
                        if (
                          this.parameters.box.width + n[0] > 0 &&
                          this.parameters.box.height + n[1] > 0
                        ) {
                          if ("text" === this.parameters.type)
                            return (
                              this.el.move(
                                this.parameters.box.x - n[0],
                                this.parameters.box.y
                              ),
                              void this.el.attr(
                                "font-size",
                                this.parameters.fontSize + n[0]
                              )
                            );
                          (n = this.checkAspectRatio(n)),
                            this.el
                              .move(
                                this.parameters.box.x,
                                this.parameters.box.y
                              )
                              .size(
                                this.parameters.box.width + n[0],
                                this.parameters.box.height + n[1]
                              );
                        }
                      };
                      break;
                    case "lb":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 1);
                        if (
                          this.parameters.box.width - n[0] > 0 &&
                          this.parameters.box.height + n[1] > 0
                        ) {
                          if ("text" === this.parameters.type)
                            return (
                              this.el.move(
                                this.parameters.box.x + n[0],
                                this.parameters.box.y
                              ),
                              void this.el.attr(
                                "font-size",
                                this.parameters.fontSize - n[0]
                              )
                            );
                          (n = this.checkAspectRatio(n, !0)),
                            this.el
                              .move(
                                this.parameters.box.x + n[0],
                                this.parameters.box.y
                              )
                              .size(
                                this.parameters.box.width - n[0],
                                this.parameters.box.height + n[1]
                              );
                        }
                      };
                      break;
                    case "t":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 2);
                        if (this.parameters.box.height - n[1] > 0) {
                          if ("text" === this.parameters.type) return;
                          this.el
                            .move(
                              this.parameters.box.x,
                              this.parameters.box.y + n[1]
                            )
                            .height(this.parameters.box.height - n[1]);
                        }
                      };
                      break;
                    case "r":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 0);
                        if (this.parameters.box.width + n[0] > 0) {
                          if ("text" === this.parameters.type) return;
                          this.el
                            .move(this.parameters.box.x, this.parameters.box.y)
                            .width(this.parameters.box.width + n[0]);
                        }
                      };
                      break;
                    case "b":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 0);
                        if (this.parameters.box.height + n[1] > 0) {
                          if ("text" === this.parameters.type) return;
                          this.el
                            .move(this.parameters.box.x, this.parameters.box.y)
                            .height(this.parameters.box.height + n[1]);
                        }
                      };
                      break;
                    case "l":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(e, t, 1);
                        if (this.parameters.box.width - n[0] > 0) {
                          if ("text" === this.parameters.type) return;
                          this.el
                            .move(
                              this.parameters.box.x + n[0],
                              this.parameters.box.y
                            )
                            .width(this.parameters.box.width - n[0]);
                        }
                      };
                      break;
                    case "rot":
                      this.calc = function (e, t) {
                        var n = e + this.parameters.p.x,
                          i = t + this.parameters.p.y,
                          o = Math.atan2(
                            this.parameters.p.y -
                              this.parameters.box.y -
                              this.parameters.box.height / 2,
                            this.parameters.p.x -
                              this.parameters.box.x -
                              this.parameters.box.width / 2
                          ),
                          a = Math.atan2(
                            i -
                              this.parameters.box.y -
                              this.parameters.box.height / 2,
                            n -
                              this.parameters.box.x -
                              this.parameters.box.width / 2
                          ),
                          s =
                            this.parameters.rotation +
                            (180 * (a - o)) / Math.PI +
                            this.options.snapToAngle / 2;
                        this.el
                          .center(
                            this.parameters.box.cx,
                            this.parameters.box.cy
                          )
                          .rotate(
                            s - (s % this.options.snapToAngle),
                            this.parameters.box.cx,
                            this.parameters.box.cy
                          );
                      };
                      break;
                    case "point":
                      this.calc = function (e, t) {
                        var n = this.snapToGrid(
                            e,
                            t,
                            this.parameters.pointCoords[0],
                            this.parameters.pointCoords[1]
                          ),
                          i = this.el.array().valueOf();
                        (i[this.parameters.i][0] =
                          this.parameters.pointCoords[0] + n[0]),
                          (i[this.parameters.i][1] =
                            this.parameters.pointCoords[1] + n[1]),
                          this.el.plot(i);
                      };
                  }
                  this.el.fire("resizestart", {
                    dx: this.parameters.x,
                    dy: this.parameters.y,
                    event: e,
                  }),
                    SVG.on(window, "touchmove.resize", function (e) {
                      t.update(e || window.event);
                    }),
                    SVG.on(window, "touchend.resize", function () {
                      t.done();
                    }),
                    SVG.on(window, "mousemove.resize", function (e) {
                      t.update(e || window.event);
                    }),
                    SVG.on(window, "mouseup.resize", function () {
                      t.done();
                    });
                }),
                (e.prototype.update = function (e) {
                  if (e) {
                    var t = this._extractPosition(e),
                      n = this.transformPoint(t.x, t.y),
                      i = n.x - this.parameters.p.x,
                      o = n.y - this.parameters.p.y;
                    (this.lastUpdateCall = [i, o]),
                      this.calc(i, o),
                      this.el.fire("resizing", { dx: i, dy: o, event: e });
                  } else
                    this.lastUpdateCall &&
                      this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
                }),
                (e.prototype.done = function () {
                  (this.lastUpdateCall = null),
                    SVG.off(window, "mousemove.resize"),
                    SVG.off(window, "mouseup.resize"),
                    SVG.off(window, "touchmove.resize"),
                    SVG.off(window, "touchend.resize"),
                    this.el.fire("resizedone");
                }),
                (e.prototype.snapToGrid = function (e, t, n, i) {
                  var o;
                  return (
                    void 0 !== i
                      ? (o = [
                          (n + e) % this.options.snapToGrid,
                          (i + t) % this.options.snapToGrid,
                        ])
                      : ((n = null == n ? 3 : n),
                        (o = [
                          (this.parameters.box.x +
                            e +
                            (1 & n ? 0 : this.parameters.box.width)) %
                            this.options.snapToGrid,
                          (this.parameters.box.y +
                            t +
                            (2 & n ? 0 : this.parameters.box.height)) %
                            this.options.snapToGrid,
                        ])),
                    e < 0 && (o[0] -= this.options.snapToGrid),
                    t < 0 && (o[1] -= this.options.snapToGrid),
                    (e -=
                      Math.abs(o[0]) < this.options.snapToGrid / 2
                        ? o[0]
                        : o[0] -
                          (e < 0
                            ? -this.options.snapToGrid
                            : this.options.snapToGrid)),
                    (t -=
                      Math.abs(o[1]) < this.options.snapToGrid / 2
                        ? o[1]
                        : o[1] -
                          (t < 0
                            ? -this.options.snapToGrid
                            : this.options.snapToGrid)),
                    this.constraintToBox(e, t, n, i)
                  );
                }),
                (e.prototype.constraintToBox = function (e, t, n, i) {
                  var o,
                    a,
                    s = this.options.constraint || {};
                  return (
                    void 0 !== i
                      ? ((o = n), (a = i))
                      : ((o =
                          this.parameters.box.x +
                          (1 & n ? 0 : this.parameters.box.width)),
                        (a =
                          this.parameters.box.y +
                          (2 & n ? 0 : this.parameters.box.height))),
                    void 0 !== s.minX && o + e < s.minX && (e = s.minX - o),
                    void 0 !== s.maxX && o + e > s.maxX && (e = s.maxX - o),
                    void 0 !== s.minY && a + t < s.minY && (t = s.minY - a),
                    void 0 !== s.maxY && a + t > s.maxY && (t = s.maxY - a),
                    [e, t]
                  );
                }),
                (e.prototype.checkAspectRatio = function (e, t) {
                  if (!this.options.saveAspectRatio) return e;
                  var n = e.slice(),
                    i = this.parameters.box.width / this.parameters.box.height,
                    o = this.parameters.box.width + e[0],
                    a = this.parameters.box.height - e[1],
                    s = o / a;
                  return (
                    s < i
                      ? ((n[1] = o / i - this.parameters.box.height),
                        t && (n[1] = -n[1]))
                      : s > i &&
                        ((n[0] = this.parameters.box.width - a * i),
                        t && (n[0] = -n[0])),
                    n
                  );
                }),
                SVG.extend(SVG.Element, {
                  resize: function (t) {
                    return (
                      (this.remember("_resizeHandler") || new e(this)).init(
                        t || {}
                      ),
                      this
                    );
                  },
                }),
                (SVG.Element.prototype.resize.defaults = {
                  snapToAngle: 0.1,
                  snapToGrid: 1,
                  constraint: {},
                  saveAspectRatio: !1,
                });
            }).call(this);
          })(),
          void 0 === window.Apex && (window.Apex = {});
        var Ye = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "initModules",
                  value: function () {
                    (this.ctx.publicMethods = [
                      "updateOptions",
                      "updateSeries",
                      "appendData",
                      "appendSeries",
                      "isSeriesHidden",
                      "toggleSeries",
                      "showSeries",
                      "hideSeries",
                      "setLocale",
                      "resetSeries",
                      "zoomX",
                      "toggleDataPointSelection",
                      "dataURI",
                      "exportToCSV",
                      "addXaxisAnnotation",
                      "addYaxisAnnotation",
                      "addPointAnnotation",
                      "clearAnnotations",
                      "removeAnnotation",
                      "paper",
                      "destroy",
                    ]),
                      (this.ctx.eventList = [
                        "click",
                        "mousedown",
                        "mousemove",
                        "mouseleave",
                        "touchstart",
                        "touchmove",
                        "touchleave",
                        "mouseup",
                        "touchend",
                      ]),
                      (this.ctx.animations = new w(this.ctx)),
                      (this.ctx.axes = new te(this.ctx)),
                      (this.ctx.core = new Ve(this.ctx.el, this.ctx)),
                      (this.ctx.config = new j({})),
                      (this.ctx.data = new Y(this.ctx)),
                      (this.ctx.grid = new q(this.ctx)),
                      (this.ctx.graphics = new k(this.ctx)),
                      (this.ctx.coreUtils = new A(this.ctx)),
                      (this.ctx.crosshairs = new ne(this.ctx)),
                      (this.ctx.events = new J(this.ctx)),
                      (this.ctx.exports = new X(this.ctx)),
                      (this.ctx.localization = new ee(this.ctx)),
                      (this.ctx.options = new I()),
                      (this.ctx.responsive = new ie(this.ctx)),
                      (this.ctx.series = new U(this.ctx)),
                      (this.ctx.theme = new oe(this.ctx)),
                      (this.ctx.formatters = new E(this.ctx)),
                      (this.ctx.titleSubtitle = new ae(this.ctx)),
                      (this.ctx.legend = new he(this.ctx)),
                      (this.ctx.toolbar = new pe(this.ctx)),
                      (this.ctx.tooltip = new we(this.ctx)),
                      (this.ctx.dimensions = new ue(this.ctx)),
                      (this.ctx.updateHelpers = new Ue(this.ctx)),
                      (this.ctx.zoomPanSelection = new fe(this.ctx)),
                      (this.ctx.w.globals.tooltip = new we(this.ctx));
                  },
                },
              ]),
              e
            );
          })(),
          Xe = (function () {
            function e(t) {
              r(this, e), (this.ctx = t), (this.w = t.w);
            }
            return (
              c(e, [
                {
                  key: "clear",
                  value: function (e) {
                    var t = e.isUpdating;
                    this.ctx.zoomPanSelection &&
                      this.ctx.zoomPanSelection.destroy(),
                      this.ctx.toolbar && this.ctx.toolbar.destroy(),
                      (this.ctx.animations = null),
                      (this.ctx.axes = null),
                      (this.ctx.annotations = null),
                      (this.ctx.core = null),
                      (this.ctx.data = null),
                      (this.ctx.grid = null),
                      (this.ctx.series = null),
                      (this.ctx.responsive = null),
                      (this.ctx.theme = null),
                      (this.ctx.formatters = null),
                      (this.ctx.titleSubtitle = null),
                      (this.ctx.legend = null),
                      (this.ctx.dimensions = null),
                      (this.ctx.options = null),
                      (this.ctx.crosshairs = null),
                      (this.ctx.zoomPanSelection = null),
                      (this.ctx.updateHelpers = null),
                      (this.ctx.toolbar = null),
                      (this.ctx.localization = null),
                      (this.ctx.w.globals.tooltip = null),
                      this.clearDomElements({ isUpdating: t });
                  },
                },
                {
                  key: "killSVG",
                  value: function (e) {
                    e.each(function (e, t) {
                      this.removeClass("*"), this.off(), this.stop();
                    }, !0),
                      e.ungroup(),
                      e.clear();
                  },
                },
                {
                  key: "clearDomElements",
                  value: function (e) {
                    var t = this,
                      n = e.isUpdating,
                      i = this.w.globals.dom.Paper.node;
                    i.parentNode &&
                      i.parentNode.parentNode &&
                      !n &&
                      (i.parentNode.parentNode.style.minHeight = "unset");
                    var o = this.w.globals.dom.baseEl;
                    o &&
                      this.ctx.eventList.forEach(function (e) {
                        o.removeEventListener(e, t.ctx.events.documentEvent);
                      });
                    var a = this.w.globals.dom;
                    if (null !== this.ctx.el)
                      for (; this.ctx.el.firstChild; )
                        this.ctx.el.removeChild(this.ctx.el.firstChild);
                    this.killSVG(a.Paper),
                      a.Paper.remove(),
                      (a.elWrap = null),
                      (a.elGraphical = null),
                      (a.elLegendWrap = null),
                      (a.elLegendForeign = null),
                      (a.baseEl = null),
                      (a.elGridRect = null),
                      (a.elGridRectMask = null),
                      (a.elGridRectMarkerMask = null),
                      (a.elForecastMask = null),
                      (a.elNonForecastMask = null),
                      (a.elDefs = null);
                  },
                },
              ]),
              e
            );
          })(),
          Ke = new WeakMap(),
          qe = (function () {
            function e(t, n) {
              r(this, e),
                (this.opts = n),
                (this.ctx = this),
                (this.w = new F(n).init()),
                (this.el = t),
                (this.w.globals.cuid = y.randomId()),
                (this.w.globals.chartID = this.w.config.chart.id
                  ? y.escapeString(this.w.config.chart.id)
                  : this.w.globals.cuid),
                new Ye(this).initModules(),
                (this.create = y.bind(this.create, this)),
                (this.windowResizeHandler =
                  this._windowResizeHandler.bind(this)),
                (this.parentResizeHandler =
                  this._parentResizeCallback.bind(this));
            }
            return (
              c(
                e,
                [
                  {
                    key: "render",
                    value: function () {
                      var e = this;
                      return new Promise(function (t, n) {
                        if (null !== e.el) {
                          void 0 === Apex._chartInstances &&
                            (Apex._chartInstances = []),
                            e.w.config.chart.id &&
                              Apex._chartInstances.push({
                                id: e.w.globals.chartID,
                                group: e.w.config.chart.group,
                                chart: e,
                              }),
                            e.setLocale(e.w.config.chart.defaultLocale);
                          var i = e.w.config.chart.events.beforeMount;
                          "function" == typeof i && i(e, e.w),
                            e.events.fireEvent("beforeMount", [e, e.w]),
                            window.addEventListener(
                              "resize",
                              e.windowResizeHandler
                            ),
                            (function (e, t) {
                              var n = !1;
                              if (e.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                                var i = e.getBoundingClientRect();
                                ("none" !== e.style.display && 0 !== i.width) ||
                                  (n = !0);
                              }
                              var o = new ResizeObserver(function (i) {
                                n && t.call(e, i), (n = !0);
                              });
                              e.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                                ? Array.from(e.children).forEach(function (e) {
                                    return o.observe(e);
                                  })
                                : o.observe(e),
                                Ke.set(t, o);
                            })(e.el.parentNode, e.parentResizeHandler);
                          var o = e.el.getRootNode && e.el.getRootNode(),
                            a = y.is("ShadowRoot", o),
                            s = e.el.ownerDocument,
                            r = a
                              ? o.getElementById("apexcharts-css")
                              : s.getElementById("apexcharts-css");
                          if (!r) {
                            var l;
                            ((r = document.createElement("style")).id =
                              "apexcharts-css"),
                              (r.textContent =
                                '@keyframes opaque {\n  0% {\n    opacity: 0\n  }\n\n  to {\n    opacity: 1\n  }\n}\n\n@keyframes resizeanim {\n\n  0%,\n  to {\n    opacity: 0\n  }\n}\n\n.apexcharts-canvas {\n  position: relative;\n  user-select: none\n}\n\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5)\n}\n\n.apexcharts-inner {\n  position: relative\n}\n\n.apexcharts-text tspan {\n  font-family: inherit\n}\n\nrect.legend-mouseover-inactive,\n.legend-mouseover-inactive rect,\n.legend-mouseover-inactive path,\n.legend-mouseover-inactive circle,\n.legend-mouseover-inactive line,\n.legend-mouseover-inactive text.apexcharts-yaxis-title-text,\n.legend-mouseover-inactive text.apexcharts-yaxis-label {\n  transition: .15s ease all;\n  opacity: .2\n}\n\n.apexcharts-legend-text {\n  padding-left: 15px;\n  margin-left: -15px;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, .96)\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, .8)\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #eceff1;\n  border-bottom: 1px solid #ddd\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, .7);\n  border-bottom: 1px solid #333\n}\n\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: 600\n}\n\n.apexcharts-tooltip-text-goals-label:empty,\n.apexcharts-tooltip-text-goals-value:empty,\n.apexcharts-tooltip-text-y-label:empty,\n.apexcharts-tooltip-text-y-value:empty,\n.apexcharts-tooltip-text-z-value:empty,\n.apexcharts-tooltip-title:empty {\n  display: none\n}\n\n.apexcharts-tooltip-text-goals-label,\n.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px\n}\n\n.apexcharts-tooltip-goals-group,\n.apexcharts-tooltip-text-goals-label,\n.apexcharts-tooltip-text-goals-value {\n  display: flex\n}\n\n.apexcharts-tooltip-text-goals-label:not(:empty),\n.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0;\n  margin-right: 10px;\n  border-radius: 50%\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px\n}\n\n.apexcharts-custom-tooltip,\n.apexcharts-tooltip-box {\n  padding: 4px 8px\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: 700\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: 700;\n  display: block;\n  margin-bottom: 5px\n}\n\n.apexcharts-xaxistooltip,\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #eceff1;\n  border: 1px solid #90a4ae\n}\n\n.apexcharts-xaxistooltip {\n  padding: 9px 10px;\n  transition: .15s ease all\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, .7);\n  border: 1px solid rgba(0, 0, 0, .5);\n  color: #fff\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-left: -6px\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-left: -7px\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, .5)\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, .5)\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-yaxistooltip {\n  padding: 4px 10px\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, .7);\n  border: 1px solid rgba(0, 0, 0, .5);\n  color: #fff\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-top: -6px\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-top: -7px\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, .5)\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, .5)\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: .15s ease all\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0\n}\n\n.apexcharts-selection-rect {\n  cursor: move\n}\n\n.svg_select_boundingRect,\n.svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_boundingRect,\n.apexcharts-selection-rect+g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_points_l,\n.apexcharts-selection-rect+g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-menu-icon,\n.apexcharts-pan-icon,\n.apexcharts-reset-icon,\n.apexcharts-selection-icon,\n.apexcharts-toolbar-custom-icon,\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6e8192;\n  text-align: center\n}\n\n.apexcharts-menu-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg {\n  fill: #6e8192\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(.76)\n}\n\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg {\n  fill: #f3f4f5\n}\n\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {\n  fill: #008ffb\n}\n\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {\n  fill: #333\n}\n\n.apexcharts-menu-icon,\n.apexcharts-selection-icon {\n  position: relative\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px\n}\n\n.apexcharts-menu-icon,\n.apexcharts-reset-icon,\n.apexcharts-zoom-icon {\n  transform: scale(.85)\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px\n}\n\n.apexcharts-pan-icon {\n  transform: scale(.62);\n  position: relative;\n  left: 1px;\n  top: 0\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6e8192;\n  stroke-width: 2\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008ffb\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0 6px 2px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: .15s ease all;\n  pointer-events: none\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: .15s ease all\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, .7);\n  color: #fff\n}\n\n@media screen and (min-width:768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1\n  }\n}\n\n.apexcharts-canvas .apexcharts-element-hidden,\n.apexcharts-datalabel.apexcharts-element-hidden,\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-hidden-element-shown {\n  opacity: 1;\n  transition: 0.25s ease all;\n}\n\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value,\n.apexcharts-datalabels,\n.apexcharts-pie-label {\n  cursor: default;\n  pointer-events: none\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: .3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease\n}\n\n.apexcharts-radialbar-label {\n  cursor: pointer;\n}\n\n.apexcharts-annotation-rect,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-gridline,\n.apexcharts-line,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-point-annotation-label,\n.apexcharts-radar-series path:not(.apexcharts-marker),\n.apexcharts-radar-series polygon,\n.apexcharts-toolbar svg,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-xaxis-annotation-label,\n.apexcharts-yaxis-annotation-label,\n.apexcharts-zoom-rect {\n  pointer-events: none\n}\n\n.apexcharts-tooltip-active .apexcharts-marker {\n  transition: .15s ease all\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden\n}\n\n.contract-trigger:before,\n.resize-triggers,\n.resize-triggers>div {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0\n}\n\n.resize-triggers>div {\n  height: 100%;\n  width: 100%;\n  background: #eee;\n  overflow: auto\n}\n\n.contract-trigger:before {\n  overflow: hidden;\n  width: 200%;\n  height: 200%\n}\n\n.apexcharts-bar-goals-markers {\n  pointer-events: none\n}\n\n.apexcharts-bar-shadows {\n  pointer-events: none\n}\n\n.apexcharts-rangebar-goals-markers {\n  pointer-events: none\n}');
                            var c =
                              (null === (l = e.opts.chart) || void 0 === l
                                ? void 0
                                : l.nonce) || e.w.config.chart.nonce;
                            c && r.setAttribute("nonce", c),
                              a ? o.prepend(r) : s.head.appendChild(r);
                          }
                          var u = e.create(e.w.config.series, {});
                          if (!u) return t(e);
                          e.mount(u)
                            .then(function () {
                              "function" ==
                                typeof e.w.config.chart.events.mounted &&
                                e.w.config.chart.events.mounted(e, e.w),
                                e.events.fireEvent("mounted", [e, e.w]),
                                t(u);
                            })
                            .catch(function (e) {
                              n(e);
                            });
                        } else n(new Error("Element not found"));
                      });
                    },
                  },
                  {
                    key: "create",
                    value: function (e, t) {
                      var n = this.w;
                      new Ye(this).initModules();
                      var i = this.w.globals;
                      if (
                        ((i.noData = !1),
                        (i.animationEnded = !1),
                        this.responsive.checkResponsiveConfig(t),
                        n.config.xaxis.convertedCatToNumeric &&
                          new z(n.config).convertCatToNumericXaxis(
                            n.config,
                            this.ctx
                          ),
                        null === this.el)
                      )
                        return (i.animationEnded = !0), null;
                      if (
                        (this.core.setupElements(),
                        "treemap" === n.config.chart.type &&
                          ((n.config.grid.show = !1),
                          (n.config.yaxis[0].show = !1)),
                        0 === i.svgWidth)
                      )
                        return (i.animationEnded = !0), null;
                      var o = A.checkComboSeries(e, n.config.chart.type);
                      (i.comboCharts = o.comboCharts),
                        (i.comboBarCount = o.comboBarCount);
                      var a = e.every(function (e) {
                        return e.data && 0 === e.data.length;
                      });
                      (0 === e.length || (a && i.collapsedSeries.length < 1)) &&
                        this.series.handleNoData(),
                        this.events.setupEventHandlers(),
                        this.data.parseData(e),
                        this.theme.init(),
                        new H(this).setGlobalMarkerSize(),
                        this.formatters.setLabelFormatters(),
                        this.titleSubtitle.draw(),
                        (i.noData &&
                          i.collapsedSeries.length !== i.series.length &&
                          !n.config.legend.showForSingleSeries) ||
                          this.legend.init(),
                        this.series.hasAllSeriesEqualX(),
                        i.axisCharts &&
                          (this.core.coreCalculations(),
                          "category" !== n.config.xaxis.type &&
                            this.formatters.setLabelFormatters(),
                          (this.ctx.toolbar.minX = n.globals.minX),
                          (this.ctx.toolbar.maxX = n.globals.maxX)),
                        this.formatters.heatmapLabelFormatters(),
                        new A(this).getLargestMarkerSize(),
                        this.dimensions.plotCoords();
                      var s = this.core.xySettings();
                      this.grid.createGridMask();
                      var r = this.core.plotChartType(e, s),
                        l = new V(this);
                      return (
                        l.bringForward(),
                        n.config.dataLabels.background.enabled &&
                          l.dataLabelsBackground(),
                        this.core.shiftGraphPosition(),
                        {
                          elGraph: r,
                          xyRatios: s,
                          dimensions: {
                            plot: {
                              left: n.globals.translateX,
                              top: n.globals.translateY,
                              width: n.globals.gridWidth,
                              height: n.globals.gridHeight,
                            },
                          },
                        }
                      );
                    },
                  },
                  {
                    key: "mount",
                    value: function () {
                      var e = this,
                        t =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : null,
                        n = this,
                        i = n.w;
                      return new Promise(function (o, a) {
                        if (null === n.el)
                          return a(
                            new Error(
                              "Not enough data to display or target element not found"
                            )
                          );
                        (null === t || i.globals.allSeriesCollapsed) &&
                          n.series.handleNoData(),
                          (n.grid = new q(n));
                        var s,
                          r,
                          l = n.grid.drawGrid();
                        if (
                          ((n.annotations = new N(n)),
                          n.annotations.drawImageAnnos(),
                          n.annotations.drawTextAnnos(),
                          "back" === i.config.grid.position &&
                            (l && i.globals.dom.elGraphical.add(l.el),
                            null != l &&
                              null !== (s = l.elGridBorders) &&
                              void 0 !== s &&
                              s.node &&
                              i.globals.dom.elGraphical.add(l.elGridBorders)),
                          Array.isArray(t.elGraph))
                        )
                          for (var c = 0; c < t.elGraph.length; c++)
                            i.globals.dom.elGraphical.add(t.elGraph[c]);
                        else i.globals.dom.elGraphical.add(t.elGraph);
                        "front" === i.config.grid.position &&
                          (l && i.globals.dom.elGraphical.add(l.el),
                          null != l &&
                            null !== (r = l.elGridBorders) &&
                            void 0 !== r &&
                            r.node &&
                            i.globals.dom.elGraphical.add(l.elGridBorders)),
                          "front" === i.config.xaxis.crosshairs.position &&
                            n.crosshairs.drawXCrosshairs(),
                          "front" === i.config.yaxis[0].crosshairs.position &&
                            n.crosshairs.drawYCrosshairs(),
                          "treemap" !== i.config.chart.type &&
                            n.axes.drawAxis(i.config.chart.type, l);
                        var u = new K(e.ctx, l),
                          d = new $(e.ctx, l);
                        if (
                          (null !== l &&
                            (u.xAxisLabelCorrections(l.xAxisTickWidth),
                            d.setYAxisTextAlignments(),
                            i.config.yaxis.map(function (e, t) {
                              -1 === i.globals.ignoreYAxisIndexes.indexOf(t) &&
                                d.yAxisTitleRotate(t, e.opposite);
                            })),
                          n.annotations.drawAxesAnnotations(),
                          !i.globals.noData)
                        ) {
                          if (
                            (i.config.tooltip.enabled &&
                              !i.globals.noData &&
                              n.w.globals.tooltip.drawTooltip(t.xyRatios),
                            i.globals.axisCharts &&
                              (i.globals.isXNumeric ||
                                i.config.xaxis.convertedCatToNumeric ||
                                i.globals.isRangeBar))
                          )
                            (i.config.chart.zoom.enabled ||
                              (i.config.chart.selection &&
                                i.config.chart.selection.enabled) ||
                              (i.config.chart.pan &&
                                i.config.chart.pan.enabled)) &&
                              n.zoomPanSelection.init({ xyRatios: t.xyRatios });
                          else {
                            var h = i.config.chart.toolbar.tools;
                            [
                              "zoom",
                              "zoomin",
                              "zoomout",
                              "selection",
                              "pan",
                              "reset",
                            ].forEach(function (e) {
                              h[e] = !1;
                            });
                          }
                          i.config.chart.toolbar.show &&
                            !i.globals.allSeriesCollapsed &&
                            n.toolbar.createToolbar();
                        }
                        i.globals.memory.methodsToExec.length > 0 &&
                          i.globals.memory.methodsToExec.forEach(function (e) {
                            e.method(e.params, !1, e.context);
                          }),
                          i.globals.axisCharts ||
                            i.globals.noData ||
                            n.core.resizeNonAxisCharts(),
                          o(n);
                      });
                    },
                  },
                  {
                    key: "destroy",
                    value: function () {
                      var e, t;
                      window.removeEventListener(
                        "resize",
                        this.windowResizeHandler
                      ),
                        this.el.parentNode,
                        (e = this.parentResizeHandler),
                        (t = Ke.get(e)) && (t.disconnect(), Ke.delete(e));
                      var n = this.w.config.chart.id;
                      n &&
                        Apex._chartInstances.forEach(function (e, t) {
                          e.id === y.escapeString(n) &&
                            Apex._chartInstances.splice(t, 1);
                        }),
                        new Xe(this.ctx).clear({ isUpdating: !1 });
                    },
                  },
                  {
                    key: "updateOptions",
                    value: function (e) {
                      var t = this,
                        n =
                          arguments.length > 1 &&
                          void 0 !== arguments[1] &&
                          arguments[1],
                        i =
                          !(arguments.length > 2 && void 0 !== arguments[2]) ||
                          arguments[2],
                        o =
                          !(arguments.length > 3 && void 0 !== arguments[3]) ||
                          arguments[3],
                        a =
                          !(arguments.length > 4 && void 0 !== arguments[4]) ||
                          arguments[4],
                        s = this.w;
                      return (
                        (s.globals.selection = void 0),
                        e.series &&
                          (this.series.resetSeries(!1, !0, !1),
                          e.series.length &&
                            e.series[0].data &&
                            (e.series = e.series.map(function (e, n) {
                              return t.updateHelpers._extendSeries(e, n);
                            })),
                          this.updateHelpers.revertDefaultAxisMinMax()),
                        e.xaxis && (e = this.updateHelpers.forceXAxisUpdate(e)),
                        e.yaxis && (e = this.updateHelpers.forceYAxisUpdate(e)),
                        s.globals.collapsedSeriesIndices.length > 0 &&
                          this.series.clearPreviousPaths(),
                        e.theme && (e = this.theme.updateThemeOptions(e)),
                        this.updateHelpers._updateOptions(e, n, i, o, a)
                      );
                    },
                  },
                  {
                    key: "updateSeries",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : [],
                        t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n =
                          !(arguments.length > 2 && void 0 !== arguments[2]) ||
                          arguments[2];
                      return (
                        this.series.resetSeries(!1),
                        this.updateHelpers.revertDefaultAxisMinMax(),
                        this.updateHelpers._updateSeries(e, t, n)
                      );
                    },
                  },
                  {
                    key: "appendSeries",
                    value: function (e) {
                      var t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n =
                          !(arguments.length > 2 && void 0 !== arguments[2]) ||
                          arguments[2],
                        i = this.w.config.series.slice();
                      return (
                        i.push(e),
                        this.series.resetSeries(!1),
                        this.updateHelpers.revertDefaultAxisMinMax(),
                        this.updateHelpers._updateSeries(i, t, n)
                      );
                    },
                  },
                  {
                    key: "appendData",
                    value: function (e) {
                      var t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n = this;
                      (n.w.globals.dataChanged = !0),
                        n.series.getPreviousPaths();
                      for (
                        var i = n.w.config.series.slice(), o = 0;
                        o < i.length;
                        o++
                      )
                        if (null !== e[o] && void 0 !== e[o])
                          for (var a = 0; a < e[o].data.length; a++)
                            i[o].data.push(e[o].data[a]);
                      return (
                        (n.w.config.series = i),
                        t &&
                          (n.w.globals.initialSeries = y.clone(
                            n.w.config.series
                          )),
                        this.update()
                      );
                    },
                  },
                  {
                    key: "update",
                    value: function (e) {
                      var t = this;
                      return new Promise(function (n, i) {
                        new Xe(t.ctx).clear({ isUpdating: !0 });
                        var o = t.create(t.w.config.series, e);
                        if (!o) return n(t);
                        t.mount(o)
                          .then(function () {
                            "function" ==
                              typeof t.w.config.chart.events.updated &&
                              t.w.config.chart.events.updated(t, t.w),
                              t.events.fireEvent("updated", [t, t.w]),
                              (t.w.globals.isDirty = !0),
                              n(t);
                          })
                          .catch(function (e) {
                            i(e);
                          });
                      });
                    },
                  },
                  {
                    key: "getSyncedCharts",
                    value: function () {
                      var e = this.getGroupedCharts(),
                        t = [this];
                      return (
                        e.length &&
                          ((t = []),
                          e.forEach(function (e) {
                            t.push(e);
                          })),
                        t
                      );
                    },
                  },
                  {
                    key: "getGroupedCharts",
                    value: function () {
                      var e = this;
                      return Apex._chartInstances
                        .filter(function (e) {
                          if (e.group) return !0;
                        })
                        .map(function (t) {
                          return e.w.config.chart.group === t.group
                            ? t.chart
                            : e;
                        });
                    },
                  },
                  {
                    key: "toggleSeries",
                    value: function (e) {
                      return this.series.toggleSeries(e);
                    },
                  },
                  {
                    key: "highlightSeriesOnLegendHover",
                    value: function (e, t) {
                      return this.series.toggleSeriesOnHover(e, t);
                    },
                  },
                  {
                    key: "showSeries",
                    value: function (e) {
                      this.series.showSeries(e);
                    },
                  },
                  {
                    key: "hideSeries",
                    value: function (e) {
                      this.series.hideSeries(e);
                    },
                  },
                  {
                    key: "isSeriesHidden",
                    value: function (e) {
                      this.series.isSeriesHidden(e);
                    },
                  },
                  {
                    key: "resetSeries",
                    value: function () {
                      var e =
                          !(arguments.length > 0 && void 0 !== arguments[0]) ||
                          arguments[0],
                        t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1];
                      this.series.resetSeries(e, t);
                    },
                  },
                  {
                    key: "addEventListener",
                    value: function (e, t) {
                      this.events.addEventListener(e, t);
                    },
                  },
                  {
                    key: "removeEventListener",
                    value: function (e, t) {
                      this.events.removeEventListener(e, t);
                    },
                  },
                  {
                    key: "addXaxisAnnotation",
                    value: function (e) {
                      var t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : void 0,
                        i = this;
                      n && (i = n),
                        i.annotations.addXaxisAnnotationExternal(e, t, i);
                    },
                  },
                  {
                    key: "addYaxisAnnotation",
                    value: function (e) {
                      var t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : void 0,
                        i = this;
                      n && (i = n),
                        i.annotations.addYaxisAnnotationExternal(e, t, i);
                    },
                  },
                  {
                    key: "addPointAnnotation",
                    value: function (e) {
                      var t =
                          !(arguments.length > 1 && void 0 !== arguments[1]) ||
                          arguments[1],
                        n =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : void 0,
                        i = this;
                      n && (i = n),
                        i.annotations.addPointAnnotationExternal(e, t, i);
                    },
                  },
                  {
                    key: "clearAnnotations",
                    value: function () {
                      var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : void 0,
                        t = this;
                      e && (t = e), t.annotations.clearAnnotations(t);
                    },
                  },
                  {
                    key: "removeAnnotation",
                    value: function (e) {
                      var t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : void 0,
                        n = this;
                      t && (n = t), n.annotations.removeAnnotation(n, e);
                    },
                  },
                  {
                    key: "getChartArea",
                    value: function () {
                      return this.w.globals.dom.baseEl.querySelector(
                        ".apexcharts-inner"
                      );
                    },
                  },
                  {
                    key: "getSeriesTotalXRange",
                    value: function (e, t) {
                      return this.coreUtils.getSeriesTotalsXRange(e, t);
                    },
                  },
                  {
                    key: "getHighestValueInSeries",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0;
                      return new Q(this.ctx).getMinYMaxY(e).highestY;
                    },
                  },
                  {
                    key: "getLowestValueInSeries",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0;
                      return new Q(this.ctx).getMinYMaxY(e).lowestY;
                    },
                  },
                  {
                    key: "getSeriesTotal",
                    value: function () {
                      return this.w.globals.seriesTotals;
                    },
                  },
                  {
                    key: "toggleDataPointSelection",
                    value: function (e, t) {
                      return this.updateHelpers.toggleDataPointSelection(e, t);
                    },
                  },
                  {
                    key: "zoomX",
                    value: function (e, t) {
                      this.ctx.toolbar.zoomUpdateOptions(e, t);
                    },
                  },
                  {
                    key: "setLocale",
                    value: function (e) {
                      this.localization.setCurrentLocaleValues(e);
                    },
                  },
                  {
                    key: "dataURI",
                    value: function (e) {
                      return new X(this.ctx).dataURI(e);
                    },
                  },
                  {
                    key: "exportToCSV",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      return new X(this.ctx).exportToCSV(e);
                    },
                  },
                  {
                    key: "paper",
                    value: function () {
                      return this.w.globals.dom.Paper;
                    },
                  },
                  {
                    key: "_parentResizeCallback",
                    value: function () {
                      this.w.globals.animationEnded &&
                        this.w.config.chart.redrawOnParentResize &&
                        this._windowResize();
                    },
                  },
                  {
                    key: "_windowResize",
                    value: function () {
                      var e = this;
                      clearTimeout(this.w.globals.resizeTimer),
                        (this.w.globals.resizeTimer = window.setTimeout(
                          function () {
                            (e.w.globals.resized = !0),
                              (e.w.globals.dataChanged = !1),
                              e.ctx.update();
                          },
                          150
                        ));
                    },
                  },
                  {
                    key: "_windowResizeHandler",
                    value: function () {
                      var e = this.w.config.chart.redrawOnWindowResize;
                      "function" == typeof e && (e = e()),
                        e && this._windowResize();
                    },
                  },
                ],
                [
                  {
                    key: "getChartByID",
                    value: function (e) {
                      var t = y.escapeString(e);
                      if (Apex._chartInstances) {
                        var n = Apex._chartInstances.filter(function (e) {
                          return e.id === t;
                        })[0];
                        return n && n.chart;
                      }
                    },
                  },
                  {
                    key: "initOnLoad",
                    value: function () {
                      for (
                        var t = document.querySelectorAll("[data-apexcharts]"),
                          n = 0;
                        n < t.length;
                        n++
                      )
                        new e(
                          t[n],
                          JSON.parse(t[n].getAttribute("data-options"))
                        ).render();
                    },
                  },
                  {
                    key: "exec",
                    value: function (e, t) {
                      var n = this.getChartByID(e);
                      if (n) {
                        n.w.globals.isExecCalled = !0;
                        var i = null;
                        if (-1 !== n.publicMethods.indexOf(t)) {
                          for (
                            var o = arguments.length,
                              a = new Array(o > 2 ? o - 2 : 0),
                              s = 2;
                            s < o;
                            s++
                          )
                            a[s - 2] = arguments[s];
                          i = n[t].apply(n, a);
                        }
                        return i;
                      }
                    },
                  },
                  {
                    key: "merge",
                    value: function (e, t) {
                      return y.extend(e, t);
                    },
                  },
                ]
              ),
              e
            );
          })();
        e.exports = qe;
      },
      6895: (e, t, n) => {
        var i;
        !(function (o, a, s, r) {
          "use strict";
          var l,
            c = ["", "webkit", "Moz", "MS", "ms", "o"],
            u = a.createElement("div"),
            d = "function",
            h = Math.round,
            p = Math.abs,
            f = Date.now;
          function g(e, t, n) {
            return setTimeout(S(e, n), t);
          }
          function m(e, t, n) {
            return !!Array.isArray(e) && (v(e, n[t], n), !0);
          }
          function v(e, t, n) {
            var i;
            if (e)
              if (e.forEach) e.forEach(t, n);
              else if (e.length !== r)
                for (i = 0; i < e.length; ) t.call(n, e[i], i, e), i++;
              else for (i in e) e.hasOwnProperty(i) && t.call(n, e[i], i, e);
          }
          function b(e, t, n) {
            var i = "DEPRECATED METHOD: " + t + "\n" + n + " AT \n";
            return function () {
              var t = new Error("get-stack-trace"),
                n =
                  t && t.stack
                    ? t.stack
                        .replace(/^[^\(]+?[\n$]/gm, "")
                        .replace(/^\s+at\s+/gm, "")
                        .replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@")
                    : "Unknown Stack Trace",
                a = o.console && (o.console.warn || o.console.log);
              return a && a.call(o.console, i, n), e.apply(this, arguments);
            };
          }
          l =
            "function" !== typeof Object.assign
              ? function (e) {
                  if (e === r || null === e)
                    throw new TypeError(
                      "Cannot convert undefined or null to object"
                    );
                  for (var t = Object(e), n = 1; n < arguments.length; n++) {
                    var i = arguments[n];
                    if (i !== r && null !== i)
                      for (var o in i) i.hasOwnProperty(o) && (t[o] = i[o]);
                  }
                  return t;
                }
              : Object.assign;
          var x = b(
              function (e, t, n) {
                for (var i = Object.keys(t), o = 0; o < i.length; )
                  (!n || (n && e[i[o]] === r)) && (e[i[o]] = t[i[o]]), o++;
                return e;
              },
              "extend",
              "Use `assign`."
            ),
            y = b(
              function (e, t) {
                return x(e, t, !0);
              },
              "merge",
              "Use `assign`."
            );
          function w(e, t, n) {
            var i,
              o = t.prototype;
            ((i = e.prototype = Object.create(o)).constructor = e),
              (i._super = o),
              n && l(i, n);
          }
          function S(e, t) {
            return function () {
              return e.apply(t, arguments);
            };
          }
          function k(e, t) {
            return typeof e == d ? e.apply((t && t[0]) || r, t) : e;
          }
          function A(e, t) {
            return e === r ? t : e;
          }
          function C(e, t, n) {
            v(L(t), function (t) {
              e.addEventListener(t, n, !1);
            });
          }
          function M(e, t, n) {
            v(L(t), function (t) {
              e.removeEventListener(t, n, !1);
            });
          }
          function P(e, t) {
            for (; e; ) {
              if (e == t) return !0;
              e = e.parentNode;
            }
            return !1;
          }
          function E(e, t) {
            return e.indexOf(t) > -1;
          }
          function L(e) {
            return e.trim().split(/\s+/g);
          }
          function T(e, t, n) {
            if (e.indexOf && !n) return e.indexOf(t);
            for (var i = 0; i < e.length; ) {
              if ((n && e[i][n] == t) || (!n && e[i] === t)) return i;
              i++;
            }
            return -1;
          }
          function O(e) {
            return Array.prototype.slice.call(e, 0);
          }
          function R(e, t, n) {
            for (var i = [], o = [], a = 0; a < e.length; ) {
              var s = t ? e[a][t] : e[a];
              T(o, s) < 0 && i.push(e[a]), (o[a] = s), a++;
            }
            return (
              n &&
                (i = t
                  ? i.sort(function (e, n) {
                      return e[t] > n[t];
                    })
                  : i.sort()),
              i
            );
          }
          function I(e, t) {
            for (
              var n, i, o = t[0].toUpperCase() + t.slice(1), a = 0;
              a < c.length;

            ) {
              if ((i = (n = c[a]) ? n + o : t) in e) return i;
              a++;
            }
            return r;
          }
          var N = 1;
          function _(e) {
            var t = e.ownerDocument || e;
            return t.defaultView || t.parentWindow || o;
          }
          var D = "ontouchstart" in o,
            z = I(o, "PointerEvent") !== r,
            j =
              D &&
              /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),
            B = "touch",
            F = "mouse",
            W = 25,
            H = 1,
            G = 4,
            V = 8,
            U = 1,
            Y = 2,
            X = 4,
            K = 8,
            q = 16,
            Z = Y | X,
            Q = K | q,
            $ = Z | Q,
            J = ["x", "y"],
            ee = ["clientX", "clientY"];
          function te(e, t) {
            var n = this;
            (this.manager = e),
              (this.callback = t),
              (this.element = e.element),
              (this.target = e.options.inputTarget),
              (this.domHandler = function (t) {
                k(e.options.enable, [e]) && n.handler(t);
              }),
              this.init();
          }
          function ne(e, t, n) {
            var i = n.pointers.length,
              o = n.changedPointers.length,
              a = t & H && i - o === 0,
              s = t & (G | V) && i - o === 0;
            (n.isFirst = !!a),
              (n.isFinal = !!s),
              a && (e.session = {}),
              (n.eventType = t),
              (function (e, t) {
                var n = e.session,
                  i = t.pointers,
                  o = i.length;
                n.firstInput || (n.firstInput = ie(t));
                o > 1 && !n.firstMultiple
                  ? (n.firstMultiple = ie(t))
                  : 1 === o && (n.firstMultiple = !1);
                var a = n.firstInput,
                  s = n.firstMultiple,
                  l = s ? s.center : a.center,
                  c = (t.center = oe(i));
                (t.timeStamp = f()),
                  (t.deltaTime = t.timeStamp - a.timeStamp),
                  (t.angle = le(l, c)),
                  (t.distance = re(l, c)),
                  (function (e, t) {
                    var n = t.center,
                      i = e.offsetDelta || {},
                      o = e.prevDelta || {},
                      a = e.prevInput || {};
                    (t.eventType !== H && a.eventType !== G) ||
                      ((o = e.prevDelta =
                        { x: a.deltaX || 0, y: a.deltaY || 0 }),
                      (i = e.offsetDelta = { x: n.x, y: n.y }));
                    (t.deltaX = o.x + (n.x - i.x)),
                      (t.deltaY = o.y + (n.y - i.y));
                  })(n, t),
                  (t.offsetDirection = se(t.deltaX, t.deltaY));
                var u = ae(t.deltaTime, t.deltaX, t.deltaY);
                (t.overallVelocityX = u.x),
                  (t.overallVelocityY = u.y),
                  (t.overallVelocity = p(u.x) > p(u.y) ? u.x : u.y),
                  (t.scale = s
                    ? ((d = s.pointers),
                      (h = i),
                      re(h[0], h[1], ee) / re(d[0], d[1], ee))
                    : 1),
                  (t.rotation = s
                    ? (function (e, t) {
                        return le(t[1], t[0], ee) + le(e[1], e[0], ee);
                      })(s.pointers, i)
                    : 0),
                  (t.maxPointers = n.prevInput
                    ? t.pointers.length > n.prevInput.maxPointers
                      ? t.pointers.length
                      : n.prevInput.maxPointers
                    : t.pointers.length),
                  (function (e, t) {
                    var n,
                      i,
                      o,
                      a,
                      s = e.lastInterval || t,
                      l = t.timeStamp - s.timeStamp;
                    if (t.eventType != V && (l > W || s.velocity === r)) {
                      var c = t.deltaX - s.deltaX,
                        u = t.deltaY - s.deltaY,
                        d = ae(l, c, u);
                      (i = d.x),
                        (o = d.y),
                        (n = p(d.x) > p(d.y) ? d.x : d.y),
                        (a = se(c, u)),
                        (e.lastInterval = t);
                    } else
                      (n = s.velocity),
                        (i = s.velocityX),
                        (o = s.velocityY),
                        (a = s.direction);
                    (t.velocity = n),
                      (t.velocityX = i),
                      (t.velocityY = o),
                      (t.direction = a);
                  })(n, t);
                var d, h;
                var g = e.element;
                P(t.srcEvent.target, g) && (g = t.srcEvent.target);
                t.target = g;
              })(e, n),
              e.emit("hammer.input", n),
              e.recognize(n),
              (e.session.prevInput = n);
          }
          function ie(e) {
            for (var t = [], n = 0; n < e.pointers.length; )
              (t[n] = {
                clientX: h(e.pointers[n].clientX),
                clientY: h(e.pointers[n].clientY),
              }),
                n++;
            return {
              timeStamp: f(),
              pointers: t,
              center: oe(t),
              deltaX: e.deltaX,
              deltaY: e.deltaY,
            };
          }
          function oe(e) {
            var t = e.length;
            if (1 === t) return { x: h(e[0].clientX), y: h(e[0].clientY) };
            for (var n = 0, i = 0, o = 0; o < t; )
              (n += e[o].clientX), (i += e[o].clientY), o++;
            return { x: h(n / t), y: h(i / t) };
          }
          function ae(e, t, n) {
            return { x: t / e || 0, y: n / e || 0 };
          }
          function se(e, t) {
            return e === t ? U : p(e) >= p(t) ? (e < 0 ? Y : X) : t < 0 ? K : q;
          }
          function re(e, t, n) {
            n || (n = J);
            var i = t[n[0]] - e[n[0]],
              o = t[n[1]] - e[n[1]];
            return Math.sqrt(i * i + o * o);
          }
          function le(e, t, n) {
            n || (n = J);
            var i = t[n[0]] - e[n[0]],
              o = t[n[1]] - e[n[1]];
            return (180 * Math.atan2(o, i)) / Math.PI;
          }
          te.prototype = {
            handler: function () {},
            init: function () {
              this.evEl && C(this.element, this.evEl, this.domHandler),
                this.evTarget && C(this.target, this.evTarget, this.domHandler),
                this.evWin && C(_(this.element), this.evWin, this.domHandler);
            },
            destroy: function () {
              this.evEl && M(this.element, this.evEl, this.domHandler),
                this.evTarget && M(this.target, this.evTarget, this.domHandler),
                this.evWin && M(_(this.element), this.evWin, this.domHandler);
            },
          };
          var ce = { mousedown: H, mousemove: 2, mouseup: G },
            ue = "mousedown",
            de = "mousemove mouseup";
          function he() {
            (this.evEl = ue),
              (this.evWin = de),
              (this.pressed = !1),
              te.apply(this, arguments);
          }
          w(he, te, {
            handler: function (e) {
              var t = ce[e.type];
              t & H && 0 === e.button && (this.pressed = !0),
                2 & t && 1 !== e.which && (t = G),
                this.pressed &&
                  (t & G && (this.pressed = !1),
                  this.callback(this.manager, t, {
                    pointers: [e],
                    changedPointers: [e],
                    pointerType: F,
                    srcEvent: e,
                  }));
            },
          });
          var pe = {
              pointerdown: H,
              pointermove: 2,
              pointerup: G,
              pointercancel: V,
              pointerout: V,
            },
            fe = { 2: B, 3: "pen", 4: F, 5: "kinect" },
            ge = "pointerdown",
            me = "pointermove pointerup pointercancel";
          function ve() {
            (this.evEl = ge),
              (this.evWin = me),
              te.apply(this, arguments),
              (this.store = this.manager.session.pointerEvents = []);
          }
          o.MSPointerEvent &&
            !o.PointerEvent &&
            ((ge = "MSPointerDown"),
            (me = "MSPointerMove MSPointerUp MSPointerCancel")),
            w(ve, te, {
              handler: function (e) {
                var t = this.store,
                  n = !1,
                  i = e.type.toLowerCase().replace("ms", ""),
                  o = pe[i],
                  a = fe[e.pointerType] || e.pointerType,
                  s = a == B,
                  r = T(t, e.pointerId, "pointerId");
                o & H && (0 === e.button || s)
                  ? r < 0 && (t.push(e), (r = t.length - 1))
                  : o & (G | V) && (n = !0),
                  r < 0 ||
                    ((t[r] = e),
                    this.callback(this.manager, o, {
                      pointers: t,
                      changedPointers: [e],
                      pointerType: a,
                      srcEvent: e,
                    }),
                    n && t.splice(r, 1));
              },
            });
          var be = { touchstart: H, touchmove: 2, touchend: G, touchcancel: V };
          function xe() {
            (this.evTarget = "touchstart"),
              (this.evWin = "touchstart touchmove touchend touchcancel"),
              (this.started = !1),
              te.apply(this, arguments);
          }
          function ye(e, t) {
            var n = O(e.touches),
              i = O(e.changedTouches);
            return (
              t & (G | V) && (n = R(n.concat(i), "identifier", !0)), [n, i]
            );
          }
          w(xe, te, {
            handler: function (e) {
              var t = be[e.type];
              if ((t === H && (this.started = !0), this.started)) {
                var n = ye.call(this, e, t);
                t & (G | V) &&
                  n[0].length - n[1].length === 0 &&
                  (this.started = !1),
                  this.callback(this.manager, t, {
                    pointers: n[0],
                    changedPointers: n[1],
                    pointerType: B,
                    srcEvent: e,
                  });
              }
            },
          });
          var we = { touchstart: H, touchmove: 2, touchend: G, touchcancel: V },
            Se = "touchstart touchmove touchend touchcancel";
          function ke() {
            (this.evTarget = Se),
              (this.targetIds = {}),
              te.apply(this, arguments);
          }
          function Ae(e, t) {
            var n = O(e.touches),
              i = this.targetIds;
            if (t & (2 | H) && 1 === n.length)
              return (i[n[0].identifier] = !0), [n, n];
            var o,
              a,
              s = O(e.changedTouches),
              r = [],
              l = this.target;
            if (
              ((a = n.filter(function (e) {
                return P(e.target, l);
              })),
              t === H)
            )
              for (o = 0; o < a.length; ) (i[a[o].identifier] = !0), o++;
            for (o = 0; o < s.length; )
              i[s[o].identifier] && r.push(s[o]),
                t & (G | V) && delete i[s[o].identifier],
                o++;
            return r.length ? [R(a.concat(r), "identifier", !0), r] : void 0;
          }
          w(ke, te, {
            handler: function (e) {
              var t = we[e.type],
                n = Ae.call(this, e, t);
              n &&
                this.callback(this.manager, t, {
                  pointers: n[0],
                  changedPointers: n[1],
                  pointerType: B,
                  srcEvent: e,
                });
            },
          });
          var Ce = 2500;
          function Me() {
            te.apply(this, arguments);
            var e = S(this.handler, this);
            (this.touch = new ke(this.manager, e)),
              (this.mouse = new he(this.manager, e)),
              (this.primaryTouch = null),
              (this.lastTouches = []);
          }
          function Pe(e, t) {
            e & H
              ? ((this.primaryTouch = t.changedPointers[0].identifier),
                Ee.call(this, t))
              : e & (G | V) && Ee.call(this, t);
          }
          function Ee(e) {
            var t = e.changedPointers[0];
            if (t.identifier === this.primaryTouch) {
              var n = { x: t.clientX, y: t.clientY };
              this.lastTouches.push(n);
              var i = this.lastTouches;
              setTimeout(function () {
                var e = i.indexOf(n);
                e > -1 && i.splice(e, 1);
              }, Ce);
            }
          }
          function Le(e) {
            for (
              var t = e.srcEvent.clientX, n = e.srcEvent.clientY, i = 0;
              i < this.lastTouches.length;
              i++
            ) {
              var o = this.lastTouches[i],
                a = Math.abs(t - o.x),
                s = Math.abs(n - o.y);
              if (a <= 25 && s <= 25) return !0;
            }
            return !1;
          }
          w(Me, te, {
            handler: function (e, t, n) {
              var i = n.pointerType == B,
                o = n.pointerType == F;
              if (
                !(
                  o &&
                  n.sourceCapabilities &&
                  n.sourceCapabilities.firesTouchEvents
                )
              ) {
                if (i) Pe.call(this, t, n);
                else if (o && Le.call(this, n)) return;
                this.callback(e, t, n);
              }
            },
            destroy: function () {
              this.touch.destroy(), this.mouse.destroy();
            },
          });
          var Te = I(u.style, "touchAction"),
            Oe = Te !== r,
            Re = "compute",
            Ie = "auto",
            Ne = "manipulation",
            _e = "none",
            De = "pan-x",
            ze = "pan-y",
            je = (function () {
              if (!Oe) return !1;
              var e = {},
                t = o.CSS && o.CSS.supports;
              return (
                [
                  "auto",
                  "manipulation",
                  "pan-y",
                  "pan-x",
                  "pan-x pan-y",
                  "none",
                ].forEach(function (n) {
                  e[n] = !t || o.CSS.supports("touch-action", n);
                }),
                e
              );
            })();
          function Be(e, t) {
            (this.manager = e), this.set(t);
          }
          Be.prototype = {
            set: function (e) {
              e == Re && (e = this.compute()),
                Oe &&
                  this.manager.element.style &&
                  je[e] &&
                  (this.manager.element.style[Te] = e),
                (this.actions = e.toLowerCase().trim());
            },
            update: function () {
              this.set(this.manager.options.touchAction);
            },
            compute: function () {
              var e = [];
              return (
                v(this.manager.recognizers, function (t) {
                  k(t.options.enable, [t]) &&
                    (e = e.concat(t.getTouchAction()));
                }),
                (function (e) {
                  if (E(e, _e)) return _e;
                  var t = E(e, De),
                    n = E(e, ze);
                  if (t && n) return _e;
                  if (t || n) return t ? De : ze;
                  if (E(e, Ne)) return Ne;
                  return Ie;
                })(e.join(" "))
              );
            },
            preventDefaults: function (e) {
              var t = e.srcEvent,
                n = e.offsetDirection;
              if (this.manager.session.prevented) t.preventDefault();
              else {
                var i = this.actions,
                  o = E(i, _e) && !je[_e],
                  a = E(i, ze) && !je[ze],
                  s = E(i, De) && !je[De];
                if (o) {
                  var r = 1 === e.pointers.length,
                    l = e.distance < 2,
                    c = e.deltaTime < 250;
                  if (r && l && c) return;
                }
                if (!s || !a)
                  return o || (a && n & Z) || (s && n & Q)
                    ? this.preventSrc(t)
                    : void 0;
              }
            },
            preventSrc: function (e) {
              (this.manager.session.prevented = !0), e.preventDefault();
            },
          };
          var Fe = 1,
            We = 32;
          function He(e) {
            (this.options = l({}, this.defaults, e || {})),
              (this.id = N++),
              (this.manager = null),
              (this.options.enable = A(this.options.enable, !0)),
              (this.state = Fe),
              (this.simultaneous = {}),
              (this.requireFail = []);
          }
          function Ge(e) {
            return 16 & e
              ? "cancel"
              : 8 & e
              ? "end"
              : 4 & e
              ? "move"
              : 2 & e
              ? "start"
              : "";
          }
          function Ve(e) {
            return e == q
              ? "down"
              : e == K
              ? "up"
              : e == Y
              ? "left"
              : e == X
              ? "right"
              : "";
          }
          function Ue(e, t) {
            var n = t.manager;
            return n ? n.get(e) : e;
          }
          function Ye() {
            He.apply(this, arguments);
          }
          function Xe() {
            Ye.apply(this, arguments), (this.pX = null), (this.pY = null);
          }
          function Ke() {
            Ye.apply(this, arguments);
          }
          function qe() {
            He.apply(this, arguments),
              (this._timer = null),
              (this._input = null);
          }
          function Ze() {
            Ye.apply(this, arguments);
          }
          function Qe() {
            Ye.apply(this, arguments);
          }
          function $e() {
            He.apply(this, arguments),
              (this.pTime = !1),
              (this.pCenter = !1),
              (this._timer = null),
              (this._input = null),
              (this.count = 0);
          }
          function Je(e, t) {
            return (
              ((t = t || {}).recognizers = A(
                t.recognizers,
                Je.defaults.preset
              )),
              new et(e, t)
            );
          }
          (He.prototype = {
            defaults: {},
            set: function (e) {
              return (
                l(this.options, e),
                this.manager && this.manager.touchAction.update(),
                this
              );
            },
            recognizeWith: function (e) {
              if (m(e, "recognizeWith", this)) return this;
              var t = this.simultaneous;
              return (
                t[(e = Ue(e, this)).id] ||
                  ((t[e.id] = e), e.recognizeWith(this)),
                this
              );
            },
            dropRecognizeWith: function (e) {
              return (
                m(e, "dropRecognizeWith", this) ||
                  ((e = Ue(e, this)), delete this.simultaneous[e.id]),
                this
              );
            },
            requireFailure: function (e) {
              if (m(e, "requireFailure", this)) return this;
              var t = this.requireFail;
              return (
                -1 === T(t, (e = Ue(e, this))) &&
                  (t.push(e), e.requireFailure(this)),
                this
              );
            },
            dropRequireFailure: function (e) {
              if (m(e, "dropRequireFailure", this)) return this;
              e = Ue(e, this);
              var t = T(this.requireFail, e);
              return t > -1 && this.requireFail.splice(t, 1), this;
            },
            hasRequireFailures: function () {
              return this.requireFail.length > 0;
            },
            canRecognizeWith: function (e) {
              return !!this.simultaneous[e.id];
            },
            emit: function (e) {
              var t = this,
                n = this.state;
              function i(n) {
                t.manager.emit(n, e);
              }
              n < 8 && i(t.options.event + Ge(n)),
                i(t.options.event),
                e.additionalEvent && i(e.additionalEvent),
                n >= 8 && i(t.options.event + Ge(n));
            },
            tryEmit: function (e) {
              if (this.canEmit()) return this.emit(e);
              this.state = We;
            },
            canEmit: function () {
              for (var e = 0; e < this.requireFail.length; ) {
                if (!(this.requireFail[e].state & (We | Fe))) return !1;
                e++;
              }
              return !0;
            },
            recognize: function (e) {
              var t = l({}, e);
              if (!k(this.options.enable, [this, t]))
                return this.reset(), void (this.state = We);
              56 & this.state && (this.state = Fe),
                (this.state = this.process(t)),
                30 & this.state && this.tryEmit(t);
            },
            process: function (e) {},
            getTouchAction: function () {},
            reset: function () {},
          }),
            w(Ye, He, {
              defaults: { pointers: 1 },
              attrTest: function (e) {
                var t = this.options.pointers;
                return 0 === t || e.pointers.length === t;
              },
              process: function (e) {
                var t = this.state,
                  n = e.eventType,
                  i = 6 & t,
                  o = this.attrTest(e);
                return i && (n & V || !o)
                  ? 16 | t
                  : i || o
                  ? n & G
                    ? 8 | t
                    : 2 & t
                    ? 4 | t
                    : 2
                  : We;
              },
            }),
            w(Xe, Ye, {
              defaults: {
                event: "pan",
                threshold: 10,
                pointers: 1,
                direction: $,
              },
              getTouchAction: function () {
                var e = this.options.direction,
                  t = [];
                return e & Z && t.push(ze), e & Q && t.push(De), t;
              },
              directionTest: function (e) {
                var t = this.options,
                  n = !0,
                  i = e.distance,
                  o = e.direction,
                  a = e.deltaX,
                  s = e.deltaY;
                return (
                  o & t.direction ||
                    (t.direction & Z
                      ? ((o = 0 === a ? U : a < 0 ? Y : X),
                        (n = a != this.pX),
                        (i = Math.abs(e.deltaX)))
                      : ((o = 0 === s ? U : s < 0 ? K : q),
                        (n = s != this.pY),
                        (i = Math.abs(e.deltaY)))),
                  (e.direction = o),
                  n && i > t.threshold && o & t.direction
                );
              },
              attrTest: function (e) {
                return (
                  Ye.prototype.attrTest.call(this, e) &&
                  (2 & this.state ||
                    (!(2 & this.state) && this.directionTest(e)))
                );
              },
              emit: function (e) {
                (this.pX = e.deltaX), (this.pY = e.deltaY);
                var t = Ve(e.direction);
                t && (e.additionalEvent = this.options.event + t),
                  this._super.emit.call(this, e);
              },
            }),
            w(Ke, Ye, {
              defaults: { event: "pinch", threshold: 0, pointers: 2 },
              getTouchAction: function () {
                return [_e];
              },
              attrTest: function (e) {
                return (
                  this._super.attrTest.call(this, e) &&
                  (Math.abs(e.scale - 1) > this.options.threshold ||
                    2 & this.state)
                );
              },
              emit: function (e) {
                if (1 !== e.scale) {
                  var t = e.scale < 1 ? "in" : "out";
                  e.additionalEvent = this.options.event + t;
                }
                this._super.emit.call(this, e);
              },
            }),
            w(qe, He, {
              defaults: {
                event: "press",
                pointers: 1,
                time: 251,
                threshold: 9,
              },
              getTouchAction: function () {
                return [Ie];
              },
              process: function (e) {
                var t = this.options,
                  n = e.pointers.length === t.pointers,
                  i = e.distance < t.threshold,
                  o = e.deltaTime > t.time;
                if (
                  ((this._input = e), !i || !n || (e.eventType & (G | V) && !o))
                )
                  this.reset();
                else if (e.eventType & H)
                  this.reset(),
                    (this._timer = g(
                      function () {
                        (this.state = 8), this.tryEmit();
                      },
                      t.time,
                      this
                    ));
                else if (e.eventType & G) return 8;
                return We;
              },
              reset: function () {
                clearTimeout(this._timer);
              },
              emit: function (e) {
                8 === this.state &&
                  (e && e.eventType & G
                    ? this.manager.emit(this.options.event + "up", e)
                    : ((this._input.timeStamp = f()),
                      this.manager.emit(this.options.event, this._input)));
              },
            }),
            w(Ze, Ye, {
              defaults: { event: "rotate", threshold: 0, pointers: 2 },
              getTouchAction: function () {
                return [_e];
              },
              attrTest: function (e) {
                return (
                  this._super.attrTest.call(this, e) &&
                  (Math.abs(e.rotation) > this.options.threshold ||
                    2 & this.state)
                );
              },
            }),
            w(Qe, Ye, {
              defaults: {
                event: "swipe",
                threshold: 10,
                velocity: 0.3,
                direction: Z | Q,
                pointers: 1,
              },
              getTouchAction: function () {
                return Xe.prototype.getTouchAction.call(this);
              },
              attrTest: function (e) {
                var t,
                  n = this.options.direction;
                return (
                  n & (Z | Q)
                    ? (t = e.overallVelocity)
                    : n & Z
                    ? (t = e.overallVelocityX)
                    : n & Q && (t = e.overallVelocityY),
                  this._super.attrTest.call(this, e) &&
                    n & e.offsetDirection &&
                    e.distance > this.options.threshold &&
                    e.maxPointers == this.options.pointers &&
                    p(t) > this.options.velocity &&
                    e.eventType & G
                );
              },
              emit: function (e) {
                var t = Ve(e.offsetDirection);
                t && this.manager.emit(this.options.event + t, e),
                  this.manager.emit(this.options.event, e);
              },
            }),
            w($e, He, {
              defaults: {
                event: "tap",
                pointers: 1,
                taps: 1,
                interval: 300,
                time: 250,
                threshold: 9,
                posThreshold: 10,
              },
              getTouchAction: function () {
                return [Ne];
              },
              process: function (e) {
                var t = this.options,
                  n = e.pointers.length === t.pointers,
                  i = e.distance < t.threshold,
                  o = e.deltaTime < t.time;
                if ((this.reset(), e.eventType & H && 0 === this.count))
                  return this.failTimeout();
                if (i && o && n) {
                  if (e.eventType != G) return this.failTimeout();
                  var a = !this.pTime || e.timeStamp - this.pTime < t.interval,
                    s =
                      !this.pCenter ||
                      re(this.pCenter, e.center) < t.posThreshold;
                  if (
                    ((this.pTime = e.timeStamp),
                    (this.pCenter = e.center),
                    s && a ? (this.count += 1) : (this.count = 1),
                    (this._input = e),
                    0 === this.count % t.taps)
                  )
                    return this.hasRequireFailures()
                      ? ((this._timer = g(
                          function () {
                            (this.state = 8), this.tryEmit();
                          },
                          t.interval,
                          this
                        )),
                        2)
                      : 8;
                }
                return We;
              },
              failTimeout: function () {
                return (
                  (this._timer = g(
                    function () {
                      this.state = We;
                    },
                    this.options.interval,
                    this
                  )),
                  We
                );
              },
              reset: function () {
                clearTimeout(this._timer);
              },
              emit: function () {
                8 == this.state &&
                  ((this._input.tapCount = this.count),
                  this.manager.emit(this.options.event, this._input));
              },
            }),
            (Je.VERSION = "2.0.7"),
            (Je.defaults = {
              domEvents: !1,
              touchAction: Re,
              enable: !0,
              inputTarget: null,
              inputClass: null,
              preset: [
                [Ze, { enable: !1 }],
                [Ke, { enable: !1 }, ["rotate"]],
                [Qe, { direction: Z }],
                [Xe, { direction: Z }, ["swipe"]],
                [$e],
                [$e, { event: "doubletap", taps: 2 }, ["tap"]],
                [qe],
              ],
              cssProps: {
                userSelect: "none",
                touchSelect: "none",
                touchCallout: "none",
                contentZooming: "none",
                userDrag: "none",
                tapHighlightColor: "rgba(0,0,0,0)",
              },
            });
          function et(e, t) {
            var n;
            (this.options = l({}, Je.defaults, t || {})),
              (this.options.inputTarget = this.options.inputTarget || e),
              (this.handlers = {}),
              (this.session = {}),
              (this.recognizers = []),
              (this.oldCssProps = {}),
              (this.element = e),
              (this.input = new ((n = this).options.inputClass ||
                (z ? ve : j ? ke : D ? Me : he))(n, ne)),
              (this.touchAction = new Be(this, this.options.touchAction)),
              tt(this, !0),
              v(
                this.options.recognizers,
                function (e) {
                  var t = this.add(new e[0](e[1]));
                  e[2] && t.recognizeWith(e[2]), e[3] && t.requireFailure(e[3]);
                },
                this
              );
          }
          function tt(e, t) {
            var n,
              i = e.element;
            i.style &&
              (v(e.options.cssProps, function (o, a) {
                (n = I(i.style, a)),
                  t
                    ? ((e.oldCssProps[n] = i.style[n]), (i.style[n] = o))
                    : (i.style[n] = e.oldCssProps[n] || "");
              }),
              t || (e.oldCssProps = {}));
          }
          (et.prototype = {
            set: function (e) {
              return (
                l(this.options, e),
                e.touchAction && this.touchAction.update(),
                e.inputTarget &&
                  (this.input.destroy(),
                  (this.input.target = e.inputTarget),
                  this.input.init()),
                this
              );
            },
            stop: function (e) {
              this.session.stopped = e ? 2 : 1;
            },
            recognize: function (e) {
              var t = this.session;
              if (!t.stopped) {
                var n;
                this.touchAction.preventDefaults(e);
                var i = this.recognizers,
                  o = t.curRecognizer;
                (!o || (o && 8 & o.state)) && (o = t.curRecognizer = null);
                for (var a = 0; a < i.length; )
                  (n = i[a]),
                    2 === t.stopped || (o && n != o && !n.canRecognizeWith(o))
                      ? n.reset()
                      : n.recognize(e),
                    !o && 14 & n.state && (o = t.curRecognizer = n),
                    a++;
              }
            },
            get: function (e) {
              if (e instanceof He) return e;
              for (var t = this.recognizers, n = 0; n < t.length; n++)
                if (t[n].options.event == e) return t[n];
              return null;
            },
            add: function (e) {
              if (m(e, "add", this)) return this;
              var t = this.get(e.options.event);
              return (
                t && this.remove(t),
                this.recognizers.push(e),
                (e.manager = this),
                this.touchAction.update(),
                e
              );
            },
            remove: function (e) {
              if (m(e, "remove", this)) return this;
              if ((e = this.get(e))) {
                var t = this.recognizers,
                  n = T(t, e);
                -1 !== n && (t.splice(n, 1), this.touchAction.update());
              }
              return this;
            },
            on: function (e, t) {
              if (e !== r && t !== r) {
                var n = this.handlers;
                return (
                  v(L(e), function (e) {
                    (n[e] = n[e] || []), n[e].push(t);
                  }),
                  this
                );
              }
            },
            off: function (e, t) {
              if (e !== r) {
                var n = this.handlers;
                return (
                  v(L(e), function (e) {
                    t ? n[e] && n[e].splice(T(n[e], t), 1) : delete n[e];
                  }),
                  this
                );
              }
            },
            emit: function (e, t) {
              this.options.domEvents &&
                (function (e, t) {
                  var n = a.createEvent("Event");
                  n.initEvent(e, !0, !0),
                    (n.gesture = t),
                    t.target.dispatchEvent(n);
                })(e, t);
              var n = this.handlers[e] && this.handlers[e].slice();
              if (n && n.length) {
                (t.type = e),
                  (t.preventDefault = function () {
                    t.srcEvent.preventDefault();
                  });
                for (var i = 0; i < n.length; ) n[i](t), i++;
              }
            },
            destroy: function () {
              this.element && tt(this, !1),
                (this.handlers = {}),
                (this.session = {}),
                this.input.destroy(),
                (this.element = null);
            },
          }),
            l(Je, {
              INPUT_START: H,
              INPUT_MOVE: 2,
              INPUT_END: G,
              INPUT_CANCEL: V,
              STATE_POSSIBLE: Fe,
              STATE_BEGAN: 2,
              STATE_CHANGED: 4,
              STATE_ENDED: 8,
              STATE_RECOGNIZED: 8,
              STATE_CANCELLED: 16,
              STATE_FAILED: We,
              DIRECTION_NONE: U,
              DIRECTION_LEFT: Y,
              DIRECTION_RIGHT: X,
              DIRECTION_UP: K,
              DIRECTION_DOWN: q,
              DIRECTION_HORIZONTAL: Z,
              DIRECTION_VERTICAL: Q,
              DIRECTION_ALL: $,
              Manager: et,
              Input: te,
              TouchAction: Be,
              TouchInput: ke,
              MouseInput: he,
              PointerEventInput: ve,
              TouchMouseInput: Me,
              SingleTouchInput: xe,
              Recognizer: He,
              AttrRecognizer: Ye,
              Tap: $e,
              Pan: Xe,
              Swipe: Qe,
              Pinch: Ke,
              Rotate: Ze,
              Press: qe,
              on: C,
              off: M,
              each: v,
              merge: y,
              extend: x,
              assign: l,
              inherit: w,
              bindFn: S,
              prefixed: I,
            }),
            (("undefined" !== typeof o
              ? o
              : "undefined" !== typeof self
              ? self
              : {}
            ).Hammer = Je),
            (i = function () {
              return Je;
            }.call(t, n, t, e)) === r || (e.exports = i);
        })(window, document);
      },
      219: (e, t, n) => {
        "use strict";
        var i = n(3763),
          o = {
            childContextTypes: !0,
            contextType: !0,
            contextTypes: !0,
            defaultProps: !0,
            displayName: !0,
            getDefaultProps: !0,
            getDerivedStateFromError: !0,
            getDerivedStateFromProps: !0,
            mixins: !0,
            propTypes: !0,
            type: !0,
          },
          a = {
            name: !0,
            length: !0,
            prototype: !0,
            caller: !0,
            callee: !0,
            arguments: !0,
            arity: !0,
          },
          s = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0,
          },
          r = {};
        function l(e) {
          return i.isMemo(e) ? s : r[e.$$typeof] || o;
        }
        (r[i.ForwardRef] = {
          $$typeof: !0,
          render: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
        }),
          (r[i.Memo] = s);
        var c = Object.defineProperty,
          u = Object.getOwnPropertyNames,
          d = Object.getOwnPropertySymbols,
          h = Object.getOwnPropertyDescriptor,
          p = Object.getPrototypeOf,
          f = Object.prototype;
        e.exports = function e(t, n, i) {
          if ("string" !== typeof n) {
            if (f) {
              var o = p(n);
              o && o !== f && e(t, o, i);
            }
            var s = u(n);
            d && (s = s.concat(d(n)));
            for (var r = l(t), g = l(n), m = 0; m < s.length; ++m) {
              var v = s[m];
              if (!a[v] && (!i || !i[v]) && (!g || !g[v]) && (!r || !r[v])) {
                var b = h(n, v);
                try {
                  c(t, v, b);
                } catch (x) {}
              }
            }
          }
          return t;
        };
      },
      4983: (e, t) => {
        "use strict";
        var n = "function" === typeof Symbol && Symbol.for,
          i = n ? Symbol.for("react.element") : 60103,
          o = n ? Symbol.for("react.portal") : 60106,
          a = n ? Symbol.for("react.fragment") : 60107,
          s = n ? Symbol.for("react.strict_mode") : 60108,
          r = n ? Symbol.for("react.profiler") : 60114,
          l = n ? Symbol.for("react.provider") : 60109,
          c = n ? Symbol.for("react.context") : 60110,
          u = n ? Symbol.for("react.async_mode") : 60111,
          d = n ? Symbol.for("react.concurrent_mode") : 60111,
          h = n ? Symbol.for("react.forward_ref") : 60112,
          p = n ? Symbol.for("react.suspense") : 60113,
          f = n ? Symbol.for("react.suspense_list") : 60120,
          g = n ? Symbol.for("react.memo") : 60115,
          m = n ? Symbol.for("react.lazy") : 60116,
          v = n ? Symbol.for("react.block") : 60121,
          b = n ? Symbol.for("react.fundamental") : 60117,
          x = n ? Symbol.for("react.responder") : 60118,
          y = n ? Symbol.for("react.scope") : 60119;
        function w(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case i:
                switch ((e = e.type)) {
                  case u:
                  case d:
                  case a:
                  case r:
                  case s:
                  case p:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case c:
                      case h:
                      case m:
                      case g:
                      case l:
                        return e;
                      default:
                        return t;
                    }
                }
              case o:
                return t;
            }
          }
        }
        function S(e) {
          return w(e) === d;
        }
        (t.AsyncMode = u),
          (t.ConcurrentMode = d),
          (t.ContextConsumer = c),
          (t.ContextProvider = l),
          (t.Element = i),
          (t.ForwardRef = h),
          (t.Fragment = a),
          (t.Lazy = m),
          (t.Memo = g),
          (t.Portal = o),
          (t.Profiler = r),
          (t.StrictMode = s),
          (t.Suspense = p),
          (t.isAsyncMode = function (e) {
            return S(e) || w(e) === u;
          }),
          (t.isConcurrentMode = S),
          (t.isContextConsumer = function (e) {
            return w(e) === c;
          }),
          (t.isContextProvider = function (e) {
            return w(e) === l;
          }),
          (t.isElement = function (e) {
            return "object" === typeof e && null !== e && e.$$typeof === i;
          }),
          (t.isForwardRef = function (e) {
            return w(e) === h;
          }),
          (t.isFragment = function (e) {
            return w(e) === a;
          }),
          (t.isLazy = function (e) {
            return w(e) === m;
          }),
          (t.isMemo = function (e) {
            return w(e) === g;
          }),
          (t.isPortal = function (e) {
            return w(e) === o;
          }),
          (t.isProfiler = function (e) {
            return w(e) === r;
          }),
          (t.isStrictMode = function (e) {
            return w(e) === s;
          }),
          (t.isSuspense = function (e) {
            return w(e) === p;
          }),
          (t.isValidElementType = function (e) {
            return (
              "string" === typeof e ||
              "function" === typeof e ||
              e === a ||
              e === d ||
              e === r ||
              e === s ||
              e === p ||
              e === f ||
              ("object" === typeof e &&
                null !== e &&
                (e.$$typeof === m ||
                  e.$$typeof === g ||
                  e.$$typeof === l ||
                  e.$$typeof === c ||
                  e.$$typeof === h ||
                  e.$$typeof === b ||
                  e.$$typeof === x ||
                  e.$$typeof === y ||
                  e.$$typeof === v))
            );
          }),
          (t.typeOf = w);
      },
      3763: (e, t, n) => {
        "use strict";
        e.exports = n(4983);
      },
      1497: (e, t, n) => {
        "use strict";
        var i = n(3218);
        function o() {}
        function a() {}
        (a.resetWarningCache = o),
          (e.exports = function () {
            function e(e, t, n, o, a, s) {
              if (s !== i) {
                var r = new Error(
                  "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
                );
                throw ((r.name = "Invariant Violation"), r);
              }
            }
            function t() {
              return e;
            }
            e.isRequired = e;
            var n = {
              array: e,
              bigint: e,
              bool: e,
              func: e,
              number: e,
              object: e,
              string: e,
              symbol: e,
              any: e,
              arrayOf: t,
              element: e,
              elementType: e,
              instanceOf: t,
              node: e,
              objectOf: t,
              oneOf: t,
              oneOfType: t,
              shape: t,
              exact: t,
              checkPropTypes: a,
              resetWarningCache: o,
            };
            return (n.PropTypes = n), n;
          });
      },
      5173: (e, t, n) => {
        e.exports = n(1497)();
      },
      3218: (e) => {
        "use strict";
        e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      },
      2019: (e, t, n) => {
        "use strict";
        var i =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                },
          o =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n,
                  i = arguments[t];
                for (n in i)
                  Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);
              }
              return e;
            },
          a = (function () {
            function e(e, t) {
              for (var n = 0; n < t.length; n++) {
                var i = t[n];
                (i.enumerable = i.enumerable || !1),
                  (i.configurable = !0),
                  "value" in i && (i.writable = !0),
                  Object.defineProperty(e, i.key, i);
              }
            }
            return function (t, n, i) {
              return n && e(t.prototype, n), i && e(t, i), t;
            };
          })(),
          s = u(n(3606)),
          r = n(5043),
          l = u(r),
          c = u(n(5173));
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        window.ApexCharts = s.default;
        var d = (function () {
          function e(t) {
            !(function (e, t) {
              if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function");
            })(this, e);
            var n = (function (e, t) {
              if (e)
                return !t || ("object" != typeof t && "function" != typeof t)
                  ? e
                  : t;
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            })(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t));
            return (
              l.default.createRef
                ? (n.chartRef = l.default.createRef())
                : (n.setRef = function (e) {
                    return (n.chartRef = e);
                  }),
              (n.chart = null),
              n
            );
          }
          return (
            (function (e, t) {
              if ("function" != typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function, not " +
                    typeof t
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
                t &&
                  (Object.setPrototypeOf
                    ? Object.setPrototypeOf(e, t)
                    : (e.__proto__ = t));
            })(e, r.Component),
            a(e, [
              {
                key: "render",
                value: function () {
                  var e = (function (e, t) {
                    var n,
                      i = {};
                    for (n in e)
                      0 <= t.indexOf(n) ||
                        (Object.prototype.hasOwnProperty.call(e, n) &&
                          (i[n] = e[n]));
                    return i;
                  })(this.props, []);
                  return l.default.createElement(
                    "div",
                    o(
                      {
                        ref: l.default.createRef ? this.chartRef : this.setRef,
                      },
                      e
                    )
                  );
                },
              },
              {
                key: "componentDidMount",
                value: function () {
                  var e = l.default.createRef
                    ? this.chartRef.current
                    : this.chartRef;
                  (this.chart = new s.default(e, this.getConfig())),
                    this.chart.render();
                },
              },
              {
                key: "getConfig",
                value: function () {
                  var e = (o = this.props).type,
                    t = o.height,
                    n = o.width,
                    i = o.series,
                    o = o.options;
                  return this.extend(o, {
                    chart: { type: e, height: t, width: n },
                    series: i,
                  });
                },
              },
              {
                key: "isObject",
                value: function (e) {
                  return (
                    e &&
                    "object" === (void 0 === e ? "undefined" : i(e)) &&
                    !Array.isArray(e) &&
                    null != e
                  );
                },
              },
              {
                key: "extend",
                value: function (e, t) {
                  var n = this,
                    i =
                      ("function" != typeof Object.assign &&
                        (Object.assign = function (e) {
                          if (null == e)
                            throw new TypeError(
                              "Cannot convert undefined or null to object"
                            );
                          for (
                            var t = Object(e), n = 1;
                            n < arguments.length;
                            n++
                          ) {
                            var i = arguments[n];
                            if (null != i)
                              for (var o in i)
                                i.hasOwnProperty(o) && (t[o] = i[o]);
                          }
                          return t;
                        }),
                      Object.assign({}, e));
                  return (
                    this.isObject(e) &&
                      this.isObject(t) &&
                      Object.keys(t).forEach(function (o) {
                        n.isObject(t[o]) && o in e
                          ? (i[o] = n.extend(e[o], t[o]))
                          : Object.assign(
                              i,
                              (function (e, t, n) {
                                return (
                                  t in e
                                    ? Object.defineProperty(e, t, {
                                        value: n,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0,
                                      })
                                    : (e[t] = n),
                                  e
                                );
                              })({}, o, t[o])
                            );
                      }),
                    i
                  );
                },
              },
              {
                key: "componentDidUpdate",
                value: function (e) {
                  if (!this.chart) return null;
                  var t = (o = this.props).options,
                    n = o.series,
                    i = o.height,
                    o = o.width,
                    a = JSON.stringify(e.options),
                    s = JSON.stringify(e.series),
                    r = ((t = JSON.stringify(t)), JSON.stringify(n));
                  (a === t && s === r && i === e.height && o === e.width) ||
                    (s !== r && a === t && i === e.height && o === e.width
                      ? this.chart.updateSeries(n)
                      : this.chart.updateOptions(this.getConfig()));
                },
              },
              {
                key: "componentWillUnmount",
                value: function () {
                  this.chart &&
                    "function" == typeof this.chart.destroy &&
                    this.chart.destroy();
                },
              },
            ]),
            e
          );
        })();
        ((t.A = d).propTypes = {
          type: c.default.string.isRequired,
          width: c.default.oneOfType([c.default.string, c.default.number]),
          height: c.default.oneOfType([c.default.string, c.default.number]),
          series: c.default.array.isRequired,
          options: c.default.object.isRequired,
        }),
          (d.defaultProps = { type: "line", width: "100%", height: "auto" });
      },
      2730: (e, t, n) => {
        "use strict";
        var i = n(5043),
          o = n(8853);
        function a(e) {
          for (
            var t =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + e,
              n = 1;
            n < arguments.length;
            n++
          )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
          return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        var s = new Set(),
          r = {};
        function l(e, t) {
          c(e, t), c(e + "Capture", t);
        }
        function c(e, t) {
          for (r[e] = t, e = 0; e < t.length; e++) s.add(t[e]);
        }
        var u = !(
            "undefined" === typeof window ||
            "undefined" === typeof window.document ||
            "undefined" === typeof window.document.createElement
          ),
          d = Object.prototype.hasOwnProperty,
          h =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          p = {},
          f = {};
        function g(e, t, n, i, o, a, s) {
          (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
            (this.attributeName = i),
            (this.attributeNamespace = o),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = a),
            (this.removeEmptyString = s);
        }
        var m = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
          .split(" ")
          .forEach(function (e) {
            m[e] = new g(e, 0, !1, e, null, !1, !1);
          }),
          [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
          ].forEach(function (e) {
            var t = e[0];
            m[t] = new g(t, 1, !1, e[1], null, !1, !1);
          }),
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            function (e) {
              m[e] = new g(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
          ),
          [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
          ].forEach(function (e) {
            m[e] = new g(e, 2, !1, e, null, !1, !1);
          }),
          "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
            .split(" ")
            .forEach(function (e) {
              m[e] = new g(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
          ["checked", "multiple", "muted", "selected"].forEach(function (e) {
            m[e] = new g(e, 3, !0, e, null, !1, !1);
          }),
          ["capture", "download"].forEach(function (e) {
            m[e] = new g(e, 4, !1, e, null, !1, !1);
          }),
          ["cols", "rows", "size", "span"].forEach(function (e) {
            m[e] = new g(e, 6, !1, e, null, !1, !1);
          }),
          ["rowSpan", "start"].forEach(function (e) {
            m[e] = new g(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        var v = /[\-:]([a-z])/g;
        function b(e) {
          return e[1].toUpperCase();
        }
        function x(e, t, n, i) {
          var o = m.hasOwnProperty(t) ? m[t] : null;
          (null !== o
            ? 0 !== o.type
            : i ||
              !(2 < t.length) ||
              ("o" !== t[0] && "O" !== t[0]) ||
              ("n" !== t[1] && "N" !== t[1])) &&
            ((function (e, t, n, i) {
              if (
                null === t ||
                "undefined" === typeof t ||
                (function (e, t, n, i) {
                  if (null !== n && 0 === n.type) return !1;
                  switch (typeof t) {
                    case "function":
                    case "symbol":
                      return !0;
                    case "boolean":
                      return (
                        !i &&
                        (null !== n
                          ? !n.acceptsBooleans
                          : "data-" !== (e = e.toLowerCase().slice(0, 5)) &&
                            "aria-" !== e)
                      );
                    default:
                      return !1;
                  }
                })(e, t, n, i)
              )
                return !0;
              if (i) return !1;
              if (null !== n)
                switch (n.type) {
                  case 3:
                    return !t;
                  case 4:
                    return !1 === t;
                  case 5:
                    return isNaN(t);
                  case 6:
                    return isNaN(t) || 1 > t;
                }
              return !1;
            })(t, n, o, i) && (n = null),
            i || null === o
              ? (function (e) {
                  return (
                    !!d.call(f, e) ||
                    (!d.call(p, e) &&
                      (h.test(e) ? (f[e] = !0) : ((p[e] = !0), !1)))
                  );
                })(t) &&
                (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n))
              : o.mustUseProperty
              ? (e[o.propertyName] = null === n ? 3 !== o.type && "" : n)
              : ((t = o.attributeName),
                (i = o.attributeNamespace),
                null === n
                  ? e.removeAttribute(t)
                  : ((n =
                      3 === (o = o.type) || (4 === o && !0 === n)
                        ? ""
                        : "" + n),
                    i ? e.setAttributeNS(i, t, n) : e.setAttribute(t, n))));
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
          .split(" ")
          .forEach(function (e) {
            var t = e.replace(v, b);
            m[t] = new g(t, 1, !1, e, null, !1, !1);
          }),
          "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
            .split(" ")
            .forEach(function (e) {
              var t = e.replace(v, b);
              m[t] = new g(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
            }),
          ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
            var t = e.replace(v, b);
            m[t] = new g(
              t,
              1,
              !1,
              e,
              "http://www.w3.org/XML/1998/namespace",
              !1,
              !1
            );
          }),
          ["tabIndex", "crossOrigin"].forEach(function (e) {
            m[e] = new g(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (m.xlinkHref = new g(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
          )),
          ["src", "href", "action", "formAction"].forEach(function (e) {
            m[e] = new g(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        var y = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
          w = Symbol.for("react.element"),
          S = Symbol.for("react.portal"),
          k = Symbol.for("react.fragment"),
          A = Symbol.for("react.strict_mode"),
          C = Symbol.for("react.profiler"),
          M = Symbol.for("react.provider"),
          P = Symbol.for("react.context"),
          E = Symbol.for("react.forward_ref"),
          L = Symbol.for("react.suspense"),
          T = Symbol.for("react.suspense_list"),
          O = Symbol.for("react.memo"),
          R = Symbol.for("react.lazy");
        Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
        var I = Symbol.for("react.offscreen");
        Symbol.for("react.legacy_hidden"),
          Symbol.for("react.cache"),
          Symbol.for("react.tracing_marker");
        var N = Symbol.iterator;
        function _(e) {
          return null === e || "object" !== typeof e
            ? null
            : "function" === typeof (e = (N && e[N]) || e["@@iterator"])
            ? e
            : null;
        }
        var D,
          z = Object.assign;
        function j(e) {
          if (void 0 === D)
            try {
              throw Error();
            } catch (n) {
              var t = n.stack.trim().match(/\n( *(at )?)/);
              D = (t && t[1]) || "";
            }
          return "\n" + D + e;
        }
        var B = !1;
        function F(e, t) {
          if (!e || B) return "";
          B = !0;
          var n = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          try {
            if (t)
              if (
                ((t = function () {
                  throw Error();
                }),
                Object.defineProperty(t.prototype, "props", {
                  set: function () {
                    throw Error();
                  },
                }),
                "object" === typeof Reflect && Reflect.construct)
              ) {
                try {
                  Reflect.construct(t, []);
                } catch (c) {
                  var i = c;
                }
                Reflect.construct(e, [], t);
              } else {
                try {
                  t.call();
                } catch (c) {
                  i = c;
                }
                e.call(t.prototype);
              }
            else {
              try {
                throw Error();
              } catch (c) {
                i = c;
              }
              e();
            }
          } catch (c) {
            if (c && i && "string" === typeof c.stack) {
              for (
                var o = c.stack.split("\n"),
                  a = i.stack.split("\n"),
                  s = o.length - 1,
                  r = a.length - 1;
                1 <= s && 0 <= r && o[s] !== a[r];

              )
                r--;
              for (; 1 <= s && 0 <= r; s--, r--)
                if (o[s] !== a[r]) {
                  if (1 !== s || 1 !== r)
                    do {
                      if ((s--, 0 > --r || o[s] !== a[r])) {
                        var l = "\n" + o[s].replace(" at new ", " at ");
                        return (
                          e.displayName &&
                            l.includes("<anonymous>") &&
                            (l = l.replace("<anonymous>", e.displayName)),
                          l
                        );
                      }
                    } while (1 <= s && 0 <= r);
                  break;
                }
            }
          } finally {
            (B = !1), (Error.prepareStackTrace = n);
          }
          return (e = e ? e.displayName || e.name : "") ? j(e) : "";
        }
        function W(e) {
          switch (e.tag) {
            case 5:
              return j(e.type);
            case 16:
              return j("Lazy");
            case 13:
              return j("Suspense");
            case 19:
              return j("SuspenseList");
            case 0:
            case 2:
            case 15:
              return (e = F(e.type, !1));
            case 11:
              return (e = F(e.type.render, !1));
            case 1:
              return (e = F(e.type, !0));
            default:
              return "";
          }
        }
        function H(e) {
          if (null == e) return null;
          if ("function" === typeof e) return e.displayName || e.name || null;
          if ("string" === typeof e) return e;
          switch (e) {
            case k:
              return "Fragment";
            case S:
              return "Portal";
            case C:
              return "Profiler";
            case A:
              return "StrictMode";
            case L:
              return "Suspense";
            case T:
              return "SuspenseList";
          }
          if ("object" === typeof e)
            switch (e.$$typeof) {
              case P:
                return (e.displayName || "Context") + ".Consumer";
              case M:
                return (e._context.displayName || "Context") + ".Provider";
              case E:
                var t = e.render;
                return (
                  (e = e.displayName) ||
                    (e =
                      "" !== (e = t.displayName || t.name || "")
                        ? "ForwardRef(" + e + ")"
                        : "ForwardRef"),
                  e
                );
              case O:
                return null !== (t = e.displayName || null)
                  ? t
                  : H(e.type) || "Memo";
              case R:
                (t = e._payload), (e = e._init);
                try {
                  return H(e(t));
                } catch (n) {}
            }
          return null;
        }
        function G(e) {
          var t = e.type;
          switch (e.tag) {
            case 24:
              return "Cache";
            case 9:
              return (t.displayName || "Context") + ".Consumer";
            case 10:
              return (t._context.displayName || "Context") + ".Provider";
            case 18:
              return "DehydratedFragment";
            case 11:
              return (
                (e = (e = t.render).displayName || e.name || ""),
                t.displayName ||
                  ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef")
              );
            case 7:
              return "Fragment";
            case 5:
              return t;
            case 4:
              return "Portal";
            case 3:
              return "Root";
            case 6:
              return "Text";
            case 16:
              return H(t);
            case 8:
              return t === A ? "StrictMode" : "Mode";
            case 22:
              return "Offscreen";
            case 12:
              return "Profiler";
            case 21:
              return "Scope";
            case 13:
              return "Suspense";
            case 19:
              return "SuspenseList";
            case 25:
              return "TracingMarker";
            case 1:
            case 0:
            case 17:
            case 2:
            case 14:
            case 15:
              if ("function" === typeof t)
                return t.displayName || t.name || null;
              if ("string" === typeof t) return t;
          }
          return null;
        }
        function V(e) {
          switch (typeof e) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
            case "object":
              return e;
            default:
              return "";
          }
        }
        function U(e) {
          var t = e.type;
          return (
            (e = e.nodeName) &&
            "input" === e.toLowerCase() &&
            ("checkbox" === t || "radio" === t)
          );
        }
        function Y(e) {
          e._valueTracker ||
            (e._valueTracker = (function (e) {
              var t = U(e) ? "checked" : "value",
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                i = "" + e[t];
              if (
                !e.hasOwnProperty(t) &&
                "undefined" !== typeof n &&
                "function" === typeof n.get &&
                "function" === typeof n.set
              ) {
                var o = n.get,
                  a = n.set;
                return (
                  Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                      return o.call(this);
                    },
                    set: function (e) {
                      (i = "" + e), a.call(this, e);
                    },
                  }),
                  Object.defineProperty(e, t, { enumerable: n.enumerable }),
                  {
                    getValue: function () {
                      return i;
                    },
                    setValue: function (e) {
                      i = "" + e;
                    },
                    stopTracking: function () {
                      (e._valueTracker = null), delete e[t];
                    },
                  }
                );
              }
            })(e));
        }
        function X(e) {
          if (!e) return !1;
          var t = e._valueTracker;
          if (!t) return !0;
          var n = t.getValue(),
            i = "";
          return (
            e && (i = U(e) ? (e.checked ? "true" : "false") : e.value),
            (e = i) !== n && (t.setValue(e), !0)
          );
        }
        function K(e) {
          if (
            "undefined" ===
            typeof (e =
              e || ("undefined" !== typeof document ? document : void 0))
          )
            return null;
          try {
            return e.activeElement || e.body;
          } catch (t) {
            return e.body;
          }
        }
        function q(e, t) {
          var n = t.checked;
          return z({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked,
          });
        }
        function Z(e, t) {
          var n = null == t.defaultValue ? "" : t.defaultValue,
            i = null != t.checked ? t.checked : t.defaultChecked;
          (n = V(null != t.value ? t.value : n)),
            (e._wrapperState = {
              initialChecked: i,
              initialValue: n,
              controlled:
                "checkbox" === t.type || "radio" === t.type
                  ? null != t.checked
                  : null != t.value,
            });
        }
        function Q(e, t) {
          null != (t = t.checked) && x(e, "checked", t, !1);
        }
        function $(e, t) {
          Q(e, t);
          var n = V(t.value),
            i = t.type;
          if (null != n)
            "number" === i
              ? ((0 === n && "" === e.value) || e.value != n) &&
                (e.value = "" + n)
              : e.value !== "" + n && (e.value = "" + n);
          else if ("submit" === i || "reset" === i)
            return void e.removeAttribute("value");
          t.hasOwnProperty("value")
            ? ee(e, t.type, n)
            : t.hasOwnProperty("defaultValue") &&
              ee(e, t.type, V(t.defaultValue)),
            null == t.checked &&
              null != t.defaultChecked &&
              (e.defaultChecked = !!t.defaultChecked);
        }
        function J(e, t, n) {
          if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var i = t.type;
            if (
              !(
                ("submit" !== i && "reset" !== i) ||
                (void 0 !== t.value && null !== t.value)
              )
            )
              return;
            (t = "" + e._wrapperState.initialValue),
              n || t === e.value || (e.value = t),
              (e.defaultValue = t);
          }
          "" !== (n = e.name) && (e.name = ""),
            (e.defaultChecked = !!e._wrapperState.initialChecked),
            "" !== n && (e.name = n);
        }
        function ee(e, t, n) {
          ("number" === t && K(e.ownerDocument) === e) ||
            (null == n
              ? (e.defaultValue = "" + e._wrapperState.initialValue)
              : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
        }
        var te = Array.isArray;
        function ne(e, t, n, i) {
          if (((e = e.options), t)) {
            t = {};
            for (var o = 0; o < n.length; o++) t["$" + n[o]] = !0;
            for (n = 0; n < e.length; n++)
              (o = t.hasOwnProperty("$" + e[n].value)),
                e[n].selected !== o && (e[n].selected = o),
                o && i && (e[n].defaultSelected = !0);
          } else {
            for (n = "" + V(n), t = null, o = 0; o < e.length; o++) {
              if (e[o].value === n)
                return (
                  (e[o].selected = !0), void (i && (e[o].defaultSelected = !0))
                );
              null !== t || e[o].disabled || (t = e[o]);
            }
            null !== t && (t.selected = !0);
          }
        }
        function ie(e, t) {
          if (null != t.dangerouslySetInnerHTML) throw Error(a(91));
          return z({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue,
          });
        }
        function oe(e, t) {
          var n = t.value;
          if (null == n) {
            if (((n = t.children), (t = t.defaultValue), null != n)) {
              if (null != t) throw Error(a(92));
              if (te(n)) {
                if (1 < n.length) throw Error(a(93));
                n = n[0];
              }
              t = n;
            }
            null == t && (t = ""), (n = t);
          }
          e._wrapperState = { initialValue: V(n) };
        }
        function ae(e, t) {
          var n = V(t.value),
            i = V(t.defaultValue);
          null != n &&
            ((n = "" + n) !== e.value && (e.value = n),
            null == t.defaultValue &&
              e.defaultValue !== n &&
              (e.defaultValue = n)),
            null != i && (e.defaultValue = "" + i);
        }
        function se(e) {
          var t = e.textContent;
          t === e._wrapperState.initialValue &&
            "" !== t &&
            null !== t &&
            (e.value = t);
        }
        function re(e) {
          switch (e) {
            case "svg":
              return "http://www.w3.org/2000/svg";
            case "math":
              return "http://www.w3.org/1998/Math/MathML";
            default:
              return "http://www.w3.org/1999/xhtml";
          }
        }
        function le(e, t) {
          return null == e || "http://www.w3.org/1999/xhtml" === e
            ? re(t)
            : "http://www.w3.org/2000/svg" === e && "foreignObject" === t
            ? "http://www.w3.org/1999/xhtml"
            : e;
        }
        var ce,
          ue,
          de =
            ((ue = function (e, t) {
              if (
                "http://www.w3.org/2000/svg" !== e.namespaceURI ||
                "innerHTML" in e
              )
                e.innerHTML = t;
              else {
                for (
                  (ce = ce || document.createElement("div")).innerHTML =
                    "<svg>" + t.valueOf().toString() + "</svg>",
                    t = ce.firstChild;
                  e.firstChild;

                )
                  e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
              }
            }),
            "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (e, t, n, i) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return ue(e, t);
                  });
                }
              : ue);
        function he(e, t) {
          if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
              return void (n.nodeValue = t);
          }
          e.textContent = t;
        }
        var pe = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          fe = ["Webkit", "ms", "Moz", "O"];
        function ge(e, t, n) {
          return null == t || "boolean" === typeof t || "" === t
            ? ""
            : n ||
              "number" !== typeof t ||
              0 === t ||
              (pe.hasOwnProperty(e) && pe[e])
            ? ("" + t).trim()
            : t + "px";
        }
        function me(e, t) {
          for (var n in ((e = e.style), t))
            if (t.hasOwnProperty(n)) {
              var i = 0 === n.indexOf("--"),
                o = ge(n, t[n], i);
              "float" === n && (n = "cssFloat"),
                i ? e.setProperty(n, o) : (e[n] = o);
            }
        }
        Object.keys(pe).forEach(function (e) {
          fe.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
              (pe[t] = pe[e]);
          });
        });
        var ve = z(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function be(e, t) {
          if (t) {
            if (
              ve[e] &&
              (null != t.children || null != t.dangerouslySetInnerHTML)
            )
              throw Error(a(137, e));
            if (null != t.dangerouslySetInnerHTML) {
              if (null != t.children) throw Error(a(60));
              if (
                "object" !== typeof t.dangerouslySetInnerHTML ||
                !("__html" in t.dangerouslySetInnerHTML)
              )
                throw Error(a(61));
            }
            if (null != t.style && "object" !== typeof t.style)
              throw Error(a(62));
          }
        }
        function xe(e, t) {
          if (-1 === e.indexOf("-")) return "string" === typeof t.is;
          switch (e) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return !1;
            default:
              return !0;
          }
        }
        var ye = null;
        function we(e) {
          return (
            (e = e.target || e.srcElement || window).correspondingUseElement &&
              (e = e.correspondingUseElement),
            3 === e.nodeType ? e.parentNode : e
          );
        }
        var Se = null,
          ke = null,
          Ae = null;
        function Ce(e) {
          if ((e = yo(e))) {
            if ("function" !== typeof Se) throw Error(a(280));
            var t = e.stateNode;
            t && ((t = So(t)), Se(e.stateNode, e.type, t));
          }
        }
        function Me(e) {
          ke ? (Ae ? Ae.push(e) : (Ae = [e])) : (ke = e);
        }
        function Pe() {
          if (ke) {
            var e = ke,
              t = Ae;
            if (((Ae = ke = null), Ce(e), t))
              for (e = 0; e < t.length; e++) Ce(t[e]);
          }
        }
        function Ee(e, t) {
          return e(t);
        }
        function Le() {}
        var Te = !1;
        function Oe(e, t, n) {
          if (Te) return e(t, n);
          Te = !0;
          try {
            return Ee(e, t, n);
          } finally {
            (Te = !1), (null !== ke || null !== Ae) && (Le(), Pe());
          }
        }
        function Re(e, t) {
          var n = e.stateNode;
          if (null === n) return null;
          var i = So(n);
          if (null === i) return null;
          n = i[t];
          e: switch (t) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (i = !i.disabled) ||
                (i = !(
                  "button" === (e = e.type) ||
                  "input" === e ||
                  "select" === e ||
                  "textarea" === e
                )),
                (e = !i);
              break e;
            default:
              e = !1;
          }
          if (e) return null;
          if (n && "function" !== typeof n) throw Error(a(231, t, typeof n));
          return n;
        }
        var Ie = !1;
        if (u)
          try {
            var Ne = {};
            Object.defineProperty(Ne, "passive", {
              get: function () {
                Ie = !0;
              },
            }),
              window.addEventListener("test", Ne, Ne),
              window.removeEventListener("test", Ne, Ne);
          } catch (ue) {
            Ie = !1;
          }
        function _e(e, t, n, i, o, a, s, r, l) {
          var c = Array.prototype.slice.call(arguments, 3);
          try {
            t.apply(n, c);
          } catch (u) {
            this.onError(u);
          }
        }
        var De = !1,
          ze = null,
          je = !1,
          Be = null,
          Fe = {
            onError: function (e) {
              (De = !0), (ze = e);
            },
          };
        function We(e, t, n, i, o, a, s, r, l) {
          (De = !1), (ze = null), _e.apply(Fe, arguments);
        }
        function He(e) {
          var t = e,
            n = e;
          if (e.alternate) for (; t.return; ) t = t.return;
          else {
            e = t;
            do {
              0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
            } while (e);
          }
          return 3 === t.tag ? n : null;
        }
        function Ge(e) {
          if (13 === e.tag) {
            var t = e.memoizedState;
            if (
              (null === t &&
                null !== (e = e.alternate) &&
                (t = e.memoizedState),
              null !== t)
            )
              return t.dehydrated;
          }
          return null;
        }
        function Ve(e) {
          if (He(e) !== e) throw Error(a(188));
        }
        function Ue(e) {
          return null !==
            (e = (function (e) {
              var t = e.alternate;
              if (!t) {
                if (null === (t = He(e))) throw Error(a(188));
                return t !== e ? null : e;
              }
              for (var n = e, i = t; ; ) {
                var o = n.return;
                if (null === o) break;
                var s = o.alternate;
                if (null === s) {
                  if (null !== (i = o.return)) {
                    n = i;
                    continue;
                  }
                  break;
                }
                if (o.child === s.child) {
                  for (s = o.child; s; ) {
                    if (s === n) return Ve(o), e;
                    if (s === i) return Ve(o), t;
                    s = s.sibling;
                  }
                  throw Error(a(188));
                }
                if (n.return !== i.return) (n = o), (i = s);
                else {
                  for (var r = !1, l = o.child; l; ) {
                    if (l === n) {
                      (r = !0), (n = o), (i = s);
                      break;
                    }
                    if (l === i) {
                      (r = !0), (i = o), (n = s);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!r) {
                    for (l = s.child; l; ) {
                      if (l === n) {
                        (r = !0), (n = s), (i = o);
                        break;
                      }
                      if (l === i) {
                        (r = !0), (i = s), (n = o);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!r) throw Error(a(189));
                  }
                }
                if (n.alternate !== i) throw Error(a(190));
              }
              if (3 !== n.tag) throw Error(a(188));
              return n.stateNode.current === n ? e : t;
            })(e))
            ? Ye(e)
            : null;
        }
        function Ye(e) {
          if (5 === e.tag || 6 === e.tag) return e;
          for (e = e.child; null !== e; ) {
            var t = Ye(e);
            if (null !== t) return t;
            e = e.sibling;
          }
          return null;
        }
        var Xe = o.unstable_scheduleCallback,
          Ke = o.unstable_cancelCallback,
          qe = o.unstable_shouldYield,
          Ze = o.unstable_requestPaint,
          Qe = o.unstable_now,
          $e = o.unstable_getCurrentPriorityLevel,
          Je = o.unstable_ImmediatePriority,
          et = o.unstable_UserBlockingPriority,
          tt = o.unstable_NormalPriority,
          nt = o.unstable_LowPriority,
          it = o.unstable_IdlePriority,
          ot = null,
          at = null;
        var st = Math.clz32
            ? Math.clz32
            : function (e) {
                return (e >>>= 0), 0 === e ? 32 : (31 - ((rt(e) / lt) | 0)) | 0;
              },
          rt = Math.log,
          lt = Math.LN2;
        var ct = 64,
          ut = 4194304;
        function dt(e) {
          switch (e & -e) {
            case 1:
              return 1;
            case 2:
              return 2;
            case 4:
              return 4;
            case 8:
              return 8;
            case 16:
              return 16;
            case 32:
              return 32;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return 4194240 & e;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              return 130023424 & e;
            case 134217728:
              return 134217728;
            case 268435456:
              return 268435456;
            case 536870912:
              return 536870912;
            case 1073741824:
              return 1073741824;
            default:
              return e;
          }
        }
        function ht(e, t) {
          var n = e.pendingLanes;
          if (0 === n) return 0;
          var i = 0,
            o = e.suspendedLanes,
            a = e.pingedLanes,
            s = 268435455 & n;
          if (0 !== s) {
            var r = s & ~o;
            0 !== r ? (i = dt(r)) : 0 !== (a &= s) && (i = dt(a));
          } else 0 !== (s = n & ~o) ? (i = dt(s)) : 0 !== a && (i = dt(a));
          if (0 === i) return 0;
          if (
            0 !== t &&
            t !== i &&
            0 === (t & o) &&
            ((o = i & -i) >= (a = t & -t) || (16 === o && 0 !== (4194240 & a)))
          )
            return t;
          if ((0 !== (4 & i) && (i |= 16 & n), 0 !== (t = e.entangledLanes)))
            for (e = e.entanglements, t &= i; 0 < t; )
              (o = 1 << (n = 31 - st(t))), (i |= e[n]), (t &= ~o);
          return i;
        }
        function pt(e, t) {
          switch (e) {
            case 1:
            case 2:
            case 4:
              return t + 250;
            case 8:
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return t + 5e3;
            default:
              return -1;
          }
        }
        function ft(e) {
          return 0 !== (e = -1073741825 & e.pendingLanes)
            ? e
            : 1073741824 & e
            ? 1073741824
            : 0;
        }
        function gt() {
          var e = ct;
          return 0 === (4194240 & (ct <<= 1)) && (ct = 64), e;
        }
        function mt(e) {
          for (var t = [], n = 0; 31 > n; n++) t.push(e);
          return t;
        }
        function vt(e, t, n) {
          (e.pendingLanes |= t),
            536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
            ((e = e.eventTimes)[(t = 31 - st(t))] = n);
        }
        function bt(e, t) {
          var n = (e.entangledLanes |= t);
          for (e = e.entanglements; n; ) {
            var i = 31 - st(n),
              o = 1 << i;
            (o & t) | (e[i] & t) && (e[i] |= t), (n &= ~o);
          }
        }
        var xt = 0;
        function yt(e) {
          return 1 < (e &= -e)
            ? 4 < e
              ? 0 !== (268435455 & e)
                ? 16
                : 536870912
              : 4
            : 1;
        }
        var wt,
          St,
          kt,
          At,
          Ct,
          Mt = !1,
          Pt = [],
          Et = null,
          Lt = null,
          Tt = null,
          Ot = new Map(),
          Rt = new Map(),
          It = [],
          Nt =
            "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
              " "
            );
        function _t(e, t) {
          switch (e) {
            case "focusin":
            case "focusout":
              Et = null;
              break;
            case "dragenter":
            case "dragleave":
              Lt = null;
              break;
            case "mouseover":
            case "mouseout":
              Tt = null;
              break;
            case "pointerover":
            case "pointerout":
              Ot.delete(t.pointerId);
              break;
            case "gotpointercapture":
            case "lostpointercapture":
              Rt.delete(t.pointerId);
          }
        }
        function Dt(e, t, n, i, o, a) {
          return null === e || e.nativeEvent !== a
            ? ((e = {
                blockedOn: t,
                domEventName: n,
                eventSystemFlags: i,
                nativeEvent: a,
                targetContainers: [o],
              }),
              null !== t && null !== (t = yo(t)) && St(t),
              e)
            : ((e.eventSystemFlags |= i),
              (t = e.targetContainers),
              null !== o && -1 === t.indexOf(o) && t.push(o),
              e);
        }
        function zt(e) {
          var t = xo(e.target);
          if (null !== t) {
            var n = He(t);
            if (null !== n)
              if (13 === (t = n.tag)) {
                if (null !== (t = Ge(n)))
                  return (
                    (e.blockedOn = t),
                    void Ct(e.priority, function () {
                      kt(n);
                    })
                  );
              } else if (
                3 === t &&
                n.stateNode.current.memoizedState.isDehydrated
              )
                return void (e.blockedOn =
                  3 === n.tag ? n.stateNode.containerInfo : null);
          }
          e.blockedOn = null;
        }
        function jt(e) {
          if (null !== e.blockedOn) return !1;
          for (var t = e.targetContainers; 0 < t.length; ) {
            var n = qt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (null !== n)
              return null !== (t = yo(n)) && St(t), (e.blockedOn = n), !1;
            var i = new (n = e.nativeEvent).constructor(n.type, n);
            (ye = i), n.target.dispatchEvent(i), (ye = null), t.shift();
          }
          return !0;
        }
        function Bt(e, t, n) {
          jt(e) && n.delete(t);
        }
        function Ft() {
          (Mt = !1),
            null !== Et && jt(Et) && (Et = null),
            null !== Lt && jt(Lt) && (Lt = null),
            null !== Tt && jt(Tt) && (Tt = null),
            Ot.forEach(Bt),
            Rt.forEach(Bt);
        }
        function Wt(e, t) {
          e.blockedOn === t &&
            ((e.blockedOn = null),
            Mt ||
              ((Mt = !0),
              o.unstable_scheduleCallback(o.unstable_NormalPriority, Ft)));
        }
        function Ht(e) {
          function t(t) {
            return Wt(t, e);
          }
          if (0 < Pt.length) {
            Wt(Pt[0], e);
            for (var n = 1; n < Pt.length; n++) {
              var i = Pt[n];
              i.blockedOn === e && (i.blockedOn = null);
            }
          }
          for (
            null !== Et && Wt(Et, e),
              null !== Lt && Wt(Lt, e),
              null !== Tt && Wt(Tt, e),
              Ot.forEach(t),
              Rt.forEach(t),
              n = 0;
            n < It.length;
            n++
          )
            (i = It[n]).blockedOn === e && (i.blockedOn = null);
          for (; 0 < It.length && null === (n = It[0]).blockedOn; )
            zt(n), null === n.blockedOn && It.shift();
        }
        var Gt = y.ReactCurrentBatchConfig,
          Vt = !0;
        function Ut(e, t, n, i) {
          var o = xt,
            a = Gt.transition;
          Gt.transition = null;
          try {
            (xt = 1), Xt(e, t, n, i);
          } finally {
            (xt = o), (Gt.transition = a);
          }
        }
        function Yt(e, t, n, i) {
          var o = xt,
            a = Gt.transition;
          Gt.transition = null;
          try {
            (xt = 4), Xt(e, t, n, i);
          } finally {
            (xt = o), (Gt.transition = a);
          }
        }
        function Xt(e, t, n, i) {
          if (Vt) {
            var o = qt(e, t, n, i);
            if (null === o) Vi(e, t, i, Kt, n), _t(e, i);
            else if (
              (function (e, t, n, i, o) {
                switch (t) {
                  case "focusin":
                    return (Et = Dt(Et, e, t, n, i, o)), !0;
                  case "dragenter":
                    return (Lt = Dt(Lt, e, t, n, i, o)), !0;
                  case "mouseover":
                    return (Tt = Dt(Tt, e, t, n, i, o)), !0;
                  case "pointerover":
                    var a = o.pointerId;
                    return Ot.set(a, Dt(Ot.get(a) || null, e, t, n, i, o)), !0;
                  case "gotpointercapture":
                    return (
                      (a = o.pointerId),
                      Rt.set(a, Dt(Rt.get(a) || null, e, t, n, i, o)),
                      !0
                    );
                }
                return !1;
              })(o, e, t, n, i)
            )
              i.stopPropagation();
            else if ((_t(e, i), 4 & t && -1 < Nt.indexOf(e))) {
              for (; null !== o; ) {
                var a = yo(o);
                if (
                  (null !== a && wt(a),
                  null === (a = qt(e, t, n, i)) && Vi(e, t, i, Kt, n),
                  a === o)
                )
                  break;
                o = a;
              }
              null !== o && i.stopPropagation();
            } else Vi(e, t, i, null, n);
          }
        }
        var Kt = null;
        function qt(e, t, n, i) {
          if (((Kt = null), null !== (e = xo((e = we(i))))))
            if (null === (t = He(e))) e = null;
            else if (13 === (n = t.tag)) {
              if (null !== (e = Ge(t))) return e;
              e = null;
            } else if (3 === n) {
              if (t.stateNode.current.memoizedState.isDehydrated)
                return 3 === t.tag ? t.stateNode.containerInfo : null;
              e = null;
            } else t !== e && (e = null);
          return (Kt = e), null;
        }
        function Zt(e) {
          switch (e) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return 1;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return 4;
            case "message":
              switch ($e()) {
                case Je:
                  return 1;
                case et:
                  return 4;
                case tt:
                case nt:
                  return 16;
                case it:
                  return 536870912;
                default:
                  return 16;
              }
            default:
              return 16;
          }
        }
        var Qt = null,
          $t = null,
          Jt = null;
        function en() {
          if (Jt) return Jt;
          var e,
            t,
            n = $t,
            i = n.length,
            o = "value" in Qt ? Qt.value : Qt.textContent,
            a = o.length;
          for (e = 0; e < i && n[e] === o[e]; e++);
          var s = i - e;
          for (t = 1; t <= s && n[i - t] === o[a - t]; t++);
          return (Jt = o.slice(e, 1 < t ? 1 - t : void 0));
        }
        function tn(e) {
          var t = e.keyCode;
          return (
            "charCode" in e
              ? 0 === (e = e.charCode) && 13 === t && (e = 13)
              : (e = t),
            10 === e && (e = 13),
            32 <= e || 13 === e ? e : 0
          );
        }
        function nn() {
          return !0;
        }
        function on() {
          return !1;
        }
        function an(e) {
          function t(t, n, i, o, a) {
            for (var s in ((this._reactName = t),
            (this._targetInst = i),
            (this.type = n),
            (this.nativeEvent = o),
            (this.target = a),
            (this.currentTarget = null),
            e))
              e.hasOwnProperty(s) && ((t = e[s]), (this[s] = t ? t(o) : o[s]));
            return (
              (this.isDefaultPrevented = (
                null != o.defaultPrevented
                  ? o.defaultPrevented
                  : !1 === o.returnValue
              )
                ? nn
                : on),
              (this.isPropagationStopped = on),
              this
            );
          }
          return (
            z(t.prototype, {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                  (e.preventDefault
                    ? e.preventDefault()
                    : "unknown" !== typeof e.returnValue &&
                      (e.returnValue = !1),
                  (this.isDefaultPrevented = nn));
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                  (e.stopPropagation
                    ? e.stopPropagation()
                    : "unknown" !== typeof e.cancelBubble &&
                      (e.cancelBubble = !0),
                  (this.isPropagationStopped = nn));
              },
              persist: function () {},
              isPersistent: nn,
            }),
            t
          );
        }
        var sn,
          rn,
          ln,
          cn = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
              return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
          },
          un = an(cn),
          dn = z({}, cn, { view: 0, detail: 0 }),
          hn = an(dn),
          pn = z({}, dn, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: Cn,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
              return void 0 === e.relatedTarget
                ? e.fromElement === e.srcElement
                  ? e.toElement
                  : e.fromElement
                : e.relatedTarget;
            },
            movementX: function (e) {
              return "movementX" in e
                ? e.movementX
                : (e !== ln &&
                    (ln && "mousemove" === e.type
                      ? ((sn = e.screenX - ln.screenX),
                        (rn = e.screenY - ln.screenY))
                      : (rn = sn = 0),
                    (ln = e)),
                  sn);
            },
            movementY: function (e) {
              return "movementY" in e ? e.movementY : rn;
            },
          }),
          fn = an(pn),
          gn = an(z({}, pn, { dataTransfer: 0 })),
          mn = an(z({}, dn, { relatedTarget: 0 })),
          vn = an(
            z({}, cn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          bn = z({}, cn, {
            clipboardData: function (e) {
              return "clipboardData" in e
                ? e.clipboardData
                : window.clipboardData;
            },
          }),
          xn = an(bn),
          yn = an(z({}, cn, { data: 0 })),
          wn = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          Sn = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          kn = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
          };
        function An(e) {
          var t = this.nativeEvent;
          return t.getModifierState
            ? t.getModifierState(e)
            : !!(e = kn[e]) && !!t[e];
        }
        function Cn() {
          return An;
        }
        var Mn = z({}, dn, {
            key: function (e) {
              if (e.key) {
                var t = wn[e.key] || e.key;
                if ("Unidentified" !== t) return t;
              }
              return "keypress" === e.type
                ? 13 === (e = tn(e))
                  ? "Enter"
                  : String.fromCharCode(e)
                : "keydown" === e.type || "keyup" === e.type
                ? Sn[e.keyCode] || "Unidentified"
                : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: Cn,
            charCode: function (e) {
              return "keypress" === e.type ? tn(e) : 0;
            },
            keyCode: function (e) {
              return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
            },
            which: function (e) {
              return "keypress" === e.type
                ? tn(e)
                : "keydown" === e.type || "keyup" === e.type
                ? e.keyCode
                : 0;
            },
          }),
          Pn = an(Mn),
          En = an(
            z({}, pn, {
              pointerId: 0,
              width: 0,
              height: 0,
              pressure: 0,
              tangentialPressure: 0,
              tiltX: 0,
              tiltY: 0,
              twist: 0,
              pointerType: 0,
              isPrimary: 0,
            })
          ),
          Ln = an(
            z({}, dn, {
              touches: 0,
              targetTouches: 0,
              changedTouches: 0,
              altKey: 0,
              metaKey: 0,
              ctrlKey: 0,
              shiftKey: 0,
              getModifierState: Cn,
            })
          ),
          Tn = an(
            z({}, cn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })
          ),
          On = z({}, pn, {
            deltaX: function (e) {
              return "deltaX" in e
                ? e.deltaX
                : "wheelDeltaX" in e
                ? -e.wheelDeltaX
                : 0;
            },
            deltaY: function (e) {
              return "deltaY" in e
                ? e.deltaY
                : "wheelDeltaY" in e
                ? -e.wheelDeltaY
                : "wheelDelta" in e
                ? -e.wheelDelta
                : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
          }),
          Rn = an(On),
          In = [9, 13, 27, 32],
          Nn = u && "CompositionEvent" in window,
          _n = null;
        u && "documentMode" in document && (_n = document.documentMode);
        var Dn = u && "TextEvent" in window && !_n,
          zn = u && (!Nn || (_n && 8 < _n && 11 >= _n)),
          jn = String.fromCharCode(32),
          Bn = !1;
        function Fn(e, t) {
          switch (e) {
            case "keyup":
              return -1 !== In.indexOf(t.keyCode);
            case "keydown":
              return 229 !== t.keyCode;
            case "keypress":
            case "mousedown":
            case "focusout":
              return !0;
            default:
              return !1;
          }
        }
        function Wn(e) {
          return "object" === typeof (e = e.detail) && "data" in e
            ? e.data
            : null;
        }
        var Hn = !1;
        var Gn = {
          color: !0,
          date: !0,
          datetime: !0,
          "datetime-local": !0,
          email: !0,
          month: !0,
          number: !0,
          password: !0,
          range: !0,
          search: !0,
          tel: !0,
          text: !0,
          time: !0,
          url: !0,
          week: !0,
        };
        function Vn(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return "input" === t ? !!Gn[e.type] : "textarea" === t;
        }
        function Un(e, t, n, i) {
          Me(i),
            0 < (t = Yi(t, "onChange")).length &&
              ((n = new un("onChange", "change", null, n, i)),
              e.push({ event: n, listeners: t }));
        }
        var Yn = null,
          Xn = null;
        function Kn(e) {
          ji(e, 0);
        }
        function qn(e) {
          if (X(wo(e))) return e;
        }
        function Zn(e, t) {
          if ("change" === e) return t;
        }
        var Qn = !1;
        if (u) {
          var $n;
          if (u) {
            var Jn = "oninput" in document;
            if (!Jn) {
              var ei = document.createElement("div");
              ei.setAttribute("oninput", "return;"),
                (Jn = "function" === typeof ei.oninput);
            }
            $n = Jn;
          } else $n = !1;
          Qn = $n && (!document.documentMode || 9 < document.documentMode);
        }
        function ti() {
          Yn && (Yn.detachEvent("onpropertychange", ni), (Xn = Yn = null));
        }
        function ni(e) {
          if ("value" === e.propertyName && qn(Xn)) {
            var t = [];
            Un(t, Xn, e, we(e)), Oe(Kn, t);
          }
        }
        function ii(e, t, n) {
          "focusin" === e
            ? (ti(), (Xn = n), (Yn = t).attachEvent("onpropertychange", ni))
            : "focusout" === e && ti();
        }
        function oi(e) {
          if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return qn(Xn);
        }
        function ai(e, t) {
          if ("click" === e) return qn(t);
        }
        function si(e, t) {
          if ("input" === e || "change" === e) return qn(t);
        }
        var ri =
          "function" === typeof Object.is
            ? Object.is
            : function (e, t) {
                return (
                  (e === t && (0 !== e || 1 / e === 1 / t)) ||
                  (e !== e && t !== t)
                );
              };
        function li(e, t) {
          if (ri(e, t)) return !0;
          if (
            "object" !== typeof e ||
            null === e ||
            "object" !== typeof t ||
            null === t
          )
            return !1;
          var n = Object.keys(e),
            i = Object.keys(t);
          if (n.length !== i.length) return !1;
          for (i = 0; i < n.length; i++) {
            var o = n[i];
            if (!d.call(t, o) || !ri(e[o], t[o])) return !1;
          }
          return !0;
        }
        function ci(e) {
          for (; e && e.firstChild; ) e = e.firstChild;
          return e;
        }
        function ui(e, t) {
          var n,
            i = ci(e);
          for (e = 0; i; ) {
            if (3 === i.nodeType) {
              if (((n = e + i.textContent.length), e <= t && n >= t))
                return { node: i, offset: t - e };
              e = n;
            }
            e: {
              for (; i; ) {
                if (i.nextSibling) {
                  i = i.nextSibling;
                  break e;
                }
                i = i.parentNode;
              }
              i = void 0;
            }
            i = ci(i);
          }
        }
        function di(e, t) {
          return (
            !(!e || !t) &&
            (e === t ||
              ((!e || 3 !== e.nodeType) &&
                (t && 3 === t.nodeType
                  ? di(e, t.parentNode)
                  : "contains" in e
                  ? e.contains(t)
                  : !!e.compareDocumentPosition &&
                    !!(16 & e.compareDocumentPosition(t)))))
          );
        }
        function hi() {
          for (var e = window, t = K(); t instanceof e.HTMLIFrameElement; ) {
            try {
              var n = "string" === typeof t.contentWindow.location.href;
            } catch (i) {
              n = !1;
            }
            if (!n) break;
            t = K((e = t.contentWindow).document);
          }
          return t;
        }
        function pi(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (("input" === t &&
              ("text" === e.type ||
                "search" === e.type ||
                "tel" === e.type ||
                "url" === e.type ||
                "password" === e.type)) ||
              "textarea" === t ||
              "true" === e.contentEditable)
          );
        }
        function fi(e) {
          var t = hi(),
            n = e.focusedElem,
            i = e.selectionRange;
          if (
            t !== n &&
            n &&
            n.ownerDocument &&
            di(n.ownerDocument.documentElement, n)
          ) {
            if (null !== i && pi(n))
              if (
                ((t = i.start),
                void 0 === (e = i.end) && (e = t),
                "selectionStart" in n)
              )
                (n.selectionStart = t),
                  (n.selectionEnd = Math.min(e, n.value.length));
              else if (
                (e =
                  ((t = n.ownerDocument || document) && t.defaultView) ||
                  window).getSelection
              ) {
                e = e.getSelection();
                var o = n.textContent.length,
                  a = Math.min(i.start, o);
                (i = void 0 === i.end ? a : Math.min(i.end, o)),
                  !e.extend && a > i && ((o = i), (i = a), (a = o)),
                  (o = ui(n, a));
                var s = ui(n, i);
                o &&
                  s &&
                  (1 !== e.rangeCount ||
                    e.anchorNode !== o.node ||
                    e.anchorOffset !== o.offset ||
                    e.focusNode !== s.node ||
                    e.focusOffset !== s.offset) &&
                  ((t = t.createRange()).setStart(o.node, o.offset),
                  e.removeAllRanges(),
                  a > i
                    ? (e.addRange(t), e.extend(s.node, s.offset))
                    : (t.setEnd(s.node, s.offset), e.addRange(t)));
              }
            for (t = [], e = n; (e = e.parentNode); )
              1 === e.nodeType &&
                t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
            for (
              "function" === typeof n.focus && n.focus(), n = 0;
              n < t.length;
              n++
            )
              ((e = t[n]).element.scrollLeft = e.left),
                (e.element.scrollTop = e.top);
          }
        }
        var gi = u && "documentMode" in document && 11 >= document.documentMode,
          mi = null,
          vi = null,
          bi = null,
          xi = !1;
        function yi(e, t, n) {
          var i =
            n.window === n
              ? n.document
              : 9 === n.nodeType
              ? n
              : n.ownerDocument;
          xi ||
            null == mi ||
            mi !== K(i) ||
            ("selectionStart" in (i = mi) && pi(i)
              ? (i = { start: i.selectionStart, end: i.selectionEnd })
              : (i = {
                  anchorNode: (i = (
                    (i.ownerDocument && i.ownerDocument.defaultView) ||
                    window
                  ).getSelection()).anchorNode,
                  anchorOffset: i.anchorOffset,
                  focusNode: i.focusNode,
                  focusOffset: i.focusOffset,
                }),
            (bi && li(bi, i)) ||
              ((bi = i),
              0 < (i = Yi(vi, "onSelect")).length &&
                ((t = new un("onSelect", "select", null, t, n)),
                e.push({ event: t, listeners: i }),
                (t.target = mi))));
        }
        function wi(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n["Webkit" + e] = "webkit" + t),
            (n["Moz" + e] = "moz" + t),
            n
          );
        }
        var Si = {
            animationend: wi("Animation", "AnimationEnd"),
            animationiteration: wi("Animation", "AnimationIteration"),
            animationstart: wi("Animation", "AnimationStart"),
            transitionend: wi("Transition", "TransitionEnd"),
          },
          ki = {},
          Ai = {};
        function Ci(e) {
          if (ki[e]) return ki[e];
          if (!Si[e]) return e;
          var t,
            n = Si[e];
          for (t in n)
            if (n.hasOwnProperty(t) && t in Ai) return (ki[e] = n[t]);
          return e;
        }
        u &&
          ((Ai = document.createElement("div").style),
          "AnimationEvent" in window ||
            (delete Si.animationend.animation,
            delete Si.animationiteration.animation,
            delete Si.animationstart.animation),
          "TransitionEvent" in window || delete Si.transitionend.transition);
        var Mi = Ci("animationend"),
          Pi = Ci("animationiteration"),
          Ei = Ci("animationstart"),
          Li = Ci("transitionend"),
          Ti = new Map(),
          Oi =
            "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
              " "
            );
        function Ri(e, t) {
          Ti.set(e, t), l(t, [e]);
        }
        for (var Ii = 0; Ii < Oi.length; Ii++) {
          var Ni = Oi[Ii];
          Ri(Ni.toLowerCase(), "on" + (Ni[0].toUpperCase() + Ni.slice(1)));
        }
        Ri(Mi, "onAnimationEnd"),
          Ri(Pi, "onAnimationIteration"),
          Ri(Ei, "onAnimationStart"),
          Ri("dblclick", "onDoubleClick"),
          Ri("focusin", "onFocus"),
          Ri("focusout", "onBlur"),
          Ri(Li, "onTransitionEnd"),
          c("onMouseEnter", ["mouseout", "mouseover"]),
          c("onMouseLeave", ["mouseout", "mouseover"]),
          c("onPointerEnter", ["pointerout", "pointerover"]),
          c("onPointerLeave", ["pointerout", "pointerover"]),
          l(
            "onChange",
            "change click focusin focusout input keydown keyup selectionchange".split(
              " "
            )
          ),
          l(
            "onSelect",
            "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
              " "
            )
          ),
          l("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste",
          ]),
          l(
            "onCompositionEnd",
            "compositionend focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionStart",
            "compositionstart focusout keydown keypress keyup mousedown".split(
              " "
            )
          ),
          l(
            "onCompositionUpdate",
            "compositionupdate focusout keydown keypress keyup mousedown".split(
              " "
            )
          );
        var _i =
            "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
              " "
            ),
          Di = new Set(
            "cancel close invalid load scroll toggle".split(" ").concat(_i)
          );
        function zi(e, t, n) {
          var i = e.type || "unknown-event";
          (e.currentTarget = n),
            (function (e, t, n, i, o, s, r, l, c) {
              if ((We.apply(this, arguments), De)) {
                if (!De) throw Error(a(198));
                var u = ze;
                (De = !1), (ze = null), je || ((je = !0), (Be = u));
              }
            })(i, t, void 0, e),
            (e.currentTarget = null);
        }
        function ji(e, t) {
          t = 0 !== (4 & t);
          for (var n = 0; n < e.length; n++) {
            var i = e[n],
              o = i.event;
            i = i.listeners;
            e: {
              var a = void 0;
              if (t)
                for (var s = i.length - 1; 0 <= s; s--) {
                  var r = i[s],
                    l = r.instance,
                    c = r.currentTarget;
                  if (((r = r.listener), l !== a && o.isPropagationStopped()))
                    break e;
                  zi(o, r, c), (a = l);
                }
              else
                for (s = 0; s < i.length; s++) {
                  if (
                    ((l = (r = i[s]).instance),
                    (c = r.currentTarget),
                    (r = r.listener),
                    l !== a && o.isPropagationStopped())
                  )
                    break e;
                  zi(o, r, c), (a = l);
                }
            }
          }
          if (je) throw ((e = Be), (je = !1), (Be = null), e);
        }
        function Bi(e, t) {
          var n = t[mo];
          void 0 === n && (n = t[mo] = new Set());
          var i = e + "__bubble";
          n.has(i) || (Gi(t, e, 2, !1), n.add(i));
        }
        function Fi(e, t, n) {
          var i = 0;
          t && (i |= 4), Gi(n, e, i, t);
        }
        var Wi = "_reactListening" + Math.random().toString(36).slice(2);
        function Hi(e) {
          if (!e[Wi]) {
            (e[Wi] = !0),
              s.forEach(function (t) {
                "selectionchange" !== t &&
                  (Di.has(t) || Fi(t, !1, e), Fi(t, !0, e));
              });
            var t = 9 === e.nodeType ? e : e.ownerDocument;
            null === t || t[Wi] || ((t[Wi] = !0), Fi("selectionchange", !1, t));
          }
        }
        function Gi(e, t, n, i) {
          switch (Zt(t)) {
            case 1:
              var o = Ut;
              break;
            case 4:
              o = Yt;
              break;
            default:
              o = Xt;
          }
          (n = o.bind(null, t, n, e)),
            (o = void 0),
            !Ie ||
              ("touchstart" !== t && "touchmove" !== t && "wheel" !== t) ||
              (o = !0),
            i
              ? void 0 !== o
                ? e.addEventListener(t, n, { capture: !0, passive: o })
                : e.addEventListener(t, n, !0)
              : void 0 !== o
              ? e.addEventListener(t, n, { passive: o })
              : e.addEventListener(t, n, !1);
        }
        function Vi(e, t, n, i, o) {
          var a = i;
          if (0 === (1 & t) && 0 === (2 & t) && null !== i)
            e: for (;;) {
              if (null === i) return;
              var s = i.tag;
              if (3 === s || 4 === s) {
                var r = i.stateNode.containerInfo;
                if (r === o || (8 === r.nodeType && r.parentNode === o)) break;
                if (4 === s)
                  for (s = i.return; null !== s; ) {
                    var l = s.tag;
                    if (
                      (3 === l || 4 === l) &&
                      ((l = s.stateNode.containerInfo) === o ||
                        (8 === l.nodeType && l.parentNode === o))
                    )
                      return;
                    s = s.return;
                  }
                for (; null !== r; ) {
                  if (null === (s = xo(r))) return;
                  if (5 === (l = s.tag) || 6 === l) {
                    i = a = s;
                    continue e;
                  }
                  r = r.parentNode;
                }
              }
              i = i.return;
            }
          Oe(function () {
            var i = a,
              o = we(n),
              s = [];
            e: {
              var r = Ti.get(e);
              if (void 0 !== r) {
                var l = un,
                  c = e;
                switch (e) {
                  case "keypress":
                    if (0 === tn(n)) break e;
                  case "keydown":
                  case "keyup":
                    l = Pn;
                    break;
                  case "focusin":
                    (c = "focus"), (l = mn);
                    break;
                  case "focusout":
                    (c = "blur"), (l = mn);
                    break;
                  case "beforeblur":
                  case "afterblur":
                    l = mn;
                    break;
                  case "click":
                    if (2 === n.button) break e;
                  case "auxclick":
                  case "dblclick":
                  case "mousedown":
                  case "mousemove":
                  case "mouseup":
                  case "mouseout":
                  case "mouseover":
                  case "contextmenu":
                    l = fn;
                    break;
                  case "drag":
                  case "dragend":
                  case "dragenter":
                  case "dragexit":
                  case "dragleave":
                  case "dragover":
                  case "dragstart":
                  case "drop":
                    l = gn;
                    break;
                  case "touchcancel":
                  case "touchend":
                  case "touchmove":
                  case "touchstart":
                    l = Ln;
                    break;
                  case Mi:
                  case Pi:
                  case Ei:
                    l = vn;
                    break;
                  case Li:
                    l = Tn;
                    break;
                  case "scroll":
                    l = hn;
                    break;
                  case "wheel":
                    l = Rn;
                    break;
                  case "copy":
                  case "cut":
                  case "paste":
                    l = xn;
                    break;
                  case "gotpointercapture":
                  case "lostpointercapture":
                  case "pointercancel":
                  case "pointerdown":
                  case "pointermove":
                  case "pointerout":
                  case "pointerover":
                  case "pointerup":
                    l = En;
                }
                var u = 0 !== (4 & t),
                  d = !u && "scroll" === e,
                  h = u ? (null !== r ? r + "Capture" : null) : r;
                u = [];
                for (var p, f = i; null !== f; ) {
                  var g = (p = f).stateNode;
                  if (
                    (5 === p.tag &&
                      null !== g &&
                      ((p = g),
                      null !== h &&
                        null != (g = Re(f, h)) &&
                        u.push(Ui(f, g, p))),
                    d)
                  )
                    break;
                  f = f.return;
                }
                0 < u.length &&
                  ((r = new l(r, c, null, n, o)),
                  s.push({ event: r, listeners: u }));
              }
            }
            if (0 === (7 & t)) {
              if (
                ((l = "mouseout" === e || "pointerout" === e),
                (!(r = "mouseover" === e || "pointerover" === e) ||
                  n === ye ||
                  !(c = n.relatedTarget || n.fromElement) ||
                  (!xo(c) && !c[go])) &&
                  (l || r) &&
                  ((r =
                    o.window === o
                      ? o
                      : (r = o.ownerDocument)
                      ? r.defaultView || r.parentWindow
                      : window),
                  l
                    ? ((l = i),
                      null !==
                        (c = (c = n.relatedTarget || n.toElement)
                          ? xo(c)
                          : null) &&
                        (c !== (d = He(c)) || (5 !== c.tag && 6 !== c.tag)) &&
                        (c = null))
                    : ((l = null), (c = i)),
                  l !== c))
              ) {
                if (
                  ((u = fn),
                  (g = "onMouseLeave"),
                  (h = "onMouseEnter"),
                  (f = "mouse"),
                  ("pointerout" !== e && "pointerover" !== e) ||
                    ((u = En),
                    (g = "onPointerLeave"),
                    (h = "onPointerEnter"),
                    (f = "pointer")),
                  (d = null == l ? r : wo(l)),
                  (p = null == c ? r : wo(c)),
                  ((r = new u(g, f + "leave", l, n, o)).target = d),
                  (r.relatedTarget = p),
                  (g = null),
                  xo(o) === i &&
                    (((u = new u(h, f + "enter", c, n, o)).target = p),
                    (u.relatedTarget = d),
                    (g = u)),
                  (d = g),
                  l && c)
                )
                  e: {
                    for (h = c, f = 0, p = u = l; p; p = Xi(p)) f++;
                    for (p = 0, g = h; g; g = Xi(g)) p++;
                    for (; 0 < f - p; ) (u = Xi(u)), f--;
                    for (; 0 < p - f; ) (h = Xi(h)), p--;
                    for (; f--; ) {
                      if (u === h || (null !== h && u === h.alternate)) break e;
                      (u = Xi(u)), (h = Xi(h));
                    }
                    u = null;
                  }
                else u = null;
                null !== l && Ki(s, r, l, u, !1),
                  null !== c && null !== d && Ki(s, d, c, u, !0);
              }
              if (
                "select" ===
                  (l =
                    (r = i ? wo(i) : window).nodeName &&
                    r.nodeName.toLowerCase()) ||
                ("input" === l && "file" === r.type)
              )
                var m = Zn;
              else if (Vn(r))
                if (Qn) m = si;
                else {
                  m = oi;
                  var v = ii;
                }
              else
                (l = r.nodeName) &&
                  "input" === l.toLowerCase() &&
                  ("checkbox" === r.type || "radio" === r.type) &&
                  (m = ai);
              switch (
                (m && (m = m(e, i))
                  ? Un(s, m, n, o)
                  : (v && v(e, r, i),
                    "focusout" === e &&
                      (v = r._wrapperState) &&
                      v.controlled &&
                      "number" === r.type &&
                      ee(r, "number", r.value)),
                (v = i ? wo(i) : window),
                e)
              ) {
                case "focusin":
                  (Vn(v) || "true" === v.contentEditable) &&
                    ((mi = v), (vi = i), (bi = null));
                  break;
                case "focusout":
                  bi = vi = mi = null;
                  break;
                case "mousedown":
                  xi = !0;
                  break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                  (xi = !1), yi(s, n, o);
                  break;
                case "selectionchange":
                  if (gi) break;
                case "keydown":
                case "keyup":
                  yi(s, n, o);
              }
              var b;
              if (Nn)
                e: {
                  switch (e) {
                    case "compositionstart":
                      var x = "onCompositionStart";
                      break e;
                    case "compositionend":
                      x = "onCompositionEnd";
                      break e;
                    case "compositionupdate":
                      x = "onCompositionUpdate";
                      break e;
                  }
                  x = void 0;
                }
              else
                Hn
                  ? Fn(e, n) && (x = "onCompositionEnd")
                  : "keydown" === e &&
                    229 === n.keyCode &&
                    (x = "onCompositionStart");
              x &&
                (zn &&
                  "ko" !== n.locale &&
                  (Hn || "onCompositionStart" !== x
                    ? "onCompositionEnd" === x && Hn && (b = en())
                    : (($t = "value" in (Qt = o) ? Qt.value : Qt.textContent),
                      (Hn = !0))),
                0 < (v = Yi(i, x)).length &&
                  ((x = new yn(x, e, null, n, o)),
                  s.push({ event: x, listeners: v }),
                  b ? (x.data = b) : null !== (b = Wn(n)) && (x.data = b))),
                (b = Dn
                  ? (function (e, t) {
                      switch (e) {
                        case "compositionend":
                          return Wn(t);
                        case "keypress":
                          return 32 !== t.which ? null : ((Bn = !0), jn);
                        case "textInput":
                          return (e = t.data) === jn && Bn ? null : e;
                        default:
                          return null;
                      }
                    })(e, n)
                  : (function (e, t) {
                      if (Hn)
                        return "compositionend" === e || (!Nn && Fn(e, t))
                          ? ((e = en()), (Jt = $t = Qt = null), (Hn = !1), e)
                          : null;
                      switch (e) {
                        case "paste":
                        default:
                          return null;
                        case "keypress":
                          if (
                            !(t.ctrlKey || t.altKey || t.metaKey) ||
                            (t.ctrlKey && t.altKey)
                          ) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which);
                          }
                          return null;
                        case "compositionend":
                          return zn && "ko" !== t.locale ? null : t.data;
                      }
                    })(e, n)) &&
                  0 < (i = Yi(i, "onBeforeInput")).length &&
                  ((o = new yn("onBeforeInput", "beforeinput", null, n, o)),
                  s.push({ event: o, listeners: i }),
                  (o.data = b));
            }
            ji(s, t);
          });
        }
        function Ui(e, t, n) {
          return { instance: e, listener: t, currentTarget: n };
        }
        function Yi(e, t) {
          for (var n = t + "Capture", i = []; null !== e; ) {
            var o = e,
              a = o.stateNode;
            5 === o.tag &&
              null !== a &&
              ((o = a),
              null != (a = Re(e, n)) && i.unshift(Ui(e, a, o)),
              null != (a = Re(e, t)) && i.push(Ui(e, a, o))),
              (e = e.return);
          }
          return i;
        }
        function Xi(e) {
          if (null === e) return null;
          do {
            e = e.return;
          } while (e && 5 !== e.tag);
          return e || null;
        }
        function Ki(e, t, n, i, o) {
          for (var a = t._reactName, s = []; null !== n && n !== i; ) {
            var r = n,
              l = r.alternate,
              c = r.stateNode;
            if (null !== l && l === i) break;
            5 === r.tag &&
              null !== c &&
              ((r = c),
              o
                ? null != (l = Re(n, a)) && s.unshift(Ui(n, l, r))
                : o || (null != (l = Re(n, a)) && s.push(Ui(n, l, r)))),
              (n = n.return);
          }
          0 !== s.length && e.push({ event: t, listeners: s });
        }
        var qi = /\r\n?/g,
          Zi = /\u0000|\uFFFD/g;
        function Qi(e) {
          return ("string" === typeof e ? e : "" + e)
            .replace(qi, "\n")
            .replace(Zi, "");
        }
        function $i(e, t, n) {
          if (((t = Qi(t)), Qi(e) !== t && n)) throw Error(a(425));
        }
        function Ji() {}
        var eo = null,
          to = null;
        function no(e, t) {
          return (
            "textarea" === e ||
            "noscript" === e ||
            "string" === typeof t.children ||
            "number" === typeof t.children ||
            ("object" === typeof t.dangerouslySetInnerHTML &&
              null !== t.dangerouslySetInnerHTML &&
              null != t.dangerouslySetInnerHTML.__html)
          );
        }
        var io = "function" === typeof setTimeout ? setTimeout : void 0,
          oo = "function" === typeof clearTimeout ? clearTimeout : void 0,
          ao = "function" === typeof Promise ? Promise : void 0,
          so =
            "function" === typeof queueMicrotask
              ? queueMicrotask
              : "undefined" !== typeof ao
              ? function (e) {
                  return ao.resolve(null).then(e).catch(ro);
                }
              : io;
        function ro(e) {
          setTimeout(function () {
            throw e;
          });
        }
        function lo(e, t) {
          var n = t,
            i = 0;
          do {
            var o = n.nextSibling;
            if ((e.removeChild(n), o && 8 === o.nodeType))
              if ("/$" === (n = o.data)) {
                if (0 === i) return e.removeChild(o), void Ht(t);
                i--;
              } else ("$" !== n && "$?" !== n && "$!" !== n) || i++;
            n = o;
          } while (n);
          Ht(t);
        }
        function co(e) {
          for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t) break;
            if (8 === t) {
              if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
              if ("/$" === t) return null;
            }
          }
          return e;
        }
        function uo(e) {
          e = e.previousSibling;
          for (var t = 0; e; ) {
            if (8 === e.nodeType) {
              var n = e.data;
              if ("$" === n || "$!" === n || "$?" === n) {
                if (0 === t) return e;
                t--;
              } else "/$" === n && t++;
            }
            e = e.previousSibling;
          }
          return null;
        }
        var ho = Math.random().toString(36).slice(2),
          po = "__reactFiber$" + ho,
          fo = "__reactProps$" + ho,
          go = "__reactContainer$" + ho,
          mo = "__reactEvents$" + ho,
          vo = "__reactListeners$" + ho,
          bo = "__reactHandles$" + ho;
        function xo(e) {
          var t = e[po];
          if (t) return t;
          for (var n = e.parentNode; n; ) {
            if ((t = n[go] || n[po])) {
              if (
                ((n = t.alternate),
                null !== t.child || (null !== n && null !== n.child))
              )
                for (e = uo(e); null !== e; ) {
                  if ((n = e[po])) return n;
                  e = uo(e);
                }
              return t;
            }
            n = (e = n).parentNode;
          }
          return null;
        }
        function yo(e) {
          return !(e = e[po] || e[go]) ||
            (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag)
            ? null
            : e;
        }
        function wo(e) {
          if (5 === e.tag || 6 === e.tag) return e.stateNode;
          throw Error(a(33));
        }
        function So(e) {
          return e[fo] || null;
        }
        var ko = [],
          Ao = -1;
        function Co(e) {
          return { current: e };
        }
        function Mo(e) {
          0 > Ao || ((e.current = ko[Ao]), (ko[Ao] = null), Ao--);
        }
        function Po(e, t) {
          Ao++, (ko[Ao] = e.current), (e.current = t);
        }
        var Eo = {},
          Lo = Co(Eo),
          To = Co(!1),
          Oo = Eo;
        function Ro(e, t) {
          var n = e.type.contextTypes;
          if (!n) return Eo;
          var i = e.stateNode;
          if (i && i.__reactInternalMemoizedUnmaskedChildContext === t)
            return i.__reactInternalMemoizedMaskedChildContext;
          var o,
            a = {};
          for (o in n) a[o] = t[o];
          return (
            i &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                t),
              (e.__reactInternalMemoizedMaskedChildContext = a)),
            a
          );
        }
        function Io(e) {
          return null !== (e = e.childContextTypes) && void 0 !== e;
        }
        function No() {
          Mo(To), Mo(Lo);
        }
        function _o(e, t, n) {
          if (Lo.current !== Eo) throw Error(a(168));
          Po(Lo, t), Po(To, n);
        }
        function Do(e, t, n) {
          var i = e.stateNode;
          if (
            ((t = t.childContextTypes), "function" !== typeof i.getChildContext)
          )
            return n;
          for (var o in (i = i.getChildContext()))
            if (!(o in t)) throw Error(a(108, G(e) || "Unknown", o));
          return z({}, n, i);
        }
        function zo(e) {
          return (
            (e =
              ((e = e.stateNode) &&
                e.__reactInternalMemoizedMergedChildContext) ||
              Eo),
            (Oo = Lo.current),
            Po(Lo, e),
            Po(To, To.current),
            !0
          );
        }
        function jo(e, t, n) {
          var i = e.stateNode;
          if (!i) throw Error(a(169));
          n
            ? ((e = Do(e, t, Oo)),
              (i.__reactInternalMemoizedMergedChildContext = e),
              Mo(To),
              Mo(Lo),
              Po(Lo, e))
            : Mo(To),
            Po(To, n);
        }
        var Bo = null,
          Fo = !1,
          Wo = !1;
        function Ho(e) {
          null === Bo ? (Bo = [e]) : Bo.push(e);
        }
        function Go() {
          if (!Wo && null !== Bo) {
            Wo = !0;
            var e = 0,
              t = xt;
            try {
              var n = Bo;
              for (xt = 1; e < n.length; e++) {
                var i = n[e];
                do {
                  i = i(!0);
                } while (null !== i);
              }
              (Bo = null), (Fo = !1);
            } catch (o) {
              throw (null !== Bo && (Bo = Bo.slice(e + 1)), Xe(Je, Go), o);
            } finally {
              (xt = t), (Wo = !1);
            }
          }
          return null;
        }
        var Vo = [],
          Uo = 0,
          Yo = null,
          Xo = 0,
          Ko = [],
          qo = 0,
          Zo = null,
          Qo = 1,
          $o = "";
        function Jo(e, t) {
          (Vo[Uo++] = Xo), (Vo[Uo++] = Yo), (Yo = e), (Xo = t);
        }
        function ea(e, t, n) {
          (Ko[qo++] = Qo), (Ko[qo++] = $o), (Ko[qo++] = Zo), (Zo = e);
          var i = Qo;
          e = $o;
          var o = 32 - st(i) - 1;
          (i &= ~(1 << o)), (n += 1);
          var a = 32 - st(t) + o;
          if (30 < a) {
            var s = o - (o % 5);
            (a = (i & ((1 << s) - 1)).toString(32)),
              (i >>= s),
              (o -= s),
              (Qo = (1 << (32 - st(t) + o)) | (n << o) | i),
              ($o = a + e);
          } else (Qo = (1 << a) | (n << o) | i), ($o = e);
        }
        function ta(e) {
          null !== e.return && (Jo(e, 1), ea(e, 1, 0));
        }
        function na(e) {
          for (; e === Yo; )
            (Yo = Vo[--Uo]), (Vo[Uo] = null), (Xo = Vo[--Uo]), (Vo[Uo] = null);
          for (; e === Zo; )
            (Zo = Ko[--qo]),
              (Ko[qo] = null),
              ($o = Ko[--qo]),
              (Ko[qo] = null),
              (Qo = Ko[--qo]),
              (Ko[qo] = null);
        }
        var ia = null,
          oa = null,
          aa = !1,
          sa = null;
        function ra(e, t) {
          var n = Oc(5, null, null, 0);
          (n.elementType = "DELETED"),
            (n.stateNode = t),
            (n.return = e),
            null === (t = e.deletions)
              ? ((e.deletions = [n]), (e.flags |= 16))
              : t.push(n);
        }
        function la(e, t) {
          switch (e.tag) {
            case 5:
              var n = e.type;
              return (
                null !==
                  (t =
                    1 !== t.nodeType ||
                    n.toLowerCase() !== t.nodeName.toLowerCase()
                      ? null
                      : t) &&
                ((e.stateNode = t), (ia = e), (oa = co(t.firstChild)), !0)
              );
            case 6:
              return (
                null !==
                  (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                ((e.stateNode = t), (ia = e), (oa = null), !0)
              );
            case 13:
              return (
                null !== (t = 8 !== t.nodeType ? null : t) &&
                ((n = null !== Zo ? { id: Qo, overflow: $o } : null),
                (e.memoizedState = {
                  dehydrated: t,
                  treeContext: n,
                  retryLane: 1073741824,
                }),
                ((n = Oc(18, null, null, 0)).stateNode = t),
                (n.return = e),
                (e.child = n),
                (ia = e),
                (oa = null),
                !0)
              );
            default:
              return !1;
          }
        }
        function ca(e) {
          return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
        }
        function ua(e) {
          if (aa) {
            var t = oa;
            if (t) {
              var n = t;
              if (!la(e, t)) {
                if (ca(e)) throw Error(a(418));
                t = co(n.nextSibling);
                var i = ia;
                t && la(e, t)
                  ? ra(i, n)
                  : ((e.flags = (-4097 & e.flags) | 2), (aa = !1), (ia = e));
              }
            } else {
              if (ca(e)) throw Error(a(418));
              (e.flags = (-4097 & e.flags) | 2), (aa = !1), (ia = e);
            }
          }
        }
        function da(e) {
          for (
            e = e.return;
            null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;

          )
            e = e.return;
          ia = e;
        }
        function ha(e) {
          if (e !== ia) return !1;
          if (!aa) return da(e), (aa = !0), !1;
          var t;
          if (
            ((t = 3 !== e.tag) &&
              !(t = 5 !== e.tag) &&
              (t =
                "head" !== (t = e.type) &&
                "body" !== t &&
                !no(e.type, e.memoizedProps)),
            t && (t = oa))
          ) {
            if (ca(e)) throw (pa(), Error(a(418)));
            for (; t; ) ra(e, t), (t = co(t.nextSibling));
          }
          if ((da(e), 13 === e.tag)) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
              throw Error(a(317));
            e: {
              for (e = e.nextSibling, t = 0; e; ) {
                if (8 === e.nodeType) {
                  var n = e.data;
                  if ("/$" === n) {
                    if (0 === t) {
                      oa = co(e.nextSibling);
                      break e;
                    }
                    t--;
                  } else ("$" !== n && "$!" !== n && "$?" !== n) || t++;
                }
                e = e.nextSibling;
              }
              oa = null;
            }
          } else oa = ia ? co(e.stateNode.nextSibling) : null;
          return !0;
        }
        function pa() {
          for (var e = oa; e; ) e = co(e.nextSibling);
        }
        function fa() {
          (oa = ia = null), (aa = !1);
        }
        function ga(e) {
          null === sa ? (sa = [e]) : sa.push(e);
        }
        var ma = y.ReactCurrentBatchConfig;
        function va(e, t, n) {
          if (
            null !== (e = n.ref) &&
            "function" !== typeof e &&
            "object" !== typeof e
          ) {
            if (n._owner) {
              if ((n = n._owner)) {
                if (1 !== n.tag) throw Error(a(309));
                var i = n.stateNode;
              }
              if (!i) throw Error(a(147, e));
              var o = i,
                s = "" + e;
              return null !== t &&
                null !== t.ref &&
                "function" === typeof t.ref &&
                t.ref._stringRef === s
                ? t.ref
                : ((t = function (e) {
                    var t = o.refs;
                    null === e ? delete t[s] : (t[s] = e);
                  }),
                  (t._stringRef = s),
                  t);
            }
            if ("string" !== typeof e) throw Error(a(284));
            if (!n._owner) throw Error(a(290, e));
          }
          return e;
        }
        function ba(e, t) {
          throw (
            ((e = Object.prototype.toString.call(t)),
            Error(
              a(
                31,
                "[object Object]" === e
                  ? "object with keys {" + Object.keys(t).join(", ") + "}"
                  : e
              )
            ))
          );
        }
        function xa(e) {
          return (0, e._init)(e._payload);
        }
        function ya(e) {
          function t(t, n) {
            if (e) {
              var i = t.deletions;
              null === i ? ((t.deletions = [n]), (t.flags |= 16)) : i.push(n);
            }
          }
          function n(n, i) {
            if (!e) return null;
            for (; null !== i; ) t(n, i), (i = i.sibling);
            return null;
          }
          function i(e, t) {
            for (e = new Map(); null !== t; )
              null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                (t = t.sibling);
            return e;
          }
          function o(e, t) {
            return ((e = Ic(e, t)).index = 0), (e.sibling = null), e;
          }
          function s(t, n, i) {
            return (
              (t.index = i),
              e
                ? null !== (i = t.alternate)
                  ? (i = i.index) < n
                    ? ((t.flags |= 2), n)
                    : i
                  : ((t.flags |= 2), n)
                : ((t.flags |= 1048576), n)
            );
          }
          function r(t) {
            return e && null === t.alternate && (t.flags |= 2), t;
          }
          function l(e, t, n, i) {
            return null === t || 6 !== t.tag
              ? (((t = zc(n, e.mode, i)).return = e), t)
              : (((t = o(t, n)).return = e), t);
          }
          function c(e, t, n, i) {
            var a = n.type;
            return a === k
              ? d(e, t, n.props.children, i, n.key)
              : null !== t &&
                (t.elementType === a ||
                  ("object" === typeof a &&
                    null !== a &&
                    a.$$typeof === R &&
                    xa(a) === t.type))
              ? (((i = o(t, n.props)).ref = va(e, t, n)), (i.return = e), i)
              : (((i = Nc(n.type, n.key, n.props, null, e.mode, i)).ref = va(
                  e,
                  t,
                  n
                )),
                (i.return = e),
                i);
          }
          function u(e, t, n, i) {
            return null === t ||
              4 !== t.tag ||
              t.stateNode.containerInfo !== n.containerInfo ||
              t.stateNode.implementation !== n.implementation
              ? (((t = jc(n, e.mode, i)).return = e), t)
              : (((t = o(t, n.children || [])).return = e), t);
          }
          function d(e, t, n, i, a) {
            return null === t || 7 !== t.tag
              ? (((t = _c(n, e.mode, i, a)).return = e), t)
              : (((t = o(t, n)).return = e), t);
          }
          function h(e, t, n) {
            if (("string" === typeof t && "" !== t) || "number" === typeof t)
              return ((t = zc("" + t, e.mode, n)).return = e), t;
            if ("object" === typeof t && null !== t) {
              switch (t.$$typeof) {
                case w:
                  return (
                    ((n = Nc(t.type, t.key, t.props, null, e.mode, n)).ref = va(
                      e,
                      null,
                      t
                    )),
                    (n.return = e),
                    n
                  );
                case S:
                  return ((t = jc(t, e.mode, n)).return = e), t;
                case R:
                  return h(e, (0, t._init)(t._payload), n);
              }
              if (te(t) || _(t))
                return ((t = _c(t, e.mode, n, null)).return = e), t;
              ba(e, t);
            }
            return null;
          }
          function p(e, t, n, i) {
            var o = null !== t ? t.key : null;
            if (("string" === typeof n && "" !== n) || "number" === typeof n)
              return null !== o ? null : l(e, t, "" + n, i);
            if ("object" === typeof n && null !== n) {
              switch (n.$$typeof) {
                case w:
                  return n.key === o ? c(e, t, n, i) : null;
                case S:
                  return n.key === o ? u(e, t, n, i) : null;
                case R:
                  return p(e, t, (o = n._init)(n._payload), i);
              }
              if (te(n) || _(n)) return null !== o ? null : d(e, t, n, i, null);
              ba(e, n);
            }
            return null;
          }
          function f(e, t, n, i, o) {
            if (("string" === typeof i && "" !== i) || "number" === typeof i)
              return l(t, (e = e.get(n) || null), "" + i, o);
            if ("object" === typeof i && null !== i) {
              switch (i.$$typeof) {
                case w:
                  return c(
                    t,
                    (e = e.get(null === i.key ? n : i.key) || null),
                    i,
                    o
                  );
                case S:
                  return u(
                    t,
                    (e = e.get(null === i.key ? n : i.key) || null),
                    i,
                    o
                  );
                case R:
                  return f(e, t, n, (0, i._init)(i._payload), o);
              }
              if (te(i) || _(i))
                return d(t, (e = e.get(n) || null), i, o, null);
              ba(t, i);
            }
            return null;
          }
          function g(o, a, r, l) {
            for (
              var c = null, u = null, d = a, g = (a = 0), m = null;
              null !== d && g < r.length;
              g++
            ) {
              d.index > g ? ((m = d), (d = null)) : (m = d.sibling);
              var v = p(o, d, r[g], l);
              if (null === v) {
                null === d && (d = m);
                break;
              }
              e && d && null === v.alternate && t(o, d),
                (a = s(v, a, g)),
                null === u ? (c = v) : (u.sibling = v),
                (u = v),
                (d = m);
            }
            if (g === r.length) return n(o, d), aa && Jo(o, g), c;
            if (null === d) {
              for (; g < r.length; g++)
                null !== (d = h(o, r[g], l)) &&
                  ((a = s(d, a, g)),
                  null === u ? (c = d) : (u.sibling = d),
                  (u = d));
              return aa && Jo(o, g), c;
            }
            for (d = i(o, d); g < r.length; g++)
              null !== (m = f(d, o, g, r[g], l)) &&
                (e &&
                  null !== m.alternate &&
                  d.delete(null === m.key ? g : m.key),
                (a = s(m, a, g)),
                null === u ? (c = m) : (u.sibling = m),
                (u = m));
            return (
              e &&
                d.forEach(function (e) {
                  return t(o, e);
                }),
              aa && Jo(o, g),
              c
            );
          }
          function m(o, r, l, c) {
            var u = _(l);
            if ("function" !== typeof u) throw Error(a(150));
            if (null == (l = u.call(l))) throw Error(a(151));
            for (
              var d = (u = null), g = r, m = (r = 0), v = null, b = l.next();
              null !== g && !b.done;
              m++, b = l.next()
            ) {
              g.index > m ? ((v = g), (g = null)) : (v = g.sibling);
              var x = p(o, g, b.value, c);
              if (null === x) {
                null === g && (g = v);
                break;
              }
              e && g && null === x.alternate && t(o, g),
                (r = s(x, r, m)),
                null === d ? (u = x) : (d.sibling = x),
                (d = x),
                (g = v);
            }
            if (b.done) return n(o, g), aa && Jo(o, m), u;
            if (null === g) {
              for (; !b.done; m++, b = l.next())
                null !== (b = h(o, b.value, c)) &&
                  ((r = s(b, r, m)),
                  null === d ? (u = b) : (d.sibling = b),
                  (d = b));
              return aa && Jo(o, m), u;
            }
            for (g = i(o, g); !b.done; m++, b = l.next())
              null !== (b = f(g, o, m, b.value, c)) &&
                (e &&
                  null !== b.alternate &&
                  g.delete(null === b.key ? m : b.key),
                (r = s(b, r, m)),
                null === d ? (u = b) : (d.sibling = b),
                (d = b));
            return (
              e &&
                g.forEach(function (e) {
                  return t(o, e);
                }),
              aa && Jo(o, m),
              u
            );
          }
          return function e(i, a, s, l) {
            if (
              ("object" === typeof s &&
                null !== s &&
                s.type === k &&
                null === s.key &&
                (s = s.props.children),
              "object" === typeof s && null !== s)
            ) {
              switch (s.$$typeof) {
                case w:
                  e: {
                    for (var c = s.key, u = a; null !== u; ) {
                      if (u.key === c) {
                        if ((c = s.type) === k) {
                          if (7 === u.tag) {
                            n(i, u.sibling),
                              ((a = o(u, s.props.children)).return = i),
                              (i = a);
                            break e;
                          }
                        } else if (
                          u.elementType === c ||
                          ("object" === typeof c &&
                            null !== c &&
                            c.$$typeof === R &&
                            xa(c) === u.type)
                        ) {
                          n(i, u.sibling),
                            ((a = o(u, s.props)).ref = va(i, u, s)),
                            (a.return = i),
                            (i = a);
                          break e;
                        }
                        n(i, u);
                        break;
                      }
                      t(i, u), (u = u.sibling);
                    }
                    s.type === k
                      ? (((a = _c(s.props.children, i.mode, l, s.key)).return =
                          i),
                        (i = a))
                      : (((l = Nc(
                          s.type,
                          s.key,
                          s.props,
                          null,
                          i.mode,
                          l
                        )).ref = va(i, a, s)),
                        (l.return = i),
                        (i = l));
                  }
                  return r(i);
                case S:
                  e: {
                    for (u = s.key; null !== a; ) {
                      if (a.key === u) {
                        if (
                          4 === a.tag &&
                          a.stateNode.containerInfo === s.containerInfo &&
                          a.stateNode.implementation === s.implementation
                        ) {
                          n(i, a.sibling),
                            ((a = o(a, s.children || [])).return = i),
                            (i = a);
                          break e;
                        }
                        n(i, a);
                        break;
                      }
                      t(i, a), (a = a.sibling);
                    }
                    ((a = jc(s, i.mode, l)).return = i), (i = a);
                  }
                  return r(i);
                case R:
                  return e(i, a, (u = s._init)(s._payload), l);
              }
              if (te(s)) return g(i, a, s, l);
              if (_(s)) return m(i, a, s, l);
              ba(i, s);
            }
            return ("string" === typeof s && "" !== s) || "number" === typeof s
              ? ((s = "" + s),
                null !== a && 6 === a.tag
                  ? (n(i, a.sibling), ((a = o(a, s)).return = i), (i = a))
                  : (n(i, a), ((a = zc(s, i.mode, l)).return = i), (i = a)),
                r(i))
              : n(i, a);
          };
        }
        var wa = ya(!0),
          Sa = ya(!1),
          ka = Co(null),
          Aa = null,
          Ca = null,
          Ma = null;
        function Pa() {
          Ma = Ca = Aa = null;
        }
        function Ea(e) {
          var t = ka.current;
          Mo(ka), (e._currentValue = t);
        }
        function La(e, t, n) {
          for (; null !== e; ) {
            var i = e.alternate;
            if (
              ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), null !== i && (i.childLanes |= t))
                : null !== i && (i.childLanes & t) !== t && (i.childLanes |= t),
              e === n)
            )
              break;
            e = e.return;
          }
        }
        function Ta(e, t) {
          (Aa = e),
            (Ma = Ca = null),
            null !== (e = e.dependencies) &&
              null !== e.firstContext &&
              (0 !== (e.lanes & t) && (xr = !0), (e.firstContext = null));
        }
        function Oa(e) {
          var t = e._currentValue;
          if (Ma !== e)
            if (
              ((e = { context: e, memoizedValue: t, next: null }), null === Ca)
            ) {
              if (null === Aa) throw Error(a(308));
              (Ca = e), (Aa.dependencies = { lanes: 0, firstContext: e });
            } else Ca = Ca.next = e;
          return t;
        }
        var Ra = null;
        function Ia(e) {
          null === Ra ? (Ra = [e]) : Ra.push(e);
        }
        function Na(e, t, n, i) {
          var o = t.interleaved;
          return (
            null === o
              ? ((n.next = n), Ia(t))
              : ((n.next = o.next), (o.next = n)),
            (t.interleaved = n),
            _a(e, i)
          );
        }
        function _a(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; )
            (e.childLanes |= t),
              null !== (n = e.alternate) && (n.childLanes |= t),
              (n = e),
              (e = e.return);
          return 3 === n.tag ? n.stateNode : null;
        }
        var Da = !1;
        function za(e) {
          e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null, interleaved: null, lanes: 0 },
            effects: null,
          };
        }
        function ja(e, t) {
          (e = e.updateQueue),
            t.updateQueue === e &&
              (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
              });
        }
        function Ba(e, t) {
          return {
            eventTime: e,
            lane: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
          };
        }
        function Fa(e, t, n) {
          var i = e.updateQueue;
          if (null === i) return null;
          if (((i = i.shared), 0 !== (2 & El))) {
            var o = i.pending;
            return (
              null === o ? (t.next = t) : ((t.next = o.next), (o.next = t)),
              (i.pending = t),
              _a(e, n)
            );
          }
          return (
            null === (o = i.interleaved)
              ? ((t.next = t), Ia(i))
              : ((t.next = o.next), (o.next = t)),
            (i.interleaved = t),
            _a(e, n)
          );
        }
        function Wa(e, t, n) {
          if (
            null !== (t = t.updateQueue) &&
            ((t = t.shared), 0 !== (4194240 & n))
          ) {
            var i = t.lanes;
            (n |= i &= e.pendingLanes), (t.lanes = n), bt(e, n);
          }
        }
        function Ha(e, t) {
          var n = e.updateQueue,
            i = e.alternate;
          if (null !== i && n === (i = i.updateQueue)) {
            var o = null,
              a = null;
            if (null !== (n = n.firstBaseUpdate)) {
              do {
                var s = {
                  eventTime: n.eventTime,
                  lane: n.lane,
                  tag: n.tag,
                  payload: n.payload,
                  callback: n.callback,
                  next: null,
                };
                null === a ? (o = a = s) : (a = a.next = s), (n = n.next);
              } while (null !== n);
              null === a ? (o = a = t) : (a = a.next = t);
            } else o = a = t;
            return (
              (n = {
                baseState: i.baseState,
                firstBaseUpdate: o,
                lastBaseUpdate: a,
                shared: i.shared,
                effects: i.effects,
              }),
              void (e.updateQueue = n)
            );
          }
          null === (e = n.lastBaseUpdate)
            ? (n.firstBaseUpdate = t)
            : (e.next = t),
            (n.lastBaseUpdate = t);
        }
        function Ga(e, t, n, i) {
          var o = e.updateQueue;
          Da = !1;
          var a = o.firstBaseUpdate,
            s = o.lastBaseUpdate,
            r = o.shared.pending;
          if (null !== r) {
            o.shared.pending = null;
            var l = r,
              c = l.next;
            (l.next = null), null === s ? (a = c) : (s.next = c), (s = l);
            var u = e.alternate;
            null !== u &&
              (r = (u = u.updateQueue).lastBaseUpdate) !== s &&
              (null === r ? (u.firstBaseUpdate = c) : (r.next = c),
              (u.lastBaseUpdate = l));
          }
          if (null !== a) {
            var d = o.baseState;
            for (s = 0, u = c = l = null, r = a; ; ) {
              var h = r.lane,
                p = r.eventTime;
              if ((i & h) === h) {
                null !== u &&
                  (u = u.next =
                    {
                      eventTime: p,
                      lane: 0,
                      tag: r.tag,
                      payload: r.payload,
                      callback: r.callback,
                      next: null,
                    });
                e: {
                  var f = e,
                    g = r;
                  switch (((h = t), (p = n), g.tag)) {
                    case 1:
                      if ("function" === typeof (f = g.payload)) {
                        d = f.call(p, d, h);
                        break e;
                      }
                      d = f;
                      break e;
                    case 3:
                      f.flags = (-65537 & f.flags) | 128;
                    case 0:
                      if (
                        null ===
                          (h =
                            "function" === typeof (f = g.payload)
                              ? f.call(p, d, h)
                              : f) ||
                        void 0 === h
                      )
                        break e;
                      d = z({}, d, h);
                      break e;
                    case 2:
                      Da = !0;
                  }
                }
                null !== r.callback &&
                  0 !== r.lane &&
                  ((e.flags |= 64),
                  null === (h = o.effects) ? (o.effects = [r]) : h.push(r));
              } else
                (p = {
                  eventTime: p,
                  lane: h,
                  tag: r.tag,
                  payload: r.payload,
                  callback: r.callback,
                  next: null,
                }),
                  null === u ? ((c = u = p), (l = d)) : (u = u.next = p),
                  (s |= h);
              if (null === (r = r.next)) {
                if (null === (r = o.shared.pending)) break;
                (r = (h = r).next),
                  (h.next = null),
                  (o.lastBaseUpdate = h),
                  (o.shared.pending = null);
              }
            }
            if (
              (null === u && (l = d),
              (o.baseState = l),
              (o.firstBaseUpdate = c),
              (o.lastBaseUpdate = u),
              null !== (t = o.shared.interleaved))
            ) {
              o = t;
              do {
                (s |= o.lane), (o = o.next);
              } while (o !== t);
            } else null === a && (o.shared.lanes = 0);
            (Dl |= s), (e.lanes = s), (e.memoizedState = d);
          }
        }
        function Va(e, t, n) {
          if (((e = t.effects), (t.effects = null), null !== e))
            for (t = 0; t < e.length; t++) {
              var i = e[t],
                o = i.callback;
              if (null !== o) {
                if (((i.callback = null), (i = n), "function" !== typeof o))
                  throw Error(a(191, o));
                o.call(i);
              }
            }
        }
        var Ua = {},
          Ya = Co(Ua),
          Xa = Co(Ua),
          Ka = Co(Ua);
        function qa(e) {
          if (e === Ua) throw Error(a(174));
          return e;
        }
        function Za(e, t) {
          switch ((Po(Ka, t), Po(Xa, e), Po(Ya, Ua), (e = t.nodeType))) {
            case 9:
            case 11:
              t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
              break;
            default:
              t = le(
                (t = (e = 8 === e ? t.parentNode : t).namespaceURI || null),
                (e = e.tagName)
              );
          }
          Mo(Ya), Po(Ya, t);
        }
        function Qa() {
          Mo(Ya), Mo(Xa), Mo(Ka);
        }
        function $a(e) {
          qa(Ka.current);
          var t = qa(Ya.current),
            n = le(t, e.type);
          t !== n && (Po(Xa, e), Po(Ya, n));
        }
        function Ja(e) {
          Xa.current === e && (Mo(Ya), Mo(Xa));
        }
        var es = Co(0);
        function ts(e) {
          for (var t = e; null !== t; ) {
            if (13 === t.tag) {
              var n = t.memoizedState;
              if (
                null !== n &&
                (null === (n = n.dehydrated) ||
                  "$?" === n.data ||
                  "$!" === n.data)
              )
                return t;
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
              if (0 !== (128 & t.flags)) return t;
            } else if (null !== t.child) {
              (t.child.return = t), (t = t.child);
              continue;
            }
            if (t === e) break;
            for (; null === t.sibling; ) {
              if (null === t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
          return null;
        }
        var ns = [];
        function is() {
          for (var e = 0; e < ns.length; e++)
            ns[e]._workInProgressVersionPrimary = null;
          ns.length = 0;
        }
        var os = y.ReactCurrentDispatcher,
          as = y.ReactCurrentBatchConfig,
          ss = 0,
          rs = null,
          ls = null,
          cs = null,
          us = !1,
          ds = !1,
          hs = 0,
          ps = 0;
        function fs() {
          throw Error(a(321));
        }
        function gs(e, t) {
          if (null === t) return !1;
          for (var n = 0; n < t.length && n < e.length; n++)
            if (!ri(e[n], t[n])) return !1;
          return !0;
        }
        function ms(e, t, n, i, o, s) {
          if (
            ((ss = s),
            (rs = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (os.current = null === e || null === e.memoizedState ? Js : er),
            (e = n(i, o)),
            ds)
          ) {
            s = 0;
            do {
              if (((ds = !1), (hs = 0), 25 <= s)) throw Error(a(301));
              (s += 1),
                (cs = ls = null),
                (t.updateQueue = null),
                (os.current = tr),
                (e = n(i, o));
            } while (ds);
          }
          if (
            ((os.current = $s),
            (t = null !== ls && null !== ls.next),
            (ss = 0),
            (cs = ls = rs = null),
            (us = !1),
            t)
          )
            throw Error(a(300));
          return e;
        }
        function vs() {
          var e = 0 !== hs;
          return (hs = 0), e;
        }
        function bs() {
          var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
          };
          return (
            null === cs ? (rs.memoizedState = cs = e) : (cs = cs.next = e), cs
          );
        }
        function xs() {
          if (null === ls) {
            var e = rs.alternate;
            e = null !== e ? e.memoizedState : null;
          } else e = ls.next;
          var t = null === cs ? rs.memoizedState : cs.next;
          if (null !== t) (cs = t), (ls = e);
          else {
            if (null === e) throw Error(a(310));
            (e = {
              memoizedState: (ls = e).memoizedState,
              baseState: ls.baseState,
              baseQueue: ls.baseQueue,
              queue: ls.queue,
              next: null,
            }),
              null === cs ? (rs.memoizedState = cs = e) : (cs = cs.next = e);
          }
          return cs;
        }
        function ys(e, t) {
          return "function" === typeof t ? t(e) : t;
        }
        function ws(e) {
          var t = xs(),
            n = t.queue;
          if (null === n) throw Error(a(311));
          n.lastRenderedReducer = e;
          var i = ls,
            o = i.baseQueue,
            s = n.pending;
          if (null !== s) {
            if (null !== o) {
              var r = o.next;
              (o.next = s.next), (s.next = r);
            }
            (i.baseQueue = o = s), (n.pending = null);
          }
          if (null !== o) {
            (s = o.next), (i = i.baseState);
            var l = (r = null),
              c = null,
              u = s;
            do {
              var d = u.lane;
              if ((ss & d) === d)
                null !== c &&
                  (c = c.next =
                    {
                      lane: 0,
                      action: u.action,
                      hasEagerState: u.hasEagerState,
                      eagerState: u.eagerState,
                      next: null,
                    }),
                  (i = u.hasEagerState ? u.eagerState : e(i, u.action));
              else {
                var h = {
                  lane: d,
                  action: u.action,
                  hasEagerState: u.hasEagerState,
                  eagerState: u.eagerState,
                  next: null,
                };
                null === c ? ((l = c = h), (r = i)) : (c = c.next = h),
                  (rs.lanes |= d),
                  (Dl |= d);
              }
              u = u.next;
            } while (null !== u && u !== s);
            null === c ? (r = i) : (c.next = l),
              ri(i, t.memoizedState) || (xr = !0),
              (t.memoizedState = i),
              (t.baseState = r),
              (t.baseQueue = c),
              (n.lastRenderedState = i);
          }
          if (null !== (e = n.interleaved)) {
            o = e;
            do {
              (s = o.lane), (rs.lanes |= s), (Dl |= s), (o = o.next);
            } while (o !== e);
          } else null === o && (n.lanes = 0);
          return [t.memoizedState, n.dispatch];
        }
        function Ss(e) {
          var t = xs(),
            n = t.queue;
          if (null === n) throw Error(a(311));
          n.lastRenderedReducer = e;
          var i = n.dispatch,
            o = n.pending,
            s = t.memoizedState;
          if (null !== o) {
            n.pending = null;
            var r = (o = o.next);
            do {
              (s = e(s, r.action)), (r = r.next);
            } while (r !== o);
            ri(s, t.memoizedState) || (xr = !0),
              (t.memoizedState = s),
              null === t.baseQueue && (t.baseState = s),
              (n.lastRenderedState = s);
          }
          return [s, i];
        }
        function ks() {}
        function As(e, t) {
          var n = rs,
            i = xs(),
            o = t(),
            s = !ri(i.memoizedState, o);
          if (
            (s && ((i.memoizedState = o), (xr = !0)),
            (i = i.queue),
            Ds(Ps.bind(null, n, i, e), [e]),
            i.getSnapshot !== t ||
              s ||
              (null !== cs && 1 & cs.memoizedState.tag))
          ) {
            if (
              ((n.flags |= 2048),
              Os(9, Ms.bind(null, n, i, o, t), void 0, null),
              null === Ll)
            )
              throw Error(a(349));
            0 !== (30 & ss) || Cs(n, t, o);
          }
          return o;
        }
        function Cs(e, t, n) {
          (e.flags |= 16384),
            (e = { getSnapshot: t, value: n }),
            null === (t = rs.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (rs.updateQueue = t),
                (t.stores = [e]))
              : null === (n = t.stores)
              ? (t.stores = [e])
              : n.push(e);
        }
        function Ms(e, t, n, i) {
          (t.value = n), (t.getSnapshot = i), Es(t) && Ls(e);
        }
        function Ps(e, t, n) {
          return n(function () {
            Es(t) && Ls(e);
          });
        }
        function Es(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !ri(e, n);
          } catch (i) {
            return !0;
          }
        }
        function Ls(e) {
          var t = _a(e, 1);
          null !== t && nc(t, e, 1, -1);
        }
        function Ts(e) {
          var t = bs();
          return (
            "function" === typeof e && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = {
              pending: null,
              interleaved: null,
              lanes: 0,
              dispatch: null,
              lastRenderedReducer: ys,
              lastRenderedState: e,
            }),
            (t.queue = e),
            (e = e.dispatch = Ks.bind(null, rs, e)),
            [t.memoizedState, e]
          );
        }
        function Os(e, t, n, i) {
          return (
            (e = { tag: e, create: t, destroy: n, deps: i, next: null }),
            null === (t = rs.updateQueue)
              ? ((t = { lastEffect: null, stores: null }),
                (rs.updateQueue = t),
                (t.lastEffect = e.next = e))
              : null === (n = t.lastEffect)
              ? (t.lastEffect = e.next = e)
              : ((i = n.next), (n.next = e), (e.next = i), (t.lastEffect = e)),
            e
          );
        }
        function Rs() {
          return xs().memoizedState;
        }
        function Is(e, t, n, i) {
          var o = bs();
          (rs.flags |= e),
            (o.memoizedState = Os(1 | t, n, void 0, void 0 === i ? null : i));
        }
        function Ns(e, t, n, i) {
          var o = xs();
          i = void 0 === i ? null : i;
          var a = void 0;
          if (null !== ls) {
            var s = ls.memoizedState;
            if (((a = s.destroy), null !== i && gs(i, s.deps)))
              return void (o.memoizedState = Os(t, n, a, i));
          }
          (rs.flags |= e), (o.memoizedState = Os(1 | t, n, a, i));
        }
        function _s(e, t) {
          return Is(8390656, 8, e, t);
        }
        function Ds(e, t) {
          return Ns(2048, 8, e, t);
        }
        function zs(e, t) {
          return Ns(4, 2, e, t);
        }
        function js(e, t) {
          return Ns(4, 4, e, t);
        }
        function Bs(e, t) {
          return "function" === typeof t
            ? ((e = e()),
              t(e),
              function () {
                t(null);
              })
            : null !== t && void 0 !== t
            ? ((e = e()),
              (t.current = e),
              function () {
                t.current = null;
              })
            : void 0;
        }
        function Fs(e, t, n) {
          return (
            (n = null !== n && void 0 !== n ? n.concat([e]) : null),
            Ns(4, 4, Bs.bind(null, t, e), n)
          );
        }
        function Ws() {}
        function Hs(e, t) {
          var n = xs();
          t = void 0 === t ? null : t;
          var i = n.memoizedState;
          return null !== i && null !== t && gs(t, i[1])
            ? i[0]
            : ((n.memoizedState = [e, t]), e);
        }
        function Gs(e, t) {
          var n = xs();
          t = void 0 === t ? null : t;
          var i = n.memoizedState;
          return null !== i && null !== t && gs(t, i[1])
            ? i[0]
            : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function Vs(e, t, n) {
          return 0 === (21 & ss)
            ? (e.baseState && ((e.baseState = !1), (xr = !0)),
              (e.memoizedState = n))
            : (ri(n, t) ||
                ((n = gt()), (rs.lanes |= n), (Dl |= n), (e.baseState = !0)),
              t);
        }
        function Us(e, t) {
          var n = xt;
          (xt = 0 !== n && 4 > n ? n : 4), e(!0);
          var i = as.transition;
          as.transition = {};
          try {
            e(!1), t();
          } finally {
            (xt = n), (as.transition = i);
          }
        }
        function Ys() {
          return xs().memoizedState;
        }
        function Xs(e, t, n) {
          var i = tc(e);
          if (
            ((n = {
              lane: i,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            }),
            qs(e))
          )
            Zs(t, n);
          else if (null !== (n = Na(e, t, n, i))) {
            nc(n, e, i, ec()), Qs(n, t, i);
          }
        }
        function Ks(e, t, n) {
          var i = tc(e),
            o = {
              lane: i,
              action: n,
              hasEagerState: !1,
              eagerState: null,
              next: null,
            };
          if (qs(e)) Zs(t, o);
          else {
            var a = e.alternate;
            if (
              0 === e.lanes &&
              (null === a || 0 === a.lanes) &&
              null !== (a = t.lastRenderedReducer)
            )
              try {
                var s = t.lastRenderedState,
                  r = a(s, n);
                if (((o.hasEagerState = !0), (o.eagerState = r), ri(r, s))) {
                  var l = t.interleaved;
                  return (
                    null === l
                      ? ((o.next = o), Ia(t))
                      : ((o.next = l.next), (l.next = o)),
                    void (t.interleaved = o)
                  );
                }
              } catch (c) {}
            null !== (n = Na(e, t, o, i)) &&
              (nc(n, e, i, (o = ec())), Qs(n, t, i));
          }
        }
        function qs(e) {
          var t = e.alternate;
          return e === rs || (null !== t && t === rs);
        }
        function Zs(e, t) {
          ds = us = !0;
          var n = e.pending;
          null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)),
            (e.pending = t);
        }
        function Qs(e, t, n) {
          if (0 !== (4194240 & n)) {
            var i = t.lanes;
            (n |= i &= e.pendingLanes), (t.lanes = n), bt(e, n);
          }
        }
        var $s = {
            readContext: Oa,
            useCallback: fs,
            useContext: fs,
            useEffect: fs,
            useImperativeHandle: fs,
            useInsertionEffect: fs,
            useLayoutEffect: fs,
            useMemo: fs,
            useReducer: fs,
            useRef: fs,
            useState: fs,
            useDebugValue: fs,
            useDeferredValue: fs,
            useTransition: fs,
            useMutableSource: fs,
            useSyncExternalStore: fs,
            useId: fs,
            unstable_isNewReconciler: !1,
          },
          Js = {
            readContext: Oa,
            useCallback: function (e, t) {
              return (bs().memoizedState = [e, void 0 === t ? null : t]), e;
            },
            useContext: Oa,
            useEffect: _s,
            useImperativeHandle: function (e, t, n) {
              return (
                (n = null !== n && void 0 !== n ? n.concat([e]) : null),
                Is(4194308, 4, Bs.bind(null, t, e), n)
              );
            },
            useLayoutEffect: function (e, t) {
              return Is(4194308, 4, e, t);
            },
            useInsertionEffect: function (e, t) {
              return Is(4, 2, e, t);
            },
            useMemo: function (e, t) {
              var n = bs();
              return (
                (t = void 0 === t ? null : t),
                (e = e()),
                (n.memoizedState = [e, t]),
                e
              );
            },
            useReducer: function (e, t, n) {
              var i = bs();
              return (
                (t = void 0 !== n ? n(t) : t),
                (i.memoizedState = i.baseState = t),
                (e = {
                  pending: null,
                  interleaved: null,
                  lanes: 0,
                  dispatch: null,
                  lastRenderedReducer: e,
                  lastRenderedState: t,
                }),
                (i.queue = e),
                (e = e.dispatch = Xs.bind(null, rs, e)),
                [i.memoizedState, e]
              );
            },
            useRef: function (e) {
              return (e = { current: e }), (bs().memoizedState = e);
            },
            useState: Ts,
            useDebugValue: Ws,
            useDeferredValue: function (e) {
              return (bs().memoizedState = e);
            },
            useTransition: function () {
              var e = Ts(!1),
                t = e[0];
              return (
                (e = Us.bind(null, e[1])), (bs().memoizedState = e), [t, e]
              );
            },
            useMutableSource: function () {},
            useSyncExternalStore: function (e, t, n) {
              var i = rs,
                o = bs();
              if (aa) {
                if (void 0 === n) throw Error(a(407));
                n = n();
              } else {
                if (((n = t()), null === Ll)) throw Error(a(349));
                0 !== (30 & ss) || Cs(i, t, n);
              }
              o.memoizedState = n;
              var s = { value: n, getSnapshot: t };
              return (
                (o.queue = s),
                _s(Ps.bind(null, i, s, e), [e]),
                (i.flags |= 2048),
                Os(9, Ms.bind(null, i, s, n, t), void 0, null),
                n
              );
            },
            useId: function () {
              var e = bs(),
                t = Ll.identifierPrefix;
              if (aa) {
                var n = $o;
                (t =
                  ":" +
                  t +
                  "R" +
                  (n = (Qo & ~(1 << (32 - st(Qo) - 1))).toString(32) + n)),
                  0 < (n = hs++) && (t += "H" + n.toString(32)),
                  (t += ":");
              } else t = ":" + t + "r" + (n = ps++).toString(32) + ":";
              return (e.memoizedState = t);
            },
            unstable_isNewReconciler: !1,
          },
          er = {
            readContext: Oa,
            useCallback: Hs,
            useContext: Oa,
            useEffect: Ds,
            useImperativeHandle: Fs,
            useInsertionEffect: zs,
            useLayoutEffect: js,
            useMemo: Gs,
            useReducer: ws,
            useRef: Rs,
            useState: function () {
              return ws(ys);
            },
            useDebugValue: Ws,
            useDeferredValue: function (e) {
              return Vs(xs(), ls.memoizedState, e);
            },
            useTransition: function () {
              return [ws(ys)[0], xs().memoizedState];
            },
            useMutableSource: ks,
            useSyncExternalStore: As,
            useId: Ys,
            unstable_isNewReconciler: !1,
          },
          tr = {
            readContext: Oa,
            useCallback: Hs,
            useContext: Oa,
            useEffect: Ds,
            useImperativeHandle: Fs,
            useInsertionEffect: zs,
            useLayoutEffect: js,
            useMemo: Gs,
            useReducer: Ss,
            useRef: Rs,
            useState: function () {
              return Ss(ys);
            },
            useDebugValue: Ws,
            useDeferredValue: function (e) {
              var t = xs();
              return null === ls
                ? (t.memoizedState = e)
                : Vs(t, ls.memoizedState, e);
            },
            useTransition: function () {
              return [Ss(ys)[0], xs().memoizedState];
            },
            useMutableSource: ks,
            useSyncExternalStore: As,
            useId: Ys,
            unstable_isNewReconciler: !1,
          };
        function nr(e, t) {
          if (e && e.defaultProps) {
            for (var n in ((t = z({}, t)), (e = e.defaultProps)))
              void 0 === t[n] && (t[n] = e[n]);
            return t;
          }
          return t;
        }
        function ir(e, t, n, i) {
          (n =
            null === (n = n(i, (t = e.memoizedState))) || void 0 === n
              ? t
              : z({}, t, n)),
            (e.memoizedState = n),
            0 === e.lanes && (e.updateQueue.baseState = n);
        }
        var or = {
          isMounted: function (e) {
            return !!(e = e._reactInternals) && He(e) === e;
          },
          enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var i = ec(),
              o = tc(e),
              a = Ba(i, o);
            (a.payload = t),
              void 0 !== n && null !== n && (a.callback = n),
              null !== (t = Fa(e, a, o)) && (nc(t, e, o, i), Wa(t, e, o));
          },
          enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var i = ec(),
              o = tc(e),
              a = Ba(i, o);
            (a.tag = 1),
              (a.payload = t),
              void 0 !== n && null !== n && (a.callback = n),
              null !== (t = Fa(e, a, o)) && (nc(t, e, o, i), Wa(t, e, o));
          },
          enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = ec(),
              i = tc(e),
              o = Ba(n, i);
            (o.tag = 2),
              void 0 !== t && null !== t && (o.callback = t),
              null !== (t = Fa(e, o, i)) && (nc(t, e, i, n), Wa(t, e, i));
          },
        };
        function ar(e, t, n, i, o, a, s) {
          return "function" === typeof (e = e.stateNode).shouldComponentUpdate
            ? e.shouldComponentUpdate(i, a, s)
            : !t.prototype ||
                !t.prototype.isPureReactComponent ||
                !li(n, i) ||
                !li(o, a);
        }
        function sr(e, t, n) {
          var i = !1,
            o = Eo,
            a = t.contextType;
          return (
            "object" === typeof a && null !== a
              ? (a = Oa(a))
              : ((o = Io(t) ? Oo : Lo.current),
                (a = (i = null !== (i = t.contextTypes) && void 0 !== i)
                  ? Ro(e, o)
                  : Eo)),
            (t = new t(n, a)),
            (e.memoizedState =
              null !== t.state && void 0 !== t.state ? t.state : null),
            (t.updater = or),
            (e.stateNode = t),
            (t._reactInternals = e),
            i &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext =
                o),
              (e.__reactInternalMemoizedMaskedChildContext = a)),
            t
          );
        }
        function rr(e, t, n, i) {
          (e = t.state),
            "function" === typeof t.componentWillReceiveProps &&
              t.componentWillReceiveProps(n, i),
            "function" === typeof t.UNSAFE_componentWillReceiveProps &&
              t.UNSAFE_componentWillReceiveProps(n, i),
            t.state !== e && or.enqueueReplaceState(t, t.state, null);
        }
        function lr(e, t, n, i) {
          var o = e.stateNode;
          (o.props = n), (o.state = e.memoizedState), (o.refs = {}), za(e);
          var a = t.contextType;
          "object" === typeof a && null !== a
            ? (o.context = Oa(a))
            : ((a = Io(t) ? Oo : Lo.current), (o.context = Ro(e, a))),
            (o.state = e.memoizedState),
            "function" === typeof (a = t.getDerivedStateFromProps) &&
              (ir(e, t, a, n), (o.state = e.memoizedState)),
            "function" === typeof t.getDerivedStateFromProps ||
              "function" === typeof o.getSnapshotBeforeUpdate ||
              ("function" !== typeof o.UNSAFE_componentWillMount &&
                "function" !== typeof o.componentWillMount) ||
              ((t = o.state),
              "function" === typeof o.componentWillMount &&
                o.componentWillMount(),
              "function" === typeof o.UNSAFE_componentWillMount &&
                o.UNSAFE_componentWillMount(),
              t !== o.state && or.enqueueReplaceState(o, o.state, null),
              Ga(e, n, o, i),
              (o.state = e.memoizedState)),
            "function" === typeof o.componentDidMount && (e.flags |= 4194308);
        }
        function cr(e, t) {
          try {
            var n = "",
              i = t;
            do {
              (n += W(i)), (i = i.return);
            } while (i);
            var o = n;
          } catch (a) {
            o = "\nError generating stack: " + a.message + "\n" + a.stack;
          }
          return { value: e, source: t, stack: o, digest: null };
        }
        function ur(e, t, n) {
          return {
            value: e,
            source: null,
            stack: null != n ? n : null,
            digest: null != t ? t : null,
          };
        }
        function dr(e, t) {
          try {
            console.error(t.value);
          } catch (n) {
            setTimeout(function () {
              throw n;
            });
          }
        }
        var hr = "function" === typeof WeakMap ? WeakMap : Map;
        function pr(e, t, n) {
          ((n = Ba(-1, n)).tag = 3), (n.payload = { element: null });
          var i = t.value;
          return (
            (n.callback = function () {
              Vl || ((Vl = !0), (Ul = i)), dr(0, t);
            }),
            n
          );
        }
        function fr(e, t, n) {
          (n = Ba(-1, n)).tag = 3;
          var i = e.type.getDerivedStateFromError;
          if ("function" === typeof i) {
            var o = t.value;
            (n.payload = function () {
              return i(o);
            }),
              (n.callback = function () {
                dr(0, t);
              });
          }
          var a = e.stateNode;
          return (
            null !== a &&
              "function" === typeof a.componentDidCatch &&
              (n.callback = function () {
                dr(0, t),
                  "function" !== typeof i &&
                    (null === Yl ? (Yl = new Set([this])) : Yl.add(this));
                var e = t.stack;
                this.componentDidCatch(t.value, {
                  componentStack: null !== e ? e : "",
                });
              }),
            n
          );
        }
        function gr(e, t, n) {
          var i = e.pingCache;
          if (null === i) {
            i = e.pingCache = new hr();
            var o = new Set();
            i.set(t, o);
          } else void 0 === (o = i.get(t)) && ((o = new Set()), i.set(t, o));
          o.has(n) || (o.add(n), (e = Cc.bind(null, e, t, n)), t.then(e, e));
        }
        function mr(e) {
          do {
            var t;
            if (
              ((t = 13 === e.tag) &&
                (t = null === (t = e.memoizedState) || null !== t.dehydrated),
              t)
            )
              return e;
            e = e.return;
          } while (null !== e);
          return null;
        }
        function vr(e, t, n, i, o) {
          return 0 === (1 & e.mode)
            ? (e === t
                ? (e.flags |= 65536)
                : ((e.flags |= 128),
                  (n.flags |= 131072),
                  (n.flags &= -52805),
                  1 === n.tag &&
                    (null === n.alternate
                      ? (n.tag = 17)
                      : (((t = Ba(-1, 1)).tag = 2), Fa(n, t, 1))),
                  (n.lanes |= 1)),
              e)
            : ((e.flags |= 65536), (e.lanes = o), e);
        }
        var br = y.ReactCurrentOwner,
          xr = !1;
        function yr(e, t, n, i) {
          t.child = null === e ? Sa(t, null, n, i) : wa(t, e.child, n, i);
        }
        function wr(e, t, n, i, o) {
          n = n.render;
          var a = t.ref;
          return (
            Ta(t, o),
            (i = ms(e, t, n, i, a, o)),
            (n = vs()),
            null === e || xr
              ? (aa && n && ta(t), (t.flags |= 1), yr(e, t, i, o), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~o),
                Vr(e, t, o))
          );
        }
        function Sr(e, t, n, i, o) {
          if (null === e) {
            var a = n.type;
            return "function" !== typeof a ||
              Rc(a) ||
              void 0 !== a.defaultProps ||
              null !== n.compare ||
              void 0 !== n.defaultProps
              ? (((e = Nc(n.type, null, i, t, t.mode, o)).ref = t.ref),
                (e.return = t),
                (t.child = e))
              : ((t.tag = 15), (t.type = a), kr(e, t, a, i, o));
          }
          if (((a = e.child), 0 === (e.lanes & o))) {
            var s = a.memoizedProps;
            if (
              (n = null !== (n = n.compare) ? n : li)(s, i) &&
              e.ref === t.ref
            )
              return Vr(e, t, o);
          }
          return (
            (t.flags |= 1),
            ((e = Ic(a, i)).ref = t.ref),
            (e.return = t),
            (t.child = e)
          );
        }
        function kr(e, t, n, i, o) {
          if (null !== e) {
            var a = e.memoizedProps;
            if (li(a, i) && e.ref === t.ref) {
              if (((xr = !1), (t.pendingProps = i = a), 0 === (e.lanes & o)))
                return (t.lanes = e.lanes), Vr(e, t, o);
              0 !== (131072 & e.flags) && (xr = !0);
            }
          }
          return Mr(e, t, n, i, o);
        }
        function Ar(e, t, n) {
          var i = t.pendingProps,
            o = i.children,
            a = null !== e ? e.memoizedState : null;
          if ("hidden" === i.mode)
            if (0 === (1 & t.mode))
              (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
              }),
                Po(Il, Rl),
                (Rl |= n);
            else {
              if (0 === (1073741824 & n))
                return (
                  (e = null !== a ? a.baseLanes | n : n),
                  (t.lanes = t.childLanes = 1073741824),
                  (t.memoizedState = {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null,
                  }),
                  (t.updateQueue = null),
                  Po(Il, Rl),
                  (Rl |= e),
                  null
                );
              (t.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null,
              }),
                (i = null !== a ? a.baseLanes : n),
                Po(Il, Rl),
                (Rl |= i);
            }
          else
            null !== a
              ? ((i = a.baseLanes | n), (t.memoizedState = null))
              : (i = n),
              Po(Il, Rl),
              (Rl |= i);
          return yr(e, t, o, n), t.child;
        }
        function Cr(e, t) {
          var n = t.ref;
          ((null === e && null !== n) || (null !== e && e.ref !== n)) &&
            ((t.flags |= 512), (t.flags |= 2097152));
        }
        function Mr(e, t, n, i, o) {
          var a = Io(n) ? Oo : Lo.current;
          return (
            (a = Ro(t, a)),
            Ta(t, o),
            (n = ms(e, t, n, i, a, o)),
            (i = vs()),
            null === e || xr
              ? (aa && i && ta(t), (t.flags |= 1), yr(e, t, n, o), t.child)
              : ((t.updateQueue = e.updateQueue),
                (t.flags &= -2053),
                (e.lanes &= ~o),
                Vr(e, t, o))
          );
        }
        function Pr(e, t, n, i, o) {
          if (Io(n)) {
            var a = !0;
            zo(t);
          } else a = !1;
          if ((Ta(t, o), null === t.stateNode))
            Gr(e, t), sr(t, n, i), lr(t, n, i, o), (i = !0);
          else if (null === e) {
            var s = t.stateNode,
              r = t.memoizedProps;
            s.props = r;
            var l = s.context,
              c = n.contextType;
            "object" === typeof c && null !== c
              ? (c = Oa(c))
              : (c = Ro(t, (c = Io(n) ? Oo : Lo.current)));
            var u = n.getDerivedStateFromProps,
              d =
                "function" === typeof u ||
                "function" === typeof s.getSnapshotBeforeUpdate;
            d ||
              ("function" !== typeof s.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof s.componentWillReceiveProps) ||
              ((r !== i || l !== c) && rr(t, s, i, c)),
              (Da = !1);
            var h = t.memoizedState;
            (s.state = h),
              Ga(t, i, s, o),
              (l = t.memoizedState),
              r !== i || h !== l || To.current || Da
                ? ("function" === typeof u &&
                    (ir(t, n, u, i), (l = t.memoizedState)),
                  (r = Da || ar(t, n, r, i, h, l, c))
                    ? (d ||
                        ("function" !== typeof s.UNSAFE_componentWillMount &&
                          "function" !== typeof s.componentWillMount) ||
                        ("function" === typeof s.componentWillMount &&
                          s.componentWillMount(),
                        "function" === typeof s.UNSAFE_componentWillMount &&
                          s.UNSAFE_componentWillMount()),
                      "function" === typeof s.componentDidMount &&
                        (t.flags |= 4194308))
                    : ("function" === typeof s.componentDidMount &&
                        (t.flags |= 4194308),
                      (t.memoizedProps = i),
                      (t.memoizedState = l)),
                  (s.props = i),
                  (s.state = l),
                  (s.context = c),
                  (i = r))
                : ("function" === typeof s.componentDidMount &&
                    (t.flags |= 4194308),
                  (i = !1));
          } else {
            (s = t.stateNode),
              ja(e, t),
              (r = t.memoizedProps),
              (c = t.type === t.elementType ? r : nr(t.type, r)),
              (s.props = c),
              (d = t.pendingProps),
              (h = s.context),
              "object" === typeof (l = n.contextType) && null !== l
                ? (l = Oa(l))
                : (l = Ro(t, (l = Io(n) ? Oo : Lo.current)));
            var p = n.getDerivedStateFromProps;
            (u =
              "function" === typeof p ||
              "function" === typeof s.getSnapshotBeforeUpdate) ||
              ("function" !== typeof s.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof s.componentWillReceiveProps) ||
              ((r !== d || h !== l) && rr(t, s, i, l)),
              (Da = !1),
              (h = t.memoizedState),
              (s.state = h),
              Ga(t, i, s, o);
            var f = t.memoizedState;
            r !== d || h !== f || To.current || Da
              ? ("function" === typeof p &&
                  (ir(t, n, p, i), (f = t.memoizedState)),
                (c = Da || ar(t, n, c, i, h, f, l) || !1)
                  ? (u ||
                      ("function" !== typeof s.UNSAFE_componentWillUpdate &&
                        "function" !== typeof s.componentWillUpdate) ||
                      ("function" === typeof s.componentWillUpdate &&
                        s.componentWillUpdate(i, f, l),
                      "function" === typeof s.UNSAFE_componentWillUpdate &&
                        s.UNSAFE_componentWillUpdate(i, f, l)),
                    "function" === typeof s.componentDidUpdate &&
                      (t.flags |= 4),
                    "function" === typeof s.getSnapshotBeforeUpdate &&
                      (t.flags |= 1024))
                  : ("function" !== typeof s.componentDidUpdate ||
                      (r === e.memoizedProps && h === e.memoizedState) ||
                      (t.flags |= 4),
                    "function" !== typeof s.getSnapshotBeforeUpdate ||
                      (r === e.memoizedProps && h === e.memoizedState) ||
                      (t.flags |= 1024),
                    (t.memoizedProps = i),
                    (t.memoizedState = f)),
                (s.props = i),
                (s.state = f),
                (s.context = l),
                (i = c))
              : ("function" !== typeof s.componentDidUpdate ||
                  (r === e.memoizedProps && h === e.memoizedState) ||
                  (t.flags |= 4),
                "function" !== typeof s.getSnapshotBeforeUpdate ||
                  (r === e.memoizedProps && h === e.memoizedState) ||
                  (t.flags |= 1024),
                (i = !1));
          }
          return Er(e, t, n, i, a, o);
        }
        function Er(e, t, n, i, o, a) {
          Cr(e, t);
          var s = 0 !== (128 & t.flags);
          if (!i && !s) return o && jo(t, n, !1), Vr(e, t, a);
          (i = t.stateNode), (br.current = t);
          var r =
            s && "function" !== typeof n.getDerivedStateFromError
              ? null
              : i.render();
          return (
            (t.flags |= 1),
            null !== e && s
              ? ((t.child = wa(t, e.child, null, a)),
                (t.child = wa(t, null, r, a)))
              : yr(e, t, r, a),
            (t.memoizedState = i.state),
            o && jo(t, n, !0),
            t.child
          );
        }
        function Lr(e) {
          var t = e.stateNode;
          t.pendingContext
            ? _o(0, t.pendingContext, t.pendingContext !== t.context)
            : t.context && _o(0, t.context, !1),
            Za(e, t.containerInfo);
        }
        function Tr(e, t, n, i, o) {
          return fa(), ga(o), (t.flags |= 256), yr(e, t, n, i), t.child;
        }
        var Or,
          Rr,
          Ir,
          Nr,
          _r = { dehydrated: null, treeContext: null, retryLane: 0 };
        function Dr(e) {
          return { baseLanes: e, cachePool: null, transitions: null };
        }
        function zr(e, t, n) {
          var i,
            o = t.pendingProps,
            s = es.current,
            r = !1,
            l = 0 !== (128 & t.flags);
          if (
            ((i = l) ||
              (i = (null === e || null !== e.memoizedState) && 0 !== (2 & s)),
            i
              ? ((r = !0), (t.flags &= -129))
              : (null !== e && null === e.memoizedState) || (s |= 1),
            Po(es, 1 & s),
            null === e)
          )
            return (
              ua(t),
              null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                ? (0 === (1 & t.mode)
                    ? (t.lanes = 1)
                    : "$!" === e.data
                    ? (t.lanes = 8)
                    : (t.lanes = 1073741824),
                  null)
                : ((l = o.children),
                  (e = o.fallback),
                  r
                    ? ((o = t.mode),
                      (r = t.child),
                      (l = { mode: "hidden", children: l }),
                      0 === (1 & o) && null !== r
                        ? ((r.childLanes = 0), (r.pendingProps = l))
                        : (r = Dc(l, o, 0, null)),
                      (e = _c(e, o, n, null)),
                      (r.return = t),
                      (e.return = t),
                      (r.sibling = e),
                      (t.child = r),
                      (t.child.memoizedState = Dr(n)),
                      (t.memoizedState = _r),
                      e)
                    : jr(t, l))
            );
          if (null !== (s = e.memoizedState) && null !== (i = s.dehydrated))
            return (function (e, t, n, i, o, s, r) {
              if (n)
                return 256 & t.flags
                  ? ((t.flags &= -257), Br(e, t, r, (i = ur(Error(a(422))))))
                  : null !== t.memoizedState
                  ? ((t.child = e.child), (t.flags |= 128), null)
                  : ((s = i.fallback),
                    (o = t.mode),
                    (i = Dc(
                      { mode: "visible", children: i.children },
                      o,
                      0,
                      null
                    )),
                    ((s = _c(s, o, r, null)).flags |= 2),
                    (i.return = t),
                    (s.return = t),
                    (i.sibling = s),
                    (t.child = i),
                    0 !== (1 & t.mode) && wa(t, e.child, null, r),
                    (t.child.memoizedState = Dr(r)),
                    (t.memoizedState = _r),
                    s);
              if (0 === (1 & t.mode)) return Br(e, t, r, null);
              if ("$!" === o.data) {
                if ((i = o.nextSibling && o.nextSibling.dataset))
                  var l = i.dgst;
                return (
                  (i = l), Br(e, t, r, (i = ur((s = Error(a(419))), i, void 0)))
                );
              }
              if (((l = 0 !== (r & e.childLanes)), xr || l)) {
                if (null !== (i = Ll)) {
                  switch (r & -r) {
                    case 4:
                      o = 2;
                      break;
                    case 16:
                      o = 8;
                      break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                      o = 32;
                      break;
                    case 536870912:
                      o = 268435456;
                      break;
                    default:
                      o = 0;
                  }
                  0 !== (o = 0 !== (o & (i.suspendedLanes | r)) ? 0 : o) &&
                    o !== s.retryLane &&
                    ((s.retryLane = o), _a(e, o), nc(i, e, o, -1));
                }
                return gc(), Br(e, t, r, (i = ur(Error(a(421)))));
              }
              return "$?" === o.data
                ? ((t.flags |= 128),
                  (t.child = e.child),
                  (t = Pc.bind(null, e)),
                  (o._reactRetry = t),
                  null)
                : ((e = s.treeContext),
                  (oa = co(o.nextSibling)),
                  (ia = t),
                  (aa = !0),
                  (sa = null),
                  null !== e &&
                    ((Ko[qo++] = Qo),
                    (Ko[qo++] = $o),
                    (Ko[qo++] = Zo),
                    (Qo = e.id),
                    ($o = e.overflow),
                    (Zo = t)),
                  (t = jr(t, i.children)),
                  (t.flags |= 4096),
                  t);
            })(e, t, l, o, i, s, n);
          if (r) {
            (r = o.fallback), (l = t.mode), (i = (s = e.child).sibling);
            var c = { mode: "hidden", children: o.children };
            return (
              0 === (1 & l) && t.child !== s
                ? (((o = t.child).childLanes = 0),
                  (o.pendingProps = c),
                  (t.deletions = null))
                : ((o = Ic(s, c)).subtreeFlags = 14680064 & s.subtreeFlags),
              null !== i
                ? (r = Ic(i, r))
                : ((r = _c(r, l, n, null)).flags |= 2),
              (r.return = t),
              (o.return = t),
              (o.sibling = r),
              (t.child = o),
              (o = r),
              (r = t.child),
              (l =
                null === (l = e.child.memoizedState)
                  ? Dr(n)
                  : {
                      baseLanes: l.baseLanes | n,
                      cachePool: null,
                      transitions: l.transitions,
                    }),
              (r.memoizedState = l),
              (r.childLanes = e.childLanes & ~n),
              (t.memoizedState = _r),
              o
            );
          }
          return (
            (e = (r = e.child).sibling),
            (o = Ic(r, { mode: "visible", children: o.children })),
            0 === (1 & t.mode) && (o.lanes = n),
            (o.return = t),
            (o.sibling = null),
            null !== e &&
              (null === (n = t.deletions)
                ? ((t.deletions = [e]), (t.flags |= 16))
                : n.push(e)),
            (t.child = o),
            (t.memoizedState = null),
            o
          );
        }
        function jr(e, t) {
          return (
            ((t = Dc(
              { mode: "visible", children: t },
              e.mode,
              0,
              null
            )).return = e),
            (e.child = t)
          );
        }
        function Br(e, t, n, i) {
          return (
            null !== i && ga(i),
            wa(t, e.child, null, n),
            ((e = jr(t, t.pendingProps.children)).flags |= 2),
            (t.memoizedState = null),
            e
          );
        }
        function Fr(e, t, n) {
          e.lanes |= t;
          var i = e.alternate;
          null !== i && (i.lanes |= t), La(e.return, t, n);
        }
        function Wr(e, t, n, i, o) {
          var a = e.memoizedState;
          null === a
            ? (e.memoizedState = {
                isBackwards: t,
                rendering: null,
                renderingStartTime: 0,
                last: i,
                tail: n,
                tailMode: o,
              })
            : ((a.isBackwards = t),
              (a.rendering = null),
              (a.renderingStartTime = 0),
              (a.last = i),
              (a.tail = n),
              (a.tailMode = o));
        }
        function Hr(e, t, n) {
          var i = t.pendingProps,
            o = i.revealOrder,
            a = i.tail;
          if ((yr(e, t, i.children, n), 0 !== (2 & (i = es.current))))
            (i = (1 & i) | 2), (t.flags |= 128);
          else {
            if (null !== e && 0 !== (128 & e.flags))
              e: for (e = t.child; null !== e; ) {
                if (13 === e.tag) null !== e.memoizedState && Fr(e, n, t);
                else if (19 === e.tag) Fr(e, n, t);
                else if (null !== e.child) {
                  (e.child.return = e), (e = e.child);
                  continue;
                }
                if (e === t) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === t) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            i &= 1;
          }
          if ((Po(es, i), 0 === (1 & t.mode))) t.memoizedState = null;
          else
            switch (o) {
              case "forwards":
                for (n = t.child, o = null; null !== n; )
                  null !== (e = n.alternate) && null === ts(e) && (o = n),
                    (n = n.sibling);
                null === (n = o)
                  ? ((o = t.child), (t.child = null))
                  : ((o = n.sibling), (n.sibling = null)),
                  Wr(t, !1, o, n, a);
                break;
              case "backwards":
                for (n = null, o = t.child, t.child = null; null !== o; ) {
                  if (null !== (e = o.alternate) && null === ts(e)) {
                    t.child = o;
                    break;
                  }
                  (e = o.sibling), (o.sibling = n), (n = o), (o = e);
                }
                Wr(t, !0, n, null, a);
                break;
              case "together":
                Wr(t, !1, null, null, void 0);
                break;
              default:
                t.memoizedState = null;
            }
          return t.child;
        }
        function Gr(e, t) {
          0 === (1 & t.mode) &&
            null !== e &&
            ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
        }
        function Vr(e, t, n) {
          if (
            (null !== e && (t.dependencies = e.dependencies),
            (Dl |= t.lanes),
            0 === (n & t.childLanes))
          )
            return null;
          if (null !== e && t.child !== e.child) throw Error(a(153));
          if (null !== t.child) {
            for (
              n = Ic((e = t.child), e.pendingProps), t.child = n, n.return = t;
              null !== e.sibling;

            )
              (e = e.sibling),
                ((n = n.sibling = Ic(e, e.pendingProps)).return = t);
            n.sibling = null;
          }
          return t.child;
        }
        function Ur(e, t) {
          if (!aa)
            switch (e.tailMode) {
              case "hidden":
                t = e.tail;
                for (var n = null; null !== t; )
                  null !== t.alternate && (n = t), (t = t.sibling);
                null === n ? (e.tail = null) : (n.sibling = null);
                break;
              case "collapsed":
                n = e.tail;
                for (var i = null; null !== n; )
                  null !== n.alternate && (i = n), (n = n.sibling);
                null === i
                  ? t || null === e.tail
                    ? (e.tail = null)
                    : (e.tail.sibling = null)
                  : (i.sibling = null);
            }
        }
        function Yr(e) {
          var t = null !== e.alternate && e.alternate.child === e.child,
            n = 0,
            i = 0;
          if (t)
            for (var o = e.child; null !== o; )
              (n |= o.lanes | o.childLanes),
                (i |= 14680064 & o.subtreeFlags),
                (i |= 14680064 & o.flags),
                (o.return = e),
                (o = o.sibling);
          else
            for (o = e.child; null !== o; )
              (n |= o.lanes | o.childLanes),
                (i |= o.subtreeFlags),
                (i |= o.flags),
                (o.return = e),
                (o = o.sibling);
          return (e.subtreeFlags |= i), (e.childLanes = n), t;
        }
        function Xr(e, t, n) {
          var i = t.pendingProps;
          switch ((na(t), t.tag)) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return Yr(t), null;
            case 1:
            case 17:
              return Io(t.type) && No(), Yr(t), null;
            case 3:
              return (
                (i = t.stateNode),
                Qa(),
                Mo(To),
                Mo(Lo),
                is(),
                i.pendingContext &&
                  ((i.context = i.pendingContext), (i.pendingContext = null)),
                (null !== e && null !== e.child) ||
                  (ha(t)
                    ? (t.flags |= 4)
                    : null === e ||
                      (e.memoizedState.isDehydrated && 0 === (256 & t.flags)) ||
                      ((t.flags |= 1024),
                      null !== sa && (sc(sa), (sa = null)))),
                Rr(e, t),
                Yr(t),
                null
              );
            case 5:
              Ja(t);
              var o = qa(Ka.current);
              if (((n = t.type), null !== e && null != t.stateNode))
                Ir(e, t, n, i, o),
                  e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              else {
                if (!i) {
                  if (null === t.stateNode) throw Error(a(166));
                  return Yr(t), null;
                }
                if (((e = qa(Ya.current)), ha(t))) {
                  (i = t.stateNode), (n = t.type);
                  var s = t.memoizedProps;
                  switch (
                    ((i[po] = t), (i[fo] = s), (e = 0 !== (1 & t.mode)), n)
                  ) {
                    case "dialog":
                      Bi("cancel", i), Bi("close", i);
                      break;
                    case "iframe":
                    case "object":
                    case "embed":
                      Bi("load", i);
                      break;
                    case "video":
                    case "audio":
                      for (o = 0; o < _i.length; o++) Bi(_i[o], i);
                      break;
                    case "source":
                      Bi("error", i);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      Bi("error", i), Bi("load", i);
                      break;
                    case "details":
                      Bi("toggle", i);
                      break;
                    case "input":
                      Z(i, s), Bi("invalid", i);
                      break;
                    case "select":
                      (i._wrapperState = { wasMultiple: !!s.multiple }),
                        Bi("invalid", i);
                      break;
                    case "textarea":
                      oe(i, s), Bi("invalid", i);
                  }
                  for (var l in (be(n, s), (o = null), s))
                    if (s.hasOwnProperty(l)) {
                      var c = s[l];
                      "children" === l
                        ? "string" === typeof c
                          ? i.textContent !== c &&
                            (!0 !== s.suppressHydrationWarning &&
                              $i(i.textContent, c, e),
                            (o = ["children", c]))
                          : "number" === typeof c &&
                            i.textContent !== "" + c &&
                            (!0 !== s.suppressHydrationWarning &&
                              $i(i.textContent, c, e),
                            (o = ["children", "" + c]))
                        : r.hasOwnProperty(l) &&
                          null != c &&
                          "onScroll" === l &&
                          Bi("scroll", i);
                    }
                  switch (n) {
                    case "input":
                      Y(i), J(i, s, !0);
                      break;
                    case "textarea":
                      Y(i), se(i);
                      break;
                    case "select":
                    case "option":
                      break;
                    default:
                      "function" === typeof s.onClick && (i.onclick = Ji);
                  }
                  (i = o), (t.updateQueue = i), null !== i && (t.flags |= 4);
                } else {
                  (l = 9 === o.nodeType ? o : o.ownerDocument),
                    "http://www.w3.org/1999/xhtml" === e && (e = re(n)),
                    "http://www.w3.org/1999/xhtml" === e
                      ? "script" === n
                        ? (((e = l.createElement("div")).innerHTML =
                            "<script></script>"),
                          (e = e.removeChild(e.firstChild)))
                        : "string" === typeof i.is
                        ? (e = l.createElement(n, { is: i.is }))
                        : ((e = l.createElement(n)),
                          "select" === n &&
                            ((l = e),
                            i.multiple
                              ? (l.multiple = !0)
                              : i.size && (l.size = i.size)))
                      : (e = l.createElementNS(e, n)),
                    (e[po] = t),
                    (e[fo] = i),
                    Or(e, t, !1, !1),
                    (t.stateNode = e);
                  e: {
                    switch (((l = xe(n, i)), n)) {
                      case "dialog":
                        Bi("cancel", e), Bi("close", e), (o = i);
                        break;
                      case "iframe":
                      case "object":
                      case "embed":
                        Bi("load", e), (o = i);
                        break;
                      case "video":
                      case "audio":
                        for (o = 0; o < _i.length; o++) Bi(_i[o], e);
                        o = i;
                        break;
                      case "source":
                        Bi("error", e), (o = i);
                        break;
                      case "img":
                      case "image":
                      case "link":
                        Bi("error", e), Bi("load", e), (o = i);
                        break;
                      case "details":
                        Bi("toggle", e), (o = i);
                        break;
                      case "input":
                        Z(e, i), (o = q(e, i)), Bi("invalid", e);
                        break;
                      case "option":
                      default:
                        o = i;
                        break;
                      case "select":
                        (e._wrapperState = { wasMultiple: !!i.multiple }),
                          (o = z({}, i, { value: void 0 })),
                          Bi("invalid", e);
                        break;
                      case "textarea":
                        oe(e, i), (o = ie(e, i)), Bi("invalid", e);
                    }
                    for (s in (be(n, o), (c = o)))
                      if (c.hasOwnProperty(s)) {
                        var u = c[s];
                        "style" === s
                          ? me(e, u)
                          : "dangerouslySetInnerHTML" === s
                          ? null != (u = u ? u.__html : void 0) && de(e, u)
                          : "children" === s
                          ? "string" === typeof u
                            ? ("textarea" !== n || "" !== u) && he(e, u)
                            : "number" === typeof u && he(e, "" + u)
                          : "suppressContentEditableWarning" !== s &&
                            "suppressHydrationWarning" !== s &&
                            "autoFocus" !== s &&
                            (r.hasOwnProperty(s)
                              ? null != u && "onScroll" === s && Bi("scroll", e)
                              : null != u && x(e, s, u, l));
                      }
                    switch (n) {
                      case "input":
                        Y(e), J(e, i, !1);
                        break;
                      case "textarea":
                        Y(e), se(e);
                        break;
                      case "option":
                        null != i.value &&
                          e.setAttribute("value", "" + V(i.value));
                        break;
                      case "select":
                        (e.multiple = !!i.multiple),
                          null != (s = i.value)
                            ? ne(e, !!i.multiple, s, !1)
                            : null != i.defaultValue &&
                              ne(e, !!i.multiple, i.defaultValue, !0);
                        break;
                      default:
                        "function" === typeof o.onClick && (e.onclick = Ji);
                    }
                    switch (n) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        i = !!i.autoFocus;
                        break e;
                      case "img":
                        i = !0;
                        break e;
                      default:
                        i = !1;
                    }
                  }
                  i && (t.flags |= 4);
                }
                null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              }
              return Yr(t), null;
            case 6:
              if (e && null != t.stateNode) Nr(e, t, e.memoizedProps, i);
              else {
                if ("string" !== typeof i && null === t.stateNode)
                  throw Error(a(166));
                if (((n = qa(Ka.current)), qa(Ya.current), ha(t))) {
                  if (
                    ((i = t.stateNode),
                    (n = t.memoizedProps),
                    (i[po] = t),
                    (s = i.nodeValue !== n) && null !== (e = ia))
                  )
                    switch (e.tag) {
                      case 3:
                        $i(i.nodeValue, n, 0 !== (1 & e.mode));
                        break;
                      case 5:
                        !0 !== e.memoizedProps.suppressHydrationWarning &&
                          $i(i.nodeValue, n, 0 !== (1 & e.mode));
                    }
                  s && (t.flags |= 4);
                } else
                  ((i = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(
                    i
                  ))[po] = t),
                    (t.stateNode = i);
              }
              return Yr(t), null;
            case 13:
              if (
                (Mo(es),
                (i = t.memoizedState),
                null === e ||
                  (null !== e.memoizedState &&
                    null !== e.memoizedState.dehydrated))
              ) {
                if (
                  aa &&
                  null !== oa &&
                  0 !== (1 & t.mode) &&
                  0 === (128 & t.flags)
                )
                  pa(), fa(), (t.flags |= 98560), (s = !1);
                else if (((s = ha(t)), null !== i && null !== i.dehydrated)) {
                  if (null === e) {
                    if (!s) throw Error(a(318));
                    if (
                      !(s =
                        null !== (s = t.memoizedState) ? s.dehydrated : null)
                    )
                      throw Error(a(317));
                    s[po] = t;
                  } else
                    fa(),
                      0 === (128 & t.flags) && (t.memoizedState = null),
                      (t.flags |= 4);
                  Yr(t), (s = !1);
                } else null !== sa && (sc(sa), (sa = null)), (s = !0);
                if (!s) return 65536 & t.flags ? t : null;
              }
              return 0 !== (128 & t.flags)
                ? ((t.lanes = n), t)
                : ((i = null !== i) !==
                    (null !== e && null !== e.memoizedState) &&
                    i &&
                    ((t.child.flags |= 8192),
                    0 !== (1 & t.mode) &&
                      (null === e || 0 !== (1 & es.current)
                        ? 0 === Nl && (Nl = 3)
                        : gc())),
                  null !== t.updateQueue && (t.flags |= 4),
                  Yr(t),
                  null);
            case 4:
              return (
                Qa(),
                Rr(e, t),
                null === e && Hi(t.stateNode.containerInfo),
                Yr(t),
                null
              );
            case 10:
              return Ea(t.type._context), Yr(t), null;
            case 19:
              if ((Mo(es), null === (s = t.memoizedState))) return Yr(t), null;
              if (((i = 0 !== (128 & t.flags)), null === (l = s.rendering)))
                if (i) Ur(s, !1);
                else {
                  if (0 !== Nl || (null !== e && 0 !== (128 & e.flags)))
                    for (e = t.child; null !== e; ) {
                      if (null !== (l = ts(e))) {
                        for (
                          t.flags |= 128,
                            Ur(s, !1),
                            null !== (i = l.updateQueue) &&
                              ((t.updateQueue = i), (t.flags |= 4)),
                            t.subtreeFlags = 0,
                            i = n,
                            n = t.child;
                          null !== n;

                        )
                          (e = i),
                            ((s = n).flags &= 14680066),
                            null === (l = s.alternate)
                              ? ((s.childLanes = 0),
                                (s.lanes = e),
                                (s.child = null),
                                (s.subtreeFlags = 0),
                                (s.memoizedProps = null),
                                (s.memoizedState = null),
                                (s.updateQueue = null),
                                (s.dependencies = null),
                                (s.stateNode = null))
                              : ((s.childLanes = l.childLanes),
                                (s.lanes = l.lanes),
                                (s.child = l.child),
                                (s.subtreeFlags = 0),
                                (s.deletions = null),
                                (s.memoizedProps = l.memoizedProps),
                                (s.memoizedState = l.memoizedState),
                                (s.updateQueue = l.updateQueue),
                                (s.type = l.type),
                                (e = l.dependencies),
                                (s.dependencies =
                                  null === e
                                    ? null
                                    : {
                                        lanes: e.lanes,
                                        firstContext: e.firstContext,
                                      })),
                            (n = n.sibling);
                        return Po(es, (1 & es.current) | 2), t.child;
                      }
                      e = e.sibling;
                    }
                  null !== s.tail &&
                    Qe() > Hl &&
                    ((t.flags |= 128),
                    (i = !0),
                    Ur(s, !1),
                    (t.lanes = 4194304));
                }
              else {
                if (!i)
                  if (null !== (e = ts(l))) {
                    if (
                      ((t.flags |= 128),
                      (i = !0),
                      null !== (n = e.updateQueue) &&
                        ((t.updateQueue = n), (t.flags |= 4)),
                      Ur(s, !0),
                      null === s.tail &&
                        "hidden" === s.tailMode &&
                        !l.alternate &&
                        !aa)
                    )
                      return Yr(t), null;
                  } else
                    2 * Qe() - s.renderingStartTime > Hl &&
                      1073741824 !== n &&
                      ((t.flags |= 128),
                      (i = !0),
                      Ur(s, !1),
                      (t.lanes = 4194304));
                s.isBackwards
                  ? ((l.sibling = t.child), (t.child = l))
                  : (null !== (n = s.last) ? (n.sibling = l) : (t.child = l),
                    (s.last = l));
              }
              return null !== s.tail
                ? ((t = s.tail),
                  (s.rendering = t),
                  (s.tail = t.sibling),
                  (s.renderingStartTime = Qe()),
                  (t.sibling = null),
                  (n = es.current),
                  Po(es, i ? (1 & n) | 2 : 1 & n),
                  t)
                : (Yr(t), null);
            case 22:
            case 23:
              return (
                dc(),
                (i = null !== t.memoizedState),
                null !== e &&
                  (null !== e.memoizedState) !== i &&
                  (t.flags |= 8192),
                i && 0 !== (1 & t.mode)
                  ? 0 !== (1073741824 & Rl) &&
                    (Yr(t), 6 & t.subtreeFlags && (t.flags |= 8192))
                  : Yr(t),
                null
              );
            case 24:
            case 25:
              return null;
          }
          throw Error(a(156, t.tag));
        }
        function Kr(e, t) {
          switch ((na(t), t.tag)) {
            case 1:
              return (
                Io(t.type) && No(),
                65536 & (e = t.flags)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 3:
              return (
                Qa(),
                Mo(To),
                Mo(Lo),
                is(),
                0 !== (65536 & (e = t.flags)) && 0 === (128 & e)
                  ? ((t.flags = (-65537 & e) | 128), t)
                  : null
              );
            case 5:
              return Ja(t), null;
            case 13:
              if (
                (Mo(es),
                null !== (e = t.memoizedState) && null !== e.dehydrated)
              ) {
                if (null === t.alternate) throw Error(a(340));
                fa();
              }
              return 65536 & (e = t.flags)
                ? ((t.flags = (-65537 & e) | 128), t)
                : null;
            case 19:
              return Mo(es), null;
            case 4:
              return Qa(), null;
            case 10:
              return Ea(t.type._context), null;
            case 22:
            case 23:
              return dc(), null;
            default:
              return null;
          }
        }
        (Or = function (e, t) {
          for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === t) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === t) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }),
          (Rr = function () {}),
          (Ir = function (e, t, n, i) {
            var o = e.memoizedProps;
            if (o !== i) {
              (e = t.stateNode), qa(Ya.current);
              var a,
                s = null;
              switch (n) {
                case "input":
                  (o = q(e, o)), (i = q(e, i)), (s = []);
                  break;
                case "select":
                  (o = z({}, o, { value: void 0 })),
                    (i = z({}, i, { value: void 0 })),
                    (s = []);
                  break;
                case "textarea":
                  (o = ie(e, o)), (i = ie(e, i)), (s = []);
                  break;
                default:
                  "function" !== typeof o.onClick &&
                    "function" === typeof i.onClick &&
                    (e.onclick = Ji);
              }
              for (u in (be(n, i), (n = null), o))
                if (!i.hasOwnProperty(u) && o.hasOwnProperty(u) && null != o[u])
                  if ("style" === u) {
                    var l = o[u];
                    for (a in l)
                      l.hasOwnProperty(a) && (n || (n = {}), (n[a] = ""));
                  } else
                    "dangerouslySetInnerHTML" !== u &&
                      "children" !== u &&
                      "suppressContentEditableWarning" !== u &&
                      "suppressHydrationWarning" !== u &&
                      "autoFocus" !== u &&
                      (r.hasOwnProperty(u)
                        ? s || (s = [])
                        : (s = s || []).push(u, null));
              for (u in i) {
                var c = i[u];
                if (
                  ((l = null != o ? o[u] : void 0),
                  i.hasOwnProperty(u) && c !== l && (null != c || null != l))
                )
                  if ("style" === u)
                    if (l) {
                      for (a in l)
                        !l.hasOwnProperty(a) ||
                          (c && c.hasOwnProperty(a)) ||
                          (n || (n = {}), (n[a] = ""));
                      for (a in c)
                        c.hasOwnProperty(a) &&
                          l[a] !== c[a] &&
                          (n || (n = {}), (n[a] = c[a]));
                    } else n || (s || (s = []), s.push(u, n)), (n = c);
                  else
                    "dangerouslySetInnerHTML" === u
                      ? ((c = c ? c.__html : void 0),
                        (l = l ? l.__html : void 0),
                        null != c && l !== c && (s = s || []).push(u, c))
                      : "children" === u
                      ? ("string" !== typeof c && "number" !== typeof c) ||
                        (s = s || []).push(u, "" + c)
                      : "suppressContentEditableWarning" !== u &&
                        "suppressHydrationWarning" !== u &&
                        (r.hasOwnProperty(u)
                          ? (null != c && "onScroll" === u && Bi("scroll", e),
                            s || l === c || (s = []))
                          : (s = s || []).push(u, c));
              }
              n && (s = s || []).push("style", n);
              var u = s;
              (t.updateQueue = u) && (t.flags |= 4);
            }
          }),
          (Nr = function (e, t, n, i) {
            n !== i && (t.flags |= 4);
          });
        var qr = !1,
          Zr = !1,
          Qr = "function" === typeof WeakSet ? WeakSet : Set,
          $r = null;
        function Jr(e, t) {
          var n = e.ref;
          if (null !== n)
            if ("function" === typeof n)
              try {
                n(null);
              } catch (i) {
                Ac(e, t, i);
              }
            else n.current = null;
        }
        function el(e, t, n) {
          try {
            n();
          } catch (i) {
            Ac(e, t, i);
          }
        }
        var tl = !1;
        function nl(e, t, n) {
          var i = t.updateQueue;
          if (null !== (i = null !== i ? i.lastEffect : null)) {
            var o = (i = i.next);
            do {
              if ((o.tag & e) === e) {
                var a = o.destroy;
                (o.destroy = void 0), void 0 !== a && el(t, n, a);
              }
              o = o.next;
            } while (o !== i);
          }
        }
        function il(e, t) {
          if (
            null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)
          ) {
            var n = (t = t.next);
            do {
              if ((n.tag & e) === e) {
                var i = n.create;
                n.destroy = i();
              }
              n = n.next;
            } while (n !== t);
          }
        }
        function ol(e) {
          var t = e.ref;
          if (null !== t) {
            var n = e.stateNode;
            e.tag, (e = n), "function" === typeof t ? t(e) : (t.current = e);
          }
        }
        function al(e) {
          var t = e.alternate;
          null !== t && ((e.alternate = null), al(t)),
            (e.child = null),
            (e.deletions = null),
            (e.sibling = null),
            5 === e.tag &&
              null !== (t = e.stateNode) &&
              (delete t[po],
              delete t[fo],
              delete t[mo],
              delete t[vo],
              delete t[bo]),
            (e.stateNode = null),
            (e.return = null),
            (e.dependencies = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.stateNode = null),
            (e.updateQueue = null);
        }
        function sl(e) {
          return 5 === e.tag || 3 === e.tag || 4 === e.tag;
        }
        function rl(e) {
          e: for (;;) {
            for (; null === e.sibling; ) {
              if (null === e.return || sl(e.return)) return null;
              e = e.return;
            }
            for (
              e.sibling.return = e.return, e = e.sibling;
              5 !== e.tag && 6 !== e.tag && 18 !== e.tag;

            ) {
              if (2 & e.flags) continue e;
              if (null === e.child || 4 === e.tag) continue e;
              (e.child.return = e), (e = e.child);
            }
            if (!(2 & e.flags)) return e.stateNode;
          }
        }
        function ll(e, t, n) {
          var i = e.tag;
          if (5 === i || 6 === i)
            (e = e.stateNode),
              t
                ? 8 === n.nodeType
                  ? n.parentNode.insertBefore(e, t)
                  : n.insertBefore(e, t)
                : (8 === n.nodeType
                    ? (t = n.parentNode).insertBefore(e, n)
                    : (t = n).appendChild(e),
                  (null !== (n = n._reactRootContainer) && void 0 !== n) ||
                    null !== t.onclick ||
                    (t.onclick = Ji));
          else if (4 !== i && null !== (e = e.child))
            for (ll(e, t, n), e = e.sibling; null !== e; )
              ll(e, t, n), (e = e.sibling);
        }
        function cl(e, t, n) {
          var i = e.tag;
          if (5 === i || 6 === i)
            (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
          else if (4 !== i && null !== (e = e.child))
            for (cl(e, t, n), e = e.sibling; null !== e; )
              cl(e, t, n), (e = e.sibling);
        }
        var ul = null,
          dl = !1;
        function hl(e, t, n) {
          for (n = n.child; null !== n; ) pl(e, t, n), (n = n.sibling);
        }
        function pl(e, t, n) {
          if (at && "function" === typeof at.onCommitFiberUnmount)
            try {
              at.onCommitFiberUnmount(ot, n);
            } catch (r) {}
          switch (n.tag) {
            case 5:
              Zr || Jr(n, t);
            case 6:
              var i = ul,
                o = dl;
              (ul = null),
                hl(e, t, n),
                (dl = o),
                null !== (ul = i) &&
                  (dl
                    ? ((e = ul),
                      (n = n.stateNode),
                      8 === e.nodeType
                        ? e.parentNode.removeChild(n)
                        : e.removeChild(n))
                    : ul.removeChild(n.stateNode));
              break;
            case 18:
              null !== ul &&
                (dl
                  ? ((e = ul),
                    (n = n.stateNode),
                    8 === e.nodeType
                      ? lo(e.parentNode, n)
                      : 1 === e.nodeType && lo(e, n),
                    Ht(e))
                  : lo(ul, n.stateNode));
              break;
            case 4:
              (i = ul),
                (o = dl),
                (ul = n.stateNode.containerInfo),
                (dl = !0),
                hl(e, t, n),
                (ul = i),
                (dl = o);
              break;
            case 0:
            case 11:
            case 14:
            case 15:
              if (
                !Zr &&
                null !== (i = n.updateQueue) &&
                null !== (i = i.lastEffect)
              ) {
                o = i = i.next;
                do {
                  var a = o,
                    s = a.destroy;
                  (a = a.tag),
                    void 0 !== s &&
                      (0 !== (2 & a) || 0 !== (4 & a)) &&
                      el(n, t, s),
                    (o = o.next);
                } while (o !== i);
              }
              hl(e, t, n);
              break;
            case 1:
              if (
                !Zr &&
                (Jr(n, t),
                "function" === typeof (i = n.stateNode).componentWillUnmount)
              )
                try {
                  (i.props = n.memoizedProps),
                    (i.state = n.memoizedState),
                    i.componentWillUnmount();
                } catch (r) {
                  Ac(n, t, r);
                }
              hl(e, t, n);
              break;
            case 21:
              hl(e, t, n);
              break;
            case 22:
              1 & n.mode
                ? ((Zr = (i = Zr) || null !== n.memoizedState),
                  hl(e, t, n),
                  (Zr = i))
                : hl(e, t, n);
              break;
            default:
              hl(e, t, n);
          }
        }
        function fl(e) {
          var t = e.updateQueue;
          if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new Qr()),
              t.forEach(function (t) {
                var i = Ec.bind(null, e, t);
                n.has(t) || (n.add(t), t.then(i, i));
              });
          }
        }
        function gl(e, t) {
          var n = t.deletions;
          if (null !== n)
            for (var i = 0; i < n.length; i++) {
              var o = n[i];
              try {
                var s = e,
                  r = t,
                  l = r;
                e: for (; null !== l; ) {
                  switch (l.tag) {
                    case 5:
                      (ul = l.stateNode), (dl = !1);
                      break e;
                    case 3:
                    case 4:
                      (ul = l.stateNode.containerInfo), (dl = !0);
                      break e;
                  }
                  l = l.return;
                }
                if (null === ul) throw Error(a(160));
                pl(s, r, o), (ul = null), (dl = !1);
                var c = o.alternate;
                null !== c && (c.return = null), (o.return = null);
              } catch (u) {
                Ac(o, t, u);
              }
            }
          if (12854 & t.subtreeFlags)
            for (t = t.child; null !== t; ) ml(t, e), (t = t.sibling);
        }
        function ml(e, t) {
          var n = e.alternate,
            i = e.flags;
          switch (e.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              if ((gl(t, e), vl(e), 4 & i)) {
                try {
                  nl(3, e, e.return), il(3, e);
                } catch (m) {
                  Ac(e, e.return, m);
                }
                try {
                  nl(5, e, e.return);
                } catch (m) {
                  Ac(e, e.return, m);
                }
              }
              break;
            case 1:
              gl(t, e), vl(e), 512 & i && null !== n && Jr(n, n.return);
              break;
            case 5:
              if (
                (gl(t, e),
                vl(e),
                512 & i && null !== n && Jr(n, n.return),
                32 & e.flags)
              ) {
                var o = e.stateNode;
                try {
                  he(o, "");
                } catch (m) {
                  Ac(e, e.return, m);
                }
              }
              if (4 & i && null != (o = e.stateNode)) {
                var s = e.memoizedProps,
                  r = null !== n ? n.memoizedProps : s,
                  l = e.type,
                  c = e.updateQueue;
                if (((e.updateQueue = null), null !== c))
                  try {
                    "input" === l &&
                      "radio" === s.type &&
                      null != s.name &&
                      Q(o, s),
                      xe(l, r);
                    var u = xe(l, s);
                    for (r = 0; r < c.length; r += 2) {
                      var d = c[r],
                        h = c[r + 1];
                      "style" === d
                        ? me(o, h)
                        : "dangerouslySetInnerHTML" === d
                        ? de(o, h)
                        : "children" === d
                        ? he(o, h)
                        : x(o, d, h, u);
                    }
                    switch (l) {
                      case "input":
                        $(o, s);
                        break;
                      case "textarea":
                        ae(o, s);
                        break;
                      case "select":
                        var p = o._wrapperState.wasMultiple;
                        o._wrapperState.wasMultiple = !!s.multiple;
                        var f = s.value;
                        null != f
                          ? ne(o, !!s.multiple, f, !1)
                          : p !== !!s.multiple &&
                            (null != s.defaultValue
                              ? ne(o, !!s.multiple, s.defaultValue, !0)
                              : ne(o, !!s.multiple, s.multiple ? [] : "", !1));
                    }
                    o[fo] = s;
                  } catch (m) {
                    Ac(e, e.return, m);
                  }
              }
              break;
            case 6:
              if ((gl(t, e), vl(e), 4 & i)) {
                if (null === e.stateNode) throw Error(a(162));
                (o = e.stateNode), (s = e.memoizedProps);
                try {
                  o.nodeValue = s;
                } catch (m) {
                  Ac(e, e.return, m);
                }
              }
              break;
            case 3:
              if (
                (gl(t, e),
                vl(e),
                4 & i && null !== n && n.memoizedState.isDehydrated)
              )
                try {
                  Ht(t.containerInfo);
                } catch (m) {
                  Ac(e, e.return, m);
                }
              break;
            case 4:
            default:
              gl(t, e), vl(e);
              break;
            case 13:
              gl(t, e),
                vl(e),
                8192 & (o = e.child).flags &&
                  ((s = null !== o.memoizedState),
                  (o.stateNode.isHidden = s),
                  !s ||
                    (null !== o.alternate &&
                      null !== o.alternate.memoizedState) ||
                    (Wl = Qe())),
                4 & i && fl(e);
              break;
            case 22:
              if (
                ((d = null !== n && null !== n.memoizedState),
                1 & e.mode
                  ? ((Zr = (u = Zr) || d), gl(t, e), (Zr = u))
                  : gl(t, e),
                vl(e),
                8192 & i)
              ) {
                if (
                  ((u = null !== e.memoizedState),
                  (e.stateNode.isHidden = u) && !d && 0 !== (1 & e.mode))
                )
                  for ($r = e, d = e.child; null !== d; ) {
                    for (h = $r = d; null !== $r; ) {
                      switch (((f = (p = $r).child), p.tag)) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                          nl(4, p, p.return);
                          break;
                        case 1:
                          Jr(p, p.return);
                          var g = p.stateNode;
                          if ("function" === typeof g.componentWillUnmount) {
                            (i = p), (n = p.return);
                            try {
                              (t = i),
                                (g.props = t.memoizedProps),
                                (g.state = t.memoizedState),
                                g.componentWillUnmount();
                            } catch (m) {
                              Ac(i, n, m);
                            }
                          }
                          break;
                        case 5:
                          Jr(p, p.return);
                          break;
                        case 22:
                          if (null !== p.memoizedState) {
                            wl(h);
                            continue;
                          }
                      }
                      null !== f ? ((f.return = p), ($r = f)) : wl(h);
                    }
                    d = d.sibling;
                  }
                e: for (d = null, h = e; ; ) {
                  if (5 === h.tag) {
                    if (null === d) {
                      d = h;
                      try {
                        (o = h.stateNode),
                          u
                            ? "function" === typeof (s = o.style).setProperty
                              ? s.setProperty("display", "none", "important")
                              : (s.display = "none")
                            : ((l = h.stateNode),
                              (r =
                                void 0 !== (c = h.memoizedProps.style) &&
                                null !== c &&
                                c.hasOwnProperty("display")
                                  ? c.display
                                  : null),
                              (l.style.display = ge("display", r)));
                      } catch (m) {
                        Ac(e, e.return, m);
                      }
                    }
                  } else if (6 === h.tag) {
                    if (null === d)
                      try {
                        h.stateNode.nodeValue = u ? "" : h.memoizedProps;
                      } catch (m) {
                        Ac(e, e.return, m);
                      }
                  } else if (
                    ((22 !== h.tag && 23 !== h.tag) ||
                      null === h.memoizedState ||
                      h === e) &&
                    null !== h.child
                  ) {
                    (h.child.return = h), (h = h.child);
                    continue;
                  }
                  if (h === e) break e;
                  for (; null === h.sibling; ) {
                    if (null === h.return || h.return === e) break e;
                    d === h && (d = null), (h = h.return);
                  }
                  d === h && (d = null),
                    (h.sibling.return = h.return),
                    (h = h.sibling);
                }
              }
              break;
            case 19:
              gl(t, e), vl(e), 4 & i && fl(e);
            case 21:
          }
        }
        function vl(e) {
          var t = e.flags;
          if (2 & t) {
            try {
              e: {
                for (var n = e.return; null !== n; ) {
                  if (sl(n)) {
                    var i = n;
                    break e;
                  }
                  n = n.return;
                }
                throw Error(a(160));
              }
              switch (i.tag) {
                case 5:
                  var o = i.stateNode;
                  32 & i.flags && (he(o, ""), (i.flags &= -33)),
                    cl(e, rl(e), o);
                  break;
                case 3:
                case 4:
                  var s = i.stateNode.containerInfo;
                  ll(e, rl(e), s);
                  break;
                default:
                  throw Error(a(161));
              }
            } catch (r) {
              Ac(e, e.return, r);
            }
            e.flags &= -3;
          }
          4096 & t && (e.flags &= -4097);
        }
        function bl(e, t, n) {
          ($r = e), xl(e, t, n);
        }
        function xl(e, t, n) {
          for (var i = 0 !== (1 & e.mode); null !== $r; ) {
            var o = $r,
              a = o.child;
            if (22 === o.tag && i) {
              var s = null !== o.memoizedState || qr;
              if (!s) {
                var r = o.alternate,
                  l = (null !== r && null !== r.memoizedState) || Zr;
                r = qr;
                var c = Zr;
                if (((qr = s), (Zr = l) && !c))
                  for ($r = o; null !== $r; )
                    (l = (s = $r).child),
                      22 === s.tag && null !== s.memoizedState
                        ? Sl(o)
                        : null !== l
                        ? ((l.return = s), ($r = l))
                        : Sl(o);
                for (; null !== a; ) ($r = a), xl(a, t, n), (a = a.sibling);
                ($r = o), (qr = r), (Zr = c);
              }
              yl(e);
            } else
              0 !== (8772 & o.subtreeFlags) && null !== a
                ? ((a.return = o), ($r = a))
                : yl(e);
          }
        }
        function yl(e) {
          for (; null !== $r; ) {
            var t = $r;
            if (0 !== (8772 & t.flags)) {
              var n = t.alternate;
              try {
                if (0 !== (8772 & t.flags))
                  switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Zr || il(5, t);
                      break;
                    case 1:
                      var i = t.stateNode;
                      if (4 & t.flags && !Zr)
                        if (null === n) i.componentDidMount();
                        else {
                          var o =
                            t.elementType === t.type
                              ? n.memoizedProps
                              : nr(t.type, n.memoizedProps);
                          i.componentDidUpdate(
                            o,
                            n.memoizedState,
                            i.__reactInternalSnapshotBeforeUpdate
                          );
                        }
                      var s = t.updateQueue;
                      null !== s && Va(t, s, i);
                      break;
                    case 3:
                      var r = t.updateQueue;
                      if (null !== r) {
                        if (((n = null), null !== t.child))
                          switch (t.child.tag) {
                            case 5:
                            case 1:
                              n = t.child.stateNode;
                          }
                        Va(t, r, n);
                      }
                      break;
                    case 5:
                      var l = t.stateNode;
                      if (null === n && 4 & t.flags) {
                        n = l;
                        var c = t.memoizedProps;
                        switch (t.type) {
                          case "button":
                          case "input":
                          case "select":
                          case "textarea":
                            c.autoFocus && n.focus();
                            break;
                          case "img":
                            c.src && (n.src = c.src);
                        }
                      }
                      break;
                    case 6:
                    case 4:
                    case 12:
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                      break;
                    case 13:
                      if (null === t.memoizedState) {
                        var u = t.alternate;
                        if (null !== u) {
                          var d = u.memoizedState;
                          if (null !== d) {
                            var h = d.dehydrated;
                            null !== h && Ht(h);
                          }
                        }
                      }
                      break;
                    default:
                      throw Error(a(163));
                  }
                Zr || (512 & t.flags && ol(t));
              } catch (p) {
                Ac(t, t.return, p);
              }
            }
            if (t === e) {
              $r = null;
              break;
            }
            if (null !== (n = t.sibling)) {
              (n.return = t.return), ($r = n);
              break;
            }
            $r = t.return;
          }
        }
        function wl(e) {
          for (; null !== $r; ) {
            var t = $r;
            if (t === e) {
              $r = null;
              break;
            }
            var n = t.sibling;
            if (null !== n) {
              (n.return = t.return), ($r = n);
              break;
            }
            $r = t.return;
          }
        }
        function Sl(e) {
          for (; null !== $r; ) {
            var t = $r;
            try {
              switch (t.tag) {
                case 0:
                case 11:
                case 15:
                  var n = t.return;
                  try {
                    il(4, t);
                  } catch (l) {
                    Ac(t, n, l);
                  }
                  break;
                case 1:
                  var i = t.stateNode;
                  if ("function" === typeof i.componentDidMount) {
                    var o = t.return;
                    try {
                      i.componentDidMount();
                    } catch (l) {
                      Ac(t, o, l);
                    }
                  }
                  var a = t.return;
                  try {
                    ol(t);
                  } catch (l) {
                    Ac(t, a, l);
                  }
                  break;
                case 5:
                  var s = t.return;
                  try {
                    ol(t);
                  } catch (l) {
                    Ac(t, s, l);
                  }
              }
            } catch (l) {
              Ac(t, t.return, l);
            }
            if (t === e) {
              $r = null;
              break;
            }
            var r = t.sibling;
            if (null !== r) {
              (r.return = t.return), ($r = r);
              break;
            }
            $r = t.return;
          }
        }
        var kl,
          Al = Math.ceil,
          Cl = y.ReactCurrentDispatcher,
          Ml = y.ReactCurrentOwner,
          Pl = y.ReactCurrentBatchConfig,
          El = 0,
          Ll = null,
          Tl = null,
          Ol = 0,
          Rl = 0,
          Il = Co(0),
          Nl = 0,
          _l = null,
          Dl = 0,
          zl = 0,
          jl = 0,
          Bl = null,
          Fl = null,
          Wl = 0,
          Hl = 1 / 0,
          Gl = null,
          Vl = !1,
          Ul = null,
          Yl = null,
          Xl = !1,
          Kl = null,
          ql = 0,
          Zl = 0,
          Ql = null,
          $l = -1,
          Jl = 0;
        function ec() {
          return 0 !== (6 & El) ? Qe() : -1 !== $l ? $l : ($l = Qe());
        }
        function tc(e) {
          return 0 === (1 & e.mode)
            ? 1
            : 0 !== (2 & El) && 0 !== Ol
            ? Ol & -Ol
            : null !== ma.transition
            ? (0 === Jl && (Jl = gt()), Jl)
            : 0 !== (e = xt)
            ? e
            : (e = void 0 === (e = window.event) ? 16 : Zt(e.type));
        }
        function nc(e, t, n, i) {
          if (50 < Zl) throw ((Zl = 0), (Ql = null), Error(a(185)));
          vt(e, n, i),
            (0 !== (2 & El) && e === Ll) ||
              (e === Ll && (0 === (2 & El) && (zl |= n), 4 === Nl && rc(e, Ol)),
              ic(e, i),
              1 === n &&
                0 === El &&
                0 === (1 & t.mode) &&
                ((Hl = Qe() + 500), Fo && Go()));
        }
        function ic(e, t) {
          var n = e.callbackNode;
          !(function (e, t) {
            for (
              var n = e.suspendedLanes,
                i = e.pingedLanes,
                o = e.expirationTimes,
                a = e.pendingLanes;
              0 < a;

            ) {
              var s = 31 - st(a),
                r = 1 << s,
                l = o[s];
              -1 === l
                ? (0 !== (r & n) && 0 === (r & i)) || (o[s] = pt(r, t))
                : l <= t && (e.expiredLanes |= r),
                (a &= ~r);
            }
          })(e, t);
          var i = ht(e, e === Ll ? Ol : 0);
          if (0 === i)
            null !== n && Ke(n),
              (e.callbackNode = null),
              (e.callbackPriority = 0);
          else if (((t = i & -i), e.callbackPriority !== t)) {
            if ((null != n && Ke(n), 1 === t))
              0 === e.tag
                ? (function (e) {
                    (Fo = !0), Ho(e);
                  })(lc.bind(null, e))
                : Ho(lc.bind(null, e)),
                so(function () {
                  0 === (6 & El) && Go();
                }),
                (n = null);
            else {
              switch (yt(i)) {
                case 1:
                  n = Je;
                  break;
                case 4:
                  n = et;
                  break;
                case 16:
                default:
                  n = tt;
                  break;
                case 536870912:
                  n = it;
              }
              n = Lc(n, oc.bind(null, e));
            }
            (e.callbackPriority = t), (e.callbackNode = n);
          }
        }
        function oc(e, t) {
          if ((($l = -1), (Jl = 0), 0 !== (6 & El))) throw Error(a(327));
          var n = e.callbackNode;
          if (Sc() && e.callbackNode !== n) return null;
          var i = ht(e, e === Ll ? Ol : 0);
          if (0 === i) return null;
          if (0 !== (30 & i) || 0 !== (i & e.expiredLanes) || t) t = mc(e, i);
          else {
            t = i;
            var o = El;
            El |= 2;
            var s = fc();
            for (
              (Ll === e && Ol === t) ||
              ((Gl = null), (Hl = Qe() + 500), hc(e, t));
              ;

            )
              try {
                bc();
                break;
              } catch (l) {
                pc(e, l);
              }
            Pa(),
              (Cl.current = s),
              (El = o),
              null !== Tl ? (t = 0) : ((Ll = null), (Ol = 0), (t = Nl));
          }
          if (0 !== t) {
            if (
              (2 === t && 0 !== (o = ft(e)) && ((i = o), (t = ac(e, o))),
              1 === t)
            )
              throw ((n = _l), hc(e, 0), rc(e, i), ic(e, Qe()), n);
            if (6 === t) rc(e, i);
            else {
              if (
                ((o = e.current.alternate),
                0 === (30 & i) &&
                  !(function (e) {
                    for (var t = e; ; ) {
                      if (16384 & t.flags) {
                        var n = t.updateQueue;
                        if (null !== n && null !== (n = n.stores))
                          for (var i = 0; i < n.length; i++) {
                            var o = n[i],
                              a = o.getSnapshot;
                            o = o.value;
                            try {
                              if (!ri(a(), o)) return !1;
                            } catch (r) {
                              return !1;
                            }
                          }
                      }
                      if (((n = t.child), 16384 & t.subtreeFlags && null !== n))
                        (n.return = t), (t = n);
                      else {
                        if (t === e) break;
                        for (; null === t.sibling; ) {
                          if (null === t.return || t.return === e) return !0;
                          t = t.return;
                        }
                        (t.sibling.return = t.return), (t = t.sibling);
                      }
                    }
                    return !0;
                  })(o) &&
                  (2 === (t = mc(e, i)) &&
                    0 !== (s = ft(e)) &&
                    ((i = s), (t = ac(e, s))),
                  1 === t))
              )
                throw ((n = _l), hc(e, 0), rc(e, i), ic(e, Qe()), n);
              switch (((e.finishedWork = o), (e.finishedLanes = i), t)) {
                case 0:
                case 1:
                  throw Error(a(345));
                case 2:
                case 5:
                  wc(e, Fl, Gl);
                  break;
                case 3:
                  if (
                    (rc(e, i),
                    (130023424 & i) === i && 10 < (t = Wl + 500 - Qe()))
                  ) {
                    if (0 !== ht(e, 0)) break;
                    if (((o = e.suspendedLanes) & i) !== i) {
                      ec(), (e.pingedLanes |= e.suspendedLanes & o);
                      break;
                    }
                    e.timeoutHandle = io(wc.bind(null, e, Fl, Gl), t);
                    break;
                  }
                  wc(e, Fl, Gl);
                  break;
                case 4:
                  if ((rc(e, i), (4194240 & i) === i)) break;
                  for (t = e.eventTimes, o = -1; 0 < i; ) {
                    var r = 31 - st(i);
                    (s = 1 << r), (r = t[r]) > o && (o = r), (i &= ~s);
                  }
                  if (
                    ((i = o),
                    10 <
                      (i =
                        (120 > (i = Qe() - i)
                          ? 120
                          : 480 > i
                          ? 480
                          : 1080 > i
                          ? 1080
                          : 1920 > i
                          ? 1920
                          : 3e3 > i
                          ? 3e3
                          : 4320 > i
                          ? 4320
                          : 1960 * Al(i / 1960)) - i))
                  ) {
                    e.timeoutHandle = io(wc.bind(null, e, Fl, Gl), i);
                    break;
                  }
                  wc(e, Fl, Gl);
                  break;
                default:
                  throw Error(a(329));
              }
            }
          }
          return ic(e, Qe()), e.callbackNode === n ? oc.bind(null, e) : null;
        }
        function ac(e, t) {
          var n = Bl;
          return (
            e.current.memoizedState.isDehydrated && (hc(e, t).flags |= 256),
            2 !== (e = mc(e, t)) && ((t = Fl), (Fl = n), null !== t && sc(t)),
            e
          );
        }
        function sc(e) {
          null === Fl ? (Fl = e) : Fl.push.apply(Fl, e);
        }
        function rc(e, t) {
          for (
            t &= ~jl,
              t &= ~zl,
              e.suspendedLanes |= t,
              e.pingedLanes &= ~t,
              e = e.expirationTimes;
            0 < t;

          ) {
            var n = 31 - st(t),
              i = 1 << n;
            (e[n] = -1), (t &= ~i);
          }
        }
        function lc(e) {
          if (0 !== (6 & El)) throw Error(a(327));
          Sc();
          var t = ht(e, 0);
          if (0 === (1 & t)) return ic(e, Qe()), null;
          var n = mc(e, t);
          if (0 !== e.tag && 2 === n) {
            var i = ft(e);
            0 !== i && ((t = i), (n = ac(e, i)));
          }
          if (1 === n) throw ((n = _l), hc(e, 0), rc(e, t), ic(e, Qe()), n);
          if (6 === n) throw Error(a(345));
          return (
            (e.finishedWork = e.current.alternate),
            (e.finishedLanes = t),
            wc(e, Fl, Gl),
            ic(e, Qe()),
            null
          );
        }
        function cc(e, t) {
          var n = El;
          El |= 1;
          try {
            return e(t);
          } finally {
            0 === (El = n) && ((Hl = Qe() + 500), Fo && Go());
          }
        }
        function uc(e) {
          null !== Kl && 0 === Kl.tag && 0 === (6 & El) && Sc();
          var t = El;
          El |= 1;
          var n = Pl.transition,
            i = xt;
          try {
            if (((Pl.transition = null), (xt = 1), e)) return e();
          } finally {
            (xt = i), (Pl.transition = n), 0 === (6 & (El = t)) && Go();
          }
        }
        function dc() {
          (Rl = Il.current), Mo(Il);
        }
        function hc(e, t) {
          (e.finishedWork = null), (e.finishedLanes = 0);
          var n = e.timeoutHandle;
          if ((-1 !== n && ((e.timeoutHandle = -1), oo(n)), null !== Tl))
            for (n = Tl.return; null !== n; ) {
              var i = n;
              switch ((na(i), i.tag)) {
                case 1:
                  null !== (i = i.type.childContextTypes) &&
                    void 0 !== i &&
                    No();
                  break;
                case 3:
                  Qa(), Mo(To), Mo(Lo), is();
                  break;
                case 5:
                  Ja(i);
                  break;
                case 4:
                  Qa();
                  break;
                case 13:
                case 19:
                  Mo(es);
                  break;
                case 10:
                  Ea(i.type._context);
                  break;
                case 22:
                case 23:
                  dc();
              }
              n = n.return;
            }
          if (
            ((Ll = e),
            (Tl = e = Ic(e.current, null)),
            (Ol = Rl = t),
            (Nl = 0),
            (_l = null),
            (jl = zl = Dl = 0),
            (Fl = Bl = null),
            null !== Ra)
          ) {
            for (t = 0; t < Ra.length; t++)
              if (null !== (i = (n = Ra[t]).interleaved)) {
                n.interleaved = null;
                var o = i.next,
                  a = n.pending;
                if (null !== a) {
                  var s = a.next;
                  (a.next = o), (i.next = s);
                }
                n.pending = i;
              }
            Ra = null;
          }
          return e;
        }
        function pc(e, t) {
          for (;;) {
            var n = Tl;
            try {
              if ((Pa(), (os.current = $s), us)) {
                for (var i = rs.memoizedState; null !== i; ) {
                  var o = i.queue;
                  null !== o && (o.pending = null), (i = i.next);
                }
                us = !1;
              }
              if (
                ((ss = 0),
                (cs = ls = rs = null),
                (ds = !1),
                (hs = 0),
                (Ml.current = null),
                null === n || null === n.return)
              ) {
                (Nl = 1), (_l = t), (Tl = null);
                break;
              }
              e: {
                var s = e,
                  r = n.return,
                  l = n,
                  c = t;
                if (
                  ((t = Ol),
                  (l.flags |= 32768),
                  null !== c &&
                    "object" === typeof c &&
                    "function" === typeof c.then)
                ) {
                  var u = c,
                    d = l,
                    h = d.tag;
                  if (0 === (1 & d.mode) && (0 === h || 11 === h || 15 === h)) {
                    var p = d.alternate;
                    p
                      ? ((d.updateQueue = p.updateQueue),
                        (d.memoizedState = p.memoizedState),
                        (d.lanes = p.lanes))
                      : ((d.updateQueue = null), (d.memoizedState = null));
                  }
                  var f = mr(r);
                  if (null !== f) {
                    (f.flags &= -257),
                      vr(f, r, l, 0, t),
                      1 & f.mode && gr(s, u, t),
                      (c = u);
                    var g = (t = f).updateQueue;
                    if (null === g) {
                      var m = new Set();
                      m.add(c), (t.updateQueue = m);
                    } else g.add(c);
                    break e;
                  }
                  if (0 === (1 & t)) {
                    gr(s, u, t), gc();
                    break e;
                  }
                  c = Error(a(426));
                } else if (aa && 1 & l.mode) {
                  var v = mr(r);
                  if (null !== v) {
                    0 === (65536 & v.flags) && (v.flags |= 256),
                      vr(v, r, l, 0, t),
                      ga(cr(c, l));
                    break e;
                  }
                }
                (s = c = cr(c, l)),
                  4 !== Nl && (Nl = 2),
                  null === Bl ? (Bl = [s]) : Bl.push(s),
                  (s = r);
                do {
                  switch (s.tag) {
                    case 3:
                      (s.flags |= 65536),
                        (t &= -t),
                        (s.lanes |= t),
                        Ha(s, pr(0, c, t));
                      break e;
                    case 1:
                      l = c;
                      var b = s.type,
                        x = s.stateNode;
                      if (
                        0 === (128 & s.flags) &&
                        ("function" === typeof b.getDerivedStateFromError ||
                          (null !== x &&
                            "function" === typeof x.componentDidCatch &&
                            (null === Yl || !Yl.has(x))))
                      ) {
                        (s.flags |= 65536),
                          (t &= -t),
                          (s.lanes |= t),
                          Ha(s, fr(s, l, t));
                        break e;
                      }
                  }
                  s = s.return;
                } while (null !== s);
              }
              yc(n);
            } catch (y) {
              (t = y), Tl === n && null !== n && (Tl = n = n.return);
              continue;
            }
            break;
          }
        }
        function fc() {
          var e = Cl.current;
          return (Cl.current = $s), null === e ? $s : e;
        }
        function gc() {
          (0 !== Nl && 3 !== Nl && 2 !== Nl) || (Nl = 4),
            null === Ll ||
              (0 === (268435455 & Dl) && 0 === (268435455 & zl)) ||
              rc(Ll, Ol);
        }
        function mc(e, t) {
          var n = El;
          El |= 2;
          var i = fc();
          for ((Ll === e && Ol === t) || ((Gl = null), hc(e, t)); ; )
            try {
              vc();
              break;
            } catch (o) {
              pc(e, o);
            }
          if ((Pa(), (El = n), (Cl.current = i), null !== Tl))
            throw Error(a(261));
          return (Ll = null), (Ol = 0), Nl;
        }
        function vc() {
          for (; null !== Tl; ) xc(Tl);
        }
        function bc() {
          for (; null !== Tl && !qe(); ) xc(Tl);
        }
        function xc(e) {
          var t = kl(e.alternate, e, Rl);
          (e.memoizedProps = e.pendingProps),
            null === t ? yc(e) : (Tl = t),
            (Ml.current = null);
        }
        function yc(e) {
          var t = e;
          do {
            var n = t.alternate;
            if (((e = t.return), 0 === (32768 & t.flags))) {
              if (null !== (n = Xr(n, t, Rl))) return void (Tl = n);
            } else {
              if (null !== (n = Kr(n, t)))
                return (n.flags &= 32767), void (Tl = n);
              if (null === e) return (Nl = 6), void (Tl = null);
              (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
            }
            if (null !== (t = t.sibling)) return void (Tl = t);
            Tl = t = e;
          } while (null !== t);
          0 === Nl && (Nl = 5);
        }
        function wc(e, t, n) {
          var i = xt,
            o = Pl.transition;
          try {
            (Pl.transition = null),
              (xt = 1),
              (function (e, t, n, i) {
                do {
                  Sc();
                } while (null !== Kl);
                if (0 !== (6 & El)) throw Error(a(327));
                n = e.finishedWork;
                var o = e.finishedLanes;
                if (null === n) return null;
                if (
                  ((e.finishedWork = null),
                  (e.finishedLanes = 0),
                  n === e.current)
                )
                  throw Error(a(177));
                (e.callbackNode = null), (e.callbackPriority = 0);
                var s = n.lanes | n.childLanes;
                if (
                  ((function (e, t) {
                    var n = e.pendingLanes & ~t;
                    (e.pendingLanes = t),
                      (e.suspendedLanes = 0),
                      (e.pingedLanes = 0),
                      (e.expiredLanes &= t),
                      (e.mutableReadLanes &= t),
                      (e.entangledLanes &= t),
                      (t = e.entanglements);
                    var i = e.eventTimes;
                    for (e = e.expirationTimes; 0 < n; ) {
                      var o = 31 - st(n),
                        a = 1 << o;
                      (t[o] = 0), (i[o] = -1), (e[o] = -1), (n &= ~a);
                    }
                  })(e, s),
                  e === Ll && ((Tl = Ll = null), (Ol = 0)),
                  (0 === (2064 & n.subtreeFlags) && 0 === (2064 & n.flags)) ||
                    Xl ||
                    ((Xl = !0),
                    Lc(tt, function () {
                      return Sc(), null;
                    })),
                  (s = 0 !== (15990 & n.flags)),
                  0 !== (15990 & n.subtreeFlags) || s)
                ) {
                  (s = Pl.transition), (Pl.transition = null);
                  var r = xt;
                  xt = 1;
                  var l = El;
                  (El |= 4),
                    (Ml.current = null),
                    (function (e, t) {
                      if (((eo = Vt), pi((e = hi())))) {
                        if ("selectionStart" in e)
                          var n = {
                            start: e.selectionStart,
                            end: e.selectionEnd,
                          };
                        else
                          e: {
                            var i =
                              (n =
                                ((n = e.ownerDocument) && n.defaultView) ||
                                window).getSelection && n.getSelection();
                            if (i && 0 !== i.rangeCount) {
                              n = i.anchorNode;
                              var o = i.anchorOffset,
                                s = i.focusNode;
                              i = i.focusOffset;
                              try {
                                n.nodeType, s.nodeType;
                              } catch (w) {
                                n = null;
                                break e;
                              }
                              var r = 0,
                                l = -1,
                                c = -1,
                                u = 0,
                                d = 0,
                                h = e,
                                p = null;
                              t: for (;;) {
                                for (
                                  var f;
                                  h !== n ||
                                    (0 !== o && 3 !== h.nodeType) ||
                                    (l = r + o),
                                    h !== s ||
                                      (0 !== i && 3 !== h.nodeType) ||
                                      (c = r + i),
                                    3 === h.nodeType &&
                                      (r += h.nodeValue.length),
                                    null !== (f = h.firstChild);

                                )
                                  (p = h), (h = f);
                                for (;;) {
                                  if (h === e) break t;
                                  if (
                                    (p === n && ++u === o && (l = r),
                                    p === s && ++d === i && (c = r),
                                    null !== (f = h.nextSibling))
                                  )
                                    break;
                                  p = (h = p).parentNode;
                                }
                                h = f;
                              }
                              n =
                                -1 === l || -1 === c
                                  ? null
                                  : { start: l, end: c };
                            } else n = null;
                          }
                        n = n || { start: 0, end: 0 };
                      } else n = null;
                      for (
                        to = { focusedElem: e, selectionRange: n },
                          Vt = !1,
                          $r = t;
                        null !== $r;

                      )
                        if (
                          ((e = (t = $r).child),
                          0 !== (1028 & t.subtreeFlags) && null !== e)
                        )
                          (e.return = t), ($r = e);
                        else
                          for (; null !== $r; ) {
                            t = $r;
                            try {
                              var g = t.alternate;
                              if (0 !== (1024 & t.flags))
                                switch (t.tag) {
                                  case 0:
                                  case 11:
                                  case 15:
                                  case 5:
                                  case 6:
                                  case 4:
                                  case 17:
                                    break;
                                  case 1:
                                    if (null !== g) {
                                      var m = g.memoizedProps,
                                        v = g.memoizedState,
                                        b = t.stateNode,
                                        x = b.getSnapshotBeforeUpdate(
                                          t.elementType === t.type
                                            ? m
                                            : nr(t.type, m),
                                          v
                                        );
                                      b.__reactInternalSnapshotBeforeUpdate = x;
                                    }
                                    break;
                                  case 3:
                                    var y = t.stateNode.containerInfo;
                                    1 === y.nodeType
                                      ? (y.textContent = "")
                                      : 9 === y.nodeType &&
                                        y.documentElement &&
                                        y.removeChild(y.documentElement);
                                    break;
                                  default:
                                    throw Error(a(163));
                                }
                            } catch (w) {
                              Ac(t, t.return, w);
                            }
                            if (null !== (e = t.sibling)) {
                              (e.return = t.return), ($r = e);
                              break;
                            }
                            $r = t.return;
                          }
                      (g = tl), (tl = !1);
                    })(e, n),
                    ml(n, e),
                    fi(to),
                    (Vt = !!eo),
                    (to = eo = null),
                    (e.current = n),
                    bl(n, e, o),
                    Ze(),
                    (El = l),
                    (xt = r),
                    (Pl.transition = s);
                } else e.current = n;
                if (
                  (Xl && ((Xl = !1), (Kl = e), (ql = o)),
                  (s = e.pendingLanes),
                  0 === s && (Yl = null),
                  (function (e) {
                    if (at && "function" === typeof at.onCommitFiberRoot)
                      try {
                        at.onCommitFiberRoot(
                          ot,
                          e,
                          void 0,
                          128 === (128 & e.current.flags)
                        );
                      } catch (t) {}
                  })(n.stateNode),
                  ic(e, Qe()),
                  null !== t)
                )
                  for (i = e.onRecoverableError, n = 0; n < t.length; n++)
                    (o = t[n]),
                      i(o.value, { componentStack: o.stack, digest: o.digest });
                if (Vl) throw ((Vl = !1), (e = Ul), (Ul = null), e);
                0 !== (1 & ql) && 0 !== e.tag && Sc(),
                  (s = e.pendingLanes),
                  0 !== (1 & s)
                    ? e === Ql
                      ? Zl++
                      : ((Zl = 0), (Ql = e))
                    : (Zl = 0),
                  Go();
              })(e, t, n, i);
          } finally {
            (Pl.transition = o), (xt = i);
          }
          return null;
        }
        function Sc() {
          if (null !== Kl) {
            var e = yt(ql),
              t = Pl.transition,
              n = xt;
            try {
              if (((Pl.transition = null), (xt = 16 > e ? 16 : e), null === Kl))
                var i = !1;
              else {
                if (((e = Kl), (Kl = null), (ql = 0), 0 !== (6 & El)))
                  throw Error(a(331));
                var o = El;
                for (El |= 4, $r = e.current; null !== $r; ) {
                  var s = $r,
                    r = s.child;
                  if (0 !== (16 & $r.flags)) {
                    var l = s.deletions;
                    if (null !== l) {
                      for (var c = 0; c < l.length; c++) {
                        var u = l[c];
                        for ($r = u; null !== $r; ) {
                          var d = $r;
                          switch (d.tag) {
                            case 0:
                            case 11:
                            case 15:
                              nl(8, d, s);
                          }
                          var h = d.child;
                          if (null !== h) (h.return = d), ($r = h);
                          else
                            for (; null !== $r; ) {
                              var p = (d = $r).sibling,
                                f = d.return;
                              if ((al(d), d === u)) {
                                $r = null;
                                break;
                              }
                              if (null !== p) {
                                (p.return = f), ($r = p);
                                break;
                              }
                              $r = f;
                            }
                        }
                      }
                      var g = s.alternate;
                      if (null !== g) {
                        var m = g.child;
                        if (null !== m) {
                          g.child = null;
                          do {
                            var v = m.sibling;
                            (m.sibling = null), (m = v);
                          } while (null !== m);
                        }
                      }
                      $r = s;
                    }
                  }
                  if (0 !== (2064 & s.subtreeFlags) && null !== r)
                    (r.return = s), ($r = r);
                  else
                    e: for (; null !== $r; ) {
                      if (0 !== (2048 & (s = $r).flags))
                        switch (s.tag) {
                          case 0:
                          case 11:
                          case 15:
                            nl(9, s, s.return);
                        }
                      var b = s.sibling;
                      if (null !== b) {
                        (b.return = s.return), ($r = b);
                        break e;
                      }
                      $r = s.return;
                    }
                }
                var x = e.current;
                for ($r = x; null !== $r; ) {
                  var y = (r = $r).child;
                  if (0 !== (2064 & r.subtreeFlags) && null !== y)
                    (y.return = r), ($r = y);
                  else
                    e: for (r = x; null !== $r; ) {
                      if (0 !== (2048 & (l = $r).flags))
                        try {
                          switch (l.tag) {
                            case 0:
                            case 11:
                            case 15:
                              il(9, l);
                          }
                        } catch (S) {
                          Ac(l, l.return, S);
                        }
                      if (l === r) {
                        $r = null;
                        break e;
                      }
                      var w = l.sibling;
                      if (null !== w) {
                        (w.return = l.return), ($r = w);
                        break e;
                      }
                      $r = l.return;
                    }
                }
                if (
                  ((El = o),
                  Go(),
                  at && "function" === typeof at.onPostCommitFiberRoot)
                )
                  try {
                    at.onPostCommitFiberRoot(ot, e);
                  } catch (S) {}
                i = !0;
              }
              return i;
            } finally {
              (xt = n), (Pl.transition = t);
            }
          }
          return !1;
        }
        function kc(e, t, n) {
          (e = Fa(e, (t = pr(0, (t = cr(n, t)), 1)), 1)),
            (t = ec()),
            null !== e && (vt(e, 1, t), ic(e, t));
        }
        function Ac(e, t, n) {
          if (3 === e.tag) kc(e, e, n);
          else
            for (; null !== t; ) {
              if (3 === t.tag) {
                kc(t, e, n);
                break;
              }
              if (1 === t.tag) {
                var i = t.stateNode;
                if (
                  "function" === typeof t.type.getDerivedStateFromError ||
                  ("function" === typeof i.componentDidCatch &&
                    (null === Yl || !Yl.has(i)))
                ) {
                  (t = Fa(t, (e = fr(t, (e = cr(n, e)), 1)), 1)),
                    (e = ec()),
                    null !== t && (vt(t, 1, e), ic(t, e));
                  break;
                }
              }
              t = t.return;
            }
        }
        function Cc(e, t, n) {
          var i = e.pingCache;
          null !== i && i.delete(t),
            (t = ec()),
            (e.pingedLanes |= e.suspendedLanes & n),
            Ll === e &&
              (Ol & n) === n &&
              (4 === Nl ||
              (3 === Nl && (130023424 & Ol) === Ol && 500 > Qe() - Wl)
                ? hc(e, 0)
                : (jl |= n)),
            ic(e, t);
        }
        function Mc(e, t) {
          0 === t &&
            (0 === (1 & e.mode)
              ? (t = 1)
              : ((t = ut), 0 === (130023424 & (ut <<= 1)) && (ut = 4194304)));
          var n = ec();
          null !== (e = _a(e, t)) && (vt(e, t, n), ic(e, n));
        }
        function Pc(e) {
          var t = e.memoizedState,
            n = 0;
          null !== t && (n = t.retryLane), Mc(e, n);
        }
        function Ec(e, t) {
          var n = 0;
          switch (e.tag) {
            case 13:
              var i = e.stateNode,
                o = e.memoizedState;
              null !== o && (n = o.retryLane);
              break;
            case 19:
              i = e.stateNode;
              break;
            default:
              throw Error(a(314));
          }
          null !== i && i.delete(t), Mc(e, n);
        }
        function Lc(e, t) {
          return Xe(e, t);
        }
        function Tc(e, t, n, i) {
          (this.tag = e),
            (this.key = n),
            (this.sibling =
              this.child =
              this.return =
              this.stateNode =
              this.type =
              this.elementType =
                null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies =
              this.memoizedState =
              this.updateQueue =
              this.memoizedProps =
                null),
            (this.mode = i),
            (this.subtreeFlags = this.flags = 0),
            (this.deletions = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
        }
        function Oc(e, t, n, i) {
          return new Tc(e, t, n, i);
        }
        function Rc(e) {
          return !(!(e = e.prototype) || !e.isReactComponent);
        }
        function Ic(e, t) {
          var n = e.alternate;
          return (
            null === n
              ? (((n = Oc(e.tag, t, e.key, e.mode)).elementType =
                  e.elementType),
                (n.type = e.type),
                (n.stateNode = e.stateNode),
                (n.alternate = e),
                (e.alternate = n))
              : ((n.pendingProps = t),
                (n.type = e.type),
                (n.flags = 0),
                (n.subtreeFlags = 0),
                (n.deletions = null)),
            (n.flags = 14680064 & e.flags),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies =
              null === t
                ? null
                : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
          );
        }
        function Nc(e, t, n, i, o, s) {
          var r = 2;
          if (((i = e), "function" === typeof e)) Rc(e) && (r = 1);
          else if ("string" === typeof e) r = 5;
          else
            e: switch (e) {
              case k:
                return _c(n.children, o, s, t);
              case A:
                (r = 8), (o |= 8);
                break;
              case C:
                return (
                  ((e = Oc(12, n, t, 2 | o)).elementType = C), (e.lanes = s), e
                );
              case L:
                return (
                  ((e = Oc(13, n, t, o)).elementType = L), (e.lanes = s), e
                );
              case T:
                return (
                  ((e = Oc(19, n, t, o)).elementType = T), (e.lanes = s), e
                );
              case I:
                return Dc(n, o, s, t);
              default:
                if ("object" === typeof e && null !== e)
                  switch (e.$$typeof) {
                    case M:
                      r = 10;
                      break e;
                    case P:
                      r = 9;
                      break e;
                    case E:
                      r = 11;
                      break e;
                    case O:
                      r = 14;
                      break e;
                    case R:
                      (r = 16), (i = null);
                      break e;
                  }
                throw Error(a(130, null == e ? e : typeof e, ""));
            }
          return (
            ((t = Oc(r, n, t, o)).elementType = e),
            (t.type = i),
            (t.lanes = s),
            t
          );
        }
        function _c(e, t, n, i) {
          return ((e = Oc(7, e, i, t)).lanes = n), e;
        }
        function Dc(e, t, n, i) {
          return (
            ((e = Oc(22, e, i, t)).elementType = I),
            (e.lanes = n),
            (e.stateNode = { isHidden: !1 }),
            e
          );
        }
        function zc(e, t, n) {
          return ((e = Oc(6, e, null, t)).lanes = n), e;
        }
        function jc(e, t, n) {
          return (
            ((t = Oc(
              4,
              null !== e.children ? e.children : [],
              e.key,
              t
            )).lanes = n),
            (t.stateNode = {
              containerInfo: e.containerInfo,
              pendingChildren: null,
              implementation: e.implementation,
            }),
            t
          );
        }
        function Bc(e, t, n, i, o) {
          (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork =
              this.pingCache =
              this.current =
              this.pendingChildren =
                null),
            (this.timeoutHandle = -1),
            (this.callbackNode = this.pendingContext = this.context = null),
            (this.callbackPriority = 0),
            (this.eventTimes = mt(0)),
            (this.expirationTimes = mt(-1)),
            (this.entangledLanes =
              this.finishedLanes =
              this.mutableReadLanes =
              this.expiredLanes =
              this.pingedLanes =
              this.suspendedLanes =
              this.pendingLanes =
                0),
            (this.entanglements = mt(0)),
            (this.identifierPrefix = i),
            (this.onRecoverableError = o),
            (this.mutableSourceEagerHydrationData = null);
        }
        function Fc(e, t, n, i, o, a, s, r, l) {
          return (
            (e = new Bc(e, t, n, r, l)),
            1 === t ? ((t = 1), !0 === a && (t |= 8)) : (t = 0),
            (a = Oc(3, null, null, t)),
            (e.current = a),
            (a.stateNode = e),
            (a.memoizedState = {
              element: i,
              isDehydrated: n,
              cache: null,
              transitions: null,
              pendingSuspenseBoundaries: null,
            }),
            za(a),
            e
          );
        }
        function Wc(e) {
          if (!e) return Eo;
          e: {
            if (He((e = e._reactInternals)) !== e || 1 !== e.tag)
              throw Error(a(170));
            var t = e;
            do {
              switch (t.tag) {
                case 3:
                  t = t.stateNode.context;
                  break e;
                case 1:
                  if (Io(t.type)) {
                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                    break e;
                  }
              }
              t = t.return;
            } while (null !== t);
            throw Error(a(171));
          }
          if (1 === e.tag) {
            var n = e.type;
            if (Io(n)) return Do(e, n, t);
          }
          return t;
        }
        function Hc(e, t, n, i, o, a, s, r, l) {
          return (
            ((e = Fc(n, i, !0, e, 0, a, 0, r, l)).context = Wc(null)),
            (n = e.current),
            ((a = Ba((i = ec()), (o = tc(n)))).callback =
              void 0 !== t && null !== t ? t : null),
            Fa(n, a, o),
            (e.current.lanes = o),
            vt(e, o, i),
            ic(e, i),
            e
          );
        }
        function Gc(e, t, n, i) {
          var o = t.current,
            a = ec(),
            s = tc(o);
          return (
            (n = Wc(n)),
            null === t.context ? (t.context = n) : (t.pendingContext = n),
            ((t = Ba(a, s)).payload = { element: e }),
            null !== (i = void 0 === i ? null : i) && (t.callback = i),
            null !== (e = Fa(o, t, s)) && (nc(e, o, s, a), Wa(e, o, s)),
            s
          );
        }
        function Vc(e) {
          return (e = e.current).child
            ? (e.child.tag, e.child.stateNode)
            : null;
        }
        function Uc(e, t) {
          if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
            var n = e.retryLane;
            e.retryLane = 0 !== n && n < t ? n : t;
          }
        }
        function Yc(e, t) {
          Uc(e, t), (e = e.alternate) && Uc(e, t);
        }
        kl = function (e, t, n) {
          if (null !== e)
            if (e.memoizedProps !== t.pendingProps || To.current) xr = !0;
            else {
              if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                return (
                  (xr = !1),
                  (function (e, t, n) {
                    switch (t.tag) {
                      case 3:
                        Lr(t), fa();
                        break;
                      case 5:
                        $a(t);
                        break;
                      case 1:
                        Io(t.type) && zo(t);
                        break;
                      case 4:
                        Za(t, t.stateNode.containerInfo);
                        break;
                      case 10:
                        var i = t.type._context,
                          o = t.memoizedProps.value;
                        Po(ka, i._currentValue), (i._currentValue = o);
                        break;
                      case 13:
                        if (null !== (i = t.memoizedState))
                          return null !== i.dehydrated
                            ? (Po(es, 1 & es.current), (t.flags |= 128), null)
                            : 0 !== (n & t.child.childLanes)
                            ? zr(e, t, n)
                            : (Po(es, 1 & es.current),
                              null !== (e = Vr(e, t, n)) ? e.sibling : null);
                        Po(es, 1 & es.current);
                        break;
                      case 19:
                        if (
                          ((i = 0 !== (n & t.childLanes)),
                          0 !== (128 & e.flags))
                        ) {
                          if (i) return Hr(e, t, n);
                          t.flags |= 128;
                        }
                        if (
                          (null !== (o = t.memoizedState) &&
                            ((o.rendering = null),
                            (o.tail = null),
                            (o.lastEffect = null)),
                          Po(es, es.current),
                          i)
                        )
                          break;
                        return null;
                      case 22:
                      case 23:
                        return (t.lanes = 0), Ar(e, t, n);
                    }
                    return Vr(e, t, n);
                  })(e, t, n)
                );
              xr = 0 !== (131072 & e.flags);
            }
          else (xr = !1), aa && 0 !== (1048576 & t.flags) && ea(t, Xo, t.index);
          switch (((t.lanes = 0), t.tag)) {
            case 2:
              var i = t.type;
              Gr(e, t), (e = t.pendingProps);
              var o = Ro(t, Lo.current);
              Ta(t, n), (o = ms(null, t, i, e, o, n));
              var s = vs();
              return (
                (t.flags |= 1),
                "object" === typeof o &&
                null !== o &&
                "function" === typeof o.render &&
                void 0 === o.$$typeof
                  ? ((t.tag = 1),
                    (t.memoizedState = null),
                    (t.updateQueue = null),
                    Io(i) ? ((s = !0), zo(t)) : (s = !1),
                    (t.memoizedState =
                      null !== o.state && void 0 !== o.state ? o.state : null),
                    za(t),
                    (o.updater = or),
                    (t.stateNode = o),
                    (o._reactInternals = t),
                    lr(t, i, e, n),
                    (t = Er(null, t, i, !0, s, n)))
                  : ((t.tag = 0),
                    aa && s && ta(t),
                    yr(null, t, o, n),
                    (t = t.child)),
                t
              );
            case 16:
              i = t.elementType;
              e: {
                switch (
                  (Gr(e, t),
                  (e = t.pendingProps),
                  (i = (o = i._init)(i._payload)),
                  (t.type = i),
                  (o = t.tag =
                    (function (e) {
                      if ("function" === typeof e) return Rc(e) ? 1 : 0;
                      if (void 0 !== e && null !== e) {
                        if ((e = e.$$typeof) === E) return 11;
                        if (e === O) return 14;
                      }
                      return 2;
                    })(i)),
                  (e = nr(i, e)),
                  o)
                ) {
                  case 0:
                    t = Mr(null, t, i, e, n);
                    break e;
                  case 1:
                    t = Pr(null, t, i, e, n);
                    break e;
                  case 11:
                    t = wr(null, t, i, e, n);
                    break e;
                  case 14:
                    t = Sr(null, t, i, nr(i.type, e), n);
                    break e;
                }
                throw Error(a(306, i, ""));
              }
              return t;
            case 0:
              return (
                (i = t.type),
                (o = t.pendingProps),
                Mr(e, t, i, (o = t.elementType === i ? o : nr(i, o)), n)
              );
            case 1:
              return (
                (i = t.type),
                (o = t.pendingProps),
                Pr(e, t, i, (o = t.elementType === i ? o : nr(i, o)), n)
              );
            case 3:
              e: {
                if ((Lr(t), null === e)) throw Error(a(387));
                (i = t.pendingProps),
                  (o = (s = t.memoizedState).element),
                  ja(e, t),
                  Ga(t, i, null, n);
                var r = t.memoizedState;
                if (((i = r.element), s.isDehydrated)) {
                  if (
                    ((s = {
                      element: i,
                      isDehydrated: !1,
                      cache: r.cache,
                      pendingSuspenseBoundaries: r.pendingSuspenseBoundaries,
                      transitions: r.transitions,
                    }),
                    (t.updateQueue.baseState = s),
                    (t.memoizedState = s),
                    256 & t.flags)
                  ) {
                    t = Tr(e, t, i, n, (o = cr(Error(a(423)), t)));
                    break e;
                  }
                  if (i !== o) {
                    t = Tr(e, t, i, n, (o = cr(Error(a(424)), t)));
                    break e;
                  }
                  for (
                    oa = co(t.stateNode.containerInfo.firstChild),
                      ia = t,
                      aa = !0,
                      sa = null,
                      n = Sa(t, null, i, n),
                      t.child = n;
                    n;

                  )
                    (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                } else {
                  if ((fa(), i === o)) {
                    t = Vr(e, t, n);
                    break e;
                  }
                  yr(e, t, i, n);
                }
                t = t.child;
              }
              return t;
            case 5:
              return (
                $a(t),
                null === e && ua(t),
                (i = t.type),
                (o = t.pendingProps),
                (s = null !== e ? e.memoizedProps : null),
                (r = o.children),
                no(i, o)
                  ? (r = null)
                  : null !== s && no(i, s) && (t.flags |= 32),
                Cr(e, t),
                yr(e, t, r, n),
                t.child
              );
            case 6:
              return null === e && ua(t), null;
            case 13:
              return zr(e, t, n);
            case 4:
              return (
                Za(t, t.stateNode.containerInfo),
                (i = t.pendingProps),
                null === e ? (t.child = wa(t, null, i, n)) : yr(e, t, i, n),
                t.child
              );
            case 11:
              return (
                (i = t.type),
                (o = t.pendingProps),
                wr(e, t, i, (o = t.elementType === i ? o : nr(i, o)), n)
              );
            case 7:
              return yr(e, t, t.pendingProps, n), t.child;
            case 8:
            case 12:
              return yr(e, t, t.pendingProps.children, n), t.child;
            case 10:
              e: {
                if (
                  ((i = t.type._context),
                  (o = t.pendingProps),
                  (s = t.memoizedProps),
                  (r = o.value),
                  Po(ka, i._currentValue),
                  (i._currentValue = r),
                  null !== s)
                )
                  if (ri(s.value, r)) {
                    if (s.children === o.children && !To.current) {
                      t = Vr(e, t, n);
                      break e;
                    }
                  } else
                    for (
                      null !== (s = t.child) && (s.return = t);
                      null !== s;

                    ) {
                      var l = s.dependencies;
                      if (null !== l) {
                        r = s.child;
                        for (var c = l.firstContext; null !== c; ) {
                          if (c.context === i) {
                            if (1 === s.tag) {
                              (c = Ba(-1, n & -n)).tag = 2;
                              var u = s.updateQueue;
                              if (null !== u) {
                                var d = (u = u.shared).pending;
                                null === d
                                  ? (c.next = c)
                                  : ((c.next = d.next), (d.next = c)),
                                  (u.pending = c);
                              }
                            }
                            (s.lanes |= n),
                              null !== (c = s.alternate) && (c.lanes |= n),
                              La(s.return, n, t),
                              (l.lanes |= n);
                            break;
                          }
                          c = c.next;
                        }
                      } else if (10 === s.tag)
                        r = s.type === t.type ? null : s.child;
                      else if (18 === s.tag) {
                        if (null === (r = s.return)) throw Error(a(341));
                        (r.lanes |= n),
                          null !== (l = r.alternate) && (l.lanes |= n),
                          La(r, n, t),
                          (r = s.sibling);
                      } else r = s.child;
                      if (null !== r) r.return = s;
                      else
                        for (r = s; null !== r; ) {
                          if (r === t) {
                            r = null;
                            break;
                          }
                          if (null !== (s = r.sibling)) {
                            (s.return = r.return), (r = s);
                            break;
                          }
                          r = r.return;
                        }
                      s = r;
                    }
                yr(e, t, o.children, n), (t = t.child);
              }
              return t;
            case 9:
              return (
                (o = t.type),
                (i = t.pendingProps.children),
                Ta(t, n),
                (i = i((o = Oa(o)))),
                (t.flags |= 1),
                yr(e, t, i, n),
                t.child
              );
            case 14:
              return (
                (o = nr((i = t.type), t.pendingProps)),
                Sr(e, t, i, (o = nr(i.type, o)), n)
              );
            case 15:
              return kr(e, t, t.type, t.pendingProps, n);
            case 17:
              return (
                (i = t.type),
                (o = t.pendingProps),
                (o = t.elementType === i ? o : nr(i, o)),
                Gr(e, t),
                (t.tag = 1),
                Io(i) ? ((e = !0), zo(t)) : (e = !1),
                Ta(t, n),
                sr(t, i, o),
                lr(t, i, o, n),
                Er(null, t, i, !0, e, n)
              );
            case 19:
              return Hr(e, t, n);
            case 22:
              return Ar(e, t, n);
          }
          throw Error(a(156, t.tag));
        };
        var Xc =
          "function" === typeof reportError
            ? reportError
            : function (e) {
                console.error(e);
              };
        function Kc(e) {
          this._internalRoot = e;
        }
        function qc(e) {
          this._internalRoot = e;
        }
        function Zc(e) {
          return !(
            !e ||
            (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
          );
        }
        function Qc(e) {
          return !(
            !e ||
            (1 !== e.nodeType &&
              9 !== e.nodeType &&
              11 !== e.nodeType &&
              (8 !== e.nodeType ||
                " react-mount-point-unstable " !== e.nodeValue))
          );
        }
        function $c() {}
        function Jc(e, t, n, i, o) {
          var a = n._reactRootContainer;
          if (a) {
            var s = a;
            if ("function" === typeof o) {
              var r = o;
              o = function () {
                var e = Vc(s);
                r.call(e);
              };
            }
            Gc(t, s, e, o);
          } else
            s = (function (e, t, n, i, o) {
              if (o) {
                if ("function" === typeof i) {
                  var a = i;
                  i = function () {
                    var e = Vc(s);
                    a.call(e);
                  };
                }
                var s = Hc(t, i, e, 0, null, !1, 0, "", $c);
                return (
                  (e._reactRootContainer = s),
                  (e[go] = s.current),
                  Hi(8 === e.nodeType ? e.parentNode : e),
                  uc(),
                  s
                );
              }
              for (; (o = e.lastChild); ) e.removeChild(o);
              if ("function" === typeof i) {
                var r = i;
                i = function () {
                  var e = Vc(l);
                  r.call(e);
                };
              }
              var l = Fc(e, 0, !1, null, 0, !1, 0, "", $c);
              return (
                (e._reactRootContainer = l),
                (e[go] = l.current),
                Hi(8 === e.nodeType ? e.parentNode : e),
                uc(function () {
                  Gc(t, l, n, i);
                }),
                l
              );
            })(n, t, e, o, i);
          return Vc(s);
        }
        (qc.prototype.render = Kc.prototype.render =
          function (e) {
            var t = this._internalRoot;
            if (null === t) throw Error(a(409));
            Gc(e, t, null, null);
          }),
          (qc.prototype.unmount = Kc.prototype.unmount =
            function () {
              var e = this._internalRoot;
              if (null !== e) {
                this._internalRoot = null;
                var t = e.containerInfo;
                uc(function () {
                  Gc(null, e, null, null);
                }),
                  (t[go] = null);
              }
            }),
          (qc.prototype.unstable_scheduleHydration = function (e) {
            if (e) {
              var t = At();
              e = { blockedOn: null, target: e, priority: t };
              for (
                var n = 0;
                n < It.length && 0 !== t && t < It[n].priority;
                n++
              );
              It.splice(n, 0, e), 0 === n && zt(e);
            }
          }),
          (wt = function (e) {
            switch (e.tag) {
              case 3:
                var t = e.stateNode;
                if (t.current.memoizedState.isDehydrated) {
                  var n = dt(t.pendingLanes);
                  0 !== n &&
                    (bt(t, 1 | n),
                    ic(t, Qe()),
                    0 === (6 & El) && ((Hl = Qe() + 500), Go()));
                }
                break;
              case 13:
                uc(function () {
                  var t = _a(e, 1);
                  if (null !== t) {
                    var n = ec();
                    nc(t, e, 1, n);
                  }
                }),
                  Yc(e, 1);
            }
          }),
          (St = function (e) {
            if (13 === e.tag) {
              var t = _a(e, 134217728);
              if (null !== t) nc(t, e, 134217728, ec());
              Yc(e, 134217728);
            }
          }),
          (kt = function (e) {
            if (13 === e.tag) {
              var t = tc(e),
                n = _a(e, t);
              if (null !== n) nc(n, e, t, ec());
              Yc(e, t);
            }
          }),
          (At = function () {
            return xt;
          }),
          (Ct = function (e, t) {
            var n = xt;
            try {
              return (xt = e), t();
            } finally {
              xt = n;
            }
          }),
          (Se = function (e, t, n) {
            switch (t) {
              case "input":
                if (($(e, n), (t = n.name), "radio" === n.type && null != t)) {
                  for (n = e; n.parentNode; ) n = n.parentNode;
                  for (
                    n = n.querySelectorAll(
                      "input[name=" + JSON.stringify("" + t) + '][type="radio"]'
                    ),
                      t = 0;
                    t < n.length;
                    t++
                  ) {
                    var i = n[t];
                    if (i !== e && i.form === e.form) {
                      var o = So(i);
                      if (!o) throw Error(a(90));
                      X(i), $(i, o);
                    }
                  }
                }
                break;
              case "textarea":
                ae(e, n);
                break;
              case "select":
                null != (t = n.value) && ne(e, !!n.multiple, t, !1);
            }
          }),
          (Ee = cc),
          (Le = uc);
        var eu = {
            usingClientEntryPoint: !1,
            Events: [yo, wo, So, Me, Pe, cc],
          },
          tu = {
            findFiberByHostInstance: xo,
            bundleType: 0,
            version: "18.3.1",
            rendererPackageName: "react-dom",
          },
          nu = {
            bundleType: tu.bundleType,
            version: tu.version,
            rendererPackageName: tu.rendererPackageName,
            rendererConfig: tu.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: y.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = Ue(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance:
              tu.findFiberByHostInstance ||
              function () {
                return null;
              },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.3.1-next-f1338f8080-20240426",
          };
        if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
          var iu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!iu.isDisabled && iu.supportsFiber)
            try {
              (ot = iu.inject(nu)), (at = iu);
            } catch (ue) {}
        }
        (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = eu),
          (t.createPortal = function (e, t) {
            var n =
              2 < arguments.length && void 0 !== arguments[2]
                ? arguments[2]
                : null;
            if (!Zc(t)) throw Error(a(200));
            return (function (e, t, n) {
              var i =
                3 < arguments.length && void 0 !== arguments[3]
                  ? arguments[3]
                  : null;
              return {
                $$typeof: S,
                key: null == i ? null : "" + i,
                children: e,
                containerInfo: t,
                implementation: n,
              };
            })(e, t, null, n);
          }),
          (t.createRoot = function (e, t) {
            if (!Zc(e)) throw Error(a(299));
            var n = !1,
              i = "",
              o = Xc;
            return (
              null !== t &&
                void 0 !== t &&
                (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (i = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (o = t.onRecoverableError)),
              (t = Fc(e, 1, !1, null, 0, n, 0, i, o)),
              (e[go] = t.current),
              Hi(8 === e.nodeType ? e.parentNode : e),
              new Kc(t)
            );
          }),
          (t.findDOMNode = function (e) {
            if (null == e) return null;
            if (1 === e.nodeType) return e;
            var t = e._reactInternals;
            if (void 0 === t) {
              if ("function" === typeof e.render) throw Error(a(188));
              throw ((e = Object.keys(e).join(",")), Error(a(268, e)));
            }
            return (e = null === (e = Ue(t)) ? null : e.stateNode);
          }),
          (t.flushSync = function (e) {
            return uc(e);
          }),
          (t.hydrate = function (e, t, n) {
            if (!Qc(t)) throw Error(a(200));
            return Jc(null, e, t, !0, n);
          }),
          (t.hydrateRoot = function (e, t, n) {
            if (!Zc(e)) throw Error(a(405));
            var i = (null != n && n.hydratedSources) || null,
              o = !1,
              s = "",
              r = Xc;
            if (
              (null !== n &&
                void 0 !== n &&
                (!0 === n.unstable_strictMode && (o = !0),
                void 0 !== n.identifierPrefix && (s = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (r = n.onRecoverableError)),
              (t = Hc(t, null, e, 1, null != n ? n : null, o, 0, s, r)),
              (e[go] = t.current),
              Hi(e),
              i)
            )
              for (e = 0; e < i.length; e++)
                (o = (o = (n = i[e])._getVersion)(n._source)),
                  null == t.mutableSourceEagerHydrationData
                    ? (t.mutableSourceEagerHydrationData = [n, o])
                    : t.mutableSourceEagerHydrationData.push(n, o);
            return new qc(t);
          }),
          (t.render = function (e, t, n) {
            if (!Qc(t)) throw Error(a(200));
            return Jc(null, e, t, !1, n);
          }),
          (t.unmountComponentAtNode = function (e) {
            if (!Qc(e)) throw Error(a(40));
            return (
              !!e._reactRootContainer &&
              (uc(function () {
                Jc(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[go] = null);
                });
              }),
              !0)
            );
          }),
          (t.unstable_batchedUpdates = cc),
          (t.unstable_renderSubtreeIntoContainer = function (e, t, n, i) {
            if (!Qc(n)) throw Error(a(200));
            if (null == e || void 0 === e._reactInternals) throw Error(a(38));
            return Jc(e, t, n, !1, i);
          }),
          (t.version = "18.3.1-next-f1338f8080-20240426");
      },
      4391: (e, t, n) => {
        "use strict";
        var i = n(7950);
        (t.createRoot = i.createRoot), (t.hydrateRoot = i.hydrateRoot);
      },
      7950: (e, t, n) => {
        "use strict";
        !(function e() {
          if (
            "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
          )
            try {
              __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (t) {
              console.error(t);
            }
        })(),
          (e.exports = n(2730));
      },
      5082: (e, t) => {
        "use strict";
        var n,
          i = Symbol.for("react.element"),
          o = Symbol.for("react.portal"),
          a = Symbol.for("react.fragment"),
          s = Symbol.for("react.strict_mode"),
          r = Symbol.for("react.profiler"),
          l = Symbol.for("react.provider"),
          c = Symbol.for("react.context"),
          u = Symbol.for("react.server_context"),
          d = Symbol.for("react.forward_ref"),
          h = Symbol.for("react.suspense"),
          p = Symbol.for("react.suspense_list"),
          f = Symbol.for("react.memo"),
          g = Symbol.for("react.lazy"),
          m = Symbol.for("react.offscreen");
        function v(e) {
          if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
              case i:
                switch ((e = e.type)) {
                  case a:
                  case r:
                  case s:
                  case h:
                  case p:
                    return e;
                  default:
                    switch ((e = e && e.$$typeof)) {
                      case u:
                      case c:
                      case d:
                      case g:
                      case f:
                      case l:
                        return e;
                      default:
                        return t;
                    }
                }
              case o:
                return t;
            }
          }
        }
        (n = Symbol.for("react.module.reference")),
          (t.ForwardRef = d),
          (t.Memo = f);
      },
      2086: (e, t, n) => {
        "use strict";
        e.exports = n(5082);
      },
      1153: (e, t, n) => {
        "use strict";
        var i = n(5043),
          o = Symbol.for("react.element"),
          a = Symbol.for("react.fragment"),
          s = Object.prototype.hasOwnProperty,
          r =
            i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              .ReactCurrentOwner,
          l = { key: !0, ref: !0, __self: !0, __source: !0 };
        function c(e, t, n) {
          var i,
            a = {},
            c = null,
            u = null;
          for (i in (void 0 !== n && (c = "" + n),
          void 0 !== t.key && (c = "" + t.key),
          void 0 !== t.ref && (u = t.ref),
          t))
            s.call(t, i) && !l.hasOwnProperty(i) && (a[i] = t[i]);
          if (e && e.defaultProps)
            for (i in (t = e.defaultProps)) void 0 === a[i] && (a[i] = t[i]);
          return {
            $$typeof: o,
            type: e,
            key: c,
            ref: u,
            props: a,
            _owner: r.current,
          };
        }
        (t.Fragment = a), (t.jsx = c), (t.jsxs = c);
      },
      4202: (e, t) => {
        "use strict";
        var n = Symbol.for("react.element"),
          i = Symbol.for("react.portal"),
          o = Symbol.for("react.fragment"),
          a = Symbol.for("react.strict_mode"),
          s = Symbol.for("react.profiler"),
          r = Symbol.for("react.provider"),
          l = Symbol.for("react.context"),
          c = Symbol.for("react.forward_ref"),
          u = Symbol.for("react.suspense"),
          d = Symbol.for("react.memo"),
          h = Symbol.for("react.lazy"),
          p = Symbol.iterator;
        var f = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          g = Object.assign,
          m = {};
        function v(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || f);
        }
        function b() {}
        function x(e, t, n) {
          (this.props = e),
            (this.context = t),
            (this.refs = m),
            (this.updater = n || f);
        }
        (v.prototype.isReactComponent = {}),
          (v.prototype.setState = function (e, t) {
            if ("object" !== typeof e && "function" !== typeof e && null != e)
              throw Error(
                "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
              );
            this.updater.enqueueSetState(this, e, t, "setState");
          }),
          (v.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, "forceUpdate");
          }),
          (b.prototype = v.prototype);
        var y = (x.prototype = new b());
        (y.constructor = x), g(y, v.prototype), (y.isPureReactComponent = !0);
        var w = Array.isArray,
          S = Object.prototype.hasOwnProperty,
          k = { current: null },
          A = { key: !0, ref: !0, __self: !0, __source: !0 };
        function C(e, t, i) {
          var o,
            a = {},
            s = null,
            r = null;
          if (null != t)
            for (o in (void 0 !== t.ref && (r = t.ref),
            void 0 !== t.key && (s = "" + t.key),
            t))
              S.call(t, o) && !A.hasOwnProperty(o) && (a[o] = t[o]);
          var l = arguments.length - 2;
          if (1 === l) a.children = i;
          else if (1 < l) {
            for (var c = Array(l), u = 0; u < l; u++) c[u] = arguments[u + 2];
            a.children = c;
          }
          if (e && e.defaultProps)
            for (o in (l = e.defaultProps)) void 0 === a[o] && (a[o] = l[o]);
          return {
            $$typeof: n,
            type: e,
            key: s,
            ref: r,
            props: a,
            _owner: k.current,
          };
        }
        function M(e) {
          return "object" === typeof e && null !== e && e.$$typeof === n;
        }
        var P = /\/+/g;
        function E(e, t) {
          return "object" === typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { "=": "=0", ":": "=2" };
                return (
                  "$" +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })("" + e.key)
            : t.toString(36);
        }
        function L(e, t, o, a, s) {
          var r = typeof e;
          ("undefined" !== r && "boolean" !== r) || (e = null);
          var l = !1;
          if (null === e) l = !0;
          else
            switch (r) {
              case "string":
              case "number":
                l = !0;
                break;
              case "object":
                switch (e.$$typeof) {
                  case n:
                  case i:
                    l = !0;
                }
            }
          if (l)
            return (
              (s = s((l = e))),
              (e = "" === a ? "." + E(l, 0) : a),
              w(s)
                ? ((o = ""),
                  null != e && (o = e.replace(P, "$&/") + "/"),
                  L(s, t, o, "", function (e) {
                    return e;
                  }))
                : null != s &&
                  (M(s) &&
                    (s = (function (e, t) {
                      return {
                        $$typeof: n,
                        type: e.type,
                        key: t,
                        ref: e.ref,
                        props: e.props,
                        _owner: e._owner,
                      };
                    })(
                      s,
                      o +
                        (!s.key || (l && l.key === s.key)
                          ? ""
                          : ("" + s.key).replace(P, "$&/") + "/") +
                        e
                    )),
                  t.push(s)),
              1
            );
          if (((l = 0), (a = "" === a ? "." : a + ":"), w(e)))
            for (var c = 0; c < e.length; c++) {
              var u = a + E((r = e[c]), c);
              l += L(r, t, o, u, s);
            }
          else if (
            ((u = (function (e) {
              return null === e || "object" !== typeof e
                ? null
                : "function" === typeof (e = (p && e[p]) || e["@@iterator"])
                ? e
                : null;
            })(e)),
            "function" === typeof u)
          )
            for (e = u.call(e), c = 0; !(r = e.next()).done; )
              l += L((r = r.value), t, o, (u = a + E(r, c++)), s);
          else if ("object" === r)
            throw (
              ((t = String(e)),
              Error(
                "Objects are not valid as a React child (found: " +
                  ("[object Object]" === t
                    ? "object with keys {" + Object.keys(e).join(", ") + "}"
                    : t) +
                  "). If you meant to render a collection of children, use an array instead."
              ))
            );
          return l;
        }
        function T(e, t, n) {
          if (null == e) return e;
          var i = [],
            o = 0;
          return (
            L(e, i, "", "", function (e) {
              return t.call(n, e, o++);
            }),
            i
          );
        }
        function O(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()).then(
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 1), (e._result = t));
              },
              function (t) {
                (0 !== e._status && -1 !== e._status) ||
                  ((e._status = 2), (e._result = t));
              }
            ),
              -1 === e._status && ((e._status = 0), (e._result = t));
          }
          if (1 === e._status) return e._result.default;
          throw e._result;
        }
        var R = { current: null },
          I = { transition: null },
          N = {
            ReactCurrentDispatcher: R,
            ReactCurrentBatchConfig: I,
            ReactCurrentOwner: k,
          };
        function _() {
          throw Error(
            "act(...) is not supported in production builds of React."
          );
        }
        (t.Children = {
          map: T,
          forEach: function (e, t, n) {
            T(
              e,
              function () {
                t.apply(this, arguments);
              },
              n
            );
          },
          count: function (e) {
            var t = 0;
            return (
              T(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              T(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!M(e))
              throw Error(
                "React.Children.only expected to receive a single React element child."
              );
            return e;
          },
        }),
          (t.Component = v),
          (t.Fragment = o),
          (t.Profiler = s),
          (t.PureComponent = x),
          (t.StrictMode = a),
          (t.Suspense = u),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = N),
          (t.act = _),
          (t.cloneElement = function (e, t, i) {
            if (null === e || void 0 === e)
              throw Error(
                "React.cloneElement(...): The argument must be a React element, but you passed " +
                  e +
                  "."
              );
            var o = g({}, e.props),
              a = e.key,
              s = e.ref,
              r = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((s = t.ref), (r = k.current)),
                void 0 !== t.key && (a = "" + t.key),
                e.type && e.type.defaultProps)
              )
                var l = e.type.defaultProps;
              for (c in t)
                S.call(t, c) &&
                  !A.hasOwnProperty(c) &&
                  (o[c] = void 0 === t[c] && void 0 !== l ? l[c] : t[c]);
            }
            var c = arguments.length - 2;
            if (1 === c) o.children = i;
            else if (1 < c) {
              l = Array(c);
              for (var u = 0; u < c; u++) l[u] = arguments[u + 2];
              o.children = l;
            }
            return {
              $$typeof: n,
              type: e.type,
              key: a,
              ref: s,
              props: o,
              _owner: r,
            };
          }),
          (t.createContext = function (e) {
            return (
              ((e = {
                $$typeof: l,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null,
              }).Provider = { $$typeof: r, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = C),
          (t.createFactory = function (e) {
            var t = C.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: c, render: e };
          }),
          (t.isValidElement = M),
          (t.lazy = function (e) {
            return {
              $$typeof: h,
              _payload: { _status: -1, _result: e },
              _init: O,
            };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: d, type: e, compare: void 0 === t ? null : t };
          }),
          (t.startTransition = function (e) {
            var t = I.transition;
            I.transition = {};
            try {
              e();
            } finally {
              I.transition = t;
            }
          }),
          (t.unstable_act = _),
          (t.useCallback = function (e, t) {
            return R.current.useCallback(e, t);
          }),
          (t.useContext = function (e) {
            return R.current.useContext(e);
          }),
          (t.useDebugValue = function () {}),
          (t.useDeferredValue = function (e) {
            return R.current.useDeferredValue(e);
          }),
          (t.useEffect = function (e, t) {
            return R.current.useEffect(e, t);
          }),
          (t.useId = function () {
            return R.current.useId();
          }),
          (t.useImperativeHandle = function (e, t, n) {
            return R.current.useImperativeHandle(e, t, n);
          }),
          (t.useInsertionEffect = function (e, t) {
            return R.current.useInsertionEffect(e, t);
          }),
          (t.useLayoutEffect = function (e, t) {
            return R.current.useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return R.current.useMemo(e, t);
          }),
          (t.useReducer = function (e, t, n) {
            return R.current.useReducer(e, t, n);
          }),
          (t.useRef = function (e) {
            return R.current.useRef(e);
          }),
          (t.useState = function (e) {
            return R.current.useState(e);
          }),
          (t.useSyncExternalStore = function (e, t, n) {
            return R.current.useSyncExternalStore(e, t, n);
          }),
          (t.useTransition = function () {
            return R.current.useTransition();
          }),
          (t.version = "18.3.1");
      },
      5043: (e, t, n) => {
        "use strict";
        e.exports = n(4202);
      },
      579: (e, t, n) => {
        "use strict";
        e.exports = n(1153);
      },
      6766: (e, t, n) => {
        "use strict";
        (t.__esModule = !0),
          (t.default = function (e) {
            var t = (0, o.default)(e);
            return {
              getItem: function (e) {
                return new Promise(function (n, i) {
                  n(t.getItem(e));
                });
              },
              setItem: function (e, n) {
                return new Promise(function (i, o) {
                  i(t.setItem(e, n));
                });
              },
              removeItem: function (e) {
                return new Promise(function (n, i) {
                  n(t.removeItem(e));
                });
              },
            };
          });
        var i,
          o = (i = n(4004)) && i.__esModule ? i : { default: i };
      },
      4004: (e, t) => {
        "use strict";
        function n(e) {
          return (
            (n =
              "function" === typeof Symbol &&
              "symbol" === typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" === typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            n(e)
          );
        }
        function i() {}
        (t.__esModule = !0),
          (t.default = function (e) {
            var t = "".concat(e, "Storage");
            return (function (e) {
              if (
                "object" !==
                  ("undefined" === typeof self ? "undefined" : n(self)) ||
                !(e in self)
              )
                return !1;
              try {
                var t = self[e],
                  i = "redux-persist ".concat(e, " test");
                t.setItem(i, "test"), t.getItem(i), t.removeItem(i);
              } catch (o) {
                return !1;
              }
              return !0;
            })(t)
              ? self[t]
              : o;
          });
        var o = { getItem: i, setItem: i, removeItem: i };
      },
      8901: (e, t, n) => {
        "use strict";
        var i;
        t.A = void 0;
        var o = (0,
        ((i = n(6766)) && i.__esModule ? i : { default: i }).default)("local");
        t.A = o;
      },
      7234: (e, t) => {
        "use strict";
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var i = (n - 1) >>> 1,
              o = e[i];
            if (!(0 < a(o, t))) break e;
            (e[i] = t), (e[n] = o), (n = i);
          }
        }
        function i(e) {
          return 0 === e.length ? null : e[0];
        }
        function o(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var i = 0, o = e.length, s = o >>> 1; i < s; ) {
              var r = 2 * (i + 1) - 1,
                l = e[r],
                c = r + 1,
                u = e[c];
              if (0 > a(l, n))
                c < o && 0 > a(u, l)
                  ? ((e[i] = u), (e[c] = n), (i = c))
                  : ((e[i] = l), (e[r] = n), (i = r));
              else {
                if (!(c < o && 0 > a(u, n))) break e;
                (e[i] = u), (e[c] = n), (i = c);
              }
            }
          }
          return t;
        }
        function a(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if (
          "object" === typeof performance &&
          "function" === typeof performance.now
        ) {
          var s = performance;
          t.unstable_now = function () {
            return s.now();
          };
        } else {
          var r = Date,
            l = r.now();
          t.unstable_now = function () {
            return r.now() - l;
          };
        }
        var c = [],
          u = [],
          d = 1,
          h = null,
          p = 3,
          f = !1,
          g = !1,
          m = !1,
          v = "function" === typeof setTimeout ? setTimeout : null,
          b = "function" === typeof clearTimeout ? clearTimeout : null,
          x = "undefined" !== typeof setImmediate ? setImmediate : null;
        function y(e) {
          for (var t = i(u); null !== t; ) {
            if (null === t.callback) o(u);
            else {
              if (!(t.startTime <= e)) break;
              o(u), (t.sortIndex = t.expirationTime), n(c, t);
            }
            t = i(u);
          }
        }
        function w(e) {
          if (((m = !1), y(e), !g))
            if (null !== i(c)) (g = !0), I(S);
            else {
              var t = i(u);
              null !== t && N(w, t.startTime - e);
            }
        }
        function S(e, n) {
          (g = !1), m && ((m = !1), b(M), (M = -1)), (f = !0);
          var a = p;
          try {
            for (
              y(n), h = i(c);
              null !== h && (!(h.expirationTime > n) || (e && !L()));

            ) {
              var s = h.callback;
              if ("function" === typeof s) {
                (h.callback = null), (p = h.priorityLevel);
                var r = s(h.expirationTime <= n);
                (n = t.unstable_now()),
                  "function" === typeof r
                    ? (h.callback = r)
                    : h === i(c) && o(c),
                  y(n);
              } else o(c);
              h = i(c);
            }
            if (null !== h) var l = !0;
            else {
              var d = i(u);
              null !== d && N(w, d.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (h = null), (p = a), (f = !1);
          }
        }
        "undefined" !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var k,
          A = !1,
          C = null,
          M = -1,
          P = 5,
          E = -1;
        function L() {
          return !(t.unstable_now() - E < P);
        }
        function T() {
          if (null !== C) {
            var e = t.unstable_now();
            E = e;
            var n = !0;
            try {
              n = C(!0, e);
            } finally {
              n ? k() : ((A = !1), (C = null));
            }
          } else A = !1;
        }
        if ("function" === typeof x)
          k = function () {
            x(T);
          };
        else if ("undefined" !== typeof MessageChannel) {
          var O = new MessageChannel(),
            R = O.port2;
          (O.port1.onmessage = T),
            (k = function () {
              R.postMessage(null);
            });
        } else
          k = function () {
            v(T, 0);
          };
        function I(e) {
          (C = e), A || ((A = !0), k());
        }
        function N(e, n) {
          M = v(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            g || f || ((g = !0), I(S));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                )
              : (P = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return p;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return i(c);
          }),
          (t.unstable_next = function (e) {
            switch (p) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = p;
            }
            var n = p;
            p = t;
            try {
              return e();
            } finally {
              p = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = p;
            p = e;
            try {
              return t();
            } finally {
              p = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, o, a) {
            var s = t.unstable_now();
            switch (
              ("object" === typeof a && null !== a
                ? (a = "number" === typeof (a = a.delay) && 0 < a ? s + a : s)
                : (a = s),
              e)
            ) {
              case 1:
                var r = -1;
                break;
              case 2:
                r = 250;
                break;
              case 5:
                r = 1073741823;
                break;
              case 4:
                r = 1e4;
                break;
              default:
                r = 5e3;
            }
            return (
              (e = {
                id: d++,
                callback: o,
                priorityLevel: e,
                startTime: a,
                expirationTime: (r = a + r),
                sortIndex: -1,
              }),
              a > s
                ? ((e.sortIndex = a),
                  n(u, e),
                  null === i(c) &&
                    e === i(u) &&
                    (m ? (b(M), (M = -1)) : (m = !0), N(w, a - s)))
                : ((e.sortIndex = r), n(c, e), g || f || ((g = !0), I(S))),
              e
            );
          }),
          (t.unstable_shouldYield = L),
          (t.unstable_wrapCallback = function (e) {
            var t = p;
            return function () {
              var n = p;
              p = t;
              try {
                return e.apply(this, arguments);
              } finally {
                p = n;
              }
            };
          });
      },
      8853: (e, t, n) => {
        "use strict";
        e.exports = n(7234);
      },
      3895: (e, t, n) => {
        "use strict";
        var i = n(5043);
        var o =
            "function" === typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e === 1 / t)) ||
                    (e !== e && t !== t)
                  );
                },
          a = i.useSyncExternalStore,
          s = i.useRef,
          r = i.useEffect,
          l = i.useMemo,
          c = i.useDebugValue;
        t.useSyncExternalStoreWithSelector = function (e, t, n, i, u) {
          var d = s(null);
          if (null === d.current) {
            var h = { hasValue: !1, value: null };
            d.current = h;
          } else h = d.current;
          d = l(
            function () {
              function e(e) {
                if (!r) {
                  if (
                    ((r = !0), (a = e), (e = i(e)), void 0 !== u && h.hasValue)
                  ) {
                    var t = h.value;
                    if (u(t, e)) return (s = t);
                  }
                  return (s = e);
                }
                if (((t = s), o(a, e))) return t;
                var n = i(e);
                return void 0 !== u && u(t, n) ? t : ((a = e), (s = n));
              }
              var a,
                s,
                r = !1,
                l = void 0 === n ? null : n;
              return [
                function () {
                  return e(t());
                },
                null === l
                  ? void 0
                  : function () {
                      return e(l());
                    },
              ];
            },
            [t, n, i, u]
          );
          var p = a(e, d[0], d[1]);
          return (
            r(
              function () {
                (h.hasValue = !0), (h.value = p);
              },
              [p]
            ),
            c(p),
            p
          );
        };
      },
      7237: (e, t, n) => {
        "use strict";
        e.exports = n(3895);
      },
      161: (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = {};
      },
      4634: (e) => {
        function t() {
          return (
            (e.exports = t =
              Object.assign
                ? Object.assign.bind()
                : function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                      var n = arguments[t];
                      for (var i in n)
                        Object.prototype.hasOwnProperty.call(n, i) &&
                          (e[i] = n[i]);
                    }
                    return e;
                  }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports),
            t.apply(this, arguments)
          );
        }
        (e.exports = t),
          (e.exports.__esModule = !0),
          (e.exports.default = e.exports);
      },
      4994: (e) => {
        (e.exports = function (e) {
          return e && e.__esModule ? e : { default: e };
        }),
          (e.exports.__esModule = !0),
          (e.exports.default = e.exports);
      },
      4893: (e) => {
        (e.exports = function (e, t) {
          if (null == e) return {};
          var n = {};
          for (var i in e)
            if (Object.prototype.hasOwnProperty.call(e, i)) {
              if (t.indexOf(i) >= 0) continue;
              n[i] = e[i];
            }
          return n;
        }),
          (e.exports.__esModule = !0),
          (e.exports.default = e.exports);
      },
      8168: (e, t, n) => {
        "use strict";
        function i() {
          return (
            (i = Object.assign
              ? Object.assign.bind()
              : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var i in n)
                      Object.prototype.hasOwnProperty.call(n, i) &&
                        (e[i] = n[i]);
                  }
                  return e;
                }),
            i.apply(this, arguments)
          );
        }
        n.d(t, { A: () => i });
      },
      8587: (e, t, n) => {
        "use strict";
        function i(e, t) {
          if (null == e) return {};
          var n = {};
          for (var i in e)
            if (Object.prototype.hasOwnProperty.call(e, i)) {
              if (t.indexOf(i) >= 0) continue;
              n[i] = e[i];
            }
          return n;
        }
        n.d(t, { A: () => i });
      },
      8387: (e, t, n) => {
        "use strict";
        function i(e) {
          var t,
            n,
            o = "";
          if ("string" == typeof e || "number" == typeof e) o += e;
          else if ("object" == typeof e)
            if (Array.isArray(e)) {
              var a = e.length;
              for (t = 0; t < a; t++)
                e[t] && (n = i(e[t])) && (o && (o += " "), (o += n));
            } else for (n in e) e[n] && (o && (o += " "), (o += n));
          return o;
        }
        n.d(t, { A: () => o });
        const o = function () {
          for (var e, t, n = 0, o = "", a = arguments.length; n < a; n++)
            (e = arguments[n]) && (t = i(e)) && (o && (o += " "), (o += t));
          return o;
        };
      },
    },
    t = {};
  function n(i) {
    var o = t[i];
    if (void 0 !== o) return o.exports;
    var a = (t[i] = { exports: {} });
    return e[i](a, a.exports, n), a.exports;
  }
  (n.n = (e) => {
    var t = e && e.__esModule ? () => e.default : () => e;
    return n.d(t, { a: t }), t;
  }),
    (() => {
      var e,
        t = Object.getPrototypeOf
          ? (e) => Object.getPrototypeOf(e)
          : (e) => e.__proto__;
      n.t = function (i, o) {
        if ((1 & o && (i = this(i)), 8 & o)) return i;
        if ("object" === typeof i && i) {
          if (4 & o && i.__esModule) return i;
          if (16 & o && "function" === typeof i.then) return i;
        }
        var a = Object.create(null);
        n.r(a);
        var s = {};
        e = e || [null, t({}), t([]), t(t)];
        for (
          var r = 2 & o && i;
          "object" == typeof r && !~e.indexOf(r);
          r = t(r)
        )
          Object.getOwnPropertyNames(r).forEach((e) => (s[e] = () => i[e]));
        return (s.default = () => i), n.d(a, s), a;
      };
    })(),
    (n.d = (e, t) => {
      for (var i in t)
        n.o(t, i) &&
          !n.o(e, i) &&
          Object.defineProperty(e, i, { enumerable: !0, get: t[i] });
    }),
    (n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
    (n.r = (e) => {
      "undefined" !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (n.p = "/"),
    (() => {
      "use strict";
      var e = {};
      n.r(e),
        n.d(e, {
          hasBrowserEnv: () => vo,
          hasStandardBrowserEnv: () => bo,
          hasStandardBrowserWebWorkerEnv: () => yo,
          origin: () => wo,
        });
      var t = n(5043),
        i = n.t(t, 2),
        o = n(4391),
        a = n(7237),
        s = t,
        r = Symbol.for("react-redux-context"),
        l = "undefined" !== typeof globalThis ? globalThis : {};
      function c() {
        var e;
        if (!s.createContext) return {};
        const t = null !== (e = l[r]) && void 0 !== e ? e : (l[r] = new Map());
        let n = t.get(s.createContext);
        return n || ((n = s.createContext(null)), t.set(s.createContext, n)), n;
      }
      var u = c(),
        d = () => {
          throw new Error("uSES not initialized!");
        };
      function h() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : u;
        return function () {
          return s.useContext(e);
        };
      }
      var p = h(),
        f = d,
        g = (e, t) => e === t;
      function m() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : u;
        const t = e === u ? p : h(e),
          n = function (e) {
            let n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            const { equalityFn: i = g, devModeChecks: o = {} } =
              "function" === typeof n ? { equalityFn: n } : n;
            const {
                store: a,
                subscription: r,
                getServerState: l,
                stabilityCheck: c,
                identityFunctionCheck: u,
              } = t(),
              d =
                (s.useRef(!0),
                s.useCallback({ [e.name]: (t) => e(t) }[e.name], [
                  e,
                  c,
                  o.stabilityCheck,
                ])),
              h = f(r.addNestedSub, a.getState, l || a.getState, d, i);
            return s.useDebugValue(h), h;
          };
        return Object.assign(n, { withTypes: () => n }), n;
      }
      var v = m();
      Symbol.for("react.element"),
        Symbol.for("react.portal"),
        Symbol.for("react.fragment"),
        Symbol.for("react.strict_mode"),
        Symbol.for("react.profiler"),
        Symbol.for("react.provider"),
        Symbol.for("react.context"),
        Symbol.for("react.server_context"),
        Symbol.for("react.forward_ref"),
        Symbol.for("react.suspense"),
        Symbol.for("react.suspense_list"),
        Symbol.for("react.memo"),
        Symbol.for("react.lazy"),
        Symbol.for("react.offscreen"),
        Symbol.for("react.client.reference");
      function b(e) {
        e();
      }
      var x = { notify() {}, get: () => [] };
      function y(e, t) {
        let n,
          i = x,
          o = 0,
          a = !1;
        function s() {
          c.onStateChange && c.onStateChange();
        }
        function r() {
          o++,
            n ||
              ((n = t ? t.addNestedSub(s) : e.subscribe(s)),
              (i = (function () {
                let e = null,
                  t = null;
                return {
                  clear() {
                    (e = null), (t = null);
                  },
                  notify() {
                    b(() => {
                      let t = e;
                      for (; t; ) t.callback(), (t = t.next);
                    });
                  },
                  get() {
                    const t = [];
                    let n = e;
                    for (; n; ) t.push(n), (n = n.next);
                    return t;
                  },
                  subscribe(n) {
                    let i = !0;
                    const o = (t = { callback: n, next: null, prev: t });
                    return (
                      o.prev ? (o.prev.next = o) : (e = o),
                      function () {
                        i &&
                          null !== e &&
                          ((i = !1),
                          o.next ? (o.next.prev = o.prev) : (t = o.prev),
                          o.prev ? (o.prev.next = o.next) : (e = o.next));
                      }
                    );
                  },
                };
              })()));
        }
        function l() {
          o--, n && 0 === o && (n(), (n = void 0), i.clear(), (i = x));
        }
        const c = {
          addNestedSub: function (e) {
            r();
            const t = i.subscribe(e);
            let n = !1;
            return () => {
              n || ((n = !0), t(), l());
            };
          },
          notifyNestedSubs: function () {
            i.notify();
          },
          handleChangeWrapper: s,
          isSubscribed: function () {
            return a;
          },
          trySubscribe: function () {
            a || ((a = !0), r());
          },
          tryUnsubscribe: function () {
            a && ((a = !1), l());
          },
          getListeners: () => i,
        };
        return c;
      }
      var w = !(
          "undefined" === typeof window ||
          "undefined" === typeof window.document ||
          "undefined" === typeof window.document.createElement
        ),
        S =
          "undefined" !== typeof navigator &&
          "ReactNative" === navigator.product,
        k = w || S ? s.useLayoutEffect : s.useEffect;
      function A(e, t) {
        return e === t
          ? 0 !== e || 0 !== t || 1 / e === 1 / t
          : e !== e && t !== t;
      }
      function C(e, t) {
        if (A(e, t)) return !0;
        if (
          "object" !== typeof e ||
          null === e ||
          "object" !== typeof t ||
          null === t
        )
          return !1;
        const n = Object.keys(e),
          i = Object.keys(t);
        if (n.length !== i.length) return !1;
        for (let o = 0; o < n.length; o++)
          if (
            !Object.prototype.hasOwnProperty.call(t, n[o]) ||
            !A(e[n[o]], t[n[o]])
          )
            return !1;
        return !0;
      }
      Object.defineProperty,
        Object.getOwnPropertyNames,
        Object.getOwnPropertySymbols,
        Object.getOwnPropertyDescriptor,
        Object.getPrototypeOf,
        Object.prototype;
      var M = function (e) {
        let {
          store: t,
          context: n,
          children: i,
          serverState: o,
          stabilityCheck: a = "once",
          identityFunctionCheck: r = "once",
        } = e;
        const l = s.useMemo(() => {
            const e = y(t);
            return {
              store: t,
              subscription: e,
              getServerState: o ? () => o : void 0,
              stabilityCheck: a,
              identityFunctionCheck: r,
            };
          }, [t, o, a, r]),
          c = s.useMemo(() => t.getState(), [t]);
        k(() => {
          const { subscription: e } = l;
          return (
            (e.onStateChange = e.notifyNestedSubs),
            e.trySubscribe(),
            c !== t.getState() && e.notifyNestedSubs(),
            () => {
              e.tryUnsubscribe(), (e.onStateChange = void 0);
            }
          );
        }, [l, c]);
        const d = n || u;
        return s.createElement(d.Provider, { value: l }, i);
      };
      function P() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : u;
        const t = e === u ? p : h(e),
          n = () => {
            const { store: e } = t();
            return e;
          };
        return Object.assign(n, { withTypes: () => n }), n;
      }
      var E = P();
      function L() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : u;
        const t = e === u ? E : P(e),
          n = () => t().dispatch;
        return Object.assign(n, { withTypes: () => n }), n;
      }
      var T,
        O = L(),
        R = b;
      function I(e) {
        return (
          (I =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                }),
          I(e)
        );
      }
      function N(e) {
        var t = (function (e, t) {
          if ("object" != I(e) || !e) return e;
          var n = e[Symbol.toPrimitive];
          if (void 0 !== n) {
            var i = n.call(e, t || "default");
            if ("object" != I(i)) return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === t ? String : Number)(e);
        })(e, "string");
        return "symbol" == I(t) ? t : t + "";
      }
      function _(e, t, n) {
        return (
          (t = N(t)) in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function D(e) {
        return "Minified Redux error #"
          .concat(e, "; visit https://redux.js.org/Errors?code=")
          .concat(
            e,
            " for the full message or use the non-minified dev environment for full errors. "
          );
      }
      (T = a.useSyncExternalStoreWithSelector),
        (f = T),
        ((e) => {
          e;
        })(t.useSyncExternalStore);
      var z = (() =>
          ("function" === typeof Symbol && Symbol.observable) ||
          "@@observable")(),
        j = () => Math.random().toString(36).substring(7).split("").join("."),
        B = {
          INIT: "@@redux/INIT".concat(j()),
          REPLACE: "@@redux/REPLACE".concat(j()),
          PROBE_UNKNOWN_ACTION: () =>
            "@@redux/PROBE_UNKNOWN_ACTION".concat(j()),
        };
      function F(e) {
        if ("object" !== typeof e || null === e) return !1;
        let t = e;
        for (; null !== Object.getPrototypeOf(t); )
          t = Object.getPrototypeOf(t);
        return (
          Object.getPrototypeOf(e) === t || null === Object.getPrototypeOf(e)
        );
      }
      function W(e, t, n) {
        if ("function" !== typeof e) throw new Error(D(2));
        if (
          ("function" === typeof t && "function" === typeof n) ||
          ("function" === typeof n && "function" === typeof arguments[3])
        )
          throw new Error(D(0));
        if (
          ("function" === typeof t &&
            "undefined" === typeof n &&
            ((n = t), (t = void 0)),
          "undefined" !== typeof n)
        ) {
          if ("function" !== typeof n) throw new Error(D(1));
          return n(W)(e, t);
        }
        let i = e,
          o = t,
          a = new Map(),
          s = a,
          r = 0,
          l = !1;
        function c() {
          s === a &&
            ((s = new Map()),
            a.forEach((e, t) => {
              s.set(t, e);
            }));
        }
        function u() {
          if (l) throw new Error(D(3));
          return o;
        }
        function d(e) {
          if ("function" !== typeof e) throw new Error(D(4));
          if (l) throw new Error(D(5));
          let t = !0;
          c();
          const n = r++;
          return (
            s.set(n, e),
            function () {
              if (t) {
                if (l) throw new Error(D(6));
                (t = !1), c(), s.delete(n), (a = null);
              }
            }
          );
        }
        function h(e) {
          if (!F(e)) throw new Error(D(7));
          if ("undefined" === typeof e.type) throw new Error(D(8));
          if ("string" !== typeof e.type) throw new Error(D(17));
          if (l) throw new Error(D(9));
          try {
            (l = !0), (o = i(o, e));
          } finally {
            l = !1;
          }
          return (
            (a = s).forEach((e) => {
              e();
            }),
            e
          );
        }
        h({ type: B.INIT });
        return {
          dispatch: h,
          subscribe: d,
          getState: u,
          replaceReducer: function (e) {
            if ("function" !== typeof e) throw new Error(D(10));
            (i = e), h({ type: B.REPLACE });
          },
          [z]: function () {
            const e = d;
            return {
              subscribe(t) {
                if ("object" !== typeof t || null === t) throw new Error(D(11));
                function n() {
                  const e = t;
                  e.next && e.next(u());
                }
                n();
                return { unsubscribe: e(n) };
              },
              [z]() {
                return this;
              },
            };
          },
        };
      }
      function H(e) {
        const t = Object.keys(e),
          n = {};
        for (let s = 0; s < t.length; s++) {
          const i = t[s];
          0, "function" === typeof e[i] && (n[i] = e[i]);
        }
        const i = Object.keys(n);
        let o;
        try {
          !(function (e) {
            Object.keys(e).forEach((t) => {
              const n = e[t];
              if ("undefined" === typeof n(void 0, { type: B.INIT }))
                throw new Error(D(12));
              if (
                "undefined" ===
                typeof n(void 0, { type: B.PROBE_UNKNOWN_ACTION() })
              )
                throw new Error(D(13));
            });
          })(n);
        } catch (a) {
          o = a;
        }
        return function () {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments.length > 1 ? arguments[1] : void 0;
          if (o) throw o;
          let a = !1;
          const s = {};
          for (let o = 0; o < i.length; o++) {
            const r = i[o],
              l = n[r],
              c = e[r],
              u = l(c, t);
            if ("undefined" === typeof u) {
              t && t.type;
              throw new Error(D(14));
            }
            (s[r] = u), (a = a || u !== c);
          }
          return (a = a || i.length !== Object.keys(e).length), a ? s : e;
        };
      }
      function G() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return 0 === t.length
          ? (e) => e
          : 1 === t.length
          ? t[0]
          : t.reduce(
              (e, t) =>
                function () {
                  return e(t(...arguments));
                }
            );
      }
      function V(e) {
        return F(e) && "type" in e && "string" === typeof e.type;
      }
      function U(e) {
        return (t) => {
          let { dispatch: n, getState: i } = t;
          return (t) => (o) => "function" === typeof o ? o(n, i, e) : t(o);
        };
      }
      var Y = U(),
        X = U,
        K = Symbol.for("immer-nothing"),
        q = Symbol.for("immer-draftable"),
        Z = Symbol.for("immer-state");
      function Q(e) {
        throw new Error(
          "[Immer] minified error nr: ".concat(
            e,
            ". Full error at: https://bit.ly/3cXEKWf"
          )
        );
      }
      var $ = Object.getPrototypeOf;
      function J(e) {
        return !!e && !!e[Z];
      }
      function ee(e) {
        var t;
        return (
          !!e &&
          (ne(e) ||
            Array.isArray(e) ||
            !!e[q] ||
            !(null === (t = e.constructor) || void 0 === t || !t[q]) ||
            le(e) ||
            ce(e))
        );
      }
      var te = Object.prototype.constructor.toString();
      function ne(e) {
        if (!e || "object" !== typeof e) return !1;
        const t = $(e);
        if (null === t) return !0;
        const n = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
        return (
          n === Object ||
          ("function" == typeof n && Function.toString.call(n) === te)
        );
      }
      function ie(e, t) {
        0 === oe(e)
          ? Reflect.ownKeys(e).forEach((n) => {
              t(n, e[n], e);
            })
          : e.forEach((n, i) => t(i, n, e));
      }
      function oe(e) {
        const t = e[Z];
        return t ? t.type_ : Array.isArray(e) ? 1 : le(e) ? 2 : ce(e) ? 3 : 0;
      }
      function ae(e, t) {
        return 2 === oe(e)
          ? e.has(t)
          : Object.prototype.hasOwnProperty.call(e, t);
      }
      function se(e, t) {
        return 2 === oe(e) ? e.get(t) : e[t];
      }
      function re(e, t, n) {
        const i = oe(e);
        2 === i ? e.set(t, n) : 3 === i ? e.add(n) : (e[t] = n);
      }
      function le(e) {
        return e instanceof Map;
      }
      function ce(e) {
        return e instanceof Set;
      }
      function ue(e) {
        return e.copy_ || e.base_;
      }
      function de(e, t) {
        if (le(e)) return new Map(e);
        if (ce(e)) return new Set(e);
        if (Array.isArray(e)) return Array.prototype.slice.call(e);
        const n = ne(e);
        if (!0 === t || ("class_only" === t && !n)) {
          const t = Object.getOwnPropertyDescriptors(e);
          delete t[Z];
          let n = Reflect.ownKeys(t);
          for (let i = 0; i < n.length; i++) {
            const o = n[i],
              a = t[o];
            !1 === a.writable && ((a.writable = !0), (a.configurable = !0)),
              (a.get || a.set) &&
                (t[o] = {
                  configurable: !0,
                  writable: !0,
                  enumerable: a.enumerable,
                  value: e[o],
                });
          }
          return Object.create($(e), t);
        }
        {
          const t = $(e);
          if (null !== t && n) return { ...e };
          const i = Object.create(t);
          return Object.assign(i, e);
        }
      }
      function he(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return (
          fe(e) ||
            J(e) ||
            !ee(e) ||
            (oe(e) > 1 && (e.set = e.add = e.clear = e.delete = pe),
            Object.freeze(e),
            t &&
              Object.entries(e).forEach((e) => {
                let [t, n] = e;
                return he(n, !0);
              })),
          e
        );
      }
      function pe() {
        Q(2);
      }
      function fe(e) {
        return Object.isFrozen(e);
      }
      var ge,
        me = {};
      function ve(e) {
        const t = me[e];
        return t || Q(0), t;
      }
      function be(e, t) {
        me[e] || (me[e] = t);
      }
      function xe() {
        return ge;
      }
      function ye(e, t) {
        t &&
          (ve("Patches"),
          (e.patches_ = []),
          (e.inversePatches_ = []),
          (e.patchListener_ = t));
      }
      function we(e) {
        Se(e), e.drafts_.forEach(Ae), (e.drafts_ = null);
      }
      function Se(e) {
        e === ge && (ge = e.parent_);
      }
      function ke(e) {
        return (ge = {
          drafts_: [],
          parent_: ge,
          immer_: e,
          canAutoFreeze_: !0,
          unfinalizedDrafts_: 0,
        });
      }
      function Ae(e) {
        const t = e[Z];
        0 === t.type_ || 1 === t.type_ ? t.revoke_() : (t.revoked_ = !0);
      }
      function Ce(e, t) {
        t.unfinalizedDrafts_ = t.drafts_.length;
        const n = t.drafts_[0];
        return (
          void 0 !== e && e !== n
            ? (n[Z].modified_ && (we(t), Q(4)),
              ee(e) && ((e = Me(t, e)), t.parent_ || Ee(t, e)),
              t.patches_ &&
                ve("Patches").generateReplacementPatches_(
                  n[Z].base_,
                  e,
                  t.patches_,
                  t.inversePatches_
                ))
            : (e = Me(t, n, [])),
          we(t),
          t.patches_ && t.patchListener_(t.patches_, t.inversePatches_),
          e !== K ? e : void 0
        );
      }
      function Me(e, t, n) {
        if (fe(t)) return t;
        const i = t[Z];
        if (!i) return ie(t, (o, a) => Pe(e, i, t, o, a, n)), t;
        if (i.scope_ !== e) return t;
        if (!i.modified_) return Ee(e, i.base_, !0), i.base_;
        if (!i.finalized_) {
          (i.finalized_ = !0), i.scope_.unfinalizedDrafts_--;
          const t = i.copy_;
          let o = t,
            a = !1;
          3 === i.type_ && ((o = new Set(t)), t.clear(), (a = !0)),
            ie(o, (o, s) => Pe(e, i, t, o, s, n, a)),
            Ee(e, t, !1),
            n &&
              e.patches_ &&
              ve("Patches").generatePatches_(
                i,
                n,
                e.patches_,
                e.inversePatches_
              );
        }
        return i.copy_;
      }
      function Pe(e, t, n, i, o, a, s) {
        if (J(o)) {
          const s = Me(
            e,
            o,
            a && t && 3 !== t.type_ && !ae(t.assigned_, i)
              ? a.concat(i)
              : void 0
          );
          if ((re(n, i, s), !J(s))) return;
          e.canAutoFreeze_ = !1;
        } else s && n.add(o);
        if (ee(o) && !fe(o)) {
          if (!e.immer_.autoFreeze_ && e.unfinalizedDrafts_ < 1) return;
          Me(e, o),
            (t && t.scope_.parent_) ||
              "symbol" === typeof i ||
              !Object.prototype.propertyIsEnumerable.call(n, i) ||
              Ee(e, o);
        }
      }
      function Ee(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        !e.parent_ && e.immer_.autoFreeze_ && e.canAutoFreeze_ && he(t, n);
      }
      var Le = {
          get(e, t) {
            if (t === Z) return e;
            const n = ue(e);
            if (!ae(n, t))
              return (function (e, t, n) {
                var i;
                const o = Re(t, n);
                return o
                  ? "value" in o
                    ? o.value
                    : null === (i = o.get) || void 0 === i
                    ? void 0
                    : i.call(e.draft_)
                  : void 0;
              })(e, n, t);
            const i = n[t];
            return e.finalized_ || !ee(i)
              ? i
              : i === Oe(e.base_, t)
              ? (Ne(e), (e.copy_[t] = _e(i, e)))
              : i;
          },
          has: (e, t) => t in ue(e),
          ownKeys: (e) => Reflect.ownKeys(ue(e)),
          set(e, t, n) {
            const i = Re(ue(e), t);
            if (null !== i && void 0 !== i && i.set)
              return i.set.call(e.draft_, n), !0;
            if (!e.modified_) {
              const i = Oe(ue(e), t),
                s = null === i || void 0 === i ? void 0 : i[Z];
              if (s && s.base_ === n)
                return (e.copy_[t] = n), (e.assigned_[t] = !1), !0;
              if (
                ((o = n) === (a = i)
                  ? 0 !== o || 1 / o === 1 / a
                  : o !== o && a !== a) &&
                (void 0 !== n || ae(e.base_, t))
              )
                return !0;
              Ne(e), Ie(e);
            }
            var o, a;
            return (
              (e.copy_[t] === n && (void 0 !== n || t in e.copy_)) ||
                (Number.isNaN(n) && Number.isNaN(e.copy_[t])) ||
                ((e.copy_[t] = n), (e.assigned_[t] = !0)),
              !0
            );
          },
          deleteProperty: (e, t) => (
            void 0 !== Oe(e.base_, t) || t in e.base_
              ? ((e.assigned_[t] = !1), Ne(e), Ie(e))
              : delete e.assigned_[t],
            e.copy_ && delete e.copy_[t],
            !0
          ),
          getOwnPropertyDescriptor(e, t) {
            const n = ue(e),
              i = Reflect.getOwnPropertyDescriptor(n, t);
            return i
              ? {
                  writable: !0,
                  configurable: 1 !== e.type_ || "length" !== t,
                  enumerable: i.enumerable,
                  value: n[t],
                }
              : i;
          },
          defineProperty() {
            Q(11);
          },
          getPrototypeOf: (e) => $(e.base_),
          setPrototypeOf() {
            Q(12);
          },
        },
        Te = {};
      function Oe(e, t) {
        const n = e[Z];
        return (n ? ue(n) : e)[t];
      }
      function Re(e, t) {
        if (!(t in e)) return;
        let n = $(e);
        for (; n; ) {
          const e = Object.getOwnPropertyDescriptor(n, t);
          if (e) return e;
          n = $(n);
        }
      }
      function Ie(e) {
        e.modified_ || ((e.modified_ = !0), e.parent_ && Ie(e.parent_));
      }
      function Ne(e) {
        e.copy_ ||
          (e.copy_ = de(e.base_, e.scope_.immer_.useStrictShallowCopy_));
      }
      ie(Le, (e, t) => {
        Te[e] = function () {
          return (arguments[0] = arguments[0][0]), t.apply(this, arguments);
        };
      }),
        (Te.deleteProperty = function (e, t) {
          return Te.set.call(this, e, t, void 0);
        }),
        (Te.set = function (e, t, n) {
          return Le.set.call(this, e[0], t, n, e[0]);
        });
      function _e(e, t) {
        const n = le(e)
          ? ve("MapSet").proxyMap_(e, t)
          : ce(e)
          ? ve("MapSet").proxySet_(e, t)
          : (function (e, t) {
              const n = Array.isArray(e),
                i = {
                  type_: n ? 1 : 0,
                  scope_: t ? t.scope_ : xe(),
                  modified_: !1,
                  finalized_: !1,
                  assigned_: {},
                  parent_: t,
                  base_: e,
                  draft_: null,
                  copy_: null,
                  revoke_: null,
                  isManual_: !1,
                };
              let o = i,
                a = Le;
              n && ((o = [i]), (a = Te));
              const { revoke: s, proxy: r } = Proxy.revocable(o, a);
              return (i.draft_ = r), (i.revoke_ = s), r;
            })(e, t);
        return (t ? t.scope_ : xe()).drafts_.push(n), n;
      }
      function De(e) {
        if (!ee(e) || fe(e)) return e;
        const t = e[Z];
        let n;
        if (t) {
          if (!t.modified_) return t.base_;
          (t.finalized_ = !0),
            (n = de(e, t.scope_.immer_.useStrictShallowCopy_));
        } else n = de(e, !0);
        return (
          ie(n, (e, t) => {
            re(n, e, De(t));
          }),
          t && (t.finalized_ = !1),
          n
        );
      }
      function ze() {
        const e = "replace",
          t = "add",
          n = "remove";
        function i(e) {
          if (!ee(e)) return e;
          if (Array.isArray(e)) return e.map(i);
          if (le(e))
            return new Map(
              Array.from(e.entries()).map((e) => {
                let [t, n] = e;
                return [t, i(n)];
              })
            );
          if (ce(e)) return new Set(Array.from(e).map(i));
          const t = Object.create($(e));
          for (const n in e) t[n] = i(e[n]);
          return ae(e, q) && (t[q] = e[q]), t;
        }
        function o(e) {
          return J(e) ? i(e) : e;
        }
        be("Patches", {
          applyPatches_: function (o, a) {
            return (
              a.forEach((a) => {
                const { path: s, op: r } = a;
                let l = o;
                for (let e = 0; e < s.length - 1; e++) {
                  const t = oe(l);
                  let n = s[e];
                  "string" !== typeof n &&
                    "number" !== typeof n &&
                    (n = "" + n),
                    (0 !== t && 1 !== t) ||
                      ("__proto__" !== n && "constructor" !== n) ||
                      Q(19),
                    "function" === typeof l && "prototype" === n && Q(19),
                    (l = se(l, n)),
                    "object" !== typeof l && Q(18, s.join("/"));
                }
                const c = oe(l),
                  u = i(a.value),
                  d = s[s.length - 1];
                switch (r) {
                  case e:
                    switch (c) {
                      case 2:
                        return l.set(d, u);
                      case 3:
                        Q(16);
                      default:
                        return (l[d] = u);
                    }
                  case t:
                    switch (c) {
                      case 1:
                        return "-" === d ? l.push(u) : l.splice(d, 0, u);
                      case 2:
                        return l.set(d, u);
                      case 3:
                        return l.add(u);
                      default:
                        return (l[d] = u);
                    }
                  case n:
                    switch (c) {
                      case 1:
                        return l.splice(d, 1);
                      case 2:
                        return l.delete(d);
                      case 3:
                        return l.delete(a.value);
                      default:
                        return delete l[d];
                    }
                  default:
                    Q(17);
                }
              }),
              o
            );
          },
          generatePatches_: function (i, a, s, r) {
            switch (i.type_) {
              case 0:
              case 2:
                return (function (i, a, s, r) {
                  const { base_: l, copy_: c } = i;
                  ie(i.assigned_, (i, u) => {
                    const d = se(l, i),
                      h = se(c, i),
                      p = u ? (ae(l, i) ? e : t) : n;
                    if (d === h && p === e) return;
                    const f = a.concat(i);
                    s.push(
                      p === n
                        ? { op: p, path: f }
                        : { op: p, path: f, value: h }
                    ),
                      r.push(
                        p === t
                          ? { op: n, path: f }
                          : p === n
                          ? { op: t, path: f, value: o(d) }
                          : { op: e, path: f, value: o(d) }
                      );
                  });
                })(i, a, s, r);
              case 1:
                return (function (i, a, s, r) {
                  let { base_: l, assigned_: c } = i,
                    u = i.copy_;
                  u.length < l.length && (([l, u] = [u, l]), ([s, r] = [r, s]));
                  for (let t = 0; t < l.length; t++)
                    if (c[t] && u[t] !== l[t]) {
                      const n = a.concat([t]);
                      s.push({ op: e, path: n, value: o(u[t]) }),
                        r.push({ op: e, path: n, value: o(l[t]) });
                    }
                  for (let e = l.length; e < u.length; e++) {
                    const n = a.concat([e]);
                    s.push({ op: t, path: n, value: o(u[e]) });
                  }
                  for (let e = u.length - 1; l.length <= e; --e) {
                    const t = a.concat([e]);
                    r.push({ op: n, path: t });
                  }
                })(i, a, s, r);
              case 3:
                return (function (e, i, o, a) {
                  let { base_: s, copy_: r } = e,
                    l = 0;
                  s.forEach((e) => {
                    if (!r.has(e)) {
                      const s = i.concat([l]);
                      o.push({ op: n, path: s, value: e }),
                        a.unshift({ op: t, path: s, value: e });
                    }
                    l++;
                  }),
                    (l = 0),
                    r.forEach((e) => {
                      if (!s.has(e)) {
                        const s = i.concat([l]);
                        o.push({ op: t, path: s, value: e }),
                          a.unshift({ op: n, path: s, value: e });
                      }
                      l++;
                    });
                })(i, a, s, r);
            }
          },
          generateReplacementPatches_: function (t, n, i, o) {
            i.push({ op: e, path: [], value: n === K ? void 0 : n }),
              o.push({ op: e, path: [], value: t });
          },
        });
      }
      var je = new (class {
          constructor(e) {
            var t = this;
            (this.autoFreeze_ = !0),
              (this.useStrictShallowCopy_ = !1),
              (this.produce = (e, t, n) => {
                if ("function" === typeof e && "function" !== typeof t) {
                  const n = t;
                  t = e;
                  const i = this;
                  return function () {
                    let e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : n;
                    for (
                      var o = arguments.length,
                        a = new Array(o > 1 ? o - 1 : 0),
                        s = 1;
                      s < o;
                      s++
                    )
                      a[s - 1] = arguments[s];
                    return i.produce(e, (e) => t.call(this, e, ...a));
                  };
                }
                let i;
                if (
                  ("function" !== typeof t && Q(6),
                  void 0 !== n && "function" !== typeof n && Q(7),
                  ee(e))
                ) {
                  const o = ke(this),
                    a = _e(e, void 0);
                  let s = !0;
                  try {
                    (i = t(a)), (s = !1);
                  } finally {
                    s ? we(o) : Se(o);
                  }
                  return ye(o, n), Ce(i, o);
                }
                if (!e || "object" !== typeof e) {
                  if (
                    ((i = t(e)),
                    void 0 === i && (i = e),
                    i === K && (i = void 0),
                    this.autoFreeze_ && he(i, !0),
                    n)
                  ) {
                    const t = [],
                      o = [];
                    ve("Patches").generateReplacementPatches_(e, i, t, o),
                      n(t, o);
                  }
                  return i;
                }
                Q(1);
              }),
              (this.produceWithPatches = (e, n) => {
                if ("function" === typeof e)
                  return function (n) {
                    for (
                      var i = arguments.length,
                        o = new Array(i > 1 ? i - 1 : 0),
                        a = 1;
                      a < i;
                      a++
                    )
                      o[a - 1] = arguments[a];
                    return t.produceWithPatches(n, (t) => e(t, ...o));
                  };
                let i, o;
                return [
                  this.produce(e, n, (e, t) => {
                    (i = e), (o = t);
                  }),
                  i,
                  o,
                ];
              }),
              "boolean" ===
                typeof (null === e || void 0 === e ? void 0 : e.autoFreeze) &&
                this.setAutoFreeze(e.autoFreeze),
              "boolean" ===
                typeof (null === e || void 0 === e
                  ? void 0
                  : e.useStrictShallowCopy) &&
                this.setUseStrictShallowCopy(e.useStrictShallowCopy);
          }
          createDraft(e) {
            ee(e) || Q(8),
              J(e) &&
                (e = (function (e) {
                  J(e) || Q(10);
                  return De(e);
                })(e));
            const t = ke(this),
              n = _e(e, void 0);
            return (n[Z].isManual_ = !0), Se(t), n;
          }
          finishDraft(e, t) {
            const n = e && e[Z];
            (n && n.isManual_) || Q(9);
            const { scope_: i } = n;
            return ye(i, t), Ce(void 0, i);
          }
          setAutoFreeze(e) {
            this.autoFreeze_ = e;
          }
          setUseStrictShallowCopy(e) {
            this.useStrictShallowCopy_ = e;
          }
          applyPatches(e, t) {
            let n;
            for (n = t.length - 1; n >= 0; n--) {
              const i = t[n];
              if (0 === i.path.length && "replace" === i.op) {
                e = i.value;
                break;
              }
            }
            n > -1 && (t = t.slice(n + 1));
            const i = ve("Patches").applyPatches_;
            return J(e) ? i(e, t) : this.produce(e, (e) => i(e, t));
          }
        })(),
        Be = je.produce,
        Fe = je.produceWithPatches.bind(je),
        We =
          (je.setAutoFreeze.bind(je),
          je.setUseStrictShallowCopy.bind(je),
          je.applyPatches.bind(je));
      je.createDraft.bind(je), je.finishDraft.bind(je);
      var He =
          "undefined" !== typeof window &&
          window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
            ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
            : function () {
                if (0 !== arguments.length)
                  return "object" === typeof arguments[0]
                    ? G
                    : G.apply(null, arguments);
              },
        Ge =
          ("undefined" !== typeof window &&
            window.__REDUX_DEVTOOLS_EXTENSION__ &&
            window.__REDUX_DEVTOOLS_EXTENSION__,
          (e) => e && "function" === typeof e.match);
      function Ve(e, t) {
        function n() {
          if (t) {
            let n = t(...arguments);
            if (!n) throw new Error(Tt(0));
            return {
              type: e,
              payload: n.payload,
              ...("meta" in n && { meta: n.meta }),
              ...("error" in n && { error: n.error }),
            };
          }
          return {
            type: e,
            payload: arguments.length <= 0 ? void 0 : arguments[0],
          };
        }
        return (
          (n.toString = () => "".concat(e)),
          (n.type = e),
          (n.match = (t) => V(t) && t.type === e),
          n
        );
      }
      var Ue = class e extends Array {
        constructor() {
          super(...arguments), Object.setPrototypeOf(this, e.prototype);
        }
        static get [Symbol.species]() {
          return e;
        }
        concat() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return super.concat.apply(this, t);
        }
        prepend() {
          for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
            n[i] = arguments[i];
          return 1 === n.length && Array.isArray(n[0])
            ? new e(...n[0].concat(this))
            : new e(...n.concat(this));
        }
      };
      function Ye(e) {
        return ee(e) ? Be(e, () => {}) : e;
      }
      function Xe(e, t, n) {
        if (e.has(t)) {
          let i = e.get(t);
          return n.update && ((i = n.update(i, t, e)), e.set(t, i)), i;
        }
        if (!n.insert) throw new Error(Tt(10));
        const i = n.insert(t, e);
        return e.set(t, i), i;
      }
      var Ke = "RTK_autoBatch",
        qe = () => (e) => ({ payload: e, meta: { [Ke]: !0 } }),
        Ze = (e) => (t) => {
          setTimeout(t, e);
        },
        Qe =
          "undefined" !== typeof window && window.requestAnimationFrame
            ? window.requestAnimationFrame
            : Ze(10),
        $e = (e) =>
          function (t) {
            const { autoBatch: n = !0 } = null !== t && void 0 !== t ? t : {};
            let i = new Ue(e);
            return (
              n &&
                i.push(
                  (function () {
                    let e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : { type: "raf" };
                    return (t) =>
                      function () {
                        const n = t(...arguments);
                        let i = !0,
                          o = !1,
                          a = !1;
                        const s = new Set(),
                          r =
                            "tick" === e.type
                              ? queueMicrotask
                              : "raf" === e.type
                              ? Qe
                              : "callback" === e.type
                              ? e.queueNotification
                              : Ze(e.timeout),
                          l = () => {
                            (a = !1), o && ((o = !1), s.forEach((e) => e()));
                          };
                        return Object.assign({}, n, {
                          subscribe(e) {
                            const t = n.subscribe(() => i && e());
                            return (
                              s.add(e),
                              () => {
                                t(), s.delete(e);
                              }
                            );
                          },
                          dispatch(e) {
                            try {
                              var t;
                              return (
                                (i = !(
                                  null !== e &&
                                  void 0 !== e &&
                                  null !== (t = e.meta) &&
                                  void 0 !== t &&
                                  t[Ke]
                                )),
                                (o = !i),
                                o && (a || ((a = !0), r(l))),
                                n.dispatch(e)
                              );
                            } finally {
                              i = !0;
                            }
                          },
                        });
                      };
                  })("object" === typeof n ? n : void 0)
                ),
              i
            );
          };
      function Je(e) {
        const t = {},
          n = [];
        let i;
        const o = {
          addCase(e, n) {
            const i = "string" === typeof e ? e : e.type;
            if (!i) throw new Error(Tt(28));
            if (i in t) throw new Error(Tt(29));
            return (t[i] = n), o;
          },
          addMatcher: (e, t) => (n.push({ matcher: e, reducer: t }), o),
          addDefaultCase: (e) => ((i = e), o),
        };
        return e(o), [t, n, i];
      }
      var et = (e, t) => (Ge(e) ? e.match(t) : e(t));
      function tt() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return (e) => t.some((t) => et(t, e));
      }
      function nt() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return (e) => t.every((t) => et(t, e));
      }
      function it(e, t) {
        if (!e || !e.meta) return !1;
        const n = "string" === typeof e.meta.requestId,
          i = t.indexOf(e.meta.requestStatus) > -1;
        return n && i;
      }
      function ot(e) {
        return (
          "function" === typeof e[0] &&
          "pending" in e[0] &&
          "fulfilled" in e[0] &&
          "rejected" in e[0]
        );
      }
      function at() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return 0 === t.length
          ? (e) => it(e, ["pending"])
          : ot(t)
          ? tt(...t.map((e) => e.pending))
          : at()(t[0]);
      }
      function st() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return 0 === t.length
          ? (e) => it(e, ["rejected"])
          : ot(t)
          ? tt(...t.map((e) => e.rejected))
          : st()(t[0]);
      }
      function rt() {
        const e = (e) => e && e.meta && e.meta.rejectedWithValue;
        for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
          n[i] = arguments[i];
        return 0 === n.length || ot(n) ? nt(st(...n), e) : rt()(n[0]);
      }
      function lt() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return 0 === t.length
          ? (e) => it(e, ["fulfilled"])
          : ot(t)
          ? tt(...t.map((e) => e.fulfilled))
          : lt()(t[0]);
      }
      function ct() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return 0 === t.length
          ? (e) => it(e, ["pending", "fulfilled", "rejected"])
          : ot(t)
          ? tt(...t.flatMap((e) => [e.pending, e.rejected, e.fulfilled]))
          : ct()(t[0]);
      }
      var ut = function () {
          let e = "",
            t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : 21;
          for (; t--; )
            e +=
              "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"[
                (64 * Math.random()) | 0
              ];
          return e;
        },
        dt = ["name", "message", "stack", "code"],
        ht = class {
          constructor(e, t) {
            _(this, "_type", void 0), (this.payload = e), (this.meta = t);
          }
        },
        pt = class {
          constructor(e, t) {
            _(this, "_type", void 0), (this.payload = e), (this.meta = t);
          }
        },
        ft = (e) => {
          if ("object" === typeof e && null !== e) {
            const t = {};
            for (const n of dt) "string" === typeof e[n] && (t[n] = e[n]);
            return t;
          }
          return { message: String(e) };
        },
        gt = (() => {
          function e(e, t, n) {
            const i = Ve(e + "/fulfilled", (e, t, n, i) => ({
                payload: e,
                meta: {
                  ...(i || {}),
                  arg: n,
                  requestId: t,
                  requestStatus: "fulfilled",
                },
              })),
              o = Ve(e + "/pending", (e, t, n) => ({
                payload: void 0,
                meta: {
                  ...(n || {}),
                  arg: t,
                  requestId: e,
                  requestStatus: "pending",
                },
              })),
              a = Ve(e + "/rejected", (e, t, i, o, a) => ({
                payload: o,
                error: ((n && n.serializeError) || ft)(e || "Rejected"),
                meta: {
                  ...(a || {}),
                  arg: i,
                  requestId: t,
                  rejectedWithValue: !!o,
                  requestStatus: "rejected",
                  aborted:
                    "AbortError" ===
                    (null === e || void 0 === e ? void 0 : e.name),
                  condition:
                    "ConditionError" ===
                    (null === e || void 0 === e ? void 0 : e.name),
                },
              }));
            return Object.assign(
              function (e) {
                return (s, r, l) => {
                  const c =
                      null !== n && void 0 !== n && n.idGenerator
                        ? n.idGenerator(e)
                        : ut(),
                    u = new AbortController();
                  let d, h;
                  function p(e) {
                    (h = e), u.abort();
                  }
                  const f = (async function () {
                    let f;
                    try {
                      var g, m;
                      let a =
                        null === n ||
                        void 0 === n ||
                        null === (g = n.condition) ||
                        void 0 === g
                          ? void 0
                          : g.call(n, e, { getState: r, extra: l });
                      if (
                        (null !== (v = a) &&
                          "object" === typeof v &&
                          "function" === typeof v.then &&
                          (a = await a),
                        !1 === a || u.signal.aborted)
                      )
                        throw {
                          name: "ConditionError",
                          message:
                            "Aborted due to condition callback returning false.",
                        };
                      const b = new Promise((e, t) => {
                        (d = () => {
                          t({ name: "AbortError", message: h || "Aborted" });
                        }),
                          u.signal.addEventListener("abort", d);
                      });
                      s(
                        o(
                          c,
                          e,
                          null === n ||
                            void 0 === n ||
                            null === (m = n.getPendingMeta) ||
                            void 0 === m
                            ? void 0
                            : m.call(
                                n,
                                { requestId: c, arg: e },
                                { getState: r, extra: l }
                              )
                        )
                      ),
                        (f = await Promise.race([
                          b,
                          Promise.resolve(
                            t(e, {
                              dispatch: s,
                              getState: r,
                              extra: l,
                              requestId: c,
                              signal: u.signal,
                              abort: p,
                              rejectWithValue: (e, t) => new ht(e, t),
                              fulfillWithValue: (e, t) => new pt(e, t),
                            })
                          ).then((t) => {
                            if (t instanceof ht) throw t;
                            return t instanceof pt
                              ? i(t.payload, c, e, t.meta)
                              : i(t, c, e);
                          }),
                        ]));
                    } catch (b) {
                      f =
                        b instanceof ht
                          ? a(null, c, e, b.payload, b.meta)
                          : a(b, c, e);
                    } finally {
                      d && u.signal.removeEventListener("abort", d);
                    }
                    var v;
                    return (
                      (n &&
                        !n.dispatchConditionRejection &&
                        a.match(f) &&
                        f.meta.condition) ||
                        s(f),
                      f
                    );
                  })();
                  return Object.assign(f, {
                    abort: p,
                    requestId: c,
                    arg: e,
                    unwrap: () => f.then(mt),
                  });
                };
              },
              {
                pending: o,
                rejected: a,
                fulfilled: i,
                settled: tt(a, i),
                typePrefix: e,
              }
            );
          }
          return (e.withTypes = () => e), e;
        })();
      function mt(e) {
        if (e.meta && e.meta.rejectedWithValue) throw e.payload;
        if (e.error) throw e.error;
        return e.payload;
      }
      var vt = Symbol.for("rtk-slice-createasyncthunk");
      function bt(e, t) {
        return "".concat(e, "/").concat(t);
      }
      function xt() {
        var e;
        let { creators: t } =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        const n =
          null === t ||
          void 0 === t ||
          null === (e = t.asyncThunk) ||
          void 0 === e
            ? void 0
            : e[vt];
        return function (e) {
          const { name: t, reducerPath: i = t } = e;
          if (!t) throw new Error(Tt(11));
          const o =
              ("function" === typeof e.reducers
                ? e.reducers(
                    (function () {
                      function e(e, t) {
                        return {
                          _reducerDefinitionType: "asyncThunk",
                          payloadCreator: e,
                          ...t,
                        };
                      }
                      return (
                        (e.withTypes = () => e),
                        {
                          reducer: (e) =>
                            Object.assign(
                              {
                                [e.name]() {
                                  return e(...arguments);
                                },
                              }[e.name],
                              { _reducerDefinitionType: "reducer" }
                            ),
                          preparedReducer: (e, t) => ({
                            _reducerDefinitionType: "reducerWithPrepare",
                            prepare: e,
                            reducer: t,
                          }),
                          asyncThunk: e,
                        }
                      );
                    })()
                  )
                : e.reducers) || {},
            a = Object.keys(o),
            s = {
              sliceCaseReducersByName: {},
              sliceCaseReducersByType: {},
              actionCreators: {},
              sliceMatchers: [],
            },
            r = {
              addCase(e, t) {
                const n = "string" === typeof e ? e : e.type;
                if (!n) throw new Error(Tt(12));
                if (n in s.sliceCaseReducersByType) throw new Error(Tt(13));
                return (s.sliceCaseReducersByType[n] = t), r;
              },
              addMatcher: (e, t) => (
                s.sliceMatchers.push({ matcher: e, reducer: t }), r
              ),
              exposeAction: (e, t) => ((s.actionCreators[e] = t), r),
              exposeCaseReducer: (e, t) => (
                (s.sliceCaseReducersByName[e] = t), r
              ),
            };
          function l() {
            const [t = {}, n = [], i] =
                "function" === typeof e.extraReducers
                  ? Je(e.extraReducers)
                  : [e.extraReducers],
              o = { ...t, ...s.sliceCaseReducersByType };
            return (function (e, t) {
              let n,
                [i, o, a] = Je(t);
              if ("function" === typeof e) n = () => Ye(e());
              else {
                const t = Ye(e);
                n = () => t;
              }
              function s() {
                let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : n(),
                  t = arguments.length > 1 ? arguments[1] : void 0,
                  s = [
                    i[t.type],
                    ...o
                      .filter((e) => {
                        let { matcher: n } = e;
                        return n(t);
                      })
                      .map((e) => {
                        let { reducer: t } = e;
                        return t;
                      }),
                  ];
                return (
                  0 === s.filter((e) => !!e).length && (s = [a]),
                  s.reduce((e, n) => {
                    if (n) {
                      if (J(e)) {
                        const i = n(e, t);
                        return void 0 === i ? e : i;
                      }
                      if (ee(e)) return Be(e, (e) => n(e, t));
                      {
                        const i = n(e, t);
                        if (void 0 === i) {
                          if (null === e) return e;
                          throw new Error(Tt(9));
                        }
                        return i;
                      }
                    }
                    return e;
                  }, e)
                );
              }
              return (s.getInitialState = n), s;
            })(e.initialState, (e) => {
              for (let t in o) e.addCase(t, o[t]);
              for (let t of s.sliceMatchers) e.addMatcher(t.matcher, t.reducer);
              for (let t of n) e.addMatcher(t.matcher, t.reducer);
              i && e.addDefaultCase(i);
            });
          }
          a.forEach((i) => {
            const a = o[i],
              s = {
                reducerName: i,
                type: bt(t, i),
                createNotation: "function" === typeof e.reducers,
              };
            !(function (e) {
              return "asyncThunk" === e._reducerDefinitionType;
            })(a)
              ? (function (e, t, n) {
                  let i,
                    o,
                    { type: a, reducerName: s, createNotation: r } = e;
                  if ("reducer" in t) {
                    if (
                      r &&
                      !(function (e) {
                        return (
                          "reducerWithPrepare" === e._reducerDefinitionType
                        );
                      })(t)
                    )
                      throw new Error(Tt(17));
                    (i = t.reducer), (o = t.prepare);
                  } else i = t;
                  n.addCase(a, i)
                    .exposeCaseReducer(s, i)
                    .exposeAction(s, o ? Ve(a, o) : Ve(a));
                })(s, a, r)
              : (function (e, t, n, i) {
                  let { type: o, reducerName: a } = e;
                  if (!i) throw new Error(Tt(18));
                  const {
                      payloadCreator: s,
                      fulfilled: r,
                      pending: l,
                      rejected: c,
                      settled: u,
                      options: d,
                    } = t,
                    h = i(o, s, d);
                  n.exposeAction(a, h), r && n.addCase(h.fulfilled, r);
                  l && n.addCase(h.pending, l);
                  c && n.addCase(h.rejected, c);
                  u && n.addMatcher(h.settled, u);
                  n.exposeCaseReducer(a, {
                    fulfilled: r || St,
                    pending: l || St,
                    rejected: c || St,
                    settled: u || St,
                  });
                })(s, a, r, n);
          });
          const c = (e) => e,
            u = new Map();
          let d;
          function h(e, t) {
            return d || (d = l()), d(e, t);
          }
          function p() {
            return d || (d = l()), d.getInitialState();
          }
          function f(t) {
            let n =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            function i(e) {
              let i = e[t];
              return "undefined" === typeof i && n && (i = p()), i;
            }
            function o() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : c;
              const i = Xe(u, n, { insert: () => new WeakMap() });
              return Xe(i, t, {
                insert: () => {
                  const i = {};
                  for (const [a, s] of Object.entries(
                    null !== (o = e.selectors) && void 0 !== o ? o : {}
                  )) {
                    var o;
                    i[a] = yt(s, t, p, n);
                  }
                  return i;
                },
              });
            }
            return {
              reducerPath: t,
              getSelectors: o,
              get selectors() {
                return o(i);
              },
              selectSlice: i,
            };
          }
          const g = {
            name: t,
            reducer: h,
            actions: s.actionCreators,
            caseReducers: s.sliceCaseReducersByName,
            getInitialState: p,
            ...f(i),
            injectInto(e) {
              let { reducerPath: t, ...n } =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              const o = null !== t && void 0 !== t ? t : i;
              return (
                e.inject({ reducerPath: o, reducer: h }, n),
                { ...g, ...f(o, !0) }
              );
            },
          };
          return g;
        };
      }
      function yt(e, t, n, i) {
        function o(o) {
          let a = t(o);
          "undefined" === typeof a && i && (a = n());
          for (
            var s = arguments.length, r = new Array(s > 1 ? s - 1 : 0), l = 1;
            l < s;
            l++
          )
            r[l - 1] = arguments[l];
          return e(a, ...r);
        }
        return (o.unwrapped = e), o;
      }
      var wt = xt();
      function St() {}
      var kt = "listener",
        At = "completed",
        Ct = "cancelled";
      "task-".concat(Ct),
        "task-".concat(At),
        "".concat(kt, "-").concat(Ct),
        "".concat(kt, "-").concat(At);
      var { assign: Mt } = Object,
        Pt = "listenerMiddleware",
        Et = Mt(Ve("".concat(Pt, "/add")), { withTypes: () => Et }),
        Lt =
          ("".concat(Pt, "/removeAll"),
          Mt(Ve("".concat(Pt, "/remove")), { withTypes: () => Lt }));
      Symbol.for("rtk-state-proxy-original");
      function Tt(e) {
        return "Minified Redux Toolkit error #"
          .concat(e, "; visit https://redux-toolkit.js.org/Errors?code=")
          .concat(
            e,
            " for the full message or use the non-minified dev environment for full errors. "
          );
      }
      const Ot = wt({
          name: "user",
          initialState: {
            isLoggedIn: !1,
            dojoPrice: 0,
            name: "",
            email: "",
            profilePicture: "",
          },
          reducers: {
            setIsLoggedIn: (e, t) => {
              e.isLoggedIn = t.payload;
            },
            setDojoPrice: (e, t) => {
              e.dojoPrice = t.payload;
            },
            setUserInfo: (e, t) => {
              (e.name = t.payload.name),
                (e.email = t.payload.email),
                (e.profilePicture = t.payload.profilePicture);
            },
          },
        }),
        { setIsLoggedIn: Rt, setDojoPrice: It, setUserInfo: Nt } = Ot.actions,
        _t = Ot.reducer,
        Dt = wt({
          name: "compute",
          initialState: {
            continent: "Europe",
            data: {},
            totalCpuGpu: 0,
            cpu: {
              NorthAmerica: 0,
              SouthAmerica: 0,
              Europe: 0,
              Asia: 0,
              Africa: 0,
              Oceania: 0,
            },
            gpu: {
              NorthAmerica: 0,
              SouthAmerica: 0,
              Europe: 0,
              Asia: 0,
              Africa: 0,
              Oceania: 0,
            },
            homeStats: {
              totalGpu: "0",
              totalCpu: "0",
              verifiedGpu: "0",
              verifiedCpu: "0",
              availableGpu: "0",
              availableCpu: "0",
            },
            loading: !1,
          },
          reducers: {
            setComputeDataContinent: (e, t) => {
              e.continent = t.payload;
            },
            setComputeData: (e, t) => {
              const n = t.payload[0].processor;
              let i = {};
              Object.keys(n).map(
                (e) =>
                  (i[e] = { name: t.payload.processorNames[e], value: n[e] })
              ),
                console.log(i),
                (e.data = i);
            },
            setTotalCpuGpu: (e, t) => {
              e.totalCpuGpu = t.payload;
            },
            setGpu: (e, t) => {
              e.gpu = t.payload;
            },
            setCpu: (e, t) => {
              e.cpu = t.payload;
            },
            setHomeStats: (e, t) => {
              e.homeStats = t.payload;
            },
            setLoading: (e, t) => {
              e.loading = t.payload;
            },
          },
        }),
        {
          setComputeDataContinent: zt,
          setComputeData: jt,
          setTotalCpuGpu: Bt,
          setCpu: Ft,
          setGpu: Wt,
          setHomeStats: Ht,
          setLoading: Gt,
        } = Dt.actions,
        Vt = Dt.reducer;
      function Ut(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : "expected a function, instead received ".concat(typeof e);
        if ("function" !== typeof e) throw new TypeError(t);
      }
      var Yt = (e) => (Array.isArray(e) ? e : [e]);
      function Xt(e) {
        const t = Array.isArray(e[0]) ? e[0] : e;
        return (
          (function (e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "expected all items to be functions, instead received the following types: ";
            if (!e.every((e) => "function" === typeof e)) {
              const n = e
                .map((e) =>
                  "function" === typeof e
                    ? "function ".concat(e.name || "unnamed", "()")
                    : typeof e
                )
                .join(", ");
              throw new TypeError("".concat(t, "[").concat(n, "]"));
            }
          })(
            t,
            "createSelector expects all input-selectors to be functions, but received the following types: "
          ),
          t
        );
      }
      Symbol(), Object.getPrototypeOf({});
      var Kt =
          "undefined" !== typeof WeakRef
            ? WeakRef
            : class {
                constructor(e) {
                  this.value = e;
                }
                deref() {
                  return this.value;
                }
              },
        qt = 0,
        Zt = 1;
      function Qt() {
        return { s: qt, v: void 0, o: null, p: null };
      }
      function $t(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = Qt();
        const { resultEqualityCheck: i } = t;
        let o,
          a = 0;
        function s() {
          let t = n;
          const { length: s } = arguments;
          for (let e = 0, n = s; e < n; e++) {
            const n = arguments[e];
            if (
              "function" === typeof n ||
              ("object" === typeof n && null !== n)
            ) {
              let e = t.o;
              null === e && (t.o = e = new WeakMap());
              const i = e.get(n);
              void 0 === i ? ((t = Qt()), e.set(n, t)) : (t = i);
            } else {
              let e = t.p;
              null === e && (t.p = e = new Map());
              const i = e.get(n);
              void 0 === i ? ((t = Qt()), e.set(n, t)) : (t = i);
            }
          }
          const r = t;
          let l;
          if (t.s === Zt) l = t.v;
          else if (((l = e.apply(null, arguments)), a++, i)) {
            var c, u, d;
            const e =
              null !==
                (c =
                  null === (u = o) ||
                  void 0 === u ||
                  null === (d = u.deref) ||
                  void 0 === d
                    ? void 0
                    : d.call(u)) && void 0 !== c
                ? c
                : o;
            null != e && i(e, l) && ((l = e), 0 !== a && a--);
            o =
              ("object" === typeof l && null !== l) || "function" === typeof l
                ? new Kt(l)
                : l;
          }
          return (r.s = Zt), (r.v = l), l;
        }
        return (
          (s.clearCache = () => {
            (n = Qt()), s.resetResultsCount();
          }),
          (s.resultsCount = () => a),
          (s.resetResultsCount = () => {
            a = 0;
          }),
          s
        );
      }
      function Jt(e) {
        for (
          var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1;
          i < t;
          i++
        )
          n[i - 1] = arguments[i];
        const o =
            "function" === typeof e ? { memoize: e, memoizeOptions: n } : e,
          a = function () {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            let i,
              a = 0,
              s = 0,
              r = {},
              l = t.pop();
            "object" === typeof l && ((r = l), (l = t.pop())),
              Ut(
                l,
                "createSelector expects an output function after the inputs, but received: [".concat(
                  typeof l,
                  "]"
                )
              );
            const c = { ...o, ...r },
              {
                memoize: u,
                memoizeOptions: d = [],
                argsMemoize: h = $t,
                argsMemoizeOptions: p = [],
                devModeChecks: f = {},
              } = c,
              g = Yt(d),
              m = Yt(p),
              v = Xt(t),
              b = u(function () {
                return a++, l.apply(null, arguments);
              }, ...g);
            const x = h(function () {
              s++;
              const e = (function (e, t) {
                const n = [],
                  { length: i } = e;
                for (let o = 0; o < i; o++) n.push(e[o].apply(null, t));
                return n;
              })(v, arguments);
              return (i = b.apply(null, e)), i;
            }, ...m);
            return Object.assign(x, {
              resultFunc: l,
              memoizedResultFunc: b,
              dependencies: v,
              dependencyRecomputations: () => s,
              resetDependencyRecomputations: () => {
                s = 0;
              },
              lastResult: () => i,
              recomputations: () => a,
              resetRecomputations: () => {
                a = 0;
              },
              memoize: u,
              argsMemoize: h,
            });
          };
        return Object.assign(a, { withTypes: () => a }), a;
      }
      var en = Jt($t),
        tn = Object.assign(
          function (e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : en;
            !(function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : "expected an object, instead received ".concat(typeof e);
              if ("object" !== typeof e) throw new TypeError(t);
            })(
              e,
              "createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ".concat(
                typeof e
              )
            );
            const n = Object.keys(e),
              i = t(
                n.map((t) => e[t]),
                function () {
                  for (
                    var e = arguments.length, t = new Array(e), i = 0;
                    i < e;
                    i++
                  )
                    t[i] = arguments[i];
                  return t.reduce((e, t, i) => ((e[n[i]] = t), e), {});
                }
              );
            return i;
          },
          { withTypes: () => tn }
        ),
        nn = ((e) => (
          (e.uninitialized = "uninitialized"),
          (e.pending = "pending"),
          (e.fulfilled = "fulfilled"),
          (e.rejected = "rejected"),
          e
        ))(nn || {});
      var on = F;
      function an(e, t) {
        if (
          e === t ||
          !((on(e) && on(t)) || (Array.isArray(e) && Array.isArray(t)))
        )
          return t;
        const n = Object.keys(t),
          i = Object.keys(e);
        let o = n.length === i.length;
        const a = Array.isArray(t) ? [] : {};
        for (const s of n) (a[s] = an(e[s], t[s])), o && (o = e[s] === a[s]);
        return o ? e : a;
      }
      function sn(e) {
        let t = 0;
        for (const n in e) t++;
        return t;
      }
      var rn = (e) => [].concat(...e);
      function ln(e) {
        return null != e;
      }
      var cn = (e) => e.replace(/\/$/, ""),
        un = (e) => e.replace(/^\//, "");
      function dn(e, t) {
        if (!e) return t;
        if (!t) return e;
        if (
          (function (e) {
            return new RegExp("(^|:)//").test(e);
          })(t)
        )
          return t;
        const n = e.endsWith("/") || !t.startsWith("?") ? "/" : "";
        return (e = cn(e)), (t = un(t)), "".concat(e).concat(n).concat(t);
      }
      var hn = function () {
          return fetch(...arguments);
        },
        pn = (e) => e.status >= 200 && e.status <= 299,
        fn = (e) => /ion\/(vnd\.api\+)?json/.test(e.get("content-type") || "");
      function gn(e) {
        if (!F(e)) return e;
        const t = { ...e };
        for (const [n, i] of Object.entries(t)) void 0 === i && delete t[n];
        return t;
      }
      var mn = class {
        constructor(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : void 0;
          (this.value = e), (this.meta = t);
        }
      };
      var vn = Ve("__rtkq/focused"),
        bn = Ve("__rtkq/unfocused"),
        xn = Ve("__rtkq/online"),
        yn = Ve("__rtkq/offline"),
        wn = !1;
      function Sn(e) {
        return "query" === e.type;
      }
      function kn(e, t, n, i, o, a) {
        return "function" === typeof e
          ? e(t, n, i, o).map(An).map(a)
          : Array.isArray(e)
          ? e.map(An).map(a)
          : [];
      }
      function An(e) {
        return "string" === typeof e ? { type: e } : e;
      }
      var Cn = Symbol("forceQueryFn"),
        Mn = (e) => "function" === typeof e[Cn];
      function Pn(e) {
        return e;
      }
      function En(e, t, n, i) {
        return kn(
          n[e.meta.arg.endpointName][t],
          lt(e) ? e.payload : void 0,
          rt(e) ? e.payload : void 0,
          e.meta.arg.originalArgs,
          "baseQueryMeta" in e.meta ? e.meta.baseQueryMeta : void 0,
          i
        );
      }
      function Ln(e, t, n) {
        const i = e[t];
        i && n(i);
      }
      function Tn(e) {
        var t;
        return null !==
          (t = "arg" in e ? e.arg.fixedCacheKey : e.fixedCacheKey) &&
          void 0 !== t
          ? t
          : e.requestId;
      }
      function On(e, t, n) {
        const i = e[Tn(t)];
        i && n(i);
      }
      var Rn = {};
      function In(e) {
        let {
          reducerPath: t,
          queryThunk: n,
          mutationThunk: i,
          context: {
            endpointDefinitions: o,
            apiUid: a,
            extractRehydrationInfo: s,
            hasRehydrationInfo: r,
          },
          assertTagType: l,
          config: c,
        } = e;
        const u = Ve("".concat(t, "/resetApiState")),
          d = wt({
            name: "".concat(t, "/queries"),
            initialState: Rn,
            reducers: {
              removeQueryResult: {
                reducer(e, t) {
                  let {
                    payload: { queryCacheKey: n },
                  } = t;
                  delete e[n];
                },
                prepare: qe(),
              },
              queryResultPatched: {
                reducer(e, t) {
                  let {
                    payload: { queryCacheKey: n, patches: i },
                  } = t;
                  Ln(e, n, (e) => {
                    e.data = We(e.data, i.concat());
                  });
                },
                prepare: qe(),
              },
            },
            extraReducers(e) {
              e.addCase(n.pending, (e, t) => {
                var n, i;
                let {
                  meta: o,
                  meta: { arg: a },
                } = t;
                const s = Mn(a);
                (null !== (i = e[(n = a.queryCacheKey)]) && void 0 !== i) ||
                  (e[n] = {
                    status: "uninitialized",
                    endpointName: a.endpointName,
                  }),
                  Ln(e, a.queryCacheKey, (e) => {
                    (e.status = "pending"),
                      (e.requestId =
                        s && e.requestId ? e.requestId : o.requestId),
                      void 0 !== a.originalArgs &&
                        (e.originalArgs = a.originalArgs),
                      (e.startedTimeStamp = o.startedTimeStamp);
                  });
              })
                .addCase(n.fulfilled, (e, t) => {
                  let { meta: n, payload: i } = t;
                  Ln(e, n.arg.queryCacheKey, (e) => {
                    if (e.requestId !== n.requestId && !Mn(n.arg)) return;
                    const { merge: t } = o[n.arg.endpointName];
                    var a, s;
                    if (((e.status = "fulfilled"), t))
                      if (void 0 !== e.data) {
                        const {
                          fulfilledTimeStamp: o,
                          arg: a,
                          baseQueryMeta: s,
                          requestId: r,
                        } = n;
                        let l = Be(e.data, (e) =>
                          t(e, i, {
                            arg: a.originalArgs,
                            baseQueryMeta: s,
                            fulfilledTimeStamp: o,
                            requestId: r,
                          })
                        );
                        e.data = l;
                      } else e.data = i;
                    else
                      e.data =
                        null ===
                          (a = o[n.arg.endpointName].structuralSharing) ||
                        void 0 === a ||
                        a
                          ? an(
                              J(e.data)
                                ? (J((s = e.data)) || Q(15), s[Z].base_)
                                : e.data,
                              i
                            )
                          : i;
                    delete e.error,
                      (e.fulfilledTimeStamp = n.fulfilledTimeStamp);
                  });
                })
                .addCase(n.rejected, (e, t) => {
                  let {
                    meta: { condition: n, arg: i, requestId: o },
                    error: a,
                    payload: s,
                  } = t;
                  Ln(e, i.queryCacheKey, (e) => {
                    if (n);
                    else {
                      if (e.requestId !== o) return;
                      (e.status = "rejected"),
                        (e.error = null !== s && void 0 !== s ? s : a);
                    }
                  });
                })
                .addMatcher(r, (e, t) => {
                  const { queries: n } = s(t);
                  for (const [i, o] of Object.entries(n))
                    ("fulfilled" !==
                      (null === o || void 0 === o ? void 0 : o.status) &&
                      "rejected" !==
                        (null === o || void 0 === o ? void 0 : o.status)) ||
                      (e[i] = o);
                });
            },
          }),
          h = wt({
            name: "".concat(t, "/mutations"),
            initialState: Rn,
            reducers: {
              removeMutationResult: {
                reducer(e, t) {
                  let { payload: n } = t;
                  const i = Tn(n);
                  i in e && delete e[i];
                },
                prepare: qe(),
              },
            },
            extraReducers(e) {
              e.addCase(i.pending, (e, t) => {
                let {
                  meta: n,
                  meta: { requestId: i, arg: o, startedTimeStamp: a },
                } = t;
                o.track &&
                  (e[Tn(n)] = {
                    requestId: i,
                    status: "pending",
                    endpointName: o.endpointName,
                    startedTimeStamp: a,
                  });
              })
                .addCase(i.fulfilled, (e, t) => {
                  let { payload: n, meta: i } = t;
                  i.arg.track &&
                    On(e, i, (e) => {
                      e.requestId === i.requestId &&
                        ((e.status = "fulfilled"),
                        (e.data = n),
                        (e.fulfilledTimeStamp = i.fulfilledTimeStamp));
                    });
                })
                .addCase(i.rejected, (e, t) => {
                  let { payload: n, error: i, meta: o } = t;
                  o.arg.track &&
                    On(e, o, (e) => {
                      e.requestId === o.requestId &&
                        ((e.status = "rejected"),
                        (e.error = null !== n && void 0 !== n ? n : i));
                    });
                })
                .addMatcher(r, (e, t) => {
                  const { mutations: n } = s(t);
                  for (const [i, o] of Object.entries(n))
                    ("fulfilled" !==
                      (null === o || void 0 === o ? void 0 : o.status) &&
                      "rejected" !==
                        (null === o || void 0 === o ? void 0 : o.status)) ||
                      i ===
                        (null === o || void 0 === o ? void 0 : o.requestId) ||
                      (e[i] = o);
                });
            },
          }),
          p = wt({
            name: "".concat(t, "/invalidation"),
            initialState: Rn,
            reducers: {
              updateProvidedBy: {
                reducer(e, t) {
                  const { queryCacheKey: n, providedTags: i } = t.payload;
                  for (const l of Object.values(e))
                    for (const e of Object.values(l)) {
                      const t = e.indexOf(n);
                      -1 !== t && e.splice(t, 1);
                    }
                  for (const { type: l, id: c } of i) {
                    var o, a, s, r;
                    const t =
                      null !==
                        (s = (o =
                          null !== (r = e[l]) && void 0 !== r
                            ? r
                            : (e[l] = {}))[
                          (a = c || "__internal_without_id")
                        ]) && void 0 !== s
                        ? s
                        : (o[a] = []);
                    t.includes(n) || t.push(n);
                  }
                },
                prepare: qe(),
              },
            },
            extraReducers(e) {
              e.addCase(d.actions.removeQueryResult, (e, t) => {
                let {
                  payload: { queryCacheKey: n },
                } = t;
                for (const i of Object.values(e))
                  for (const e of Object.values(i)) {
                    const t = e.indexOf(n);
                    -1 !== t && e.splice(t, 1);
                  }
              })
                .addMatcher(r, (e, t) => {
                  const { provided: n } = s(t);
                  for (const [s, l] of Object.entries(n))
                    for (const [t, n] of Object.entries(l)) {
                      var i, o, a, r;
                      const l =
                        null !==
                          (a = (i =
                            null !== (r = e[s]) && void 0 !== r
                              ? r
                              : (e[s] = {}))[
                            (o = t || "__internal_without_id")
                          ]) && void 0 !== a
                          ? a
                          : (i[o] = []);
                      for (const e of n) {
                        l.includes(e) || l.push(e);
                      }
                    }
                })
                .addMatcher(tt(lt(n), rt(n)), (e, t) => {
                  const n = En(t, "providesTags", o, l),
                    { queryCacheKey: i } = t.meta.arg;
                  p.caseReducers.updateProvidedBy(
                    e,
                    p.actions.updateProvidedBy({
                      queryCacheKey: i,
                      providedTags: n,
                    })
                  );
                });
            },
          }),
          f = wt({
            name: "".concat(t, "/subscriptions"),
            initialState: Rn,
            reducers: {
              updateSubscriptionOptions(e, t) {},
              unsubscribeQueryResult(e, t) {},
              internal_getRTKQSubscriptions() {},
            },
          }),
          g = wt({
            name: "".concat(t, "/internalSubscriptions"),
            initialState: Rn,
            reducers: {
              subscriptionsUpdated: {
                reducer: (e, t) => We(e, t.payload),
                prepare: qe(),
              },
            },
          }),
          m = wt({
            name: "".concat(t, "/config"),
            initialState: {
              online:
                "undefined" === typeof navigator ||
                void 0 === navigator.onLine ||
                navigator.onLine,
              focused:
                "undefined" === typeof document ||
                "hidden" !== document.visibilityState,
              middlewareRegistered: !1,
              ...c,
            },
            reducers: {
              middlewareRegistered(e, t) {
                let { payload: n } = t;
                e.middlewareRegistered =
                  ("conflict" !== e.middlewareRegistered && a === n) ||
                  "conflict";
              },
            },
            extraReducers: (e) => {
              e.addCase(xn, (e) => {
                e.online = !0;
              })
                .addCase(yn, (e) => {
                  e.online = !1;
                })
                .addCase(vn, (e) => {
                  e.focused = !0;
                })
                .addCase(bn, (e) => {
                  e.focused = !1;
                })
                .addMatcher(r, (e) => ({ ...e }));
            },
          }),
          v = H({
            queries: d.reducer,
            mutations: h.reducer,
            provided: p.reducer,
            subscriptions: g.reducer,
            config: m.reducer,
          });
        return {
          reducer: (e, t) => v(u.match(t) ? void 0 : e, t),
          actions: {
            ...m.actions,
            ...d.actions,
            ...f.actions,
            ...g.actions,
            ...h.actions,
            ...p.actions,
            resetApiState: u,
          },
        };
      }
      var Nn = Symbol.for("RTKQ/skipToken"),
        _n = { status: "uninitialized" },
        Dn = Be(_n, () => {}),
        zn = Be(_n, () => {});
      var jn = WeakMap ? new WeakMap() : void 0,
        Bn = (e) => {
          let { endpointName: t, queryArgs: n } = e,
            i = "";
          const o = null === jn || void 0 === jn ? void 0 : jn.get(n);
          if ("string" === typeof o) i = o;
          else {
            const e = JSON.stringify(
              n,
              (e, t) =>
                (t = F(
                  (t = "bigint" === typeof t ? { $bigint: t.toString() } : t)
                )
                  ? Object.keys(t)
                      .sort()
                      .reduce((e, n) => ((e[n] = t[n]), e), {})
                  : t)
            );
            F(n) && (null === jn || void 0 === jn || jn.set(n, e)), (i = e);
          }
          return "".concat(t, "(").concat(i, ")");
        };
      function Fn() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return function (e) {
          const n = $t((t) => {
              var n, i;
              return null === (n = e.extractRehydrationInfo) || void 0 === n
                ? void 0
                : n.call(e, t, {
                    reducerPath:
                      null !== (i = e.reducerPath) && void 0 !== i ? i : "api",
                  });
            }),
            i = {
              reducerPath: "api",
              keepUnusedDataFor: 60,
              refetchOnMountOrArgChange: !1,
              refetchOnFocus: !1,
              refetchOnReconnect: !1,
              invalidationBehavior: "delayed",
              ...e,
              extractRehydrationInfo: n,
              serializeQueryArgs(t) {
                let n = Bn;
                if ("serializeQueryArgs" in t.endpointDefinition) {
                  const e = t.endpointDefinition.serializeQueryArgs;
                  n = (t) => {
                    const n = e(t);
                    return "string" === typeof n
                      ? n
                      : Bn({ ...t, queryArgs: n });
                  };
                } else e.serializeQueryArgs && (n = e.serializeQueryArgs);
                return n(t);
              },
              tagTypes: [...(e.tagTypes || [])],
            },
            o = {
              endpointDefinitions: {},
              batch(e) {
                e();
              },
              apiUid: ut(),
              extractRehydrationInfo: n,
              hasRehydrationInfo: $t((e) => null != n(e)),
            },
            a = {
              injectEndpoints: function (e) {
                const t = e.endpoints({
                  query: (e) => ({ ...e, type: "query" }),
                  mutation: (e) => ({ ...e, type: "mutation" }),
                });
                for (const [n, i] of Object.entries(t))
                  if (!0 !== e.overrideExisting && n in o.endpointDefinitions) {
                    if ("throw" === e.overrideExisting) throw new Error(Tt(39));
                  } else {
                    o.endpointDefinitions[n] = i;
                    for (const e of s) e.injectEndpoint(n, i);
                  }
                return a;
              },
              enhanceEndpoints(e) {
                let { addTagTypes: t, endpoints: n } = e;
                if (t)
                  for (const o of t)
                    i.tagTypes.includes(o) || i.tagTypes.push(o);
                if (n)
                  for (const [i, a] of Object.entries(n))
                    "function" === typeof a
                      ? a(o.endpointDefinitions[i])
                      : Object.assign(o.endpointDefinitions[i] || {}, a);
                return a;
              },
            },
            s = t.map((e) => e.init(a, i, o));
          return a.injectEndpoints({ endpoints: e.endpoints });
        };
      }
      function Wn(e) {
        for (
          var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1;
          i < t;
          i++
        )
          n[i - 1] = arguments[i];
        return Object.assign(e, ...n);
      }
      var Hn = (e) => {
        let { api: t, queryThunk: n, internalState: i } = e;
        const o = "".concat(t.reducerPath, "/subscriptions");
        let a = null,
          s = null;
        const { updateSubscriptionOptions: r, unsubscribeQueryResult: l } =
            t.internalActions,
          c = () => i.currentSubscriptions,
          u = {
            getSubscriptions: c,
            getSubscriptionCount: (e) => {
              var t;
              return sn(null !== (t = c()[e]) && void 0 !== t ? t : {});
            },
            isRequestSubscribed: (e, t) => {
              var n;
              const i = c();
              return !(
                null === i ||
                void 0 === i ||
                null === (n = i[e]) ||
                void 0 === n ||
                !n[t]
              );
            },
          };
        return (e, c) => {
          if (
            (a || (a = JSON.parse(JSON.stringify(i.currentSubscriptions))),
            t.util.resetApiState.match(e))
          )
            return (a = i.currentSubscriptions = {}), (s = null), [!0, !1];
          if (t.internalActions.internal_getRTKQSubscriptions.match(e))
            return [!1, u];
          const d = ((e, i) => {
            if (r.match(i)) {
              var o;
              const { queryCacheKey: t, requestId: n, options: a } = i.payload;
              return (
                null !== e &&
                  void 0 !== e &&
                  null !== (o = e[t]) &&
                  void 0 !== o &&
                  o[n] &&
                  (e[t][n] = a),
                !0
              );
            }
            if (l.match(i)) {
              const { queryCacheKey: t, requestId: n } = i.payload;
              return e[t] && delete e[t][n], !0;
            }
            if (t.internalActions.removeQueryResult.match(i))
              return delete e[i.payload.queryCacheKey], !0;
            if (n.pending.match(i)) {
              var a, s;
              const {
                  meta: { arg: t, requestId: n },
                } = i,
                o =
                  null !== (s = e[(a = t.queryCacheKey)]) && void 0 !== s
                    ? s
                    : (e[a] = {});
              var c, u;
              return (
                (o["".concat(n, "_running")] = {}),
                t.subscribe &&
                  (o[n] =
                    null !==
                      (c =
                        null !== (u = t.subscriptionOptions) && void 0 !== u
                          ? u
                          : o[n]) && void 0 !== c
                      ? c
                      : {}),
                !0
              );
            }
            let d = !1;
            if (n.fulfilled.match(i) || n.rejected.match(i)) {
              const t = e[i.meta.arg.queryCacheKey] || {},
                n = "".concat(i.meta.requestId, "_running");
              d || (d = !!t[n]), delete t[n];
            }
            if (n.rejected.match(i)) {
              const {
                meta: { condition: t, arg: n, requestId: o },
              } = i;
              if (t && n.subscribe) {
                var h, p, f, g;
                const t =
                  null !== (p = e[(h = n.queryCacheKey)]) && void 0 !== p
                    ? p
                    : (e[h] = {});
                (t[o] =
                  null !==
                    (f =
                      null !== (g = n.subscriptionOptions) && void 0 !== g
                        ? g
                        : t[o]) && void 0 !== f
                    ? f
                    : {}),
                  (d = !0);
              }
            }
            return d;
          })(i.currentSubscriptions, e);
          let h = !0;
          if (d) {
            s ||
              (s = setTimeout(() => {
                const e = JSON.parse(JSON.stringify(i.currentSubscriptions)),
                  [, n] = Fe(a, () => e);
                c.next(t.internalActions.subscriptionsUpdated(n)),
                  (a = e),
                  (s = null);
              }, 500));
            const r = "string" == typeof e.type && !!e.type.startsWith(o),
              l =
                n.rejected.match(e) &&
                e.meta.condition &&
                !!e.meta.arg.subscribe;
            h = !r && !l;
          }
          return [h, !1];
        };
      };
      var Gn = (e) => {
          let {
            reducerPath: t,
            api: n,
            queryThunk: i,
            context: o,
            internalState: a,
          } = e;
          const { removeQueryResult: s, unsubscribeQueryResult: r } =
              n.internalActions,
            l = tt(r.match, i.fulfilled, i.rejected);
          function c(e) {
            const t = a.currentSubscriptions[e];
            return (
              !!t &&
              !(function (e) {
                for (const t in e) return !1;
                return !0;
              })(t)
            );
          }
          const u = {};
          function d(e, t, n, i) {
            var a;
            const r = o.endpointDefinitions[t],
              l =
                null !==
                  (a =
                    null === r || void 0 === r
                      ? void 0
                      : r.keepUnusedDataFor) && void 0 !== a
                  ? a
                  : i.keepUnusedDataFor;
            if (l === 1 / 0) return;
            const d = Math.max(0, Math.min(l, 2147482.647));
            if (!c(e)) {
              const t = u[e];
              t && clearTimeout(t),
                (u[e] = setTimeout(() => {
                  c(e) || n.dispatch(s({ queryCacheKey: e })), delete u[e];
                }, 1e3 * d));
            }
          }
          return (e, i, a) => {
            if (l(e)) {
              var s;
              const n = i.getState()[t],
                { queryCacheKey: o } = r.match(e) ? e.payload : e.meta.arg;
              d(
                o,
                null === (s = n.queries[o]) || void 0 === s
                  ? void 0
                  : s.endpointName,
                i,
                n.config
              );
            }
            if (n.util.resetApiState.match(e))
              for (const [t, n] of Object.entries(u))
                n && clearTimeout(n), delete u[t];
            if (o.hasRehydrationInfo(e)) {
              const n = i.getState()[t],
                { queries: a } = o.extractRehydrationInfo(e);
              for (const [e, t] of Object.entries(a))
                d(
                  e,
                  null === t || void 0 === t ? void 0 : t.endpointName,
                  i,
                  n.config
                );
            }
          };
        },
        Vn = new Error("Promise never resolved before cacheEntryRemoved."),
        Un = (e) => {
          let {
            api: t,
            reducerPath: n,
            context: i,
            queryThunk: o,
            mutationThunk: a,
            internalState: s,
          } = e;
          const r = ct(o),
            l = ct(a),
            c = lt(o, a),
            u = {};
          function d(e, n, o, a, s) {
            const r = i.endpointDefinitions[e],
              l = null === r || void 0 === r ? void 0 : r.onCacheEntryAdded;
            if (!l) return;
            const c = {},
              d = new Promise((e) => {
                c.cacheEntryRemoved = e;
              }),
              h = Promise.race([
                new Promise((e) => {
                  c.valueResolved = e;
                }),
                d.then(() => {
                  throw Vn;
                }),
              ]);
            h.catch(() => {}), (u[o] = c);
            const p = t.endpoints[e].select("query" === r.type ? n : o),
              f = a.dispatch((e, t, n) => n),
              g = {
                ...a,
                getCacheEntry: () => p(a.getState()),
                requestId: s,
                extra: f,
                updateCachedData:
                  "query" === r.type
                    ? (i) => a.dispatch(t.util.updateQueryData(e, n, i))
                    : void 0,
                cacheDataLoaded: h,
                cacheEntryRemoved: d,
              },
              m = l(n, g);
            Promise.resolve(m).catch((e) => {
              if (e !== Vn) throw e;
            });
          }
          return (e, i, s) => {
            const h = (function (e) {
              return r(e)
                ? e.meta.arg.queryCacheKey
                : l(e)
                ? null !== (n = e.meta.arg.fixedCacheKey) && void 0 !== n
                  ? n
                  : e.meta.requestId
                : t.internalActions.removeQueryResult.match(e)
                ? e.payload.queryCacheKey
                : t.internalActions.removeMutationResult.match(e)
                ? Tn(e.payload)
                : "";
              var n;
            })(e);
            if (o.pending.match(e)) {
              const t = s[n].queries[h],
                o = i.getState()[n].queries[h];
              !t &&
                o &&
                d(
                  e.meta.arg.endpointName,
                  e.meta.arg.originalArgs,
                  h,
                  i,
                  e.meta.requestId
                );
            } else if (a.pending.match(e)) {
              i.getState()[n].mutations[h] &&
                d(
                  e.meta.arg.endpointName,
                  e.meta.arg.originalArgs,
                  h,
                  i,
                  e.meta.requestId
                );
            } else if (c(e)) {
              const t = u[h];
              null !== t &&
                void 0 !== t &&
                t.valueResolved &&
                (t.valueResolved({
                  data: e.payload,
                  meta: e.meta.baseQueryMeta,
                }),
                delete t.valueResolved);
            } else if (
              t.internalActions.removeQueryResult.match(e) ||
              t.internalActions.removeMutationResult.match(e)
            ) {
              const e = u[h];
              e && (delete u[h], e.cacheEntryRemoved());
            } else if (t.util.resetApiState.match(e))
              for (const [t, n] of Object.entries(u))
                delete u[t], n.cacheEntryRemoved();
          };
        },
        Yn = (e) => {
          let {
            api: t,
            context: { apiUid: n },
            reducerPath: i,
          } = e;
          return (e, i) => {
            t.util.resetApiState.match(e) &&
              i.dispatch(t.internalActions.middlewareRegistered(n));
          };
        },
        Xn = (e) => {
          let {
            reducerPath: t,
            context: n,
            context: { endpointDefinitions: i },
            mutationThunk: o,
            queryThunk: a,
            api: s,
            assertTagType: r,
            refetchQuery: l,
            internalState: c,
          } = e;
          const { removeQueryResult: u } = s.internalActions,
            d = tt(lt(o), rt(o)),
            h = tt(lt(o, a), st(o, a));
          let p = [];
          function f(e, i) {
            const o = i.getState(),
              a = o[t];
            if (
              (p.push(...e),
              "delayed" === a.config.invalidationBehavior &&
                (function (e) {
                  for (const i in e.queries) {
                    var t;
                    if (
                      "pending" ===
                      (null === (t = e.queries[i]) || void 0 === t
                        ? void 0
                        : t.status)
                    )
                      return !0;
                  }
                  for (const i in e.mutations) {
                    var n;
                    if (
                      "pending" ===
                      (null === (n = e.mutations[i]) || void 0 === n
                        ? void 0
                        : n.status)
                    )
                      return !0;
                  }
                  return !1;
                })(a))
            )
              return;
            const r = p;
            if (((p = []), 0 === r.length)) return;
            const d = s.util.selectInvalidatedBy(o, r);
            n.batch(() => {
              const e = Array.from(d.values());
              for (const { queryCacheKey: n } of e) {
                var t;
                const e = a.queries[n],
                  o =
                    null !== (t = c.currentSubscriptions[n]) && void 0 !== t
                      ? t
                      : {};
                e &&
                  (0 === sn(o)
                    ? i.dispatch(u({ queryCacheKey: n }))
                    : "uninitialized" !== e.status && i.dispatch(l(e, n)));
              }
            });
          }
          return (e, t) => {
            d(e)
              ? f(En(e, "invalidatesTags", i, r), t)
              : h(e)
              ? f([], t)
              : s.util.invalidateTags.match(e) &&
                f(kn(e.payload, void 0, void 0, void 0, void 0, r), t);
          };
        },
        Kn = (e) => {
          let {
            reducerPath: t,
            queryThunk: n,
            api: i,
            refetchQuery: o,
            internalState: a,
          } = e;
          const s = {};
          function r(e, n) {
            let { queryCacheKey: i } = e;
            const l = n.getState()[t],
              c = l.queries[i],
              d = a.currentSubscriptions[i];
            if (!c || "uninitialized" === c.status) return;
            const { lowestPollingInterval: h, skipPollingIfUnfocused: p } =
              u(d);
            if (!Number.isFinite(h)) return;
            const f = s[i];
            null !== f &&
              void 0 !== f &&
              f.timeout &&
              (clearTimeout(f.timeout), (f.timeout = void 0));
            const g = Date.now() + h;
            s[i] = {
              nextPollTimestamp: g,
              pollingInterval: h,
              timeout: setTimeout(() => {
                (!l.config.focused && p) || n.dispatch(o(c, i)),
                  r({ queryCacheKey: i }, n);
              }, h),
            };
          }
          function l(e, n) {
            let { queryCacheKey: i } = e;
            const o = n.getState()[t].queries[i],
              l = a.currentSubscriptions[i];
            if (!o || "uninitialized" === o.status) return;
            const { lowestPollingInterval: d } = u(l);
            if (!Number.isFinite(d)) return void c(i);
            const h = s[i],
              p = Date.now() + d;
            (!h || p < h.nextPollTimestamp) && r({ queryCacheKey: i }, n);
          }
          function c(e) {
            const t = s[e];
            null !== t && void 0 !== t && t.timeout && clearTimeout(t.timeout),
              delete s[e];
          }
          function u() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              t = !1,
              n = Number.POSITIVE_INFINITY;
            for (let i in e)
              e[i].pollingInterval &&
                ((n = Math.min(e[i].pollingInterval, n)),
                (t = e[i].skipPollingIfUnfocused || t));
            return { lowestPollingInterval: n, skipPollingIfUnfocused: t };
          }
          return (e, t) => {
            (i.internalActions.updateSubscriptionOptions.match(e) ||
              i.internalActions.unsubscribeQueryResult.match(e)) &&
              l(e.payload, t),
              (n.pending.match(e) ||
                (n.rejected.match(e) && e.meta.condition)) &&
                l(e.meta.arg, t),
              (n.fulfilled.match(e) ||
                (n.rejected.match(e) && !e.meta.condition)) &&
                r(e.meta.arg, t),
              i.util.resetApiState.match(e) &&
                (function () {
                  for (const e of Object.keys(s)) c(e);
                })();
          };
        },
        qn = (e) => {
          let { api: t, context: n, queryThunk: i, mutationThunk: o } = e;
          const a = at(i, o),
            s = st(i, o),
            r = lt(i, o),
            l = {};
          return (e, i) => {
            if (a(e)) {
              const {
                  requestId: o,
                  arg: { endpointName: a, originalArgs: s },
                } = e.meta,
                r = n.endpointDefinitions[a],
                c = null === r || void 0 === r ? void 0 : r.onQueryStarted;
              if (c) {
                const e = {},
                  n = new Promise((t, n) => {
                    (e.resolve = t), (e.reject = n);
                  });
                n.catch(() => {}), (l[o] = e);
                const u = t.endpoints[a].select("query" === r.type ? s : o),
                  d = i.dispatch((e, t, n) => n),
                  h = {
                    ...i,
                    getCacheEntry: () => u(i.getState()),
                    requestId: o,
                    extra: d,
                    updateCachedData:
                      "query" === r.type
                        ? (e) => i.dispatch(t.util.updateQueryData(a, s, e))
                        : void 0,
                    queryFulfilled: n,
                  };
                c(s, h);
              }
            } else if (r(e)) {
              var o;
              const { requestId: t, baseQueryMeta: n } = e.meta;
              null === (o = l[t]) ||
                void 0 === o ||
                o.resolve({ data: e.payload, meta: n }),
                delete l[t];
            } else if (s(e)) {
              var c, u;
              const {
                requestId: t,
                rejectedWithValue: n,
                baseQueryMeta: i,
              } = e.meta;
              null === (c = l[t]) ||
                void 0 === c ||
                c.reject({
                  error: null !== (u = e.payload) && void 0 !== u ? u : e.error,
                  isUnhandledError: !n,
                  meta: i,
                }),
                delete l[t];
            }
          };
        };
      function Zn(e) {
        const { reducerPath: t, queryThunk: n, api: i, context: o } = e,
          { apiUid: a } = o,
          s = { invalidateTags: Ve("".concat(t, "/invalidateTags")) },
          r = (e) => e.type.startsWith("".concat(t, "/")),
          l = [Yn, Gn, Xn, Kn, Un, qn];
        return {
          middleware: (n) => {
            let s = !1;
            const u = {
                ...e,
                internalState: { currentSubscriptions: {} },
                refetchQuery: c,
                isThisApiSliceAction: r,
              },
              d = l.map((e) => e(u)),
              h = Hn(u),
              p = ((e) => {
                let {
                  reducerPath: t,
                  context: n,
                  api: i,
                  refetchQuery: o,
                  internalState: a,
                } = e;
                const { removeQueryResult: s } = i.internalActions;
                function r(e, i) {
                  const r = e.getState()[t],
                    l = r.queries,
                    c = a.currentSubscriptions;
                  n.batch(() => {
                    for (const t of Object.keys(c)) {
                      const n = l[t],
                        a = c[t];
                      a &&
                        n &&
                        (Object.values(a).some((e) => !0 === e[i]) ||
                          (Object.values(a).every((e) => void 0 === e[i]) &&
                            r.config[i])) &&
                        (0 === sn(a)
                          ? e.dispatch(s({ queryCacheKey: t }))
                          : "uninitialized" !== n.status &&
                            e.dispatch(o(n, t)));
                    }
                  });
                }
                return (e, t) => {
                  vn.match(e) && r(t, "refetchOnFocus"),
                    xn.match(e) && r(t, "refetchOnReconnect");
                };
              })(u);
            return (e) => (l) => {
              if (!V(l)) return e(l);
              s ||
                ((s = !0),
                n.dispatch(i.internalActions.middlewareRegistered(a)));
              const c = { ...n, next: e },
                u = n.getState(),
                [f, g] = h(l, c, u);
              let m;
              if (
                ((m = f ? e(l) : g),
                n.getState()[t] &&
                  (p(l, c, u), r(l) || o.hasRehydrationInfo(l)))
              )
                for (const e of d) e(l, c, u);
              return m;
            };
          },
          actions: s,
        };
        function c(e, t) {
          let i =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          return n({
            type: "query",
            endpointName: e.endpointName,
            originalArgs: e.originalArgs,
            subscribe: !1,
            forceRefetch: !0,
            queryCacheKey: t,
            ...i,
          });
        }
      }
      var Qn = Symbol(),
        $n = function () {
          let { createSelector: e = en } =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return {
            name: Qn,
            init(t, n, i) {
              let {
                baseQuery: o,
                tagTypes: a,
                reducerPath: s,
                serializeQueryArgs: r,
                keepUnusedDataFor: l,
                refetchOnMountOrArgChange: c,
                refetchOnFocus: u,
                refetchOnReconnect: d,
                invalidationBehavior: h,
              } = n;
              ze();
              const p = (e) => e;
              Object.assign(t, {
                reducerPath: s,
                endpoints: {},
                internalActions: {
                  onOnline: xn,
                  onOffline: yn,
                  onFocus: vn,
                  onFocusLost: bn,
                },
                util: {},
              });
              const {
                  queryThunk: f,
                  mutationThunk: g,
                  patchQueryData: m,
                  updateQueryData: v,
                  upsertQueryData: b,
                  prefetch: x,
                  buildMatchThunkActions: y,
                } = (function (e) {
                  let {
                    reducerPath: t,
                    baseQuery: n,
                    context: { endpointDefinitions: i },
                    serializeQueryArgs: o,
                    api: a,
                    assertTagType: s,
                  } = e;
                  const r = async (e, t) => {
                    let {
                      signal: o,
                      abort: a,
                      rejectWithValue: s,
                      fulfillWithValue: r,
                      dispatch: c,
                      getState: u,
                      extra: d,
                    } = t;
                    const h = i[e.endpointName];
                    try {
                      let t,
                        i = Pn;
                      const s = {
                          signal: o,
                          abort: a,
                          dispatch: c,
                          getState: u,
                          extra: d,
                          endpoint: e.endpointName,
                          type: e.type,
                          forced: "query" === e.type ? l(e, u()) : void 0,
                        },
                        p = "query" === e.type ? e[Cn] : void 0;
                      if (
                        (p
                          ? (t = p())
                          : h.query
                          ? ((t = await n(
                              h.query(e.originalArgs),
                              s,
                              h.extraOptions
                            )),
                            h.transformResponse && (i = h.transformResponse))
                          : (t = await h.queryFn(
                              e.originalArgs,
                              s,
                              h.extraOptions,
                              (e) => n(e, s, h.extraOptions)
                            )),
                        t.error)
                      )
                        throw new mn(t.error, t.meta);
                      return r(await i(t.data, t.meta, e.originalArgs), {
                        fulfilledTimeStamp: Date.now(),
                        baseQueryMeta: t.meta,
                        [Ke]: !0,
                      });
                    } catch (p) {
                      let t = p;
                      if (t instanceof mn) {
                        let n = Pn;
                        h.query &&
                          h.transformErrorResponse &&
                          (n = h.transformErrorResponse);
                        try {
                          return s(await n(t.value, t.meta, e.originalArgs), {
                            baseQueryMeta: t.meta,
                            [Ke]: !0,
                          });
                        } catch (f) {
                          t = f;
                        }
                      }
                      throw (console.error(t), t);
                    }
                  };
                  function l(e, n) {
                    var i, o, a;
                    const s =
                        null === (i = n[t]) ||
                        void 0 === i ||
                        null === (i = i.queries) ||
                        void 0 === i
                          ? void 0
                          : i[e.queryCacheKey],
                      r =
                        null === (o = n[t]) || void 0 === o
                          ? void 0
                          : o.config.refetchOnMountOrArgChange,
                      l =
                        null === s || void 0 === s
                          ? void 0
                          : s.fulfilledTimeStamp,
                      c =
                        null !== (a = e.forceRefetch) && void 0 !== a
                          ? a
                          : e.subscribe && r;
                    return (
                      !!c &&
                      (!0 === c || (Number(new Date()) - Number(l)) / 1e3 >= c)
                    );
                  }
                  const c = gt("".concat(t, "/executeQuery"), r, {
                      getPendingMeta: () => ({
                        startedTimeStamp: Date.now(),
                        [Ke]: !0,
                      }),
                      condition(e, n) {
                        var o, a;
                        let { getState: s } = n;
                        const r = s(),
                          c =
                            null === (o = r[t]) ||
                            void 0 === o ||
                            null === (o = o.queries) ||
                            void 0 === o
                              ? void 0
                              : o[e.queryCacheKey],
                          u =
                            null === c || void 0 === c
                              ? void 0
                              : c.fulfilledTimeStamp,
                          d = e.originalArgs,
                          h =
                            null === c || void 0 === c
                              ? void 0
                              : c.originalArgs,
                          p = i[e.endpointName];
                        return (
                          !!Mn(e) ||
                          ("pending" !==
                            (null === c || void 0 === c ? void 0 : c.status) &&
                            (!!l(e, r) ||
                              !(
                                !Sn(p) ||
                                null === p ||
                                void 0 === p ||
                                null === (a = p.forceRefetch) ||
                                void 0 === a ||
                                !a.call(p, {
                                  currentArg: d,
                                  previousArg: h,
                                  endpointState: c,
                                  state: r,
                                })
                              ) ||
                              !u))
                        );
                      },
                      dispatchConditionRejection: !0,
                    }),
                    u = gt("".concat(t, "/executeMutation"), r, {
                      getPendingMeta: () => ({
                        startedTimeStamp: Date.now(),
                        [Ke]: !0,
                      }),
                    });
                  function d(e) {
                    return (t) => {
                      var n;
                      return (
                        (null === t ||
                        void 0 === t ||
                        null === (n = t.meta) ||
                        void 0 === n ||
                        null === (n = n.arg) ||
                        void 0 === n
                          ? void 0
                          : n.endpointName) === e
                      );
                    };
                  }
                  return {
                    queryThunk: c,
                    mutationThunk: u,
                    prefetch: (e, t, n) => (i, o) => {
                      const s = ((e) => "force" in e)(n) && n.force,
                        r = ((e) => "ifOlderThan" in e)(n) && n.ifOlderThan,
                        l = function () {
                          const n = {
                            forceRefetch:
                              !(
                                arguments.length > 0 && void 0 !== arguments[0]
                              ) || arguments[0],
                            isPrefetch: !0,
                          };
                          return a.endpoints[e].initiate(t, n);
                        },
                        c = a.endpoints[e].select(t)(o());
                      if (s) i(l());
                      else if (r) {
                        const e =
                          null === c || void 0 === c
                            ? void 0
                            : c.fulfilledTimeStamp;
                        if (!e) return void i(l());
                        (Number(new Date()) - Number(new Date(e))) / 1e3 >= r &&
                          i(l());
                      } else i(l(!1));
                    },
                    updateQueryData: function (e, t, n) {
                      let i =
                        !(arguments.length > 3 && void 0 !== arguments[3]) ||
                        arguments[3];
                      return (o, s) => {
                        const r = a.endpoints[e].select(t)(s()),
                          l = {
                            patches: [],
                            inversePatches: [],
                            undo: () =>
                              o(
                                a.util.patchQueryData(e, t, l.inversePatches, i)
                              ),
                          };
                        if ("uninitialized" === r.status) return l;
                        let c;
                        if ("data" in r)
                          if (ee(r.data)) {
                            const [e, t, i] = Fe(r.data, n);
                            l.patches.push(...t),
                              l.inversePatches.push(...i),
                              (c = e);
                          } else
                            (c = n(r.data)),
                              l.patches.push({
                                op: "replace",
                                path: [],
                                value: c,
                              }),
                              l.inversePatches.push({
                                op: "replace",
                                path: [],
                                value: r.data,
                              });
                        return (
                          0 === l.patches.length ||
                            o(a.util.patchQueryData(e, t, l.patches, i)),
                          l
                        );
                      };
                    },
                    upsertQueryData: (e, t, n) => (i) =>
                      i(
                        a.endpoints[e].initiate(t, {
                          subscribe: !1,
                          forceRefetch: !0,
                          [Cn]: () => ({ data: n }),
                        })
                      ),
                    patchQueryData: (e, t, n, r) => (l, c) => {
                      const u = i[e],
                        d = o({
                          queryArgs: t,
                          endpointDefinition: u,
                          endpointName: e,
                        });
                      if (
                        (l(
                          a.internalActions.queryResultPatched({
                            queryCacheKey: d,
                            patches: n,
                          })
                        ),
                        !r)
                      )
                        return;
                      const h = a.endpoints[e].select(t)(c()),
                        p = kn(u.providesTags, h.data, void 0, t, {}, s);
                      l(
                        a.internalActions.updateProvidedBy({
                          queryCacheKey: d,
                          providedTags: p,
                        })
                      );
                    },
                    buildMatchThunkActions: function (e, t) {
                      return {
                        matchPending: nt(at(e), d(t)),
                        matchFulfilled: nt(lt(e), d(t)),
                        matchRejected: nt(st(e), d(t)),
                      };
                    },
                  };
                })({
                  baseQuery: o,
                  reducerPath: s,
                  context: i,
                  api: t,
                  serializeQueryArgs: r,
                  assertTagType: p,
                }),
                { reducer: w, actions: S } = In({
                  context: i,
                  queryThunk: f,
                  mutationThunk: g,
                  reducerPath: s,
                  assertTagType: p,
                  config: {
                    refetchOnFocus: u,
                    refetchOnReconnect: d,
                    refetchOnMountOrArgChange: c,
                    keepUnusedDataFor: l,
                    reducerPath: s,
                    invalidationBehavior: h,
                  },
                });
              Wn(t.util, {
                patchQueryData: m,
                updateQueryData: v,
                upsertQueryData: b,
                prefetch: x,
                resetApiState: S.resetApiState,
              }),
                Wn(t.internalActions, S);
              const { middleware: k, actions: A } = Zn({
                reducerPath: s,
                context: i,
                queryThunk: f,
                mutationThunk: g,
                api: t,
                assertTagType: p,
              });
              Wn(t.util, A), Wn(t, { reducer: w, middleware: k });
              const {
                buildQuerySelector: C,
                buildMutationSelector: M,
                selectInvalidatedBy: P,
                selectCachedArgsForQuery: E,
              } = (function (e) {
                let {
                  serializeQueryArgs: t,
                  reducerPath: n,
                  createSelector: i,
                } = e;
                const o = (e) => Dn,
                  a = (e) => zn;
                return {
                  buildQuerySelector: function (e, n) {
                    return (a) => {
                      const l = t({
                        queryArgs: a,
                        endpointDefinition: n,
                        endpointName: e,
                      });
                      return i(
                        a === Nn
                          ? o
                          : (e) => {
                              var t, n;
                              return null !==
                                (t =
                                  null === (n = r(e)) ||
                                  void 0 === n ||
                                  null === (n = n.queries) ||
                                  void 0 === n
                                    ? void 0
                                    : n[l]) && void 0 !== t
                                ? t
                                : Dn;
                            },
                        s
                      );
                    };
                  },
                  buildMutationSelector: function () {
                    return (e) => {
                      let t;
                      var n;
                      return (
                        (t =
                          "object" === typeof e
                            ? null !== (n = Tn(e)) && void 0 !== n
                              ? n
                              : Nn
                            : e),
                        i(
                          t === Nn
                            ? a
                            : (e) => {
                                var n, i;
                                return null !==
                                  (n =
                                    null === (i = r(e)) ||
                                    void 0 === i ||
                                    null === (i = i.mutations) ||
                                    void 0 === i
                                      ? void 0
                                      : i[t]) && void 0 !== n
                                  ? n
                                  : zn;
                              },
                          s
                        )
                      );
                    };
                  },
                  selectInvalidatedBy: function (e, t) {
                    const i = e[n],
                      o = new Set();
                    for (const n of t.map(An)) {
                      var a;
                      const e = i.provided[n.type];
                      if (!e) continue;
                      let t =
                        null !==
                          (a =
                            void 0 !== n.id ? e[n.id] : rn(Object.values(e))) &&
                        void 0 !== a
                          ? a
                          : [];
                      for (const n of t) o.add(n);
                    }
                    return rn(
                      Array.from(o.values()).map((e) => {
                        const t = i.queries[e];
                        return t
                          ? [
                              {
                                queryCacheKey: e,
                                endpointName: t.endpointName,
                                originalArgs: t.originalArgs,
                              },
                            ]
                          : [];
                      })
                    );
                  },
                  selectCachedArgsForQuery: function (e, t) {
                    return Object.values(e[n].queries)
                      .filter(
                        (e) =>
                          (null === e || void 0 === e
                            ? void 0
                            : e.endpointName) === t &&
                          "uninitialized" !== e.status
                      )
                      .map((e) => e.originalArgs);
                  },
                };
                function s(e) {
                  return {
                    ...e,
                    ...((t = e.status),
                    {
                      status: t,
                      isUninitialized: "uninitialized" === t,
                      isLoading: "pending" === t,
                      isSuccess: "fulfilled" === t,
                      isError: "rejected" === t,
                    }),
                  };
                  var t;
                }
                function r(e) {
                  return e[n];
                }
              })({ serializeQueryArgs: r, reducerPath: s, createSelector: e });
              Wn(t.util, {
                selectInvalidatedBy: P,
                selectCachedArgsForQuery: E,
              });
              const {
                buildInitiateQuery: L,
                buildInitiateMutation: T,
                getRunningMutationThunk: O,
                getRunningMutationsThunk: R,
                getRunningQueriesThunk: I,
                getRunningQueryThunk: N,
              } = (function (e) {
                let {
                  serializeQueryArgs: t,
                  queryThunk: n,
                  mutationThunk: i,
                  api: o,
                  context: a,
                } = e;
                const s = new Map(),
                  r = new Map(),
                  {
                    unsubscribeQueryResult: l,
                    removeMutationResult: c,
                    updateSubscriptionOptions: u,
                  } = o.internalActions;
                return {
                  buildInitiateQuery: function (e, i) {
                    const a = function (r) {
                      let {
                        subscribe: c = !0,
                        forceRefetch: h,
                        subscriptionOptions: p,
                        [Cn]: f,
                        ...g
                      } = arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {};
                      return (m, v) => {
                        var b;
                        const x = t({
                            queryArgs: r,
                            endpointDefinition: i,
                            endpointName: e,
                          }),
                          y = n({
                            ...g,
                            type: "query",
                            subscribe: c,
                            forceRefetch: h,
                            subscriptionOptions: p,
                            endpointName: e,
                            originalArgs: r,
                            queryCacheKey: x,
                            [Cn]: f,
                          }),
                          w = o.endpoints[e].select(r),
                          S = m(y),
                          k = w(v());
                        d(m);
                        const { requestId: A, abort: C } = S,
                          M = k.requestId !== A,
                          P =
                            null === (b = s.get(m)) || void 0 === b
                              ? void 0
                              : b[x],
                          E = () => w(v()),
                          L = Object.assign(
                            f
                              ? S.then(E)
                              : M && !P
                              ? Promise.resolve(k)
                              : Promise.all([P, S]).then(E),
                            {
                              arg: r,
                              requestId: A,
                              subscriptionOptions: p,
                              queryCacheKey: x,
                              abort: C,
                              async unwrap() {
                                const e = await L;
                                if (e.isError) throw e.error;
                                return e.data;
                              },
                              refetch: () =>
                                m(a(r, { subscribe: !1, forceRefetch: !0 })),
                              unsubscribe() {
                                c && m(l({ queryCacheKey: x, requestId: A }));
                              },
                              updateSubscriptionOptions(t) {
                                (L.subscriptionOptions = t),
                                  m(
                                    u({
                                      endpointName: e,
                                      requestId: A,
                                      queryCacheKey: x,
                                      options: t,
                                    })
                                  );
                              },
                            }
                          );
                        if (!P && !M && !f) {
                          const e = s.get(m) || {};
                          (e[x] = L),
                            s.set(m, e),
                            L.then(() => {
                              delete e[x], sn(e) || s.delete(m);
                            });
                        }
                        return L;
                      };
                    };
                    return a;
                  },
                  buildInitiateMutation: function (e) {
                    return function (t) {
                      let { track: n = !0, fixedCacheKey: o } =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : {};
                      return (a, s) => {
                        const l = i({
                            type: "mutation",
                            endpointName: e,
                            originalArgs: t,
                            track: n,
                            fixedCacheKey: o,
                          }),
                          u = a(l);
                        d(a);
                        const { requestId: h, abort: p, unwrap: f } = u,
                          g =
                            ((m = u.unwrap().then((e) => ({ data: e }))),
                            (v = (e) => ({ error: e })),
                            m.catch(v));
                        var m, v;
                        const b = Object.assign(g, {
                            arg: u.arg,
                            requestId: h,
                            abort: p,
                            unwrap: f,
                            reset: () => {
                              a(c({ requestId: h, fixedCacheKey: o }));
                            },
                          }),
                          x = r.get(a) || {};
                        return (
                          r.set(a, x),
                          (x[h] = b),
                          b.then(() => {
                            delete x[h], sn(x) || r.delete(a);
                          }),
                          o &&
                            ((x[o] = b),
                            b.then(() => {
                              x[o] === b && (delete x[o], sn(x) || r.delete(a));
                            })),
                          b
                        );
                      };
                    };
                  },
                  getRunningQueryThunk: function (e, n) {
                    return (i) => {
                      var o;
                      const r = a.endpointDefinitions[e],
                        l = t({
                          queryArgs: n,
                          endpointDefinition: r,
                          endpointName: e,
                        });
                      return null === (o = s.get(i)) || void 0 === o
                        ? void 0
                        : o[l];
                    };
                  },
                  getRunningMutationThunk: function (e, t) {
                    return (e) => {
                      var n;
                      return null === (n = r.get(e)) || void 0 === n
                        ? void 0
                        : n[t];
                    };
                  },
                  getRunningQueriesThunk: function () {
                    return (e) => Object.values(s.get(e) || {}).filter(ln);
                  },
                  getRunningMutationsThunk: function () {
                    return (e) => Object.values(r.get(e) || {}).filter(ln);
                  },
                };
                function d(e) {}
              })({
                queryThunk: f,
                mutationThunk: g,
                api: t,
                serializeQueryArgs: r,
                context: i,
              });
              return (
                Wn(t.util, {
                  getRunningMutationThunk: O,
                  getRunningMutationsThunk: R,
                  getRunningQueryThunk: N,
                  getRunningQueriesThunk: I,
                }),
                {
                  name: Qn,
                  injectEndpoint(e, n) {
                    var i, o;
                    const a = t;
                    (null !== (o = (i = a.endpoints)[e]) && void 0 !== o) ||
                      (i[e] = {}),
                      Sn(n)
                        ? Wn(
                            a.endpoints[e],
                            { name: e, select: C(e, n), initiate: L(e, n) },
                            y(f, e)
                          )
                        : "mutation" === n.type &&
                          Wn(
                            a.endpoints[e],
                            { name: e, select: M(), initiate: T(e) },
                            y(g, e)
                          );
                  },
                }
              );
            },
          };
        };
      $n();
      function Jn(e) {
        for (
          var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1;
          i < t;
          i++
        )
          n[i - 1] = arguments[i];
        return Object.assign(e, ...n);
      }
      function ei(e) {
        return e.replace(e[0], e[0].toUpperCase());
      }
      var ti = WeakMap ? new WeakMap() : void 0,
        ni = (e) => {
          let { endpointName: t, queryArgs: n } = e,
            i = "";
          const o = null === ti || void 0 === ti ? void 0 : ti.get(n);
          if ("string" === typeof o) i = o;
          else {
            const e = JSON.stringify(
              n,
              (e, t) =>
                (t = F(
                  (t = "bigint" === typeof t ? { $bigint: t.toString() } : t)
                )
                  ? Object.keys(t)
                      .sort()
                      .reduce((e, n) => ((e[n] = t[n]), e), {})
                  : t)
            );
            F(n) && (null === ti || void 0 === ti || ti.set(n, e)), (i = e);
          }
          return "".concat(t, "(").concat(i, ")");
        },
        ii = Symbol();
      function oi(e, n, i, o) {
        const a = (0, t.useMemo)(
            () => ({
              queryArgs: e,
              serialized:
                "object" == typeof e
                  ? n({ queryArgs: e, endpointDefinition: i, endpointName: o })
                  : e,
            }),
            [e, n, i, o]
          ),
          s = (0, t.useRef)(a);
        return (
          (0, t.useEffect)(() => {
            s.current.serialized !== a.serialized && (s.current = a);
          }, [a]),
          s.current.serialized === a.serialized ? s.current.queryArgs : e
        );
      }
      function ai(e) {
        const n = (0, t.useRef)(e);
        return (
          (0, t.useEffect)(() => {
            C(n.current, e) || (n.current = e);
          }, [e]),
          C(n.current, e) ? n.current : e
        );
      }
      var si = (() =>
          !(
            "undefined" === typeof window ||
            "undefined" === typeof window.document ||
            "undefined" === typeof window.document.createElement
          ))(),
        ri = (() =>
          "undefined" !== typeof navigator &&
          "ReactNative" === navigator.product)(),
        li = (() => (si || ri ? t.useLayoutEffect : t.useEffect))(),
        ci = (e) =>
          e.isUninitialized
            ? {
                ...e,
                isUninitialized: !1,
                isFetching: !0,
                isLoading: void 0 === e.data,
                status: nn.pending,
              }
            : e;
      var ui = Symbol();
      var di = Fn(
        $n(),
        (function () {
          let {
            batch: e = R,
            hooks: n = { useDispatch: O, useSelector: v, useStore: E },
            createSelector: i = en,
            unstable__sideEffectsInRender: o = !1,
            ...a
          } = arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : {};
          return {
            name: ui,
            init(a, s, r) {
              let { serializeQueryArgs: l } = s;
              const c = a,
                {
                  buildQueryHooks: u,
                  buildMutationHook: d,
                  usePrefetch: h,
                } = (function (e) {
                  let {
                    api: n,
                    moduleOptions: {
                      batch: i,
                      hooks: { useDispatch: o, useSelector: a, useStore: s },
                      unstable__sideEffectsInRender: r,
                      createSelector: l,
                    },
                    serializeQueryArgs: c,
                    context: u,
                  } = e;
                  const d = r ? (e) => e() : t.useEffect;
                  return {
                    buildQueryHooks: function (e) {
                      const r = function (i) {
                          let {
                            refetchOnReconnect: a,
                            refetchOnFocus: s,
                            refetchOnMountOrArgChange: r,
                            skip: l = !1,
                            pollingInterval: c = 0,
                            skipPollingIfUnfocused: h = !1,
                          } = arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : {};
                          const { initiate: p } = n.endpoints[e],
                            f = o(),
                            g = (0, t.useRef)(void 0);
                          if (!g.current) {
                            const e = f(
                              n.internalActions.internal_getRTKQSubscriptions()
                            );
                            g.current = e;
                          }
                          const m = oi(
                              l ? Nn : i,
                              ni,
                              u.endpointDefinitions[e],
                              e
                            ),
                            v = ai({
                              refetchOnReconnect: a,
                              refetchOnFocus: s,
                              pollingInterval: c,
                              skipPollingIfUnfocused: h,
                            }),
                            b = (0, t.useRef)(!1),
                            x = (0, t.useRef)(void 0);
                          let { queryCacheKey: y, requestId: w } =
                              x.current || {},
                            S = !1;
                          y && w && (S = g.current.isRequestSubscribed(y, w));
                          const k = !S && b.current;
                          return (
                            d(() => {
                              b.current = S;
                            }),
                            d(() => {
                              k && (x.current = void 0);
                            }, [k]),
                            d(() => {
                              var e;
                              const t = x.current;
                              if (m === Nn)
                                return (
                                  null === t || void 0 === t || t.unsubscribe(),
                                  void (x.current = void 0)
                                );
                              const n =
                                null === (e = x.current) || void 0 === e
                                  ? void 0
                                  : e.subscriptionOptions;
                              if (t && t.arg === m)
                                v !== n && t.updateSubscriptionOptions(v);
                              else {
                                null === t || void 0 === t || t.unsubscribe();
                                const e = f(
                                  p(m, {
                                    subscriptionOptions: v,
                                    forceRefetch: r,
                                  })
                                );
                                x.current = e;
                              }
                            }, [f, p, r, m, v, k]),
                            (0, t.useEffect)(
                              () => () => {
                                var e;
                                null === (e = x.current) ||
                                  void 0 === e ||
                                  e.unsubscribe(),
                                  (x.current = void 0);
                              },
                              []
                            ),
                            (0, t.useMemo)(
                              () => ({
                                refetch: () => {
                                  var e;
                                  if (!x.current) throw new Error(Tt(38));
                                  return null === (e = x.current) ||
                                    void 0 === e
                                    ? void 0
                                    : e.refetch();
                                },
                              }),
                              []
                            )
                          );
                        },
                        p = function () {
                          let {
                            refetchOnReconnect: a,
                            refetchOnFocus: s,
                            pollingInterval: r = 0,
                            skipPollingIfUnfocused: l = !1,
                          } = arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                          const { initiate: c } = n.endpoints[e],
                            u = o(),
                            [h, p] = (0, t.useState)(ii),
                            f = (0, t.useRef)(void 0),
                            g = ai({
                              refetchOnReconnect: a,
                              refetchOnFocus: s,
                              pollingInterval: r,
                              skipPollingIfUnfocused: l,
                            });
                          d(() => {
                            var e;
                            const t =
                              null === (e = f.current) || void 0 === e
                                ? void 0
                                : e.subscriptionOptions;
                            var n;
                            g !== t &&
                              (null === (n = f.current) ||
                                void 0 === n ||
                                n.updateSubscriptionOptions(g));
                          }, [g]);
                          const m = (0, t.useRef)(g);
                          d(() => {
                            m.current = g;
                          }, [g]);
                          const v = (0, t.useCallback)(
                            function (e) {
                              let t,
                                n =
                                  arguments.length > 1 &&
                                  void 0 !== arguments[1] &&
                                  arguments[1];
                              return (
                                i(() => {
                                  var i;
                                  null === (i = f.current) ||
                                    void 0 === i ||
                                    i.unsubscribe(),
                                    (f.current = t =
                                      u(
                                        c(e, {
                                          subscriptionOptions: m.current,
                                          forceRefetch: !n,
                                        })
                                      )),
                                    p(e);
                                }),
                                t
                              );
                            },
                            [u, c]
                          );
                          return (
                            (0, t.useEffect)(
                              () => () => {
                                var e;
                                null === f ||
                                  void 0 === f ||
                                  null === (e = f.current) ||
                                  void 0 === e ||
                                  e.unsubscribe();
                              },
                              []
                            ),
                            (0, t.useEffect)(() => {
                              h === ii || f.current || v(h, !0);
                            }, [h, v]),
                            (0, t.useMemo)(() => [v, h], [v, h])
                          );
                        },
                        f = function (i) {
                          let { skip: o = !1, selectFromResult: r } =
                            arguments.length > 1 && void 0 !== arguments[1]
                              ? arguments[1]
                              : {};
                          const { select: d } = n.endpoints[e],
                            p = oi(o ? Nn : i, c, u.endpointDefinitions[e], e),
                            f = (0, t.useRef)(void 0),
                            g = (0, t.useMemo)(
                              () =>
                                l([d(p), (e, t) => t, (e) => p], h, {
                                  memoizeOptions: { resultEqualityCheck: C },
                                }),
                              [d, p]
                            ),
                            m = (0, t.useMemo)(
                              () =>
                                r
                                  ? l([g], r, {
                                      devModeChecks: {
                                        identityFunctionCheck: "never",
                                      },
                                    })
                                  : g,
                              [g, r]
                            ),
                            v = a((e) => m(e, f.current), C),
                            b = s(),
                            x = g(b.getState(), f.current);
                          return (
                            li(() => {
                              f.current = x;
                            }, [x]),
                            v
                          );
                        };
                      return {
                        useQueryState: f,
                        useQuerySubscription: r,
                        useLazyQuerySubscription: p,
                        useLazyQuery(e) {
                          const [n, i] = p(e),
                            o = f(i, { ...e, skip: i === ii }),
                            a = (0, t.useMemo)(() => ({ lastArg: i }), [i]);
                          return (0, t.useMemo)(() => [n, o, a], [n, o, a]);
                        },
                        useQuery(e, n) {
                          const i = r(e, n),
                            o = f(e, {
                              selectFromResult:
                                e === Nn ||
                                (null !== n && void 0 !== n && n.skip)
                                  ? void 0
                                  : ci,
                              ...n,
                            }),
                            {
                              data: a,
                              status: s,
                              isLoading: l,
                              isSuccess: c,
                              isError: u,
                              error: d,
                            } = o;
                          return (
                            (0, t.useDebugValue)({
                              data: a,
                              status: s,
                              isLoading: l,
                              isSuccess: c,
                              isError: u,
                              error: d,
                            }),
                            (0, t.useMemo)(() => ({ ...o, ...i }), [o, i])
                          );
                        },
                      };
                    },
                    buildMutationHook: function (e) {
                      return function () {
                        let { selectFromResult: s, fixedCacheKey: r } =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                        const { select: c, initiate: u } = n.endpoints[e],
                          d = o(),
                          [h, p] = (0, t.useState)();
                        (0, t.useEffect)(
                          () => () => {
                            (null !== h &&
                              void 0 !== h &&
                              h.arg.fixedCacheKey) ||
                              null === h ||
                              void 0 === h ||
                              h.reset();
                          },
                          [h]
                        );
                        const f = (0, t.useCallback)(
                            function (e) {
                              const t = d(u(e, { fixedCacheKey: r }));
                              return p(t), t;
                            },
                            [d, u, r]
                          ),
                          { requestId: g } = h || {},
                          m = (0, t.useMemo)(
                            () =>
                              c({
                                fixedCacheKey: r,
                                requestId:
                                  null === h || void 0 === h
                                    ? void 0
                                    : h.requestId,
                              }),
                            [r, h, c]
                          ),
                          v = (0, t.useMemo)(() => (s ? l([m], s) : m), [s, m]),
                          b = a(v, C),
                          x =
                            null == r
                              ? null === h || void 0 === h
                                ? void 0
                                : h.arg.originalArgs
                              : void 0,
                          y = (0, t.useCallback)(() => {
                            i(() => {
                              h && p(void 0),
                                r &&
                                  d(
                                    n.internalActions.removeMutationResult({
                                      requestId: g,
                                      fixedCacheKey: r,
                                    })
                                  );
                            });
                          }, [d, r, h, g]),
                          {
                            endpointName: w,
                            data: S,
                            status: k,
                            isLoading: A,
                            isSuccess: M,
                            isError: P,
                            error: E,
                          } = b;
                        (0, t.useDebugValue)({
                          endpointName: w,
                          data: S,
                          status: k,
                          isLoading: A,
                          isSuccess: M,
                          isError: P,
                          error: E,
                        });
                        const L = (0, t.useMemo)(
                          () => ({ ...b, originalArgs: x, reset: y }),
                          [b, x, y]
                        );
                        return (0, t.useMemo)(() => [f, L], [f, L]);
                      };
                    },
                    usePrefetch: function (e, i) {
                      const a = o(),
                        s = ai(i);
                      return (0, t.useCallback)(
                        (t, i) => a(n.util.prefetch(e, t, { ...s, ...i })),
                        [e, a, s]
                      );
                    },
                  };
                  function h(e, t, n) {
                    var i, o;
                    if (
                      null !== (i = t) &&
                      void 0 !== i &&
                      i.endpointName &&
                      e.isUninitialized
                    ) {
                      const { endpointName: e } = t,
                        i = u.endpointDefinitions[e];
                      c({
                        queryArgs: t.originalArgs,
                        endpointDefinition: i,
                        endpointName: e,
                      }) ===
                        c({
                          queryArgs: n,
                          endpointDefinition: i,
                          endpointName: e,
                        }) && (t = void 0);
                    }
                    let a = e.isSuccess
                      ? e.data
                      : null === (o = t) || void 0 === o
                      ? void 0
                      : o.data;
                    void 0 === a && (a = e.data);
                    const s = void 0 !== a,
                      r = e.isLoading,
                      l = (!t || t.isLoading || t.isUninitialized) && !s && r,
                      d = e.isSuccess || (r && s);
                    return {
                      ...e,
                      data: a,
                      currentData: e.data,
                      isFetching: r,
                      isLoading: l,
                      isSuccess: d,
                    };
                  }
                })({
                  api: a,
                  moduleOptions: {
                    batch: e,
                    hooks: n,
                    unstable__sideEffectsInRender: o,
                    createSelector: i,
                  },
                  serializeQueryArgs: l,
                  context: r,
                });
              return (
                Jn(c, { usePrefetch: h }),
                Jn(r, { batch: e }),
                {
                  injectEndpoint(e, t) {
                    if ("query" === t.type) {
                      const {
                        useQuery: t,
                        useLazyQuery: n,
                        useLazyQuerySubscription: i,
                        useQueryState: o,
                        useQuerySubscription: s,
                      } = u(e);
                      Jn(c.endpoints[e], {
                        useQuery: t,
                        useLazyQuery: n,
                        useLazyQuerySubscription: i,
                        useQueryState: o,
                        useQuerySubscription: s,
                      }),
                        (a["use".concat(ei(e), "Query")] = t),
                        (a["useLazy".concat(ei(e), "Query")] = n);
                    } else if (
                      (function (e) {
                        return "mutation" === e.type;
                      })(t)
                    ) {
                      const t = d(e);
                      Jn(c.endpoints[e], { useMutation: t }),
                        (a["use".concat(ei(e), "Mutation")] = t);
                    }
                  },
                }
              );
            },
          };
        })()
      );
      function hi(e, t) {
        return function () {
          return e.apply(t, arguments);
        };
      }
      const { toString: pi } = Object.prototype,
        { getPrototypeOf: fi } = Object,
        gi = ((e) => (t) => {
          const n = pi.call(t);
          return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
        })(Object.create(null)),
        mi = (e) => ((e = e.toLowerCase()), (t) => gi(t) === e),
        vi = (e) => (t) => typeof t === e,
        { isArray: bi } = Array,
        xi = vi("undefined");
      const yi = mi("ArrayBuffer");
      const wi = vi("string"),
        Si = vi("function"),
        ki = vi("number"),
        Ai = (e) => null !== e && "object" === typeof e,
        Ci = (e) => {
          if ("object" !== gi(e)) return !1;
          const t = fi(e);
          return (
            (null === t ||
              t === Object.prototype ||
              null === Object.getPrototypeOf(t)) &&
            !(Symbol.toStringTag in e) &&
            !(Symbol.iterator in e)
          );
        },
        Mi = mi("Date"),
        Pi = mi("File"),
        Ei = mi("Blob"),
        Li = mi("FileList"),
        Ti = mi("URLSearchParams"),
        [Oi, Ri, Ii, Ni] = [
          "ReadableStream",
          "Request",
          "Response",
          "Headers",
        ].map(mi);
      function _i(e, t) {
        let n,
          i,
          { allOwnKeys: o = !1 } =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        if (null !== e && "undefined" !== typeof e)
          if (("object" !== typeof e && (e = [e]), bi(e)))
            for (n = 0, i = e.length; n < i; n++) t.call(null, e[n], n, e);
          else {
            const i = o ? Object.getOwnPropertyNames(e) : Object.keys(e),
              a = i.length;
            let s;
            for (n = 0; n < a; n++) (s = i[n]), t.call(null, e[s], s, e);
          }
      }
      function Di(e, t) {
        t = t.toLowerCase();
        const n = Object.keys(e);
        let i,
          o = n.length;
        for (; o-- > 0; ) if (((i = n[o]), t === i.toLowerCase())) return i;
        return null;
      }
      const zi =
          "undefined" !== typeof globalThis
            ? globalThis
            : "undefined" !== typeof self
            ? self
            : "undefined" !== typeof window
            ? window
            : global,
        ji = (e) => !xi(e) && e !== zi;
      const Bi =
        ((Fi = "undefined" !== typeof Uint8Array && fi(Uint8Array)),
        (e) => Fi && e instanceof Fi);
      var Fi;
      const Wi = mi("HTMLFormElement"),
        Hi = ((e) => {
          let { hasOwnProperty: t } = e;
          return (e, n) => t.call(e, n);
        })(Object.prototype),
        Gi = mi("RegExp"),
        Vi = (e, t) => {
          const n = Object.getOwnPropertyDescriptors(e),
            i = {};
          _i(n, (n, o) => {
            let a;
            !1 !== (a = t(n, o, e)) && (i[o] = a || n);
          }),
            Object.defineProperties(e, i);
        },
        Ui = "abcdefghijklmnopqrstuvwxyz",
        Yi = "0123456789",
        Xi = { DIGIT: Yi, ALPHA: Ui, ALPHA_DIGIT: Ui + Ui.toUpperCase() + Yi };
      const Ki = mi("AsyncFunction"),
        qi = ((e, t) => {
          return e
            ? setImmediate
            : t
            ? ((n = "axios@".concat(Math.random())),
              (i = []),
              zi.addEventListener(
                "message",
                (e) => {
                  let { source: t, data: o } = e;
                  t === zi && o === n && i.length && i.shift()();
                },
                !1
              ),
              (e) => {
                i.push(e), zi.postMessage(n, "*");
              })
            : (e) => setTimeout(e);
          var n, i;
        })("function" === typeof setImmediate, Si(zi.postMessage)),
        Zi =
          "undefined" !== typeof queueMicrotask
            ? queueMicrotask.bind(zi)
            : ("undefined" !== typeof process && process.nextTick) || qi,
        Qi = {
          isArray: bi,
          isArrayBuffer: yi,
          isBuffer: function (e) {
            return (
              null !== e &&
              !xi(e) &&
              null !== e.constructor &&
              !xi(e.constructor) &&
              Si(e.constructor.isBuffer) &&
              e.constructor.isBuffer(e)
            );
          },
          isFormData: (e) => {
            let t;
            return (
              e &&
              (("function" === typeof FormData && e instanceof FormData) ||
                (Si(e.append) &&
                  ("formdata" === (t = gi(e)) ||
                    ("object" === t &&
                      Si(e.toString) &&
                      "[object FormData]" === e.toString()))))
            );
          },
          isArrayBufferView: function (e) {
            let t;
            return (
              (t =
                "undefined" !== typeof ArrayBuffer && ArrayBuffer.isView
                  ? ArrayBuffer.isView(e)
                  : e && e.buffer && yi(e.buffer)),
              t
            );
          },
          isString: wi,
          isNumber: ki,
          isBoolean: (e) => !0 === e || !1 === e,
          isObject: Ai,
          isPlainObject: Ci,
          isReadableStream: Oi,
          isRequest: Ri,
          isResponse: Ii,
          isHeaders: Ni,
          isUndefined: xi,
          isDate: Mi,
          isFile: Pi,
          isBlob: Ei,
          isRegExp: Gi,
          isFunction: Si,
          isStream: (e) => Ai(e) && Si(e.pipe),
          isURLSearchParams: Ti,
          isTypedArray: Bi,
          isFileList: Li,
          forEach: _i,
          merge: function e() {
            const { caseless: t } = (ji(this) && this) || {},
              n = {},
              i = (i, o) => {
                const a = (t && Di(n, o)) || o;
                Ci(n[a]) && Ci(i)
                  ? (n[a] = e(n[a], i))
                  : Ci(i)
                  ? (n[a] = e({}, i))
                  : bi(i)
                  ? (n[a] = i.slice())
                  : (n[a] = i);
              };
            for (let o = 0, a = arguments.length; o < a; o++)
              arguments[o] && _i(arguments[o], i);
            return n;
          },
          extend: function (e, t, n) {
            let { allOwnKeys: i } =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {};
            return (
              _i(
                t,
                (t, i) => {
                  n && Si(t) ? (e[i] = hi(t, n)) : (e[i] = t);
                },
                { allOwnKeys: i }
              ),
              e
            );
          },
          trim: (e) =>
            e.trim
              ? e.trim()
              : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
          stripBOM: (e) => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
          inherits: (e, t, n, i) => {
            (e.prototype = Object.create(t.prototype, i)),
              (e.prototype.constructor = e),
              Object.defineProperty(e, "super", { value: t.prototype }),
              n && Object.assign(e.prototype, n);
          },
          toFlatObject: (e, t, n, i) => {
            let o, a, s;
            const r = {};
            if (((t = t || {}), null == e)) return t;
            do {
              for (o = Object.getOwnPropertyNames(e), a = o.length; a-- > 0; )
                (s = o[a]),
                  (i && !i(s, e, t)) || r[s] || ((t[s] = e[s]), (r[s] = !0));
              e = !1 !== n && fi(e);
            } while (e && (!n || n(e, t)) && e !== Object.prototype);
            return t;
          },
          kindOf: gi,
          kindOfTest: mi,
          endsWith: (e, t, n) => {
            (e = String(e)),
              (void 0 === n || n > e.length) && (n = e.length),
              (n -= t.length);
            const i = e.indexOf(t, n);
            return -1 !== i && i === n;
          },
          toArray: (e) => {
            if (!e) return null;
            if (bi(e)) return e;
            let t = e.length;
            if (!ki(t)) return null;
            const n = new Array(t);
            for (; t-- > 0; ) n[t] = e[t];
            return n;
          },
          forEachEntry: (e, t) => {
            const n = (e && e[Symbol.iterator]).call(e);
            let i;
            for (; (i = n.next()) && !i.done; ) {
              const n = i.value;
              t.call(e, n[0], n[1]);
            }
          },
          matchAll: (e, t) => {
            let n;
            const i = [];
            for (; null !== (n = e.exec(t)); ) i.push(n);
            return i;
          },
          isHTMLForm: Wi,
          hasOwnProperty: Hi,
          hasOwnProp: Hi,
          reduceDescriptors: Vi,
          freezeMethods: (e) => {
            Vi(e, (t, n) => {
              if (Si(e) && -1 !== ["arguments", "caller", "callee"].indexOf(n))
                return !1;
              const i = e[n];
              Si(i) &&
                ((t.enumerable = !1),
                "writable" in t
                  ? (t.writable = !1)
                  : t.set ||
                    (t.set = () => {
                      throw Error(
                        "Can not rewrite read-only method '" + n + "'"
                      );
                    }));
            });
          },
          toObjectSet: (e, t) => {
            const n = {},
              i = (e) => {
                e.forEach((e) => {
                  n[e] = !0;
                });
              };
            return bi(e) ? i(e) : i(String(e).split(t)), n;
          },
          toCamelCase: (e) =>
            e
              .toLowerCase()
              .replace(/[-_\s]([a-z\d])(\w*)/g, function (e, t, n) {
                return t.toUpperCase() + n;
              }),
          noop: () => {},
          toFiniteNumber: (e, t) =>
            null != e && Number.isFinite((e = +e)) ? e : t,
          findKey: Di,
          global: zi,
          isContextDefined: ji,
          ALPHABET: Xi,
          generateString: function () {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 16,
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : Xi.ALPHA_DIGIT,
              n = "";
            const { length: i } = t;
            for (; e--; ) n += t[(Math.random() * i) | 0];
            return n;
          },
          isSpecCompliantForm: function (e) {
            return !!(
              e &&
              Si(e.append) &&
              "FormData" === e[Symbol.toStringTag] &&
              e[Symbol.iterator]
            );
          },
          toJSONObject: (e) => {
            const t = new Array(10),
              n = (e, i) => {
                if (Ai(e)) {
                  if (t.indexOf(e) >= 0) return;
                  if (!("toJSON" in e)) {
                    t[i] = e;
                    const o = bi(e) ? [] : {};
                    return (
                      _i(e, (e, t) => {
                        const a = n(e, i + 1);
                        !xi(a) && (o[t] = a);
                      }),
                      (t[i] = void 0),
                      o
                    );
                  }
                }
                return e;
              };
            return n(e, 0);
          },
          isAsyncFn: Ki,
          isThenable: (e) => e && (Ai(e) || Si(e)) && Si(e.then) && Si(e.catch),
          setImmediate: qi,
          asap: Zi,
        };
      function $i(e, t, n, i, o) {
        Error.call(this),
          Error.captureStackTrace
            ? Error.captureStackTrace(this, this.constructor)
            : (this.stack = new Error().stack),
          (this.message = e),
          (this.name = "AxiosError"),
          t && (this.code = t),
          n && (this.config = n),
          i && (this.request = i),
          o && (this.response = o);
      }
      Qi.inherits($i, Error, {
        toJSON: function () {
          return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: Qi.toJSONObject(this.config),
            code: this.code,
            status:
              this.response && this.response.status
                ? this.response.status
                : null,
          };
        },
      });
      const Ji = $i.prototype,
        eo = {};
      [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL",
      ].forEach((e) => {
        eo[e] = { value: e };
      }),
        Object.defineProperties($i, eo),
        Object.defineProperty(Ji, "isAxiosError", { value: !0 }),
        ($i.from = (e, t, n, i, o, a) => {
          const s = Object.create(Ji);
          return (
            Qi.toFlatObject(
              e,
              s,
              function (e) {
                return e !== Error.prototype;
              },
              (e) => "isAxiosError" !== e
            ),
            $i.call(s, e.message, t, n, i, o),
            (s.cause = e),
            (s.name = e.name),
            a && Object.assign(s, a),
            s
          );
        });
      const to = $i;
      function no(e) {
        return Qi.isPlainObject(e) || Qi.isArray(e);
      }
      function io(e) {
        return Qi.endsWith(e, "[]") ? e.slice(0, -2) : e;
      }
      function oo(e, t, n) {
        return e
          ? e
              .concat(t)
              .map(function (e, t) {
                return (e = io(e)), !n && t ? "[" + e + "]" : e;
              })
              .join(n ? "." : "")
          : t;
      }
      const ao = Qi.toFlatObject(Qi, {}, null, function (e) {
        return /^is[A-Z]/.test(e);
      });
      const so = function (e, t, n) {
        if (!Qi.isObject(e)) throw new TypeError("target must be an object");
        t = t || new FormData();
        const i = (n = Qi.toFlatObject(
            n,
            { metaTokens: !0, dots: !1, indexes: !1 },
            !1,
            function (e, t) {
              return !Qi.isUndefined(t[e]);
            }
          )).metaTokens,
          o = n.visitor || c,
          a = n.dots,
          s = n.indexes,
          r =
            (n.Blob || ("undefined" !== typeof Blob && Blob)) &&
            Qi.isSpecCompliantForm(t);
        if (!Qi.isFunction(o))
          throw new TypeError("visitor must be a function");
        function l(e) {
          if (null === e) return "";
          if (Qi.isDate(e)) return e.toISOString();
          if (!r && Qi.isBlob(e))
            throw new to("Blob is not supported. Use a Buffer instead.");
          return Qi.isArrayBuffer(e) || Qi.isTypedArray(e)
            ? r && "function" === typeof Blob
              ? new Blob([e])
              : Buffer.from(e)
            : e;
        }
        function c(e, n, o) {
          let r = e;
          if (e && !o && "object" === typeof e)
            if (Qi.endsWith(n, "{}"))
              (n = i ? n : n.slice(0, -2)), (e = JSON.stringify(e));
            else if (
              (Qi.isArray(e) &&
                (function (e) {
                  return Qi.isArray(e) && !e.some(no);
                })(e)) ||
              ((Qi.isFileList(e) || Qi.endsWith(n, "[]")) &&
                (r = Qi.toArray(e)))
            )
              return (
                (n = io(n)),
                r.forEach(function (e, i) {
                  !Qi.isUndefined(e) &&
                    null !== e &&
                    t.append(
                      !0 === s ? oo([n], i, a) : null === s ? n : n + "[]",
                      l(e)
                    );
                }),
                !1
              );
          return !!no(e) || (t.append(oo(o, n, a), l(e)), !1);
        }
        const u = [],
          d = Object.assign(ao, {
            defaultVisitor: c,
            convertValue: l,
            isVisitable: no,
          });
        if (!Qi.isObject(e)) throw new TypeError("data must be an object");
        return (
          (function e(n, i) {
            if (!Qi.isUndefined(n)) {
              if (-1 !== u.indexOf(n))
                throw Error("Circular reference detected in " + i.join("."));
              u.push(n),
                Qi.forEach(n, function (n, a) {
                  !0 ===
                    (!(Qi.isUndefined(n) || null === n) &&
                      o.call(t, n, Qi.isString(a) ? a.trim() : a, i, d)) &&
                    e(n, i ? i.concat(a) : [a]);
                }),
                u.pop();
            }
          })(e),
          t
        );
      };
      function ro(e) {
        const t = {
          "!": "%21",
          "'": "%27",
          "(": "%28",
          ")": "%29",
          "~": "%7E",
          "%20": "+",
          "%00": "\0",
        };
        return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (e) {
          return t[e];
        });
      }
      function lo(e, t) {
        (this._pairs = []), e && so(e, this, t);
      }
      const co = lo.prototype;
      (co.append = function (e, t) {
        this._pairs.push([e, t]);
      }),
        (co.toString = function (e) {
          const t = e
            ? function (t) {
                return e.call(this, t, ro);
              }
            : ro;
          return this._pairs
            .map(function (e) {
              return t(e[0]) + "=" + t(e[1]);
            }, "")
            .join("&");
        });
      const uo = lo;
      function ho(e) {
        return encodeURIComponent(e)
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",")
          .replace(/%20/g, "+")
          .replace(/%5B/gi, "[")
          .replace(/%5D/gi, "]");
      }
      function po(e, t, n) {
        if (!t) return e;
        const i = (n && n.encode) || ho,
          o = n && n.serialize;
        let a;
        if (
          ((a = o
            ? o(t, n)
            : Qi.isURLSearchParams(t)
            ? t.toString()
            : new uo(t, n).toString(i)),
          a)
        ) {
          const t = e.indexOf("#");
          -1 !== t && (e = e.slice(0, t)),
            (e += (-1 === e.indexOf("?") ? "?" : "&") + a);
        }
        return e;
      }
      const fo = class {
          constructor() {
            this.handlers = [];
          }
          use(e, t, n) {
            return (
              this.handlers.push({
                fulfilled: e,
                rejected: t,
                synchronous: !!n && n.synchronous,
                runWhen: n ? n.runWhen : null,
              }),
              this.handlers.length - 1
            );
          }
          eject(e) {
            this.handlers[e] && (this.handlers[e] = null);
          }
          clear() {
            this.handlers && (this.handlers = []);
          }
          forEach(e) {
            Qi.forEach(this.handlers, function (t) {
              null !== t && e(t);
            });
          }
        },
        go = {
          silentJSONParsing: !0,
          forcedJSONParsing: !0,
          clarifyTimeoutError: !1,
        },
        mo = {
          isBrowser: !0,
          classes: {
            URLSearchParams:
              "undefined" !== typeof URLSearchParams ? URLSearchParams : uo,
            FormData: "undefined" !== typeof FormData ? FormData : null,
            Blob: "undefined" !== typeof Blob ? Blob : null,
          },
          protocols: ["http", "https", "file", "blob", "url", "data"],
        },
        vo = "undefined" !== typeof window && "undefined" !== typeof document,
        bo =
          ((xo = "undefined" !== typeof navigator && navigator.product),
          vo && ["ReactNative", "NativeScript", "NS"].indexOf(xo) < 0);
      var xo;
      const yo =
          "undefined" !== typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          "function" === typeof self.importScripts,
        wo = (vo && window.location.href) || "http://localhost",
        So = { ...e, ...mo };
      const ko = function (e) {
        function t(e, n, i, o) {
          let a = e[o++];
          if ("__proto__" === a) return !0;
          const s = Number.isFinite(+a),
            r = o >= e.length;
          if (((a = !a && Qi.isArray(i) ? i.length : a), r))
            return Qi.hasOwnProp(i, a) ? (i[a] = [i[a], n]) : (i[a] = n), !s;
          (i[a] && Qi.isObject(i[a])) || (i[a] = []);
          return (
            t(e, n, i[a], o) &&
              Qi.isArray(i[a]) &&
              (i[a] = (function (e) {
                const t = {},
                  n = Object.keys(e);
                let i;
                const o = n.length;
                let a;
                for (i = 0; i < o; i++) (a = n[i]), (t[a] = e[a]);
                return t;
              })(i[a])),
            !s
          );
        }
        if (Qi.isFormData(e) && Qi.isFunction(e.entries)) {
          const n = {};
          return (
            Qi.forEachEntry(e, (e, i) => {
              t(
                (function (e) {
                  return Qi.matchAll(/\w+|\[(\w*)]/g, e).map((e) =>
                    "[]" === e[0] ? "" : e[1] || e[0]
                  );
                })(e),
                i,
                n,
                0
              );
            }),
            n
          );
        }
        return null;
      };
      const Ao = {
        transitional: go,
        adapter: ["xhr", "http", "fetch"],
        transformRequest: [
          function (e, t) {
            const n = t.getContentType() || "",
              i = n.indexOf("application/json") > -1,
              o = Qi.isObject(e);
            o && Qi.isHTMLForm(e) && (e = new FormData(e));
            if (Qi.isFormData(e)) return i ? JSON.stringify(ko(e)) : e;
            if (
              Qi.isArrayBuffer(e) ||
              Qi.isBuffer(e) ||
              Qi.isStream(e) ||
              Qi.isFile(e) ||
              Qi.isBlob(e) ||
              Qi.isReadableStream(e)
            )
              return e;
            if (Qi.isArrayBufferView(e)) return e.buffer;
            if (Qi.isURLSearchParams(e))
              return (
                t.setContentType(
                  "application/x-www-form-urlencoded;charset=utf-8",
                  !1
                ),
                e.toString()
              );
            let a;
            if (o) {
              if (n.indexOf("application/x-www-form-urlencoded") > -1)
                return (function (e, t) {
                  return so(
                    e,
                    new So.classes.URLSearchParams(),
                    Object.assign(
                      {
                        visitor: function (e, t, n, i) {
                          return So.isNode && Qi.isBuffer(e)
                            ? (this.append(t, e.toString("base64")), !1)
                            : i.defaultVisitor.apply(this, arguments);
                        },
                      },
                      t
                    )
                  );
                })(e, this.formSerializer).toString();
              if (
                (a = Qi.isFileList(e)) ||
                n.indexOf("multipart/form-data") > -1
              ) {
                const t = this.env && this.env.FormData;
                return so(
                  a ? { "files[]": e } : e,
                  t && new t(),
                  this.formSerializer
                );
              }
            }
            return o || i
              ? (t.setContentType("application/json", !1),
                (function (e, t, n) {
                  if (Qi.isString(e))
                    try {
                      return (t || JSON.parse)(e), Qi.trim(e);
                    } catch (i) {
                      if ("SyntaxError" !== i.name) throw i;
                    }
                  return (n || JSON.stringify)(e);
                })(e))
              : e;
          },
        ],
        transformResponse: [
          function (e) {
            const t = this.transitional || Ao.transitional,
              n = t && t.forcedJSONParsing,
              i = "json" === this.responseType;
            if (Qi.isResponse(e) || Qi.isReadableStream(e)) return e;
            if (e && Qi.isString(e) && ((n && !this.responseType) || i)) {
              const n = !(t && t.silentJSONParsing) && i;
              try {
                return JSON.parse(e);
              } catch (o) {
                if (n) {
                  if ("SyntaxError" === o.name)
                    throw to.from(
                      o,
                      to.ERR_BAD_RESPONSE,
                      this,
                      null,
                      this.response
                    );
                  throw o;
                }
              }
            }
            return e;
          },
        ],
        timeout: 0,
        xsrfCookieName: "XSRF-TOKEN",
        xsrfHeaderName: "X-XSRF-TOKEN",
        maxContentLength: -1,
        maxBodyLength: -1,
        env: { FormData: So.classes.FormData, Blob: So.classes.Blob },
        validateStatus: function (e) {
          return e >= 200 && e < 300;
        },
        headers: {
          common: {
            Accept: "application/json, text/plain, */*",
            "Content-Type": void 0,
          },
        },
      };
      Qi.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
        Ao.headers[e] = {};
      });
      const Co = Ao,
        Mo = Qi.toObjectSet([
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent",
        ]),
        Po = Symbol("internals");
      function Eo(e) {
        return e && String(e).trim().toLowerCase();
      }
      function Lo(e) {
        return !1 === e || null == e
          ? e
          : Qi.isArray(e)
          ? e.map(Lo)
          : String(e);
      }
      function To(e, t, n, i, o) {
        return Qi.isFunction(i)
          ? i.call(this, t, n)
          : (o && (t = n),
            Qi.isString(t)
              ? Qi.isString(i)
                ? -1 !== t.indexOf(i)
                : Qi.isRegExp(i)
                ? i.test(t)
                : void 0
              : void 0);
      }
      class Oo {
        constructor(e) {
          e && this.set(e);
        }
        set(e, t, n) {
          const i = this;
          function o(e, t, n) {
            const o = Eo(t);
            if (!o) throw new Error("header name must be a non-empty string");
            const a = Qi.findKey(i, o);
            (!a ||
              void 0 === i[a] ||
              !0 === n ||
              (void 0 === n && !1 !== i[a])) &&
              (i[a || t] = Lo(e));
          }
          const a = (e, t) => Qi.forEach(e, (e, n) => o(e, n, t));
          if (Qi.isPlainObject(e) || e instanceof this.constructor) a(e, t);
          else if (
            Qi.isString(e) &&
            (e = e.trim()) &&
            !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim())
          )
            a(
              ((e) => {
                const t = {};
                let n, i, o;
                return (
                  e &&
                    e.split("\n").forEach(function (e) {
                      (o = e.indexOf(":")),
                        (n = e.substring(0, o).trim().toLowerCase()),
                        (i = e.substring(o + 1).trim()),
                        !n ||
                          (t[n] && Mo[n]) ||
                          ("set-cookie" === n
                            ? t[n]
                              ? t[n].push(i)
                              : (t[n] = [i])
                            : (t[n] = t[n] ? t[n] + ", " + i : i));
                    }),
                  t
                );
              })(e),
              t
            );
          else if (Qi.isHeaders(e))
            for (const [s, r] of e.entries()) o(r, s, n);
          else null != e && o(t, e, n);
          return this;
        }
        get(e, t) {
          if ((e = Eo(e))) {
            const n = Qi.findKey(this, e);
            if (n) {
              const e = this[n];
              if (!t) return e;
              if (!0 === t)
                return (function (e) {
                  const t = Object.create(null),
                    n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                  let i;
                  for (; (i = n.exec(e)); ) t[i[1]] = i[2];
                  return t;
                })(e);
              if (Qi.isFunction(t)) return t.call(this, e, n);
              if (Qi.isRegExp(t)) return t.exec(e);
              throw new TypeError("parser must be boolean|regexp|function");
            }
          }
        }
        has(e, t) {
          if ((e = Eo(e))) {
            const n = Qi.findKey(this, e);
            return !(!n || void 0 === this[n] || (t && !To(0, this[n], n, t)));
          }
          return !1;
        }
        delete(e, t) {
          const n = this;
          let i = !1;
          function o(e) {
            if ((e = Eo(e))) {
              const o = Qi.findKey(n, e);
              !o || (t && !To(0, n[o], o, t)) || (delete n[o], (i = !0));
            }
          }
          return Qi.isArray(e) ? e.forEach(o) : o(e), i;
        }
        clear(e) {
          const t = Object.keys(this);
          let n = t.length,
            i = !1;
          for (; n--; ) {
            const o = t[n];
            (e && !To(0, this[o], o, e, !0)) || (delete this[o], (i = !0));
          }
          return i;
        }
        normalize(e) {
          const t = this,
            n = {};
          return (
            Qi.forEach(this, (i, o) => {
              const a = Qi.findKey(n, o);
              if (a) return (t[a] = Lo(i)), void delete t[o];
              const s = e
                ? (function (e) {
                    return e
                      .trim()
                      .toLowerCase()
                      .replace(
                        /([a-z\d])(\w*)/g,
                        (e, t, n) => t.toUpperCase() + n
                      );
                  })(o)
                : String(o).trim();
              s !== o && delete t[o], (t[s] = Lo(i)), (n[s] = !0);
            }),
            this
          );
        }
        concat() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return this.constructor.concat(this, ...t);
        }
        toJSON(e) {
          const t = Object.create(null);
          return (
            Qi.forEach(this, (n, i) => {
              null != n &&
                !1 !== n &&
                (t[i] = e && Qi.isArray(n) ? n.join(", ") : n);
            }),
            t
          );
        }
        [Symbol.iterator]() {
          return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
          return Object.entries(this.toJSON())
            .map((e) => {
              let [t, n] = e;
              return t + ": " + n;
            })
            .join("\n");
        }
        get [Symbol.toStringTag]() {
          return "AxiosHeaders";
        }
        static from(e) {
          return e instanceof this ? e : new this(e);
        }
        static concat(e) {
          const t = new this(e);
          for (
            var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), o = 1;
            o < n;
            o++
          )
            i[o - 1] = arguments[o];
          return i.forEach((e) => t.set(e)), t;
        }
        static accessor(e) {
          const t = (this[Po] = this[Po] = { accessors: {} }).accessors,
            n = this.prototype;
          function i(e) {
            const i = Eo(e);
            t[i] ||
              (!(function (e, t) {
                const n = Qi.toCamelCase(" " + t);
                ["get", "set", "has"].forEach((i) => {
                  Object.defineProperty(e, i + n, {
                    value: function (e, n, o) {
                      return this[i].call(this, t, e, n, o);
                    },
                    configurable: !0,
                  });
                });
              })(n, e),
              (t[i] = !0));
          }
          return Qi.isArray(e) ? e.forEach(i) : i(e), this;
        }
      }
      Oo.accessor([
        "Content-Type",
        "Content-Length",
        "Accept",
        "Accept-Encoding",
        "User-Agent",
        "Authorization",
      ]),
        Qi.reduceDescriptors(Oo.prototype, (e, t) => {
          let { value: n } = e,
            i = t[0].toUpperCase() + t.slice(1);
          return {
            get: () => n,
            set(e) {
              this[i] = e;
            },
          };
        }),
        Qi.freezeMethods(Oo);
      const Ro = Oo;
      function Io(e, t) {
        const n = this || Co,
          i = t || n,
          o = Ro.from(i.headers);
        let a = i.data;
        return (
          Qi.forEach(e, function (e) {
            a = e.call(n, a, o.normalize(), t ? t.status : void 0);
          }),
          o.normalize(),
          a
        );
      }
      function No(e) {
        return !(!e || !e.__CANCEL__);
      }
      function _o(e, t, n) {
        to.call(this, null == e ? "canceled" : e, to.ERR_CANCELED, t, n),
          (this.name = "CanceledError");
      }
      Qi.inherits(_o, to, { __CANCEL__: !0 });
      const Do = _o;
      function zo(e, t, n) {
        const i = n.config.validateStatus;
        n.status && i && !i(n.status)
          ? t(
              new to(
                "Request failed with status code " + n.status,
                [to.ERR_BAD_REQUEST, to.ERR_BAD_RESPONSE][
                  Math.floor(n.status / 100) - 4
                ],
                n.config,
                n.request,
                n
              )
            )
          : e(n);
      }
      const jo = function (e, t) {
        e = e || 10;
        const n = new Array(e),
          i = new Array(e);
        let o,
          a = 0,
          s = 0;
        return (
          (t = void 0 !== t ? t : 1e3),
          function (r) {
            const l = Date.now(),
              c = i[s];
            o || (o = l), (n[a] = r), (i[a] = l);
            let u = s,
              d = 0;
            for (; u !== a; ) (d += n[u++]), (u %= e);
            if (((a = (a + 1) % e), a === s && (s = (s + 1) % e), l - o < t))
              return;
            const h = c && l - c;
            return h ? Math.round((1e3 * d) / h) : void 0;
          }
        );
      };
      const Bo = function (e, t) {
          let n,
            i,
            o = 0,
            a = 1e3 / t;
          const s = function (t) {
            let a =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : Date.now();
            (o = a),
              (n = null),
              i && (clearTimeout(i), (i = null)),
              e.apply(null, t);
          };
          return [
            function () {
              const e = Date.now(),
                t = e - o;
              for (
                var r = arguments.length, l = new Array(r), c = 0;
                c < r;
                c++
              )
                l[c] = arguments[c];
              t >= a
                ? s(l, e)
                : ((n = l),
                  i ||
                    (i = setTimeout(() => {
                      (i = null), s(n);
                    }, a - t)));
            },
            () => n && s(n),
          ];
        },
        Fo = function (e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 3,
            i = 0;
          const o = jo(50, 250);
          return Bo((n) => {
            const a = n.loaded,
              s = n.lengthComputable ? n.total : void 0,
              r = a - i,
              l = o(r);
            i = a;
            e({
              loaded: a,
              total: s,
              progress: s ? a / s : void 0,
              bytes: r,
              rate: l || void 0,
              estimated: l && s && a <= s ? (s - a) / l : void 0,
              event: n,
              lengthComputable: null != s,
              [t ? "download" : "upload"]: !0,
            });
          }, n);
        },
        Wo = (e, t) => {
          const n = null != e;
          return [
            (i) => t[0]({ lengthComputable: n, total: e, loaded: i }),
            t[1],
          ];
        },
        Ho = (e) =>
          function () {
            for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
              n[i] = arguments[i];
            return Qi.asap(() => e(...n));
          },
        Go = So.hasStandardBrowserEnv
          ? (function () {
              const e = /(msie|trident)/i.test(navigator.userAgent),
                t = document.createElement("a");
              let n;
              function i(n) {
                let i = n;
                return (
                  e && (t.setAttribute("href", i), (i = t.href)),
                  t.setAttribute("href", i),
                  {
                    href: t.href,
                    protocol: t.protocol ? t.protocol.replace(/:$/, "") : "",
                    host: t.host,
                    search: t.search ? t.search.replace(/^\?/, "") : "",
                    hash: t.hash ? t.hash.replace(/^#/, "") : "",
                    hostname: t.hostname,
                    port: t.port,
                    pathname:
                      "/" === t.pathname.charAt(0)
                        ? t.pathname
                        : "/" + t.pathname,
                  }
                );
              }
              return (
                (n = i(window.location.href)),
                function (e) {
                  const t = Qi.isString(e) ? i(e) : e;
                  return t.protocol === n.protocol && t.host === n.host;
                }
              );
            })()
          : function () {
              return !0;
            },
        Vo = So.hasStandardBrowserEnv
          ? {
              write(e, t, n, i, o, a) {
                const s = [e + "=" + encodeURIComponent(t)];
                Qi.isNumber(n) &&
                  s.push("expires=" + new Date(n).toGMTString()),
                  Qi.isString(i) && s.push("path=" + i),
                  Qi.isString(o) && s.push("domain=" + o),
                  !0 === a && s.push("secure"),
                  (document.cookie = s.join("; "));
              },
              read(e) {
                const t = document.cookie.match(
                  new RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                );
                return t ? decodeURIComponent(t[3]) : null;
              },
              remove(e) {
                this.write(e, "", Date.now() - 864e5);
              },
            }
          : { write() {}, read: () => null, remove() {} };
      function Uo(e, t) {
        return e && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)
          ? (function (e, t) {
              return t
                ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "")
                : e;
            })(e, t)
          : t;
      }
      const Yo = (e) => (e instanceof Ro ? { ...e } : e);
      function Xo(e, t) {
        t = t || {};
        const n = {};
        function i(e, t, n) {
          return Qi.isPlainObject(e) && Qi.isPlainObject(t)
            ? Qi.merge.call({ caseless: n }, e, t)
            : Qi.isPlainObject(t)
            ? Qi.merge({}, t)
            : Qi.isArray(t)
            ? t.slice()
            : t;
        }
        function o(e, t, n) {
          return Qi.isUndefined(t)
            ? Qi.isUndefined(e)
              ? void 0
              : i(void 0, e, n)
            : i(e, t, n);
        }
        function a(e, t) {
          if (!Qi.isUndefined(t)) return i(void 0, t);
        }
        function s(e, t) {
          return Qi.isUndefined(t)
            ? Qi.isUndefined(e)
              ? void 0
              : i(void 0, e)
            : i(void 0, t);
        }
        function r(n, o, a) {
          return a in t ? i(n, o) : a in e ? i(void 0, n) : void 0;
        }
        const l = {
          url: a,
          method: a,
          data: a,
          baseURL: s,
          transformRequest: s,
          transformResponse: s,
          paramsSerializer: s,
          timeout: s,
          timeoutMessage: s,
          withCredentials: s,
          withXSRFToken: s,
          adapter: s,
          responseType: s,
          xsrfCookieName: s,
          xsrfHeaderName: s,
          onUploadProgress: s,
          onDownloadProgress: s,
          decompress: s,
          maxContentLength: s,
          maxBodyLength: s,
          beforeRedirect: s,
          transport: s,
          httpAgent: s,
          httpsAgent: s,
          cancelToken: s,
          socketPath: s,
          responseEncoding: s,
          validateStatus: r,
          headers: (e, t) => o(Yo(e), Yo(t), !0),
        };
        return (
          Qi.forEach(Object.keys(Object.assign({}, e, t)), function (i) {
            const a = l[i] || o,
              s = a(e[i], t[i], i);
            (Qi.isUndefined(s) && a !== r) || (n[i] = s);
          }),
          n
        );
      }
      const Ko = (e) => {
          const t = Xo({}, e);
          let n,
            {
              data: i,
              withXSRFToken: o,
              xsrfHeaderName: a,
              xsrfCookieName: s,
              headers: r,
              auth: l,
            } = t;
          if (
            ((t.headers = r = Ro.from(r)),
            (t.url = po(Uo(t.baseURL, t.url), e.params, e.paramsSerializer)),
            l &&
              r.set(
                "Authorization",
                "Basic " +
                  btoa(
                    (l.username || "") +
                      ":" +
                      (l.password
                        ? unescape(encodeURIComponent(l.password))
                        : "")
                  )
              ),
            Qi.isFormData(i))
          )
            if (So.hasStandardBrowserEnv || So.hasStandardBrowserWebWorkerEnv)
              r.setContentType(void 0);
            else if (!1 !== (n = r.getContentType())) {
              const [e, ...t] = n
                ? n
                    .split(";")
                    .map((e) => e.trim())
                    .filter(Boolean)
                : [];
              r.setContentType([e || "multipart/form-data", ...t].join("; "));
            }
          if (
            So.hasStandardBrowserEnv &&
            (o && Qi.isFunction(o) && (o = o(t)), o || (!1 !== o && Go(t.url)))
          ) {
            const e = a && s && Vo.read(s);
            e && r.set(a, e);
          }
          return t;
        },
        qo =
          "undefined" !== typeof XMLHttpRequest &&
          function (e) {
            return new Promise(function (t, n) {
              const i = Ko(e);
              let o = i.data;
              const a = Ro.from(i.headers).normalize();
              let s,
                r,
                l,
                c,
                u,
                {
                  responseType: d,
                  onUploadProgress: h,
                  onDownloadProgress: p,
                } = i;
              function f() {
                c && c(),
                  u && u(),
                  i.cancelToken && i.cancelToken.unsubscribe(s),
                  i.signal && i.signal.removeEventListener("abort", s);
              }
              let g = new XMLHttpRequest();
              function m() {
                if (!g) return;
                const i = Ro.from(
                  "getAllResponseHeaders" in g && g.getAllResponseHeaders()
                );
                zo(
                  function (e) {
                    t(e), f();
                  },
                  function (e) {
                    n(e), f();
                  },
                  {
                    data:
                      d && "text" !== d && "json" !== d
                        ? g.response
                        : g.responseText,
                    status: g.status,
                    statusText: g.statusText,
                    headers: i,
                    config: e,
                    request: g,
                  }
                ),
                  (g = null);
              }
              g.open(i.method.toUpperCase(), i.url, !0),
                (g.timeout = i.timeout),
                "onloadend" in g
                  ? (g.onloadend = m)
                  : (g.onreadystatechange = function () {
                      g &&
                        4 === g.readyState &&
                        (0 !== g.status ||
                          (g.responseURL &&
                            0 === g.responseURL.indexOf("file:"))) &&
                        setTimeout(m);
                    }),
                (g.onabort = function () {
                  g &&
                    (n(new to("Request aborted", to.ECONNABORTED, e, g)),
                    (g = null));
                }),
                (g.onerror = function () {
                  n(new to("Network Error", to.ERR_NETWORK, e, g)), (g = null);
                }),
                (g.ontimeout = function () {
                  let t = i.timeout
                    ? "timeout of " + i.timeout + "ms exceeded"
                    : "timeout exceeded";
                  const o = i.transitional || go;
                  i.timeoutErrorMessage && (t = i.timeoutErrorMessage),
                    n(
                      new to(
                        t,
                        o.clarifyTimeoutError ? to.ETIMEDOUT : to.ECONNABORTED,
                        e,
                        g
                      )
                    ),
                    (g = null);
                }),
                void 0 === o && a.setContentType(null),
                "setRequestHeader" in g &&
                  Qi.forEach(a.toJSON(), function (e, t) {
                    g.setRequestHeader(t, e);
                  }),
                Qi.isUndefined(i.withCredentials) ||
                  (g.withCredentials = !!i.withCredentials),
                d && "json" !== d && (g.responseType = i.responseType),
                p && (([l, u] = Fo(p, !0)), g.addEventListener("progress", l)),
                h &&
                  g.upload &&
                  (([r, c] = Fo(h)),
                  g.upload.addEventListener("progress", r),
                  g.upload.addEventListener("loadend", c)),
                (i.cancelToken || i.signal) &&
                  ((s = (t) => {
                    g &&
                      (n(!t || t.type ? new Do(null, e, g) : t),
                      g.abort(),
                      (g = null));
                  }),
                  i.cancelToken && i.cancelToken.subscribe(s),
                  i.signal &&
                    (i.signal.aborted
                      ? s()
                      : i.signal.addEventListener("abort", s)));
              const v = (function (e) {
                const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
                return (t && t[1]) || "";
              })(i.url);
              v && -1 === So.protocols.indexOf(v)
                ? n(
                    new to(
                      "Unsupported protocol " + v + ":",
                      to.ERR_BAD_REQUEST,
                      e
                    )
                  )
                : g.send(o || null);
            });
          },
        Zo = (e, t) => {
          let n,
            i = new AbortController();
          const o = function (e) {
            if (!n) {
              (n = !0), s();
              const t = e instanceof Error ? e : this.reason;
              i.abort(
                t instanceof to ? t : new Do(t instanceof Error ? t.message : t)
              );
            }
          };
          let a =
            t &&
            setTimeout(() => {
              o(new to("timeout ".concat(t, " of ms exceeded"), to.ETIMEDOUT));
            }, t);
          const s = () => {
            e &&
              (a && clearTimeout(a),
              (a = null),
              e.forEach((e) => {
                e &&
                  (e.removeEventListener
                    ? e.removeEventListener("abort", o)
                    : e.unsubscribe(o));
              }),
              (e = null));
          };
          e.forEach(
            (e) => e && e.addEventListener && e.addEventListener("abort", o)
          );
          const { signal: r } = i;
          return (
            (r.unsubscribe = s),
            [
              r,
              () => {
                a && clearTimeout(a), (a = null);
              },
            ]
          );
        },
        Qo = function* (e, t) {
          let n = e.byteLength;
          if (!t || n < t) return void (yield e);
          let i,
            o = 0;
          for (; o < n; ) (i = o + t), yield e.slice(o, i), (o = i);
        },
        $o = (e, t, n, i, o) => {
          const a = (async function* (e, t, n) {
            for await (const i of e)
              yield* Qo(ArrayBuffer.isView(i) ? i : await n(String(i)), t);
          })(e, t, o);
          let s,
            r = 0,
            l = (e) => {
              s || ((s = !0), i && i(e));
            };
          return new ReadableStream(
            {
              async pull(e) {
                try {
                  const { done: t, value: i } = await a.next();
                  if (t) return l(), void e.close();
                  let o = i.byteLength;
                  if (n) {
                    let e = (r += o);
                    n(e);
                  }
                  e.enqueue(new Uint8Array(i));
                } catch (t) {
                  throw (l(t), t);
                }
              },
              cancel: (e) => (l(e), a.return()),
            },
            { highWaterMark: 2 }
          );
        },
        Jo =
          "function" === typeof fetch &&
          "function" === typeof Request &&
          "function" === typeof Response,
        ea = Jo && "function" === typeof ReadableStream,
        ta =
          Jo &&
          ("function" === typeof TextEncoder
            ? ((na = new TextEncoder()), (e) => na.encode(e))
            : async (e) => new Uint8Array(await new Response(e).arrayBuffer()));
      var na;
      const ia = function (e) {
          try {
            for (
              var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1;
              i < t;
              i++
            )
              n[i - 1] = arguments[i];
            return !!e(...n);
          } catch (o) {
            return !1;
          }
        },
        oa =
          ea &&
          ia(() => {
            let e = !1;
            const t = new Request(So.origin, {
              body: new ReadableStream(),
              method: "POST",
              get duplex() {
                return (e = !0), "half";
              },
            }).headers.has("Content-Type");
            return e && !t;
          }),
        aa = ea && ia(() => Qi.isReadableStream(new Response("").body)),
        sa = { stream: aa && ((e) => e.body) };
      var ra;
      Jo &&
        ((ra = new Response()),
        ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e) => {
          !sa[e] &&
            (sa[e] = Qi.isFunction(ra[e])
              ? (t) => t[e]()
              : (t, n) => {
                  throw new to(
                    "Response type '".concat(e, "' is not supported"),
                    to.ERR_NOT_SUPPORT,
                    n
                  );
                });
        }));
      const la = async (e, t) => {
          const n = Qi.toFiniteNumber(e.getContentLength());
          return null == n
            ? (async (e) =>
                null == e
                  ? 0
                  : Qi.isBlob(e)
                  ? e.size
                  : Qi.isSpecCompliantForm(e)
                  ? (await new Request(e).arrayBuffer()).byteLength
                  : Qi.isArrayBufferView(e) || Qi.isArrayBuffer(e)
                  ? e.byteLength
                  : (Qi.isURLSearchParams(e) && (e += ""),
                    Qi.isString(e) ? (await ta(e)).byteLength : void 0))(t)
            : n;
        },
        ca =
          Jo &&
          (async (e) => {
            let {
              url: t,
              method: n,
              data: i,
              signal: o,
              cancelToken: a,
              timeout: s,
              onDownloadProgress: r,
              onUploadProgress: l,
              responseType: c,
              headers: u,
              withCredentials: d = "same-origin",
              fetchOptions: h,
            } = Ko(e);
            c = c ? (c + "").toLowerCase() : "text";
            let p,
              f,
              [g, m] = o || a || s ? Zo([o, a], s) : [];
            const v = () => {
              !p &&
                setTimeout(() => {
                  g && g.unsubscribe();
                }),
                (p = !0);
            };
            let b;
            try {
              if (
                l &&
                oa &&
                "get" !== n &&
                "head" !== n &&
                0 !== (b = await la(u, i))
              ) {
                let e,
                  n = new Request(t, {
                    method: "POST",
                    body: i,
                    duplex: "half",
                  });
                if (
                  (Qi.isFormData(i) &&
                    (e = n.headers.get("content-type")) &&
                    u.setContentType(e),
                  n.body)
                ) {
                  const [e, t] = Wo(b, Fo(Ho(l)));
                  i = $o(n.body, 65536, e, t, ta);
                }
              }
              Qi.isString(d) || (d = d ? "include" : "omit"),
                (f = new Request(t, {
                  ...h,
                  signal: g,
                  method: n.toUpperCase(),
                  headers: u.normalize().toJSON(),
                  body: i,
                  duplex: "half",
                  credentials: d,
                }));
              let o = await fetch(f);
              const a = aa && ("stream" === c || "response" === c);
              if (aa && (r || a)) {
                const e = {};
                ["status", "statusText", "headers"].forEach((t) => {
                  e[t] = o[t];
                });
                const t = Qi.toFiniteNumber(o.headers.get("content-length")),
                  [n, i] = (r && Wo(t, Fo(Ho(r), !0))) || [];
                o = new Response(
                  $o(
                    o.body,
                    65536,
                    n,
                    () => {
                      i && i(), a && v();
                    },
                    ta
                  ),
                  e
                );
              }
              c = c || "text";
              let s = await sa[Qi.findKey(sa, c) || "text"](o, e);
              return (
                !a && v(),
                m && m(),
                await new Promise((t, n) => {
                  zo(t, n, {
                    data: s,
                    headers: Ro.from(o.headers),
                    status: o.status,
                    statusText: o.statusText,
                    config: e,
                    request: f,
                  });
                })
              );
            } catch (x) {
              if (
                (v(), x && "TypeError" === x.name && /fetch/i.test(x.message))
              )
                throw Object.assign(
                  new to("Network Error", to.ERR_NETWORK, e, f),
                  { cause: x.cause || x }
                );
              throw to.from(x, x && x.code, e, f);
            }
          }),
        ua = { http: null, xhr: qo, fetch: ca };
      Qi.forEach(ua, (e, t) => {
        if (e) {
          try {
            Object.defineProperty(e, "name", { value: t });
          } catch (n) {}
          Object.defineProperty(e, "adapterName", { value: t });
        }
      });
      const da = (e) => "- ".concat(e),
        ha = (e) => Qi.isFunction(e) || null === e || !1 === e,
        pa = (e) => {
          e = Qi.isArray(e) ? e : [e];
          const { length: t } = e;
          let n, i;
          const o = {};
          for (let a = 0; a < t; a++) {
            let t;
            if (
              ((n = e[a]),
              (i = n),
              !ha(n) && ((i = ua[(t = String(n)).toLowerCase()]), void 0 === i))
            )
              throw new to("Unknown adapter '".concat(t, "'"));
            if (i) break;
            o[t || "#" + a] = i;
          }
          if (!i) {
            const e = Object.entries(o).map((e) => {
              let [t, n] = e;
              return (
                "adapter ".concat(t, " ") +
                (!1 === n
                  ? "is not supported by the environment"
                  : "is not available in the build")
              );
            });
            let n = t
              ? e.length > 1
                ? "since :\n" + e.map(da).join("\n")
                : " " + da(e[0])
              : "as no adapter specified";
            throw new to(
              "There is no suitable adapter to dispatch the request " + n,
              "ERR_NOT_SUPPORT"
            );
          }
          return i;
        };
      function fa(e) {
        if (
          (e.cancelToken && e.cancelToken.throwIfRequested(),
          e.signal && e.signal.aborted)
        )
          throw new Do(null, e);
      }
      function ga(e) {
        fa(e),
          (e.headers = Ro.from(e.headers)),
          (e.data = Io.call(e, e.transformRequest)),
          -1 !== ["post", "put", "patch"].indexOf(e.method) &&
            e.headers.setContentType("application/x-www-form-urlencoded", !1);
        return pa(e.adapter || Co.adapter)(e).then(
          function (t) {
            return (
              fa(e),
              (t.data = Io.call(e, e.transformResponse, t)),
              (t.headers = Ro.from(t.headers)),
              t
            );
          },
          function (t) {
            return (
              No(t) ||
                (fa(e),
                t &&
                  t.response &&
                  ((t.response.data = Io.call(
                    e,
                    e.transformResponse,
                    t.response
                  )),
                  (t.response.headers = Ro.from(t.response.headers)))),
              Promise.reject(t)
            );
          }
        );
      }
      const ma = "1.7.4",
        va = {};
      ["object", "boolean", "number", "function", "string", "symbol"].forEach(
        (e, t) => {
          va[e] = function (n) {
            return typeof n === e || "a" + (t < 1 ? "n " : " ") + e;
          };
        }
      );
      const ba = {};
      va.transitional = function (e, t, n) {
        function i(e, t) {
          return (
            "[Axios v1.7.4] Transitional option '" +
            e +
            "'" +
            t +
            (n ? ". " + n : "")
          );
        }
        return (n, o, a) => {
          if (!1 === e)
            throw new to(
              i(o, " has been removed" + (t ? " in " + t : "")),
              to.ERR_DEPRECATED
            );
          return (
            t &&
              !ba[o] &&
              ((ba[o] = !0),
              console.warn(
                i(
                  o,
                  " has been deprecated since v" +
                    t +
                    " and will be removed in the near future"
                )
              )),
            !e || e(n, o, a)
          );
        };
      };
      const xa = {
          assertOptions: function (e, t, n) {
            if ("object" !== typeof e)
              throw new to(
                "options must be an object",
                to.ERR_BAD_OPTION_VALUE
              );
            const i = Object.keys(e);
            let o = i.length;
            for (; o-- > 0; ) {
              const a = i[o],
                s = t[a];
              if (s) {
                const t = e[a],
                  n = void 0 === t || s(t, a, e);
                if (!0 !== n)
                  throw new to(
                    "option " + a + " must be " + n,
                    to.ERR_BAD_OPTION_VALUE
                  );
              } else if (!0 !== n)
                throw new to("Unknown option " + a, to.ERR_BAD_OPTION);
            }
          },
          validators: va,
        },
        ya = xa.validators;
      class wa {
        constructor(e) {
          (this.defaults = e),
            (this.interceptors = { request: new fo(), response: new fo() });
        }
        async request(e, t) {
          try {
            return await this._request(e, t);
          } catch (n) {
            if (n instanceof Error) {
              let e;
              Error.captureStackTrace
                ? Error.captureStackTrace((e = {}))
                : (e = new Error());
              const t = e.stack ? e.stack.replace(/^.+\n/, "") : "";
              try {
                n.stack
                  ? t &&
                    !String(n.stack).endsWith(t.replace(/^.+\n.+\n/, "")) &&
                    (n.stack += "\n" + t)
                  : (n.stack = t);
              } catch (i) {}
            }
            throw n;
          }
        }
        _request(e, t) {
          "string" === typeof e ? ((t = t || {}).url = e) : (t = e || {}),
            (t = Xo(this.defaults, t));
          const { transitional: n, paramsSerializer: i, headers: o } = t;
          void 0 !== n &&
            xa.assertOptions(
              n,
              {
                silentJSONParsing: ya.transitional(ya.boolean),
                forcedJSONParsing: ya.transitional(ya.boolean),
                clarifyTimeoutError: ya.transitional(ya.boolean),
              },
              !1
            ),
            null != i &&
              (Qi.isFunction(i)
                ? (t.paramsSerializer = { serialize: i })
                : xa.assertOptions(
                    i,
                    { encode: ya.function, serialize: ya.function },
                    !0
                  )),
            (t.method = (
              t.method ||
              this.defaults.method ||
              "get"
            ).toLowerCase());
          let a = o && Qi.merge(o.common, o[t.method]);
          o &&
            Qi.forEach(
              ["delete", "get", "head", "post", "put", "patch", "common"],
              (e) => {
                delete o[e];
              }
            ),
            (t.headers = Ro.concat(a, o));
          const s = [];
          let r = !0;
          this.interceptors.request.forEach(function (e) {
            ("function" === typeof e.runWhen && !1 === e.runWhen(t)) ||
              ((r = r && e.synchronous), s.unshift(e.fulfilled, e.rejected));
          });
          const l = [];
          let c;
          this.interceptors.response.forEach(function (e) {
            l.push(e.fulfilled, e.rejected);
          });
          let u,
            d = 0;
          if (!r) {
            const e = [ga.bind(this), void 0];
            for (
              e.unshift.apply(e, s),
                e.push.apply(e, l),
                u = e.length,
                c = Promise.resolve(t);
              d < u;

            )
              c = c.then(e[d++], e[d++]);
            return c;
          }
          u = s.length;
          let h = t;
          for (d = 0; d < u; ) {
            const e = s[d++],
              t = s[d++];
            try {
              h = e(h);
            } catch (p) {
              t.call(this, p);
              break;
            }
          }
          try {
            c = ga.call(this, h);
          } catch (p) {
            return Promise.reject(p);
          }
          for (d = 0, u = l.length; d < u; ) c = c.then(l[d++], l[d++]);
          return c;
        }
        getUri(e) {
          return po(
            Uo((e = Xo(this.defaults, e)).baseURL, e.url),
            e.params,
            e.paramsSerializer
          );
        }
      }
      Qi.forEach(["delete", "get", "head", "options"], function (e) {
        wa.prototype[e] = function (t, n) {
          return this.request(
            Xo(n || {}, { method: e, url: t, data: (n || {}).data })
          );
        };
      }),
        Qi.forEach(["post", "put", "patch"], function (e) {
          function t(t) {
            return function (n, i, o) {
              return this.request(
                Xo(o || {}, {
                  method: e,
                  headers: t ? { "Content-Type": "multipart/form-data" } : {},
                  url: n,
                  data: i,
                })
              );
            };
          }
          (wa.prototype[e] = t()), (wa.prototype[e + "Form"] = t(!0));
        });
      const Sa = wa;
      class ka {
        constructor(e) {
          if ("function" !== typeof e)
            throw new TypeError("executor must be a function.");
          let t;
          this.promise = new Promise(function (e) {
            t = e;
          });
          const n = this;
          this.promise.then((e) => {
            if (!n._listeners) return;
            let t = n._listeners.length;
            for (; t-- > 0; ) n._listeners[t](e);
            n._listeners = null;
          }),
            (this.promise.then = (e) => {
              let t;
              const i = new Promise((e) => {
                n.subscribe(e), (t = e);
              }).then(e);
              return (
                (i.cancel = function () {
                  n.unsubscribe(t);
                }),
                i
              );
            }),
            e(function (e, i, o) {
              n.reason || ((n.reason = new Do(e, i, o)), t(n.reason));
            });
        }
        throwIfRequested() {
          if (this.reason) throw this.reason;
        }
        subscribe(e) {
          this.reason
            ? e(this.reason)
            : this._listeners
            ? this._listeners.push(e)
            : (this._listeners = [e]);
        }
        unsubscribe(e) {
          if (!this._listeners) return;
          const t = this._listeners.indexOf(e);
          -1 !== t && this._listeners.splice(t, 1);
        }
        static source() {
          let e;
          return {
            token: new ka(function (t) {
              e = t;
            }),
            cancel: e,
          };
        }
      }
      const Aa = ka;
      const Ca = {
        Continue: 100,
        SwitchingProtocols: 101,
        Processing: 102,
        EarlyHints: 103,
        Ok: 200,
        Created: 201,
        Accepted: 202,
        NonAuthoritativeInformation: 203,
        NoContent: 204,
        ResetContent: 205,
        PartialContent: 206,
        MultiStatus: 207,
        AlreadyReported: 208,
        ImUsed: 226,
        MultipleChoices: 300,
        MovedPermanently: 301,
        Found: 302,
        SeeOther: 303,
        NotModified: 304,
        UseProxy: 305,
        Unused: 306,
        TemporaryRedirect: 307,
        PermanentRedirect: 308,
        BadRequest: 400,
        Unauthorized: 401,
        PaymentRequired: 402,
        Forbidden: 403,
        NotFound: 404,
        MethodNotAllowed: 405,
        NotAcceptable: 406,
        ProxyAuthenticationRequired: 407,
        RequestTimeout: 408,
        Conflict: 409,
        Gone: 410,
        LengthRequired: 411,
        PreconditionFailed: 412,
        PayloadTooLarge: 413,
        UriTooLong: 414,
        UnsupportedMediaType: 415,
        RangeNotSatisfiable: 416,
        ExpectationFailed: 417,
        ImATeapot: 418,
        MisdirectedRequest: 421,
        UnprocessableEntity: 422,
        Locked: 423,
        FailedDependency: 424,
        TooEarly: 425,
        UpgradeRequired: 426,
        PreconditionRequired: 428,
        TooManyRequests: 429,
        RequestHeaderFieldsTooLarge: 431,
        UnavailableForLegalReasons: 451,
        InternalServerError: 500,
        NotImplemented: 501,
        BadGateway: 502,
        ServiceUnavailable: 503,
        GatewayTimeout: 504,
        HttpVersionNotSupported: 505,
        VariantAlsoNegotiates: 506,
        InsufficientStorage: 507,
        LoopDetected: 508,
        NotExtended: 510,
        NetworkAuthenticationRequired: 511,
      };
      Object.entries(Ca).forEach((e) => {
        let [t, n] = e;
        Ca[n] = t;
      });
      const Ma = Ca;
      const Pa = (function e(t) {
        const n = new Sa(t),
          i = hi(Sa.prototype.request, n);
        return (
          Qi.extend(i, Sa.prototype, n, { allOwnKeys: !0 }),
          Qi.extend(i, n, null, { allOwnKeys: !0 }),
          (i.create = function (n) {
            return e(Xo(t, n));
          }),
          i
        );
      })(Co);
      (Pa.Axios = Sa),
        (Pa.CanceledError = Do),
        (Pa.CancelToken = Aa),
        (Pa.isCancel = No),
        (Pa.VERSION = ma),
        (Pa.toFormData = so),
        (Pa.AxiosError = to),
        (Pa.Cancel = Pa.CanceledError),
        (Pa.all = function (e) {
          return Promise.all(e);
        }),
        (Pa.spread = function (e) {
          return function (t) {
            return e.apply(null, t);
          };
        }),
        (Pa.isAxiosError = function (e) {
          return Qi.isObject(e) && !0 === e.isAxiosError;
        }),
        (Pa.mergeConfig = Xo),
        (Pa.AxiosHeaders = Ro),
        (Pa.formToJSON = (e) => ko(Qi.isHTMLForm(e) ? new FormData(e) : e)),
        (Pa.getAdapter = pa),
        (Pa.HttpStatusCode = Ma),
        (Pa.default = Pa);
      const Ea = Pa,
        La = "https://backend-app.dojoprotocol.com/v1/",
        Ta = (e) => {
          const [t, n] = e.toFixed(2).split("."),
            i = t.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          return n && 0 !== parseInt(n, 10) ? "".concat(i, ".").concat(n) : i;
        },
        Oa = (e, t) => {
          const n = Math.pow(10, t);
          return Math.floor(e * n) / n;
        },
        Ra = (e) => {
          if (e < 1) return String(parseFloat(e.toPrecision(2)));
          const t = [
            { value: 1, symbol: "" },
            { value: 1e3, symbol: "k" },
            { value: 1e6, symbol: "M" },
            { value: 1e9, symbol: "B" },
            { value: 1e12, symbol: "T" },
            { value: 1e15, symbol: "P" },
            { value: 1e18, symbol: "E" },
          ];
          let n;
          for (n = t.length - 1; n > 0 && !(e >= t[n].value); n--);
          return Ia(e / t[n].value, 2) + t[n].symbol;
        },
        Ia = (e, t) => {
          if (e) {
            const n = e.toString(),
              i = 0 !== n.indexOf(".") ? n : "0" + n,
              o = new RegExp("^-?\\d+(?:.\\d{0," + (t || -1) + "})?"),
              a = i.toString().match(o);
            return a ? parseFloat(a[0]) : e;
          }
          return e;
        },
        Na = (e) =>
          new Date(e).toLocaleDateString("en-US", {
            month: "short",
            day: "numeric",
          }),
        _a = (e) => {
          const t = new Date(e),
            n = t.getDate(),
            i = [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
            ][t.getMonth()],
            o = t.getFullYear();
          return "".concat(n, " ").concat(i, " ").concat(o);
        },
        Da = 17199648e5,
        za = (e) => new Date(e).toLocaleString("default", { month: "short" }),
        ja = (e) =>
          new Date(e).toLocaleString("default", {
            month: "short",
            year: "numeric",
          }),
        Ba = (e) =>
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ][e - 1],
        Fa = (function () {
          let {
            baseUrl: e,
            prepareHeaders: t = (e) => e,
            fetchFn: n = hn,
            paramsSerializer: i,
            isJsonContentType: o = fn,
            jsonContentType: a = "application/json",
            jsonReplacer: s,
            timeout: r,
            responseHandler: l,
            validateStatus: c,
            ...u
          } = arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : {};
          return (
            "undefined" === typeof fetch &&
              n === hn &&
              console.warn(
                "Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments."
              ),
            async (h, p) => {
              const {
                signal: f,
                getState: g,
                extra: m,
                endpoint: v,
                forced: b,
                type: x,
              } = p;
              let y,
                {
                  url: w,
                  headers: S = new Headers(u.headers),
                  params: k,
                  responseHandler: A = null !== l && void 0 !== l ? l : "json",
                  validateStatus: C = null !== c && void 0 !== c ? c : pn,
                  timeout: M = r,
                  ...P
                } = "string" == typeof h ? { url: h } : h,
                E = { ...u, signal: f, ...P };
              (S = new Headers(gn(S))),
                (E.headers =
                  (await t(S, {
                    getState: g,
                    extra: m,
                    endpoint: v,
                    forced: b,
                    type: x,
                  })) || S);
              const L = (e) =>
                "object" === typeof e &&
                (F(e) || Array.isArray(e) || "function" === typeof e.toJSON);
              if (
                (!E.headers.has("content-type") &&
                  L(E.body) &&
                  E.headers.set("content-type", a),
                L(E.body) &&
                  o(E.headers) &&
                  (E.body = JSON.stringify(E.body, s)),
                k)
              ) {
                const e = ~w.indexOf("?") ? "&" : "?";
                w += e + (i ? i(k) : new URLSearchParams(gn(k)));
              }
              w = dn(e, w);
              const T = new Request(w, E);
              y = { request: new Request(w, E) };
              let O,
                R = !1,
                I =
                  M &&
                  setTimeout(() => {
                    (R = !0), p.abort();
                  }, M);
              try {
                O = await n(T);
              } catch (z) {
                return {
                  error: {
                    status: R ? "TIMEOUT_ERROR" : "FETCH_ERROR",
                    error: String(z),
                  },
                  meta: y,
                };
              } finally {
                I && clearTimeout(I);
              }
              const N = O.clone();
              let _;
              y.response = N;
              let D = "";
              try {
                let e;
                if (
                  (await Promise.all([
                    d(O, A).then(
                      (e) => (_ = e),
                      (t) => (e = t)
                    ),
                    N.text().then(
                      (e) => (D = e),
                      () => {}
                    ),
                  ]),
                  e)
                )
                  throw e;
              } catch (z) {
                return {
                  error: {
                    status: "PARSING_ERROR",
                    originalStatus: O.status,
                    data: D,
                    error: String(z),
                  },
                  meta: y,
                };
              }
              return C(O, _)
                ? { data: _, meta: y }
                : { error: { status: O.status, data: _ }, meta: y };
            }
          );
          async function d(e, t) {
            if ("function" === typeof t) return t(e);
            if (
              ("content-type" === t && (t = o(e.headers) ? "json" : "text"),
              "json" === t)
            ) {
              const t = await e.text();
              return t.length ? JSON.parse(t) : null;
            }
            return e.text();
          }
        })({ baseUrl: La }),
        Wa = di({ baseQuery: Fa, endpoints: () => ({}), refetchOnFocus: !0 }),
        Ha = H({ user: _t, [Wa.reducerPath]: Wa.reducer, compute: Vt });
      var Ga = "persist:",
        Va = "persist/FLUSH",
        Ua = "persist/REHYDRATE",
        Ya = "persist/PAUSE",
        Xa = "persist/PERSIST",
        Ka = "persist/PURGE",
        qa = "persist/REGISTER";
      function Za(e) {
        return (
          (Za =
            "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" === typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                }),
          Za(e)
        );
      }
      function Qa(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(e);
          t &&
            (i = i.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, i);
        }
        return n;
      }
      function $a(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function Ja(e, t, n, i) {
        i.debug;
        var o = (function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? Qa(n, !0).forEach(function (t) {
                  $a(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : Qa(n).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        })({}, n);
        return (
          e &&
            "object" === Za(e) &&
            Object.keys(e).forEach(function (i) {
              "_persist" !== i && t[i] === n[i] && (o[i] = e[i]);
            }),
          o
        );
      }
      function es(e) {
        var t,
          n = e.blacklist || null,
          i = e.whitelist || null,
          o = e.transforms || [],
          a = e.throttle || 0,
          s = ""
            .concat(void 0 !== e.keyPrefix ? e.keyPrefix : Ga)
            .concat(e.key),
          r = e.storage;
        t =
          !1 === e.serialize
            ? function (e) {
                return e;
              }
            : "function" === typeof e.serialize
            ? e.serialize
            : ts;
        var l = e.writeFailHandler || null,
          c = {},
          u = {},
          d = [],
          h = null,
          p = null;
        function f() {
          if (0 === d.length) return h && clearInterval(h), void (h = null);
          var e = d.shift(),
            n = o.reduce(function (t, n) {
              return n.in(t, e, c);
            }, c[e]);
          if (void 0 !== n)
            try {
              u[e] = t(n);
            } catch (i) {
              console.error(
                "redux-persist/createPersistoid: error serializing state",
                i
              );
            }
          else delete u[e];
          0 === d.length &&
            (Object.keys(u).forEach(function (e) {
              void 0 === c[e] && delete u[e];
            }),
            (p = r.setItem(s, t(u)).catch(m)));
        }
        function g(e) {
          return (
            (!i || -1 !== i.indexOf(e) || "_persist" === e) &&
            (!n || -1 === n.indexOf(e))
          );
        }
        function m(e) {
          l && l(e);
        }
        return {
          update: function (e) {
            Object.keys(e).forEach(function (t) {
              g(t) && c[t] !== e[t] && -1 === d.indexOf(t) && d.push(t);
            }),
              Object.keys(c).forEach(function (t) {
                void 0 === e[t] &&
                  g(t) &&
                  -1 === d.indexOf(t) &&
                  void 0 !== c[t] &&
                  d.push(t);
              }),
              null === h && (h = setInterval(f, a)),
              (c = e);
          },
          flush: function () {
            for (; 0 !== d.length; ) f();
            return p || Promise.resolve();
          },
        };
      }
      function ts(e) {
        return JSON.stringify(e);
      }
      function ns(e) {
        var t,
          n = e.transforms || [],
          i = ""
            .concat(void 0 !== e.keyPrefix ? e.keyPrefix : Ga)
            .concat(e.key),
          o = e.storage;
        e.debug;
        return (
          (t =
            !1 === e.deserialize
              ? function (e) {
                  return e;
                }
              : "function" === typeof e.deserialize
              ? e.deserialize
              : is),
          o.getItem(i).then(function (e) {
            if (e)
              try {
                var i = {},
                  o = t(e);
                return (
                  Object.keys(o).forEach(function (e) {
                    i[e] = n.reduceRight(function (t, n) {
                      return n.out(t, e, o);
                    }, t(o[e]));
                  }),
                  i
                );
              } catch (a) {
                throw a;
              }
          })
        );
      }
      function is(e) {
        return JSON.parse(e);
      }
      function os(e) {
        0;
      }
      function as(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(e);
          t &&
            (i = i.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, i);
        }
        return n;
      }
      function ss(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? as(n, !0).forEach(function (t) {
                rs(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : as(n).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      function rs(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function ls(e, t) {
        if (null == e) return {};
        var n,
          i,
          o = (function (e, t) {
            if (null == e) return {};
            var n,
              i,
              o = {},
              a = Object.keys(e);
            for (i = 0; i < a.length; i++)
              (n = a[i]), t.indexOf(n) >= 0 || (o[n] = e[n]);
            return o;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var a = Object.getOwnPropertySymbols(e);
          for (i = 0; i < a.length; i++)
            (n = a[i]),
              t.indexOf(n) >= 0 ||
                (Object.prototype.propertyIsEnumerable.call(e, n) &&
                  (o[n] = e[n]));
        }
        return o;
      }
      function cs(e) {
        return (
          (function (e) {
            if (Array.isArray(e)) {
              for (var t = 0, n = new Array(e.length); t < e.length; t++)
                n[t] = e[t];
              return n;
            }
          })(e) ||
          (function (e) {
            if (
              Symbol.iterator in Object(e) ||
              "[object Arguments]" === Object.prototype.toString.call(e)
            )
              return Array.from(e);
          })(e) ||
          (function () {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance"
            );
          })()
        );
      }
      function us(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(e);
          t &&
            (i = i.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, i);
        }
        return n;
      }
      function ds(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? us(n, !0).forEach(function (t) {
                hs(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
            : us(n).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(n, t)
                );
              });
        }
        return e;
      }
      function hs(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      var ps = { registry: [], bootstrapped: !1 },
        fs = function () {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : ps,
            t = arguments.length > 1 ? arguments[1] : void 0;
          switch (t.type) {
            case qa:
              return ds({}, e, {
                registry: [].concat(cs(e.registry), [t.key]),
              });
            case Ua:
              var n = e.registry.indexOf(t.key),
                i = cs(e.registry);
              return (
                i.splice(n, 1),
                ds({}, e, { registry: i, bootstrapped: 0 === i.length })
              );
            default:
              return e;
          }
        };
      const gs = {
          key: "root",
          storage: n(8901).A,
          version: 9,
          blacklist: ["api"],
          migrate: (function (e, t) {
            return (
              (t || {}).debug,
              function (t, n) {
                if (!t) return Promise.resolve(void 0);
                var i =
                  t._persist && void 0 !== t._persist.version
                    ? t._persist.version
                    : -1;
                if (i === n) return Promise.resolve(t);
                if (i > n) return Promise.resolve(t);
                var o = Object.keys(e)
                  .map(function (e) {
                    return parseInt(e);
                  })
                  .filter(function (e) {
                    return n >= e && e > i;
                  })
                  .sort(function (e, t) {
                    return e - t;
                  });
                try {
                  var a = o.reduce(function (t, n) {
                    return e[n](t);
                  }, t);
                  return Promise.resolve(a);
                } catch (s) {
                  return Promise.reject(s);
                }
              }
            );
          })({
            1: (e) => ({ ...e }),
            2: (e) => ({
              ...e,
              user: { ...e.user, usedParticipationCode: {} },
            }),
            3: (e) => ({ ...e, user: { ...e.user, dojoPrice: 0 } }),
            4: (e) => ({
              ...e,
              compute: { ...e.compute, continent: "", data: {} },
            }),
            5: (e) => ({
              ...e,
              compute: { ...e.compute, continent: "Europe", data: {} },
            }),
            6: (e) => ({
              ...e,
              compute: {
                ...e.compute,
                continent: "Europe",
                data: {},
                totalCpuGpu: 0,
              },
            }),
            7: (e) => ({
              ...e,
              compute: {
                ...e.compute,
                continent: "Europe",
                data: {},
                totalCpuGpu: 0,
                cpu: {
                  NorthAmerica: 0,
                  SouthAmerica: 0,
                  Europe: 0,
                  Asia: 0,
                  Africa: 0,
                  Oceania: 0,
                },
                gpu: {
                  NorthAmerica: 0,
                  SouthAmerica: 0,
                  Europe: 0,
                  Asia: 0,
                  Africa: 0,
                  Oceania: 0,
                },
              },
            }),
            8: (e) => ({
              ...e,
              user: { ...e.user, name: "", email: "", profilePicture: "" },
            }),
            9: (e) => ({
              ...e,
              compute: {
                ...e.compute,
                homeStats: {
                  totalGpu: 0,
                  totalCpu: 0,
                  verifiedGpu: 0,
                  verifiedCpu: 0,
                  availableGpu: 0,
                  availableCpu: 0,
                },
                loading: !1,
              },
            }),
          }),
        },
        ms = (function (e, t) {
          var n = void 0 !== e.version ? e.version : -1,
            i =
              (e.debug, void 0 === e.stateReconciler ? Ja : e.stateReconciler),
            o = e.getStoredState || ns,
            a = void 0 !== e.timeout ? e.timeout : 5e3,
            s = null,
            r = !1,
            l = !0,
            c = function (e) {
              return e._persist.rehydrated && s && !l && s.update(e), e;
            };
          return function (u, d) {
            var h = u || {},
              p = h._persist,
              f = ls(h, ["_persist"]);
            if (d.type === Xa) {
              var g = !1,
                m = function (t, n) {
                  g || (d.rehydrate(e.key, t, n), (g = !0));
                };
              if (
                (a &&
                  setTimeout(function () {
                    !g &&
                      m(
                        void 0,
                        new Error(
                          'redux-persist: persist timed out for persist key "'.concat(
                            e.key,
                            '"'
                          )
                        )
                      );
                  }, a),
                (l = !1),
                s || (s = es(e)),
                p)
              )
                return ss({}, t(f, d), { _persist: p });
              if (
                "function" !== typeof d.rehydrate ||
                "function" !== typeof d.register
              )
                throw new Error(
                  "redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution."
                );
              return (
                d.register(e.key),
                o(e).then(
                  function (t) {
                    (
                      e.migrate ||
                      function (e, t) {
                        return Promise.resolve(e);
                      }
                    )(t, n).then(
                      function (e) {
                        m(e);
                      },
                      function (e) {
                        m(void 0, e);
                      }
                    );
                  },
                  function (e) {
                    m(void 0, e);
                  }
                ),
                ss({}, t(f, d), { _persist: { version: n, rehydrated: !1 } })
              );
            }
            if (d.type === Ka)
              return (
                (r = !0),
                d.result(
                  (function (e) {
                    var t = e.storage,
                      n = ""
                        .concat(void 0 !== e.keyPrefix ? e.keyPrefix : Ga)
                        .concat(e.key);
                    return t.removeItem(n, os);
                  })(e)
                ),
                ss({}, t(f, d), { _persist: p })
              );
            if (d.type === Va)
              return d.result(s && s.flush()), ss({}, t(f, d), { _persist: p });
            if (d.type === Ya) l = !0;
            else if (d.type === Ua) {
              if (r)
                return ss({}, f, { _persist: ss({}, p, { rehydrated: !0 }) });
              if (d.key === e.key) {
                var v = t(f, d),
                  b = d.payload,
                  x = ss({}, !1 !== i && void 0 !== b ? i(b, u, v, e) : v, {
                    _persist: ss({}, p, { rehydrated: !0 }),
                  });
                return c(x);
              }
            }
            if (!p) return t(u, d);
            var y = t(f, d);
            return y === f ? u : c(ss({}, y, { _persist: p }));
          };
        })(gs, Ha),
        vs = (function (e) {
          const t = function (e) {
              const {
                thunk: t = !0,
                immutableCheck: n = !0,
                serializableCheck: i = !0,
                actionCreatorCheck: o = !0,
              } = null !== e && void 0 !== e ? e : {};
              let a = new Ue();
              return (
                t &&
                  ("boolean" === typeof t
                    ? a.push(Y)
                    : a.push(X(t.extraArgument))),
                a
              );
            },
            {
              reducer: n,
              middleware: i,
              devTools: o = !0,
              preloadedState: a,
              enhancers: s,
            } = e || {};
          let r, l;
          if ("function" === typeof n) r = n;
          else {
            if (!F(n)) throw new Error(Tt(1));
            r = H(n);
          }
          l = "function" === typeof i ? i(t) : t();
          let c = G;
          o && (c = He({ trace: !1, ...("object" === typeof o && o) }));
          const u = (function () {
              for (
                var e = arguments.length, t = new Array(e), n = 0;
                n < e;
                n++
              )
                t[n] = arguments[n];
              return (e) => (n, i) => {
                const o = e(n, i);
                let a = () => {
                  throw new Error(D(15));
                };
                const s = {
                    getState: o.getState,
                    dispatch: function (e) {
                      for (
                        var t = arguments.length,
                          n = new Array(t > 1 ? t - 1 : 0),
                          i = 1;
                        i < t;
                        i++
                      )
                        n[i - 1] = arguments[i];
                      return a(e, ...n);
                    },
                  },
                  r = t.map((e) => e(s));
                return (a = G(...r)(o.dispatch)), { ...o, dispatch: a };
              };
            })(...l),
            d = $e(u);
          return W(r, a, c(...("function" === typeof s ? s(d) : d())));
        })({
          reducer: ms,
          devTools: !1,
          middleware: (e) =>
            e({ serializableCheck: !1 }).concat([Wa.middleware, Y]),
        });
      var bs, xs;
      (bs = vs.dispatch),
        xs
          ? xs(bs, {
              onFocus: vn,
              onFocusLost: bn,
              onOffline: yn,
              onOnline: xn,
            })
          : (function () {
              const e = () => bs(vn()),
                t = () => bs(xn()),
                n = () => bs(yn()),
                i = () => {
                  "visible" === window.document.visibilityState
                    ? e()
                    : bs(bn());
                };
              wn ||
                ("undefined" !== typeof window &&
                  window.addEventListener &&
                  (window.addEventListener("visibilitychange", i, !1),
                  window.addEventListener("focus", e, !1),
                  window.addEventListener("online", t, !1),
                  window.addEventListener("offline", n, !1),
                  (wn = !0)));
            })();
      const ys = O,
        ws = (function (e, t, n) {
          var i = n || !1,
            o = W(fs, ps, t && t.enhancer ? t.enhancer : void 0),
            a = function (e) {
              o.dispatch({ type: qa, key: e });
            },
            s = function (t, n, a) {
              var s = { type: Ua, payload: n, err: a, key: t };
              e.dispatch(s),
                o.dispatch(s),
                i && r.getState().bootstrapped && (i(), (i = !1));
            },
            r = ds({}, o, {
              purge: function () {
                var t = [];
                return (
                  e.dispatch({
                    type: Ka,
                    result: function (e) {
                      t.push(e);
                    },
                  }),
                  Promise.all(t)
                );
              },
              flush: function () {
                var t = [];
                return (
                  e.dispatch({
                    type: Va,
                    result: function (e) {
                      t.push(e);
                    },
                  }),
                  Promise.all(t)
                );
              },
              pause: function () {
                e.dispatch({ type: Ya });
              },
              persist: function () {
                e.dispatch({ type: Xa, register: a, rehydrate: s });
              },
            });
          return (t && t.manualPersist) || r.persist(), r;
        })(vs),
        Ss = v;
      function ks(e) {
        return (
          (ks =
            "function" === typeof Symbol && "symbol" === typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    "function" === typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? "symbol"
                    : typeof e;
                }),
          ks(e)
        );
      }
      function As(e, t) {
        for (var n = 0; n < t.length; n++) {
          var i = t[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(e, i.key, i);
        }
      }
      function Cs(e) {
        return (
          (Cs = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          Cs(e)
        );
      }
      function Ms(e) {
        if (void 0 === e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return e;
      }
      function Ps(e, t) {
        return (
          (Ps =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            }),
          Ps(e, t)
        );
      }
      function Es(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      var Ls = (function (e) {
        function t() {
          var e, n;
          !(function (e, t) {
            if (!(e instanceof t))
              throw new TypeError("Cannot call a class as a function");
          })(this, t);
          for (var i = arguments.length, o = new Array(i), a = 0; a < i; a++)
            o[a] = arguments[a];
          return (
            (n = (function (e, t) {
              return !t || ("object" !== ks(t) && "function" !== typeof t)
                ? Ms(e)
                : t;
            })(this, (e = Cs(t)).call.apply(e, [this].concat(o)))),
            Es(Ms(n), "state", { bootstrapped: !1 }),
            Es(Ms(n), "_unsubscribe", void 0),
            Es(Ms(n), "handlePersistorState", function () {
              n.props.persistor.getState().bootstrapped &&
                (n.props.onBeforeLift
                  ? Promise.resolve(n.props.onBeforeLift()).finally(
                      function () {
                        return n.setState({ bootstrapped: !0 });
                      }
                    )
                  : n.setState({ bootstrapped: !0 }),
                n._unsubscribe && n._unsubscribe());
            }),
            n
          );
        }
        var n, i, o;
        return (
          (function (e, t) {
            if ("function" !== typeof t && null !== t)
              throw new TypeError(
                "Super expression must either be null or a function"
              );
            (e.prototype = Object.create(t && t.prototype, {
              constructor: { value: e, writable: !0, configurable: !0 },
            })),
              t && Ps(e, t);
          })(t, e),
          (n = t),
          (i = [
            {
              key: "componentDidMount",
              value: function () {
                (this._unsubscribe = this.props.persistor.subscribe(
                  this.handlePersistorState
                )),
                  this.handlePersistorState();
              },
            },
            {
              key: "componentWillUnmount",
              value: function () {
                this._unsubscribe && this._unsubscribe();
              },
            },
            {
              key: "render",
              value: function () {
                return "function" === typeof this.props.children
                  ? this.props.children(this.state.bootstrapped)
                  : this.state.bootstrapped
                  ? this.props.children
                  : this.props.loading;
              },
            },
          ]) && As(n.prototype, i),
          o && As(n, o),
          t
        );
      })(t.PureComponent);
      Es(Ls, "defaultProps", { children: null, loading: null });
      var Ts = n(8168),
        Os = n(8206),
        Rs = n(869),
        Is = n(8280),
        Ns = n(4575);
      const _s = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null;
          const n = t.useContext(Ns.T);
          return n && ((i = n), 0 !== Object.keys(i).length) ? n : e;
          var i;
        },
        Ds = (0, Is.A)();
      const zs = function () {
        return _s(
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ds
        );
      };
      var js = n(579);
      const Bs = function (e) {
        let { styles: t, themeId: n, defaultTheme: i = {} } = e;
        const o = zs(i),
          a = "function" === typeof t ? t((n && o[n]) || o) : t;
        return (0, js.jsx)(Rs.A, { styles: a });
      };
      var Fs = n(5170),
        Ws = n(3375);
      const Hs = function (e) {
          return (0, js.jsx)(
            Bs,
            (0, Ts.A)({}, e, { defaultTheme: Fs.A, themeId: Ws.A })
          );
        },
        Gs = (e, t) =>
          (0, Ts.A)(
            {
              WebkitFontSmoothing: "antialiased",
              MozOsxFontSmoothing: "grayscale",
              boxSizing: "border-box",
              WebkitTextSizeAdjust: "100%",
            },
            t && !e.vars && { colorScheme: e.palette.mode }
          ),
        Vs = (e) =>
          (0, Ts.A)(
            { color: (e.vars || e).palette.text.primary },
            e.typography.body1,
            {
              backgroundColor: (e.vars || e).palette.background.default,
              "@media print": {
                backgroundColor: (e.vars || e).palette.common.white,
              },
            }
          );
      const Us = function (e) {
        const n = (0, Os.b)({ props: e, name: "MuiCssBaseline" }),
          { children: i, enableColorScheme: o = !1 } = n;
        return (0, js.jsxs)(t.Fragment, {
          children: [
            (0, js.jsx)(Hs, {
              styles: (e) =>
                (function (e) {
                  let t =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  var n;
                  const i = {};
                  t &&
                    e.colorSchemes &&
                    Object.entries(e.colorSchemes).forEach((t) => {
                      let [n, o] = t;
                      var a;
                      i[e.getColorSchemeSelector(n).replace(/\s*&/, "")] = {
                        colorScheme: null == (a = o.palette) ? void 0 : a.mode,
                      };
                    });
                  let o = (0, Ts.A)(
                    {
                      html: Gs(e, t),
                      "*, *::before, *::after": { boxSizing: "inherit" },
                      "strong, b": { fontWeight: e.typography.fontWeightBold },
                      body: (0, Ts.A)({ margin: 0 }, Vs(e), {
                        "&::backdrop": {
                          backgroundColor: (e.vars || e).palette.background
                            .default,
                        },
                      }),
                    },
                    i
                  );
                  const a =
                    null == (n = e.components) || null == (n = n.MuiCssBaseline)
                      ? void 0
                      : n.styleOverrides;
                  return a && (o = [o, a]), o;
                })(e, o),
            }),
            i,
          ],
        });
      };
      var Ys = n(8279),
        Xs = n(8587);
      const Ks = t.createContext(null);
      function qs() {
        return t.useContext(Ks);
      }
      const Zs =
        "function" === typeof Symbol && Symbol.for
          ? Symbol.for("mui.nested")
          : "__THEME_NESTED__";
      const Qs = function (e) {
          const { children: n, theme: i } = e,
            o = qs(),
            a = t.useMemo(() => {
              const e =
                null === o
                  ? i
                  : (function (e, t) {
                      if ("function" === typeof t) return t(e);
                      return (0, Ts.A)({}, e, t);
                    })(o, i);
              return null != e && (e[Zs] = null !== o), e;
            }, [i, o]);
          return (0, js.jsx)(Ks.Provider, { value: a, children: n });
        },
        $s = ["value"],
        Js = t.createContext();
      const er = function (e) {
        let { value: t } = e,
          n = (0, Xs.A)(e, $s);
        return (0, js.jsx)(
          Js.Provider,
          (0, Ts.A)({ value: null == t || t }, n)
        );
      };
      var tr = n(3654);
      const nr = {};
      function ir(e, n, i) {
        let o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        return t.useMemo(() => {
          const t = (e && n[e]) || n;
          if ("function" === typeof i) {
            const a = i(t),
              s = e ? (0, Ts.A)({}, n, { [e]: a }) : a;
            return o ? () => s : s;
          }
          return e ? (0, Ts.A)({}, n, { [e]: i }) : (0, Ts.A)({}, n, i);
        }, [e, n, i, o]);
      }
      const or = function (e) {
          const { children: t, theme: n, themeId: i } = e,
            o = _s(nr),
            a = qs() || nr,
            s = ir(i, o, n),
            r = ir(i, a, n, !0),
            l = "rtl" === s.direction;
          return (0, js.jsx)(Qs, {
            theme: r,
            children: (0, js.jsx)(Ns.T.Provider, {
              value: s,
              children: (0, js.jsx)(er, {
                value: l,
                children: (0, js.jsx)(tr.A, {
                  value: null == s ? void 0 : s.components,
                  children: t,
                }),
              }),
            }),
          });
        },
        ar = ["theme"];
      function sr(e) {
        let { theme: t } = e,
          n = (0, Xs.A)(e, ar);
        const i = t[Ws.A];
        return (0, js.jsx)(
          or,
          (0, Ts.A)({}, n, { themeId: i ? Ws.A : void 0, theme: i || t })
        );
      }
      const rr = (e) => {
        let { children: n } = e;
        const [i] = t.useState("dark"),
          o = (0, t.useMemo)(
            () =>
              (0, Ys.A)(
                ((e) => ({
                  breakpoints: {
                    values: { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
                  },
                  palette: {
                    mode: e,
                    primary: { main: "light" === e ? "#fff" : "#0c031a" },
                    secondary: { main: "#0F1113" },
                    background: { default: "rgba(0, 0, 0, 1)", paper: "#000" },
                    text: { primary: "#fff", secondary: "#000" },
                    info: { main: "#B1B4B3" },
                    success: { main: "#F4FDAB" },
                    warning: { main: "#F72" },
                  },
                  typography: {
                    fontFamily: "Inter",
                    fontWeightLight: 300,
                    fontWeightRegular: 400,
                    fontWeightMedium: 500,
                    fontWeightBold: 600,
                  },
                }))(i)
              ),
            [i]
          );
        return (0, js.jsxs)(sr, {
          theme: o,
          children: [(0, js.jsx)(Us, {}), n],
        });
      };
      function lr() {
        return (
          (lr = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
                }
                return e;
              }),
          lr.apply(this, arguments)
        );
      }
      var cr;
      !(function (e) {
        (e.Pop = "POP"), (e.Push = "PUSH"), (e.Replace = "REPLACE");
      })(cr || (cr = {}));
      const ur = "popstate";
      function dr(e, t) {
        if (!1 === e || null === e || "undefined" === typeof e)
          throw new Error(t);
      }
      function hr(e, t) {
        if (!e) {
          "undefined" !== typeof console && console.warn(t);
          try {
            throw new Error(t);
          } catch (n) {}
        }
      }
      function pr(e, t) {
        return { usr: e.state, key: e.key, idx: t };
      }
      function fr(e, t, n, i) {
        return (
          void 0 === n && (n = null),
          lr(
            {
              pathname: "string" === typeof e ? e : e.pathname,
              search: "",
              hash: "",
            },
            "string" === typeof t ? mr(t) : t,
            {
              state: n,
              key: (t && t.key) || i || Math.random().toString(36).substr(2, 8),
            }
          )
        );
      }
      function gr(e) {
        let { pathname: t = "/", search: n = "", hash: i = "" } = e;
        return (
          n && "?" !== n && (t += "?" === n.charAt(0) ? n : "?" + n),
          i && "#" !== i && (t += "#" === i.charAt(0) ? i : "#" + i),
          t
        );
      }
      function mr(e) {
        let t = {};
        if (e) {
          let n = e.indexOf("#");
          n >= 0 && ((t.hash = e.substr(n)), (e = e.substr(0, n)));
          let i = e.indexOf("?");
          i >= 0 && ((t.search = e.substr(i)), (e = e.substr(0, i))),
            e && (t.pathname = e);
        }
        return t;
      }
      function vr(e, t, n, i) {
        void 0 === i && (i = {});
        let { window: o = document.defaultView, v5Compat: a = !1 } = i,
          s = o.history,
          r = cr.Pop,
          l = null,
          c = u();
        function u() {
          return (s.state || { idx: null }).idx;
        }
        function d() {
          r = cr.Pop;
          let e = u(),
            t = null == e ? null : e - c;
          (c = e), l && l({ action: r, location: p.location, delta: t });
        }
        function h(e) {
          let t =
              "null" !== o.location.origin
                ? o.location.origin
                : o.location.href,
            n = "string" === typeof e ? e : gr(e);
          return (
            (n = n.replace(/ $/, "%20")),
            dr(
              t,
              "No window.location.(origin|href) available to create URL for href: " +
                n
            ),
            new URL(n, t)
          );
        }
        null == c && ((c = 0), s.replaceState(lr({}, s.state, { idx: c }), ""));
        let p = {
          get action() {
            return r;
          },
          get location() {
            return e(o, s);
          },
          listen(e) {
            if (l)
              throw new Error("A history only accepts one active listener");
            return (
              o.addEventListener(ur, d),
              (l = e),
              () => {
                o.removeEventListener(ur, d), (l = null);
              }
            );
          },
          createHref: (e) => t(o, e),
          createURL: h,
          encodeLocation(e) {
            let t = h(e);
            return { pathname: t.pathname, search: t.search, hash: t.hash };
          },
          push: function (e, t) {
            r = cr.Push;
            let i = fr(p.location, e, t);
            n && n(i, e), (c = u() + 1);
            let d = pr(i, c),
              h = p.createHref(i);
            try {
              s.pushState(d, "", h);
            } catch (f) {
              if (f instanceof DOMException && "DataCloneError" === f.name)
                throw f;
              o.location.assign(h);
            }
            a && l && l({ action: r, location: p.location, delta: 1 });
          },
          replace: function (e, t) {
            r = cr.Replace;
            let i = fr(p.location, e, t);
            n && n(i, e), (c = u());
            let o = pr(i, c),
              d = p.createHref(i);
            s.replaceState(o, "", d),
              a && l && l({ action: r, location: p.location, delta: 0 });
          },
          go: (e) => s.go(e),
        };
        return p;
      }
      var br;
      !(function (e) {
        (e.data = "data"),
          (e.deferred = "deferred"),
          (e.redirect = "redirect"),
          (e.error = "error");
      })(br || (br = {}));
      new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
      function xr(e, t, n) {
        return void 0 === n && (n = "/"), yr(e, t, n, !1);
      }
      function yr(e, t, n, i) {
        let o = Nr(("string" === typeof t ? mr(t) : t).pathname || "/", n);
        if (null == o) return null;
        let a = wr(e);
        !(function (e) {
          e.sort((e, t) =>
            e.score !== t.score
              ? t.score - e.score
              : (function (e, t) {
                  let n =
                    e.length === t.length &&
                    e.slice(0, -1).every((e, n) => e === t[n]);
                  return n ? e[e.length - 1] - t[t.length - 1] : 0;
                })(
                  e.routesMeta.map((e) => e.childrenIndex),
                  t.routesMeta.map((e) => e.childrenIndex)
                )
          );
        })(a);
        let s = null;
        for (let r = 0; null == s && r < a.length; ++r) {
          let e = Ir(o);
          s = Or(a[r], e, i);
        }
        return s;
      }
      function wr(e, t, n, i) {
        void 0 === t && (t = []),
          void 0 === n && (n = []),
          void 0 === i && (i = "");
        let o = (e, o, a) => {
          let s = {
            relativePath: void 0 === a ? e.path || "" : a,
            caseSensitive: !0 === e.caseSensitive,
            childrenIndex: o,
            route: e,
          };
          s.relativePath.startsWith("/") &&
            (dr(
              s.relativePath.startsWith(i),
              'Absolute route path "' +
                s.relativePath +
                '" nested under path "' +
                i +
                '" is not valid. An absolute child route path must start with the combined path of all its parent routes.'
            ),
            (s.relativePath = s.relativePath.slice(i.length)));
          let r = Br([i, s.relativePath]),
            l = n.concat(s);
          e.children &&
            e.children.length > 0 &&
            (dr(
              !0 !== e.index,
              'Index routes must not have child routes. Please remove all child routes from route path "' +
                r +
                '".'
            ),
            wr(e.children, t, l, r)),
            (null != e.path || e.index) &&
              t.push({ path: r, score: Tr(r, e.index), routesMeta: l });
        };
        return (
          e.forEach((e, t) => {
            var n;
            if ("" !== e.path && null != (n = e.path) && n.includes("?"))
              for (let i of Sr(e.path)) o(e, t, i);
            else o(e, t);
          }),
          t
        );
      }
      function Sr(e) {
        let t = e.split("/");
        if (0 === t.length) return [];
        let [n, ...i] = t,
          o = n.endsWith("?"),
          a = n.replace(/\?$/, "");
        if (0 === i.length) return o ? [a, ""] : [a];
        let s = Sr(i.join("/")),
          r = [];
        return (
          r.push(...s.map((e) => ("" === e ? a : [a, e].join("/")))),
          o && r.push(...s),
          r.map((t) => (e.startsWith("/") && "" === t ? "/" : t))
        );
      }
      const kr = /^:[\w-]+$/,
        Ar = 3,
        Cr = 2,
        Mr = 1,
        Pr = 10,
        Er = -2,
        Lr = (e) => "*" === e;
      function Tr(e, t) {
        let n = e.split("/"),
          i = n.length;
        return (
          n.some(Lr) && (i += Er),
          t && (i += Cr),
          n
            .filter((e) => !Lr(e))
            .reduce((e, t) => e + (kr.test(t) ? Ar : "" === t ? Mr : Pr), i)
        );
      }
      function Or(e, t, n) {
        void 0 === n && (n = !1);
        let { routesMeta: i } = e,
          o = {},
          a = "/",
          s = [];
        for (let r = 0; r < i.length; ++r) {
          let e = i[r],
            l = r === i.length - 1,
            c = "/" === a ? t : t.slice(a.length) || "/",
            u = Rr(
              { path: e.relativePath, caseSensitive: e.caseSensitive, end: l },
              c
            ),
            d = e.route;
          if (
            (!u &&
              l &&
              n &&
              !i[i.length - 1].route.index &&
              (u = Rr(
                {
                  path: e.relativePath,
                  caseSensitive: e.caseSensitive,
                  end: !1,
                },
                c
              )),
            !u)
          )
            return null;
          Object.assign(o, u.params),
            s.push({
              params: o,
              pathname: Br([a, u.pathname]),
              pathnameBase: Fr(Br([a, u.pathnameBase])),
              route: d,
            }),
            "/" !== u.pathnameBase && (a = Br([a, u.pathnameBase]));
        }
        return s;
      }
      function Rr(e, t) {
        "string" === typeof e && (e = { path: e, caseSensitive: !1, end: !0 });
        let [n, i] = (function (e, t, n) {
            void 0 === t && (t = !1);
            void 0 === n && (n = !0);
            hr(
              "*" === e || !e.endsWith("*") || e.endsWith("/*"),
              'Route path "' +
                e +
                '" will be treated as if it were "' +
                e.replace(/\*$/, "/*") +
                '" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "' +
                e.replace(/\*$/, "/*") +
                '".'
            );
            let i = [],
              o =
                "^" +
                e
                  .replace(/\/*\*?$/, "")
                  .replace(/^\/*/, "/")
                  .replace(/[\\.*+^${}|()[\]]/g, "\\$&")
                  .replace(
                    /\/:([\w-]+)(\?)?/g,
                    (e, t, n) => (
                      i.push({ paramName: t, isOptional: null != n }),
                      n ? "/?([^\\/]+)?" : "/([^\\/]+)"
                    )
                  );
            e.endsWith("*")
              ? (i.push({ paramName: "*" }),
                (o += "*" === e || "/*" === e ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
              : n
              ? (o += "\\/*$")
              : "" !== e && "/" !== e && (o += "(?:(?=\\/|$))");
            let a = new RegExp(o, t ? void 0 : "i");
            return [a, i];
          })(e.path, e.caseSensitive, e.end),
          o = t.match(n);
        if (!o) return null;
        let a = o[0],
          s = a.replace(/(.)\/+$/, "$1"),
          r = o.slice(1),
          l = i.reduce((e, t, n) => {
            let { paramName: i, isOptional: o } = t;
            if ("*" === i) {
              let e = r[n] || "";
              s = a.slice(0, a.length - e.length).replace(/(.)\/+$/, "$1");
            }
            const l = r[n];
            return (
              (e[i] = o && !l ? void 0 : (l || "").replace(/%2F/g, "/")), e
            );
          }, {});
        return { params: l, pathname: a, pathnameBase: s, pattern: e };
      }
      function Ir(e) {
        try {
          return e
            .split("/")
            .map((e) => decodeURIComponent(e).replace(/\//g, "%2F"))
            .join("/");
        } catch (t) {
          return (
            hr(
              !1,
              'The URL path "' +
                e +
                '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (' +
                t +
                ")."
            ),
            e
          );
        }
      }
      function Nr(e, t) {
        if ("/" === t) return e;
        if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
        let n = t.endsWith("/") ? t.length - 1 : t.length,
          i = e.charAt(n);
        return i && "/" !== i ? null : e.slice(n) || "/";
      }
      function _r(e, t, n, i) {
        return (
          "Cannot include a '" +
          e +
          "' character in a manually specified `to." +
          t +
          "` field [" +
          JSON.stringify(i) +
          "].  Please separate it out to the `to." +
          n +
          '` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'
        );
      }
      function Dr(e) {
        return e.filter(
          (e, t) => 0 === t || (e.route.path && e.route.path.length > 0)
        );
      }
      function zr(e, t) {
        let n = Dr(e);
        return t
          ? n.map((e, t) => (t === n.length - 1 ? e.pathname : e.pathnameBase))
          : n.map((e) => e.pathnameBase);
      }
      function jr(e, t, n, i) {
        let o;
        void 0 === i && (i = !1),
          "string" === typeof e
            ? (o = mr(e))
            : ((o = lr({}, e)),
              dr(
                !o.pathname || !o.pathname.includes("?"),
                _r("?", "pathname", "search", o)
              ),
              dr(
                !o.pathname || !o.pathname.includes("#"),
                _r("#", "pathname", "hash", o)
              ),
              dr(
                !o.search || !o.search.includes("#"),
                _r("#", "search", "hash", o)
              ));
        let a,
          s = "" === e || "" === o.pathname,
          r = s ? "/" : o.pathname;
        if (null == r) a = n;
        else {
          let e = t.length - 1;
          if (!i && r.startsWith("..")) {
            let t = r.split("/");
            for (; ".." === t[0]; ) t.shift(), (e -= 1);
            o.pathname = t.join("/");
          }
          a = e >= 0 ? t[e] : "/";
        }
        let l = (function (e, t) {
            void 0 === t && (t = "/");
            let {
                pathname: n,
                search: i = "",
                hash: o = "",
              } = "string" === typeof e ? mr(e) : e,
              a = n
                ? n.startsWith("/")
                  ? n
                  : (function (e, t) {
                      let n = t.replace(/\/+$/, "").split("/");
                      return (
                        e.split("/").forEach((e) => {
                          ".." === e
                            ? n.length > 1 && n.pop()
                            : "." !== e && n.push(e);
                        }),
                        n.length > 1 ? n.join("/") : "/"
                      );
                    })(n, t)
                : t;
            return { pathname: a, search: Wr(i), hash: Hr(o) };
          })(o, a),
          c = r && "/" !== r && r.endsWith("/"),
          u = (s || "." === r) && n.endsWith("/");
        return l.pathname.endsWith("/") || (!c && !u) || (l.pathname += "/"), l;
      }
      const Br = (e) => e.join("/").replace(/\/\/+/g, "/"),
        Fr = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"),
        Wr = (e) => (e && "?" !== e ? (e.startsWith("?") ? e : "?" + e) : ""),
        Hr = (e) => (e && "#" !== e ? (e.startsWith("#") ? e : "#" + e) : "");
      Error;
      function Gr(e) {
        return (
          null != e &&
          "number" === typeof e.status &&
          "string" === typeof e.statusText &&
          "boolean" === typeof e.internal &&
          "data" in e
        );
      }
      const Vr = ["post", "put", "patch", "delete"],
        Ur = (new Set(Vr), ["get", ...Vr]);
      new Set(Ur), new Set([301, 302, 303, 307, 308]), new Set([307, 308]);
      Symbol("deferred");
      function Yr() {
        return (
          (Yr = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
                }
                return e;
              }),
          Yr.apply(this, arguments)
        );
      }
      const Xr = t.createContext(null);
      const Kr = t.createContext(null);
      const qr = t.createContext(null);
      const Zr = t.createContext(null);
      const Qr = t.createContext({
        outlet: null,
        matches: [],
        isDataRoute: !1,
      });
      const $r = t.createContext(null);
      function Jr() {
        return null != t.useContext(Zr);
      }
      function el() {
        return Jr() || dr(!1), t.useContext(Zr).location;
      }
      function tl(e) {
        t.useContext(qr).static || t.useLayoutEffect(e);
      }
      function nl() {
        let { isDataRoute: e } = t.useContext(Qr);
        return e
          ? (function () {
              let { router: e } = dl(cl.UseNavigateStable),
                n = pl(ul.UseNavigateStable),
                i = t.useRef(!1);
              tl(() => {
                i.current = !0;
              });
              let o = t.useCallback(
                function (t, o) {
                  void 0 === o && (o = {}),
                    i.current &&
                      ("number" === typeof t
                        ? e.navigate(t)
                        : e.navigate(t, Yr({ fromRouteId: n }, o)));
                },
                [e, n]
              );
              return o;
            })()
          : (function () {
              Jr() || dr(!1);
              let e = t.useContext(Xr),
                { basename: n, future: i, navigator: o } = t.useContext(qr),
                { matches: a } = t.useContext(Qr),
                { pathname: s } = el(),
                r = JSON.stringify(zr(a, i.v7_relativeSplatPath)),
                l = t.useRef(!1);
              tl(() => {
                l.current = !0;
              });
              let c = t.useCallback(
                function (t, i) {
                  if ((void 0 === i && (i = {}), !l.current)) return;
                  if ("number" === typeof t) return void o.go(t);
                  let a = jr(t, JSON.parse(r), s, "path" === i.relative);
                  null == e &&
                    "/" !== n &&
                    (a.pathname = "/" === a.pathname ? n : Br([n, a.pathname])),
                    (i.replace ? o.replace : o.push)(a, i.state, i);
                },
                [n, o, r, s, e]
              );
              return c;
            })();
      }
      function il(e, n, i, o) {
        Jr() || dr(!1);
        let { navigator: a } = t.useContext(qr),
          { matches: s } = t.useContext(Qr),
          r = s[s.length - 1],
          l = r ? r.params : {},
          c = (r && r.pathname, r ? r.pathnameBase : "/");
        r && r.route;
        let u,
          d = el();
        if (n) {
          var h;
          let e = "string" === typeof n ? mr(n) : n;
          "/" === c ||
            (null == (h = e.pathname) ? void 0 : h.startsWith(c)) ||
            dr(!1),
            (u = e);
        } else u = d;
        let p = u.pathname || "/",
          f = p;
        if ("/" !== c) {
          let e = c.replace(/^\//, "").split("/");
          f = "/" + p.replace(/^\//, "").split("/").slice(e.length).join("/");
        }
        let g = xr(e, { pathname: f });
        let m = ll(
          g &&
            g.map((e) =>
              Object.assign({}, e, {
                params: Object.assign({}, l, e.params),
                pathname: Br([
                  c,
                  a.encodeLocation
                    ? a.encodeLocation(e.pathname).pathname
                    : e.pathname,
                ]),
                pathnameBase:
                  "/" === e.pathnameBase
                    ? c
                    : Br([
                        c,
                        a.encodeLocation
                          ? a.encodeLocation(e.pathnameBase).pathname
                          : e.pathnameBase,
                      ]),
              })
            ),
          s,
          i,
          o
        );
        return n && m
          ? t.createElement(
              Zr.Provider,
              {
                value: {
                  location: Yr(
                    {
                      pathname: "/",
                      search: "",
                      hash: "",
                      state: null,
                      key: "default",
                    },
                    u
                  ),
                  navigationType: cr.Pop,
                },
              },
              m
            )
          : m;
      }
      function ol() {
        let e = (function () {
            var e;
            let n = t.useContext($r),
              i = hl(ul.UseRouteError),
              o = pl(ul.UseRouteError);
            if (void 0 !== n) return n;
            return null == (e = i.errors) ? void 0 : e[o];
          })(),
          n = Gr(e)
            ? e.status + " " + e.statusText
            : e instanceof Error
            ? e.message
            : JSON.stringify(e),
          i = e instanceof Error ? e.stack : null,
          o = "rgba(200,200,200, 0.5)",
          a = { padding: "0.5rem", backgroundColor: o };
        return t.createElement(
          t.Fragment,
          null,
          t.createElement("h2", null, "Unexpected Application Error!"),
          t.createElement("h3", { style: { fontStyle: "italic" } }, n),
          i ? t.createElement("pre", { style: a }, i) : null,
          null
        );
      }
      const al = t.createElement(ol, null);
      class sl extends t.Component {
        constructor(e) {
          super(e),
            (this.state = {
              location: e.location,
              revalidation: e.revalidation,
              error: e.error,
            });
        }
        static getDerivedStateFromError(e) {
          return { error: e };
        }
        static getDerivedStateFromProps(e, t) {
          return t.location !== e.location ||
            ("idle" !== t.revalidation && "idle" === e.revalidation)
            ? {
                error: e.error,
                location: e.location,
                revalidation: e.revalidation,
              }
            : {
                error: void 0 !== e.error ? e.error : t.error,
                location: t.location,
                revalidation: e.revalidation || t.revalidation,
              };
        }
        componentDidCatch(e, t) {
          console.error(
            "React Router caught the following error during render",
            e,
            t
          );
        }
        render() {
          return void 0 !== this.state.error
            ? t.createElement(
                Qr.Provider,
                { value: this.props.routeContext },
                t.createElement($r.Provider, {
                  value: this.state.error,
                  children: this.props.component,
                })
              )
            : this.props.children;
        }
      }
      function rl(e) {
        let { routeContext: n, match: i, children: o } = e,
          a = t.useContext(Xr);
        return (
          a &&
            a.static &&
            a.staticContext &&
            (i.route.errorElement || i.route.ErrorBoundary) &&
            (a.staticContext._deepestRenderedBoundaryId = i.route.id),
          t.createElement(Qr.Provider, { value: n }, o)
        );
      }
      function ll(e, n, i, o) {
        var a;
        if (
          (void 0 === n && (n = []),
          void 0 === i && (i = null),
          void 0 === o && (o = null),
          null == e)
        ) {
          var s;
          if (!i) return null;
          if (i.errors) e = i.matches;
          else {
            if (
              !(
                null != (s = o) &&
                s.v7_partialHydration &&
                0 === n.length &&
                !i.initialized &&
                i.matches.length > 0
              )
            )
              return null;
            e = i.matches;
          }
        }
        let r = e,
          l = null == (a = i) ? void 0 : a.errors;
        if (null != l) {
          let e = r.findIndex(
            (e) => e.route.id && void 0 !== (null == l ? void 0 : l[e.route.id])
          );
          e >= 0 || dr(!1), (r = r.slice(0, Math.min(r.length, e + 1)));
        }
        let c = !1,
          u = -1;
        if (i && o && o.v7_partialHydration)
          for (let t = 0; t < r.length; t++) {
            let e = r[t];
            if (
              ((e.route.HydrateFallback || e.route.hydrateFallbackElement) &&
                (u = t),
              e.route.id)
            ) {
              let { loaderData: t, errors: n } = i,
                o =
                  e.route.loader &&
                  void 0 === t[e.route.id] &&
                  (!n || void 0 === n[e.route.id]);
              if (e.route.lazy || o) {
                (c = !0), (r = u >= 0 ? r.slice(0, u + 1) : [r[0]]);
                break;
              }
            }
          }
        return r.reduceRight((e, o, a) => {
          let s,
            d = !1,
            h = null,
            p = null;
          var f;
          i &&
            ((s = l && o.route.id ? l[o.route.id] : void 0),
            (h = o.route.errorElement || al),
            c &&
              (u < 0 && 0 === a
                ? ((f = "route-fallback"),
                  !1 || fl[f] || (fl[f] = !0),
                  (d = !0),
                  (p = null))
                : u === a &&
                  ((d = !0), (p = o.route.hydrateFallbackElement || null))));
          let g = n.concat(r.slice(0, a + 1)),
            m = () => {
              let n;
              return (
                (n = s
                  ? h
                  : d
                  ? p
                  : o.route.Component
                  ? t.createElement(o.route.Component, null)
                  : o.route.element
                  ? o.route.element
                  : e),
                t.createElement(rl, {
                  match: o,
                  routeContext: {
                    outlet: e,
                    matches: g,
                    isDataRoute: null != i,
                  },
                  children: n,
                })
              );
            };
          return i && (o.route.ErrorBoundary || o.route.errorElement || 0 === a)
            ? t.createElement(sl, {
                location: i.location,
                revalidation: i.revalidation,
                component: h,
                error: s,
                children: m(),
                routeContext: { outlet: null, matches: g, isDataRoute: !0 },
              })
            : m();
        }, null);
      }
      var cl = (function (e) {
          return (
            (e.UseBlocker = "useBlocker"),
            (e.UseRevalidator = "useRevalidator"),
            (e.UseNavigateStable = "useNavigate"),
            e
          );
        })(cl || {}),
        ul = (function (e) {
          return (
            (e.UseBlocker = "useBlocker"),
            (e.UseLoaderData = "useLoaderData"),
            (e.UseActionData = "useActionData"),
            (e.UseRouteError = "useRouteError"),
            (e.UseNavigation = "useNavigation"),
            (e.UseRouteLoaderData = "useRouteLoaderData"),
            (e.UseMatches = "useMatches"),
            (e.UseRevalidator = "useRevalidator"),
            (e.UseNavigateStable = "useNavigate"),
            (e.UseRouteId = "useRouteId"),
            e
          );
        })(ul || {});
      function dl(e) {
        let n = t.useContext(Xr);
        return n || dr(!1), n;
      }
      function hl(e) {
        let n = t.useContext(Kr);
        return n || dr(!1), n;
      }
      function pl(e) {
        let n = (function (e) {
            let n = t.useContext(Qr);
            return n || dr(!1), n;
          })(),
          i = n.matches[n.matches.length - 1];
        return i.route.id || dr(!1), i.route.id;
      }
      const fl = {};
      i.startTransition;
      function gl(e) {
        let { to: n, replace: i, state: o, relative: a } = e;
        Jr() || dr(!1);
        let { future: s, static: r } = t.useContext(qr),
          { matches: l } = t.useContext(Qr),
          { pathname: c } = el(),
          u = nl(),
          d = jr(n, zr(l, s.v7_relativeSplatPath), c, "path" === a),
          h = JSON.stringify(d);
        return (
          t.useEffect(
            () => u(JSON.parse(h), { replace: i, state: o, relative: a }),
            [u, h, a, i, o]
          ),
          null
        );
      }
      function ml(e) {
        dr(!1);
      }
      function vl(e) {
        let {
          basename: n = "/",
          children: i = null,
          location: o,
          navigationType: a = cr.Pop,
          navigator: s,
          static: r = !1,
          future: l,
        } = e;
        Jr() && dr(!1);
        let c = n.replace(/^\/*/, "/"),
          u = t.useMemo(
            () => ({
              basename: c,
              navigator: s,
              static: r,
              future: Yr({ v7_relativeSplatPath: !1 }, l),
            }),
            [c, l, s, r]
          );
        "string" === typeof o && (o = mr(o));
        let {
            pathname: d = "/",
            search: h = "",
            hash: p = "",
            state: f = null,
            key: g = "default",
          } = o,
          m = t.useMemo(() => {
            let e = Nr(d, c);
            return null == e
              ? null
              : {
                  location: {
                    pathname: e,
                    search: h,
                    hash: p,
                    state: f,
                    key: g,
                  },
                  navigationType: a,
                };
          }, [c, d, h, p, f, g, a]);
        return null == m
          ? null
          : t.createElement(
              qr.Provider,
              { value: u },
              t.createElement(Zr.Provider, { children: i, value: m })
            );
      }
      function bl(e) {
        let { children: t, location: n } = e;
        return il(xl(t), n);
      }
      new Promise(() => {});
      t.Component;
      function xl(e, n) {
        void 0 === n && (n = []);
        let i = [];
        return (
          t.Children.forEach(e, (e, o) => {
            if (!t.isValidElement(e)) return;
            let a = [...n, o];
            if (e.type === t.Fragment)
              return void i.push.apply(i, xl(e.props.children, a));
            e.type !== ml && dr(!1),
              e.props.index && e.props.children && dr(!1);
            let s = {
              id: e.props.id || a.join("-"),
              caseSensitive: e.props.caseSensitive,
              element: e.props.element,
              Component: e.props.Component,
              index: e.props.index,
              path: e.props.path,
              loader: e.props.loader,
              action: e.props.action,
              errorElement: e.props.errorElement,
              ErrorBoundary: e.props.ErrorBoundary,
              hasErrorBoundary:
                null != e.props.ErrorBoundary || null != e.props.errorElement,
              shouldRevalidate: e.props.shouldRevalidate,
              handle: e.props.handle,
              lazy: e.props.lazy,
            };
            e.props.children && (s.children = xl(e.props.children, a)),
              i.push(s);
          }),
          i
        );
      }
      var yl = n(7950),
        wl = n.t(yl, 2);
      new Set([
        "application/x-www-form-urlencoded",
        "multipart/form-data",
        "text/plain",
      ]);
      try {
        window.__reactRouterVersion = "6";
      } catch (nT) {}
      new Map();
      const Sl = i.startTransition;
      wl.flushSync, i.useId;
      function kl(e) {
        let { basename: n, children: i, future: o, window: a } = e,
          s = t.useRef();
        var r;
        null == s.current &&
          (s.current =
            (void 0 === (r = { window: a, v5Compat: !0 }) && (r = {}),
            vr(
              function (e, t) {
                let { pathname: n, search: i, hash: o } = e.location;
                return fr(
                  "",
                  { pathname: n, search: i, hash: o },
                  (t.state && t.state.usr) || null,
                  (t.state && t.state.key) || "default"
                );
              },
              function (e, t) {
                return "string" === typeof t ? t : gr(t);
              },
              null,
              r
            )));
        let l = s.current,
          [c, u] = t.useState({ action: l.action, location: l.location }),
          { v7_startTransition: d } = o || {},
          h = t.useCallback(
            (e) => {
              d && Sl ? Sl(() => u(e)) : u(e);
            },
            [u, d]
          );
        return (
          t.useLayoutEffect(() => l.listen(h), [l, h]),
          t.createElement(vl, {
            basename: n,
            children: i,
            location: c.location,
            navigationType: c.action,
            navigator: l,
            future: o,
          })
        );
      }
      "undefined" !== typeof window &&
        "undefined" !== typeof window.document &&
        window.document.createElement;
      var Al, Cl;
      (function (e) {
        (e.UseScrollRestoration = "useScrollRestoration"),
          (e.UseSubmit = "useSubmit"),
          (e.UseSubmitFetcher = "useSubmitFetcher"),
          (e.UseFetcher = "useFetcher"),
          (e.useViewTransitionState = "useViewTransitionState");
      })(Al || (Al = {})),
        (function (e) {
          (e.UseFetcher = "useFetcher"),
            (e.UseFetchers = "useFetchers"),
            (e.UseScrollRestoration = "useScrollRestoration");
        })(Cl || (Cl = {}));
      var Ml = n(4440),
        Pl = n(3030);
      function El(e, n, i, o, a) {
        const [s, r] = t.useState(() =>
          a && i ? i(e).matches : o ? o(e).matches : n
        );
        return (
          (0, Ml.A)(() => {
            let t = !0;
            if (!i) return;
            const n = i(e),
              o = () => {
                t && r(n.matches);
              };
            return (
              o(),
              n.addListener(o),
              () => {
                (t = !1), n.removeListener(o);
              }
            );
          }, [e, i]),
          s
        );
      }
      const Ll = i.useSyncExternalStore;
      function Tl(e, n, i, o, a) {
        const s = t.useCallback(() => n, [n]),
          r = t.useMemo(() => {
            if (a && i) return () => i(e).matches;
            if (null !== o) {
              const { matches: t } = o(e);
              return () => t;
            }
            return s;
          }, [s, e, o, a, i]),
          [l, c] = t.useMemo(() => {
            if (null === i) return [s, () => () => {}];
            const t = i(e);
            return [
              () => t.matches,
              (e) => (
                t.addListener(e),
                () => {
                  t.removeListener(e);
                }
              ),
            ];
          }, [s, i, e]);
        return Ll(c, l, r);
      }
      function Ol(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        const n = _s(),
          i =
            "undefined" !== typeof window &&
            "undefined" !== typeof window.matchMedia,
          {
            defaultMatches: o = !1,
            matchMedia: a = i ? window.matchMedia : null,
            ssrMatchMedia: s = null,
            noSsr: r = !1,
          } = (function (e) {
            const { theme: t, name: n, props: i } = e;
            return t &&
              t.components &&
              t.components[n] &&
              t.components[n].defaultProps
              ? (0, Pl.A)(t.components[n].defaultProps, i)
              : i;
          })({ name: "MuiUseMediaQuery", props: t, theme: n });
        let l = "function" === typeof e ? e(n) : e;
        l = l.replace(/^@media( ?)/m, "");
        return (void 0 !== Ll ? Tl : El)(l, o, a, s, r);
      }
      var Rl = n(8387),
        Il = n(2030),
        Nl = n(8812),
        _l = n(8698);
      const Dl = ["className", "component"];
      var zl = n(9386),
        jl = n(2532);
      const Bl = (0, jl.A)("MuiBox", ["root"]),
        Fl = (0, Ys.A)(),
        Wl = (function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          const {
              themeId: n,
              defaultTheme: i,
              defaultClassName: o = "MuiBox-root",
              generateClassName: a,
            } = e,
            s = (0, Il.default)("div", {
              shouldForwardProp: (e) =>
                "theme" !== e && "sx" !== e && "as" !== e,
            })(Nl.A),
            r = t.forwardRef(function (e, t) {
              const r = zs(i),
                l = (0, _l.A)(e),
                { className: c, component: u = "div" } = l,
                d = (0, Xs.A)(l, Dl);
              return (0,
              js.jsx)(s, (0, Ts.A)({ as: u, ref: t, className: (0, Rl.A)(c, a ? a(o) : o), theme: (n && r[n]) || r }, d));
            });
          return r;
        })({
          themeId: Ws.A,
          defaultTheme: Fl,
          defaultClassName: Bl.root,
          generateClassName: zl.A.generate,
        }),
        Hl = Wl;
      var Gl = n(8610),
        Vl = n(7266),
        Ul = n(4535),
        Yl = n(5849),
        Xl = n(3319),
        Kl = n(3574);
      function ql(e, t) {
        return (
          t || (t = e.slice(0)),
          Object.freeze(
            Object.defineProperties(e, { raw: { value: Object.freeze(t) } })
          )
        );
      }
      function Zl(e, t) {
        return (
          (Zl = Object.setPrototypeOf
            ? Object.setPrototypeOf.bind()
            : function (e, t) {
                return (e.__proto__ = t), e;
              }),
          Zl(e, t)
        );
      }
      function Ql(e, t) {
        (e.prototype = Object.create(t.prototype)),
          (e.prototype.constructor = e),
          Zl(e, t);
      }
      const $l = t.createContext(null);
      function Jl(e, n) {
        var i = Object.create(null);
        return (
          e &&
            t.Children.map(e, function (e) {
              return e;
            }).forEach(function (e) {
              i[e.key] = (function (e) {
                return n && (0, t.isValidElement)(e) ? n(e) : e;
              })(e);
            }),
          i
        );
      }
      function ec(e, t, n) {
        return null != n[t] ? n[t] : e.props[t];
      }
      function tc(e, n, i) {
        var o = Jl(e.children),
          a = (function (e, t) {
            function n(n) {
              return n in t ? t[n] : e[n];
            }
            (e = e || {}), (t = t || {});
            var i,
              o = Object.create(null),
              a = [];
            for (var s in e)
              s in t ? a.length && ((o[s] = a), (a = [])) : a.push(s);
            var r = {};
            for (var l in t) {
              if (o[l])
                for (i = 0; i < o[l].length; i++) {
                  var c = o[l][i];
                  r[o[l][i]] = n(c);
                }
              r[l] = n(l);
            }
            for (i = 0; i < a.length; i++) r[a[i]] = n(a[i]);
            return r;
          })(n, o);
        return (
          Object.keys(a).forEach(function (s) {
            var r = a[s];
            if ((0, t.isValidElement)(r)) {
              var l = s in n,
                c = s in o,
                u = n[s],
                d = (0, t.isValidElement)(u) && !u.props.in;
              !c || (l && !d)
                ? c || !l || d
                  ? c &&
                    l &&
                    (0, t.isValidElement)(u) &&
                    (a[s] = (0, t.cloneElement)(r, {
                      onExited: i.bind(null, r),
                      in: u.props.in,
                      exit: ec(r, "exit", e),
                      enter: ec(r, "enter", e),
                    }))
                  : (a[s] = (0, t.cloneElement)(r, { in: !1 }))
                : (a[s] = (0, t.cloneElement)(r, {
                    onExited: i.bind(null, r),
                    in: !0,
                    exit: ec(r, "exit", e),
                    enter: ec(r, "enter", e),
                  }));
            }
          }),
          a
        );
      }
      var nc =
          Object.values ||
          function (e) {
            return Object.keys(e).map(function (t) {
              return e[t];
            });
          },
        ic = (function (e) {
          function n(t, n) {
            var i,
              o = (i = e.call(this, t, n) || this).handleExited.bind(
                (function (e) {
                  if (void 0 === e)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return e;
                })(i)
              );
            return (
              (i.state = {
                contextValue: { isMounting: !0 },
                handleExited: o,
                firstRender: !0,
              }),
              i
            );
          }
          Ql(n, e);
          var i = n.prototype;
          return (
            (i.componentDidMount = function () {
              (this.mounted = !0),
                this.setState({ contextValue: { isMounting: !1 } });
            }),
            (i.componentWillUnmount = function () {
              this.mounted = !1;
            }),
            (n.getDerivedStateFromProps = function (e, n) {
              var i,
                o,
                a = n.children,
                s = n.handleExited;
              return {
                children: n.firstRender
                  ? ((i = e),
                    (o = s),
                    Jl(i.children, function (e) {
                      return (0,
                      t.cloneElement)(e, { onExited: o.bind(null, e), in: !0, appear: ec(e, "appear", i), enter: ec(e, "enter", i), exit: ec(e, "exit", i) });
                    }))
                  : tc(e, a, s),
                firstRender: !1,
              };
            }),
            (i.handleExited = function (e, t) {
              var n = Jl(this.props.children);
              e.key in n ||
                (e.props.onExited && e.props.onExited(t),
                this.mounted &&
                  this.setState(function (t) {
                    var n = (0, Ts.A)({}, t.children);
                    return delete n[e.key], { children: n };
                  }));
            }),
            (i.render = function () {
              var e = this.props,
                n = e.component,
                i = e.childFactory,
                o = (0, Xs.A)(e, ["component", "childFactory"]),
                a = this.state.contextValue,
                s = nc(this.state.children).map(i);
              return (
                delete o.appear,
                delete o.enter,
                delete o.exit,
                null === n
                  ? t.createElement($l.Provider, { value: a }, s)
                  : t.createElement(
                      $l.Provider,
                      { value: a },
                      t.createElement(n, o, s)
                    )
              );
            }),
            n
          );
        })(t.Component);
      (ic.propTypes = {}),
        (ic.defaultProps = {
          component: "div",
          childFactory: function (e) {
            return e;
          },
        });
      const oc = ic;
      var ac = n(3290),
        sc = n(9303);
      const rc = function (e) {
        const {
            className: n,
            classes: i,
            pulsate: o = !1,
            rippleX: a,
            rippleY: s,
            rippleSize: r,
            in: l,
            onExited: c,
            timeout: u,
          } = e,
          [d, h] = t.useState(!1),
          p = (0, Rl.A)(n, i.ripple, i.rippleVisible, o && i.ripplePulsate),
          f = { width: r, height: r, top: -r / 2 + s, left: -r / 2 + a },
          g = (0, Rl.A)(i.child, d && i.childLeaving, o && i.childPulsate);
        return (
          l || d || h(!0),
          t.useEffect(() => {
            if (!l && null != c) {
              const e = setTimeout(c, u);
              return () => {
                clearTimeout(e);
              };
            }
          }, [c, l, u]),
          (0, js.jsx)("span", {
            className: p,
            style: f,
            children: (0, js.jsx)("span", { className: g }),
          })
        );
      };
      const lc = (0, jl.A)("MuiTouchRipple", [
        "root",
        "ripple",
        "rippleVisible",
        "ripplePulsate",
        "child",
        "childLeaving",
        "childPulsate",
      ]);
      var cc, uc, dc, hc;
      const pc = ["center", "classes", "className"];
      let fc, gc, mc, vc;
      const bc = (0, ac.i7)(
          fc ||
            (fc =
              cc ||
              (cc = ql([
                "\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n",
              ])))
        ),
        xc = (0, ac.i7)(
          gc ||
            (gc =
              uc ||
              (uc = ql([
                "\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n",
              ])))
        ),
        yc = (0, ac.i7)(
          mc ||
            (mc =
              dc ||
              (dc = ql([
                "\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n",
              ])))
        ),
        wc = (0, Ul.Ay)("span", { name: "MuiTouchRipple", slot: "Root" })({
          overflow: "hidden",
          pointerEvents: "none",
          position: "absolute",
          zIndex: 0,
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          borderRadius: "inherit",
        }),
        Sc = (0, Ul.Ay)(rc, { name: "MuiTouchRipple", slot: "Ripple" })(
          vc ||
            (vc =
              hc ||
              (hc = ql([
                "\n  opacity: 0;\n  position: absolute;\n\n  &.",
                " {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ",
                ";\n    animation-duration: ",
                "ms;\n    animation-timing-function: ",
                ";\n  }\n\n  &.",
                " {\n    animation-duration: ",
                "ms;\n  }\n\n  & .",
                " {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .",
                " {\n    opacity: 0;\n    animation-name: ",
                ";\n    animation-duration: ",
                "ms;\n    animation-timing-function: ",
                ";\n  }\n\n  & .",
                " {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ",
                ";\n    animation-duration: 2500ms;\n    animation-timing-function: ",
                ";\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n",
              ]))),
          lc.rippleVisible,
          bc,
          550,
          (e) => {
            let { theme: t } = e;
            return t.transitions.easing.easeInOut;
          },
          lc.ripplePulsate,
          (e) => {
            let { theme: t } = e;
            return t.transitions.duration.shorter;
          },
          lc.child,
          lc.childLeaving,
          xc,
          550,
          (e) => {
            let { theme: t } = e;
            return t.transitions.easing.easeInOut;
          },
          lc.childPulsate,
          yc,
          (e) => {
            let { theme: t } = e;
            return t.transitions.easing.easeInOut;
          }
        ),
        kc = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiTouchRipple" }),
            { center: o = !1, classes: a = {}, className: s } = i,
            r = (0, Xs.A)(i, pc),
            [l, c] = t.useState([]),
            u = t.useRef(0),
            d = t.useRef(null);
          t.useEffect(() => {
            d.current && (d.current(), (d.current = null));
          }, [l]);
          const h = t.useRef(!1),
            p = (0, sc.A)(),
            f = t.useRef(null),
            g = t.useRef(null),
            m = t.useCallback(
              (e) => {
                const {
                  pulsate: t,
                  rippleX: n,
                  rippleY: i,
                  rippleSize: o,
                  cb: s,
                } = e;
                c((e) => [
                  ...e,
                  (0, js.jsx)(
                    Sc,
                    {
                      classes: {
                        ripple: (0, Rl.A)(a.ripple, lc.ripple),
                        rippleVisible: (0, Rl.A)(
                          a.rippleVisible,
                          lc.rippleVisible
                        ),
                        ripplePulsate: (0, Rl.A)(
                          a.ripplePulsate,
                          lc.ripplePulsate
                        ),
                        child: (0, Rl.A)(a.child, lc.child),
                        childLeaving: (0, Rl.A)(
                          a.childLeaving,
                          lc.childLeaving
                        ),
                        childPulsate: (0, Rl.A)(
                          a.childPulsate,
                          lc.childPulsate
                        ),
                      },
                      timeout: 550,
                      pulsate: t,
                      rippleX: n,
                      rippleY: i,
                      rippleSize: o,
                    },
                    u.current
                  ),
                ]),
                  (u.current += 1),
                  (d.current = s);
              },
              [a]
            ),
            v = t.useCallback(
              function () {
                let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  n =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : () => {};
                const {
                  pulsate: i = !1,
                  center: a = o || t.pulsate,
                  fakeElement: s = !1,
                } = t;
                if ("mousedown" === (null == e ? void 0 : e.type) && h.current)
                  return void (h.current = !1);
                "touchstart" === (null == e ? void 0 : e.type) &&
                  (h.current = !0);
                const r = s ? null : g.current,
                  l = r
                    ? r.getBoundingClientRect()
                    : { width: 0, height: 0, left: 0, top: 0 };
                let c, u, d;
                if (
                  a ||
                  void 0 === e ||
                  (0 === e.clientX && 0 === e.clientY) ||
                  (!e.clientX && !e.touches)
                )
                  (c = Math.round(l.width / 2)), (u = Math.round(l.height / 2));
                else {
                  const { clientX: t, clientY: n } =
                    e.touches && e.touches.length > 0 ? e.touches[0] : e;
                  (c = Math.round(t - l.left)), (u = Math.round(n - l.top));
                }
                if (a)
                  (d = Math.sqrt((2 * l.width ** 2 + l.height ** 2) / 3)),
                    d % 2 === 0 && (d += 1);
                else {
                  const e =
                      2 * Math.max(Math.abs((r ? r.clientWidth : 0) - c), c) +
                      2,
                    t =
                      2 * Math.max(Math.abs((r ? r.clientHeight : 0) - u), u) +
                      2;
                  d = Math.sqrt(e ** 2 + t ** 2);
                }
                null != e && e.touches
                  ? null === f.current &&
                    ((f.current = () => {
                      m({
                        pulsate: i,
                        rippleX: c,
                        rippleY: u,
                        rippleSize: d,
                        cb: n,
                      });
                    }),
                    p.start(80, () => {
                      f.current && (f.current(), (f.current = null));
                    }))
                  : m({
                      pulsate: i,
                      rippleX: c,
                      rippleY: u,
                      rippleSize: d,
                      cb: n,
                    });
              },
              [o, m, p]
            ),
            b = t.useCallback(() => {
              v({}, { pulsate: !0 });
            }, [v]),
            x = t.useCallback(
              (e, t) => {
                if (
                  (p.clear(),
                  "touchend" === (null == e ? void 0 : e.type) && f.current)
                )
                  return (
                    f.current(),
                    (f.current = null),
                    void p.start(0, () => {
                      x(e, t);
                    })
                  );
                (f.current = null),
                  c((e) => (e.length > 0 ? e.slice(1) : e)),
                  (d.current = t);
              },
              [p]
            );
          return (
            t.useImperativeHandle(
              n,
              () => ({ pulsate: b, start: v, stop: x }),
              [b, v, x]
            ),
            (0, js.jsx)(
              wc,
              (0, Ts.A)(
                { className: (0, Rl.A)(lc.root, a.root, s), ref: g },
                r,
                {
                  children: (0, js.jsx)(oc, {
                    component: null,
                    exit: !0,
                    children: l,
                  }),
                }
              )
            )
          );
        }),
        Ac = kc;
      var Cc = n(2372);
      function Mc(e) {
        return (0, Cc.Ay)("MuiButtonBase", e);
      }
      const Pc = (0, jl.A)("MuiButtonBase", [
          "root",
          "disabled",
          "focusVisible",
        ]),
        Ec = [
          "action",
          "centerRipple",
          "children",
          "className",
          "component",
          "disabled",
          "disableRipple",
          "disableTouchRipple",
          "focusRipple",
          "focusVisibleClassName",
          "LinkComponent",
          "onBlur",
          "onClick",
          "onContextMenu",
          "onDragLeave",
          "onFocus",
          "onFocusVisible",
          "onKeyDown",
          "onKeyUp",
          "onMouseDown",
          "onMouseLeave",
          "onMouseUp",
          "onTouchEnd",
          "onTouchMove",
          "onTouchStart",
          "tabIndex",
          "TouchRippleProps",
          "touchRippleRef",
          "type",
        ],
        Lc = (0, Ul.Ay)("button", {
          name: "MuiButtonBase",
          slot: "Root",
          overridesResolver: (e, t) => t.root,
        })({
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center",
          position: "relative",
          boxSizing: "border-box",
          WebkitTapHighlightColor: "transparent",
          backgroundColor: "transparent",
          outline: 0,
          border: 0,
          margin: 0,
          borderRadius: 0,
          padding: 0,
          cursor: "pointer",
          userSelect: "none",
          verticalAlign: "middle",
          MozAppearance: "none",
          WebkitAppearance: "none",
          textDecoration: "none",
          color: "inherit",
          "&::-moz-focus-inner": { borderStyle: "none" },
          ["&.".concat(Pc.disabled)]: {
            pointerEvents: "none",
            cursor: "default",
          },
          "@media print": { colorAdjust: "exact" },
        }),
        Tc = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiButtonBase" }),
            {
              action: o,
              centerRipple: a = !1,
              children: s,
              className: r,
              component: l = "button",
              disabled: c = !1,
              disableRipple: u = !1,
              disableTouchRipple: d = !1,
              focusRipple: h = !1,
              LinkComponent: p = "a",
              onBlur: f,
              onClick: g,
              onContextMenu: m,
              onDragLeave: v,
              onFocus: b,
              onFocusVisible: x,
              onKeyDown: y,
              onKeyUp: w,
              onMouseDown: S,
              onMouseLeave: k,
              onMouseUp: A,
              onTouchEnd: C,
              onTouchMove: M,
              onTouchStart: P,
              tabIndex: E = 0,
              TouchRippleProps: L,
              touchRippleRef: T,
              type: O,
            } = i,
            R = (0, Xs.A)(i, Ec),
            I = t.useRef(null),
            N = t.useRef(null),
            _ = (0, Yl.A)(N, T),
            {
              isFocusVisibleRef: D,
              onFocus: z,
              onBlur: j,
              ref: B,
            } = (0, Kl.A)(),
            [F, W] = t.useState(!1);
          c && F && W(!1),
            t.useImperativeHandle(
              o,
              () => ({
                focusVisible: () => {
                  W(!0), I.current.focus();
                },
              }),
              []
            );
          const [H, G] = t.useState(!1);
          t.useEffect(() => {
            G(!0);
          }, []);
          const V = H && !u && !c;
          function U(e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : d;
            return (0, Xl.A)((i) => {
              t && t(i);
              return !n && N.current && N.current[e](i), !0;
            });
          }
          t.useEffect(() => {
            F && h && !u && H && N.current.pulsate();
          }, [u, h, F, H]);
          const Y = U("start", S),
            X = U("stop", m),
            K = U("stop", v),
            q = U("stop", A),
            Z = U("stop", (e) => {
              F && e.preventDefault(), k && k(e);
            }),
            Q = U("start", P),
            $ = U("stop", C),
            J = U("stop", M),
            ee = U(
              "stop",
              (e) => {
                j(e), !1 === D.current && W(!1), f && f(e);
              },
              !1
            ),
            te = (0, Xl.A)((e) => {
              I.current || (I.current = e.currentTarget),
                z(e),
                !0 === D.current && (W(!0), x && x(e)),
                b && b(e);
            }),
            ne = () => {
              const e = I.current;
              return l && "button" !== l && !("A" === e.tagName && e.href);
            },
            ie = t.useRef(!1),
            oe = (0, Xl.A)((e) => {
              h &&
                !ie.current &&
                F &&
                N.current &&
                " " === e.key &&
                ((ie.current = !0),
                N.current.stop(e, () => {
                  N.current.start(e);
                })),
                e.target === e.currentTarget &&
                  ne() &&
                  " " === e.key &&
                  e.preventDefault(),
                y && y(e),
                e.target === e.currentTarget &&
                  ne() &&
                  "Enter" === e.key &&
                  !c &&
                  (e.preventDefault(), g && g(e));
            }),
            ae = (0, Xl.A)((e) => {
              h &&
                " " === e.key &&
                N.current &&
                F &&
                !e.defaultPrevented &&
                ((ie.current = !1),
                N.current.stop(e, () => {
                  N.current.pulsate(e);
                })),
                w && w(e),
                g &&
                  e.target === e.currentTarget &&
                  ne() &&
                  " " === e.key &&
                  !e.defaultPrevented &&
                  g(e);
            });
          let se = l;
          "button" === se && (R.href || R.to) && (se = p);
          const re = {};
          "button" === se
            ? ((re.type = void 0 === O ? "button" : O), (re.disabled = c))
            : (R.href || R.to || (re.role = "button"),
              c && (re["aria-disabled"] = c));
          const le = (0, Yl.A)(n, B, I);
          const ce = (0, Ts.A)({}, i, {
              centerRipple: a,
              component: l,
              disabled: c,
              disableRipple: u,
              disableTouchRipple: d,
              focusRipple: h,
              tabIndex: E,
              focusVisible: F,
            }),
            ue = ((e) => {
              const {
                  disabled: t,
                  focusVisible: n,
                  focusVisibleClassName: i,
                  classes: o,
                } = e,
                a = { root: ["root", t && "disabled", n && "focusVisible"] },
                s = (0, Gl.A)(a, Mc, o);
              return n && i && (s.root += " ".concat(i)), s;
            })(ce);
          return (0,
          js.jsxs)(Lc, (0, Ts.A)({ as: se, className: (0, Rl.A)(ue.root, r), ownerState: ce, onBlur: ee, onClick: g, onContextMenu: X, onFocus: te, onKeyDown: oe, onKeyUp: ae, onMouseDown: Y, onMouseLeave: Z, onMouseUp: q, onDragLeave: K, onTouchEnd: $, onTouchMove: J, onTouchStart: Q, ref: le, tabIndex: c ? -1 : E, type: O }, re, R, { children: [s, V ? (0, js.jsx)(Ac, (0, Ts.A)({ ref: _, center: a }, L)) : null] }));
        }),
        Oc = Tc;
      var Rc = n(6803);
      function Ic(e) {
        return (0, Cc.Ay)("MuiIconButton", e);
      }
      const Nc = (0, jl.A)("MuiIconButton", [
          "root",
          "disabled",
          "colorInherit",
          "colorPrimary",
          "colorSecondary",
          "colorError",
          "colorInfo",
          "colorSuccess",
          "colorWarning",
          "edgeStart",
          "edgeEnd",
          "sizeSmall",
          "sizeMedium",
          "sizeLarge",
        ]),
        _c = [
          "edge",
          "children",
          "className",
          "color",
          "disabled",
          "disableFocusRipple",
          "size",
        ],
        Dc = (0, Ul.Ay)(Oc, {
          name: "MuiIconButton",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              "default" !== n.color && t["color".concat((0, Rc.A)(n.color))],
              n.edge && t["edge".concat((0, Rc.A)(n.edge))],
              t["size".concat((0, Rc.A)(n.size))],
            ];
          },
        })(
          (e) => {
            let { theme: t, ownerState: n } = e;
            return (0, Ts.A)(
              {
                textAlign: "center",
                flex: "0 0 auto",
                fontSize: t.typography.pxToRem(24),
                padding: 8,
                borderRadius: "50%",
                overflow: "visible",
                color: (t.vars || t).palette.action.active,
                transition: t.transitions.create("background-color", {
                  duration: t.transitions.duration.shortest,
                }),
              },
              !n.disableRipple && {
                "&:hover": {
                  backgroundColor: t.vars
                    ? "rgba("
                        .concat(t.vars.palette.action.activeChannel, " / ")
                        .concat(t.vars.palette.action.hoverOpacity, ")")
                    : (0, Vl.X4)(
                        t.palette.action.active,
                        t.palette.action.hoverOpacity
                      ),
                  "@media (hover: none)": { backgroundColor: "transparent" },
                },
              },
              "start" === n.edge && {
                marginLeft: "small" === n.size ? -3 : -12,
              },
              "end" === n.edge && { marginRight: "small" === n.size ? -3 : -12 }
            );
          },
          (e) => {
            let { theme: t, ownerState: n } = e;
            var i;
            const o = null == (i = (t.vars || t).palette) ? void 0 : i[n.color];
            return (0, Ts.A)(
              {},
              "inherit" === n.color && { color: "inherit" },
              "inherit" !== n.color &&
                "default" !== n.color &&
                (0, Ts.A)(
                  { color: null == o ? void 0 : o.main },
                  !n.disableRipple && {
                    "&:hover": (0, Ts.A)(
                      {},
                      o && {
                        backgroundColor: t.vars
                          ? "rgba("
                              .concat(o.mainChannel, " / ")
                              .concat(t.vars.palette.action.hoverOpacity, ")")
                          : (0, Vl.X4)(o.main, t.palette.action.hoverOpacity),
                      },
                      {
                        "@media (hover: none)": {
                          backgroundColor: "transparent",
                        },
                      }
                    ),
                  }
                ),
              "small" === n.size && {
                padding: 5,
                fontSize: t.typography.pxToRem(18),
              },
              "large" === n.size && {
                padding: 12,
                fontSize: t.typography.pxToRem(28),
              },
              {
                ["&.".concat(Nc.disabled)]: {
                  backgroundColor: "transparent",
                  color: (t.vars || t).palette.action.disabled,
                },
              }
            );
          }
        ),
        zc = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiIconButton" }),
            {
              edge: i = !1,
              children: o,
              className: a,
              color: s = "default",
              disabled: r = !1,
              disableFocusRipple: l = !1,
              size: c = "medium",
            } = n,
            u = (0, Xs.A)(n, _c),
            d = (0, Ts.A)({}, n, {
              edge: i,
              color: s,
              disabled: r,
              disableFocusRipple: l,
              size: c,
            }),
            h = ((e) => {
              const { classes: t, disabled: n, color: i, edge: o, size: a } = e,
                s = {
                  root: [
                    "root",
                    n && "disabled",
                    "default" !== i && "color".concat((0, Rc.A)(i)),
                    o && "edge".concat((0, Rc.A)(o)),
                    "size".concat((0, Rc.A)(a)),
                  ],
                };
              return (0, Gl.A)(s, Ic, t);
            })(d);
          return (0,
          js.jsx)(Dc, (0, Ts.A)({ className: (0, Rl.A)(h.root, a), centerRipple: !0, focusRipple: !l, disabled: r, ref: t }, u, { ownerState: d, children: o }));
        }),
        jc = zc;
      const Bc = t.createContext({});
      function Fc(e) {
        return (0, Cc.Ay)("MuiList", e);
      }
      (0, jl.A)("MuiList", ["root", "padding", "dense", "subheader"]);
      const Wc = [
          "children",
          "className",
          "component",
          "dense",
          "disablePadding",
          "subheader",
        ],
        Hc = (0, Ul.Ay)("ul", {
          name: "MuiList",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              !n.disablePadding && t.padding,
              n.dense && t.dense,
              n.subheader && t.subheader,
            ];
          },
        })((e) => {
          let { ownerState: t } = e;
          return (0, Ts.A)(
            { listStyle: "none", margin: 0, padding: 0, position: "relative" },
            !t.disablePadding && { paddingTop: 8, paddingBottom: 8 },
            t.subheader && { paddingTop: 0 }
          );
        }),
        Gc = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiList" }),
            {
              children: o,
              className: a,
              component: s = "ul",
              dense: r = !1,
              disablePadding: l = !1,
              subheader: c,
            } = i,
            u = (0, Xs.A)(i, Wc),
            d = t.useMemo(() => ({ dense: r }), [r]),
            h = (0, Ts.A)({}, i, { component: s, dense: r, disablePadding: l }),
            p = ((e) => {
              const {
                  classes: t,
                  disablePadding: n,
                  dense: i,
                  subheader: o,
                } = e,
                a = {
                  root: [
                    "root",
                    !n && "padding",
                    i && "dense",
                    o && "subheader",
                  ],
                };
              return (0, Gl.A)(a, Fc, t);
            })(h);
          return (0,
          js.jsx)(Bc.Provider, { value: d, children: (0, js.jsxs)(Hc, (0, Ts.A)({ as: s, className: (0, Rl.A)(p.root, a), ref: n, ownerState: h }, u, { children: [c, o] })) });
        });
      const Vc = function (e) {
        return "string" === typeof e;
      };
      var Uc = n(7328),
        Yc = n(5013);
      function Xc(e) {
        return (0, Cc.Ay)("MuiListItem", e);
      }
      const Kc = (0, jl.A)("MuiListItem", [
        "root",
        "container",
        "focusVisible",
        "dense",
        "alignItemsFlexStart",
        "disabled",
        "divider",
        "gutters",
        "padding",
        "button",
        "secondaryAction",
        "selected",
      ]);
      function qc(e) {
        return (0, Cc.Ay)("MuiListItemButton", e);
      }
      const Zc = (0, jl.A)("MuiListItemButton", [
        "root",
        "focusVisible",
        "dense",
        "alignItemsFlexStart",
        "disabled",
        "divider",
        "gutters",
        "selected",
      ]);
      function Qc(e) {
        return (0, Cc.Ay)("MuiListItemSecondaryAction", e);
      }
      (0, jl.A)("MuiListItemSecondaryAction", ["root", "disableGutters"]);
      const $c = ["className"],
        Jc = (0, Ul.Ay)("div", {
          name: "MuiListItemSecondaryAction",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.root, n.disableGutters && t.disableGutters];
          },
        })((e) => {
          let { ownerState: t } = e;
          return (0, Ts.A)(
            {
              position: "absolute",
              right: 16,
              top: "50%",
              transform: "translateY(-50%)",
            },
            t.disableGutters && { right: 0 }
          );
        }),
        eu = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiListItemSecondaryAction" }),
            { className: o } = i,
            a = (0, Xs.A)(i, $c),
            s = t.useContext(Bc),
            r = (0, Ts.A)({}, i, { disableGutters: s.disableGutters }),
            l = ((e) => {
              const { disableGutters: t, classes: n } = e,
                i = { root: ["root", t && "disableGutters"] };
              return (0, Gl.A)(i, Qc, n);
            })(r);
          return (0,
          js.jsx)(Jc, (0, Ts.A)({ className: (0, Rl.A)(l.root, o), ownerState: r, ref: n }, a));
        });
      eu.muiName = "ListItemSecondaryAction";
      const tu = eu,
        nu = ["className"],
        iu = [
          "alignItems",
          "autoFocus",
          "button",
          "children",
          "className",
          "component",
          "components",
          "componentsProps",
          "ContainerComponent",
          "ContainerProps",
          "dense",
          "disabled",
          "disableGutters",
          "disablePadding",
          "divider",
          "focusVisibleClassName",
          "secondaryAction",
          "selected",
          "slotProps",
          "slots",
        ],
        ou = (0, Ul.Ay)("div", {
          name: "MuiListItem",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              n.dense && t.dense,
              "flex-start" === n.alignItems && t.alignItemsFlexStart,
              n.divider && t.divider,
              !n.disableGutters && t.gutters,
              !n.disablePadding && t.padding,
              n.button && t.button,
              n.hasSecondaryAction && t.secondaryAction,
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          return (0, Ts.A)(
            {
              display: "flex",
              justifyContent: "flex-start",
              alignItems: "center",
              position: "relative",
              textDecoration: "none",
              width: "100%",
              boxSizing: "border-box",
              textAlign: "left",
            },
            !n.disablePadding &&
              (0, Ts.A)(
                { paddingTop: 8, paddingBottom: 8 },
                n.dense && { paddingTop: 4, paddingBottom: 4 },
                !n.disableGutters && { paddingLeft: 16, paddingRight: 16 },
                !!n.secondaryAction && { paddingRight: 48 }
              ),
            !!n.secondaryAction && {
              ["& > .".concat(Zc.root)]: { paddingRight: 48 },
            },
            {
              ["&.".concat(Kc.focusVisible)]: {
                backgroundColor: (t.vars || t).palette.action.focus,
              },
              ["&.".concat(Kc.selected)]: {
                backgroundColor: t.vars
                  ? "rgba("
                      .concat(t.vars.palette.primary.mainChannel, " / ")
                      .concat(t.vars.palette.action.selectedOpacity, ")")
                  : (0, Vl.X4)(
                      t.palette.primary.main,
                      t.palette.action.selectedOpacity
                    ),
                ["&.".concat(Kc.focusVisible)]: {
                  backgroundColor: t.vars
                    ? "rgba("
                        .concat(t.vars.palette.primary.mainChannel, " / calc(")
                        .concat(t.vars.palette.action.selectedOpacity, " + ")
                        .concat(t.vars.palette.action.focusOpacity, "))")
                    : (0, Vl.X4)(
                        t.palette.primary.main,
                        t.palette.action.selectedOpacity +
                          t.palette.action.focusOpacity
                      ),
                },
              },
              ["&.".concat(Kc.disabled)]: {
                opacity: (t.vars || t).palette.action.disabledOpacity,
              },
            },
            "flex-start" === n.alignItems && { alignItems: "flex-start" },
            n.divider && {
              borderBottom: "1px solid ".concat((t.vars || t).palette.divider),
              backgroundClip: "padding-box",
            },
            n.button && {
              transition: t.transitions.create("background-color", {
                duration: t.transitions.duration.shortest,
              }),
              "&:hover": {
                textDecoration: "none",
                backgroundColor: (t.vars || t).palette.action.hover,
                "@media (hover: none)": { backgroundColor: "transparent" },
              },
              ["&.".concat(Kc.selected, ":hover")]: {
                backgroundColor: t.vars
                  ? "rgba("
                      .concat(t.vars.palette.primary.mainChannel, " / calc(")
                      .concat(t.vars.palette.action.selectedOpacity, " + ")
                      .concat(t.vars.palette.action.hoverOpacity, "))")
                  : (0, Vl.X4)(
                      t.palette.primary.main,
                      t.palette.action.selectedOpacity +
                        t.palette.action.hoverOpacity
                    ),
                "@media (hover: none)": {
                  backgroundColor: t.vars
                    ? "rgba("
                        .concat(t.vars.palette.primary.mainChannel, " / ")
                        .concat(t.vars.palette.action.selectedOpacity, ")")
                    : (0, Vl.X4)(
                        t.palette.primary.main,
                        t.palette.action.selectedOpacity
                      ),
                },
              },
            },
            n.hasSecondaryAction && { paddingRight: 48 }
          );
        }),
        au = (0, Ul.Ay)("li", {
          name: "MuiListItem",
          slot: "Container",
          overridesResolver: (e, t) => t.container,
        })({ position: "relative" }),
        su = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiListItem" }),
            {
              alignItems: o = "center",
              autoFocus: a = !1,
              button: s = !1,
              children: r,
              className: l,
              component: c,
              components: u = {},
              componentsProps: d = {},
              ContainerComponent: h = "li",
              ContainerProps: { className: p } = {},
              dense: f = !1,
              disabled: g = !1,
              disableGutters: m = !1,
              disablePadding: v = !1,
              divider: b = !1,
              focusVisibleClassName: x,
              secondaryAction: y,
              selected: w = !1,
              slotProps: S = {},
              slots: k = {},
            } = i,
            A = (0, Xs.A)(i.ContainerProps, nu),
            C = (0, Xs.A)(i, iu),
            M = t.useContext(Bc),
            P = t.useMemo(
              () => ({
                dense: f || M.dense || !1,
                alignItems: o,
                disableGutters: m,
              }),
              [o, M.dense, f, m]
            ),
            E = t.useRef(null);
          (0, Yc.A)(() => {
            a && E.current && E.current.focus();
          }, [a]);
          const L = t.Children.toArray(r),
            T =
              L.length &&
              (0, Uc.A)(L[L.length - 1], ["ListItemSecondaryAction"]),
            O = (0, Ts.A)({}, i, {
              alignItems: o,
              autoFocus: a,
              button: s,
              dense: P.dense,
              disabled: g,
              disableGutters: m,
              disablePadding: v,
              divider: b,
              hasSecondaryAction: T,
              selected: w,
            }),
            R = ((e) => {
              const {
                  alignItems: t,
                  button: n,
                  classes: i,
                  dense: o,
                  disabled: a,
                  disableGutters: s,
                  disablePadding: r,
                  divider: l,
                  hasSecondaryAction: c,
                  selected: u,
                } = e,
                d = {
                  root: [
                    "root",
                    o && "dense",
                    !s && "gutters",
                    !r && "padding",
                    l && "divider",
                    a && "disabled",
                    n && "button",
                    "flex-start" === t && "alignItemsFlexStart",
                    c && "secondaryAction",
                    u && "selected",
                  ],
                  container: ["container"],
                };
              return (0, Gl.A)(d, Xc, i);
            })(O),
            I = (0, Yl.A)(E, n),
            N = k.root || u.Root || ou,
            _ = S.root || d.root || {},
            D = (0, Ts.A)(
              { className: (0, Rl.A)(R.root, _.className, l), disabled: g },
              C
            );
          let z = c || "li";
          return (
            s &&
              ((D.component = c || "div"),
              (D.focusVisibleClassName = (0, Rl.A)(Kc.focusVisible, x)),
              (z = Oc)),
            T
              ? ((z = D.component || c ? z : "div"),
                "li" === h &&
                  ("li" === z
                    ? (z = "div")
                    : "li" === D.component && (D.component = "div")),
                (0, js.jsx)(Bc.Provider, {
                  value: P,
                  children: (0, js.jsxs)(
                    au,
                    (0, Ts.A)(
                      {
                        as: h,
                        className: (0, Rl.A)(R.container, p),
                        ref: I,
                        ownerState: O,
                      },
                      A,
                      {
                        children: [
                          (0, js.jsx)(
                            N,
                            (0, Ts.A)(
                              {},
                              _,
                              !Vc(N) && {
                                as: z,
                                ownerState: (0, Ts.A)({}, O, _.ownerState),
                              },
                              D,
                              { children: L }
                            )
                          ),
                          L.pop(),
                        ],
                      }
                    )
                  ),
                }))
              : (0, js.jsx)(Bc.Provider, {
                  value: P,
                  children: (0, js.jsxs)(
                    N,
                    (0, Ts.A)(
                      {},
                      _,
                      { as: z, ref: I },
                      !Vc(N) && { ownerState: (0, Ts.A)({}, O, _.ownerState) },
                      D,
                      { children: [L, y && (0, js.jsx)(tu, { children: y })] }
                    )
                  ),
                })
          );
        });
      var ru = n(1542);
      const lu = [
          "alignItems",
          "autoFocus",
          "component",
          "children",
          "dense",
          "disableGutters",
          "divider",
          "focusVisibleClassName",
          "selected",
          "className",
        ],
        cu = (0, Ul.Ay)(Oc, {
          shouldForwardProp: (e) => (0, ru.A)(e) || "classes" === e,
          name: "MuiListItemButton",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              n.dense && t.dense,
              "flex-start" === n.alignItems && t.alignItemsFlexStart,
              n.divider && t.divider,
              !n.disableGutters && t.gutters,
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          return (0, Ts.A)(
            {
              display: "flex",
              flexGrow: 1,
              justifyContent: "flex-start",
              alignItems: "center",
              position: "relative",
              textDecoration: "none",
              minWidth: 0,
              boxSizing: "border-box",
              textAlign: "left",
              paddingTop: 8,
              paddingBottom: 8,
              transition: t.transitions.create("background-color", {
                duration: t.transitions.duration.shortest,
              }),
              "&:hover": {
                textDecoration: "none",
                backgroundColor: (t.vars || t).palette.action.hover,
                "@media (hover: none)": { backgroundColor: "transparent" },
              },
              ["&.".concat(Zc.selected)]: {
                backgroundColor: t.vars
                  ? "rgba("
                      .concat(t.vars.palette.primary.mainChannel, " / ")
                      .concat(t.vars.palette.action.selectedOpacity, ")")
                  : (0, Vl.X4)(
                      t.palette.primary.main,
                      t.palette.action.selectedOpacity
                    ),
                ["&.".concat(Zc.focusVisible)]: {
                  backgroundColor: t.vars
                    ? "rgba("
                        .concat(t.vars.palette.primary.mainChannel, " / calc(")
                        .concat(t.vars.palette.action.selectedOpacity, " + ")
                        .concat(t.vars.palette.action.focusOpacity, "))")
                    : (0, Vl.X4)(
                        t.palette.primary.main,
                        t.palette.action.selectedOpacity +
                          t.palette.action.focusOpacity
                      ),
                },
              },
              ["&.".concat(Zc.selected, ":hover")]: {
                backgroundColor: t.vars
                  ? "rgba("
                      .concat(t.vars.palette.primary.mainChannel, " / calc(")
                      .concat(t.vars.palette.action.selectedOpacity, " + ")
                      .concat(t.vars.palette.action.hoverOpacity, "))")
                  : (0, Vl.X4)(
                      t.palette.primary.main,
                      t.palette.action.selectedOpacity +
                        t.palette.action.hoverOpacity
                    ),
                "@media (hover: none)": {
                  backgroundColor: t.vars
                    ? "rgba("
                        .concat(t.vars.palette.primary.mainChannel, " / ")
                        .concat(t.vars.palette.action.selectedOpacity, ")")
                    : (0, Vl.X4)(
                        t.palette.primary.main,
                        t.palette.action.selectedOpacity
                      ),
                },
              },
              ["&.".concat(Zc.focusVisible)]: {
                backgroundColor: (t.vars || t).palette.action.focus,
              },
              ["&.".concat(Zc.disabled)]: {
                opacity: (t.vars || t).palette.action.disabledOpacity,
              },
            },
            n.divider && {
              borderBottom: "1px solid ".concat((t.vars || t).palette.divider),
              backgroundClip: "padding-box",
            },
            "flex-start" === n.alignItems && { alignItems: "flex-start" },
            !n.disableGutters && { paddingLeft: 16, paddingRight: 16 },
            n.dense && { paddingTop: 4, paddingBottom: 4 }
          );
        }),
        uu = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiListItemButton" }),
            {
              alignItems: o = "center",
              autoFocus: a = !1,
              component: s = "div",
              children: r,
              dense: l = !1,
              disableGutters: c = !1,
              divider: u = !1,
              focusVisibleClassName: d,
              selected: h = !1,
              className: p,
            } = i,
            f = (0, Xs.A)(i, lu),
            g = t.useContext(Bc),
            m = t.useMemo(
              () => ({
                dense: l || g.dense || !1,
                alignItems: o,
                disableGutters: c,
              }),
              [o, g.dense, l, c]
            ),
            v = t.useRef(null);
          (0, Yc.A)(() => {
            a && v.current && v.current.focus();
          }, [a]);
          const b = (0, Ts.A)({}, i, {
              alignItems: o,
              dense: m.dense,
              disableGutters: c,
              divider: u,
              selected: h,
            }),
            x = ((e) => {
              const {
                  alignItems: t,
                  classes: n,
                  dense: i,
                  disabled: o,
                  disableGutters: a,
                  divider: s,
                  selected: r,
                } = e,
                l = {
                  root: [
                    "root",
                    i && "dense",
                    !a && "gutters",
                    s && "divider",
                    o && "disabled",
                    "flex-start" === t && "alignItemsFlexStart",
                    r && "selected",
                  ],
                },
                c = (0, Gl.A)(l, qc, n);
              return (0, Ts.A)({}, n, c);
            })(b),
            y = (0, Yl.A)(v, n);
          return (0,
          js.jsx)(Bc.Provider, { value: m, children: (0, js.jsx)(cu, (0, Ts.A)({ ref: y, href: f.href || f.to, component: (f.href || f.to) && "div" === s ? "button" : s, focusVisibleClassName: (0, Rl.A)(x.focusVisible, d), ownerState: b, className: (0, Rl.A)(x.root, p) }, f, { classes: x, children: r })) });
        });
      function du(e) {
        return (0, Cc.Ay)("MuiTypography", e);
      }
      (0, jl.A)("MuiTypography", [
        "root",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "subtitle1",
        "subtitle2",
        "body1",
        "body2",
        "inherit",
        "button",
        "caption",
        "overline",
        "alignLeft",
        "alignRight",
        "alignCenter",
        "alignJustify",
        "noWrap",
        "gutterBottom",
        "paragraph",
      ]);
      const hu = [
          "align",
          "className",
          "component",
          "gutterBottom",
          "noWrap",
          "paragraph",
          "variant",
          "variantMapping",
        ],
        pu = (0, Ul.Ay)("span", {
          name: "MuiTypography",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              n.variant && t[n.variant],
              "inherit" !== n.align && t["align".concat((0, Rc.A)(n.align))],
              n.noWrap && t.noWrap,
              n.gutterBottom && t.gutterBottom,
              n.paragraph && t.paragraph,
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          return (0, Ts.A)(
            { margin: 0 },
            "inherit" === n.variant && { font: "inherit" },
            "inherit" !== n.variant && t.typography[n.variant],
            "inherit" !== n.align && { textAlign: n.align },
            n.noWrap && {
              overflow: "hidden",
              textOverflow: "ellipsis",
              whiteSpace: "nowrap",
            },
            n.gutterBottom && { marginBottom: "0.35em" },
            n.paragraph && { marginBottom: 16 }
          );
        }),
        fu = {
          h1: "h1",
          h2: "h2",
          h3: "h3",
          h4: "h4",
          h5: "h5",
          h6: "h6",
          subtitle1: "h6",
          subtitle2: "h6",
          body1: "p",
          body2: "p",
          inherit: "p",
        },
        gu = {
          primary: "primary.main",
          textPrimary: "text.primary",
          secondary: "secondary.main",
          textSecondary: "text.secondary",
          error: "error.main",
        },
        mu = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiTypography" }),
            i = ((e) => gu[e] || e)(n.color),
            o = (0, _l.A)((0, Ts.A)({}, n, { color: i })),
            {
              align: a = "inherit",
              className: s,
              component: r,
              gutterBottom: l = !1,
              noWrap: c = !1,
              paragraph: u = !1,
              variant: d = "body1",
              variantMapping: h = fu,
            } = o,
            p = (0, Xs.A)(o, hu),
            f = (0, Ts.A)({}, o, {
              align: a,
              color: i,
              className: s,
              component: r,
              gutterBottom: l,
              noWrap: c,
              paragraph: u,
              variant: d,
              variantMapping: h,
            }),
            g = r || (u ? "p" : h[d] || fu[d]) || "span",
            m = ((e) => {
              const {
                  align: t,
                  gutterBottom: n,
                  noWrap: i,
                  paragraph: o,
                  variant: a,
                  classes: s,
                } = e,
                r = {
                  root: [
                    "root",
                    a,
                    "inherit" !== e.align && "align".concat((0, Rc.A)(t)),
                    n && "gutterBottom",
                    i && "noWrap",
                    o && "paragraph",
                  ],
                };
              return (0, Gl.A)(r, du, s);
            })(f);
          return (0,
          js.jsx)(pu, (0, Ts.A)({ as: g, ref: t, ownerState: f, className: (0, Rl.A)(m.root, s) }, p));
        }),
        vu = mu,
        bu = (e) => {
          let t;
          return (
            (t = e < 1 ? 5.11916 * e ** 2 : 4.5 * Math.log(e + 1) + 2),
            (t / 100).toFixed(2)
          );
        };
      function xu(e) {
        return (0, Cc.Ay)("MuiPaper", e);
      }
      (0, jl.A)("MuiPaper", [
        "root",
        "rounded",
        "outlined",
        "elevation",
        "elevation0",
        "elevation1",
        "elevation2",
        "elevation3",
        "elevation4",
        "elevation5",
        "elevation6",
        "elevation7",
        "elevation8",
        "elevation9",
        "elevation10",
        "elevation11",
        "elevation12",
        "elevation13",
        "elevation14",
        "elevation15",
        "elevation16",
        "elevation17",
        "elevation18",
        "elevation19",
        "elevation20",
        "elevation21",
        "elevation22",
        "elevation23",
        "elevation24",
      ]);
      const yu = ["className", "component", "elevation", "square", "variant"],
        wu = (0, Ul.Ay)("div", {
          name: "MuiPaper",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              t[n.variant],
              !n.square && t.rounded,
              "elevation" === n.variant && t["elevation".concat(n.elevation)],
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          var i;
          return (0, Ts.A)(
            {
              backgroundColor: (t.vars || t).palette.background.paper,
              color: (t.vars || t).palette.text.primary,
              transition: t.transitions.create("box-shadow"),
            },
            !n.square && { borderRadius: t.shape.borderRadius },
            "outlined" === n.variant && {
              border: "1px solid ".concat((t.vars || t).palette.divider),
            },
            "elevation" === n.variant &&
              (0, Ts.A)(
                { boxShadow: (t.vars || t).shadows[n.elevation] },
                !t.vars &&
                  "dark" === t.palette.mode && {
                    backgroundImage: "linear-gradient("
                      .concat((0, Vl.X4)("#fff", bu(n.elevation)), ", ")
                      .concat((0, Vl.X4)("#fff", bu(n.elevation)), ")"),
                  },
                t.vars && {
                  backgroundImage:
                    null == (i = t.vars.overlays) ? void 0 : i[n.elevation],
                }
              )
          );
        }),
        Su = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiPaper" }),
            {
              className: i,
              component: o = "div",
              elevation: a = 1,
              square: s = !1,
              variant: r = "elevation",
            } = n,
            l = (0, Xs.A)(n, yu),
            c = (0, Ts.A)({}, n, {
              component: o,
              elevation: a,
              square: s,
              variant: r,
            }),
            u = ((e) => {
              const { square: t, elevation: n, variant: i, classes: o } = e,
                a = {
                  root: [
                    "root",
                    i,
                    !t && "rounded",
                    "elevation" === i && "elevation".concat(n),
                  ],
                };
              return (0, Gl.A)(a, xu, o);
            })(c);
          return (0,
          js.jsx)(wu, (0, Ts.A)({ as: o, ownerState: c, className: (0, Rl.A)(u.root, i), ref: t }, l));
        });
      function ku(e) {
        return (0, Cc.Ay)("MuiAppBar", e);
      }
      (0, jl.A)("MuiAppBar", [
        "root",
        "positionFixed",
        "positionAbsolute",
        "positionSticky",
        "positionStatic",
        "positionRelative",
        "colorDefault",
        "colorPrimary",
        "colorSecondary",
        "colorInherit",
        "colorTransparent",
        "colorError",
        "colorInfo",
        "colorSuccess",
        "colorWarning",
      ]);
      const Au = ["className", "color", "enableColorOnDark", "position"],
        Cu = (e, t) =>
          e
            ? ""
                .concat(null == e ? void 0 : e.replace(")", ""), ", ")
                .concat(t, ")")
            : t,
        Mu = (0, Ul.Ay)(Su, {
          name: "MuiAppBar",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              t["position".concat((0, Rc.A)(n.position))],
              t["color".concat((0, Rc.A)(n.color))],
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          const i =
            "light" === t.palette.mode
              ? t.palette.grey[100]
              : t.palette.grey[900];
          return (0, Ts.A)(
            {
              display: "flex",
              flexDirection: "column",
              width: "100%",
              boxSizing: "border-box",
              flexShrink: 0,
            },
            "fixed" === n.position && {
              position: "fixed",
              zIndex: (t.vars || t).zIndex.appBar,
              top: 0,
              left: "auto",
              right: 0,
              "@media print": { position: "absolute" },
            },
            "absolute" === n.position && {
              position: "absolute",
              zIndex: (t.vars || t).zIndex.appBar,
              top: 0,
              left: "auto",
              right: 0,
            },
            "sticky" === n.position && {
              position: "sticky",
              zIndex: (t.vars || t).zIndex.appBar,
              top: 0,
              left: "auto",
              right: 0,
            },
            "static" === n.position && { position: "static" },
            "relative" === n.position && { position: "relative" },
            !t.vars &&
              (0, Ts.A)(
                {},
                "default" === n.color && {
                  backgroundColor: i,
                  color: t.palette.getContrastText(i),
                },
                n.color &&
                  "default" !== n.color &&
                  "inherit" !== n.color &&
                  "transparent" !== n.color && {
                    backgroundColor: t.palette[n.color].main,
                    color: t.palette[n.color].contrastText,
                  },
                "inherit" === n.color && { color: "inherit" },
                "dark" === t.palette.mode &&
                  !n.enableColorOnDark && {
                    backgroundColor: null,
                    color: null,
                  },
                "transparent" === n.color &&
                  (0, Ts.A)(
                    { backgroundColor: "transparent", color: "inherit" },
                    "dark" === t.palette.mode && { backgroundImage: "none" }
                  )
              ),
            t.vars &&
              (0, Ts.A)(
                {},
                "default" === n.color && {
                  "--AppBar-background": n.enableColorOnDark
                    ? t.vars.palette.AppBar.defaultBg
                    : Cu(
                        t.vars.palette.AppBar.darkBg,
                        t.vars.palette.AppBar.defaultBg
                      ),
                  "--AppBar-color": n.enableColorOnDark
                    ? t.vars.palette.text.primary
                    : Cu(
                        t.vars.palette.AppBar.darkColor,
                        t.vars.palette.text.primary
                      ),
                },
                n.color &&
                  !n.color.match(/^(default|inherit|transparent)$/) && {
                    "--AppBar-background": n.enableColorOnDark
                      ? t.vars.palette[n.color].main
                      : Cu(
                          t.vars.palette.AppBar.darkBg,
                          t.vars.palette[n.color].main
                        ),
                    "--AppBar-color": n.enableColorOnDark
                      ? t.vars.palette[n.color].contrastText
                      : Cu(
                          t.vars.palette.AppBar.darkColor,
                          t.vars.palette[n.color].contrastText
                        ),
                  },
                !["inherit", "transparent"].includes(n.color) && {
                  backgroundColor: "var(--AppBar-background)",
                },
                {
                  color:
                    "inherit" === n.color ? "inherit" : "var(--AppBar-color)",
                },
                "transparent" === n.color && {
                  backgroundImage: "none",
                  backgroundColor: "transparent",
                  color: "inherit",
                }
              )
          );
        }),
        Pu = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiAppBar" }),
            {
              className: i,
              color: o = "primary",
              enableColorOnDark: a = !1,
              position: s = "fixed",
            } = n,
            r = (0, Xs.A)(n, Au),
            l = (0, Ts.A)({}, n, {
              color: o,
              position: s,
              enableColorOnDark: a,
            }),
            c = ((e) => {
              const { color: t, position: n, classes: i } = e,
                o = {
                  root: [
                    "root",
                    "color".concat((0, Rc.A)(t)),
                    "position".concat((0, Rc.A)(n)),
                  ],
                };
              return (0, Gl.A)(o, ku, i);
            })(l);
          return (0,
          js.jsx)(Mu, (0, Ts.A)({ square: !0, component: "header", ownerState: l, elevation: 4, className: (0, Rl.A)(c.root, i, "fixed" === s && "mui-fixed"), ref: t }, r));
        }),
        Eu = Pu;
      function Lu(e) {
        return (0, Cc.Ay)("MuiToolbar", e);
      }
      (0, jl.A)("MuiToolbar", ["root", "gutters", "regular", "dense"]);
      const Tu = ["className", "component", "disableGutters", "variant"],
        Ou = (0, Ul.Ay)("div", {
          name: "MuiToolbar",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.root, !n.disableGutters && t.gutters, t[n.variant]];
          },
        })(
          (e) => {
            let { theme: t, ownerState: n } = e;
            return (0, Ts.A)(
              { position: "relative", display: "flex", alignItems: "center" },
              !n.disableGutters && {
                paddingLeft: t.spacing(2),
                paddingRight: t.spacing(2),
                [t.breakpoints.up("sm")]: {
                  paddingLeft: t.spacing(3),
                  paddingRight: t.spacing(3),
                },
              },
              "dense" === n.variant && { minHeight: 48 }
            );
          },
          (e) => {
            let { theme: t, ownerState: n } = e;
            return "regular" === n.variant && t.mixins.toolbar;
          }
        ),
        Ru = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiToolbar" }),
            {
              className: i,
              component: o = "div",
              disableGutters: a = !1,
              variant: s = "regular",
            } = n,
            r = (0, Xs.A)(n, Tu),
            l = (0, Ts.A)({}, n, {
              component: o,
              disableGutters: a,
              variant: s,
            }),
            c = ((e) => {
              const { classes: t, disableGutters: n, variant: i } = e,
                o = { root: ["root", !n && "gutters", i] };
              return (0, Gl.A)(o, Lu, t);
            })(l);
          return (0,
          js.jsx)(Ou, (0, Ts.A)({ as: o, className: (0, Rl.A)(c.root, i), ref: t, ownerState: l }, r));
        });
      function Iu(e) {
        return (0, Cc.Ay)("MuiButton", e);
      }
      const Nu = (0, jl.A)("MuiButton", [
        "root",
        "text",
        "textInherit",
        "textPrimary",
        "textSecondary",
        "textSuccess",
        "textError",
        "textInfo",
        "textWarning",
        "outlined",
        "outlinedInherit",
        "outlinedPrimary",
        "outlinedSecondary",
        "outlinedSuccess",
        "outlinedError",
        "outlinedInfo",
        "outlinedWarning",
        "contained",
        "containedInherit",
        "containedPrimary",
        "containedSecondary",
        "containedSuccess",
        "containedError",
        "containedInfo",
        "containedWarning",
        "disableElevation",
        "focusVisible",
        "disabled",
        "colorInherit",
        "colorPrimary",
        "colorSecondary",
        "colorSuccess",
        "colorError",
        "colorInfo",
        "colorWarning",
        "textSizeSmall",
        "textSizeMedium",
        "textSizeLarge",
        "outlinedSizeSmall",
        "outlinedSizeMedium",
        "outlinedSizeLarge",
        "containedSizeSmall",
        "containedSizeMedium",
        "containedSizeLarge",
        "sizeMedium",
        "sizeSmall",
        "sizeLarge",
        "fullWidth",
        "startIcon",
        "endIcon",
        "icon",
        "iconSizeSmall",
        "iconSizeMedium",
        "iconSizeLarge",
      ]);
      const _u = t.createContext({});
      const Du = t.createContext(void 0),
        zu = [
          "children",
          "color",
          "component",
          "className",
          "disabled",
          "disableElevation",
          "disableFocusRipple",
          "endIcon",
          "focusVisibleClassName",
          "fullWidth",
          "size",
          "startIcon",
          "type",
          "variant",
        ],
        ju = (e) =>
          (0, Ts.A)(
            {},
            "small" === e.size && { "& > *:nth-of-type(1)": { fontSize: 18 } },
            "medium" === e.size && { "& > *:nth-of-type(1)": { fontSize: 20 } },
            "large" === e.size && { "& > *:nth-of-type(1)": { fontSize: 22 } }
          ),
        Bu = (0, Ul.Ay)(Oc, {
          shouldForwardProp: (e) => (0, ru.A)(e) || "classes" === e,
          name: "MuiButton",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              t[n.variant],
              t["".concat(n.variant).concat((0, Rc.A)(n.color))],
              t["size".concat((0, Rc.A)(n.size))],
              t["".concat(n.variant, "Size").concat((0, Rc.A)(n.size))],
              "inherit" === n.color && t.colorInherit,
              n.disableElevation && t.disableElevation,
              n.fullWidth && t.fullWidth,
            ];
          },
        })(
          (e) => {
            let { theme: t, ownerState: n } = e;
            var i, o;
            const a =
                "light" === t.palette.mode
                  ? t.palette.grey[300]
                  : t.palette.grey[800],
              s =
                "light" === t.palette.mode
                  ? t.palette.grey.A100
                  : t.palette.grey[700];
            return (0, Ts.A)(
              {},
              t.typography.button,
              {
                minWidth: 64,
                padding: "6px 16px",
                borderRadius: (t.vars || t).shape.borderRadius,
                transition: t.transitions.create(
                  ["background-color", "box-shadow", "border-color", "color"],
                  { duration: t.transitions.duration.short }
                ),
                "&:hover": (0, Ts.A)(
                  {
                    textDecoration: "none",
                    backgroundColor: t.vars
                      ? "rgba("
                          .concat(t.vars.palette.text.primaryChannel, " / ")
                          .concat(t.vars.palette.action.hoverOpacity, ")")
                      : (0, Vl.X4)(
                          t.palette.text.primary,
                          t.palette.action.hoverOpacity
                        ),
                    "@media (hover: none)": { backgroundColor: "transparent" },
                  },
                  "text" === n.variant &&
                    "inherit" !== n.color && {
                      backgroundColor: t.vars
                        ? "rgba("
                            .concat(t.vars.palette[n.color].mainChannel, " / ")
                            .concat(t.vars.palette.action.hoverOpacity, ")")
                        : (0, Vl.X4)(
                            t.palette[n.color].main,
                            t.palette.action.hoverOpacity
                          ),
                      "@media (hover: none)": {
                        backgroundColor: "transparent",
                      },
                    },
                  "outlined" === n.variant &&
                    "inherit" !== n.color && {
                      border: "1px solid ".concat(
                        (t.vars || t).palette[n.color].main
                      ),
                      backgroundColor: t.vars
                        ? "rgba("
                            .concat(t.vars.palette[n.color].mainChannel, " / ")
                            .concat(t.vars.palette.action.hoverOpacity, ")")
                        : (0, Vl.X4)(
                            t.palette[n.color].main,
                            t.palette.action.hoverOpacity
                          ),
                      "@media (hover: none)": {
                        backgroundColor: "transparent",
                      },
                    },
                  "contained" === n.variant && {
                    backgroundColor: t.vars
                      ? t.vars.palette.Button.inheritContainedHoverBg
                      : s,
                    boxShadow: (t.vars || t).shadows[4],
                    "@media (hover: none)": {
                      boxShadow: (t.vars || t).shadows[2],
                      backgroundColor: (t.vars || t).palette.grey[300],
                    },
                  },
                  "contained" === n.variant &&
                    "inherit" !== n.color && {
                      backgroundColor: (t.vars || t).palette[n.color].dark,
                      "@media (hover: none)": {
                        backgroundColor: (t.vars || t).palette[n.color].main,
                      },
                    }
                ),
                "&:active": (0, Ts.A)(
                  {},
                  "contained" === n.variant && {
                    boxShadow: (t.vars || t).shadows[8],
                  }
                ),
                ["&.".concat(Nu.focusVisible)]: (0, Ts.A)(
                  {},
                  "contained" === n.variant && {
                    boxShadow: (t.vars || t).shadows[6],
                  }
                ),
                ["&.".concat(Nu.disabled)]: (0, Ts.A)(
                  { color: (t.vars || t).palette.action.disabled },
                  "outlined" === n.variant && {
                    border: "1px solid ".concat(
                      (t.vars || t).palette.action.disabledBackground
                    ),
                  },
                  "contained" === n.variant && {
                    color: (t.vars || t).palette.action.disabled,
                    boxShadow: (t.vars || t).shadows[0],
                    backgroundColor: (t.vars || t).palette.action
                      .disabledBackground,
                  }
                ),
              },
              "text" === n.variant && { padding: "6px 8px" },
              "text" === n.variant &&
                "inherit" !== n.color && {
                  color: (t.vars || t).palette[n.color].main,
                },
              "outlined" === n.variant && {
                padding: "5px 15px",
                border: "1px solid currentColor",
              },
              "outlined" === n.variant &&
                "inherit" !== n.color && {
                  color: (t.vars || t).palette[n.color].main,
                  border: t.vars
                    ? "1px solid rgba(".concat(
                        t.vars.palette[n.color].mainChannel,
                        " / 0.5)"
                      )
                    : "1px solid ".concat(
                        (0, Vl.X4)(t.palette[n.color].main, 0.5)
                      ),
                },
              "contained" === n.variant && {
                color: t.vars
                  ? t.vars.palette.text.primary
                  : null == (i = (o = t.palette).getContrastText)
                  ? void 0
                  : i.call(o, t.palette.grey[300]),
                backgroundColor: t.vars
                  ? t.vars.palette.Button.inheritContainedBg
                  : a,
                boxShadow: (t.vars || t).shadows[2],
              },
              "contained" === n.variant &&
                "inherit" !== n.color && {
                  color: (t.vars || t).palette[n.color].contrastText,
                  backgroundColor: (t.vars || t).palette[n.color].main,
                },
              "inherit" === n.color && {
                color: "inherit",
                borderColor: "currentColor",
              },
              "small" === n.size &&
                "text" === n.variant && {
                  padding: "4px 5px",
                  fontSize: t.typography.pxToRem(13),
                },
              "large" === n.size &&
                "text" === n.variant && {
                  padding: "8px 11px",
                  fontSize: t.typography.pxToRem(15),
                },
              "small" === n.size &&
                "outlined" === n.variant && {
                  padding: "3px 9px",
                  fontSize: t.typography.pxToRem(13),
                },
              "large" === n.size &&
                "outlined" === n.variant && {
                  padding: "7px 21px",
                  fontSize: t.typography.pxToRem(15),
                },
              "small" === n.size &&
                "contained" === n.variant && {
                  padding: "4px 10px",
                  fontSize: t.typography.pxToRem(13),
                },
              "large" === n.size &&
                "contained" === n.variant && {
                  padding: "8px 22px",
                  fontSize: t.typography.pxToRem(15),
                },
              n.fullWidth && { width: "100%" }
            );
          },
          (e) => {
            let { ownerState: t } = e;
            return (
              t.disableElevation && {
                boxShadow: "none",
                "&:hover": { boxShadow: "none" },
                ["&.".concat(Nu.focusVisible)]: { boxShadow: "none" },
                "&:active": { boxShadow: "none" },
                ["&.".concat(Nu.disabled)]: { boxShadow: "none" },
              }
            );
          }
        ),
        Fu = (0, Ul.Ay)("span", {
          name: "MuiButton",
          slot: "StartIcon",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.startIcon, t["iconSize".concat((0, Rc.A)(n.size))]];
          },
        })((e) => {
          let { ownerState: t } = e;
          return (0, Ts.A)(
            { display: "inherit", marginRight: 8, marginLeft: -4 },
            "small" === t.size && { marginLeft: -2 },
            ju(t)
          );
        }),
        Wu = (0, Ul.Ay)("span", {
          name: "MuiButton",
          slot: "EndIcon",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.endIcon, t["iconSize".concat((0, Rc.A)(n.size))]];
          },
        })((e) => {
          let { ownerState: t } = e;
          return (0, Ts.A)(
            { display: "inherit", marginRight: -4, marginLeft: 8 },
            "small" === t.size && { marginRight: -2 },
            ju(t)
          );
        }),
        Hu = t.forwardRef(function (e, n) {
          const i = t.useContext(_u),
            o = t.useContext(Du),
            a = (0, Pl.A)(i, e),
            s = (0, Os.b)({ props: a, name: "MuiButton" }),
            {
              children: r,
              color: l = "primary",
              component: c = "button",
              className: u,
              disabled: d = !1,
              disableElevation: h = !1,
              disableFocusRipple: p = !1,
              endIcon: f,
              focusVisibleClassName: g,
              fullWidth: m = !1,
              size: v = "medium",
              startIcon: b,
              type: x,
              variant: y = "text",
            } = s,
            w = (0, Xs.A)(s, zu),
            S = (0, Ts.A)({}, s, {
              color: l,
              component: c,
              disabled: d,
              disableElevation: h,
              disableFocusRipple: p,
              fullWidth: m,
              size: v,
              type: x,
              variant: y,
            }),
            k = ((e) => {
              const {
                  color: t,
                  disableElevation: n,
                  fullWidth: i,
                  size: o,
                  variant: a,
                  classes: s,
                } = e,
                r = {
                  root: [
                    "root",
                    a,
                    "".concat(a).concat((0, Rc.A)(t)),
                    "size".concat((0, Rc.A)(o)),
                    "".concat(a, "Size").concat((0, Rc.A)(o)),
                    "color".concat((0, Rc.A)(t)),
                    n && "disableElevation",
                    i && "fullWidth",
                  ],
                  label: ["label"],
                  startIcon: [
                    "icon",
                    "startIcon",
                    "iconSize".concat((0, Rc.A)(o)),
                  ],
                  endIcon: ["icon", "endIcon", "iconSize".concat((0, Rc.A)(o))],
                },
                l = (0, Gl.A)(r, Iu, s);
              return (0, Ts.A)({}, s, l);
            })(S),
            A =
              b &&
              (0, js.jsx)(Fu, {
                className: k.startIcon,
                ownerState: S,
                children: b,
              }),
            C =
              f &&
              (0, js.jsx)(Wu, {
                className: k.endIcon,
                ownerState: S,
                children: f,
              }),
            M = o || "";
          return (0,
          js.jsxs)(Bu, (0, Ts.A)({ ownerState: S, className: (0, Rl.A)(i.className, k.root, u, M), component: c, disabled: d, focusRipple: !p, focusVisibleClassName: (0, Rl.A)(k.focusVisible, g), ref: n, type: x }, w, { classes: k, children: [A, r, C] }));
        }),
        Gu = Hu;
      var Vu = n(4802);
      const Uu =
        n.p + "static/media/hero_bg.73a8a3e053193b3f8d4aa6a856800c65.svg";
      const Yu =
        n.p + "static/media/dojo_logo.ceb79be2bcca44c0ebc63ccba25944d9.svg";
      const Xu = n.p + "static/media/menu.0b5fc49378f78f854ca358b532bba04a.svg";
      const Ku =
        n.p + "static/media/dojo_compute.7bc1b8ff5ed749a2ffd5331ecb1a4a4a.svg";
      const qu =
        n.p + "static/media/google_icon.ffd162eb76f95c2be0f0ec46623adf69.svg";
      const Zu = n.p + "static/media/team.7584b7aca049f1e8659b7c315da5e268.svg";
      const Qu =
        n.p + "static/media/dojo_grey.a2a05c8f6b8995b547df5ca6b415006e.svg";
      n.p;
      const $u =
        n.p + "static/media/x_icon.d6f8cf30db17792c607bc7e14f066d4b.svg";
      const Ju =
        n.p + "static/media/telegram_icon.077194089bde913b0513440b79681d9e.svg";
      const ed =
        n.p + "static/media/worker-bg.dd72421857b5657e5c8ab8089d7363c7.svg";
      const td =
        n.p + "static/media/big_card.6bd4264fdc176fc35d0af743acada074.svg";
      const nd =
        n.p + "static/media/box_shade_one.30cb93ec61925df78fcc212c11e30b90.svg";
      const id =
        n.p + "static/media/box_shade_two.04cba2433b7748a911689c2670cd398d.svg";
      const od =
        n.p + "static/media/up_arrow.494161ec9c08bec43428df761470d903.svg";
      const ad =
        n.p + "static/media/down_arrow.b13f349423eb4b26be012a72c8fababb.svg";
      const sd =
        n.p + "static/media/graph_icon.9f7a128b690960bad5d32e3dc9bbb7c0.svg";
      const rd =
        n.p +
        "static/media/scrollable_box_shades.22ce98dee447e75eae8afe2528b2b7bb.svg";
      n.p;
      const ld =
        n.p + "static/media/info_icon.6a27ba8a2774ed20e059897dae030072.svg";
      const cd =
        n.p + "static/media/home-bg.33881665110b0c9587755f729ca0e1d1.svg";
      n.p;
      n.p;
      n.p;
      n.p;
      const ud =
        n.p + "static/media/chart-bg.27dec0d36ec2493323edd5a5d1d9cf52.svg";
      const dd =
        n.p + "static/media/globe.3abbfffa3631bf8effaf15c065de5134.svg";
      const hd = n.p + "static/media/gpu.e853c992d4ef854c29f7feafe26ad991.svg";
      const pd =
        n.p +
        "static/media/clusters_spline_bg.9fb60ee3a36c1854dce6218983917e76.svg";
      const fd =
        n.p +
        "static/media/clusters_bar_bg.17c4c9b99c4bab7c6d874759870f6fef.svg";
      n.p;
      const gd = n.p + "static/media/hero_bg_movie.383d53c36221e0ff3498.mp4";
      const md =
        n.p + "static/media/circled_menu.32411f98a11c2104854e4d57eb4adb05.svg";
      const vd =
        n.p +
        "static/media/circled_right_arrow.fe6d37d5e81ad4d3678c6320e321fdef.svg";
      const bd =
        n.p +
        "static/media/dojo_grey_icon.59b0bea29fb311f4509af50fee4beee8.svg";
      const xd =
        n.p +
        "static/media/efficient_icon.9c7d2f2f519044667a9fda39e1f71282.svg";
      const yd =
        n.p + "static/media/flashlight.52da65e27e929eea1a32dde6c80e7b5c.svg";
      const wd =
        n.p +
        "static/media/foundation_section_bg.73f357d90b64110aed67488a252e18d0.svg";
      const Sd =
        n.p +
        "static/media/high_demand_icon.9e3013d8718e32e9484ba51ecd7f13b8.svg";
      const kd =
        n.p +
        "static/media/revolutionary_icon.bb759284861bef9746dac44aff3f80b4.svg";
      const Ad =
        n.p + "static/media/Icon-1.126d147597060f3d7a99258be94f4d0b.svg";
      const Cd =
        n.p + "static/media/Icon-2.09e07f0a463b98015041c7d21bffb4f7.svg";
      const Md =
        n.p + "static/media/Icon-3.cd15c66129860ef39a5d9a6a121b2c7b.svg";
      const Pd =
        n.p + "static/media/Icon-4.70ee0957e398781c079fe84121b23b99.svg";
      const Ed =
        n.p + "static/media/Icon-5.faf4202e3ff37dbba19ff2e83774b66c.svg";
      const Ld =
        n.p + "static/media/Icon-8.4d9e5974772ed387a442f5c49541287e.svg";
      const Td =
        n.p + "static/media/Icon-9.da9fcca788016814a0f3b4c69f605eba.svg";
      const Od =
        n.p + "static/media/Icon-10.28bae6a6146b1eee91fffb0f429c5304.svg";
      const Rd =
        n.p + "static/media/Icon-11.0f3a91307ad6bd20aeed793f2b0c7af5.svg";
      const Id =
        n.p + "static/media/Icon-12.7d39e79269fd04a58ba0c4b9f27a465c.svg";
      const Nd =
        n.p + "static/media/top_grid.82c3b37347d649abe08d7d5d43c38569.svg";
      const _d =
        n.p + "static/media/bottom_grid.f1bfd0df3604f5239745e5bbdcebf69f.svg";
      const Dd =
        n.p + "static/media/dpn_icon.04c187f4419cec5309b4a032f4db532c.svg";
      const zd =
        n.p +
        "static/media/dojo_gaas_icon.bf15b115587dc91515b605c5acc70fa1.svg";
      const jd =
        n.p + "static/media/d_cloud_icon.aef24655d98e3db189f974992bc6d25f.svg";
      const Bd =
        n.p + "static/media/d_comp_icon.4b1839449653a92d39ce59118b7276e8.svg";
      const Fd =
        n.p +
        "static/media/core_shade_one.a9091ad2b834a4ea1f922694ad520afd.svg";
      const Wd =
        n.p +
        "static/media/core_shade_two.0b48ed3654f0c05221ebc714d54bc058.svg";
      const Hd =
        n.p +
        "static/media/core_shade_three.8d31fc8c592c4a62d00fd072a68a69c3.svg";
      const Gd =
        n.p +
        "static/media/core_products_icon.47891290efd212477cf1e4eda8de1a6c.svg";
      const Vd =
        n.p + "static/media/cloud_icon.4e06df123b784905fc50f59465cb5f1c.svg";
      const Ud =
        n.p + "static/media/chip_icon.a680072a614aa642cfb62d12f2eb4749.svg";
      const Yd =
        n.p + "static/media/steps_shade.87af745691d0d202ae2fd963369464ad.svg";
      const Xd =
        n.p + "static/media/steps_arrow.4421b88fa033fb93a9c4434b05754e12.svg";
      const Kd = n.p + "static/media/tick.4af4fe4c9b9f0854a58a1ac07b55f7c3.svg";
      const qd =
        n.p + "static/media/big_globe.c245509382e915b11d4b75059465449e.svg";
      const Zd =
        n.p +
        "static/media/outlined_cloud.6637ba3d7a108698c55913e35ffe0c85.svg";
      const Qd =
        n.p + "static/media/atom_icon.a8f21f865594a7ef1599e46abe7c76e5.svg";
      const $d =
        n.p + "static/media/dollar_icon.3328e1ff893d8871a6c2d552d4b3b558.svg";
      const Jd =
        n.p +
        "static/media/join_now_shade.9edde22ba75169be4c600199d229d9b9.svg";
      const eh =
        n.p + "static/media/profile_icon.65e20d0488e9fb769d66e1e9bc650d07.svg";
      const th =
        n.p +
        "static/media/circled_flashlight.7351ae5669bd1102f0c4a2e0148d108b.svg";
      const nh =
        n.p + "static/media/amd_logo.fe404ec8cf4f65c01718a52d14bd710d.svg";
      const ih =
        n.p + "static/media/intel_logo.3b1e3cef7fcb726d86373d42408e5b96.svg";
      const oh =
        n.p + "static/media/google_logo.3322e355646307f969e65f49d9119883.svg";
      const ah =
        n.p + "static/media/apple_logo.5cfac2dc4fe5a7a2ae71ac4acc7a29e3.svg";
      const sh =
        n.p + "static/media/dojo_glow.9af97134964e1faff24968bc1d62eaff.svg";
      const rh =
        n.p + "static/media/cp_icon_one.4b9916d3042e863ac5d4840ba6146d8e.svg";
      const lh =
        n.p + "static/media/cp_icon_two.012d45fa43fff3668e1499d21b5abaec.svg";
      const ch =
        n.p + "static/media/cp_icon_three.8b260e29675f38391d96e870d4974275.svg";
      const uh =
        n.p + "static/media/cp_icon_four.08e4805cd54289d1f4e881800cb122b4.svg";
      const dh =
        n.p + "static/media/cp_icon_five.d54f061ee80b3c5eef5cff62c225349d.svg";
      const hh =
        n.p + "static/media/cp_icon_six.00cca0c8718768fe2ece92fd82eab676.svg";
      const ph =
        n.p + "static/media/cp_icon_seven.237a91ecfe6f2f0f9460b6c82378fbf0.svg";
      const fh =
        n.p + "static/media/cp_icon_eight.5b9f0a2977c9961d2e23d69e4a8e511c.svg";
      const gh =
        n.p + "static/media/cp_icon_nine.ba90400938652b9dd0a59e467bb74aaa.svg";
      const mh =
        n.p + "static/media/cp_icon_ten.67624f3c1c8612508ec25b7be35d26b1.svg";
      const vh =
        n.p +
        "static/media/cp_icon_eleven.b7eba1ebba80a6e640f4ee7784e340b3.svg";
      const bh =
        n.p +
        "static/media/cp_icon_twelve.283ad45b28fa26ffc62ddc91a9872f46.svg";
      const xh =
        n.p +
        "static/media/cp_icon_thirteen.da99ff9b10ad056f6f080a1cc18f3a86.svg";
      const yh =
        n.p +
        "static/media/cp_icon_fourteen.f4d90795511c8b017db78e6a29354289.svg";
      const wh =
        n.p +
        "static/media/exchange_lines.efe70491b928c43565a917d6e4cf186a.svg";
      const Sh =
          n.p + "static/media/logout.e1f198bef9f47446eed025f2043bb59c.svg",
        kh = n.p + "static/media/dojo_black_loader.e0720c007176524c5761.mp4";
      var Ah = n(3462);
      const Ch = function (e, t, n) {
        return void 0 === e || Vc(e)
          ? t
          : (0, Ts.A)({}, t, { ownerState: (0, Ts.A)({}, t.ownerState, n) });
      };
      const Mh = function (e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        if (void 0 === e) return {};
        const n = {};
        return (
          Object.keys(e)
            .filter(
              (n) =>
                n.match(/^on[A-Z]/) &&
                "function" === typeof e[n] &&
                !t.includes(n)
            )
            .forEach((t) => {
              n[t] = e[t];
            }),
          n
        );
      };
      const Ph = function (e) {
        if (void 0 === e) return {};
        const t = {};
        return (
          Object.keys(e)
            .filter((t) => !(t.match(/^on[A-Z]/) && "function" === typeof e[t]))
            .forEach((n) => {
              t[n] = e[n];
            }),
          t
        );
      };
      const Eh = function (e) {
        const {
          getSlotProps: t,
          additionalProps: n,
          externalSlotProps: i,
          externalForwardedProps: o,
          className: a,
        } = e;
        if (!t) {
          const e = (0, Rl.A)(
              null == n ? void 0 : n.className,
              a,
              null == o ? void 0 : o.className,
              null == i ? void 0 : i.className
            ),
            t = (0, Ts.A)(
              {},
              null == n ? void 0 : n.style,
              null == o ? void 0 : o.style,
              null == i ? void 0 : i.style
            ),
            s = (0, Ts.A)({}, n, o, i);
          return (
            e.length > 0 && (s.className = e),
            Object.keys(t).length > 0 && (s.style = t),
            { props: s, internalRef: void 0 }
          );
        }
        const s = Mh((0, Ts.A)({}, o, i)),
          r = Ph(i),
          l = Ph(o),
          c = t(s),
          u = (0, Rl.A)(
            null == c ? void 0 : c.className,
            null == n ? void 0 : n.className,
            a,
            null == o ? void 0 : o.className,
            null == i ? void 0 : i.className
          ),
          d = (0, Ts.A)(
            {},
            null == c ? void 0 : c.style,
            null == n ? void 0 : n.style,
            null == o ? void 0 : o.style,
            null == i ? void 0 : i.style
          ),
          h = (0, Ts.A)({}, c, n, l, r);
        return (
          u.length > 0 && (h.className = u),
          Object.keys(d).length > 0 && (h.style = d),
          { props: h, internalRef: c.ref }
        );
      };
      const Lh = function (e, t, n) {
          return "function" === typeof e ? e(t, n) : e;
        },
        Th = [
          "elementType",
          "externalSlotProps",
          "ownerState",
          "skipResolvingSlotProps",
        ];
      const Oh = function (e) {
        var t;
        const {
            elementType: n,
            externalSlotProps: i,
            ownerState: o,
            skipResolvingSlotProps: a = !1,
          } = e,
          s = (0, Xs.A)(e, Th),
          r = a ? {} : Lh(i, o),
          { props: l, internalRef: c } = Eh(
            (0, Ts.A)({}, s, { externalSlotProps: r })
          ),
          u = (0, Ah.A)(
            c,
            null == r ? void 0 : r.ref,
            null == (t = e.additionalProps) ? void 0 : t.ref
          );
        return Ch(n, (0, Ts.A)({}, l, { ref: u }), o);
      };
      var Rh = n(4461),
        Ih = n(2427),
        Nh = n(6078);
      const _h = !1;
      var Dh = "unmounted",
        zh = "exited",
        jh = "entering",
        Bh = "entered",
        Fh = "exiting",
        Wh = (function (e) {
          function n(t, n) {
            var i;
            i = e.call(this, t, n) || this;
            var o,
              a = n && !n.isMounting ? t.enter : t.appear;
            return (
              (i.appearStatus = null),
              t.in
                ? a
                  ? ((o = zh), (i.appearStatus = jh))
                  : (o = Bh)
                : (o = t.unmountOnExit || t.mountOnEnter ? Dh : zh),
              (i.state = { status: o }),
              (i.nextCallback = null),
              i
            );
          }
          Ql(n, e),
            (n.getDerivedStateFromProps = function (e, t) {
              return e.in && t.status === Dh ? { status: zh } : null;
            });
          var i = n.prototype;
          return (
            (i.componentDidMount = function () {
              this.updateStatus(!0, this.appearStatus);
            }),
            (i.componentDidUpdate = function (e) {
              var t = null;
              if (e !== this.props) {
                var n = this.state.status;
                this.props.in
                  ? n !== jh && n !== Bh && (t = jh)
                  : (n !== jh && n !== Bh) || (t = Fh);
              }
              this.updateStatus(!1, t);
            }),
            (i.componentWillUnmount = function () {
              this.cancelNextCallback();
            }),
            (i.getTimeouts = function () {
              var e,
                t,
                n,
                i = this.props.timeout;
              return (
                (e = t = n = i),
                null != i &&
                  "number" !== typeof i &&
                  ((e = i.exit),
                  (t = i.enter),
                  (n = void 0 !== i.appear ? i.appear : t)),
                { exit: e, enter: t, appear: n }
              );
            }),
            (i.updateStatus = function (e, t) {
              if ((void 0 === e && (e = !1), null !== t))
                if ((this.cancelNextCallback(), t === jh)) {
                  if (this.props.unmountOnExit || this.props.mountOnEnter) {
                    var n = this.props.nodeRef
                      ? this.props.nodeRef.current
                      : yl.findDOMNode(this);
                    n &&
                      (function (e) {
                        e.scrollTop;
                      })(n);
                  }
                  this.performEnter(e);
                } else this.performExit();
              else
                this.props.unmountOnExit &&
                  this.state.status === zh &&
                  this.setState({ status: Dh });
            }),
            (i.performEnter = function (e) {
              var t = this,
                n = this.props.enter,
                i = this.context ? this.context.isMounting : e,
                o = this.props.nodeRef ? [i] : [yl.findDOMNode(this), i],
                a = o[0],
                s = o[1],
                r = this.getTimeouts(),
                l = i ? r.appear : r.enter;
              (!e && !n) || _h
                ? this.safeSetState({ status: Bh }, function () {
                    t.props.onEntered(a);
                  })
                : (this.props.onEnter(a, s),
                  this.safeSetState({ status: jh }, function () {
                    t.props.onEntering(a, s),
                      t.onTransitionEnd(l, function () {
                        t.safeSetState({ status: Bh }, function () {
                          t.props.onEntered(a, s);
                        });
                      });
                  }));
            }),
            (i.performExit = function () {
              var e = this,
                t = this.props.exit,
                n = this.getTimeouts(),
                i = this.props.nodeRef ? void 0 : yl.findDOMNode(this);
              t && !_h
                ? (this.props.onExit(i),
                  this.safeSetState({ status: Fh }, function () {
                    e.props.onExiting(i),
                      e.onTransitionEnd(n.exit, function () {
                        e.safeSetState({ status: zh }, function () {
                          e.props.onExited(i);
                        });
                      });
                  }))
                : this.safeSetState({ status: zh }, function () {
                    e.props.onExited(i);
                  });
            }),
            (i.cancelNextCallback = function () {
              null !== this.nextCallback &&
                (this.nextCallback.cancel(), (this.nextCallback = null));
            }),
            (i.safeSetState = function (e, t) {
              (t = this.setNextCallback(t)), this.setState(e, t);
            }),
            (i.setNextCallback = function (e) {
              var t = this,
                n = !0;
              return (
                (this.nextCallback = function (i) {
                  n && ((n = !1), (t.nextCallback = null), e(i));
                }),
                (this.nextCallback.cancel = function () {
                  n = !1;
                }),
                this.nextCallback
              );
            }),
            (i.onTransitionEnd = function (e, t) {
              this.setNextCallback(t);
              var n = this.props.nodeRef
                  ? this.props.nodeRef.current
                  : yl.findDOMNode(this),
                i = null == e && !this.props.addEndListener;
              if (n && !i) {
                if (this.props.addEndListener) {
                  var o = this.props.nodeRef
                      ? [this.nextCallback]
                      : [n, this.nextCallback],
                    a = o[0],
                    s = o[1];
                  this.props.addEndListener(a, s);
                }
                null != e && setTimeout(this.nextCallback, e);
              } else setTimeout(this.nextCallback, 0);
            }),
            (i.render = function () {
              var e = this.state.status;
              if (e === Dh) return null;
              var n = this.props,
                i = n.children,
                o =
                  (n.in,
                  n.mountOnEnter,
                  n.unmountOnExit,
                  n.appear,
                  n.enter,
                  n.exit,
                  n.timeout,
                  n.addEndListener,
                  n.onEnter,
                  n.onEntering,
                  n.onEntered,
                  n.onExit,
                  n.onExiting,
                  n.onExited,
                  n.nodeRef,
                  (0, Xs.A)(n, [
                    "children",
                    "in",
                    "mountOnEnter",
                    "unmountOnExit",
                    "appear",
                    "enter",
                    "exit",
                    "timeout",
                    "addEndListener",
                    "onEnter",
                    "onEntering",
                    "onEntered",
                    "onExit",
                    "onExiting",
                    "onExited",
                    "nodeRef",
                  ]));
              return t.createElement(
                $l.Provider,
                { value: null },
                "function" === typeof i
                  ? i(e, o)
                  : t.cloneElement(t.Children.only(i), o)
              );
            }),
            n
          );
        })(t.Component);
      function Hh() {}
      (Wh.contextType = $l),
        (Wh.propTypes = {}),
        (Wh.defaultProps = {
          in: !1,
          mountOnEnter: !1,
          unmountOnExit: !1,
          appear: !1,
          enter: !0,
          exit: !0,
          onEnter: Hh,
          onEntering: Hh,
          onEntered: Hh,
          onExit: Hh,
          onExiting: Hh,
          onExited: Hh,
        }),
        (Wh.UNMOUNTED = Dh),
        (Wh.EXITED = zh),
        (Wh.ENTERING = jh),
        (Wh.ENTERED = Bh),
        (Wh.EXITING = Fh);
      const Gh = Wh;
      function Vh() {
        const e = zs(Fs.A);
        return e[Ws.A] || e;
      }
      const Uh = (e) => e.scrollTop;
      function Yh(e, t) {
        var n, i;
        const { timeout: o, easing: a, style: s = {} } = e;
        return {
          duration:
            null != (n = s.transitionDuration)
              ? n
              : "number" === typeof o
              ? o
              : o[t.mode] || 0,
          easing:
            null != (i = s.transitionTimingFunction)
              ? i
              : "object" === typeof a
              ? a[t.mode]
              : a,
          delay: s.transitionDelay,
        };
      }
      const Xh = [
        "addEndListener",
        "appear",
        "children",
        "easing",
        "in",
        "onEnter",
        "onEntered",
        "onEntering",
        "onExit",
        "onExited",
        "onExiting",
        "style",
        "timeout",
        "TransitionComponent",
      ];
      function Kh(e) {
        return "scale(".concat(e, ", ").concat(e ** 2, ")");
      }
      const qh = {
          entering: { opacity: 1, transform: Kh(1) },
          entered: { opacity: 1, transform: "none" },
        },
        Zh =
          "undefined" !== typeof navigator &&
          /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) &&
          /(os |version\/)15(.|_)4/i.test(navigator.userAgent),
        Qh = t.forwardRef(function (e, n) {
          const {
              addEndListener: i,
              appear: o = !0,
              children: a,
              easing: s,
              in: r,
              onEnter: l,
              onEntered: c,
              onEntering: u,
              onExit: d,
              onExited: h,
              onExiting: p,
              style: f,
              timeout: g = "auto",
              TransitionComponent: m = Gh,
            } = e,
            v = (0, Xs.A)(e, Xh),
            b = (0, sc.A)(),
            x = t.useRef(),
            y = Vh(),
            w = t.useRef(null),
            S = (0, Yl.A)(w, a.ref, n),
            k = (e) => (t) => {
              if (e) {
                const n = w.current;
                void 0 === t ? e(n) : e(n, t);
              }
            },
            A = k(u),
            C = k((e, t) => {
              Uh(e);
              const {
                duration: n,
                delay: i,
                easing: o,
              } = Yh({ style: f, timeout: g, easing: s }, { mode: "enter" });
              let a;
              "auto" === g
                ? ((a = y.transitions.getAutoHeightDuration(e.clientHeight)),
                  (x.current = a))
                : (a = n),
                (e.style.transition = [
                  y.transitions.create("opacity", { duration: a, delay: i }),
                  y.transitions.create("transform", {
                    duration: Zh ? a : 0.666 * a,
                    delay: i,
                    easing: o,
                  }),
                ].join(",")),
                l && l(e, t);
            }),
            M = k(c),
            P = k(p),
            E = k((e) => {
              const {
                duration: t,
                delay: n,
                easing: i,
              } = Yh({ style: f, timeout: g, easing: s }, { mode: "exit" });
              let o;
              "auto" === g
                ? ((o = y.transitions.getAutoHeightDuration(e.clientHeight)),
                  (x.current = o))
                : (o = t),
                (e.style.transition = [
                  y.transitions.create("opacity", { duration: o, delay: n }),
                  y.transitions.create("transform", {
                    duration: Zh ? o : 0.666 * o,
                    delay: Zh ? n : n || 0.333 * o,
                    easing: i,
                  }),
                ].join(",")),
                (e.style.opacity = 0),
                (e.style.transform = Kh(0.75)),
                d && d(e);
            }),
            L = k(h);
          return (0, js.jsx)(
            m,
            (0, Ts.A)(
              {
                appear: o,
                in: r,
                nodeRef: w,
                onEnter: C,
                onEntered: M,
                onEntering: A,
                onExit: E,
                onExited: L,
                onExiting: P,
                addEndListener: (e) => {
                  "auto" === g && b.start(x.current || 0, e),
                    i && i(w.current, e);
                },
                timeout: "auto" === g ? null : g,
              },
              v,
              {
                children: (e, n) =>
                  t.cloneElement(
                    a,
                    (0, Ts.A)(
                      {
                        style: (0, Ts.A)(
                          {
                            opacity: 0,
                            transform: Kh(0.75),
                            visibility: "exited" !== e || r ? void 0 : "hidden",
                          },
                          qh[e],
                          f,
                          a.props.style
                        ),
                        ref: S,
                      },
                      n
                    )
                  ),
              }
            )
          );
        });
      Qh.muiSupportAuto = !0;
      const $h = Qh;
      var Jh = n(1668);
      const ep = [
        "input",
        "select",
        "textarea",
        "a[href]",
        "button",
        "[tabindex]",
        "audio[controls]",
        "video[controls]",
        '[contenteditable]:not([contenteditable="false"])',
      ].join(",");
      function tp(e) {
        const t = [],
          n = [];
        return (
          Array.from(e.querySelectorAll(ep)).forEach((e, i) => {
            const o = (function (e) {
              const t = parseInt(e.getAttribute("tabindex") || "", 10);
              return Number.isNaN(t)
                ? "true" === e.contentEditable ||
                  (("AUDIO" === e.nodeName ||
                    "VIDEO" === e.nodeName ||
                    "DETAILS" === e.nodeName) &&
                    null === e.getAttribute("tabindex"))
                  ? 0
                  : e.tabIndex
                : t;
            })(e);
            -1 !== o &&
              (function (e) {
                return !(
                  e.disabled ||
                  ("INPUT" === e.tagName && "hidden" === e.type) ||
                  (function (e) {
                    if ("INPUT" !== e.tagName || "radio" !== e.type) return !1;
                    if (!e.name) return !1;
                    const t = (t) =>
                      e.ownerDocument.querySelector(
                        'input[type="radio"]'.concat(t)
                      );
                    let n = t('[name="'.concat(e.name, '"]:checked'));
                    return (
                      n || (n = t('[name="'.concat(e.name, '"]'))), n !== e
                    );
                  })(e)
                );
              })(e) &&
              (0 === o
                ? t.push(e)
                : n.push({ documentOrder: i, tabIndex: o, node: e }));
          }),
          n
            .sort((e, t) =>
              e.tabIndex === t.tabIndex
                ? e.documentOrder - t.documentOrder
                : e.tabIndex - t.tabIndex
            )
            .map((e) => e.node)
            .concat(t)
        );
      }
      function np() {
        return !0;
      }
      const ip = function (e) {
        const {
            children: n,
            disableAutoFocus: i = !1,
            disableEnforceFocus: o = !1,
            disableRestoreFocus: a = !1,
            getTabbable: s = tp,
            isEnabled: r = np,
            open: l,
          } = e,
          c = t.useRef(!1),
          u = t.useRef(null),
          d = t.useRef(null),
          h = t.useRef(null),
          p = t.useRef(null),
          f = t.useRef(!1),
          g = t.useRef(null),
          m = (0, Ah.A)(n.ref, g),
          v = t.useRef(null);
        t.useEffect(() => {
          l && g.current && (f.current = !i);
        }, [i, l]),
          t.useEffect(() => {
            if (!l || !g.current) return;
            const e = (0, Jh.A)(g.current);
            return (
              g.current.contains(e.activeElement) ||
                (g.current.hasAttribute("tabIndex") ||
                  g.current.setAttribute("tabIndex", "-1"),
                f.current && g.current.focus()),
              () => {
                a ||
                  (h.current &&
                    h.current.focus &&
                    ((c.current = !0), h.current.focus()),
                  (h.current = null));
              }
            );
          }, [l]),
          t.useEffect(() => {
            if (!l || !g.current) return;
            const e = (0, Jh.A)(g.current),
              t = (t) => {
                (v.current = t),
                  !o &&
                    r() &&
                    "Tab" === t.key &&
                    e.activeElement === g.current &&
                    t.shiftKey &&
                    ((c.current = !0), d.current && d.current.focus());
              },
              n = () => {
                const t = g.current;
                if (null === t) return;
                if (!e.hasFocus() || !r() || c.current)
                  return void (c.current = !1);
                if (t.contains(e.activeElement)) return;
                if (
                  o &&
                  e.activeElement !== u.current &&
                  e.activeElement !== d.current
                )
                  return;
                if (e.activeElement !== p.current) p.current = null;
                else if (null !== p.current) return;
                if (!f.current) return;
                let n = [];
                if (
                  ((e.activeElement !== u.current &&
                    e.activeElement !== d.current) ||
                    (n = s(g.current)),
                  n.length > 0)
                ) {
                  var i, a;
                  const e = Boolean(
                      (null == (i = v.current) ? void 0 : i.shiftKey) &&
                        "Tab" === (null == (a = v.current) ? void 0 : a.key)
                    ),
                    t = n[0],
                    o = n[n.length - 1];
                  "string" !== typeof t &&
                    "string" !== typeof o &&
                    (e ? o.focus() : t.focus());
                } else t.focus();
              };
            e.addEventListener("focusin", n),
              e.addEventListener("keydown", t, !0);
            const i = setInterval(() => {
              e.activeElement && "BODY" === e.activeElement.tagName && n();
            }, 50);
            return () => {
              clearInterval(i),
                e.removeEventListener("focusin", n),
                e.removeEventListener("keydown", t, !0);
            };
          }, [i, o, a, r, l, s]);
        const b = (e) => {
          null === h.current && (h.current = e.relatedTarget), (f.current = !0);
        };
        return (0, js.jsxs)(t.Fragment, {
          children: [
            (0, js.jsx)("div", {
              tabIndex: l ? 0 : -1,
              onFocus: b,
              ref: u,
              "data-testid": "sentinelStart",
            }),
            t.cloneElement(n, {
              ref: m,
              onFocus: (e) => {
                null === h.current && (h.current = e.relatedTarget),
                  (f.current = !0),
                  (p.current = e.target);
                const t = n.props.onFocus;
                t && t(e);
              },
            }),
            (0, js.jsx)("div", {
              tabIndex: l ? 0 : -1,
              onFocus: b,
              ref: d,
              "data-testid": "sentinelEnd",
            }),
          ],
        });
      };
      var op = n(6564);
      const ap = t.forwardRef(function (e, n) {
          const { children: i, container: o, disablePortal: a = !1 } = e,
            [s, r] = t.useState(null),
            l = (0, Ah.A)(t.isValidElement(i) ? i.ref : null, n);
          if (
            ((0, Ml.A)(() => {
              a ||
                r(
                  (function (e) {
                    return "function" === typeof e ? e() : e;
                  })(o) || document.body
                );
            }, [o, a]),
            (0, Ml.A)(() => {
              if (s && !a)
                return (
                  (0, op.A)(n, s),
                  () => {
                    (0, op.A)(n, null);
                  }
                );
            }, [n, s, a]),
            a)
          ) {
            if (t.isValidElement(i)) {
              const e = { ref: l };
              return t.cloneElement(i, e);
            }
            return (0, js.jsx)(t.Fragment, { children: i });
          }
          return (0,
          js.jsx)(t.Fragment, { children: s ? yl.createPortal(i, s) : s });
        }),
        sp = [
          "addEndListener",
          "appear",
          "children",
          "easing",
          "in",
          "onEnter",
          "onEntered",
          "onEntering",
          "onExit",
          "onExited",
          "onExiting",
          "style",
          "timeout",
          "TransitionComponent",
        ],
        rp = { entering: { opacity: 1 }, entered: { opacity: 1 } },
        lp = t.forwardRef(function (e, n) {
          const i = Vh(),
            o = {
              enter: i.transitions.duration.enteringScreen,
              exit: i.transitions.duration.leavingScreen,
            },
            {
              addEndListener: a,
              appear: s = !0,
              children: r,
              easing: l,
              in: c,
              onEnter: u,
              onEntered: d,
              onEntering: h,
              onExit: p,
              onExited: f,
              onExiting: g,
              style: m,
              timeout: v = o,
              TransitionComponent: b = Gh,
            } = e,
            x = (0, Xs.A)(e, sp),
            y = t.useRef(null),
            w = (0, Yl.A)(y, r.ref, n),
            S = (e) => (t) => {
              if (e) {
                const n = y.current;
                void 0 === t ? e(n) : e(n, t);
              }
            },
            k = S(h),
            A = S((e, t) => {
              Uh(e);
              const n = Yh(
                { style: m, timeout: v, easing: l },
                { mode: "enter" }
              );
              (e.style.webkitTransition = i.transitions.create("opacity", n)),
                (e.style.transition = i.transitions.create("opacity", n)),
                u && u(e, t);
            }),
            C = S(d),
            M = S(g),
            P = S((e) => {
              const t = Yh(
                { style: m, timeout: v, easing: l },
                { mode: "exit" }
              );
              (e.style.webkitTransition = i.transitions.create("opacity", t)),
                (e.style.transition = i.transitions.create("opacity", t)),
                p && p(e);
            }),
            E = S(f);
          return (0, js.jsx)(
            b,
            (0, Ts.A)(
              {
                appear: s,
                in: c,
                nodeRef: y,
                onEnter: A,
                onEntered: C,
                onEntering: k,
                onExit: P,
                onExited: E,
                onExiting: M,
                addEndListener: (e) => {
                  a && a(y.current, e);
                },
                timeout: v,
              },
              x,
              {
                children: (e, n) =>
                  t.cloneElement(
                    r,
                    (0, Ts.A)(
                      {
                        style: (0, Ts.A)(
                          {
                            opacity: 0,
                            visibility: "exited" !== e || c ? void 0 : "hidden",
                          },
                          rp[e],
                          m,
                          r.props.style
                        ),
                        ref: w,
                      },
                      n
                    )
                  ),
              }
            )
          );
        }),
        cp = lp;
      function up(e) {
        return (0, Cc.Ay)("MuiBackdrop", e);
      }
      (0, jl.A)("MuiBackdrop", ["root", "invisible"]);
      const dp = [
          "children",
          "className",
          "component",
          "components",
          "componentsProps",
          "invisible",
          "open",
          "slotProps",
          "slots",
          "TransitionComponent",
          "transitionDuration",
        ],
        hp = (0, Ul.Ay)("div", {
          name: "MuiBackdrop",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.root, n.invisible && t.invisible];
          },
        })((e) => {
          let { ownerState: t } = e;
          return (0, Ts.A)(
            {
              position: "fixed",
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              right: 0,
              bottom: 0,
              top: 0,
              left: 0,
              backgroundColor: "rgba(0, 0, 0, 0.5)",
              WebkitTapHighlightColor: "transparent",
            },
            t.invisible && { backgroundColor: "transparent" }
          );
        }),
        pp = t.forwardRef(function (e, t) {
          var n, i, o;
          const a = (0, Os.b)({ props: e, name: "MuiBackdrop" }),
            {
              children: s,
              className: r,
              component: l = "div",
              components: c = {},
              componentsProps: u = {},
              invisible: d = !1,
              open: h,
              slotProps: p = {},
              slots: f = {},
              TransitionComponent: g = cp,
              transitionDuration: m,
            } = a,
            v = (0, Xs.A)(a, dp),
            b = (0, Ts.A)({}, a, { component: l, invisible: d }),
            x = ((e) => {
              const { classes: t, invisible: n } = e,
                i = { root: ["root", n && "invisible"] };
              return (0, Gl.A)(i, up, t);
            })(b),
            y = null != (n = p.root) ? n : u.root;
          return (0,
          js.jsx)(g, (0, Ts.A)({ in: h, timeout: m }, v, { children: (0, js.jsx)(hp, (0, Ts.A)({ "aria-hidden": !0 }, y, { as: null != (i = null != (o = f.root) ? o : c.Root) ? i : l, className: (0, Rl.A)(x.root, r, null == y ? void 0 : y.className), ownerState: (0, Ts.A)({}, b, null == y ? void 0 : y.ownerState), classes: x, ref: t, children: s })) }));
        });
      var fp = n(1782),
        gp = n(2456),
        mp = n(3940);
      function vp(e, t) {
        t
          ? e.setAttribute("aria-hidden", "true")
          : e.removeAttribute("aria-hidden");
      }
      function bp(e) {
        return parseInt((0, mp.A)(e).getComputedStyle(e).paddingRight, 10) || 0;
      }
      function xp(e, t, n, i, o) {
        const a = [t, n, ...i];
        [].forEach.call(e.children, (e) => {
          const t = -1 === a.indexOf(e),
            n = !(function (e) {
              const t =
                  -1 !==
                  [
                    "TEMPLATE",
                    "SCRIPT",
                    "STYLE",
                    "LINK",
                    "MAP",
                    "META",
                    "NOSCRIPT",
                    "PICTURE",
                    "COL",
                    "COLGROUP",
                    "PARAM",
                    "SLOT",
                    "SOURCE",
                    "TRACK",
                  ].indexOf(e.tagName),
                n =
                  "INPUT" === e.tagName && "hidden" === e.getAttribute("type");
              return t || n;
            })(e);
          t && n && vp(e, o);
        });
      }
      function yp(e, t) {
        let n = -1;
        return e.some((e, i) => !!t(e) && ((n = i), !0)), n;
      }
      function wp(e, t) {
        const n = [],
          i = e.container;
        if (!t.disableScrollLock) {
          if (
            (function (e) {
              const t = (0, Jh.A)(e);
              return t.body === e
                ? (0, mp.A)(e).innerWidth > t.documentElement.clientWidth
                : e.scrollHeight > e.clientHeight;
            })(i)
          ) {
            const e = (function (e) {
              const t = e.documentElement.clientWidth;
              return Math.abs(window.innerWidth - t);
            })((0, Jh.A)(i));
            n.push({
              value: i.style.paddingRight,
              property: "padding-right",
              el: i,
            }),
              (i.style.paddingRight = "".concat(bp(i) + e, "px"));
            const t = (0, Jh.A)(i).querySelectorAll(".mui-fixed");
            [].forEach.call(t, (t) => {
              n.push({
                value: t.style.paddingRight,
                property: "padding-right",
                el: t,
              }),
                (t.style.paddingRight = "".concat(bp(t) + e, "px"));
            });
          }
          let e;
          if (i.parentNode instanceof DocumentFragment) e = (0, Jh.A)(i).body;
          else {
            const t = i.parentElement,
              n = (0, mp.A)(i);
            e =
              "HTML" === (null == t ? void 0 : t.nodeName) &&
              "scroll" === n.getComputedStyle(t).overflowY
                ? t
                : i;
          }
          n.push(
            { value: e.style.overflow, property: "overflow", el: e },
            { value: e.style.overflowX, property: "overflow-x", el: e },
            { value: e.style.overflowY, property: "overflow-y", el: e }
          ),
            (e.style.overflow = "hidden");
        }
        return () => {
          n.forEach((e) => {
            let { value: t, el: n, property: i } = e;
            t ? n.style.setProperty(i, t) : n.style.removeProperty(i);
          });
        };
      }
      const Sp = new (class {
        constructor() {
          (this.containers = void 0),
            (this.modals = void 0),
            (this.modals = []),
            (this.containers = []);
        }
        add(e, t) {
          let n = this.modals.indexOf(e);
          if (-1 !== n) return n;
          (n = this.modals.length),
            this.modals.push(e),
            e.modalRef && vp(e.modalRef, !1);
          const i = (function (e) {
            const t = [];
            return (
              [].forEach.call(e.children, (e) => {
                "true" === e.getAttribute("aria-hidden") && t.push(e);
              }),
              t
            );
          })(t);
          xp(t, e.mount, e.modalRef, i, !0);
          const o = yp(this.containers, (e) => e.container === t);
          return -1 !== o
            ? (this.containers[o].modals.push(e), n)
            : (this.containers.push({
                modals: [e],
                container: t,
                restore: null,
                hiddenSiblings: i,
              }),
              n);
        }
        mount(e, t) {
          const n = yp(this.containers, (t) => -1 !== t.modals.indexOf(e)),
            i = this.containers[n];
          i.restore || (i.restore = wp(i, t));
        }
        remove(e) {
          let t =
            !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          const n = this.modals.indexOf(e);
          if (-1 === n) return n;
          const i = yp(this.containers, (t) => -1 !== t.modals.indexOf(e)),
            o = this.containers[i];
          if (
            (o.modals.splice(o.modals.indexOf(e), 1),
            this.modals.splice(n, 1),
            0 === o.modals.length)
          )
            o.restore && o.restore(),
              e.modalRef && vp(e.modalRef, t),
              xp(o.container, e.mount, e.modalRef, o.hiddenSiblings, !1),
              this.containers.splice(i, 1);
          else {
            const e = o.modals[o.modals.length - 1];
            e.modalRef && vp(e.modalRef, !1);
          }
          return n;
        }
        isTopModal(e) {
          return (
            this.modals.length > 0 && this.modals[this.modals.length - 1] === e
          );
        }
      })();
      const kp = function (e) {
        const {
            container: n,
            disableEscapeKeyDown: i = !1,
            disableScrollLock: o = !1,
            manager: a = Sp,
            closeAfterTransition: s = !1,
            onTransitionEnter: r,
            onTransitionExited: l,
            children: c,
            onClose: u,
            open: d,
            rootRef: h,
          } = e,
          p = t.useRef({}),
          f = t.useRef(null),
          g = t.useRef(null),
          m = (0, Ah.A)(g, h),
          [v, b] = t.useState(!d),
          x = (function (e) {
            return !!e && e.props.hasOwnProperty("in");
          })(c);
        let y = !0;
        ("false" !== e["aria-hidden"] && !1 !== e["aria-hidden"]) || (y = !1);
        const w = () => (
            (p.current.modalRef = g.current),
            (p.current.mount = f.current),
            p.current
          ),
          S = () => {
            a.mount(w(), { disableScrollLock: o }),
              g.current && (g.current.scrollTop = 0);
          },
          k = (0, fp.A)(() => {
            const e =
              (function (e) {
                return "function" === typeof e ? e() : e;
              })(n) || (0, Jh.A)(f.current).body;
            a.add(w(), e), g.current && S();
          }),
          A = t.useCallback(() => a.isTopModal(w()), [a]),
          C = (0, fp.A)((e) => {
            (f.current = e),
              e && (d && A() ? S() : g.current && vp(g.current, y));
          }),
          M = t.useCallback(() => {
            a.remove(w(), y);
          }, [y, a]);
        t.useEffect(
          () => () => {
            M();
          },
          [M]
        ),
          t.useEffect(() => {
            d ? k() : (x && s) || M();
          }, [d, M, x, s, k]);
        const P = (e) => (t) => {
            var n;
            null == (n = e.onKeyDown) || n.call(e, t),
              "Escape" === t.key &&
                229 !== t.which &&
                A() &&
                (i || (t.stopPropagation(), u && u(t, "escapeKeyDown")));
          },
          E = (e) => (t) => {
            var n;
            null == (n = e.onClick) || n.call(e, t),
              t.target === t.currentTarget && u && u(t, "backdropClick");
          };
        return {
          getRootProps: function () {
            let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            const n = Mh(e);
            delete n.onTransitionEnter, delete n.onTransitionExited;
            const i = (0, Ts.A)({}, n, t);
            return (0, Ts.A)({ role: "presentation" }, i, {
              onKeyDown: P(i),
              ref: m,
            });
          },
          getBackdropProps: function () {
            const e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            return (0, Ts.A)({ "aria-hidden": !0 }, e, {
              onClick: E(e),
              open: d,
            });
          },
          getTransitionProps: () => ({
            onEnter: (0, gp.A)(
              () => {
                b(!1), r && r();
              },
              null == c ? void 0 : c.props.onEnter
            ),
            onExited: (0, gp.A)(
              () => {
                b(!0), l && l(), s && M();
              },
              null == c ? void 0 : c.props.onExited
            ),
          }),
          rootRef: m,
          portalRef: C,
          isTopModal: A,
          exited: v,
          hasTransition: x,
        };
      };
      function Ap(e) {
        return (0, Cc.Ay)("MuiModal", e);
      }
      (0, jl.A)("MuiModal", ["root", "hidden", "backdrop"]);
      const Cp = [
          "BackdropComponent",
          "BackdropProps",
          "classes",
          "className",
          "closeAfterTransition",
          "children",
          "container",
          "component",
          "components",
          "componentsProps",
          "disableAutoFocus",
          "disableEnforceFocus",
          "disableEscapeKeyDown",
          "disablePortal",
          "disableRestoreFocus",
          "disableScrollLock",
          "hideBackdrop",
          "keepMounted",
          "onBackdropClick",
          "onClose",
          "onTransitionEnter",
          "onTransitionExited",
          "open",
          "slotProps",
          "slots",
          "theme",
        ],
        Mp = (0, Ul.Ay)("div", {
          name: "MuiModal",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.root, !n.open && n.exited && t.hidden];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          return (0, Ts.A)(
            {
              position: "fixed",
              zIndex: (t.vars || t).zIndex.modal,
              right: 0,
              bottom: 0,
              top: 0,
              left: 0,
            },
            !n.open && n.exited && { visibility: "hidden" }
          );
        }),
        Pp = (0, Ul.Ay)(pp, {
          name: "MuiModal",
          slot: "Backdrop",
          overridesResolver: (e, t) => t.backdrop,
        })({ zIndex: -1 }),
        Ep = t.forwardRef(function (e, n) {
          var i, o, a, s, r, l;
          const c = (0, Os.b)({ name: "MuiModal", props: e }),
            {
              BackdropComponent: u = Pp,
              BackdropProps: d,
              className: h,
              closeAfterTransition: p = !1,
              children: f,
              container: g,
              component: m,
              components: v = {},
              componentsProps: b = {},
              disableAutoFocus: x = !1,
              disableEnforceFocus: y = !1,
              disableEscapeKeyDown: w = !1,
              disablePortal: S = !1,
              disableRestoreFocus: k = !1,
              disableScrollLock: A = !1,
              hideBackdrop: C = !1,
              keepMounted: M = !1,
              onBackdropClick: P,
              open: E,
              slotProps: L,
              slots: T,
            } = c,
            O = (0, Xs.A)(c, Cp),
            R = (0, Ts.A)({}, c, {
              closeAfterTransition: p,
              disableAutoFocus: x,
              disableEnforceFocus: y,
              disableEscapeKeyDown: w,
              disablePortal: S,
              disableRestoreFocus: k,
              disableScrollLock: A,
              hideBackdrop: C,
              keepMounted: M,
            }),
            {
              getRootProps: I,
              getBackdropProps: N,
              getTransitionProps: _,
              portalRef: D,
              isTopModal: z,
              exited: j,
              hasTransition: B,
            } = kp((0, Ts.A)({}, R, { rootRef: n })),
            F = (0, Ts.A)({}, R, { exited: j }),
            W = ((e) => {
              const { open: t, exited: n, classes: i } = e,
                o = {
                  root: ["root", !t && n && "hidden"],
                  backdrop: ["backdrop"],
                };
              return (0, Gl.A)(o, Ap, i);
            })(F),
            H = {};
          if ((void 0 === f.props.tabIndex && (H.tabIndex = "-1"), B)) {
            const { onEnter: e, onExited: t } = _();
            (H.onEnter = e), (H.onExited = t);
          }
          const G =
              null !=
              (i = null != (o = null == T ? void 0 : T.root) ? o : v.Root)
                ? i
                : Mp,
            V =
              null !=
              (a =
                null != (s = null == T ? void 0 : T.backdrop) ? s : v.Backdrop)
                ? a
                : u,
            U = null != (r = null == L ? void 0 : L.root) ? r : b.root,
            Y = null != (l = null == L ? void 0 : L.backdrop) ? l : b.backdrop,
            X = Oh({
              elementType: G,
              externalSlotProps: U,
              externalForwardedProps: O,
              getSlotProps: I,
              additionalProps: { ref: n, as: m },
              ownerState: F,
              className: (0, Rl.A)(
                h,
                null == U ? void 0 : U.className,
                null == W ? void 0 : W.root,
                !F.open && F.exited && (null == W ? void 0 : W.hidden)
              ),
            }),
            K = Oh({
              elementType: V,
              externalSlotProps: Y,
              additionalProps: d,
              getSlotProps: (e) =>
                N(
                  (0, Ts.A)({}, e, {
                    onClick: (t) => {
                      P && P(t), null != e && e.onClick && e.onClick(t);
                    },
                  })
                ),
              className: (0, Rl.A)(
                null == Y ? void 0 : Y.className,
                null == d ? void 0 : d.className,
                null == W ? void 0 : W.backdrop
              ),
              ownerState: F,
            });
          return M || E || (B && !j)
            ? (0, js.jsx)(ap, {
                ref: D,
                container: g,
                disablePortal: S,
                children: (0, js.jsxs)(
                  G,
                  (0, Ts.A)({}, X, {
                    children: [
                      !C && u ? (0, js.jsx)(V, (0, Ts.A)({}, K)) : null,
                      (0, js.jsx)(ip, {
                        disableEnforceFocus: y,
                        disableAutoFocus: x,
                        disableRestoreFocus: k,
                        isEnabled: z,
                        open: E,
                        children: t.cloneElement(f, H),
                      }),
                    ],
                  })
                ),
              })
            : null;
        }),
        Lp = Ep;
      function Tp(e) {
        return (0, Cc.Ay)("MuiPopover", e);
      }
      (0, jl.A)("MuiPopover", ["root", "paper"]);
      const Op = ["onEntering"],
        Rp = [
          "action",
          "anchorEl",
          "anchorOrigin",
          "anchorPosition",
          "anchorReference",
          "children",
          "className",
          "container",
          "elevation",
          "marginThreshold",
          "open",
          "PaperProps",
          "slots",
          "slotProps",
          "transformOrigin",
          "TransitionComponent",
          "transitionDuration",
          "TransitionProps",
          "disableScrollLock",
        ],
        Ip = ["slotProps"];
      function Np(e, t) {
        let n = 0;
        return (
          "number" === typeof t
            ? (n = t)
            : "center" === t
            ? (n = e.height / 2)
            : "bottom" === t && (n = e.height),
          n
        );
      }
      function _p(e, t) {
        let n = 0;
        return (
          "number" === typeof t
            ? (n = t)
            : "center" === t
            ? (n = e.width / 2)
            : "right" === t && (n = e.width),
          n
        );
      }
      function Dp(e) {
        return [e.horizontal, e.vertical]
          .map((e) => ("number" === typeof e ? "".concat(e, "px") : e))
          .join(" ");
      }
      function zp(e) {
        return "function" === typeof e ? e() : e;
      }
      const jp = (0, Ul.Ay)(Lp, {
          name: "MuiPopover",
          slot: "Root",
          overridesResolver: (e, t) => t.root,
        })({}),
        Bp = (0, Ul.Ay)(Su, {
          name: "MuiPopover",
          slot: "Paper",
          overridesResolver: (e, t) => t.paper,
        })({
          position: "absolute",
          overflowY: "auto",
          overflowX: "hidden",
          minWidth: 16,
          minHeight: 16,
          maxWidth: "calc(100% - 32px)",
          maxHeight: "calc(100% - 32px)",
          outline: 0,
        }),
        Fp = t.forwardRef(function (e, n) {
          var i, o, a;
          const s = (0, Os.b)({ props: e, name: "MuiPopover" }),
            {
              action: r,
              anchorEl: l,
              anchorOrigin: c = { vertical: "top", horizontal: "left" },
              anchorPosition: u,
              anchorReference: d = "anchorEl",
              children: h,
              className: p,
              container: f,
              elevation: g = 8,
              marginThreshold: m = 16,
              open: v,
              PaperProps: b = {},
              slots: x,
              slotProps: y,
              transformOrigin: w = { vertical: "top", horizontal: "left" },
              TransitionComponent: S = $h,
              transitionDuration: k = "auto",
              TransitionProps: { onEntering: A } = {},
              disableScrollLock: C = !1,
            } = s,
            M = (0, Xs.A)(s.TransitionProps, Op),
            P = (0, Xs.A)(s, Rp),
            E = null != (i = null == y ? void 0 : y.paper) ? i : b,
            L = t.useRef(),
            T = (0, Yl.A)(L, E.ref),
            O = (0, Ts.A)({}, s, {
              anchorOrigin: c,
              anchorReference: d,
              elevation: g,
              marginThreshold: m,
              externalPaperSlotProps: E,
              transformOrigin: w,
              TransitionComponent: S,
              transitionDuration: k,
              TransitionProps: M,
            }),
            R = ((e) => {
              const { classes: t } = e;
              return (0, Gl.A)({ root: ["root"], paper: ["paper"] }, Tp, t);
            })(O),
            I = t.useCallback(() => {
              if ("anchorPosition" === d) return u;
              const e = zp(l),
                t = (
                  e && 1 === e.nodeType ? e : (0, Ih.A)(L.current).body
                ).getBoundingClientRect();
              return {
                top: t.top + Np(t, c.vertical),
                left: t.left + _p(t, c.horizontal),
              };
            }, [l, c.horizontal, c.vertical, u, d]),
            N = t.useCallback(
              (e) => ({
                vertical: Np(e, w.vertical),
                horizontal: _p(e, w.horizontal),
              }),
              [w.horizontal, w.vertical]
            ),
            _ = t.useCallback(
              (e) => {
                const t = { width: e.offsetWidth, height: e.offsetHeight },
                  n = N(t);
                if ("none" === d)
                  return { top: null, left: null, transformOrigin: Dp(n) };
                const i = I();
                let o = i.top - n.vertical,
                  a = i.left - n.horizontal;
                const s = o + t.height,
                  r = a + t.width,
                  c = (0, Nh.A)(zp(l)),
                  u = c.innerHeight - m,
                  h = c.innerWidth - m;
                if (null !== m && o < m) {
                  const e = o - m;
                  (o -= e), (n.vertical += e);
                } else if (null !== m && s > u) {
                  const e = s - u;
                  (o -= e), (n.vertical += e);
                }
                if (null !== m && a < m) {
                  const e = a - m;
                  (a -= e), (n.horizontal += e);
                } else if (r > h) {
                  const e = r - h;
                  (a -= e), (n.horizontal += e);
                }
                return {
                  top: "".concat(Math.round(o), "px"),
                  left: "".concat(Math.round(a), "px"),
                  transformOrigin: Dp(n),
                };
              },
              [l, d, I, N, m]
            ),
            [D, z] = t.useState(v),
            j = t.useCallback(() => {
              const e = L.current;
              if (!e) return;
              const t = _(e);
              null !== t.top && (e.style.top = t.top),
                null !== t.left && (e.style.left = t.left),
                (e.style.transformOrigin = t.transformOrigin),
                z(!0);
            }, [_]);
          t.useEffect(
            () => (
              C && window.addEventListener("scroll", j),
              () => window.removeEventListener("scroll", j)
            ),
            [l, C, j]
          );
          t.useEffect(() => {
            v && j();
          }),
            t.useImperativeHandle(
              r,
              () =>
                v
                  ? {
                      updatePosition: () => {
                        j();
                      },
                    }
                  : null,
              [v, j]
            ),
            t.useEffect(() => {
              if (!v) return;
              const e = (0, Rh.A)(() => {
                  j();
                }),
                t = (0, Nh.A)(l);
              return (
                t.addEventListener("resize", e),
                () => {
                  e.clear(), t.removeEventListener("resize", e);
                }
              );
            }, [l, v, j]);
          let B = k;
          "auto" !== k || S.muiSupportAuto || (B = void 0);
          const F = f || (l ? (0, Ih.A)(zp(l)).body : void 0),
            W = null != (o = null == x ? void 0 : x.root) ? o : jp,
            H = null != (a = null == x ? void 0 : x.paper) ? a : Bp,
            G = Oh({
              elementType: H,
              externalSlotProps: (0, Ts.A)({}, E, {
                style: D ? E.style : (0, Ts.A)({}, E.style, { opacity: 0 }),
              }),
              additionalProps: { elevation: g, ref: T },
              ownerState: O,
              className: (0, Rl.A)(R.paper, null == E ? void 0 : E.className),
            }),
            V = Oh({
              elementType: W,
              externalSlotProps: (null == y ? void 0 : y.root) || {},
              externalForwardedProps: P,
              additionalProps: {
                ref: n,
                slotProps: { backdrop: { invisible: !0 } },
                container: F,
                open: v,
              },
              ownerState: O,
              className: (0, Rl.A)(R.root, p),
            }),
            { slotProps: U } = V,
            Y = (0, Xs.A)(V, Ip);
          return (0, js.jsx)(
            W,
            (0, Ts.A)({}, Y, !Vc(W) && { slotProps: U, disableScrollLock: C }, {
              children: (0, js.jsx)(
                S,
                (0, Ts.A)(
                  {
                    appear: !0,
                    in: v,
                    onEntering: (e, t) => {
                      A && A(e, t), j();
                    },
                    onExited: () => {
                      z(!1);
                    },
                    timeout: B,
                  },
                  M,
                  {
                    children: (0, js.jsx)(H, (0, Ts.A)({}, G, { children: h })),
                  }
                )
              ),
            })
          );
        }),
        Wp = Fp,
        Hp = (e) => {
          let { id: t, open: n, anchorEl: i, handleClose: o } = e;
          const { profilePicture: a, name: s, email: r } = Ss((e) => e.user),
            l = ys(),
            c = nl();
          return (0, js.jsx)(Wp, {
            id: t,
            open: n,
            anchorEl: i,
            onClose: o,
            anchorOrigin: { vertical: "bottom", horizontal: "center" },
            transformOrigin: { vertical: "top", horizontal: "center" },
            children: (0, js.jsxs)("div", {
              style: {
                backgroundImage: "url(".concat(cd, ")"),
                backgroundSize: "cover",
                flexDirection: "column",
                cursor: "pointer",
                background: "black",
                width: 440,
              },
              className: "home-stats-box",
              children: [
                (0, js.jsx)("div", {
                  children: (0, js.jsxs)("div", {
                    style: {
                      display: "flex",
                      flexDirection: "row",
                      alignItems: "center",
                      borderBottom: "1px solid rgba(255, 255, 255, 0.2)",
                      paddingBottom: 20,
                    },
                    children: [
                      (0, js.jsx)("img", {
                        src: a || eh,
                        style: { height: 50, width: 50, borderRadius: 50 },
                      }),
                      (0, js.jsxs)("div", {
                        style: { marginLeft: 20 },
                        onClick: () => {
                          c("/waitlist"), o();
                        },
                        children: [
                          (0, js.jsx)("p", {
                            style: { fontSize: 18, fontWeight: "bold" },
                            children: s,
                          }),
                          (0, js.jsx)("p", {
                            style: {
                              fontSize: 12,
                              color: "rgba(209, 209, 209, 1)",
                            },
                            children: r,
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
                (0, js.jsxs)("div", {
                  style: {
                    background: "rgba(255, 255, 255, 0.06)",
                    borderRadius: 32,
                    padding: 10,
                    display: "flex",
                    flexDirection: "row",
                    marginTop: 20,
                  },
                  onClick: () => {
                    o(),
                      l(Nt({ name: "", email: "", profilePicture: "" })),
                      l(Rt(!1)),
                      c("/login");
                  },
                  children: [
                    (0, js.jsx)("img", { src: Sh, alt: "" }),
                    (0, js.jsx)("p", {
                      style: {
                        color: "rgba(255, 80, 74, 1)",
                        fontSize: 18,
                        marginLeft: 5,
                      },
                      children: "Sign Out",
                    }),
                  ],
                }),
              ],
            }),
          });
        },
        Gp = [
          {
            name: "Home",
            activeFontColor: "rgba(134, 60, 255, 1)",
            fontWeight: 500,
            fontSize: "18px",
            activeFontFamily: "Roboto",
            fontFamily: "Roboto",
            id: "",
          },
          {
            name: "Network Map",
            activeFontColor: "rgba(134, 60, 255, 1)",
            fontWeight: 500,
            fontSize: "18px",
            activeFontFamily: "Roboto",
            fontFamily: "Roboto",
            id: "network-map",
          },
          {
            name: "Dashboard",
            activeFontColor: "rgba(134, 60, 255, 1)",
            fontWeight: 500,
            fontSize: "18px",
            activeFontFamily: "Roboto",
            fontFamily: "Roboto",
            id: "dashboard",
          },
          {
            name: "Clusters",
            activeFontColor: "rgba(134, 60, 255, 1)",
            fontWeight: 500,
            fontSize: "18px",
            activeFontFamily: "Roboto",
            fontFamily: "Roboto",
            id: "clusters",
          },
        ],
        Vp = () => {
          const [e, n] = (0, t.useState)(!1),
            [i, o] = (0, t.useState)(!1),
            a = Ol("(max-width:1000px)"),
            s = (Ol("(max-width:600px)"), Ol("(max-width:380px)")),
            r = el(),
            l = nl(),
            c = r.pathname,
            [u, d] = (0, t.useState)("/login" === c ? "" : "Home"),
            [h, p] = (0, t.useState)(null),
            { isLoggedIn: f } = Ss((e) => e.user),
            g = Boolean(h),
            m = g ? "simple-popover" : void 0,
            { profilePicture: v } = Ss((e) => e.user);
          (0, t.useEffect)(() => {
            d(
              {
                "/": "Home",
                "/home": "Home",
                "/network-map": "Network Map",
                "/dashboard": "Dashboard",
                "/clusters": "Clusters",
              }[c] || ""
            );
          }, [c]);
          const b = () => {
              n(!e);
            },
            x = (e, t) => {
              t.includes("https")
                ? window.open(t, "_blank")
                : (d(e),
                  localStorage.setItem("activeTab", e),
                  a && n(!1),
                  l(t));
            };
          (0, t.useEffect)(() => {
            const e = () => {
              window.scrollY > 50 ? o(!0) : o(!1);
            };
            return (
              window.addEventListener("scroll", e),
              () => {
                window.removeEventListener("scroll", e);
              }
            );
          }, []);
          const y = (0, js.jsxs)(Hl, {
            onClick: b,
            sx: { textAlign: "center", marginTop: "16px" },
            children: [
              (0, js.jsx)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: "row",
                  position: "absolute",
                  justifyContent: "end",
                  width: "100%",
                },
                children: (0, js.jsx)(Hl, {
                  sx: { marginRight: 5 },
                  children: (0, js.jsx)(jc, {
                    onClick: (e) => {
                      b();
                    },
                    children: (0, js.jsx)(Vu.A, { sx: { color: "#ffffff" } }),
                  }),
                }),
              }),
              (0, js.jsx)(Gc, {
                sx: { marginTop: "50px" },
                children: Gp.map((e) =>
                  (0, js.jsx)(
                    su,
                    {
                      disablePadding: !0,
                      children: (0, js.jsx)(uu, {
                        sx: {
                          textAlign: "left",
                          paddingLeft: "10%",
                          paddingY: "30px",
                          gap: "4px",
                          justifyContent: a ? "center" : "flex-start",
                          borderBottom: "1px solid #282828",
                          marginX: "16px",
                        },
                        onClick: (t) => {
                          t.stopPropagation(),
                            x(
                              e.name,
                              (null === e || void 0 === e ? void 0 : e.url) ||
                                e.id
                            );
                        },
                        children: (0, js.jsx)(vu, {
                          fontSize: "18px",
                          fontWeight: 500,
                          lineHeight: "21px",
                          fontFamily: "Roboto",
                          color:
                            u !== e.name
                              ? "rgba(255, 255, 255, 0.8)"
                              : "#FFFFFF",
                          children: e.name,
                        }),
                      }),
                    },
                    e.name
                  )
                ),
              }),
            ],
          });
          return (0, js.jsxs)(Hl, {
            sx: {
              display: "flex",
              width: "calc(100% - 8px)",
              paddingRight: a ? "20px" : "2%",
              paddingLeft: a ? "10px" : "2%",
              height: "100px",
              alignItems: "center",
              maxWidth: a ? "100%" : "90%",
            },
            children: [
              (0, js.jsx)(Eu, {
                component: "nav",
                sx: {
                  background: i ? "rgba(0, 0, 0, 0.6)" : "transparent",
                  boxShadow: i ? "0 4px 12px rgba(0, 0, 0, 0.15)" : "none",
                  backdropFilter: i ? "blur(10px)" : "none",
                  transition:
                    "background 0.3s, box-shadow 0.3s, backdrop-filter 0.3s",
                  width: "100%",
                },
                position: "fixed",
                children: (0, js.jsxs)(Ru, {
                  sx: { px: a ? "20px" : "0px" },
                  children: [
                    (0, js.jsx)(Hl, {
                      sx: {
                        flexGrow: 1,
                        display: { md: "block" },
                        WebkitWritingMode: "vertical-lr",
                      },
                      children: (0, js.jsx)("img", {
                        src: Yu,
                        alt: "Logo",
                        style: {
                          height: a ? "50px" : "85px",
                          maxWidth: s ? "100px" : a ? "135px" : "150px",
                          cursor: "pointer",
                          display: e ? "none" : "flex",
                        },
                        onClick: () => {
                          l("/"),
                            localStorage.setItem("activeTab", "Home"),
                            d("Home");
                        },
                      }),
                    }),
                    (0, js.jsx)(Hl, {
                      sx: {
                        display: a ? "none" : "flex",
                        gap: "60px",
                        flexGrow: 1,
                      },
                      children: Gp.map((e) =>
                        (0, js.jsx)(
                          Gu,
                          {
                            onClick: () => {
                              x(
                                e.name,
                                (null === e || void 0 === e ? void 0 : e.url) ||
                                  e.id
                              );
                            },
                            sx: {
                              textTransform: "none",
                              cursor: "pointer",
                              alignItems: "center",
                              paddingX: "10px",
                              paddingTop: "10px",
                              paddingBottom: "5px",
                              borderRadius: "8px",
                              "&:hover": { backgroundColor: "#5f616540" },
                            },
                            disableRipple: !0,
                            children: (0, js.jsx)(vu, {
                              fontSize: "18px",
                              fontWeight: 500,
                              lineHeight: "21px",
                              fontFamily: "Roboto",
                              color:
                                u !== e.name
                                  ? "rgba(255, 255, 255, 0.8)"
                                  : "#FFFFFF",
                              style: {
                                borderBottom:
                                  u === e.name
                                    ? "1px solid rgba(255, 255, 255, 0.2)"
                                    : "0px solid rgba(255, 255, 255, 0.2)",
                                paddingBottom: "6px",
                              },
                              children: e.name,
                            }),
                          },
                          e.name
                        )
                      ),
                    }),
                    (0, js.jsxs)(Hl, {
                      sx: {
                        marginRight: a ? "10px" : "0px",
                        display: e ? "none" : "flex",
                      },
                      children: [
                        (0, js.jsx)(jc, {
                          onClick: (e) => {
                            f ? p(e.currentTarget) : l("/login");
                          },
                          id: "popover",
                          children: (0, js.jsx)("img", {
                            src: v || eh,
                            alt: "Profile",
                            style: { height: 50, width: 50, borderRadius: 50 },
                          }),
                        }),
                        h &&
                          (0, js.jsx)(Hp, {
                            anchorEl: h,
                            handleClose: () => {
                              p(null);
                            },
                            id: m,
                            open: g,
                          }),
                      ],
                    }),
                    (0, js.jsx)(jc, {
                      color: "inherit",
                      onClick: b,
                      sx: {
                        display: a ? "block" : "none",
                        visibility: e ? "hidden" : "visible",
                      },
                      children: (0, js.jsx)("img", {
                        src: Xu,
                        alt: "Menu",
                        style: { width: "24px", height: "24px" },
                      }),
                    }),
                  ],
                }),
              }),
              e &&
                (0, js.jsx)(Hl, {
                  sx: {
                    position: "fixed",
                    top: 0,
                    width: "100%",
                    height: "100vh",
                    backgroundColor: "black",
                    zIndex: 1300,
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "space-between",
                    padding: "16px",
                  },
                  children: y,
                }),
            ],
          });
        };
      function Up(e) {
        return (0, Cc.Ay)("MuiCircularProgress", e);
      }
      (0, jl.A)("MuiCircularProgress", [
        "root",
        "determinate",
        "indeterminate",
        "colorPrimary",
        "colorSecondary",
        "svg",
        "circle",
        "circleDeterminate",
        "circleIndeterminate",
        "circleDisableShrink",
      ]);
      var Yp, Xp, Kp, qp;
      const Zp = [
        "className",
        "color",
        "disableShrink",
        "size",
        "style",
        "thickness",
        "value",
        "variant",
      ];
      let Qp, $p, Jp, ef;
      const tf = 44,
        nf = (0, ac.i7)(
          Qp ||
            (Qp =
              Yp ||
              (Yp = ql([
                "\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n",
              ])))
        ),
        of = (0, ac.i7)(
          $p ||
            ($p =
              Xp ||
              (Xp = ql([
                "\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n",
              ])))
        ),
        af = (0, Ul.Ay)("span", {
          name: "MuiCircularProgress",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              t[n.variant],
              t["color".concat((0, Rc.A)(n.color))],
            ];
          },
        })(
          (e) => {
            let { ownerState: t, theme: n } = e;
            return (0, Ts.A)(
              { display: "inline-block" },
              "determinate" === t.variant && {
                transition: n.transitions.create("transform"),
              },
              "inherit" !== t.color && {
                color: (n.vars || n).palette[t.color].main,
              }
            );
          },
          (e) => {
            let { ownerState: t } = e;
            return (
              "indeterminate" === t.variant &&
              (0, ac.AH)(
                Jp ||
                  (Jp =
                    Kp ||
                    (Kp = ql([
                      "\n      animation: ",
                      " 1.4s linear infinite;\n    ",
                    ]))),
                nf
              )
            );
          }
        ),
        sf = (0, Ul.Ay)("svg", {
          name: "MuiCircularProgress",
          slot: "Svg",
          overridesResolver: (e, t) => t.svg,
        })({ display: "block" }),
        rf = (0, Ul.Ay)("circle", {
          name: "MuiCircularProgress",
          slot: "Circle",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.circle,
              t["circle".concat((0, Rc.A)(n.variant))],
              n.disableShrink && t.circleDisableShrink,
            ];
          },
        })(
          (e) => {
            let { ownerState: t, theme: n } = e;
            return (0, Ts.A)(
              { stroke: "currentColor" },
              "determinate" === t.variant && {
                transition: n.transitions.create("stroke-dashoffset"),
              },
              "indeterminate" === t.variant && {
                strokeDasharray: "80px, 200px",
                strokeDashoffset: 0,
              }
            );
          },
          (e) => {
            let { ownerState: t } = e;
            return (
              "indeterminate" === t.variant &&
              !t.disableShrink &&
              (0, ac.AH)(
                ef ||
                  (ef =
                    qp ||
                    (qp = ql([
                      "\n      animation: ",
                      " 1.4s ease-in-out infinite;\n    ",
                    ]))),
                of
              )
            );
          }
        ),
        lf = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiCircularProgress" }),
            {
              className: i,
              color: o = "primary",
              disableShrink: a = !1,
              size: s = 40,
              style: r,
              thickness: l = 3.6,
              value: c = 0,
              variant: u = "indeterminate",
            } = n,
            d = (0, Xs.A)(n, Zp),
            h = (0, Ts.A)({}, n, {
              color: o,
              disableShrink: a,
              size: s,
              thickness: l,
              value: c,
              variant: u,
            }),
            p = ((e) => {
              const { classes: t, variant: n, color: i, disableShrink: o } = e,
                a = {
                  root: ["root", n, "color".concat((0, Rc.A)(i))],
                  svg: ["svg"],
                  circle: [
                    "circle",
                    "circle".concat((0, Rc.A)(n)),
                    o && "circleDisableShrink",
                  ],
                };
              return (0, Gl.A)(a, Up, t);
            })(h),
            f = {},
            g = {},
            m = {};
          if ("determinate" === u) {
            const e = 2 * Math.PI * ((tf - l) / 2);
            (f.strokeDasharray = e.toFixed(3)),
              (m["aria-valuenow"] = Math.round(c)),
              (f.strokeDashoffset = "".concat(
                (((100 - c) / 100) * e).toFixed(3),
                "px"
              )),
              (g.transform = "rotate(-90deg)");
          }
          return (0,
          js.jsx)(af, (0, Ts.A)({ className: (0, Rl.A)(p.root, i), style: (0, Ts.A)({ width: s, height: s }, g, r), ownerState: h, ref: t, role: "progressbar" }, m, d, { children: (0, js.jsx)(sf, { className: p.svg, ownerState: h, viewBox: "".concat(22, " ").concat(22, " ").concat(tf, " ").concat(tf), children: (0, js.jsx)(rf, { className: p.circle, style: f, ownerState: h, cx: tf, cy: tf, r: (tf - l) / 2, fill: "none", strokeWidth: l }) }) }));
        }),
        cf = lf;
      const uf = (0, t.createContext)(null);
      function df(e) {
        let {
          clientId: n,
          nonce: i,
          onScriptLoadSuccess: o,
          onScriptLoadError: a,
          children: s,
        } = e;
        const r = (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            const {
                nonce: n,
                onScriptLoadSuccess: i,
                onScriptLoadError: o,
              } = e,
              [a, s] = (0, t.useState)(!1),
              r = (0, t.useRef)(i);
            r.current = i;
            const l = (0, t.useRef)(o);
            return (
              (l.current = o),
              (0, t.useEffect)(() => {
                const e = document.createElement("script");
                return (
                  (e.src = "https://accounts.google.com/gsi/client"),
                  (e.async = !0),
                  (e.defer = !0),
                  (e.nonce = n),
                  (e.onload = () => {
                    var e;
                    s(!0),
                      null === (e = r.current) || void 0 === e || e.call(r);
                  }),
                  (e.onerror = () => {
                    var e;
                    s(!1),
                      null === (e = l.current) || void 0 === e || e.call(l);
                  }),
                  document.body.appendChild(e),
                  () => {
                    document.body.removeChild(e);
                  }
                );
              }, [n]),
              a
            );
          })({ nonce: i, onScriptLoadSuccess: o, onScriptLoadError: a }),
          l = (0, t.useMemo)(
            () => ({ clientId: n, scriptLoadedSuccessfully: r }),
            [n, r]
          );
        return t.createElement(uf.Provider, { value: l }, s);
      }
      function hf() {
        const e = (0, t.useContext)(uf);
        if (!e)
          throw new Error(
            "Google OAuth components must be used within GoogleOAuthProvider"
          );
        return e;
      }
      const pf = (0, Ul.Ay)(Gu)((e) => {
          let { theme: t } = e;
          return {
            textTransform: "none",
            padding: "22px, 40px, 22px, 48px",
            borderRadius: "8px",
            display: "flex",
            alignItems: "center",
            gap: "8px",
            backgroundColor: "rgba(255, 255, 255, 1)",
            color: "rgba(0, 0, 0, 1)",
            fontFamily: "ProximaNovaRegular",
            fontSize: "18px",
            fontWeight: 600,
            width: "387px",
            minWidth: "auto",
            "&:hover": { backgroundColor: "rgba(255, 255, 255, 1)" },
            [t.breakpoints.down("sm")]: { width: "auto" },
          };
        }),
        ff = (0, Ul.Ay)("img")({ width: "20px", height: "20px" }),
        gf = () => {
          const e = Ol("(max-width:800px)"),
            [n, i] = (0, t.useState)(),
            [o, a] = (0, t.useState)(!1),
            { isLoggedIn: s } = Ss((e) => e.user),
            r = ys(),
            l = nl(),
            c = (function (e) {
              let {
                flow: n = "implicit",
                scope: i = "",
                onSuccess: o,
                onError: a,
                onNonOAuthError: s,
                overrideScope: r,
                state: l,
                ...c
              } = e;
              const { clientId: u, scriptLoadedSuccessfully: d } = hf(),
                h = (0, t.useRef)(),
                p = (0, t.useRef)(o);
              p.current = o;
              const f = (0, t.useRef)(a);
              f.current = a;
              const g = (0, t.useRef)(s);
              (g.current = s),
                (0, t.useEffect)(() => {
                  var e, t;
                  if (!d) return;
                  const o =
                      "implicit" === n ? "initTokenClient" : "initCodeClient",
                    a =
                      null ===
                        (t =
                          null ===
                            (e =
                              null === window || void 0 === window
                                ? void 0
                                : window.google) || void 0 === e
                            ? void 0
                            : e.accounts) || void 0 === t
                        ? void 0
                        : t.oauth2[o]({
                            client_id: u,
                            scope: r ? i : "openid profile email ".concat(i),
                            callback: (e) => {
                              var t, n;
                              if (e.error)
                                return null === (t = f.current) || void 0 === t
                                  ? void 0
                                  : t.call(f, e);
                              null === (n = p.current) ||
                                void 0 === n ||
                                n.call(p, e);
                            },
                            error_callback: (e) => {
                              var t;
                              null === (t = g.current) ||
                                void 0 === t ||
                                t.call(g, e);
                            },
                            state: l,
                            ...c,
                          });
                  h.current = a;
                }, [u, d, n, i, l]);
              const m = (0, t.useCallback)((e) => {
                  var t;
                  return null === (t = h.current) || void 0 === t
                    ? void 0
                    : t.requestAccessToken(e);
                }, []),
                v = (0, t.useCallback)(() => {
                  var e;
                  return null === (e = h.current) || void 0 === e
                    ? void 0
                    : e.requestCode();
                }, []);
              return "implicit" === n ? m : v;
            })({
              onSuccess: (e) => i(e),
              onError: (e) => console.log("Login Failed:", e),
            });
          return (
            (0, t.useEffect)(() => {
              (async () => {
                if (n)
                  try {
                    a(!0);
                    const { data: e } = await Ea.get(
                      "https://www.googleapis.com/oauth2/v1/userinfo?access_token=".concat(
                        n.access_token
                      ),
                      {
                        headers: {
                          Authorization: "Bearer ".concat(n.access_token),
                          Accept: "application/json",
                        },
                      }
                    );
                    console.log(e),
                      await Ea.post(La + "email", {
                        name: e.name,
                        email: e.email,
                      }),
                      a(!1),
                      r(Rt(!0)),
                      r(
                        Nt({
                          name: e.name,
                          email: e.email,
                          profilePicture: e.picture,
                        })
                      ),
                      l("/waitlist");
                  } catch (e) {
                    console.log(e), a(!1);
                  }
              })();
            }, [n]),
            (0, js.jsx)(Hl, {
              sx: {
                position: "relative",
                width: "100%",
                height: "100%",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                paddingTop: "20px",
                paddingBottom: "20px",
              },
              children: (0, js.jsxs)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: e ? "column-reverse" : "row",
                  alignItems: "center",
                  justifyContent: "center",
                  width: "100%",
                  height: "100%",
                  backgroundImage: "url(".concat(td, ")"),
                  backgroundSize: "cover",
                  backgroundPosition: "center",
                  borderRadius: "10px",
                  boxShadow: "0 0 10px rgba(0, 0, 0, 0.1)",
                  padding: "20px",
                  margin: "1px",
                  gap: "36px",
                  maxWidth: "1187px",
                },
                children: [
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "column",
                      alignItems: "center",
                      justifyContent: "center",
                      width: "100%",
                      height: "100%",
                      gap: "36px",
                      maxWidth: "468px",
                    },
                    children: [
                      o
                        ? (0, js.jsx)(cf, {
                            sx: { color: "rgba(255, 255, 255, 1)" },
                          })
                        : (0, js.jsxs)(pf, {
                            variant: "contained",
                            onClick: () => {
                              a(!0), c();
                            },
                            children: [
                              (0, js.jsx)(ff, { src: qu, alt: "Google logo" }),
                              "Sign in with Google",
                            ],
                          }),
                      (0, js.jsx)(vu, {
                        sx: {
                          fontFamily: "ProximaNovaRegular",
                          color: "rgba(148,152,156,1)",
                          fontSize: "14px",
                          fontWeight: 400,
                          lineHeight: "22.4px",
                          textAlign: "center",
                          paddingX: "40px",
                        },
                        children:
                          "Create your account with Dojo Compute and unlock industry-leading decentralized compute power. By proceeding, you confirm your acceptance of our Terms and Conditions and acknowledge the Privacy Notice provided by Dojo Compute.",
                      }),
                    ],
                  }),
                  (0, js.jsx)(Hl, {
                    sx: {
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                      width: "100%",
                      height: "100%",
                    },
                    children: (0, js.jsx)("img", {
                      src: Ku,
                      alt: "Dojo Compute",
                      style: { width: "100%", height: "auto" },
                      loading: "lazy",
                    }),
                  }),
                ],
              }),
            })
          );
        },
        mf = () => {
          const e = [
              { name: "X", link: "https://x.com/Dojo_GPU", icon: $u },
              {
                name: "Telegram",
                link: "https://t.me/dojoai_erc20",
                icon: Ju,
              },
            ],
            t = Ol("(max-width:1000px)"),
            n = Ol("(max-width:800px)"),
            i = Ol("(max-width:450px)"),
            o = nl();
          return (0, js.jsxs)("footer", {
            style: {
              width: "100%", 
              display: "flex",
              justifyContent: "center",
              flexDirection: "column",
            },
            children: [
              (0, js.jsx)(Hl, {
                sx: {
                  maxWidth: "100%",
                  width: "100%",
                  borderTop: "1px solid #14171A",
                  paddingY: "100px",
                  paddingBottom: t ? "16px" : "140px",
                  display: "flex",
                  justifyContent: "space-between",
                  flexDirection: "column",
                },
                children: (0, js.jsxs)(Hl, {
                  display: "flex",
                  justifyContent: "space-between",
                  gap: t ? "70px" : "16px",
                  flexDirection: t ? "column" : "row",
                  px: "20px",
                  maxWidth: "1200px",
                  alignItems: "center",
                  alignSelf: "center",
                  width: "100%",
                  children: [
                    (0, js.jsx)(Hl, {
                      sx: {
                        flex: 1,
                        width: "100%",
                        textAlign: t ? "center" : "start",
                      },
                      children: (0, js.jsx)("img", {
                        src: Qu,
                        alt: "Logo",
                        style: { height: "50px", width: "145px" },
                      }),
                    }),
                    (0, js.jsxs)(Hl, {
                      sx: {
                        flex: 1,
                        display: "flex",
                        flexDirection: n ? "column" : "row",
                        gap: "50px",
                        justifyContent: t ? "space-around" : "end",
                      },
                      children: [
                        (0, js.jsx)(Hl, {
                          display: "flex",
                          sx: {
                            flexDirection: "row",
                            gap: i ? "12px" : "50px",
                          },
                          children: [
                            { name: "AI", link: "https://dojoprotocol.com" },
                            { name: "VPN", link: "https://dojoprotocol.com" },
                            { name: "Docs", link: "https://docs.dojoai.ink" },
                            { name: "Dashboard", link: "/" },
                          ].map((e, n) =>
                            (0, js.jsx)(
                              Hl,
                              {
                                sx: { cursor: "pointer" },
                                onClick: () => {
                                  e.link.includes("http")
                                    ? window.open(e.link, "_blank")
                                    : o(e.link);
                                },
                                children: (0, js.jsx)(vu, {
                                  sx: {
                                    fontFamily: "Roboto",
                                    fontWeight: 500,
                                    fontSize: t ? "12px" : "18px",
                                    lineHeight: t ? "12px" : "22px",
                                    color:
                                      "AI" === e.name || "VPN" === e.name
                                        ? "rgb(211, 211, 211,0.2)"
                                        : "#94989C",
                                  },
                                  children: e.name,
                                }),
                              },
                              n
                            )
                          ),
                        }),
                        (0, js.jsx)(Hl, {
                          display: "flex",
                          flexDirection: "row",
                          gap: "32px",
                          paddingLeft: "30px",
                          alignSelf: "center",
                          children: e.map((e, n) =>
                            (0, js.jsx)(
                              Hl,
                              {
                                sx: {
                                  display: "flex",
                                  flexDirection: "row",
                                  cursor: "pointer",
                                },
                                onClick: () => window.open(e.link, "_blank"),
                                children: (0, js.jsx)("img", {
                                  src: e.icon,
                                  alt: e.name,
                                  style: {
                                    height: t ? "14px" : "32px",
                                    width: t ? "14px" : "32px",
                                  },
                                }),
                              },
                              n
                            )
                          ),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              (0, js.jsx)(Hl, {
                sx: {
                  borderTop: "1px solid #14171A",
                  maxWidth: "1200px",
                  display: "flex",
                  justifyContent: "space-between",
                  py: "48px",
                  mx: "5%",
                  width: "100%",
                  alignSelf: "center",
                  px: t ? "5%" : "0px",
                },
                children: (0, js.jsx)(vu, {
                  sx: {
                    fontFamily: "Roboto",
                    fontWeight: 300,
                    fontSize: n ? "10px" : "15px",
                    lineHeight: "22.5px",
                    color: "#94989C",
                    textAlign: "left",
                    width: "100%",
                  },
                  children: "Dojo GPU \xa9 2025. All rights reserved.",
                }),
              }),
            ],
          });
        };
      var vf = n(9751);
      const bf = t.createContext();
      function xf(e) {
        return (0, Cc.Ay)("MuiGrid", e);
      }
      const yf = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        wf = (0, jl.A)("MuiGrid", [
          "root",
          "container",
          "item",
          "zeroMinWidth",
          ...[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((e) =>
            "spacing-xs-".concat(e)
          ),
          ...["column-reverse", "column", "row-reverse", "row"].map((e) =>
            "direction-xs-".concat(e)
          ),
          ...["nowrap", "wrap-reverse", "wrap"].map((e) =>
            "wrap-xs-".concat(e)
          ),
          ...yf.map((e) => "grid-xs-".concat(e)),
          ...yf.map((e) => "grid-sm-".concat(e)),
          ...yf.map((e) => "grid-md-".concat(e)),
          ...yf.map((e) => "grid-lg-".concat(e)),
          ...yf.map((e) => "grid-xl-".concat(e)),
        ]),
        Sf = [
          "className",
          "columns",
          "columnSpacing",
          "component",
          "container",
          "direction",
          "item",
          "rowSpacing",
          "spacing",
          "wrap",
          "zeroMinWidth",
        ];
      function kf(e) {
        const t = parseFloat(e);
        return "".concat(t).concat(String(e).replace(String(t), "") || "px");
      }
      function Af(e) {
        let { breakpoints: t, values: n } = e,
          i = "";
        Object.keys(n).forEach((e) => {
          "" === i && 0 !== n[e] && (i = e);
        });
        const o = Object.keys(t).sort((e, n) => t[e] - t[n]);
        return o.slice(0, o.indexOf(i));
      }
      const Cf = (0, Ul.Ay)("div", {
        name: "MuiGrid",
        slot: "Root",
        overridesResolver: (e, t) => {
          const { ownerState: n } = e,
            {
              container: i,
              direction: o,
              item: a,
              spacing: s,
              wrap: r,
              zeroMinWidth: l,
              breakpoints: c,
            } = n;
          let u = [];
          i &&
            (u = (function (e, t) {
              let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              if (!e || e <= 0) return [];
              if (
                ("string" === typeof e && !Number.isNaN(Number(e))) ||
                "number" === typeof e
              )
                return [n["spacing-xs-".concat(String(e))]];
              const i = [];
              return (
                t.forEach((t) => {
                  const o = e[t];
                  Number(o) > 0 &&
                    i.push(n["spacing-".concat(t, "-").concat(String(o))]);
                }),
                i
              );
            })(s, c, t));
          const d = [];
          return (
            c.forEach((e) => {
              const i = n[e];
              i && d.push(t["grid-".concat(e, "-").concat(String(i))]);
            }),
            [
              t.root,
              i && t.container,
              a && t.item,
              l && t.zeroMinWidth,
              ...u,
              "row" !== o && t["direction-xs-".concat(String(o))],
              "wrap" !== r && t["wrap-xs-".concat(String(r))],
              ...d,
            ]
          );
        },
      })(
        (e) => {
          let { ownerState: t } = e;
          return (0, Ts.A)(
            { boxSizing: "border-box" },
            t.container && { display: "flex", flexWrap: "wrap", width: "100%" },
            t.item && { margin: 0 },
            t.zeroMinWidth && { minWidth: 0 },
            "wrap" !== t.wrap && { flexWrap: t.wrap }
          );
        },
        function (e) {
          let { theme: t, ownerState: n } = e;
          const i = (0, vf.kW)({
            values: n.direction,
            breakpoints: t.breakpoints.values,
          });
          return (0, vf.NI)({ theme: t }, i, (e) => {
            const t = { flexDirection: e };
            return (
              0 === e.indexOf("column") &&
                (t["& > .".concat(wf.item)] = { maxWidth: "none" }),
              t
            );
          });
        },
        function (e) {
          let { theme: t, ownerState: n } = e;
          const { container: i, rowSpacing: o } = n;
          let a = {};
          if (i && 0 !== o) {
            const e = (0, vf.kW)({
              values: o,
              breakpoints: t.breakpoints.values,
            });
            let n;
            "object" === typeof e &&
              (n = Af({ breakpoints: t.breakpoints.values, values: e })),
              (a = (0, vf.NI)({ theme: t }, e, (e, i) => {
                var o;
                const a = t.spacing(e);
                return "0px" !== a
                  ? {
                      marginTop: "-".concat(kf(a)),
                      ["& > .".concat(wf.item)]: { paddingTop: kf(a) },
                    }
                  : null != (o = n) && o.includes(i)
                  ? {}
                  : {
                      marginTop: 0,
                      ["& > .".concat(wf.item)]: { paddingTop: 0 },
                    };
              }));
          }
          return a;
        },
        function (e) {
          let { theme: t, ownerState: n } = e;
          const { container: i, columnSpacing: o } = n;
          let a = {};
          if (i && 0 !== o) {
            const e = (0, vf.kW)({
              values: o,
              breakpoints: t.breakpoints.values,
            });
            let n;
            "object" === typeof e &&
              (n = Af({ breakpoints: t.breakpoints.values, values: e })),
              (a = (0, vf.NI)({ theme: t }, e, (e, i) => {
                var o;
                const a = t.spacing(e);
                return "0px" !== a
                  ? {
                      width: "calc(100% + ".concat(kf(a), ")"),
                      marginLeft: "-".concat(kf(a)),
                      ["& > .".concat(wf.item)]: { paddingLeft: kf(a) },
                    }
                  : null != (o = n) && o.includes(i)
                  ? {}
                  : {
                      width: "100%",
                      marginLeft: 0,
                      ["& > .".concat(wf.item)]: { paddingLeft: 0 },
                    };
              }));
          }
          return a;
        },
        function (e) {
          let t,
            { theme: n, ownerState: i } = e;
          return n.breakpoints.keys.reduce((e, o) => {
            let a = {};
            if ((i[o] && (t = i[o]), !t)) return e;
            if (!0 === t) a = { flexBasis: 0, flexGrow: 1, maxWidth: "100%" };
            else if ("auto" === t)
              a = {
                flexBasis: "auto",
                flexGrow: 0,
                flexShrink: 0,
                maxWidth: "none",
                width: "auto",
              };
            else {
              const s = (0, vf.kW)({
                  values: i.columns,
                  breakpoints: n.breakpoints.values,
                }),
                r = "object" === typeof s ? s[o] : s;
              if (void 0 === r || null === r) return e;
              const l = "".concat(Math.round((t / r) * 1e8) / 1e6, "%");
              let c = {};
              if (i.container && i.item && 0 !== i.columnSpacing) {
                const e = n.spacing(i.columnSpacing);
                if ("0px" !== e) {
                  const t = "calc(".concat(l, " + ").concat(kf(e), ")");
                  c = { flexBasis: t, maxWidth: t };
                }
              }
              a = (0, Ts.A)({ flexBasis: l, flexGrow: 0, maxWidth: l }, c);
            }
            return (
              0 === n.breakpoints.values[o]
                ? Object.assign(e, a)
                : (e[n.breakpoints.up(o)] = a),
              e
            );
          }, {});
        }
      );
      const Mf = (e) => {
          const {
            classes: t,
            container: n,
            direction: i,
            item: o,
            spacing: a,
            wrap: s,
            zeroMinWidth: r,
            breakpoints: l,
          } = e;
          let c = [];
          n &&
            (c = (function (e, t) {
              if (!e || e <= 0) return [];
              if (
                ("string" === typeof e && !Number.isNaN(Number(e))) ||
                "number" === typeof e
              )
                return ["spacing-xs-".concat(String(e))];
              const n = [];
              return (
                t.forEach((t) => {
                  const i = e[t];
                  if (Number(i) > 0) {
                    const e = "spacing-".concat(t, "-").concat(String(i));
                    n.push(e);
                  }
                }),
                n
              );
            })(a, l));
          const u = [];
          l.forEach((t) => {
            const n = e[t];
            n && u.push("grid-".concat(t, "-").concat(String(n)));
          });
          const d = {
            root: [
              "root",
              n && "container",
              o && "item",
              r && "zeroMinWidth",
              ...c,
              "row" !== i && "direction-xs-".concat(String(i)),
              "wrap" !== s && "wrap-xs-".concat(String(s)),
              ...u,
            ],
          };
          return (0, Gl.A)(d, xf, t);
        },
        Pf = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiGrid" }),
            { breakpoints: o } = Vh(),
            a = (0, _l.A)(i),
            {
              className: s,
              columns: r,
              columnSpacing: l,
              component: c = "div",
              container: u = !1,
              direction: d = "row",
              item: h = !1,
              rowSpacing: p,
              spacing: f = 0,
              wrap: g = "wrap",
              zeroMinWidth: m = !1,
            } = a,
            v = (0, Xs.A)(a, Sf),
            b = p || f,
            x = l || f,
            y = t.useContext(bf),
            w = u ? r || 12 : y,
            S = {},
            k = (0, Ts.A)({}, v);
          o.keys.forEach((e) => {
            null != v[e] && ((S[e] = v[e]), delete k[e]);
          });
          const A = (0, Ts.A)(
              {},
              a,
              {
                columns: w,
                container: u,
                direction: d,
                item: h,
                rowSpacing: b,
                columnSpacing: x,
                wrap: g,
                zeroMinWidth: m,
                spacing: f,
              },
              S,
              { breakpoints: o.keys }
            ),
            C = Mf(A);
          return (0,
          js.jsx)(bf.Provider, { value: w, children: (0, js.jsx)(Cf, (0, Ts.A)({ ownerState: A, className: (0, Rl.A)(C.root, s), as: c, ref: n }, k)) });
        });
      const Ef = Pf;
      var Lf = n(2374);
      function Tf(e) {
        if (null == e) return window;
        if ("[object Window]" !== e.toString()) {
          var t = e.ownerDocument;
          return (t && t.defaultView) || window;
        }
        return e;
      }
      function Of(e) {
        return e instanceof Tf(e).Element || e instanceof Element;
      }
      function Rf(e) {
        return e instanceof Tf(e).HTMLElement || e instanceof HTMLElement;
      }
      function If(e) {
        return (
          "undefined" !== typeof ShadowRoot &&
          (e instanceof Tf(e).ShadowRoot || e instanceof ShadowRoot)
        );
      }
      var Nf = Math.max,
        _f = Math.min,
        Df = Math.round;
      function zf() {
        var e = navigator.userAgentData;
        return null != e && e.brands && Array.isArray(e.brands)
          ? e.brands
              .map(function (e) {
                return e.brand + "/" + e.version;
              })
              .join(" ")
          : navigator.userAgent;
      }
      function jf() {
        return !/^((?!chrome|android).)*safari/i.test(zf());
      }
      function Bf(e, t, n) {
        void 0 === t && (t = !1), void 0 === n && (n = !1);
        var i = e.getBoundingClientRect(),
          o = 1,
          a = 1;
        t &&
          Rf(e) &&
          ((o = (e.offsetWidth > 0 && Df(i.width) / e.offsetWidth) || 1),
          (a = (e.offsetHeight > 0 && Df(i.height) / e.offsetHeight) || 1));
        var s = (Of(e) ? Tf(e) : window).visualViewport,
          r = !jf() && n,
          l = (i.left + (r && s ? s.offsetLeft : 0)) / o,
          c = (i.top + (r && s ? s.offsetTop : 0)) / a,
          u = i.width / o,
          d = i.height / a;
        return {
          width: u,
          height: d,
          top: c,
          right: l + u,
          bottom: c + d,
          left: l,
          x: l,
          y: c,
        };
      }
      function Ff(e) {
        var t = Tf(e);
        return { scrollLeft: t.pageXOffset, scrollTop: t.pageYOffset };
      }
      function Wf(e) {
        return e ? (e.nodeName || "").toLowerCase() : null;
      }
      function Hf(e) {
        return ((Of(e) ? e.ownerDocument : e.document) || window.document)
          .documentElement;
      }
      function Gf(e) {
        return Bf(Hf(e)).left + Ff(e).scrollLeft;
      }
      function Vf(e) {
        return Tf(e).getComputedStyle(e);
      }
      function Uf(e) {
        var t = Vf(e),
          n = t.overflow,
          i = t.overflowX,
          o = t.overflowY;
        return /auto|scroll|overlay|hidden/.test(n + o + i);
      }
      function Yf(e, t, n) {
        void 0 === n && (n = !1);
        var i = Rf(t),
          o =
            Rf(t) &&
            (function (e) {
              var t = e.getBoundingClientRect(),
                n = Df(t.width) / e.offsetWidth || 1,
                i = Df(t.height) / e.offsetHeight || 1;
              return 1 !== n || 1 !== i;
            })(t),
          a = Hf(t),
          s = Bf(e, o, n),
          r = { scrollLeft: 0, scrollTop: 0 },
          l = { x: 0, y: 0 };
        return (
          (i || (!i && !n)) &&
            (("body" !== Wf(t) || Uf(a)) &&
              (r = (function (e) {
                return e !== Tf(e) && Rf(e)
                  ? { scrollLeft: (t = e).scrollLeft, scrollTop: t.scrollTop }
                  : Ff(e);
                var t;
              })(t)),
            Rf(t)
              ? (((l = Bf(t, !0)).x += t.clientLeft), (l.y += t.clientTop))
              : a && (l.x = Gf(a))),
          {
            x: s.left + r.scrollLeft - l.x,
            y: s.top + r.scrollTop - l.y,
            width: s.width,
            height: s.height,
          }
        );
      }
      function Xf(e) {
        var t = Bf(e),
          n = e.offsetWidth,
          i = e.offsetHeight;
        return (
          Math.abs(t.width - n) <= 1 && (n = t.width),
          Math.abs(t.height - i) <= 1 && (i = t.height),
          { x: e.offsetLeft, y: e.offsetTop, width: n, height: i }
        );
      }
      function Kf(e) {
        return "html" === Wf(e)
          ? e
          : e.assignedSlot || e.parentNode || (If(e) ? e.host : null) || Hf(e);
      }
      function qf(e) {
        return ["html", "body", "#document"].indexOf(Wf(e)) >= 0
          ? e.ownerDocument.body
          : Rf(e) && Uf(e)
          ? e
          : qf(Kf(e));
      }
      function Zf(e, t) {
        var n;
        void 0 === t && (t = []);
        var i = qf(e),
          o = i === (null == (n = e.ownerDocument) ? void 0 : n.body),
          a = Tf(i),
          s = o ? [a].concat(a.visualViewport || [], Uf(i) ? i : []) : i,
          r = t.concat(s);
        return o ? r : r.concat(Zf(Kf(s)));
      }
      function Qf(e) {
        return ["table", "td", "th"].indexOf(Wf(e)) >= 0;
      }
      function $f(e) {
        return Rf(e) && "fixed" !== Vf(e).position ? e.offsetParent : null;
      }
      function Jf(e) {
        for (
          var t = Tf(e), n = $f(e);
          n && Qf(n) && "static" === Vf(n).position;

        )
          n = $f(n);
        return n &&
          ("html" === Wf(n) ||
            ("body" === Wf(n) && "static" === Vf(n).position))
          ? t
          : n ||
              (function (e) {
                var t = /firefox/i.test(zf());
                if (
                  /Trident/i.test(zf()) &&
                  Rf(e) &&
                  "fixed" === Vf(e).position
                )
                  return null;
                var n = Kf(e);
                for (
                  If(n) && (n = n.host);
                  Rf(n) && ["html", "body"].indexOf(Wf(n)) < 0;

                ) {
                  var i = Vf(n);
                  if (
                    "none" !== i.transform ||
                    "none" !== i.perspective ||
                    "paint" === i.contain ||
                    -1 !== ["transform", "perspective"].indexOf(i.willChange) ||
                    (t && "filter" === i.willChange) ||
                    (t && i.filter && "none" !== i.filter)
                  )
                    return n;
                  n = n.parentNode;
                }
                return null;
              })(e) ||
              t;
      }
      var eg = "top",
        tg = "bottom",
        ng = "right",
        ig = "left",
        og = "auto",
        ag = [eg, tg, ng, ig],
        sg = "start",
        rg = "end",
        lg = "clippingParents",
        cg = "viewport",
        ug = "popper",
        dg = "reference",
        hg = ag.reduce(function (e, t) {
          return e.concat([t + "-" + sg, t + "-" + rg]);
        }, []),
        pg = [].concat(ag, [og]).reduce(function (e, t) {
          return e.concat([t, t + "-" + sg, t + "-" + rg]);
        }, []),
        fg = [
          "beforeRead",
          "read",
          "afterRead",
          "beforeMain",
          "main",
          "afterMain",
          "beforeWrite",
          "write",
          "afterWrite",
        ];
      function gg(e) {
        var t = new Map(),
          n = new Set(),
          i = [];
        function o(e) {
          n.add(e.name),
            []
              .concat(e.requires || [], e.requiresIfExists || [])
              .forEach(function (e) {
                if (!n.has(e)) {
                  var i = t.get(e);
                  i && o(i);
                }
              }),
            i.push(e);
        }
        return (
          e.forEach(function (e) {
            t.set(e.name, e);
          }),
          e.forEach(function (e) {
            n.has(e.name) || o(e);
          }),
          i
        );
      }
      function mg(e) {
        var t;
        return function () {
          return (
            t ||
              (t = new Promise(function (n) {
                Promise.resolve().then(function () {
                  (t = void 0), n(e());
                });
              })),
            t
          );
        };
      }
      var vg = { placement: "bottom", modifiers: [], strategy: "absolute" };
      function bg() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return !t.some(function (e) {
          return !(e && "function" === typeof e.getBoundingClientRect);
        });
      }
      function xg(e) {
        void 0 === e && (e = {});
        var t = e,
          n = t.defaultModifiers,
          i = void 0 === n ? [] : n,
          o = t.defaultOptions,
          a = void 0 === o ? vg : o;
        return function (e, t, n) {
          void 0 === n && (n = a);
          var o = {
              placement: "bottom",
              orderedModifiers: [],
              options: Object.assign({}, vg, a),
              modifiersData: {},
              elements: { reference: e, popper: t },
              attributes: {},
              styles: {},
            },
            s = [],
            r = !1,
            l = {
              state: o,
              setOptions: function (n) {
                var r = "function" === typeof n ? n(o.options) : n;
                c(),
                  (o.options = Object.assign({}, a, o.options, r)),
                  (o.scrollParents = {
                    reference: Of(e)
                      ? Zf(e)
                      : e.contextElement
                      ? Zf(e.contextElement)
                      : [],
                    popper: Zf(t),
                  });
                var u = (function (e) {
                  var t = gg(e);
                  return fg.reduce(function (e, n) {
                    return e.concat(
                      t.filter(function (e) {
                        return e.phase === n;
                      })
                    );
                  }, []);
                })(
                  (function (e) {
                    var t = e.reduce(function (e, t) {
                      var n = e[t.name];
                      return (
                        (e[t.name] = n
                          ? Object.assign({}, n, t, {
                              options: Object.assign({}, n.options, t.options),
                              data: Object.assign({}, n.data, t.data),
                            })
                          : t),
                        e
                      );
                    }, {});
                    return Object.keys(t).map(function (e) {
                      return t[e];
                    });
                  })([].concat(i, o.options.modifiers))
                );
                return (
                  (o.orderedModifiers = u.filter(function (e) {
                    return e.enabled;
                  })),
                  o.orderedModifiers.forEach(function (e) {
                    var t = e.name,
                      n = e.options,
                      i = void 0 === n ? {} : n,
                      a = e.effect;
                    if ("function" === typeof a) {
                      var r = a({ state: o, name: t, instance: l, options: i }),
                        c = function () {};
                      s.push(r || c);
                    }
                  }),
                  l.update()
                );
              },
              forceUpdate: function () {
                if (!r) {
                  var e = o.elements,
                    t = e.reference,
                    n = e.popper;
                  if (bg(t, n)) {
                    (o.rects = {
                      reference: Yf(t, Jf(n), "fixed" === o.options.strategy),
                      popper: Xf(n),
                    }),
                      (o.reset = !1),
                      (o.placement = o.options.placement),
                      o.orderedModifiers.forEach(function (e) {
                        return (o.modifiersData[e.name] = Object.assign(
                          {},
                          e.data
                        ));
                      });
                    for (var i = 0; i < o.orderedModifiers.length; i++)
                      if (!0 !== o.reset) {
                        var a = o.orderedModifiers[i],
                          s = a.fn,
                          c = a.options,
                          u = void 0 === c ? {} : c,
                          d = a.name;
                        "function" === typeof s &&
                          (o =
                            s({ state: o, options: u, name: d, instance: l }) ||
                            o);
                      } else (o.reset = !1), (i = -1);
                  }
                }
              },
              update: mg(function () {
                return new Promise(function (e) {
                  l.forceUpdate(), e(o);
                });
              }),
              destroy: function () {
                c(), (r = !0);
              },
            };
          if (!bg(e, t)) return l;
          function c() {
            s.forEach(function (e) {
              return e();
            }),
              (s = []);
          }
          return (
            l.setOptions(n).then(function (e) {
              !r && n.onFirstUpdate && n.onFirstUpdate(e);
            }),
            l
          );
        };
      }
      var yg = { passive: !0 };
      function wg(e) {
        return e.split("-")[0];
      }
      function Sg(e) {
        return e.split("-")[1];
      }
      function kg(e) {
        return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
      }
      function Ag(e) {
        var t,
          n = e.reference,
          i = e.element,
          o = e.placement,
          a = o ? wg(o) : null,
          s = o ? Sg(o) : null,
          r = n.x + n.width / 2 - i.width / 2,
          l = n.y + n.height / 2 - i.height / 2;
        switch (a) {
          case eg:
            t = { x: r, y: n.y - i.height };
            break;
          case tg:
            t = { x: r, y: n.y + n.height };
            break;
          case ng:
            t = { x: n.x + n.width, y: l };
            break;
          case ig:
            t = { x: n.x - i.width, y: l };
            break;
          default:
            t = { x: n.x, y: n.y };
        }
        var c = a ? kg(a) : null;
        if (null != c) {
          var u = "y" === c ? "height" : "width";
          switch (s) {
            case sg:
              t[c] = t[c] - (n[u] / 2 - i[u] / 2);
              break;
            case rg:
              t[c] = t[c] + (n[u] / 2 - i[u] / 2);
          }
        }
        return t;
      }
      var Cg = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
      function Mg(e) {
        var t,
          n = e.popper,
          i = e.popperRect,
          o = e.placement,
          a = e.variation,
          s = e.offsets,
          r = e.position,
          l = e.gpuAcceleration,
          c = e.adaptive,
          u = e.roundOffsets,
          d = e.isFixed,
          h = s.x,
          p = void 0 === h ? 0 : h,
          f = s.y,
          g = void 0 === f ? 0 : f,
          m = "function" === typeof u ? u({ x: p, y: g }) : { x: p, y: g };
        (p = m.x), (g = m.y);
        var v = s.hasOwnProperty("x"),
          b = s.hasOwnProperty("y"),
          x = ig,
          y = eg,
          w = window;
        if (c) {
          var S = Jf(n),
            k = "clientHeight",
            A = "clientWidth";
          if (
            (S === Tf(n) &&
              "static" !== Vf((S = Hf(n))).position &&
              "absolute" === r &&
              ((k = "scrollHeight"), (A = "scrollWidth")),
            o === eg || ((o === ig || o === ng) && a === rg))
          )
            (y = tg),
              (g -=
                (d && S === w && w.visualViewport
                  ? w.visualViewport.height
                  : S[k]) - i.height),
              (g *= l ? 1 : -1);
          if (o === ig || ((o === eg || o === tg) && a === rg))
            (x = ng),
              (p -=
                (d && S === w && w.visualViewport
                  ? w.visualViewport.width
                  : S[A]) - i.width),
              (p *= l ? 1 : -1);
        }
        var C,
          M = Object.assign({ position: r }, c && Cg),
          P =
            !0 === u
              ? (function (e, t) {
                  var n = e.x,
                    i = e.y,
                    o = t.devicePixelRatio || 1;
                  return { x: Df(n * o) / o || 0, y: Df(i * o) / o || 0 };
                })({ x: p, y: g }, Tf(n))
              : { x: p, y: g };
        return (
          (p = P.x),
          (g = P.y),
          l
            ? Object.assign(
                {},
                M,
                (((C = {})[y] = b ? "0" : ""),
                (C[x] = v ? "0" : ""),
                (C.transform =
                  (w.devicePixelRatio || 1) <= 1
                    ? "translate(" + p + "px, " + g + "px)"
                    : "translate3d(" + p + "px, " + g + "px, 0)"),
                C)
              )
            : Object.assign(
                {},
                M,
                (((t = {})[y] = b ? g + "px" : ""),
                (t[x] = v ? p + "px" : ""),
                (t.transform = ""),
                t)
              )
        );
      }
      const Pg = {
        name: "offset",
        enabled: !0,
        phase: "main",
        requires: ["popperOffsets"],
        fn: function (e) {
          var t = e.state,
            n = e.options,
            i = e.name,
            o = n.offset,
            a = void 0 === o ? [0, 0] : o,
            s = pg.reduce(function (e, n) {
              return (
                (e[n] = (function (e, t, n) {
                  var i = wg(e),
                    o = [ig, eg].indexOf(i) >= 0 ? -1 : 1,
                    a =
                      "function" === typeof n
                        ? n(Object.assign({}, t, { placement: e }))
                        : n,
                    s = a[0],
                    r = a[1];
                  return (
                    (s = s || 0),
                    (r = (r || 0) * o),
                    [ig, ng].indexOf(i) >= 0 ? { x: r, y: s } : { x: s, y: r }
                  );
                })(n, t.rects, a)),
                e
              );
            }, {}),
            r = s[t.placement],
            l = r.x,
            c = r.y;
          null != t.modifiersData.popperOffsets &&
            ((t.modifiersData.popperOffsets.x += l),
            (t.modifiersData.popperOffsets.y += c)),
            (t.modifiersData[i] = s);
        },
      };
      var Eg = { left: "right", right: "left", bottom: "top", top: "bottom" };
      function Lg(e) {
        return e.replace(/left|right|bottom|top/g, function (e) {
          return Eg[e];
        });
      }
      var Tg = { start: "end", end: "start" };
      function Og(e) {
        return e.replace(/start|end/g, function (e) {
          return Tg[e];
        });
      }
      function Rg(e, t) {
        var n = t.getRootNode && t.getRootNode();
        if (e.contains(t)) return !0;
        if (n && If(n)) {
          var i = t;
          do {
            if (i && e.isSameNode(i)) return !0;
            i = i.parentNode || i.host;
          } while (i);
        }
        return !1;
      }
      function Ig(e) {
        return Object.assign({}, e, {
          left: e.x,
          top: e.y,
          right: e.x + e.width,
          bottom: e.y + e.height,
        });
      }
      function Ng(e, t, n) {
        return t === cg
          ? Ig(
              (function (e, t) {
                var n = Tf(e),
                  i = Hf(e),
                  o = n.visualViewport,
                  a = i.clientWidth,
                  s = i.clientHeight,
                  r = 0,
                  l = 0;
                if (o) {
                  (a = o.width), (s = o.height);
                  var c = jf();
                  (c || (!c && "fixed" === t)) &&
                    ((r = o.offsetLeft), (l = o.offsetTop));
                }
                return { width: a, height: s, x: r + Gf(e), y: l };
              })(e, n)
            )
          : Of(t)
          ? (function (e, t) {
              var n = Bf(e, !1, "fixed" === t);
              return (
                (n.top = n.top + e.clientTop),
                (n.left = n.left + e.clientLeft),
                (n.bottom = n.top + e.clientHeight),
                (n.right = n.left + e.clientWidth),
                (n.width = e.clientWidth),
                (n.height = e.clientHeight),
                (n.x = n.left),
                (n.y = n.top),
                n
              );
            })(t, n)
          : Ig(
              (function (e) {
                var t,
                  n = Hf(e),
                  i = Ff(e),
                  o = null == (t = e.ownerDocument) ? void 0 : t.body,
                  a = Nf(
                    n.scrollWidth,
                    n.clientWidth,
                    o ? o.scrollWidth : 0,
                    o ? o.clientWidth : 0
                  ),
                  s = Nf(
                    n.scrollHeight,
                    n.clientHeight,
                    o ? o.scrollHeight : 0,
                    o ? o.clientHeight : 0
                  ),
                  r = -i.scrollLeft + Gf(e),
                  l = -i.scrollTop;
                return (
                  "rtl" === Vf(o || n).direction &&
                    (r += Nf(n.clientWidth, o ? o.clientWidth : 0) - a),
                  { width: a, height: s, x: r, y: l }
                );
              })(Hf(e))
            );
      }
      function _g(e, t, n, i) {
        var o =
            "clippingParents" === t
              ? (function (e) {
                  var t = Zf(Kf(e)),
                    n =
                      ["absolute", "fixed"].indexOf(Vf(e).position) >= 0 &&
                      Rf(e)
                        ? Jf(e)
                        : e;
                  return Of(n)
                    ? t.filter(function (e) {
                        return Of(e) && Rg(e, n) && "body" !== Wf(e);
                      })
                    : [];
                })(e)
              : [].concat(t),
          a = [].concat(o, [n]),
          s = a[0],
          r = a.reduce(function (t, n) {
            var o = Ng(e, n, i);
            return (
              (t.top = Nf(o.top, t.top)),
              (t.right = _f(o.right, t.right)),
              (t.bottom = _f(o.bottom, t.bottom)),
              (t.left = Nf(o.left, t.left)),
              t
            );
          }, Ng(e, s, i));
        return (
          (r.width = r.right - r.left),
          (r.height = r.bottom - r.top),
          (r.x = r.left),
          (r.y = r.top),
          r
        );
      }
      function Dg(e) {
        return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, e);
      }
      function zg(e, t) {
        return t.reduce(function (t, n) {
          return (t[n] = e), t;
        }, {});
      }
      function jg(e, t) {
        void 0 === t && (t = {});
        var n = t,
          i = n.placement,
          o = void 0 === i ? e.placement : i,
          a = n.strategy,
          s = void 0 === a ? e.strategy : a,
          r = n.boundary,
          l = void 0 === r ? lg : r,
          c = n.rootBoundary,
          u = void 0 === c ? cg : c,
          d = n.elementContext,
          h = void 0 === d ? ug : d,
          p = n.altBoundary,
          f = void 0 !== p && p,
          g = n.padding,
          m = void 0 === g ? 0 : g,
          v = Dg("number" !== typeof m ? m : zg(m, ag)),
          b = h === ug ? dg : ug,
          x = e.rects.popper,
          y = e.elements[f ? b : h],
          w = _g(
            Of(y) ? y : y.contextElement || Hf(e.elements.popper),
            l,
            u,
            s
          ),
          S = Bf(e.elements.reference),
          k = Ag({
            reference: S,
            element: x,
            strategy: "absolute",
            placement: o,
          }),
          A = Ig(Object.assign({}, x, k)),
          C = h === ug ? A : S,
          M = {
            top: w.top - C.top + v.top,
            bottom: C.bottom - w.bottom + v.bottom,
            left: w.left - C.left + v.left,
            right: C.right - w.right + v.right,
          },
          P = e.modifiersData.offset;
        if (h === ug && P) {
          var E = P[o];
          Object.keys(M).forEach(function (e) {
            var t = [ng, tg].indexOf(e) >= 0 ? 1 : -1,
              n = [eg, tg].indexOf(e) >= 0 ? "y" : "x";
            M[e] += E[n] * t;
          });
        }
        return M;
      }
      function Bg(e, t, n) {
        return Nf(e, _f(t, n));
      }
      const Fg = {
        name: "preventOverflow",
        enabled: !0,
        phase: "main",
        fn: function (e) {
          var t = e.state,
            n = e.options,
            i = e.name,
            o = n.mainAxis,
            a = void 0 === o || o,
            s = n.altAxis,
            r = void 0 !== s && s,
            l = n.boundary,
            c = n.rootBoundary,
            u = n.altBoundary,
            d = n.padding,
            h = n.tether,
            p = void 0 === h || h,
            f = n.tetherOffset,
            g = void 0 === f ? 0 : f,
            m = jg(t, {
              boundary: l,
              rootBoundary: c,
              padding: d,
              altBoundary: u,
            }),
            v = wg(t.placement),
            b = Sg(t.placement),
            x = !b,
            y = kg(v),
            w = "x" === y ? "y" : "x",
            S = t.modifiersData.popperOffsets,
            k = t.rects.reference,
            A = t.rects.popper,
            C =
              "function" === typeof g
                ? g(Object.assign({}, t.rects, { placement: t.placement }))
                : g,
            M =
              "number" === typeof C
                ? { mainAxis: C, altAxis: C }
                : Object.assign({ mainAxis: 0, altAxis: 0 }, C),
            P = t.modifiersData.offset
              ? t.modifiersData.offset[t.placement]
              : null,
            E = { x: 0, y: 0 };
          if (S) {
            if (a) {
              var L,
                T = "y" === y ? eg : ig,
                O = "y" === y ? tg : ng,
                R = "y" === y ? "height" : "width",
                I = S[y],
                N = I + m[T],
                _ = I - m[O],
                D = p ? -A[R] / 2 : 0,
                z = b === sg ? k[R] : A[R],
                j = b === sg ? -A[R] : -k[R],
                B = t.elements.arrow,
                F = p && B ? Xf(B) : { width: 0, height: 0 },
                W = t.modifiersData["arrow#persistent"]
                  ? t.modifiersData["arrow#persistent"].padding
                  : { top: 0, right: 0, bottom: 0, left: 0 },
                H = W[T],
                G = W[O],
                V = Bg(0, k[R], F[R]),
                U = x
                  ? k[R] / 2 - D - V - H - M.mainAxis
                  : z - V - H - M.mainAxis,
                Y = x
                  ? -k[R] / 2 + D + V + G + M.mainAxis
                  : j + V + G + M.mainAxis,
                X = t.elements.arrow && Jf(t.elements.arrow),
                K = X ? ("y" === y ? X.clientTop || 0 : X.clientLeft || 0) : 0,
                q = null != (L = null == P ? void 0 : P[y]) ? L : 0,
                Z = I + Y - q,
                Q = Bg(p ? _f(N, I + U - q - K) : N, I, p ? Nf(_, Z) : _);
              (S[y] = Q), (E[y] = Q - I);
            }
            if (r) {
              var $,
                J = "x" === y ? eg : ig,
                ee = "x" === y ? tg : ng,
                te = S[w],
                ne = "y" === w ? "height" : "width",
                ie = te + m[J],
                oe = te - m[ee],
                ae = -1 !== [eg, ig].indexOf(v),
                se = null != ($ = null == P ? void 0 : P[w]) ? $ : 0,
                re = ae ? ie : te - k[ne] - A[ne] - se + M.altAxis,
                le = ae ? te + k[ne] + A[ne] - se - M.altAxis : oe,
                ce =
                  p && ae
                    ? (function (e, t, n) {
                        var i = Bg(e, t, n);
                        return i > n ? n : i;
                      })(re, te, le)
                    : Bg(p ? re : ie, te, p ? le : oe);
              (S[w] = ce), (E[w] = ce - te);
            }
            t.modifiersData[i] = E;
          }
        },
        requiresIfExists: ["offset"],
      };
      const Wg = {
        name: "arrow",
        enabled: !0,
        phase: "main",
        fn: function (e) {
          var t,
            n = e.state,
            i = e.name,
            o = e.options,
            a = n.elements.arrow,
            s = n.modifiersData.popperOffsets,
            r = wg(n.placement),
            l = kg(r),
            c = [ig, ng].indexOf(r) >= 0 ? "height" : "width";
          if (a && s) {
            var u = (function (e, t) {
                return Dg(
                  "number" !==
                    typeof (e =
                      "function" === typeof e
                        ? e(
                            Object.assign({}, t.rects, {
                              placement: t.placement,
                            })
                          )
                        : e)
                    ? e
                    : zg(e, ag)
                );
              })(o.padding, n),
              d = Xf(a),
              h = "y" === l ? eg : ig,
              p = "y" === l ? tg : ng,
              f =
                n.rects.reference[c] +
                n.rects.reference[l] -
                s[l] -
                n.rects.popper[c],
              g = s[l] - n.rects.reference[l],
              m = Jf(a),
              v = m
                ? "y" === l
                  ? m.clientHeight || 0
                  : m.clientWidth || 0
                : 0,
              b = f / 2 - g / 2,
              x = u[h],
              y = v - d[c] - u[p],
              w = v / 2 - d[c] / 2 + b,
              S = Bg(x, w, y),
              k = l;
            n.modifiersData[i] =
              (((t = {})[k] = S), (t.centerOffset = S - w), t);
          }
        },
        effect: function (e) {
          var t = e.state,
            n = e.options.element,
            i = void 0 === n ? "[data-popper-arrow]" : n;
          null != i &&
            ("string" !== typeof i ||
              (i = t.elements.popper.querySelector(i))) &&
            Rg(t.elements.popper, i) &&
            (t.elements.arrow = i);
        },
        requires: ["popperOffsets"],
        requiresIfExists: ["preventOverflow"],
      };
      function Hg(e, t, n) {
        return (
          void 0 === n && (n = { x: 0, y: 0 }),
          {
            top: e.top - t.height - n.y,
            right: e.right - t.width + n.x,
            bottom: e.bottom - t.height + n.y,
            left: e.left - t.width - n.x,
          }
        );
      }
      function Gg(e) {
        return [eg, ng, tg, ig].some(function (t) {
          return e[t] >= 0;
        });
      }
      var Vg = xg({
        defaultModifiers: [
          {
            name: "eventListeners",
            enabled: !0,
            phase: "write",
            fn: function () {},
            effect: function (e) {
              var t = e.state,
                n = e.instance,
                i = e.options,
                o = i.scroll,
                a = void 0 === o || o,
                s = i.resize,
                r = void 0 === s || s,
                l = Tf(t.elements.popper),
                c = [].concat(
                  t.scrollParents.reference,
                  t.scrollParents.popper
                );
              return (
                a &&
                  c.forEach(function (e) {
                    e.addEventListener("scroll", n.update, yg);
                  }),
                r && l.addEventListener("resize", n.update, yg),
                function () {
                  a &&
                    c.forEach(function (e) {
                      e.removeEventListener("scroll", n.update, yg);
                    }),
                    r && l.removeEventListener("resize", n.update, yg);
                }
              );
            },
            data: {},
          },
          {
            name: "popperOffsets",
            enabled: !0,
            phase: "read",
            fn: function (e) {
              var t = e.state,
                n = e.name;
              t.modifiersData[n] = Ag({
                reference: t.rects.reference,
                element: t.rects.popper,
                strategy: "absolute",
                placement: t.placement,
              });
            },
            data: {},
          },
          {
            name: "computeStyles",
            enabled: !0,
            phase: "beforeWrite",
            fn: function (e) {
              var t = e.state,
                n = e.options,
                i = n.gpuAcceleration,
                o = void 0 === i || i,
                a = n.adaptive,
                s = void 0 === a || a,
                r = n.roundOffsets,
                l = void 0 === r || r,
                c = {
                  placement: wg(t.placement),
                  variation: Sg(t.placement),
                  popper: t.elements.popper,
                  popperRect: t.rects.popper,
                  gpuAcceleration: o,
                  isFixed: "fixed" === t.options.strategy,
                };
              null != t.modifiersData.popperOffsets &&
                (t.styles.popper = Object.assign(
                  {},
                  t.styles.popper,
                  Mg(
                    Object.assign({}, c, {
                      offsets: t.modifiersData.popperOffsets,
                      position: t.options.strategy,
                      adaptive: s,
                      roundOffsets: l,
                    })
                  )
                )),
                null != t.modifiersData.arrow &&
                  (t.styles.arrow = Object.assign(
                    {},
                    t.styles.arrow,
                    Mg(
                      Object.assign({}, c, {
                        offsets: t.modifiersData.arrow,
                        position: "absolute",
                        adaptive: !1,
                        roundOffsets: l,
                      })
                    )
                  )),
                (t.attributes.popper = Object.assign({}, t.attributes.popper, {
                  "data-popper-placement": t.placement,
                }));
            },
            data: {},
          },
          {
            name: "applyStyles",
            enabled: !0,
            phase: "write",
            fn: function (e) {
              var t = e.state;
              Object.keys(t.elements).forEach(function (e) {
                var n = t.styles[e] || {},
                  i = t.attributes[e] || {},
                  o = t.elements[e];
                Rf(o) &&
                  Wf(o) &&
                  (Object.assign(o.style, n),
                  Object.keys(i).forEach(function (e) {
                    var t = i[e];
                    !1 === t
                      ? o.removeAttribute(e)
                      : o.setAttribute(e, !0 === t ? "" : t);
                  }));
              });
            },
            effect: function (e) {
              var t = e.state,
                n = {
                  popper: {
                    position: t.options.strategy,
                    left: "0",
                    top: "0",
                    margin: "0",
                  },
                  arrow: { position: "absolute" },
                  reference: {},
                };
              return (
                Object.assign(t.elements.popper.style, n.popper),
                (t.styles = n),
                t.elements.arrow &&
                  Object.assign(t.elements.arrow.style, n.arrow),
                function () {
                  Object.keys(t.elements).forEach(function (e) {
                    var i = t.elements[e],
                      o = t.attributes[e] || {},
                      a = Object.keys(
                        t.styles.hasOwnProperty(e) ? t.styles[e] : n[e]
                      ).reduce(function (e, t) {
                        return (e[t] = ""), e;
                      }, {});
                    Rf(i) &&
                      Wf(i) &&
                      (Object.assign(i.style, a),
                      Object.keys(o).forEach(function (e) {
                        i.removeAttribute(e);
                      }));
                  });
                }
              );
            },
            requires: ["computeStyles"],
          },
          Pg,
          {
            name: "flip",
            enabled: !0,
            phase: "main",
            fn: function (e) {
              var t = e.state,
                n = e.options,
                i = e.name;
              if (!t.modifiersData[i]._skip) {
                for (
                  var o = n.mainAxis,
                    a = void 0 === o || o,
                    s = n.altAxis,
                    r = void 0 === s || s,
                    l = n.fallbackPlacements,
                    c = n.padding,
                    u = n.boundary,
                    d = n.rootBoundary,
                    h = n.altBoundary,
                    p = n.flipVariations,
                    f = void 0 === p || p,
                    g = n.allowedAutoPlacements,
                    m = t.options.placement,
                    v = wg(m),
                    b =
                      l ||
                      (v === m || !f
                        ? [Lg(m)]
                        : (function (e) {
                            if (wg(e) === og) return [];
                            var t = Lg(e);
                            return [Og(e), t, Og(t)];
                          })(m)),
                    x = [m].concat(b).reduce(function (e, n) {
                      return e.concat(
                        wg(n) === og
                          ? (function (e, t) {
                              void 0 === t && (t = {});
                              var n = t,
                                i = n.placement,
                                o = n.boundary,
                                a = n.rootBoundary,
                                s = n.padding,
                                r = n.flipVariations,
                                l = n.allowedAutoPlacements,
                                c = void 0 === l ? pg : l,
                                u = Sg(i),
                                d = u
                                  ? r
                                    ? hg
                                    : hg.filter(function (e) {
                                        return Sg(e) === u;
                                      })
                                  : ag,
                                h = d.filter(function (e) {
                                  return c.indexOf(e) >= 0;
                                });
                              0 === h.length && (h = d);
                              var p = h.reduce(function (t, n) {
                                return (
                                  (t[n] = jg(e, {
                                    placement: n,
                                    boundary: o,
                                    rootBoundary: a,
                                    padding: s,
                                  })[wg(n)]),
                                  t
                                );
                              }, {});
                              return Object.keys(p).sort(function (e, t) {
                                return p[e] - p[t];
                              });
                            })(t, {
                              placement: n,
                              boundary: u,
                              rootBoundary: d,
                              padding: c,
                              flipVariations: f,
                              allowedAutoPlacements: g,
                            })
                          : n
                      );
                    }, []),
                    y = t.rects.reference,
                    w = t.rects.popper,
                    S = new Map(),
                    k = !0,
                    A = x[0],
                    C = 0;
                  C < x.length;
                  C++
                ) {
                  var M = x[C],
                    P = wg(M),
                    E = Sg(M) === sg,
                    L = [eg, tg].indexOf(P) >= 0,
                    T = L ? "width" : "height",
                    O = jg(t, {
                      placement: M,
                      boundary: u,
                      rootBoundary: d,
                      altBoundary: h,
                      padding: c,
                    }),
                    R = L ? (E ? ng : ig) : E ? tg : eg;
                  y[T] > w[T] && (R = Lg(R));
                  var I = Lg(R),
                    N = [];
                  if (
                    (a && N.push(O[P] <= 0),
                    r && N.push(O[R] <= 0, O[I] <= 0),
                    N.every(function (e) {
                      return e;
                    }))
                  ) {
                    (A = M), (k = !1);
                    break;
                  }
                  S.set(M, N);
                }
                if (k)
                  for (
                    var _ = function (e) {
                        var t = x.find(function (t) {
                          var n = S.get(t);
                          if (n)
                            return n.slice(0, e).every(function (e) {
                              return e;
                            });
                        });
                        if (t) return (A = t), "break";
                      },
                      D = f ? 3 : 1;
                    D > 0;
                    D--
                  ) {
                    if ("break" === _(D)) break;
                  }
                t.placement !== A &&
                  ((t.modifiersData[i]._skip = !0),
                  (t.placement = A),
                  (t.reset = !0));
              }
            },
            requiresIfExists: ["offset"],
            data: { _skip: !1 },
          },
          Fg,
          Wg,
          {
            name: "hide",
            enabled: !0,
            phase: "main",
            requiresIfExists: ["preventOverflow"],
            fn: function (e) {
              var t = e.state,
                n = e.name,
                i = t.rects.reference,
                o = t.rects.popper,
                a = t.modifiersData.preventOverflow,
                s = jg(t, { elementContext: "reference" }),
                r = jg(t, { altBoundary: !0 }),
                l = Hg(s, i),
                c = Hg(r, o, a),
                u = Gg(l),
                d = Gg(c);
              (t.modifiersData[n] = {
                referenceClippingOffsets: l,
                popperEscapeOffsets: c,
                isReferenceHidden: u,
                hasPopperEscaped: d,
              }),
                (t.attributes.popper = Object.assign({}, t.attributes.popper, {
                  "data-popper-reference-hidden": u,
                  "data-popper-escaped": d,
                }));
            },
          },
        ],
      });
      function Ug(e) {
        return (0, Cc.Ay)("MuiPopper", e);
      }
      (0, jl.A)("MuiPopper", ["root"]);
      const Yg = [
          "anchorEl",
          "children",
          "direction",
          "disablePortal",
          "modifiers",
          "open",
          "placement",
          "popperOptions",
          "popperRef",
          "slotProps",
          "slots",
          "TransitionProps",
          "ownerState",
        ],
        Xg = [
          "anchorEl",
          "children",
          "container",
          "direction",
          "disablePortal",
          "keepMounted",
          "modifiers",
          "open",
          "placement",
          "popperOptions",
          "popperRef",
          "style",
          "transition",
          "slotProps",
          "slots",
        ];
      function Kg(e) {
        return "function" === typeof e ? e() : e;
      }
      function qg(e) {
        return void 0 !== e.nodeType;
      }
      const Zg = {},
        Qg = t.forwardRef(function (e, n) {
          var i;
          const {
              anchorEl: o,
              children: a,
              direction: s,
              disablePortal: r,
              modifiers: l,
              open: c,
              placement: u,
              popperOptions: d,
              popperRef: h,
              slotProps: p = {},
              slots: f = {},
              TransitionProps: g,
            } = e,
            m = (0, Xs.A)(e, Yg),
            v = t.useRef(null),
            b = (0, Ah.A)(v, n),
            x = t.useRef(null),
            y = (0, Ah.A)(x, h),
            w = t.useRef(y);
          (0, Ml.A)(() => {
            w.current = y;
          }, [y]),
            t.useImperativeHandle(h, () => x.current, []);
          const S = (function (e, t) {
              if ("ltr" === t) return e;
              switch (e) {
                case "bottom-end":
                  return "bottom-start";
                case "bottom-start":
                  return "bottom-end";
                case "top-end":
                  return "top-start";
                case "top-start":
                  return "top-end";
                default:
                  return e;
              }
            })(u, s),
            [k, A] = t.useState(S),
            [C, M] = t.useState(Kg(o));
          t.useEffect(() => {
            x.current && x.current.forceUpdate();
          }),
            t.useEffect(() => {
              o && M(Kg(o));
            }, [o]),
            (0, Ml.A)(() => {
              if (!C || !c) return;
              let e = [
                { name: "preventOverflow", options: { altBoundary: r } },
                { name: "flip", options: { altBoundary: r } },
                {
                  name: "onUpdate",
                  enabled: !0,
                  phase: "afterWrite",
                  fn: (e) => {
                    let { state: t } = e;
                    ((e) => {
                      A(e.placement);
                    })(t);
                  },
                },
              ];
              null != l && (e = e.concat(l)),
                d && null != d.modifiers && (e = e.concat(d.modifiers));
              const t = Vg(
                C,
                v.current,
                (0, Ts.A)({ placement: S }, d, { modifiers: e })
              );
              return (
                w.current(t),
                () => {
                  t.destroy(), w.current(null);
                }
              );
            }, [C, r, l, c, d, S]);
          const P = { placement: k };
          null !== g && (P.TransitionProps = g);
          const E = ((e) => {
              const { classes: t } = e;
              return (0, Gl.A)({ root: ["root"] }, Ug, t);
            })(e),
            L = null != (i = f.root) ? i : "div",
            T = Oh({
              elementType: L,
              externalSlotProps: p.root,
              externalForwardedProps: m,
              additionalProps: { role: "tooltip", ref: b },
              ownerState: e,
              className: E.root,
            });
          return (0,
          js.jsx)(L, (0, Ts.A)({}, T, { children: "function" === typeof a ? a(P) : a }));
        }),
        $g = t.forwardRef(function (e, n) {
          const {
              anchorEl: i,
              children: o,
              container: a,
              direction: s = "ltr",
              disablePortal: r = !1,
              keepMounted: l = !1,
              modifiers: c,
              open: u,
              placement: d = "bottom",
              popperOptions: h = Zg,
              popperRef: p,
              style: f,
              transition: g = !1,
              slotProps: m = {},
              slots: v = {},
            } = e,
            b = (0, Xs.A)(e, Xg),
            [x, y] = t.useState(!0);
          if (!l && !u && (!g || x)) return null;
          let w;
          if (a) w = a;
          else if (i) {
            const e = Kg(i);
            w = e && qg(e) ? (0, Jh.A)(e).body : (0, Jh.A)(null).body;
          }
          const S = u || !l || (g && !x) ? void 0 : "none",
            k = g
              ? {
                  in: u,
                  onEnter: () => {
                    y(!1);
                  },
                  onExited: () => {
                    y(!0);
                  },
                }
              : void 0;
          return (0,
          js.jsx)(ap, { disablePortal: r, container: w, children: (0, js.jsx)(Qg, (0, Ts.A)({ anchorEl: i, direction: s, disablePortal: r, modifiers: c, ref: n, open: g ? !x : u, placement: d, popperOptions: h, popperRef: p, slotProps: m, slots: v }, b, { style: (0, Ts.A)({ position: "fixed", top: 0, left: 0, display: S }, f), TransitionProps: k, children: o })) });
        }),
        Jg = [
          "anchorEl",
          "component",
          "components",
          "componentsProps",
          "container",
          "disablePortal",
          "keepMounted",
          "modifiers",
          "open",
          "placement",
          "popperOptions",
          "popperRef",
          "transition",
          "slots",
          "slotProps",
        ],
        em = (0, Ul.Ay)($g, {
          name: "MuiPopper",
          slot: "Root",
          overridesResolver: (e, t) => t.root,
        })({}),
        tm = t.forwardRef(function (e, t) {
          var n;
          const i = (0, Lf.A)(),
            o = (0, Os.b)({ props: e, name: "MuiPopper" }),
            {
              anchorEl: a,
              component: s,
              components: r,
              componentsProps: l,
              container: c,
              disablePortal: u,
              keepMounted: d,
              modifiers: h,
              open: p,
              placement: f,
              popperOptions: g,
              popperRef: m,
              transition: v,
              slots: b,
              slotProps: x,
            } = o,
            y = (0, Xs.A)(o, Jg),
            w =
              null != (n = null == b ? void 0 : b.root)
                ? n
                : null == r
                ? void 0
                : r.Root,
            S = (0, Ts.A)(
              {
                anchorEl: a,
                container: c,
                disablePortal: u,
                keepMounted: d,
                modifiers: h,
                open: p,
                placement: f,
                popperOptions: g,
                popperRef: m,
                transition: v,
              },
              y
            );
          return (0,
          js.jsx)(em, (0, Ts.A)({ as: s, direction: null == i ? void 0 : i.direction, slots: { root: w }, slotProps: null != x ? x : l }, S, { ref: t }));
        }),
        nm = tm;
      var im = n(9488),
        om = n(5420);
      function am(e) {
        return (0, Cc.Ay)("MuiTooltip", e);
      }
      const sm = (0, jl.A)("MuiTooltip", [
          "popper",
          "popperInteractive",
          "popperArrow",
          "popperClose",
          "tooltip",
          "tooltipArrow",
          "touch",
          "tooltipPlacementLeft",
          "tooltipPlacementRight",
          "tooltipPlacementTop",
          "tooltipPlacementBottom",
          "arrow",
        ]),
        rm = [
          "arrow",
          "children",
          "classes",
          "components",
          "componentsProps",
          "describeChild",
          "disableFocusListener",
          "disableHoverListener",
          "disableInteractive",
          "disableTouchListener",
          "enterDelay",
          "enterNextDelay",
          "enterTouchDelay",
          "followCursor",
          "id",
          "leaveDelay",
          "leaveTouchDelay",
          "onClose",
          "onOpen",
          "open",
          "placement",
          "PopperComponent",
          "PopperProps",
          "slotProps",
          "slots",
          "title",
          "TransitionComponent",
          "TransitionProps",
        ];
      const lm = (0, Ul.Ay)(nm, {
          name: "MuiTooltip",
          slot: "Popper",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.popper,
              !n.disableInteractive && t.popperInteractive,
              n.arrow && t.popperArrow,
              !n.open && t.popperClose,
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n, open: i } = e;
          return (0, Ts.A)(
            { zIndex: (t.vars || t).zIndex.tooltip, pointerEvents: "none" },
            !n.disableInteractive && { pointerEvents: "auto" },
            !i && { pointerEvents: "none" },
            n.arrow && {
              ['&[data-popper-placement*="bottom"] .'.concat(sm.arrow)]: {
                top: 0,
                marginTop: "-0.71em",
                "&::before": { transformOrigin: "0 100%" },
              },
              ['&[data-popper-placement*="top"] .'.concat(sm.arrow)]: {
                bottom: 0,
                marginBottom: "-0.71em",
                "&::before": { transformOrigin: "100% 0" },
              },
              ['&[data-popper-placement*="right"] .'.concat(sm.arrow)]: (0,
              Ts.A)(
                {},
                n.isRtl
                  ? { right: 0, marginRight: "-0.71em" }
                  : { left: 0, marginLeft: "-0.71em" },
                {
                  height: "1em",
                  width: "0.71em",
                  "&::before": { transformOrigin: "100% 100%" },
                }
              ),
              ['&[data-popper-placement*="left"] .'.concat(sm.arrow)]: (0,
              Ts.A)(
                {},
                n.isRtl
                  ? { left: 0, marginLeft: "-0.71em" }
                  : { right: 0, marginRight: "-0.71em" },
                {
                  height: "1em",
                  width: "0.71em",
                  "&::before": { transformOrigin: "0 0" },
                }
              ),
            }
          );
        }),
        cm = (0, Ul.Ay)("div", {
          name: "MuiTooltip",
          slot: "Tooltip",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.tooltip,
              n.touch && t.touch,
              n.arrow && t.tooltipArrow,
              t[
                "tooltipPlacement".concat((0, Rc.A)(n.placement.split("-")[0]))
              ],
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          return (0, Ts.A)(
            {
              backgroundColor: t.vars
                ? t.vars.palette.Tooltip.bg
                : (0, Vl.X4)(t.palette.grey[700], 0.92),
              borderRadius: (t.vars || t).shape.borderRadius,
              color: (t.vars || t).palette.common.white,
              fontFamily: t.typography.fontFamily,
              padding: "4px 8px",
              fontSize: t.typography.pxToRem(11),
              maxWidth: 300,
              margin: 2,
              wordWrap: "break-word",
              fontWeight: t.typography.fontWeightMedium,
            },
            n.arrow && { position: "relative", margin: 0 },
            n.touch && {
              padding: "8px 16px",
              fontSize: t.typography.pxToRem(14),
              lineHeight: "".concat(
                ((i = 16 / 14), Math.round(1e5 * i) / 1e5),
                "em"
              ),
              fontWeight: t.typography.fontWeightRegular,
            },
            {
              [".".concat(sm.popper, '[data-popper-placement*="left"] &')]: (0,
              Ts.A)(
                { transformOrigin: "right center" },
                n.isRtl
                  ? (0, Ts.A)(
                      { marginLeft: "14px" },
                      n.touch && { marginLeft: "24px" }
                    )
                  : (0, Ts.A)(
                      { marginRight: "14px" },
                      n.touch && { marginRight: "24px" }
                    )
              ),
              [".".concat(sm.popper, '[data-popper-placement*="right"] &')]: (0,
              Ts.A)(
                { transformOrigin: "left center" },
                n.isRtl
                  ? (0, Ts.A)(
                      { marginRight: "14px" },
                      n.touch && { marginRight: "24px" }
                    )
                  : (0, Ts.A)(
                      { marginLeft: "14px" },
                      n.touch && { marginLeft: "24px" }
                    )
              ),
              [".".concat(sm.popper, '[data-popper-placement*="top"] &')]: (0,
              Ts.A)(
                { transformOrigin: "center bottom", marginBottom: "14px" },
                n.touch && { marginBottom: "24px" }
              ),
              [".".concat(sm.popper, '[data-popper-placement*="bottom"] &')]:
                (0, Ts.A)(
                  { transformOrigin: "center top", marginTop: "14px" },
                  n.touch && { marginTop: "24px" }
                ),
            }
          );
          var i;
        }),
        um = (0, Ul.Ay)("span", {
          name: "MuiTooltip",
          slot: "Arrow",
          overridesResolver: (e, t) => t.arrow,
        })((e) => {
          let { theme: t } = e;
          return {
            overflow: "hidden",
            position: "absolute",
            width: "1em",
            height: "0.71em",
            boxSizing: "border-box",
            color: t.vars
              ? t.vars.palette.Tooltip.bg
              : (0, Vl.X4)(t.palette.grey[700], 0.9),
            "&::before": {
              content: '""',
              margin: "auto",
              display: "block",
              width: "100%",
              height: "100%",
              backgroundColor: "currentColor",
              transform: "rotate(45deg)",
            },
          };
        });
      let dm = !1;
      const hm = new sc.E();
      let pm = { x: 0, y: 0 };
      function fm(e, t) {
        return function (n) {
          for (
            var i = arguments.length, o = new Array(i > 1 ? i - 1 : 0), a = 1;
            a < i;
            a++
          )
            o[a - 1] = arguments[a];
          t && t(n, ...o), e(n, ...o);
        };
      }
      const gm = t.forwardRef(function (e, n) {
          var i, o, a, s, r, l, c, u, d, h, p, f, g, m, v, b, x, y, w;
          const S = (0, Os.b)({ props: e, name: "MuiTooltip" }),
            {
              arrow: k = !1,
              children: A,
              components: C = {},
              componentsProps: M = {},
              describeChild: P = !1,
              disableFocusListener: E = !1,
              disableHoverListener: L = !1,
              disableInteractive: T = !1,
              disableTouchListener: O = !1,
              enterDelay: R = 100,
              enterNextDelay: I = 0,
              enterTouchDelay: N = 700,
              followCursor: _ = !1,
              id: D,
              leaveDelay: z = 0,
              leaveTouchDelay: j = 1500,
              onClose: B,
              onOpen: F,
              open: W,
              placement: H = "bottom",
              PopperComponent: G,
              PopperProps: V = {},
              slotProps: U = {},
              slots: Y = {},
              title: X,
              TransitionComponent: K = $h,
              TransitionProps: q,
            } = S,
            Z = (0, Xs.A)(S, rm),
            Q = t.isValidElement(A) ? A : (0, js.jsx)("span", { children: A }),
            $ = Vh(),
            J = (() => {
              const e = t.useContext(Js);
              return null != e && e;
            })(),
            [ee, te] = t.useState(),
            [ne, ie] = t.useState(null),
            oe = t.useRef(!1),
            ae = T || _,
            se = (0, sc.A)(),
            re = (0, sc.A)(),
            le = (0, sc.A)(),
            ce = (0, sc.A)(),
            [ue, de] = (0, om.A)({
              controlled: W,
              default: !1,
              name: "Tooltip",
              state: "open",
            });
          let he = ue;
          const pe = (0, im.A)(D),
            fe = t.useRef(),
            ge = (0, Xl.A)(() => {
              void 0 !== fe.current &&
                ((document.body.style.WebkitUserSelect = fe.current),
                (fe.current = void 0)),
                ce.clear();
            });
          t.useEffect(() => ge, [ge]);
          const me = (e) => {
              hm.clear(), (dm = !0), de(!0), F && !he && F(e);
            },
            ve = (0, Xl.A)((e) => {
              hm.start(800 + z, () => {
                dm = !1;
              }),
                de(!1),
                B && he && B(e),
                se.start($.transitions.duration.shortest, () => {
                  oe.current = !1;
                });
            }),
            be = (e) => {
              (oe.current && "touchstart" !== e.type) ||
                (ee && ee.removeAttribute("title"),
                re.clear(),
                le.clear(),
                R || (dm && I)
                  ? re.start(dm ? I : R, () => {
                      me(e);
                    })
                  : me(e));
            },
            xe = (e) => {
              re.clear(),
                le.start(z, () => {
                  ve(e);
                });
            },
            {
              isFocusVisibleRef: ye,
              onBlur: we,
              onFocus: Se,
              ref: ke,
            } = (0, Kl.A)(),
            [, Ae] = t.useState(!1),
            Ce = (e) => {
              we(e), !1 === ye.current && (Ae(!1), xe(e));
            },
            Me = (e) => {
              ee || te(e.currentTarget),
                Se(e),
                !0 === ye.current && (Ae(!0), be(e));
            },
            Pe = (e) => {
              oe.current = !0;
              const t = Q.props;
              t.onTouchStart && t.onTouchStart(e);
            },
            Ee = (e) => {
              Pe(e),
                le.clear(),
                se.clear(),
                ge(),
                (fe.current = document.body.style.WebkitUserSelect),
                (document.body.style.WebkitUserSelect = "none"),
                ce.start(N, () => {
                  (document.body.style.WebkitUserSelect = fe.current), be(e);
                });
            },
            Le = (e) => {
              Q.props.onTouchEnd && Q.props.onTouchEnd(e),
                ge(),
                le.start(j, () => {
                  ve(e);
                });
            };
          t.useEffect(() => {
            if (he)
              return (
                document.addEventListener("keydown", e),
                () => {
                  document.removeEventListener("keydown", e);
                }
              );
            function e(e) {
              ("Escape" !== e.key && "Esc" !== e.key) || ve(e);
            }
          }, [ve, he]);
          const Te = (0, Yl.A)(Q.ref, ke, te, n);
          X || 0 === X || (he = !1);
          const Oe = t.useRef(),
            Re = {},
            Ie = "string" === typeof X;
          P
            ? ((Re.title = he || !Ie || L ? null : X),
              (Re["aria-describedby"] = he ? pe : null))
            : ((Re["aria-label"] = Ie ? X : null),
              (Re["aria-labelledby"] = he && !Ie ? pe : null));
          const Ne = (0, Ts.A)(
            {},
            Re,
            Z,
            Q.props,
            {
              className: (0, Rl.A)(Z.className, Q.props.className),
              onTouchStart: Pe,
              ref: Te,
            },
            _
              ? {
                  onMouseMove: (e) => {
                    const t = Q.props;
                    t.onMouseMove && t.onMouseMove(e),
                      (pm = { x: e.clientX, y: e.clientY }),
                      Oe.current && Oe.current.update();
                  },
                }
              : {}
          );
          const _e = {};
          O || ((Ne.onTouchStart = Ee), (Ne.onTouchEnd = Le)),
            L ||
              ((Ne.onMouseOver = fm(be, Ne.onMouseOver)),
              (Ne.onMouseLeave = fm(xe, Ne.onMouseLeave)),
              ae || ((_e.onMouseOver = be), (_e.onMouseLeave = xe))),
            E ||
              ((Ne.onFocus = fm(Me, Ne.onFocus)),
              (Ne.onBlur = fm(Ce, Ne.onBlur)),
              ae || ((_e.onFocus = Me), (_e.onBlur = Ce)));
          const De = t.useMemo(() => {
              var e;
              let t = [
                {
                  name: "arrow",
                  enabled: Boolean(ne),
                  options: { element: ne, padding: 4 },
                },
              ];
              return (
                null != (e = V.popperOptions) &&
                  e.modifiers &&
                  (t = t.concat(V.popperOptions.modifiers)),
                (0, Ts.A)({}, V.popperOptions, { modifiers: t })
              );
            }, [ne, V]),
            ze = (0, Ts.A)({}, S, {
              isRtl: J,
              arrow: k,
              disableInteractive: ae,
              placement: H,
              PopperComponentProp: G,
              touch: oe.current,
            }),
            je = ((e) => {
              const {
                  classes: t,
                  disableInteractive: n,
                  arrow: i,
                  touch: o,
                  placement: a,
                } = e,
                s = {
                  popper: [
                    "popper",
                    !n && "popperInteractive",
                    i && "popperArrow",
                  ],
                  tooltip: [
                    "tooltip",
                    i && "tooltipArrow",
                    o && "touch",
                    "tooltipPlacement".concat((0, Rc.A)(a.split("-")[0])),
                  ],
                  arrow: ["arrow"],
                };
              return (0, Gl.A)(s, am, t);
            })(ze),
            Be = null != (i = null != (o = Y.popper) ? o : C.Popper) ? i : lm,
            Fe =
              null !=
              (a =
                null != (s = null != (r = Y.transition) ? r : C.Transition)
                  ? s
                  : K)
                ? a
                : $h,
            We = null != (l = null != (c = Y.tooltip) ? c : C.Tooltip) ? l : cm,
            He = null != (u = null != (d = Y.arrow) ? d : C.Arrow) ? u : um,
            Ge = Ch(
              Be,
              (0, Ts.A)({}, V, null != (h = U.popper) ? h : M.popper, {
                className: (0, Rl.A)(
                  je.popper,
                  null == V ? void 0 : V.className,
                  null == (p = null != (f = U.popper) ? f : M.popper)
                    ? void 0
                    : p.className
                ),
              }),
              ze
            ),
            Ve = Ch(
              Fe,
              (0, Ts.A)({}, q, null != (g = U.transition) ? g : M.transition),
              ze
            ),
            Ue = Ch(
              We,
              (0, Ts.A)({}, null != (m = U.tooltip) ? m : M.tooltip, {
                className: (0, Rl.A)(
                  je.tooltip,
                  null == (v = null != (b = U.tooltip) ? b : M.tooltip)
                    ? void 0
                    : v.className
                ),
              }),
              ze
            ),
            Ye = Ch(
              He,
              (0, Ts.A)({}, null != (x = U.arrow) ? x : M.arrow, {
                className: (0, Rl.A)(
                  je.arrow,
                  null == (y = null != (w = U.arrow) ? w : M.arrow)
                    ? void 0
                    : y.className
                ),
              }),
              ze
            );
          return (0, js.jsxs)(t.Fragment, {
            children: [
              t.cloneElement(Q, Ne),
              (0, js.jsx)(
                Be,
                (0, Ts.A)(
                  {
                    as: null != G ? G : nm,
                    placement: H,
                    anchorEl: _
                      ? {
                          getBoundingClientRect: () => ({
                            top: pm.y,
                            left: pm.x,
                            right: pm.x,
                            bottom: pm.y,
                            width: 0,
                            height: 0,
                          }),
                        }
                      : ee,
                    popperRef: Oe,
                    open: !!ee && he,
                    id: pe,
                    transition: !0,
                  },
                  _e,
                  Ge,
                  {
                    popperOptions: De,
                    children: (e) => {
                      let { TransitionProps: t } = e;
                      return (0, js.jsx)(
                        Fe,
                        (0, Ts.A)(
                          { timeout: $.transitions.duration.shorter },
                          t,
                          Ve,
                          {
                            children: (0, js.jsxs)(
                              We,
                              (0, Ts.A)({}, Ue, {
                                children: [
                                  X,
                                  k
                                    ? (0, js.jsx)(
                                        He,
                                        (0, Ts.A)({}, Ye, { ref: ie })
                                      )
                                    : null,
                                ],
                              })
                            ),
                          }
                        )
                      );
                    },
                  }
                )
              ),
            ],
          });
        }),
        mm = gm,
        vm = (e) => {
          let {
            name: t,
            value: n,
            trend: i,
            trendPercentage: o,
            boxShadeNumber: a,
            isActive: s,
            toggleGraphView: r,
            textWithValue: l,
            infoIconText: c = "",
          } = e;
          const u = 1 === a ? nd : id,
            { amount: d, symbol: h } = (function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 2;
              e > Math.pow(2, 53) && (e = 0);
              let n = "",
                i = !0;
              "number" !== typeof e && (e = 0),
                e < 0 && ((i = !1), (e = Math.abs(e)));
              let o = e;
              return (
                e >= 1e12
                  ? ((n = "T"), (o = Oa(e / 1e12, t)))
                  : e >= 1e9
                  ? ((n = "B"), (o = Oa(e / 1e9, t)))
                  : e >= 1e6
                  ? ((n = "M"), (o = Oa(e / 1e6, t)))
                  : e >= 1e3
                  ? ((n = "K"), (o = Oa(e / 1e3, t)))
                  : (o = Oa(e, t)),
                { amount: Ta(o), symbol: n, status: i }
              );
            })(Number(n), 2),
            p = Ol("(max-width:600px)");
          return (0, js.jsxs)("div", {
            style: {
              backgroundImage: "url(".concat(u, ")"),
              backgroundRepeat: "no-repeat",
              padding: "16px",
              borderRadius: "16px",
              border: "1px solid rgba(255, 255, 255, 0.04)",
              maxWidth: "590px",
              width: "100%",
              minHeight: "130px",
              backgroundSize: "cover",
              backgroundPosition: "center",
              display: "flex",
              flexDirection: "column",
              justifyContent: "space-between",
            },
            id: "".concat(t, "-box"),
            children: [
              (0, js.jsxs)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: "row",
                  gap: "8px",
                  alignItems: "center",
                },
                children: [
                  (0, js.jsx)(vu, {
                    sx: {
                      fontFamily: "ProximaNovaRegular",
                      fontWeight: 600,
                      fontSize: "18px",
                      lineHeight: "27px",
                    },
                    children: t,
                  }),
                  (null === c || void 0 === c ? void 0 : c.length) > 0 &&
                    (0, js.jsx)(mm, {
                      title: c,
                      placement: "top",
                      enterTouchDelay: 0,
                      children: (0, js.jsx)("img", {
                        src: ld,
                        alt: "info icon",
                        height: "24px",
                        width: "24px",
                      }),
                    }),
                ],
              }),
              (0, js.jsxs)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: "row",
                  justifyContent: "space-between",
                  flexWrap: "wrap",
                },
                children: [
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      gap: p ? "2px" : "4px",
                      alignItems: "center",
                    },
                    children: [
                      (0, js.jsxs)(vu, {
                        sx: {
                          fontFamily: "ProximaNovaRegular",
                          fontWeight: 700,
                          fontSize: p ? "18px" : "24px",
                          lineHeight: "36px",
                        },
                        children: [
                          d,
                          (0, js.jsxs)("span", {
                            style: { fontSize: p ? "18px" : "20px" },
                            children: [h, " ", l],
                          }),
                        ],
                      }),
                      i &&
                        (0, js.jsx)("img", {
                          src: "Up" === i ? od : ad,
                          alt: "trend icon",
                          height: p ? "18px" : "24px",
                          width: p ? "18px" : "24px",
                        }),
                      i &&
                        (0, js.jsxs)(vu, {
                          sx: {
                            fontFamily: "ProximaNovaRegular",
                            fontWeight: 400,
                            fontSize: p ? "12px" : "18px",
                            lineHeight: "27px",
                            color:
                              "Up" === i
                                ? "rgba(0, 220, 114, 1)"
                                : "rgba(255, 80, 74, 1)",
                          },
                          children: [o, "%"],
                        }),
                    ],
                  }),
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      gap: "4px",
                      alignItems: "center",
                      backgroundColor: s
                        ? "rgba(255, 255, 255, 0.2)"
                        : "rgba(255, 255, 255, 0.06)",
                      width: p ? "80px" : "108px",
                      height: p ? "35px" : "44px",
                      borderRadius: "32px",
                      justifyContent: "center",
                      cursor: s ? "default" : "pointer",
                      "&:hover": {
                        backgroundColor: s
                          ? "rgba(255, 255, 255, 0.2)"
                          : "rgba(255, 255, 255, 0.1)",
                      },
                    },
                    onClick: r,
                    children: [
                      (0, js.jsx)("img", {
                        src: sd,
                        alt: "graph icon",
                        height: 24,
                        width: 24,
                      }),
                      (0, js.jsx)(vu, {
                        sx: {
                          fontFamily: "ProximaNovaRegular",
                          fontWeight: 400,
                          fontSize: p ? "12px" : "16px",
                          lineHeight: "24px",
                        },
                        children: "Graph",
                      }),
                    ],
                  }),
                ],
              }),
            ],
          });
        };
      n(2086);
      function bm(e) {
        return (0, Cc.Ay)("MuiToggleButtonGroup", e);
      }
      const xm = (0, jl.A)("MuiToggleButtonGroup", [
        "root",
        "selected",
        "horizontal",
        "vertical",
        "disabled",
        "grouped",
        "groupedHorizontal",
        "groupedVertical",
        "fullWidth",
        "firstButton",
        "lastButton",
        "middleButton",
      ]);
      const ym = t.createContext({});
      const wm = t.createContext(void 0);
      function Sm(e) {
        return (0, Cc.Ay)("MuiToggleButton", e);
      }
      const km = (0, jl.A)("MuiToggleButton", [
          "root",
          "disabled",
          "selected",
          "standard",
          "primary",
          "secondary",
          "sizeSmall",
          "sizeMedium",
          "sizeLarge",
          "fullWidth",
        ]),
        Am = [
          "children",
          "className",
          "color",
          "disabled",
          "exclusive",
          "fullWidth",
          "onChange",
          "orientation",
          "size",
          "value",
        ],
        Cm = (0, Ul.Ay)("div", {
          name: "MuiToggleButtonGroup",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              { ["& .".concat(xm.grouped)]: t.grouped },
              {
                ["& .".concat(xm.grouped)]:
                  t["grouped".concat((0, Rc.A)(n.orientation))],
              },
              { ["& .".concat(xm.firstButton)]: t.firstButton },
              { ["& .".concat(xm.lastButton)]: t.lastButton },
              { ["& .".concat(xm.middleButton)]: t.middleButton },
              t.root,
              "vertical" === n.orientation && t.vertical,
              n.fullWidth && t.fullWidth,
            ];
          },
        })((e) => {
          let { ownerState: t, theme: n } = e;
          return (0, Ts.A)(
            {
              display: "inline-flex",
              borderRadius: (n.vars || n).shape.borderRadius,
            },
            "vertical" === t.orientation && { flexDirection: "column" },
            t.fullWidth && { width: "100%" },
            {
              ["& .".concat(xm.grouped)]: (0, Ts.A)(
                {},
                "horizontal" === t.orientation
                  ? {
                      ["&."
                        .concat(xm.selected, " + .")
                        .concat(xm.grouped, ".")
                        .concat(xm.selected)]: { borderLeft: 0, marginLeft: 0 },
                    }
                  : {
                      ["&."
                        .concat(xm.selected, " + .")
                        .concat(xm.grouped, ".")
                        .concat(xm.selected)]: { borderTop: 0, marginTop: 0 },
                    }
              ),
            },
            "horizontal" === t.orientation
              ? {
                  ["& ."
                    .concat(xm.firstButton, ",& .")
                    .concat(xm.middleButton)]: {
                    borderTopRightRadius: 0,
                    borderBottomRightRadius: 0,
                  },
                  ["& .".concat(xm.lastButton, ",& .").concat(xm.middleButton)]:
                    {
                      marginLeft: -1,
                      borderLeft: "1px solid transparent",
                      borderTopLeftRadius: 0,
                      borderBottomLeftRadius: 0,
                    },
                }
              : {
                  ["& ."
                    .concat(xm.firstButton, ",& .")
                    .concat(xm.middleButton)]: {
                    borderBottomLeftRadius: 0,
                    borderBottomRightRadius: 0,
                  },
                  ["& .".concat(xm.lastButton, ",& .").concat(xm.middleButton)]:
                    {
                      marginTop: -1,
                      borderTop: "1px solid transparent",
                      borderTopLeftRadius: 0,
                      borderTopRightRadius: 0,
                    },
                },
            "horizontal" === t.orientation
              ? {
                  ["& ."
                    .concat(xm.lastButton, ".")
                    .concat(km.disabled, ",& .")
                    .concat(xm.middleButton, ".")
                    .concat(km.disabled)]: {
                    borderLeft: "1px solid transparent",
                  },
                }
              : {
                  ["& ."
                    .concat(xm.lastButton, ".")
                    .concat(km.disabled, ",& .")
                    .concat(xm.middleButton, ".")
                    .concat(km.disabled)]: {
                    borderTop: "1px solid transparent",
                  },
                }
          );
        }),
        Mm = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiToggleButtonGroup" }),
            {
              children: o,
              className: a,
              color: s = "standard",
              disabled: r = !1,
              exclusive: l = !1,
              fullWidth: c = !1,
              onChange: u,
              orientation: d = "horizontal",
              size: h = "medium",
              value: p,
            } = i,
            f = (0, Xs.A)(i, Am),
            g = (0, Ts.A)({}, i, {
              disabled: r,
              fullWidth: c,
              orientation: d,
              size: h,
            }),
            m = ((e) => {
              const {
                  classes: t,
                  orientation: n,
                  fullWidth: i,
                  disabled: o,
                } = e,
                a = {
                  root: [
                    "root",
                    "vertical" === n && "vertical",
                    i && "fullWidth",
                  ],
                  grouped: [
                    "grouped",
                    "grouped".concat((0, Rc.A)(n)),
                    o && "disabled",
                  ],
                  firstButton: ["firstButton"],
                  lastButton: ["lastButton"],
                  middleButton: ["middleButton"],
                };
              return (0, Gl.A)(a, bm, t);
            })(g),
            v = t.useCallback(
              (e, t) => {
                if (!u) return;
                const n = p && p.indexOf(t);
                let i;
                p && n >= 0
                  ? ((i = p.slice()), i.splice(n, 1))
                  : (i = p ? p.concat(t) : [t]),
                  u(e, i);
              },
              [u, p]
            ),
            b = t.useCallback(
              (e, t) => {
                u && u(e, p === t ? null : t);
              },
              [u, p]
            ),
            x = t.useMemo(
              () => ({
                className: m.grouped,
                onChange: l ? b : v,
                value: p,
                size: h,
                fullWidth: c,
                color: s,
                disabled: r,
              }),
              [m.grouped, l, b, v, p, h, c, s, r]
            ),
            y = (function (e) {
              return t.Children.toArray(e).filter((e) => t.isValidElement(e));
            })(o),
            w = y.length,
            S = (e) => {
              const t = 0 === e,
                n = e === w - 1;
              return t && n
                ? ""
                : t
                ? m.firstButton
                : n
                ? m.lastButton
                : m.middleButton;
            };
          return (0,
          js.jsx)(Cm, (0, Ts.A)({ role: "group", className: (0, Rl.A)(m.root, a), ref: n, ownerState: g }, f, { children: (0, js.jsx)(ym.Provider, { value: x, children: y.map((e, t) => (0, js.jsx)(wm.Provider, { value: S(t), children: e }, t)) }) }));
        }),
        Pm = Mm;
      var Em = n(7868),
        Lm = n(1188);
      function Tm(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return (0, Lm.A)(e, t, n);
      }
      function Om(e) {
        if (e.type) return e;
        if ("#" === e.charAt(0))
          return Om(
            (function (e) {
              e = e.slice(1);
              const t = new RegExp(
                ".{1,".concat(e.length >= 6 ? 2 : 1, "}"),
                "g"
              );
              let n = e.match(t);
              return (
                n && 1 === n[0].length && (n = n.map((e) => e + e)),
                n
                  ? "rgb"
                      .concat(4 === n.length ? "a" : "", "(")
                      .concat(
                        n
                          .map((e, t) =>
                            t < 3
                              ? parseInt(e, 16)
                              : Math.round((parseInt(e, 16) / 255) * 1e3) / 1e3
                          )
                          .join(", "),
                        ")"
                      )
                  : ""
              );
            })(e)
          );
        const t = e.indexOf("("),
          n = e.substring(0, t);
        if (-1 === ["rgb", "rgba", "hsl", "hsla", "color"].indexOf(n))
          throw new Error((0, Em.A)(9, e));
        let i,
          o = e.substring(t + 1, e.length - 1);
        if ("color" === n) {
          if (
            ((o = o.split(" ")),
            (i = o.shift()),
            4 === o.length && "/" === o[3].charAt(0) && (o[3] = o[3].slice(1)),
            -1 ===
              [
                "srgb",
                "display-p3",
                "a98-rgb",
                "prophoto-rgb",
                "rec-2020",
              ].indexOf(i))
          )
            throw new Error((0, Em.A)(10, i));
        } else o = o.split(",");
        return (
          (o = o.map((e) => parseFloat(e))),
          { type: n, values: o, colorSpace: i }
        );
      }
      function Rm(e) {
        const { type: t, colorSpace: n } = e;
        let { values: i } = e;
        return (
          -1 !== t.indexOf("rgb")
            ? (i = i.map((e, t) => (t < 3 ? parseInt(e, 10) : e)))
            : -1 !== t.indexOf("hsl") &&
              ((i[1] = "".concat(i[1], "%")), (i[2] = "".concat(i[2], "%"))),
          (i =
            -1 !== t.indexOf("color")
              ? "".concat(n, " ").concat(i.join(" "))
              : "".concat(i.join(", "))),
          "".concat(t, "(").concat(i, ")")
        );
      }
      function Im(e, t) {
        return (
          (e = Om(e)),
          (t = Tm(t)),
          ("rgb" !== e.type && "hsl" !== e.type) || (e.type += "a"),
          "color" === e.type
            ? (e.values[3] = "/".concat(t))
            : (e.values[3] = t),
          Rm(e)
        );
      }
      function Nm(e, t) {
        return (
          void 0 !== t &&
          void 0 !== e &&
          (Array.isArray(t) ? t.indexOf(e) >= 0 : e === t)
        );
      }
      const _m = ["value"],
        Dm = [
          "children",
          "className",
          "color",
          "disabled",
          "disableFocusRipple",
          "fullWidth",
          "onChange",
          "onClick",
          "selected",
          "size",
          "value",
        ],
        zm = (0, Ul.Ay)(Oc, {
          name: "MuiToggleButton",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [t.root, t["size".concat((0, Rc.A)(n.size))]];
          },
        })((e) => {
          let t,
            { theme: n, ownerState: i } = e,
            o =
              "standard" === i.color
                ? n.palette.text.primary
                : n.palette[i.color].main;
          return (
            n.vars &&
              ((o =
                "standard" === i.color
                  ? n.vars.palette.text.primary
                  : n.vars.palette[i.color].main),
              (t =
                "standard" === i.color
                  ? n.vars.palette.text.primaryChannel
                  : n.vars.palette[i.color].mainChannel)),
            (0, Ts.A)(
              {},
              n.typography.button,
              {
                borderRadius: (n.vars || n).shape.borderRadius,
                padding: 11,
                border: "1px solid ".concat((n.vars || n).palette.divider),
                color: (n.vars || n).palette.action.active,
              },
              i.fullWidth && { width: "100%" },
              {
                ["&.".concat(km.disabled)]: {
                  color: (n.vars || n).palette.action.disabled,
                  border: "1px solid ".concat(
                    (n.vars || n).palette.action.disabledBackground
                  ),
                },
                "&:hover": {
                  textDecoration: "none",
                  backgroundColor: n.vars
                    ? "rgba("
                        .concat(n.vars.palette.text.primaryChannel, " / ")
                        .concat(n.vars.palette.action.hoverOpacity, ")")
                    : Im(n.palette.text.primary, n.palette.action.hoverOpacity),
                  "@media (hover: none)": { backgroundColor: "transparent" },
                },
                ["&.".concat(km.selected)]: {
                  color: o,
                  backgroundColor: n.vars
                    ? "rgba("
                        .concat(t, " / ")
                        .concat(n.vars.palette.action.selectedOpacity, ")")
                    : Im(o, n.palette.action.selectedOpacity),
                  "&:hover": {
                    backgroundColor: n.vars
                      ? "rgba("
                          .concat(t, " / calc(")
                          .concat(n.vars.palette.action.selectedOpacity, " + ")
                          .concat(n.vars.palette.action.hoverOpacity, "))")
                      : Im(
                          o,
                          n.palette.action.selectedOpacity +
                            n.palette.action.hoverOpacity
                        ),
                    "@media (hover: none)": {
                      backgroundColor: n.vars
                        ? "rgba("
                            .concat(t, " / ")
                            .concat(n.vars.palette.action.selectedOpacity, ")")
                        : Im(o, n.palette.action.selectedOpacity),
                    },
                  },
                },
              },
              "small" === i.size && {
                padding: 7,
                fontSize: n.typography.pxToRem(13),
              },
              "large" === i.size && {
                padding: 15,
                fontSize: n.typography.pxToRem(15),
              }
            )
          );
        }),
        jm = t.forwardRef(function (e, n) {
          const i = t.useContext(ym),
            { value: o } = i,
            a = (0, Xs.A)(i, _m),
            s = t.useContext(wm),
            r = (0, Pl.A)((0, Ts.A)({}, a, { selected: Nm(e.value, o) }), e),
            l = (0, Os.b)({ props: r, name: "MuiToggleButton" }),
            {
              children: c,
              className: u,
              color: d = "standard",
              disabled: h = !1,
              disableFocusRipple: p = !1,
              fullWidth: f = !1,
              onChange: g,
              onClick: m,
              selected: v,
              size: b = "medium",
              value: x,
            } = l,
            y = (0, Xs.A)(l, Dm),
            w = (0, Ts.A)({}, l, {
              color: d,
              disabled: h,
              disableFocusRipple: p,
              fullWidth: f,
              size: b,
            }),
            S = ((e) => {
              const {
                  classes: t,
                  fullWidth: n,
                  selected: i,
                  disabled: o,
                  size: a,
                  color: s,
                } = e,
                r = {
                  root: [
                    "root",
                    i && "selected",
                    o && "disabled",
                    n && "fullWidth",
                    "size".concat((0, Rc.A)(a)),
                    s,
                  ],
                };
              return (0, Gl.A)(r, Sm, t);
            })(w),
            k = s || "";
          return (0, js.jsx)(
            zm,
            (0, Ts.A)(
              {
                className: (0, Rl.A)(a.className, S.root, u, k),
                disabled: h,
                focusRipple: !p,
                ref: n,
                onClick: (e) => {
                  (m && (m(e, x), e.defaultPrevented)) || (g && g(e, x));
                },
                onChange: g,
                value: x,
                ownerState: w,
                "aria-pressed": v,
              },
              y,
              { children: c }
            )
          );
        }),
        Bm = jm,
        Fm = (e) => {
          let { handleSelectTime: n, chartTime: i } = e;
          const o = Ol(Vh().breakpoints.down("sm")),
            [a, s] = t.useState(i);
          t.useEffect(() => {
            s(i);
          }, [i]);
          const r = (0, Ul.Ay)(Bm, {
              shouldForwardProp: (e) => "isMobile" !== e,
            })((e) => {
              let { isMobile: t, disabled: n } = e;
              return {
                border: "1px solid rgba(255, 255, 255, 0.06) !important",
                fontFamily: "Roboto",
                fontSize: t ? "10px" : "16px",
                fontWeight: "500",
                color: n
                  ? "rgba(255, 255, 255, 0.3)"
                  : "rgba(255, 255, 255, 1)",
                backgroundColor: "rgba(9, 9, 10, 1)",
                padding: "10px 14px",
                width: "max-content",
                height: "max-content",
                textTransform: "none",
                "&.Mui-selected, &.Mui-selected:hover": {
                  color: "rgba(0, 220, 114, 1)",
                  backgroundColor: "rgba(0, 220, 114, 0.1)",
                  border: "1px solid rgba(0, 220, 114, 0.2) !important",
                },
              };
            }),
            l = (0, Ul.Ay)(Pm)((e) => {
              let { theme: t } = e;
              return {
                "& .MuiToggleButtonGroup-grouped": {
                  margin: t.spacing(0.5),
                  border: 0,
                  "&.Mui-disabled": { border: 0 },
                  "&:not(:first-of-type)": { borderRadius: "8px" },
                  "&:first-of-type": { borderRadius: "8px" },
                },
              };
            });
          return (0, js.jsx)("div", {
            children: (0, js.jsx)(Su, {
              elevation: 0,
              sx: {
                display: "flex",
                flexWrap: "wrap",
                backgroundColor: "transparent",
              },
              children: (0, js.jsxs)(l, {
                size: "small",
                value: a,
                exclusive: !0,
                onChange: (e, t) => {
                  null !== t && (s(t), n(t));
                },
                "aria-label": "text alignment",
                children: [
                  (0, js.jsx)(r, {
                    value: "7days",
                    isMobile: o,
                    children: "7d",
                  }),
                  (0, js.jsx)(r, {
                    value: "1month",
                    isMobile: o,
                    children: "1m",
                  }),
                  (0, js.jsx)(r, {
                    value: "alltime",
                    isMobile: o,
                    children: "All Time",
                  }),
                ],
              }),
            }),
          });
        };
      function Wm(e) {
        return (e + 0.5) | 0;
      }
      const Hm = (e, t, n) => Math.max(Math.min(e, n), t);
      function Gm(e) {
        return Hm(Wm(2.55 * e), 0, 255);
      }
      function Vm(e) {
        return Hm(Wm(255 * e), 0, 255);
      }
      function Um(e) {
        return Hm(Wm(e / 2.55) / 100, 0, 1);
      }
      function Ym(e) {
        return Hm(Wm(100 * e), 0, 100);
      }
      const Xm = {
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          6: 6,
          7: 7,
          8: 8,
          9: 9,
          A: 10,
          B: 11,
          C: 12,
          D: 13,
          E: 14,
          F: 15,
          a: 10,
          b: 11,
          c: 12,
          d: 13,
          e: 14,
          f: 15,
        },
        Km = [..."0123456789ABCDEF"],
        qm = (e) => Km[15 & e],
        Zm = (e) => Km[(240 & e) >> 4] + Km[15 & e],
        Qm = (e) => (240 & e) >> 4 === (15 & e);
      function $m(e) {
        var t = ((e) => Qm(e.r) && Qm(e.g) && Qm(e.b) && Qm(e.a))(e) ? qm : Zm;
        return e
          ? "#" +
              t(e.r) +
              t(e.g) +
              t(e.b) +
              ((e, t) => (e < 255 ? t(e) : ""))(e.a, t)
          : void 0;
      }
      const Jm =
        /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
      function ev(e, t, n) {
        const i = t * Math.min(n, 1 - n),
          o = function (t) {
            let o =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : (t + e / 30) % 12;
            return n - i * Math.max(Math.min(o - 3, 9 - o, 1), -1);
          };
        return [o(0), o(8), o(4)];
      }
      function tv(e, t, n) {
        const i = function (i) {
          let o =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : (i + e / 60) % 6;
          return n - n * t * Math.max(Math.min(o, 4 - o, 1), 0);
        };
        return [i(5), i(3), i(1)];
      }
      function nv(e, t, n) {
        const i = ev(e, 1, 0.5);
        let o;
        for (
          t + n > 1 && ((o = 1 / (t + n)), (t *= o), (n *= o)), o = 0;
          o < 3;
          o++
        )
          (i[o] *= 1 - t - n), (i[o] += t);
        return i;
      }
      function iv(e) {
        const t = e.r / 255,
          n = e.g / 255,
          i = e.b / 255,
          o = Math.max(t, n, i),
          a = Math.min(t, n, i),
          s = (o + a) / 2;
        let r, l, c;
        return (
          o !== a &&
            ((c = o - a),
            (l = s > 0.5 ? c / (2 - o - a) : c / (o + a)),
            (r = (function (e, t, n, i, o) {
              return e === o
                ? (t - n) / i + (t < n ? 6 : 0)
                : t === o
                ? (n - e) / i + 2
                : (e - t) / i + 4;
            })(t, n, i, c, o)),
            (r = 60 * r + 0.5)),
          [0 | r, l || 0, s]
        );
      }
      function ov(e, t, n, i) {
        return (Array.isArray(t) ? e(t[0], t[1], t[2]) : e(t, n, i)).map(Vm);
      }
      function av(e, t, n) {
        return ov(ev, e, t, n);
      }
      function sv(e) {
        return ((e % 360) + 360) % 360;
      }
      function rv(e) {
        const t = Jm.exec(e);
        let n,
          i = 255;
        if (!t) return;
        t[5] !== n && (i = t[6] ? Gm(+t[5]) : Vm(+t[5]));
        const o = sv(+t[2]),
          a = +t[3] / 100,
          s = +t[4] / 100;
        return (
          (n =
            "hwb" === t[1]
              ? (function (e, t, n) {
                  return ov(nv, e, t, n);
                })(o, a, s)
              : "hsv" === t[1]
              ? (function (e, t, n) {
                  return ov(tv, e, t, n);
                })(o, a, s)
              : av(o, a, s)),
          { r: n[0], g: n[1], b: n[2], a: i }
        );
      }
      const lv = {
          x: "dark",
          Z: "light",
          Y: "re",
          X: "blu",
          W: "gr",
          V: "medium",
          U: "slate",
          A: "ee",
          T: "ol",
          S: "or",
          B: "ra",
          C: "lateg",
          D: "ights",
          R: "in",
          Q: "turquois",
          E: "hi",
          P: "ro",
          O: "al",
          N: "le",
          M: "de",
          L: "yello",
          F: "en",
          K: "ch",
          G: "arks",
          H: "ea",
          I: "ightg",
          J: "wh",
        },
        cv = {
          OiceXe: "f0f8ff",
          antiquewEte: "faebd7",
          aqua: "ffff",
          aquamarRe: "7fffd4",
          azuY: "f0ffff",
          beige: "f5f5dc",
          bisque: "ffe4c4",
          black: "0",
          blanKedOmond: "ffebcd",
          Xe: "ff",
          XeviTet: "8a2be2",
          bPwn: "a52a2a",
          burlywood: "deb887",
          caMtXe: "5f9ea0",
          KartYuse: "7fff00",
          KocTate: "d2691e",
          cSO: "ff7f50",
          cSnflowerXe: "6495ed",
          cSnsilk: "fff8dc",
          crimson: "dc143c",
          cyan: "ffff",
          xXe: "8b",
          xcyan: "8b8b",
          xgTMnPd: "b8860b",
          xWay: "a9a9a9",
          xgYF: "6400",
          xgYy: "a9a9a9",
          xkhaki: "bdb76b",
          xmagFta: "8b008b",
          xTivegYF: "556b2f",
          xSange: "ff8c00",
          xScEd: "9932cc",
          xYd: "8b0000",
          xsOmon: "e9967a",
          xsHgYF: "8fbc8f",
          xUXe: "483d8b",
          xUWay: "2f4f4f",
          xUgYy: "2f4f4f",
          xQe: "ced1",
          xviTet: "9400d3",
          dAppRk: "ff1493",
          dApskyXe: "bfff",
          dimWay: "696969",
          dimgYy: "696969",
          dodgerXe: "1e90ff",
          fiYbrick: "b22222",
          flSOwEte: "fffaf0",
          foYstWAn: "228b22",
          fuKsia: "ff00ff",
          gaRsbSo: "dcdcdc",
          ghostwEte: "f8f8ff",
          gTd: "ffd700",
          gTMnPd: "daa520",
          Way: "808080",
          gYF: "8000",
          gYFLw: "adff2f",
          gYy: "808080",
          honeyMw: "f0fff0",
          hotpRk: "ff69b4",
          RdianYd: "cd5c5c",
          Rdigo: "4b0082",
          ivSy: "fffff0",
          khaki: "f0e68c",
          lavFMr: "e6e6fa",
          lavFMrXsh: "fff0f5",
          lawngYF: "7cfc00",
          NmoncEffon: "fffacd",
          ZXe: "add8e6",
          ZcSO: "f08080",
          Zcyan: "e0ffff",
          ZgTMnPdLw: "fafad2",
          ZWay: "d3d3d3",
          ZgYF: "90ee90",
          ZgYy: "d3d3d3",
          ZpRk: "ffb6c1",
          ZsOmon: "ffa07a",
          ZsHgYF: "20b2aa",
          ZskyXe: "87cefa",
          ZUWay: "778899",
          ZUgYy: "778899",
          ZstAlXe: "b0c4de",
          ZLw: "ffffe0",
          lime: "ff00",
          limegYF: "32cd32",
          lRF: "faf0e6",
          magFta: "ff00ff",
          maPon: "800000",
          VaquamarRe: "66cdaa",
          VXe: "cd",
          VScEd: "ba55d3",
          VpurpN: "9370db",
          VsHgYF: "3cb371",
          VUXe: "7b68ee",
          VsprRggYF: "fa9a",
          VQe: "48d1cc",
          VviTetYd: "c71585",
          midnightXe: "191970",
          mRtcYam: "f5fffa",
          mistyPse: "ffe4e1",
          moccasR: "ffe4b5",
          navajowEte: "ffdead",
          navy: "80",
          Tdlace: "fdf5e6",
          Tive: "808000",
          TivedBb: "6b8e23",
          Sange: "ffa500",
          SangeYd: "ff4500",
          ScEd: "da70d6",
          pOegTMnPd: "eee8aa",
          pOegYF: "98fb98",
          pOeQe: "afeeee",
          pOeviTetYd: "db7093",
          papayawEp: "ffefd5",
          pHKpuff: "ffdab9",
          peru: "cd853f",
          pRk: "ffc0cb",
          plum: "dda0dd",
          powMrXe: "b0e0e6",
          purpN: "800080",
          YbeccapurpN: "663399",
          Yd: "ff0000",
          Psybrown: "bc8f8f",
          PyOXe: "4169e1",
          saddNbPwn: "8b4513",
          sOmon: "fa8072",
          sandybPwn: "f4a460",
          sHgYF: "2e8b57",
          sHshell: "fff5ee",
          siFna: "a0522d",
          silver: "c0c0c0",
          skyXe: "87ceeb",
          UXe: "6a5acd",
          UWay: "708090",
          UgYy: "708090",
          snow: "fffafa",
          sprRggYF: "ff7f",
          stAlXe: "4682b4",
          tan: "d2b48c",
          teO: "8080",
          tEstN: "d8bfd8",
          tomato: "ff6347",
          Qe: "40e0d0",
          viTet: "ee82ee",
          JHt: "f5deb3",
          wEte: "ffffff",
          wEtesmoke: "f5f5f5",
          Lw: "ffff00",
          LwgYF: "9acd32",
        };
      let uv;
      function dv(e) {
        uv ||
          ((uv = (function () {
            const e = {},
              t = Object.keys(cv),
              n = Object.keys(lv);
            let i, o, a, s, r;
            for (i = 0; i < t.length; i++) {
              for (s = r = t[i], o = 0; o < n.length; o++)
                (a = n[o]), (r = r.replace(a, lv[a]));
              (a = parseInt(cv[s], 16)),
                (e[r] = [(a >> 16) & 255, (a >> 8) & 255, 255 & a]);
            }
            return e;
          })()),
          (uv.transparent = [0, 0, 0, 0]));
        const t = uv[e.toLowerCase()];
        return (
          t && { r: t[0], g: t[1], b: t[2], a: 4 === t.length ? t[3] : 255 }
        );
      }
      const hv =
        /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
      const pv = (e) =>
          e <= 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - 0.055,
        fv = (e) =>
          e <= 0.04045 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4);
      function gv(e, t, n) {
        if (e) {
          let i = iv(e);
          (i[t] = Math.max(0, Math.min(i[t] + i[t] * n, 0 === t ? 360 : 1))),
            (i = av(i)),
            (e.r = i[0]),
            (e.g = i[1]),
            (e.b = i[2]);
        }
      }
      function mv(e, t) {
        return e ? Object.assign(t || {}, e) : e;
      }
      function vv(e) {
        var t = { r: 0, g: 0, b: 0, a: 255 };
        return (
          Array.isArray(e)
            ? e.length >= 3 &&
              ((t = { r: e[0], g: e[1], b: e[2], a: 255 }),
              e.length > 3 && (t.a = Vm(e[3])))
            : ((t = mv(e, { r: 0, g: 0, b: 0, a: 1 })).a = Vm(t.a)),
          t
        );
      }
      function bv(e) {
        return "r" === e.charAt(0)
          ? (function (e) {
              const t = hv.exec(e);
              let n,
                i,
                o,
                a = 255;
              if (t) {
                if (t[7] !== n) {
                  const e = +t[7];
                  a = t[8] ? Gm(e) : Hm(255 * e, 0, 255);
                }
                return (
                  (n = +t[1]),
                  (i = +t[3]),
                  (o = +t[5]),
                  (n = 255 & (t[2] ? Gm(n) : Hm(n, 0, 255))),
                  (i = 255 & (t[4] ? Gm(i) : Hm(i, 0, 255))),
                  (o = 255 & (t[6] ? Gm(o) : Hm(o, 0, 255))),
                  { r: n, g: i, b: o, a: a }
                );
              }
            })(e)
          : rv(e);
      }
      class xv {
        constructor(e) {
          if (e instanceof xv) return e;
          const t = typeof e;
          let n;
          "object" === t
            ? (n = vv(e))
            : "string" === t &&
              (n =
                (function (e) {
                  var t,
                    n = e.length;
                  return (
                    "#" === e[0] &&
                      (4 === n || 5 === n
                        ? (t = {
                            r: 255 & (17 * Xm[e[1]]),
                            g: 255 & (17 * Xm[e[2]]),
                            b: 255 & (17 * Xm[e[3]]),
                            a: 5 === n ? 17 * Xm[e[4]] : 255,
                          })
                        : (7 !== n && 9 !== n) ||
                          (t = {
                            r: (Xm[e[1]] << 4) | Xm[e[2]],
                            g: (Xm[e[3]] << 4) | Xm[e[4]],
                            b: (Xm[e[5]] << 4) | Xm[e[6]],
                            a: 9 === n ? (Xm[e[7]] << 4) | Xm[e[8]] : 255,
                          })),
                    t
                  );
                })(e) ||
                dv(e) ||
                bv(e)),
            (this._rgb = n),
            (this._valid = !!n);
        }
        get valid() {
          return this._valid;
        }
        get rgb() {
          var e = mv(this._rgb);
          return e && (e.a = Um(e.a)), e;
        }
        set rgb(e) {
          this._rgb = vv(e);
        }
        rgbString() {
          return this._valid
            ? (e = this._rgb) &&
                (e.a < 255
                  ? "rgba("
                      .concat(e.r, ", ")
                      .concat(e.g, ", ")
                      .concat(e.b, ", ")
                      .concat(Um(e.a), ")")
                  : "rgb(".concat(e.r, ", ").concat(e.g, ", ").concat(e.b, ")"))
            : void 0;
          var e;
        }
        hexString() {
          return this._valid ? $m(this._rgb) : void 0;
        }
        hslString() {
          return this._valid
            ? (function (e) {
                if (!e) return;
                const t = iv(e),
                  n = t[0],
                  i = Ym(t[1]),
                  o = Ym(t[2]);
                return e.a < 255
                  ? "hsla("
                      .concat(n, ", ")
                      .concat(i, "%, ")
                      .concat(o, "%, ")
                      .concat(Um(e.a), ")")
                  : "hsl(".concat(n, ", ").concat(i, "%, ").concat(o, "%)");
              })(this._rgb)
            : void 0;
        }
        mix(e, t) {
          if (e) {
            const n = this.rgb,
              i = e.rgb;
            let o;
            const a = t === o ? 0.5 : t,
              s = 2 * a - 1,
              r = n.a - i.a,
              l = ((s * r === -1 ? s : (s + r) / (1 + s * r)) + 1) / 2;
            (o = 1 - l),
              (n.r = 255 & (l * n.r + o * i.r + 0.5)),
              (n.g = 255 & (l * n.g + o * i.g + 0.5)),
              (n.b = 255 & (l * n.b + o * i.b + 0.5)),
              (n.a = a * n.a + (1 - a) * i.a),
              (this.rgb = n);
          }
          return this;
        }
        interpolate(e, t) {
          return (
            e &&
              (this._rgb = (function (e, t, n) {
                const i = fv(Um(e.r)),
                  o = fv(Um(e.g)),
                  a = fv(Um(e.b));
                return {
                  r: Vm(pv(i + n * (fv(Um(t.r)) - i))),
                  g: Vm(pv(o + n * (fv(Um(t.g)) - o))),
                  b: Vm(pv(a + n * (fv(Um(t.b)) - a))),
                  a: e.a + n * (t.a - e.a),
                };
              })(this._rgb, e._rgb, t)),
            this
          );
        }
        clone() {
          return new xv(this.rgb);
        }
        alpha(e) {
          return (this._rgb.a = Vm(e)), this;
        }
        clearer(e) {
          return (this._rgb.a *= 1 - e), this;
        }
        greyscale() {
          const e = this._rgb,
            t = Wm(0.3 * e.r + 0.59 * e.g + 0.11 * e.b);
          return (e.r = e.g = e.b = t), this;
        }
        opaquer(e) {
          return (this._rgb.a *= 1 + e), this;
        }
        negate() {
          const e = this._rgb;
          return (e.r = 255 - e.r), (e.g = 255 - e.g), (e.b = 255 - e.b), this;
        }
        lighten(e) {
          return gv(this._rgb, 2, e), this;
        }
        darken(e) {
          return gv(this._rgb, 2, -e), this;
        }
        saturate(e) {
          return gv(this._rgb, 1, e), this;
        }
        desaturate(e) {
          return gv(this._rgb, 1, -e), this;
        }
        rotate(e) {
          return (
            (function (e, t) {
              var n = iv(e);
              (n[0] = sv(n[0] + t)),
                (n = av(n)),
                (e.r = n[0]),
                (e.g = n[1]),
                (e.b = n[2]);
            })(this._rgb, e),
            this
          );
        }
      }
      function yv() {}
      const wv = (() => {
        let e = 0;
        return () => e++;
      })();
      function Sv(e) {
        return null === e || "undefined" === typeof e;
      }
      function kv(e) {
        if (Array.isArray && Array.isArray(e)) return !0;
        const t = Object.prototype.toString.call(e);
        return "[object" === t.slice(0, 7) && "Array]" === t.slice(-6);
      }
      function Av(e) {
        return (
          null !== e && "[object Object]" === Object.prototype.toString.call(e)
        );
      }
      function Cv(e) {
        return ("number" === typeof e || e instanceof Number) && isFinite(+e);
      }
      function Mv(e, t) {
        return Cv(e) ? e : t;
      }
      function Pv(e, t) {
        return "undefined" === typeof e ? t : e;
      }
      const Ev = (e, t) =>
        "string" === typeof e && e.endsWith("%")
          ? (parseFloat(e) / 100) * t
          : +e;
      function Lv(e, t, n) {
        if (e && "function" === typeof e.call) return e.apply(n, t);
      }
      function Tv(e, t, n, i) {
        let o, a, s;
        if (kv(e))
          if (((a = e.length), i))
            for (o = a - 1; o >= 0; o--) t.call(n, e[o], o);
          else for (o = 0; o < a; o++) t.call(n, e[o], o);
        else if (Av(e))
          for (s = Object.keys(e), a = s.length, o = 0; o < a; o++)
            t.call(n, e[s[o]], s[o]);
      }
      function Ov(e, t) {
        let n, i, o, a;
        if (!e || !t || e.length !== t.length) return !1;
        for (n = 0, i = e.length; n < i; ++n)
          if (
            ((o = e[n]),
            (a = t[n]),
            o.datasetIndex !== a.datasetIndex || o.index !== a.index)
          )
            return !1;
        return !0;
      }
      function Rv(e) {
        if (kv(e)) return e.map(Rv);
        if (Av(e)) {
          const t = Object.create(null),
            n = Object.keys(e),
            i = n.length;
          let o = 0;
          for (; o < i; ++o) t[n[o]] = Rv(e[n[o]]);
          return t;
        }
        return e;
      }
      function Iv(e) {
        return -1 === ["__proto__", "prototype", "constructor"].indexOf(e);
      }
      function Nv(e, t, n, i) {
        if (!Iv(e)) return;
        const o = t[e],
          a = n[e];
        Av(o) && Av(a) ? _v(o, a, i) : (t[e] = Rv(a));
      }
      function _v(e, t, n) {
        const i = kv(t) ? t : [t],
          o = i.length;
        if (!Av(e)) return e;
        const a = (n = n || {}).merger || Nv;
        let s;
        for (let r = 0; r < o; ++r) {
          if (((s = i[r]), !Av(s))) continue;
          const t = Object.keys(s);
          for (let i = 0, o = t.length; i < o; ++i) a(t[i], e, s, n);
        }
        return e;
      }
      function Dv(e, t) {
        return _v(e, t, { merger: zv });
      }
      function zv(e, t, n) {
        if (!Iv(e)) return;
        const i = t[e],
          o = n[e];
        Av(i) && Av(o)
          ? Dv(i, o)
          : Object.prototype.hasOwnProperty.call(t, e) || (t[e] = Rv(o));
      }
      const jv = { "": (e) => e, x: (e) => e.x, y: (e) => e.y };
      function Bv(e, t) {
        const n =
          jv[t] ||
          (jv[t] = (function (e) {
            const t = (function (e) {
              const t = e.split("."),
                n = [];
              let i = "";
              for (const o of t)
                (i += o),
                  i.endsWith("\\")
                    ? (i = i.slice(0, -1) + ".")
                    : (n.push(i), (i = ""));
              return n;
            })(e);
            return (e) => {
              for (const n of t) {
                if ("" === n) break;
                e = e && e[n];
              }
              return e;
            };
          })(t));
        return n(e);
      }
      function Fv(e) {
        return e.charAt(0).toUpperCase() + e.slice(1);
      }
      const Wv = (e) => "undefined" !== typeof e,
        Hv = (e) => "function" === typeof e,
        Gv = (e, t) => {
          if (e.size !== t.size) return !1;
          for (const n of e) if (!t.has(n)) return !1;
          return !0;
        };
      const Vv = Math.PI,
        Uv = 2 * Vv,
        Yv = Uv + Vv,
        Xv = Number.POSITIVE_INFINITY,
        Kv = Vv / 180,
        qv = Vv / 2,
        Zv = Vv / 4,
        Qv = (2 * Vv) / 3,
        $v = Math.log10,
        Jv = Math.sign;
      function eb(e, t, n) {
        return Math.abs(e - t) < n;
      }
      function tb(e) {
        const t = Math.round(e);
        e = eb(e, t, e / 1e3) ? t : e;
        const n = Math.pow(10, Math.floor($v(e))),
          i = e / n;
        return (i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * n;
      }
      function nb(e) {
        return !isNaN(parseFloat(e)) && isFinite(e);
      }
      function ib(e, t, n) {
        let i, o, a;
        for (i = 0, o = e.length; i < o; i++)
          (a = e[i][n]),
            isNaN(a) ||
              ((t.min = Math.min(t.min, a)), (t.max = Math.max(t.max, a)));
      }
      function ob(e) {
        return e * (Vv / 180);
      }
      function ab(e) {
        return e * (180 / Vv);
      }
      function sb(e) {
        if (!Cv(e)) return;
        let t = 1,
          n = 0;
        for (; Math.round(e * t) / t !== e; ) (t *= 10), n++;
        return n;
      }
      function rb(e, t) {
        const n = t.x - e.x,
          i = t.y - e.y,
          o = Math.sqrt(n * n + i * i);
        let a = Math.atan2(i, n);
        return a < -0.5 * Vv && (a += Uv), { angle: a, distance: o };
      }
      function lb(e, t) {
        return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
      }
      function cb(e, t) {
        return ((e - t + Yv) % Uv) - Vv;
      }
      function ub(e) {
        return ((e % Uv) + Uv) % Uv;
      }
      function db(e, t, n, i) {
        const o = ub(e),
          a = ub(t),
          s = ub(n),
          r = ub(a - o),
          l = ub(s - o),
          c = ub(o - a),
          u = ub(o - s);
        return o === a || o === s || (i && a === s) || (r > l && c < u);
      }
      function hb(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      function pb(e, t, n) {
        let i =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1e-6;
        return e >= Math.min(t, n) - i && e <= Math.max(t, n) + i;
      }
      function fb(e, t, n) {
        n = n || ((n) => e[n] < t);
        let i,
          o = e.length - 1,
          a = 0;
        for (; o - a > 1; ) (i = (a + o) >> 1), n(i) ? (a = i) : (o = i);
        return { lo: a, hi: o };
      }
      const gb = (e, t, n, i) =>
          fb(
            e,
            n,
            i
              ? (i) => {
                  const o = e[i][t];
                  return o < n || (o === n && e[i + 1][t] === n);
                }
              : (i) => e[i][t] < n
          ),
        mb = (e, t, n) => fb(e, n, (i) => e[i][t] >= n);
      const vb = ["push", "pop", "shift", "splice", "unshift"];
      function bb(e, t) {
        const n = e._chartjs;
        if (!n) return;
        const i = n.listeners,
          o = i.indexOf(t);
        -1 !== o && i.splice(o, 1),
          i.length > 0 ||
            (vb.forEach((t) => {
              delete e[t];
            }),
            delete e._chartjs);
      }
      function xb(e) {
        const t = new Set(e);
        return t.size === e.length ? e : Array.from(t);
      }
      const yb =
        "undefined" === typeof window
          ? function (e) {
              return e();
            }
          : window.requestAnimationFrame;
      function wb(e, t) {
        let n = [],
          i = !1;
        return function () {
          for (var o = arguments.length, a = new Array(o), s = 0; s < o; s++)
            a[s] = arguments[s];
          (n = a),
            i ||
              ((i = !0),
              yb.call(window, () => {
                (i = !1), e.apply(t, n);
              }));
        };
      }
      const Sb = (e) =>
          "start" === e ? "left" : "end" === e ? "right" : "center",
        kb = (e, t, n) => ("start" === e ? t : "end" === e ? n : (t + n) / 2);
      function Ab(e, t, n) {
        const i = t.length;
        let o = 0,
          a = i;
        if (e._sorted) {
          const { iScale: s, _parsed: r } = e,
            l = s.axis,
            {
              min: c,
              max: u,
              minDefined: d,
              maxDefined: h,
            } = s.getUserBounds();
          d &&
            (o = hb(
              Math.min(
                gb(r, l, c).lo,
                n ? i : gb(t, l, s.getPixelForValue(c)).lo
              ),
              0,
              i - 1
            )),
            (a = h
              ? hb(
                  Math.max(
                    gb(r, s.axis, u, !0).hi + 1,
                    n ? 0 : gb(t, l, s.getPixelForValue(u), !0).hi + 1
                  ),
                  o,
                  i
                ) - o
              : i - o);
        }
        return { start: o, count: a };
      }
      function Cb(e) {
        const { xScale: t, yScale: n, _scaleRanges: i } = e,
          o = { xmin: t.min, xmax: t.max, ymin: n.min, ymax: n.max };
        if (!i) return (e._scaleRanges = o), !0;
        const a =
          i.xmin !== t.min ||
          i.xmax !== t.max ||
          i.ymin !== n.min ||
          i.ymax !== n.max;
        return Object.assign(i, o), a;
      }
      const Mb = (e) => 0 === e || 1 === e,
        Pb = (e, t, n) =>
          -Math.pow(2, 10 * (e -= 1)) * Math.sin(((e - t) * Uv) / n),
        Eb = (e, t, n) =>
          Math.pow(2, -10 * e) * Math.sin(((e - t) * Uv) / n) + 1,
        Lb = {
          linear: (e) => e,
          easeInQuad: (e) => e * e,
          easeOutQuad: (e) => -e * (e - 2),
          easeInOutQuad: (e) =>
            (e /= 0.5) < 1 ? 0.5 * e * e : -0.5 * (--e * (e - 2) - 1),
          easeInCubic: (e) => e * e * e,
          easeOutCubic: (e) => (e -= 1) * e * e + 1,
          easeInOutCubic: (e) =>
            (e /= 0.5) < 1 ? 0.5 * e * e * e : 0.5 * ((e -= 2) * e * e + 2),
          easeInQuart: (e) => e * e * e * e,
          easeOutQuart: (e) => -((e -= 1) * e * e * e - 1),
          easeInOutQuart: (e) =>
            (e /= 0.5) < 1
              ? 0.5 * e * e * e * e
              : -0.5 * ((e -= 2) * e * e * e - 2),
          easeInQuint: (e) => e * e * e * e * e,
          easeOutQuint: (e) => (e -= 1) * e * e * e * e + 1,
          easeInOutQuint: (e) =>
            (e /= 0.5) < 1
              ? 0.5 * e * e * e * e * e
              : 0.5 * ((e -= 2) * e * e * e * e + 2),
          easeInSine: (e) => 1 - Math.cos(e * qv),
          easeOutSine: (e) => Math.sin(e * qv),
          easeInOutSine: (e) => -0.5 * (Math.cos(Vv * e) - 1),
          easeInExpo: (e) => (0 === e ? 0 : Math.pow(2, 10 * (e - 1))),
          easeOutExpo: (e) => (1 === e ? 1 : 1 - Math.pow(2, -10 * e)),
          easeInOutExpo: (e) =>
            Mb(e)
              ? e
              : e < 0.5
              ? 0.5 * Math.pow(2, 10 * (2 * e - 1))
              : 0.5 * (2 - Math.pow(2, -10 * (2 * e - 1))),
          easeInCirc: (e) => (e >= 1 ? e : -(Math.sqrt(1 - e * e) - 1)),
          easeOutCirc: (e) => Math.sqrt(1 - (e -= 1) * e),
          easeInOutCirc: (e) =>
            (e /= 0.5) < 1
              ? -0.5 * (Math.sqrt(1 - e * e) - 1)
              : 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1),
          easeInElastic: (e) => (Mb(e) ? e : Pb(e, 0.075, 0.3)),
          easeOutElastic: (e) => (Mb(e) ? e : Eb(e, 0.075, 0.3)),
          easeInOutElastic(e) {
            const t = 0.1125;
            return Mb(e)
              ? e
              : e < 0.5
              ? 0.5 * Pb(2 * e, t, 0.45)
              : 0.5 + 0.5 * Eb(2 * e - 1, t, 0.45);
          },
          easeInBack(e) {
            const t = 1.70158;
            return e * e * ((t + 1) * e - t);
          },
          easeOutBack(e) {
            const t = 1.70158;
            return (e -= 1) * e * ((t + 1) * e + t) + 1;
          },
          easeInOutBack(e) {
            let t = 1.70158;
            return (e /= 0.5) < 1
              ? e * e * ((1 + (t *= 1.525)) * e - t) * 0.5
              : 0.5 * ((e -= 2) * e * ((1 + (t *= 1.525)) * e + t) + 2);
          },
          easeInBounce: (e) => 1 - Lb.easeOutBounce(1 - e),
          easeOutBounce(e) {
            const t = 7.5625,
              n = 2.75;
            return e < 1 / n
              ? t * e * e
              : e < 2 / n
              ? t * (e -= 1.5 / n) * e + 0.75
              : e < 2.5 / n
              ? t * (e -= 2.25 / n) * e + 0.9375
              : t * (e -= 2.625 / n) * e + 0.984375;
          },
          easeInOutBounce: (e) =>
            e < 0.5
              ? 0.5 * Lb.easeInBounce(2 * e)
              : 0.5 * Lb.easeOutBounce(2 * e - 1) + 0.5,
        };
      function Tb(e) {
        if (e && "object" === typeof e) {
          const t = e.toString();
          return (
            "[object CanvasPattern]" === t || "[object CanvasGradient]" === t
          );
        }
        return !1;
      }
      function Ob(e) {
        return Tb(e) ? e : new xv(e);
      }
      function Rb(e) {
        return Tb(e) ? e : new xv(e).saturate(0.5).darken(0.1).hexString();
      }
      const Ib = ["x", "y", "borderWidth", "radius", "tension"],
        Nb = ["color", "borderColor", "backgroundColor"];
      const _b = new Map();
      function Db(e, t, n) {
        return (function (e, t) {
          t = t || {};
          const n = e + JSON.stringify(t);
          let i = _b.get(n);
          return i || ((i = new Intl.NumberFormat(e, t)), _b.set(n, i)), i;
        })(t, n).format(e);
      }
      const zb = {
        values: (e) => (kv(e) ? e : "" + e),
        numeric(e, t, n) {
          if (0 === e) return "0";
          const i = this.chart.options.locale;
          let o,
            a = e;
          if (n.length > 1) {
            const t = Math.max(
              Math.abs(n[0].value),
              Math.abs(n[n.length - 1].value)
            );
            (t < 1e-4 || t > 1e15) && (o = "scientific"),
              (a = (function (e, t) {
                let n =
                  t.length > 3
                    ? t[2].value - t[1].value
                    : t[1].value - t[0].value;
                Math.abs(n) >= 1 &&
                  e !== Math.floor(e) &&
                  (n = e - Math.floor(e));
                return n;
              })(e, n));
          }
          const s = $v(Math.abs(a)),
            r = isNaN(s) ? 1 : Math.max(Math.min(-1 * Math.floor(s), 20), 0),
            l = {
              notation: o,
              minimumFractionDigits: r,
              maximumFractionDigits: r,
            };
          return Object.assign(l, this.options.ticks.format), Db(e, i, l);
        },
        logarithmic(e, t, n) {
          if (0 === e) return "0";
          const i = n[t].significand || e / Math.pow(10, Math.floor($v(e)));
          return [1, 2, 3, 5, 10, 15].includes(i) || t > 0.8 * n.length
            ? zb.numeric.call(this, e, t, n)
            : "";
        },
      };
      var jb = { formatters: zb };
      const Bb = Object.create(null),
        Fb = Object.create(null);
      function Wb(e, t) {
        if (!t) return e;
        const n = t.split(".");
        for (let i = 0, o = n.length; i < o; ++i) {
          const t = n[i];
          e = e[t] || (e[t] = Object.create(null));
        }
        return e;
      }
      function Hb(e, t, n) {
        return "string" === typeof t ? _v(Wb(e, t), n) : _v(Wb(e, ""), t);
      }
      class Gb {
        constructor(e, t) {
          (this.animation = void 0),
            (this.backgroundColor = "rgba(0,0,0,0.1)"),
            (this.borderColor = "rgba(0,0,0,0.1)"),
            (this.color = "#666"),
            (this.datasets = {}),
            (this.devicePixelRatio = (e) =>
              e.chart.platform.getDevicePixelRatio()),
            (this.elements = {}),
            (this.events = [
              "mousemove",
              "mouseout",
              "click",
              "touchstart",
              "touchmove",
            ]),
            (this.font = {
              family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
              size: 12,
              style: "normal",
              lineHeight: 1.2,
              weight: null,
            }),
            (this.hover = {}),
            (this.hoverBackgroundColor = (e, t) => Rb(t.backgroundColor)),
            (this.hoverBorderColor = (e, t) => Rb(t.borderColor)),
            (this.hoverColor = (e, t) => Rb(t.color)),
            (this.indexAxis = "x"),
            (this.interaction = {
              mode: "nearest",
              intersect: !0,
              includeInvisible: !1,
            }),
            (this.maintainAspectRatio = !0),
            (this.onHover = null),
            (this.onClick = null),
            (this.parsing = !0),
            (this.plugins = {}),
            (this.responsive = !0),
            (this.scale = void 0),
            (this.scales = {}),
            (this.showLine = !0),
            (this.drawActiveElementsOnTop = !0),
            this.describe(e),
            this.apply(t);
        }
        set(e, t) {
          return Hb(this, e, t);
        }
        get(e) {
          return Wb(this, e);
        }
        describe(e, t) {
          return Hb(Fb, e, t);
        }
        override(e, t) {
          return Hb(Bb, e, t);
        }
        route(e, t, n, i) {
          const o = Wb(this, e),
            a = Wb(this, n),
            s = "_" + t;
          Object.defineProperties(o, {
            [s]: { value: o[t], writable: !0 },
            [t]: {
              enumerable: !0,
              get() {
                const e = this[s],
                  t = a[i];
                return Av(e) ? Object.assign({}, t, e) : Pv(e, t);
              },
              set(e) {
                this[s] = e;
              },
            },
          });
        }
        apply(e) {
          e.forEach((e) => e(this));
        }
      }
      var Vb = new Gb(
        {
          _scriptable: (e) => !e.startsWith("on"),
          _indexable: (e) => "events" !== e,
          hover: { _fallback: "interaction" },
          interaction: { _scriptable: !1, _indexable: !1 },
        },
        [
          function (e) {
            e.set("animation", {
              delay: void 0,
              duration: 1e3,
              easing: "easeOutQuart",
              fn: void 0,
              from: void 0,
              loop: void 0,
              to: void 0,
              type: void 0,
            }),
              e.describe("animation", {
                _fallback: !1,
                _indexable: !1,
                _scriptable: (e) =>
                  "onProgress" !== e && "onComplete" !== e && "fn" !== e,
              }),
              e.set("animations", {
                colors: { type: "color", properties: Nb },
                numbers: { type: "number", properties: Ib },
              }),
              e.describe("animations", { _fallback: "animation" }),
              e.set("transitions", {
                active: { animation: { duration: 400 } },
                resize: { animation: { duration: 0 } },
                show: {
                  animations: {
                    colors: { from: "transparent" },
                    visible: { type: "boolean", duration: 0 },
                  },
                },
                hide: {
                  animations: {
                    colors: { to: "transparent" },
                    visible: {
                      type: "boolean",
                      easing: "linear",
                      fn: (e) => 0 | e,
                    },
                  },
                },
              });
          },
          function (e) {
            e.set("layout", {
              autoPadding: !0,
              padding: { top: 0, right: 0, bottom: 0, left: 0 },
            });
          },
          function (e) {
            e.set("scale", {
              display: !0,
              offset: !1,
              reverse: !1,
              beginAtZero: !1,
              bounds: "ticks",
              clip: !0,
              grace: 0,
              grid: {
                display: !0,
                lineWidth: 1,
                drawOnChartArea: !0,
                drawTicks: !0,
                tickLength: 8,
                tickWidth: (e, t) => t.lineWidth,
                tickColor: (e, t) => t.color,
                offset: !1,
              },
              border: { display: !0, dash: [], dashOffset: 0, width: 1 },
              title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
              ticks: {
                minRotation: 0,
                maxRotation: 50,
                mirror: !1,
                textStrokeWidth: 0,
                textStrokeColor: "",
                padding: 3,
                display: !0,
                autoSkip: !0,
                autoSkipPadding: 3,
                labelOffset: 0,
                callback: jb.formatters.values,
                minor: {},
                major: {},
                align: "center",
                crossAlign: "near",
                showLabelBackdrop: !1,
                backdropColor: "rgba(255, 255, 255, 0.75)",
                backdropPadding: 2,
              },
            }),
              e.route("scale.ticks", "color", "", "color"),
              e.route("scale.grid", "color", "", "borderColor"),
              e.route("scale.border", "color", "", "borderColor"),
              e.route("scale.title", "color", "", "color"),
              e.describe("scale", {
                _fallback: !1,
                _scriptable: (e) =>
                  !e.startsWith("before") &&
                  !e.startsWith("after") &&
                  "callback" !== e &&
                  "parser" !== e,
                _indexable: (e) =>
                  "borderDash" !== e && "tickBorderDash" !== e && "dash" !== e,
              }),
              e.describe("scales", { _fallback: "scale" }),
              e.describe("scale.ticks", {
                _scriptable: (e) => "backdropPadding" !== e && "callback" !== e,
                _indexable: (e) => "backdropPadding" !== e,
              });
          },
        ]
      );
      function Ub(e, t, n, i, o) {
        let a = t[o];
        return (
          a || ((a = t[o] = e.measureText(o).width), n.push(o)),
          a > i && (i = a),
          i
        );
      }
      function Yb(e, t, n, i) {
        let o = ((i = i || {}).data = i.data || {}),
          a = (i.garbageCollect = i.garbageCollect || []);
        i.font !== t &&
          ((o = i.data = {}), (a = i.garbageCollect = []), (i.font = t)),
          e.save(),
          (e.font = t);
        let s = 0;
        const r = n.length;
        let l, c, u, d, h;
        for (l = 0; l < r; l++)
          if (((d = n[l]), void 0 === d || null === d || kv(d))) {
            if (kv(d))
              for (c = 0, u = d.length; c < u; c++)
                (h = d[c]),
                  void 0 === h ||
                    null === h ||
                    kv(h) ||
                    (s = Ub(e, o, a, s, h));
          } else s = Ub(e, o, a, s, d);
        e.restore();
        const p = a.length / 2;
        if (p > n.length) {
          for (l = 0; l < p; l++) delete o[a[l]];
          a.splice(0, p);
        }
        return s;
      }
      function Xb(e, t, n) {
        const i = e.currentDevicePixelRatio,
          o = 0 !== n ? Math.max(n / 2, 0.5) : 0;
        return Math.round((t - o) * i) / i + o;
      }
      function Kb(e, t) {
        (t || e) &&
          ((t = t || e.getContext("2d")).save(),
          t.resetTransform(),
          t.clearRect(0, 0, e.width, e.height),
          t.restore());
      }
      function qb(e, t, n, i) {
        Zb(e, t, n, i, null);
      }
      function Zb(e, t, n, i, o) {
        let a, s, r, l, c, u, d, h;
        const p = t.pointStyle,
          f = t.rotation,
          g = t.radius;
        let m = (f || 0) * Kv;
        if (
          p &&
          "object" === typeof p &&
          ((a = p.toString()),
          "[object HTMLImageElement]" === a ||
            "[object HTMLCanvasElement]" === a)
        )
          return (
            e.save(),
            e.translate(n, i),
            e.rotate(m),
            e.drawImage(p, -p.width / 2, -p.height / 2, p.width, p.height),
            void e.restore()
          );
        if (!(isNaN(g) || g <= 0)) {
          switch ((e.beginPath(), p)) {
            default:
              o ? e.ellipse(n, i, o / 2, g, 0, 0, Uv) : e.arc(n, i, g, 0, Uv),
                e.closePath();
              break;
            case "triangle":
              (u = o ? o / 2 : g),
                e.moveTo(n + Math.sin(m) * u, i - Math.cos(m) * g),
                (m += Qv),
                e.lineTo(n + Math.sin(m) * u, i - Math.cos(m) * g),
                (m += Qv),
                e.lineTo(n + Math.sin(m) * u, i - Math.cos(m) * g),
                e.closePath();
              break;
            case "rectRounded":
              (c = 0.516 * g),
                (l = g - c),
                (s = Math.cos(m + Zv) * l),
                (d = Math.cos(m + Zv) * (o ? o / 2 - c : l)),
                (r = Math.sin(m + Zv) * l),
                (h = Math.sin(m + Zv) * (o ? o / 2 - c : l)),
                e.arc(n - d, i - r, c, m - Vv, m - qv),
                e.arc(n + h, i - s, c, m - qv, m),
                e.arc(n + d, i + r, c, m, m + qv),
                e.arc(n - h, i + s, c, m + qv, m + Vv),
                e.closePath();
              break;
            case "rect":
              if (!f) {
                (l = Math.SQRT1_2 * g),
                  (u = o ? o / 2 : l),
                  e.rect(n - u, i - l, 2 * u, 2 * l);
                break;
              }
              m += Zv;
            case "rectRot":
              (d = Math.cos(m) * (o ? o / 2 : g)),
                (s = Math.cos(m) * g),
                (r = Math.sin(m) * g),
                (h = Math.sin(m) * (o ? o / 2 : g)),
                e.moveTo(n - d, i - r),
                e.lineTo(n + h, i - s),
                e.lineTo(n + d, i + r),
                e.lineTo(n - h, i + s),
                e.closePath();
              break;
            case "crossRot":
              m += Zv;
            case "cross":
              (d = Math.cos(m) * (o ? o / 2 : g)),
                (s = Math.cos(m) * g),
                (r = Math.sin(m) * g),
                (h = Math.sin(m) * (o ? o / 2 : g)),
                e.moveTo(n - d, i - r),
                e.lineTo(n + d, i + r),
                e.moveTo(n + h, i - s),
                e.lineTo(n - h, i + s);
              break;
            case "star":
              (d = Math.cos(m) * (o ? o / 2 : g)),
                (s = Math.cos(m) * g),
                (r = Math.sin(m) * g),
                (h = Math.sin(m) * (o ? o / 2 : g)),
                e.moveTo(n - d, i - r),
                e.lineTo(n + d, i + r),
                e.moveTo(n + h, i - s),
                e.lineTo(n - h, i + s),
                (m += Zv),
                (d = Math.cos(m) * (o ? o / 2 : g)),
                (s = Math.cos(m) * g),
                (r = Math.sin(m) * g),
                (h = Math.sin(m) * (o ? o / 2 : g)),
                e.moveTo(n - d, i - r),
                e.lineTo(n + d, i + r),
                e.moveTo(n + h, i - s),
                e.lineTo(n - h, i + s);
              break;
            case "line":
              (s = o ? o / 2 : Math.cos(m) * g),
                (r = Math.sin(m) * g),
                e.moveTo(n - s, i - r),
                e.lineTo(n + s, i + r);
              break;
            case "dash":
              e.moveTo(n, i),
                e.lineTo(
                  n + Math.cos(m) * (o ? o / 2 : g),
                  i + Math.sin(m) * g
                );
              break;
            case !1:
              e.closePath();
          }
          e.fill(), t.borderWidth > 0 && e.stroke();
        }
      }
      function Qb(e, t, n) {
        return (
          (n = n || 0.5),
          !t ||
            (e &&
              e.x > t.left - n &&
              e.x < t.right + n &&
              e.y > t.top - n &&
              e.y < t.bottom + n)
        );
      }
      function $b(e, t) {
        e.save(),
          e.beginPath(),
          e.rect(t.left, t.top, t.right - t.left, t.bottom - t.top),
          e.clip();
      }
      function Jb(e) {
        e.restore();
      }
      function ex(e, t, n, i, o) {
        if (!t) return e.lineTo(n.x, n.y);
        if ("middle" === o) {
          const i = (t.x + n.x) / 2;
          e.lineTo(i, t.y), e.lineTo(i, n.y);
        } else
          ("after" === o) !== !!i ? e.lineTo(t.x, n.y) : e.lineTo(n.x, t.y);
        e.lineTo(n.x, n.y);
      }
      function tx(e, t, n, i) {
        if (!t) return e.lineTo(n.x, n.y);
        e.bezierCurveTo(
          i ? t.cp1x : t.cp2x,
          i ? t.cp1y : t.cp2y,
          i ? n.cp2x : n.cp1x,
          i ? n.cp2y : n.cp1y,
          n.x,
          n.y
        );
      }
      function nx(e, t, n, i, o) {
        if (o.strikethrough || o.underline) {
          const a = e.measureText(i),
            s = t - a.actualBoundingBoxLeft,
            r = t + a.actualBoundingBoxRight,
            l = n - a.actualBoundingBoxAscent,
            c = n + a.actualBoundingBoxDescent,
            u = o.strikethrough ? (l + c) / 2 : c;
          (e.strokeStyle = e.fillStyle),
            e.beginPath(),
            (e.lineWidth = o.decorationWidth || 2),
            e.moveTo(s, u),
            e.lineTo(r, u),
            e.stroke();
        }
      }
      function ix(e, t) {
        const n = e.fillStyle;
        (e.fillStyle = t.color),
          e.fillRect(t.left, t.top, t.width, t.height),
          (e.fillStyle = n);
      }
      function ox(e, t, n, i, o) {
        let a =
          arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
        const s = kv(t) ? t : [t],
          r = a.strokeWidth > 0 && "" !== a.strokeColor;
        let l, c;
        for (
          e.save(),
            e.font = o.string,
            (function (e, t) {
              t.translation && e.translate(t.translation[0], t.translation[1]),
                Sv(t.rotation) || e.rotate(t.rotation),
                t.color && (e.fillStyle = t.color),
                t.textAlign && (e.textAlign = t.textAlign),
                t.textBaseline && (e.textBaseline = t.textBaseline);
            })(e, a),
            l = 0;
          l < s.length;
          ++l
        )
          (c = s[l]),
            a.backdrop && ix(e, a.backdrop),
            r &&
              (a.strokeColor && (e.strokeStyle = a.strokeColor),
              Sv(a.strokeWidth) || (e.lineWidth = a.strokeWidth),
              e.strokeText(c, n, i, a.maxWidth)),
            e.fillText(c, n, i, a.maxWidth),
            nx(e, n, i, c, a),
            (i += Number(o.lineHeight));
        e.restore();
      }
      function ax(e, t) {
        const { x: n, y: i, w: o, h: a, radius: s } = t;
        e.arc(n + s.topLeft, i + s.topLeft, s.topLeft, 1.5 * Vv, Vv, !0),
          e.lineTo(n, i + a - s.bottomLeft),
          e.arc(
            n + s.bottomLeft,
            i + a - s.bottomLeft,
            s.bottomLeft,
            Vv,
            qv,
            !0
          ),
          e.lineTo(n + o - s.bottomRight, i + a),
          e.arc(
            n + o - s.bottomRight,
            i + a - s.bottomRight,
            s.bottomRight,
            qv,
            0,
            !0
          ),
          e.lineTo(n + o, i + s.topRight),
          e.arc(n + o - s.topRight, i + s.topRight, s.topRight, 0, -qv, !0),
          e.lineTo(n + s.topLeft, i);
      }
      const sx = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
        rx =
          /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
      function lx(e, t) {
        const n = ("" + e).match(sx);
        if (!n || "normal" === n[1]) return 1.2 * t;
        switch (((e = +n[2]), n[3])) {
          case "px":
            return e;
          case "%":
            e /= 100;
        }
        return t * e;
      }
      const cx = (e) => +e || 0;
      function ux(e, t) {
        const n = {},
          i = Av(t),
          o = i ? Object.keys(t) : t,
          a = Av(e) ? (i ? (n) => Pv(e[n], e[t[n]]) : (t) => e[t]) : () => e;
        for (const s of o) n[s] = cx(a(s));
        return n;
      }
      function dx(e) {
        return ux(e, { top: "y", right: "x", bottom: "y", left: "x" });
      }
      function hx(e) {
        return ux(e, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
      }
      function px(e) {
        const t = dx(e);
        return (t.width = t.left + t.right), (t.height = t.top + t.bottom), t;
      }
      function fx(e, t) {
        (e = e || {}), (t = t || Vb.font);
        let n = Pv(e.size, t.size);
        "string" === typeof n && (n = parseInt(n, 10));
        let i = Pv(e.style, t.style);
        i &&
          !("" + i).match(rx) &&
          (console.warn('Invalid font style specified: "' + i + '"'),
          (i = void 0));
        const o = {
          family: Pv(e.family, t.family),
          lineHeight: lx(Pv(e.lineHeight, t.lineHeight), n),
          size: n,
          style: i,
          weight: Pv(e.weight, t.weight),
          string: "",
        };
        return (
          (o.string = (function (e) {
            return !e || Sv(e.size) || Sv(e.family)
              ? null
              : (e.style ? e.style + " " : "") +
                  (e.weight ? e.weight + " " : "") +
                  e.size +
                  "px " +
                  e.family;
          })(o)),
          o
        );
      }
      function gx(e, t, n, i) {
        let o,
          a,
          s,
          r = !0;
        for (o = 0, a = e.length; o < a; ++o)
          if (
            ((s = e[o]),
            void 0 !== s &&
              (void 0 !== t &&
                "function" === typeof s &&
                ((s = s(t)), (r = !1)),
              void 0 !== n && kv(s) && ((s = s[n % s.length]), (r = !1)),
              void 0 !== s))
          )
            return i && !r && (i.cacheable = !1), s;
      }
      function mx(e, t) {
        return Object.assign(Object.create(e), t);
      }
      function vx(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : [""],
          n = arguments.length > 3 ? arguments[3] : void 0,
          i =
            arguments.length > 4 && void 0 !== arguments[4]
              ? arguments[4]
              : () => e[0];
        const o = (arguments.length > 2 ? arguments[2] : void 0) || e;
        "undefined" === typeof n && (n = Ex("_fallback", e));
        const a = {
          [Symbol.toStringTag]: "Object",
          _cacheable: !0,
          _scopes: e,
          _rootScopes: o,
          _fallback: n,
          _getTarget: i,
          override: (i) => vx([i, ...e], t, o, n),
        };
        return new Proxy(a, {
          deleteProperty: (t, n) => (
            delete t[n], delete t._keys, delete e[0][n], !0
          ),
          get: (n, i) =>
            Sx(n, i, () =>
              (function (e, t, n, i) {
                let o;
                for (const a of t)
                  if (((o = Ex(yx(a, e), n)), "undefined" !== typeof o))
                    return wx(e, o) ? Mx(n, i, e, o) : o;
              })(i, t, e, n)
            ),
          getOwnPropertyDescriptor: (e, t) =>
            Reflect.getOwnPropertyDescriptor(e._scopes[0], t),
          getPrototypeOf: () => Reflect.getPrototypeOf(e[0]),
          has: (e, t) => Lx(e).includes(t),
          ownKeys: (e) => Lx(e),
          set(e, t, n) {
            const o = e._storage || (e._storage = i());
            return (e[t] = o[t] = n), delete e._keys, !0;
          },
        });
      }
      function bx(e, t, n, i) {
        const o = {
          _cacheable: !1,
          _proxy: e,
          _context: t,
          _subProxy: n,
          _stack: new Set(),
          _descriptors: xx(e, i),
          setContext: (t) => bx(e, t, n, i),
          override: (o) => bx(e.override(o), t, n, i),
        };
        return new Proxy(o, {
          deleteProperty: (t, n) => (delete t[n], delete e[n], !0),
          get: (e, t, n) =>
            Sx(e, t, () =>
              (function (e, t, n) {
                const {
                  _proxy: i,
                  _context: o,
                  _subProxy: a,
                  _descriptors: s,
                } = e;
                let r = i[t];
                Hv(r) &&
                  s.isScriptable(t) &&
                  (r = (function (e, t, n, i) {
                    const {
                      _proxy: o,
                      _context: a,
                      _subProxy: s,
                      _stack: r,
                    } = n;
                    if (r.has(e))
                      throw new Error(
                        "Recursion detected: " +
                          Array.from(r).join("->") +
                          "->" +
                          e
                      );
                    r.add(e);
                    let l = t(a, s || i);
                    r.delete(e), wx(e, l) && (l = Mx(o._scopes, o, e, l));
                    return l;
                  })(t, r, e, n));
                kv(r) &&
                  r.length &&
                  (r = (function (e, t, n, i) {
                    const {
                      _proxy: o,
                      _context: a,
                      _subProxy: s,
                      _descriptors: r,
                    } = n;
                    if ("undefined" !== typeof a.index && i(e))
                      return t[a.index % t.length];
                    if (Av(t[0])) {
                      const n = t,
                        i = o._scopes.filter((e) => e !== n);
                      t = [];
                      for (const l of n) {
                        const n = Mx(i, o, e, l);
                        t.push(bx(n, a, s && s[e], r));
                      }
                    }
                    return t;
                  })(t, r, e, s.isIndexable));
                wx(t, r) && (r = bx(r, o, a && a[t], s));
                return r;
              })(e, t, n)
            ),
          getOwnPropertyDescriptor: (t, n) =>
            t._descriptors.allKeys
              ? Reflect.has(e, n)
                ? { enumerable: !0, configurable: !0 }
                : void 0
              : Reflect.getOwnPropertyDescriptor(e, n),
          getPrototypeOf: () => Reflect.getPrototypeOf(e),
          has: (t, n) => Reflect.has(e, n),
          ownKeys: () => Reflect.ownKeys(e),
          set: (t, n, i) => ((e[n] = i), delete t[n], !0),
        });
      }
      function xx(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : { scriptable: !0, indexable: !0 };
        const {
          _scriptable: n = t.scriptable,
          _indexable: i = t.indexable,
          _allKeys: o = t.allKeys,
        } = e;
        return {
          allKeys: o,
          scriptable: n,
          indexable: i,
          isScriptable: Hv(n) ? n : () => n,
          isIndexable: Hv(i) ? i : () => i,
        };
      }
      const yx = (e, t) => (e ? e + Fv(t) : t),
        wx = (e, t) =>
          Av(t) &&
          "adapters" !== e &&
          (null === Object.getPrototypeOf(t) || t.constructor === Object);
      function Sx(e, t, n) {
        if (Object.prototype.hasOwnProperty.call(e, t) || "constructor" === t)
          return e[t];
        const i = n();
        return (e[t] = i), i;
      }
      function kx(e, t, n) {
        return Hv(e) ? e(t, n) : e;
      }
      const Ax = (e, t) =>
        !0 === e ? t : "string" === typeof e ? Bv(t, e) : void 0;
      function Cx(e, t, n, i, o) {
        for (const a of t) {
          const t = Ax(n, a);
          if (t) {
            e.add(t);
            const a = kx(t._fallback, n, o);
            if ("undefined" !== typeof a && a !== n && a !== i) return a;
          } else if (!1 === t && "undefined" !== typeof i && n !== i)
            return null;
        }
        return !1;
      }
      function Mx(e, t, n, i) {
        const o = t._rootScopes,
          a = kx(t._fallback, n, i),
          s = [...e, ...o],
          r = new Set();
        r.add(i);
        let l = Px(r, s, n, a || n, i);
        return (
          null !== l &&
          ("undefined" === typeof a ||
            a === n ||
            ((l = Px(r, s, a, l, i)), null !== l)) &&
          vx(Array.from(r), [""], o, a, () =>
            (function (e, t, n) {
              const i = e._getTarget();
              t in i || (i[t] = {});
              const o = i[t];
              if (kv(o) && Av(n)) return n;
              return o || {};
            })(t, n, i)
          )
        );
      }
      function Px(e, t, n, i, o) {
        for (; n; ) n = Cx(e, t, n, i, o);
        return n;
      }
      function Ex(e, t) {
        for (const n of t) {
          if (!n) continue;
          const t = n[e];
          if ("undefined" !== typeof t) return t;
        }
      }
      function Lx(e) {
        let t = e._keys;
        return (
          t ||
            (t = e._keys =
              (function (e) {
                const t = new Set();
                for (const n of e)
                  for (const e of Object.keys(n).filter(
                    (e) => !e.startsWith("_")
                  ))
                    t.add(e);
                return Array.from(t);
              })(e._scopes)),
          t
        );
      }
      function Tx(e, t, n, i) {
        const { iScale: o } = e,
          { key: a = "r" } = this._parsing,
          s = new Array(i);
        let r, l, c, u;
        for (r = 0, l = i; r < l; ++r)
          (c = r + n), (u = t[c]), (s[r] = { r: o.parse(Bv(u, a), c) });
        return s;
      }
      const Ox = Number.EPSILON || 1e-14,
        Rx = (e, t) => t < e.length && !e[t].skip && e[t],
        Ix = (e) => ("x" === e ? "y" : "x");
      function Nx(e, t, n, i) {
        const o = e.skip ? t : e,
          a = t,
          s = n.skip ? t : n,
          r = lb(a, o),
          l = lb(s, a);
        let c = r / (r + l),
          u = l / (r + l);
        (c = isNaN(c) ? 0 : c), (u = isNaN(u) ? 0 : u);
        const d = i * c,
          h = i * u;
        return {
          previous: { x: a.x - d * (s.x - o.x), y: a.y - d * (s.y - o.y) },
          next: { x: a.x + h * (s.x - o.x), y: a.y + h * (s.y - o.y) },
        };
      }
      function _x(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x";
        const n = Ix(t),
          i = e.length,
          o = Array(i).fill(0),
          a = Array(i);
        let s,
          r,
          l,
          c = Rx(e, 0);
        for (s = 0; s < i; ++s)
          if (((r = l), (l = c), (c = Rx(e, s + 1)), l)) {
            if (c) {
              const e = c[t] - l[t];
              o[s] = 0 !== e ? (c[n] - l[n]) / e : 0;
            }
            a[s] = r
              ? c
                ? Jv(o[s - 1]) !== Jv(o[s])
                  ? 0
                  : (o[s - 1] + o[s]) / 2
                : o[s - 1]
              : o[s];
          }
        !(function (e, t, n) {
          const i = e.length;
          let o,
            a,
            s,
            r,
            l,
            c = Rx(e, 0);
          for (let u = 0; u < i - 1; ++u)
            (l = c),
              (c = Rx(e, u + 1)),
              l &&
                c &&
                (eb(t[u], 0, Ox)
                  ? (n[u] = n[u + 1] = 0)
                  : ((o = n[u] / t[u]),
                    (a = n[u + 1] / t[u]),
                    (r = Math.pow(o, 2) + Math.pow(a, 2)),
                    r <= 9 ||
                      ((s = 3 / Math.sqrt(r)),
                      (n[u] = o * s * t[u]),
                      (n[u + 1] = a * s * t[u]))));
        })(e, o, a),
          (function (e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "x";
            const i = Ix(n),
              o = e.length;
            let a,
              s,
              r,
              l = Rx(e, 0);
            for (let c = 0; c < o; ++c) {
              if (((s = r), (r = l), (l = Rx(e, c + 1)), !r)) continue;
              const o = r[n],
                u = r[i];
              s &&
                ((a = (o - s[n]) / 3),
                (r["cp1".concat(n)] = o - a),
                (r["cp1".concat(i)] = u - a * t[c])),
                l &&
                  ((a = (l[n] - o) / 3),
                  (r["cp2".concat(n)] = o + a),
                  (r["cp2".concat(i)] = u + a * t[c]));
            }
          })(e, a, t);
      }
      function Dx(e, t, n) {
        return Math.max(Math.min(e, n), t);
      }
      function zx(e, t, n, i, o) {
        let a, s, r, l;
        if (
          (t.spanGaps && (e = e.filter((e) => !e.skip)),
          "monotone" === t.cubicInterpolationMode)
        )
          _x(e, o);
        else {
          let n = i ? e[e.length - 1] : e[0];
          for (a = 0, s = e.length; a < s; ++a)
            (r = e[a]),
              (l = Nx(
                n,
                r,
                e[Math.min(a + 1, s - (i ? 0 : 1)) % s],
                t.tension
              )),
              (r.cp1x = l.previous.x),
              (r.cp1y = l.previous.y),
              (r.cp2x = l.next.x),
              (r.cp2y = l.next.y),
              (n = r);
        }
        t.capBezierPoints &&
          (function (e, t) {
            let n,
              i,
              o,
              a,
              s,
              r = Qb(e[0], t);
            for (n = 0, i = e.length; n < i; ++n)
              (s = a),
                (a = r),
                (r = n < i - 1 && Qb(e[n + 1], t)),
                a &&
                  ((o = e[n]),
                  s &&
                    ((o.cp1x = Dx(o.cp1x, t.left, t.right)),
                    (o.cp1y = Dx(o.cp1y, t.top, t.bottom))),
                  r &&
                    ((o.cp2x = Dx(o.cp2x, t.left, t.right)),
                    (o.cp2y = Dx(o.cp2y, t.top, t.bottom))));
          })(e, n);
      }
      function jx() {
        return "undefined" !== typeof window && "undefined" !== typeof document;
      }
      function Bx(e) {
        let t = e.parentNode;
        return t && "[object ShadowRoot]" === t.toString() && (t = t.host), t;
      }
      function Fx(e, t, n) {
        let i;
        return (
          "string" === typeof e
            ? ((i = parseInt(e, 10)),
              -1 !== e.indexOf("%") && (i = (i / 100) * t.parentNode[n]))
            : (i = e),
          i
        );
      }
      const Wx = (e) => e.ownerDocument.defaultView.getComputedStyle(e, null);
      const Hx = ["top", "right", "bottom", "left"];
      function Gx(e, t, n) {
        const i = {};
        n = n ? "-" + n : "";
        for (let o = 0; o < 4; o++) {
          const a = Hx[o];
          i[a] = parseFloat(e[t + "-" + a + n]) || 0;
        }
        return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
      }
      const Vx = (e, t, n) => (e > 0 || t > 0) && (!n || !n.shadowRoot);
      function Ux(e, t) {
        if ("native" in e) return e;
        const { canvas: n, currentDevicePixelRatio: i } = t,
          o = Wx(n),
          a = "border-box" === o.boxSizing,
          s = Gx(o, "padding"),
          r = Gx(o, "border", "width"),
          {
            x: l,
            y: c,
            box: u,
          } = (function (e, t) {
            const n = e.touches,
              i = n && n.length ? n[0] : e,
              { offsetX: o, offsetY: a } = i;
            let s,
              r,
              l = !1;
            if (Vx(o, a, e.target)) (s = o), (r = a);
            else {
              const e = t.getBoundingClientRect();
              (s = i.clientX - e.left), (r = i.clientY - e.top), (l = !0);
            }
            return { x: s, y: r, box: l };
          })(e, n),
          d = s.left + (u && r.left),
          h = s.top + (u && r.top);
        let { width: p, height: f } = t;
        return (
          a && ((p -= s.width + r.width), (f -= s.height + r.height)),
          {
            x: Math.round((((l - d) / p) * n.width) / i),
            y: Math.round((((c - h) / f) * n.height) / i),
          }
        );
      }
      const Yx = (e) => Math.round(10 * e) / 10;
      function Xx(e, t, n, i) {
        const o = Wx(e),
          a = Gx(o, "margin"),
          s = Fx(o.maxWidth, e, "clientWidth") || Xv,
          r = Fx(o.maxHeight, e, "clientHeight") || Xv,
          l = (function (e, t, n) {
            let i, o;
            if (void 0 === t || void 0 === n) {
              const a = e && Bx(e);
              if (a) {
                const e = a.getBoundingClientRect(),
                  s = Wx(a),
                  r = Gx(s, "border", "width"),
                  l = Gx(s, "padding");
                (t = e.width - l.width - r.width),
                  (n = e.height - l.height - r.height),
                  (i = Fx(s.maxWidth, a, "clientWidth")),
                  (o = Fx(s.maxHeight, a, "clientHeight"));
              } else (t = e.clientWidth), (n = e.clientHeight);
            }
            return {
              width: t,
              height: n,
              maxWidth: i || Xv,
              maxHeight: o || Xv,
            };
          })(e, t, n);
        let { width: c, height: u } = l;
        if ("content-box" === o.boxSizing) {
          const e = Gx(o, "border", "width"),
            t = Gx(o, "padding");
          (c -= t.width + e.width), (u -= t.height + e.height);
        }
        (c = Math.max(0, c - a.width)),
          (u = Math.max(0, i ? c / i : u - a.height)),
          (c = Yx(Math.min(c, s, l.maxWidth))),
          (u = Yx(Math.min(u, r, l.maxHeight))),
          c && !u && (u = Yx(c / 2));
        return (
          (void 0 !== t || void 0 !== n) &&
            i &&
            l.height &&
            u > l.height &&
            ((u = l.height), (c = Yx(Math.floor(u * i)))),
          { width: c, height: u }
        );
      }
      function Kx(e, t, n) {
        const i = t || 1,
          o = Math.floor(e.height * i),
          a = Math.floor(e.width * i);
        (e.height = Math.floor(e.height)), (e.width = Math.floor(e.width));
        const s = e.canvas;
        return (
          s.style &&
            (n || (!s.style.height && !s.style.width)) &&
            ((s.style.height = "".concat(e.height, "px")),
            (s.style.width = "".concat(e.width, "px"))),
          (e.currentDevicePixelRatio !== i ||
            s.height !== o ||
            s.width !== a) &&
            ((e.currentDevicePixelRatio = i),
            (s.height = o),
            (s.width = a),
            e.ctx.setTransform(i, 0, 0, i, 0, 0),
            !0)
        );
      }
      const qx = (function () {
        let e = !1;
        try {
          const t = {
            get passive() {
              return (e = !0), !1;
            },
          };
          jx() &&
            (window.addEventListener("test", null, t),
            window.removeEventListener("test", null, t));
        } catch (nT) {}
        return e;
      })();
      function Zx(e, t) {
        const n = (function (e, t) {
            return Wx(e).getPropertyValue(t);
          })(e, t),
          i = n && n.match(/^(\d+)(\.\d+)?px$/);
        return i ? +i[1] : void 0;
      }
      function Qx(e, t, n, i) {
        return { x: e.x + n * (t.x - e.x), y: e.y + n * (t.y - e.y) };
      }
      function $x(e, t, n, i) {
        return {
          x: e.x + n * (t.x - e.x),
          y:
            "middle" === i
              ? n < 0.5
                ? e.y
                : t.y
              : "after" === i
              ? n < 1
                ? e.y
                : t.y
              : n > 0
              ? t.y
              : e.y,
        };
      }
      function Jx(e, t, n, i) {
        const o = { x: e.cp2x, y: e.cp2y },
          a = { x: t.cp1x, y: t.cp1y },
          s = Qx(e, o, n),
          r = Qx(o, a, n),
          l = Qx(a, t, n),
          c = Qx(s, r, n),
          u = Qx(r, l, n);
        return Qx(c, u, n);
      }
      function ey(e, t, n) {
        return e
          ? (function (e, t) {
              return {
                x: (n) => e + e + t - n,
                setWidth(e) {
                  t = e;
                },
                textAlign: (e) =>
                  "center" === e ? e : "right" === e ? "left" : "right",
                xPlus: (e, t) => e - t,
                leftForLtr: (e, t) => e - t,
              };
            })(t, n)
          : {
              x: (e) => e,
              setWidth(e) {},
              textAlign: (e) => e,
              xPlus: (e, t) => e + t,
              leftForLtr: (e, t) => e,
            };
      }
      function ty(e, t) {
        let n, i;
        ("ltr" !== t && "rtl" !== t) ||
          ((n = e.canvas.style),
          (i = [
            n.getPropertyValue("direction"),
            n.getPropertyPriority("direction"),
          ]),
          n.setProperty("direction", t, "important"),
          (e.prevTextDirection = i));
      }
      function ny(e, t) {
        void 0 !== t &&
          (delete e.prevTextDirection,
          e.canvas.style.setProperty("direction", t[0], t[1]));
      }
      function iy(e) {
        return "angle" === e
          ? { between: db, compare: cb, normalize: ub }
          : { between: pb, compare: (e, t) => e - t, normalize: (e) => e };
      }
      function oy(e) {
        let { start: t, end: n, count: i, loop: o, style: a } = e;
        return {
          start: t % i,
          end: n % i,
          loop: o && (n - t + 1) % i === 0,
          style: a,
        };
      }
      function ay(e, t, n) {
        if (!n) return [e];
        const { property: i, start: o, end: a } = n,
          s = t.length,
          { compare: r, between: l, normalize: c } = iy(i),
          {
            start: u,
            end: d,
            loop: h,
            style: p,
          } = (function (e, t, n) {
            const { property: i, start: o, end: a } = n,
              { between: s, normalize: r } = iy(i),
              l = t.length;
            let c,
              u,
              { start: d, end: h, loop: p } = e;
            if (p) {
              for (
                d += l, h += l, c = 0, u = l;
                c < u && s(r(t[d % l][i]), o, a);
                ++c
              )
                d--, h--;
              (d %= l), (h %= l);
            }
            return (
              h < d && (h += l), { start: d, end: h, loop: p, style: e.style }
            );
          })(e, t, n),
          f = [];
        let g,
          m,
          v,
          b = !1,
          x = null;
        const y = () => b || (l(o, v, g) && 0 !== r(o, v)),
          w = () => !b || 0 === r(a, g) || l(a, v, g);
        for (let S = u, k = u; S <= d; ++S)
          (m = t[S % s]),
            m.skip ||
              ((g = c(m[i])),
              g !== v &&
                ((b = l(g, o, a)),
                null === x && y() && (x = 0 === r(g, o) ? S : k),
                null !== x &&
                  w() &&
                  (f.push(
                    oy({ start: x, end: S, loop: h, count: s, style: p })
                  ),
                  (x = null)),
                (k = S),
                (v = g)));
        return (
          null !== x &&
            f.push(oy({ start: x, end: d, loop: h, count: s, style: p })),
          f
        );
      }
      function sy(e, t) {
        const n = [],
          i = e.segments;
        for (let o = 0; o < i.length; o++) {
          const a = ay(i[o], e.points, t);
          a.length && n.push(...a);
        }
        return n;
      }
      function ry(e, t, n, i) {
        return i && i.setContext && n
          ? (function (e, t, n, i) {
              const o = e._chart.getContext(),
                a = ly(e.options),
                {
                  _datasetIndex: s,
                  options: { spanGaps: r },
                } = e,
                l = n.length,
                c = [];
              let u = a,
                d = t[0].start,
                h = d;
              function p(e, t, i, o) {
                const a = r ? -1 : 1;
                if (e !== t) {
                  for (e += l; n[e % l].skip; ) e -= a;
                  for (; n[t % l].skip; ) t += a;
                  e % l !== t % l &&
                    (c.push({ start: e % l, end: t % l, loop: i, style: o }),
                    (u = o),
                    (d = t % l));
                }
              }
              for (const f of t) {
                d = r ? d : f.start;
                let e,
                  t = n[d % l];
                for (h = d + 1; h <= f.end; h++) {
                  const a = n[h % l];
                  (e = ly(
                    i.setContext(
                      mx(o, {
                        type: "segment",
                        p0: t,
                        p1: a,
                        p0DataIndex: (h - 1) % l,
                        p1DataIndex: h % l,
                        datasetIndex: s,
                      })
                    )
                  )),
                    cy(e, u) && p(d, h - 1, f.loop, u),
                    (t = a),
                    (u = e);
                }
                d < h - 1 && p(d, h - 1, f.loop, u);
              }
              return c;
            })(e, t, n, i)
          : t;
      }
      function ly(e) {
        return {
          backgroundColor: e.backgroundColor,
          borderCapStyle: e.borderCapStyle,
          borderDash: e.borderDash,
          borderDashOffset: e.borderDashOffset,
          borderJoinStyle: e.borderJoinStyle,
          borderWidth: e.borderWidth,
          borderColor: e.borderColor,
        };
      }
      function cy(e, t) {
        if (!t) return !1;
        const n = [],
          i = function (e, t) {
            return Tb(t) ? (n.includes(t) || n.push(t), n.indexOf(t)) : t;
          };
        return JSON.stringify(e, i) !== JSON.stringify(t, i);
      }
      class uy {
        constructor() {
          (this._request = null),
            (this._charts = new Map()),
            (this._running = !1),
            (this._lastDate = void 0);
        }
        _notify(e, t, n, i) {
          const o = t.listeners[i],
            a = t.duration;
          o.forEach((i) =>
            i({
              chart: e,
              initial: t.initial,
              numSteps: a,
              currentStep: Math.min(n - t.start, a),
            })
          );
        }
        _refresh() {
          this._request ||
            ((this._running = !0),
            (this._request = yb.call(window, () => {
              this._update(),
                (this._request = null),
                this._running && this._refresh();
            })));
        }
        _update() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : Date.now(),
            t = 0;
          this._charts.forEach((n, i) => {
            if (!n.running || !n.items.length) return;
            const o = n.items;
            let a,
              s = o.length - 1,
              r = !1;
            for (; s >= 0; --s)
              (a = o[s]),
                a._active
                  ? (a._total > n.duration && (n.duration = a._total),
                    a.tick(e),
                    (r = !0))
                  : ((o[s] = o[o.length - 1]), o.pop());
            r && (i.draw(), this._notify(i, n, e, "progress")),
              o.length ||
                ((n.running = !1),
                this._notify(i, n, e, "complete"),
                (n.initial = !1)),
              (t += o.length);
          }),
            (this._lastDate = e),
            0 === t && (this._running = !1);
        }
        _getAnims(e) {
          const t = this._charts;
          let n = t.get(e);
          return (
            n ||
              ((n = {
                running: !1,
                initial: !0,
                items: [],
                listeners: { complete: [], progress: [] },
              }),
              t.set(e, n)),
            n
          );
        }
        listen(e, t, n) {
          this._getAnims(e).listeners[t].push(n);
        }
        add(e, t) {
          t && t.length && this._getAnims(e).items.push(...t);
        }
        has(e) {
          return this._getAnims(e).items.length > 0;
        }
        start(e) {
          const t = this._charts.get(e);
          t &&
            ((t.running = !0),
            (t.start = Date.now()),
            (t.duration = t.items.reduce(
              (e, t) => Math.max(e, t._duration),
              0
            )),
            this._refresh());
        }
        running(e) {
          if (!this._running) return !1;
          const t = this._charts.get(e);
          return !!(t && t.running && t.items.length);
        }
        stop(e) {
          const t = this._charts.get(e);
          if (!t || !t.items.length) return;
          const n = t.items;
          let i = n.length - 1;
          for (; i >= 0; --i) n[i].cancel();
          (t.items = []), this._notify(e, t, Date.now(), "complete");
        }
        remove(e) {
          return this._charts.delete(e);
        }
      }
      var dy = new uy();
      const hy = "transparent",
        py = {
          boolean: (e, t, n) => (n > 0.5 ? t : e),
          color(e, t, n) {
            const i = Ob(e || hy),
              o = i.valid && Ob(t || hy);
            return o && o.valid ? o.mix(i, n).hexString() : t;
          },
          number: (e, t, n) => e + (t - e) * n,
        };
      class fy {
        constructor(e, t, n, i) {
          const o = t[n];
          i = gx([e.to, i, o, e.from]);
          const a = gx([e.from, o, i]);
          (this._active = !0),
            (this._fn = e.fn || py[e.type || typeof a]),
            (this._easing = Lb[e.easing] || Lb.linear),
            (this._start = Math.floor(Date.now() + (e.delay || 0))),
            (this._duration = this._total = Math.floor(e.duration)),
            (this._loop = !!e.loop),
            (this._target = t),
            (this._prop = n),
            (this._from = a),
            (this._to = i),
            (this._promises = void 0);
        }
        active() {
          return this._active;
        }
        update(e, t, n) {
          if (this._active) {
            this._notify(!1);
            const i = this._target[this._prop],
              o = n - this._start,
              a = this._duration - o;
            (this._start = n),
              (this._duration = Math.floor(Math.max(a, e.duration))),
              (this._total += o),
              (this._loop = !!e.loop),
              (this._to = gx([e.to, t, i, e.from])),
              (this._from = gx([e.from, i, t]));
          }
        }
        cancel() {
          this._active &&
            (this.tick(Date.now()), (this._active = !1), this._notify(!1));
        }
        tick(e) {
          const t = e - this._start,
            n = this._duration,
            i = this._prop,
            o = this._from,
            a = this._loop,
            s = this._to;
          let r;
          if (((this._active = o !== s && (a || t < n)), !this._active))
            return (this._target[i] = s), void this._notify(!0);
          t < 0
            ? (this._target[i] = o)
            : ((r = (t / n) % 2),
              (r = a && r > 1 ? 2 - r : r),
              (r = this._easing(Math.min(1, Math.max(0, r)))),
              (this._target[i] = this._fn(o, s, r)));
        }
        wait() {
          const e = this._promises || (this._promises = []);
          return new Promise((t, n) => {
            e.push({ res: t, rej: n });
          });
        }
        _notify(e) {
          const t = e ? "res" : "rej",
            n = this._promises || [];
          for (let i = 0; i < n.length; i++) n[i][t]();
        }
      }
      class gy {
        constructor(e, t) {
          (this._chart = e), (this._properties = new Map()), this.configure(t);
        }
        configure(e) {
          if (!Av(e)) return;
          const t = Object.keys(Vb.animation),
            n = this._properties;
          Object.getOwnPropertyNames(e).forEach((i) => {
            const o = e[i];
            if (!Av(o)) return;
            const a = {};
            for (const e of t) a[e] = o[e];
            ((kv(o.properties) && o.properties) || [i]).forEach((e) => {
              (e !== i && n.has(e)) || n.set(e, a);
            });
          });
        }
        _animateOptions(e, t) {
          const n = t.options,
            i = (function (e, t) {
              if (!t) return;
              let n = e.options;
              if (!n) return void (e.options = t);
              n.$shared &&
                (e.options = n =
                  Object.assign({}, n, { $shared: !1, $animations: {} }));
              return n;
            })(e, n);
          if (!i) return [];
          const o = this._createAnimations(i, n);
          return (
            n.$shared &&
              (function (e, t) {
                const n = [],
                  i = Object.keys(t);
                for (let o = 0; o < i.length; o++) {
                  const t = e[i[o]];
                  t && t.active() && n.push(t.wait());
                }
                return Promise.all(n);
              })(e.options.$animations, n).then(
                () => {
                  e.options = n;
                },
                () => {}
              ),
            o
          );
        }
        _createAnimations(e, t) {
          const n = this._properties,
            i = [],
            o = e.$animations || (e.$animations = {}),
            a = Object.keys(t),
            s = Date.now();
          let r;
          for (r = a.length - 1; r >= 0; --r) {
            const l = a[r];
            if ("$" === l.charAt(0)) continue;
            if ("options" === l) {
              i.push(...this._animateOptions(e, t));
              continue;
            }
            const c = t[l];
            let u = o[l];
            const d = n.get(l);
            if (u) {
              if (d && u.active()) {
                u.update(d, c, s);
                continue;
              }
              u.cancel();
            }
            d && d.duration
              ? ((o[l] = u = new fy(d, e, l, c)), i.push(u))
              : (e[l] = c);
          }
          return i;
        }
        update(e, t) {
          if (0 === this._properties.size) return void Object.assign(e, t);
          const n = this._createAnimations(e, t);
          return n.length ? (dy.add(this._chart, n), !0) : void 0;
        }
      }
      function my(e, t) {
        const n = (e && e.options) || {},
          i = n.reverse,
          o = void 0 === n.min ? t : 0,
          a = void 0 === n.max ? t : 0;
        return { start: i ? a : o, end: i ? o : a };
      }
      function vy(e, t) {
        const n = [],
          i = e._getSortedDatasetMetas(t);
        let o, a;
        for (o = 0, a = i.length; o < a; ++o) n.push(i[o].index);
        return n;
      }
      function by(e, t, n) {
        let i =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
        const o = e.keys,
          a = "single" === i.mode;
        let s, r, l, c;
        if (null !== t) {
          for (s = 0, r = o.length; s < r; ++s) {
            if (((l = +o[s]), l === n)) {
              if (i.all) continue;
              break;
            }
            (c = e.values[l]),
              Cv(c) && (a || 0 === t || Jv(t) === Jv(c)) && (t += c);
          }
          return t;
        }
      }
      function xy(e, t) {
        const n = e && e.options.stacked;
        return n || (void 0 === n && void 0 !== t.stack);
      }
      function yy(e, t, n) {
        const i = e[t] || (e[t] = {});
        return i[n] || (i[n] = {});
      }
      function wy(e, t, n, i) {
        for (const o of t.getMatchingVisibleMetas(i).reverse()) {
          const t = e[o.index];
          if ((n && t > 0) || (!n && t < 0)) return o.index;
        }
        return null;
      }
      function Sy(e, t) {
        const { chart: n, _cachedMeta: i } = e,
          o = n._stacks || (n._stacks = {}),
          { iScale: a, vScale: s, index: r } = i,
          l = a.axis,
          c = s.axis,
          u = (function (e, t, n) {
            return ""
              .concat(e.id, ".")
              .concat(t.id, ".")
              .concat(n.stack || n.type);
          })(a, s, i),
          d = t.length;
        let h;
        for (let p = 0; p < d; ++p) {
          const e = t[p],
            { [l]: n, [c]: a } = e;
          (h = (e._stacks || (e._stacks = {}))[c] = yy(o, u, n)),
            (h[r] = a),
            (h._top = wy(h, s, !0, i.type)),
            (h._bottom = wy(h, s, !1, i.type));
          (h._visualValues || (h._visualValues = {}))[r] = a;
        }
      }
      function ky(e, t) {
        const n = e.scales;
        return Object.keys(n)
          .filter((e) => n[e].axis === t)
          .shift();
      }
      function Ay(e, t) {
        const n = e.controller.index,
          i = e.vScale && e.vScale.axis;
        if (i) {
          t = t || e._parsed;
          for (const e of t) {
            const t = e._stacks;
            if (!t || void 0 === t[i] || void 0 === t[i][n]) return;
            delete t[i][n],
              void 0 !== t[i]._visualValues &&
                void 0 !== t[i]._visualValues[n] &&
                delete t[i]._visualValues[n];
          }
        }
      }
      const Cy = (e) => "reset" === e || "none" === e,
        My = (e, t) => (t ? e : Object.assign({}, e));
      class Py {
        constructor(e, t) {
          (this.chart = e),
            (this._ctx = e.ctx),
            (this.index = t),
            (this._cachedDataOpts = {}),
            (this._cachedMeta = this.getMeta()),
            (this._type = this._cachedMeta.type),
            (this.options = void 0),
            (this._parsing = !1),
            (this._data = void 0),
            (this._objectData = void 0),
            (this._sharedOptions = void 0),
            (this._drawStart = void 0),
            (this._drawCount = void 0),
            (this.enableOptionSharing = !1),
            (this.supportsDecimation = !1),
            (this.$context = void 0),
            (this._syncList = []),
            (this.datasetElementType = new.target.datasetElementType),
            (this.dataElementType = new.target.dataElementType),
            this.initialize();
        }
        initialize() {
          const e = this._cachedMeta;
          this.configure(),
            this.linkScales(),
            (e._stacked = xy(e.vScale, e)),
            this.addElements(),
            this.options.fill &&
              !this.chart.isPluginEnabled("filler") &&
              console.warn(
                "Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options"
              );
        }
        updateIndex(e) {
          this.index !== e && Ay(this._cachedMeta), (this.index = e);
        }
        linkScales() {
          const e = this.chart,
            t = this._cachedMeta,
            n = this.getDataset(),
            i = (e, t, n, i) => ("x" === e ? t : "r" === e ? i : n),
            o = (t.xAxisID = Pv(n.xAxisID, ky(e, "x"))),
            a = (t.yAxisID = Pv(n.yAxisID, ky(e, "y"))),
            s = (t.rAxisID = Pv(n.rAxisID, ky(e, "r"))),
            r = t.indexAxis,
            l = (t.iAxisID = i(r, o, a, s)),
            c = (t.vAxisID = i(r, a, o, s));
          (t.xScale = this.getScaleForId(o)),
            (t.yScale = this.getScaleForId(a)),
            (t.rScale = this.getScaleForId(s)),
            (t.iScale = this.getScaleForId(l)),
            (t.vScale = this.getScaleForId(c));
        }
        getDataset() {
          return this.chart.data.datasets[this.index];
        }
        getMeta() {
          return this.chart.getDatasetMeta(this.index);
        }
        getScaleForId(e) {
          return this.chart.scales[e];
        }
        _getOtherScale(e) {
          const t = this._cachedMeta;
          return e === t.iScale ? t.vScale : t.iScale;
        }
        reset() {
          this._update("reset");
        }
        _destroy() {
          const e = this._cachedMeta;
          this._data && bb(this._data, this), e._stacked && Ay(e);
        }
        _dataCheck() {
          const e = this.getDataset(),
            t = e.data || (e.data = []),
            n = this._data;
          if (Av(t)) {
            const e = this._cachedMeta;
            this._data = (function (e, t) {
              const { iScale: n, vScale: i } = t,
                o = "x" === n.axis ? "x" : "y",
                a = "x" === i.axis ? "x" : "y",
                s = Object.keys(e),
                r = new Array(s.length);
              let l, c, u;
              for (l = 0, c = s.length; l < c; ++l)
                (u = s[l]), (r[l] = { [o]: u, [a]: e[u] });
              return r;
            })(t, e);
          } else if (n !== t) {
            if (n) {
              bb(n, this);
              const e = this._cachedMeta;
              Ay(e), (e._parsed = []);
            }
            t &&
              Object.isExtensible(t) &&
              (function (e, t) {
                e._chartjs
                  ? e._chartjs.listeners.push(t)
                  : (Object.defineProperty(e, "_chartjs", {
                      configurable: !0,
                      enumerable: !1,
                      value: { listeners: [t] },
                    }),
                    vb.forEach((t) => {
                      const n = "_onData" + Fv(t),
                        i = e[t];
                      Object.defineProperty(e, t, {
                        configurable: !0,
                        enumerable: !1,
                        value() {
                          for (
                            var t = arguments.length, o = new Array(t), a = 0;
                            a < t;
                            a++
                          )
                            o[a] = arguments[a];
                          const s = i.apply(this, o);
                          return (
                            e._chartjs.listeners.forEach((e) => {
                              "function" === typeof e[n] && e[n](...o);
                            }),
                            s
                          );
                        },
                      });
                    }));
              })(t, this),
              (this._syncList = []),
              (this._data = t);
          }
        }
        addElements() {
          const e = this._cachedMeta;
          this._dataCheck(),
            this.datasetElementType &&
              (e.dataset = new this.datasetElementType());
        }
        buildOrUpdateElements(e) {
          const t = this._cachedMeta,
            n = this.getDataset();
          let i = !1;
          this._dataCheck();
          const o = t._stacked;
          (t._stacked = xy(t.vScale, t)),
            t.stack !== n.stack && ((i = !0), Ay(t), (t.stack = n.stack)),
            this._resyncElements(e),
            (i || o !== t._stacked) && Sy(this, t._parsed);
        }
        configure() {
          const e = this.chart.config,
            t = e.datasetScopeKeys(this._type),
            n = e.getOptionScopes(this.getDataset(), t, !0);
          (this.options = e.createResolver(n, this.getContext())),
            (this._parsing = this.options.parsing),
            (this._cachedDataOpts = {});
        }
        parse(e, t) {
          const { _cachedMeta: n, _data: i } = this,
            { iScale: o, _stacked: a } = n,
            s = o.axis;
          let r,
            l,
            c,
            u = (0 === e && t === i.length) || n._sorted,
            d = e > 0 && n._parsed[e - 1];
          if (!1 === this._parsing) (n._parsed = i), (n._sorted = !0), (c = i);
          else {
            c = kv(i[e])
              ? this.parseArrayData(n, i, e, t)
              : Av(i[e])
              ? this.parseObjectData(n, i, e, t)
              : this.parsePrimitiveData(n, i, e, t);
            const o = () => null === l[s] || (d && l[s] < d[s]);
            for (r = 0; r < t; ++r)
              (n._parsed[r + e] = l = c[r]), u && (o() && (u = !1), (d = l));
            n._sorted = u;
          }
          a && Sy(this, c);
        }
        parsePrimitiveData(e, t, n, i) {
          const { iScale: o, vScale: a } = e,
            s = o.axis,
            r = a.axis,
            l = o.getLabels(),
            c = o === a,
            u = new Array(i);
          let d, h, p;
          for (d = 0, h = i; d < h; ++d)
            (p = d + n),
              (u[d] = { [s]: c || o.parse(l[p], p), [r]: a.parse(t[p], p) });
          return u;
        }
        parseArrayData(e, t, n, i) {
          const { xScale: o, yScale: a } = e,
            s = new Array(i);
          let r, l, c, u;
          for (r = 0, l = i; r < l; ++r)
            (c = r + n),
              (u = t[c]),
              (s[r] = { x: o.parse(u[0], c), y: a.parse(u[1], c) });
          return s;
        }
        parseObjectData(e, t, n, i) {
          const { xScale: o, yScale: a } = e,
            { xAxisKey: s = "x", yAxisKey: r = "y" } = this._parsing,
            l = new Array(i);
          let c, u, d, h;
          for (c = 0, u = i; c < u; ++c)
            (d = c + n),
              (h = t[d]),
              (l[c] = { x: o.parse(Bv(h, s), d), y: a.parse(Bv(h, r), d) });
          return l;
        }
        getParsed(e) {
          return this._cachedMeta._parsed[e];
        }
        getDataElement(e) {
          return this._cachedMeta.data[e];
        }
        applyStack(e, t, n) {
          const i = this.chart,
            o = this._cachedMeta,
            a = t[e.axis];
          return by(
            { keys: vy(i, !0), values: t._stacks[e.axis]._visualValues },
            a,
            o.index,
            { mode: n }
          );
        }
        updateRangeFromParsed(e, t, n, i) {
          const o = n[t.axis];
          let a = null === o ? NaN : o;
          const s = i && n._stacks[t.axis];
          i && s && ((i.values = s), (a = by(i, o, this._cachedMeta.index))),
            (e.min = Math.min(e.min, a)),
            (e.max = Math.max(e.max, a));
        }
        getMinMax(e, t) {
          const n = this._cachedMeta,
            i = n._parsed,
            o = n._sorted && e === n.iScale,
            a = i.length,
            s = this._getOtherScale(e),
            r = ((e, t, n) =>
              e &&
              !t.hidden &&
              t._stacked && { keys: vy(n, !0), values: null })(
              t,
              n,
              this.chart
            ),
            l = {
              min: Number.POSITIVE_INFINITY,
              max: Number.NEGATIVE_INFINITY,
            },
            { min: c, max: u } = (function (e) {
              const {
                min: t,
                max: n,
                minDefined: i,
                maxDefined: o,
              } = e.getUserBounds();
              return {
                min: i ? t : Number.NEGATIVE_INFINITY,
                max: o ? n : Number.POSITIVE_INFINITY,
              };
            })(s);
          let d, h;
          function p() {
            h = i[d];
            const t = h[s.axis];
            return !Cv(h[e.axis]) || c > t || u < t;
          }
          for (
            d = 0;
            d < a && (p() || (this.updateRangeFromParsed(l, e, h, r), !o));
            ++d
          );
          if (o)
            for (d = a - 1; d >= 0; --d)
              if (!p()) {
                this.updateRangeFromParsed(l, e, h, r);
                break;
              }
          return l;
        }
        getAllParsedValues(e) {
          const t = this._cachedMeta._parsed,
            n = [];
          let i, o, a;
          for (i = 0, o = t.length; i < o; ++i)
            (a = t[i][e.axis]), Cv(a) && n.push(a);
          return n;
        }
        getMaxOverflow() {
          return !1;
        }
        getLabelAndValue(e) {
          const t = this._cachedMeta,
            n = t.iScale,
            i = t.vScale,
            o = this.getParsed(e);
          return {
            label: n ? "" + n.getLabelForValue(o[n.axis]) : "",
            value: i ? "" + i.getLabelForValue(o[i.axis]) : "",
          };
        }
        _update(e) {
          const t = this._cachedMeta;
          this.update(e || "default"),
            (t._clip = (function (e) {
              let t, n, i, o;
              return (
                Av(e)
                  ? ((t = e.top), (n = e.right), (i = e.bottom), (o = e.left))
                  : (t = n = i = o = e),
                { top: t, right: n, bottom: i, left: o, disabled: !1 === e }
              );
            })(
              Pv(
                this.options.clip,
                (function (e, t, n) {
                  if (!1 === n) return !1;
                  const i = my(e, n),
                    o = my(t, n);
                  return {
                    top: o.end,
                    right: i.end,
                    bottom: o.start,
                    left: i.start,
                  };
                })(t.xScale, t.yScale, this.getMaxOverflow())
              )
            ));
        }
        update(e) {}
        draw() {
          const e = this._ctx,
            t = this.chart,
            n = this._cachedMeta,
            i = n.data || [],
            o = t.chartArea,
            a = [],
            s = this._drawStart || 0,
            r = this._drawCount || i.length - s,
            l = this.options.drawActiveElementsOnTop;
          let c;
          for (n.dataset && n.dataset.draw(e, o, s, r), c = s; c < s + r; ++c) {
            const t = i[c];
            t.hidden || (t.active && l ? a.push(t) : t.draw(e, o));
          }
          for (c = 0; c < a.length; ++c) a[c].draw(e, o);
        }
        getStyle(e, t) {
          const n = t ? "active" : "default";
          return void 0 === e && this._cachedMeta.dataset
            ? this.resolveDatasetElementOptions(n)
            : this.resolveDataElementOptions(e || 0, n);
        }
        getContext(e, t, n) {
          const i = this.getDataset();
          let o;
          if (e >= 0 && e < this._cachedMeta.data.length) {
            const t = this._cachedMeta.data[e];
            (o =
              t.$context ||
              (t.$context = (function (e, t, n) {
                return mx(e, {
                  active: !1,
                  dataIndex: t,
                  parsed: void 0,
                  raw: void 0,
                  element: n,
                  index: t,
                  mode: "default",
                  type: "data",
                });
              })(this.getContext(), e, t))),
              (o.parsed = this.getParsed(e)),
              (o.raw = i.data[e]),
              (o.index = o.dataIndex = e);
          } else
            (o =
              this.$context ||
              (this.$context = (function (e, t) {
                return mx(e, {
                  active: !1,
                  dataset: void 0,
                  datasetIndex: t,
                  index: t,
                  mode: "default",
                  type: "dataset",
                });
              })(this.chart.getContext(), this.index))),
              (o.dataset = i),
              (o.index = o.datasetIndex = this.index);
          return (o.active = !!t), (o.mode = n), o;
        }
        resolveDatasetElementOptions(e) {
          return this._resolveElementOptions(this.datasetElementType.id, e);
        }
        resolveDataElementOptions(e, t) {
          return this._resolveElementOptions(this.dataElementType.id, t, e);
        }
        _resolveElementOptions(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "default",
            n = arguments.length > 2 ? arguments[2] : void 0;
          const i = "active" === t,
            o = this._cachedDataOpts,
            a = e + "-" + t,
            s = o[a],
            r = this.enableOptionSharing && Wv(n);
          if (s) return My(s, r);
          const l = this.chart.config,
            c = l.datasetElementScopeKeys(this._type, e),
            u = i ? ["".concat(e, "Hover"), "hover", e, ""] : [e, ""],
            d = l.getOptionScopes(this.getDataset(), c),
            h = Object.keys(Vb.elements[e]),
            p = l.resolveNamedOptions(d, h, () => this.getContext(n, i, t), u);
          return (
            p.$shared && ((p.$shared = r), (o[a] = Object.freeze(My(p, r)))), p
          );
        }
        _resolveAnimations(e, t, n) {
          const i = this.chart,
            o = this._cachedDataOpts,
            a = "animation-".concat(t),
            s = o[a];
          if (s) return s;
          let r;
          if (!1 !== i.options.animation) {
            const i = this.chart.config,
              o = i.datasetAnimationScopeKeys(this._type, t),
              a = i.getOptionScopes(this.getDataset(), o);
            r = i.createResolver(a, this.getContext(e, n, t));
          }
          const l = new gy(i, r && r.animations);
          return r && r._cacheable && (o[a] = Object.freeze(l)), l;
        }
        getSharedOptions(e) {
          if (e.$shared)
            return (
              this._sharedOptions ||
              (this._sharedOptions = Object.assign({}, e))
            );
        }
        includeOptions(e, t) {
          return !t || Cy(e) || this.chart._animationsDisabled;
        }
        _getSharedOptions(e, t) {
          const n = this.resolveDataElementOptions(e, t),
            i = this._sharedOptions,
            o = this.getSharedOptions(n),
            a = this.includeOptions(t, o) || o !== i;
          return (
            this.updateSharedOptions(o, t, n),
            { sharedOptions: o, includeOptions: a }
          );
        }
        updateElement(e, t, n, i) {
          Cy(i)
            ? Object.assign(e, n)
            : this._resolveAnimations(t, i).update(e, n);
        }
        updateSharedOptions(e, t, n) {
          e && !Cy(t) && this._resolveAnimations(void 0, t).update(e, n);
        }
        _setStyle(e, t, n, i) {
          e.active = i;
          const o = this.getStyle(t, i);
          this._resolveAnimations(t, n, i).update(e, {
            options: (!i && this.getSharedOptions(o)) || o,
          });
        }
        removeHoverStyle(e, t, n) {
          this._setStyle(e, n, "active", !1);
        }
        setHoverStyle(e, t, n) {
          this._setStyle(e, n, "active", !0);
        }
        _removeDatasetHoverStyle() {
          const e = this._cachedMeta.dataset;
          e && this._setStyle(e, void 0, "active", !1);
        }
        _setDatasetHoverStyle() {
          const e = this._cachedMeta.dataset;
          e && this._setStyle(e, void 0, "active", !0);
        }
        _resyncElements(e) {
          const t = this._data,
            n = this._cachedMeta.data;
          for (const [s, r, l] of this._syncList) this[s](r, l);
          this._syncList = [];
          const i = n.length,
            o = t.length,
            a = Math.min(o, i);
          a && this.parse(0, a),
            o > i
              ? this._insertElements(i, o - i, e)
              : o < i && this._removeElements(o, i - o);
        }
        _insertElements(e, t) {
          let n =
            !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          const i = this._cachedMeta,
            o = i.data,
            a = e + t;
          let s;
          const r = (e) => {
            for (e.length += t, s = e.length - 1; s >= a; s--) e[s] = e[s - t];
          };
          for (r(o), s = e; s < a; ++s) o[s] = new this.dataElementType();
          this._parsing && r(i._parsed),
            this.parse(e, t),
            n && this.updateElements(o, e, t, "reset");
        }
        updateElements(e, t, n, i) {}
        _removeElements(e, t) {
          const n = this._cachedMeta;
          if (this._parsing) {
            const i = n._parsed.splice(e, t);
            n._stacked && Ay(n, i);
          }
          n.data.splice(e, t);
        }
        _sync(e) {
          if (this._parsing) this._syncList.push(e);
          else {
            const [t, n, i] = e;
            this[t](n, i);
          }
          this.chart._dataChanges.push([this.index, ...e]);
        }
        _onDataPush() {
          const e = arguments.length;
          this._sync(["_insertElements", this.getDataset().data.length - e, e]);
        }
        _onDataPop() {
          this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
        }
        _onDataShift() {
          this._sync(["_removeElements", 0, 1]);
        }
        _onDataSplice(e, t) {
          t && this._sync(["_removeElements", e, t]);
          const n = arguments.length - 2;
          n && this._sync(["_insertElements", e, n]);
        }
        _onDataUnshift() {
          this._sync(["_insertElements", 0, arguments.length]);
        }
      }
      function Ey(e) {
        const t = e.iScale,
          n = (function (e, t) {
            if (!e._cache.$bar) {
              const n = e.getMatchingVisibleMetas(t);
              let i = [];
              for (let t = 0, o = n.length; t < o; t++)
                i = i.concat(n[t].controller.getAllParsedValues(e));
              e._cache.$bar = xb(i.sort((e, t) => e - t));
            }
            return e._cache.$bar;
          })(t, e.type);
        let i,
          o,
          a,
          s,
          r = t._length;
        const l = () => {
          32767 !== a &&
            -32768 !== a &&
            (Wv(s) && (r = Math.min(r, Math.abs(a - s) || r)), (s = a));
        };
        for (i = 0, o = n.length; i < o; ++i)
          (a = t.getPixelForValue(n[i])), l();
        for (s = void 0, i = 0, o = t.ticks.length; i < o; ++i)
          (a = t.getPixelForTick(i)), l();
        return r;
      }
      function Ly(e, t, n, i) {
        return (
          kv(e)
            ? (function (e, t, n, i) {
                const o = n.parse(e[0], i),
                  a = n.parse(e[1], i),
                  s = Math.min(o, a),
                  r = Math.max(o, a);
                let l = s,
                  c = r;
                Math.abs(s) > Math.abs(r) && ((l = r), (c = s)),
                  (t[n.axis] = c),
                  (t._custom = {
                    barStart: l,
                    barEnd: c,
                    start: o,
                    end: a,
                    min: s,
                    max: r,
                  });
              })(e, t, n, i)
            : (t[n.axis] = n.parse(e, i)),
          t
        );
      }
      function Ty(e, t, n, i) {
        const o = e.iScale,
          a = e.vScale,
          s = o.getLabels(),
          r = o === a,
          l = [];
        let c, u, d, h;
        for (c = n, u = n + i; c < u; ++c)
          (h = t[c]),
            (d = {}),
            (d[o.axis] = r || o.parse(s[c], c)),
            l.push(Ly(h, d, a, c));
        return l;
      }
      function Oy(e) {
        return e && void 0 !== e.barStart && void 0 !== e.barEnd;
      }
      function Ry(e, t, n, i) {
        let o = t.borderSkipped;
        const a = {};
        if (!o) return void (e.borderSkipped = a);
        if (!0 === o)
          return void (e.borderSkipped = {
            top: !0,
            right: !0,
            bottom: !0,
            left: !0,
          });
        const {
          start: s,
          end: r,
          reverse: l,
          top: c,
          bottom: u,
        } = (function (e) {
          let t, n, i, o, a;
          return (
            e.horizontal
              ? ((t = e.base > e.x), (n = "left"), (i = "right"))
              : ((t = e.base < e.y), (n = "bottom"), (i = "top")),
            t ? ((o = "end"), (a = "start")) : ((o = "start"), (a = "end")),
            { start: n, end: i, reverse: t, top: o, bottom: a }
          );
        })(e);
        "middle" === o &&
          n &&
          ((e.enableBorderRadius = !0),
          (n._top || 0) === i
            ? (o = c)
            : (n._bottom || 0) === i
            ? (o = u)
            : ((a[Iy(u, s, r, l)] = !0), (o = c))),
          (a[Iy(o, s, r, l)] = !0),
          (e.borderSkipped = a);
      }
      function Iy(e, t, n, i) {
        var o, a, s;
        return (
          i
            ? ((s = n),
              (e = Ny((e = (o = e) === (a = t) ? s : o === s ? a : o), n, t)))
            : (e = Ny(e, t, n)),
          e
        );
      }
      function Ny(e, t, n) {
        return "start" === e ? t : "end" === e ? n : e;
      }
      function _y(e, t, n) {
        let { inflateAmount: i } = t;
        e.inflateAmount = "auto" === i ? (1 === n ? 0.33 : 0) : i;
      }
      _(Py, "defaults", {}),
        _(Py, "datasetElementType", null),
        _(Py, "dataElementType", null);
      class Dy extends Py {
        parsePrimitiveData(e, t, n, i) {
          return Ty(e, t, n, i);
        }
        parseArrayData(e, t, n, i) {
          return Ty(e, t, n, i);
        }
        parseObjectData(e, t, n, i) {
          const { iScale: o, vScale: a } = e,
            { xAxisKey: s = "x", yAxisKey: r = "y" } = this._parsing,
            l = "x" === o.axis ? s : r,
            c = "x" === a.axis ? s : r,
            u = [];
          let d, h, p, f;
          for (d = n, h = n + i; d < h; ++d)
            (f = t[d]),
              (p = {}),
              (p[o.axis] = o.parse(Bv(f, l), d)),
              u.push(Ly(Bv(f, c), p, a, d));
          return u;
        }
        updateRangeFromParsed(e, t, n, i) {
          super.updateRangeFromParsed(e, t, n, i);
          const o = n._custom;
          o &&
            t === this._cachedMeta.vScale &&
            ((e.min = Math.min(e.min, o.min)),
            (e.max = Math.max(e.max, o.max)));
        }
        getMaxOverflow() {
          return 0;
        }
        getLabelAndValue(e) {
          const t = this._cachedMeta,
            { iScale: n, vScale: i } = t,
            o = this.getParsed(e),
            a = o._custom,
            s = Oy(a)
              ? "[" + a.start + ", " + a.end + "]"
              : "" + i.getLabelForValue(o[i.axis]);
          return { label: "" + n.getLabelForValue(o[n.axis]), value: s };
        }
        initialize() {
          (this.enableOptionSharing = !0), super.initialize();
          this._cachedMeta.stack = this.getDataset().stack;
        }
        update(e) {
          const t = this._cachedMeta;
          this.updateElements(t.data, 0, t.data.length, e);
        }
        updateElements(e, t, n, i) {
          const o = "reset" === i,
            {
              index: a,
              _cachedMeta: { vScale: s },
            } = this,
            r = s.getBasePixel(),
            l = s.isHorizontal(),
            c = this._getRuler(),
            { sharedOptions: u, includeOptions: d } = this._getSharedOptions(
              t,
              i
            );
          for (let h = t; h < t + n; h++) {
            const t = this.getParsed(h),
              n =
                o || Sv(t[s.axis])
                  ? { base: r, head: r }
                  : this._calculateBarValuePixels(h),
              p = this._calculateBarIndexPixels(h, c),
              f = (t._stacks || {})[s.axis],
              g = {
                horizontal: l,
                base: n.base,
                enableBorderRadius:
                  !f || Oy(t._custom) || a === f._top || a === f._bottom,
                x: l ? n.head : p.center,
                y: l ? p.center : n.head,
                height: l ? p.size : Math.abs(n.size),
                width: l ? Math.abs(n.size) : p.size,
              };
            d &&
              (g.options =
                u ||
                this.resolveDataElementOptions(h, e[h].active ? "active" : i));
            const m = g.options || e[h].options;
            Ry(g, m, f, a),
              _y(g, m, c.ratio),
              this.updateElement(e[h], h, g, i);
          }
        }
        _getStacks(e, t) {
          const { iScale: n } = this._cachedMeta,
            i = n
              .getMatchingVisibleMetas(this._type)
              .filter((e) => e.controller.options.grouped),
            o = n.options.stacked,
            a = [],
            s = this._cachedMeta.controller.getParsed(t),
            r = s && s[n.axis],
            l = (e) => {
              const t = e._parsed.find((e) => e[n.axis] === r),
                i = t && t[e.vScale.axis];
              if (Sv(i) || isNaN(i)) return !0;
            };
          for (const c of i)
            if (
              (void 0 === t || !l(c)) &&
              ((!1 === o ||
                -1 === a.indexOf(c.stack) ||
                (void 0 === o && void 0 === c.stack)) &&
                a.push(c.stack),
              c.index === e)
            )
              break;
          return a.length || a.push(void 0), a;
        }
        _getStackCount(e) {
          return this._getStacks(void 0, e).length;
        }
        _getStackIndex(e, t, n) {
          const i = this._getStacks(e, n),
            o = void 0 !== t ? i.indexOf(t) : -1;
          return -1 === o ? i.length - 1 : o;
        }
        _getRuler() {
          const e = this.options,
            t = this._cachedMeta,
            n = t.iScale,
            i = [];
          let o, a;
          for (o = 0, a = t.data.length; o < a; ++o)
            i.push(n.getPixelForValue(this.getParsed(o)[n.axis], o));
          const s = e.barThickness;
          return {
            min: s || Ey(t),
            pixels: i,
            start: n._startPixel,
            end: n._endPixel,
            stackCount: this._getStackCount(),
            scale: n,
            grouped: e.grouped,
            ratio: s ? 1 : e.categoryPercentage * e.barPercentage,
          };
        }
        _calculateBarValuePixels(e) {
          const {
              _cachedMeta: { vScale: t, _stacked: n, index: i },
              options: { base: o, minBarLength: a },
            } = this,
            s = o || 0,
            r = this.getParsed(e),
            l = r._custom,
            c = Oy(l);
          let u,
            d,
            h = r[t.axis],
            p = 0,
            f = n ? this.applyStack(t, r, n) : h;
          f !== h && ((p = f - h), (f = h)),
            c &&
              ((h = l.barStart),
              (f = l.barEnd - l.barStart),
              0 !== h && Jv(h) !== Jv(l.barEnd) && (p = 0),
              (p += h));
          const g = Sv(o) || c ? p : o;
          let m = t.getPixelForValue(g);
          if (
            ((u = this.chart.getDataVisibility(e)
              ? t.getPixelForValue(p + f)
              : m),
            (d = u - m),
            Math.abs(d) < a)
          ) {
            (d =
              (function (e, t, n) {
                return 0 !== e
                  ? Jv(e)
                  : (t.isHorizontal() ? 1 : -1) * (t.min >= n ? 1 : -1);
              })(d, t, s) * a),
              h === s && (m -= d / 2);
            const e = t.getPixelForDecimal(0),
              o = t.getPixelForDecimal(1),
              l = Math.min(e, o),
              p = Math.max(e, o);
            (m = Math.max(Math.min(m, p), l)),
              (u = m + d),
              n &&
                !c &&
                (r._stacks[t.axis]._visualValues[i] =
                  t.getValueForPixel(u) - t.getValueForPixel(m));
          }
          if (m === t.getPixelForValue(s)) {
            const e = (Jv(d) * t.getLineWidthForValue(s)) / 2;
            (m += e), (d -= e);
          }
          return { size: d, base: m, head: u, center: u + d / 2 };
        }
        _calculateBarIndexPixels(e, t) {
          const n = t.scale,
            i = this.options,
            o = i.skipNull,
            a = Pv(i.maxBarThickness, 1 / 0);
          let s, r;
          if (t.grouped) {
            const n = o ? this._getStackCount(e) : t.stackCount,
              l =
                "flex" === i.barThickness
                  ? (function (e, t, n, i) {
                      const o = t.pixels,
                        a = o[e];
                      let s = e > 0 ? o[e - 1] : null,
                        r = e < o.length - 1 ? o[e + 1] : null;
                      const l = n.categoryPercentage;
                      null === s &&
                        (s = a - (null === r ? t.end - t.start : r - a)),
                        null === r && (r = a + a - s);
                      const c = a - ((a - Math.min(s, r)) / 2) * l;
                      return {
                        chunk: ((Math.abs(r - s) / 2) * l) / i,
                        ratio: n.barPercentage,
                        start: c,
                      };
                    })(e, t, i, n)
                  : (function (e, t, n, i) {
                      const o = n.barThickness;
                      let a, s;
                      return (
                        Sv(o)
                          ? ((a = t.min * n.categoryPercentage),
                            (s = n.barPercentage))
                          : ((a = o * i), (s = 1)),
                        { chunk: a / i, ratio: s, start: t.pixels[e] - a / 2 }
                      );
                    })(e, t, i, n),
              c = this._getStackIndex(
                this.index,
                this._cachedMeta.stack,
                o ? e : void 0
              );
            (s = l.start + l.chunk * c + l.chunk / 2),
              (r = Math.min(a, l.chunk * l.ratio));
          } else
            (s = n.getPixelForValue(this.getParsed(e)[n.axis], e)),
              (r = Math.min(a, t.min * t.ratio));
          return { base: s - r / 2, head: s + r / 2, center: s, size: r };
        }
        draw() {
          const e = this._cachedMeta,
            t = e.vScale,
            n = e.data,
            i = n.length;
          let o = 0;
          for (; o < i; ++o)
            null === this.getParsed(o)[t.axis] ||
              n[o].hidden ||
              n[o].draw(this._ctx);
        }
      }
      _(Dy, "id", "bar"),
        _(Dy, "defaults", {
          datasetElementType: !1,
          dataElementType: "bar",
          categoryPercentage: 0.8,
          barPercentage: 0.9,
          grouped: !0,
          animations: {
            numbers: {
              type: "number",
              properties: ["x", "y", "base", "width", "height"],
            },
          },
        }),
        _(Dy, "overrides", {
          scales: {
            _index_: { type: "category", offset: !0, grid: { offset: !0 } },
            _value_: { type: "linear", beginAtZero: !0 },
          },
        });
      class zy extends Py {
        initialize() {
          (this.enableOptionSharing = !0), super.initialize();
        }
        parsePrimitiveData(e, t, n, i) {
          const o = super.parsePrimitiveData(e, t, n, i);
          for (let a = 0; a < o.length; a++)
            o[a]._custom = this.resolveDataElementOptions(a + n).radius;
          return o;
        }
        parseArrayData(e, t, n, i) {
          const o = super.parseArrayData(e, t, n, i);
          for (let a = 0; a < o.length; a++) {
            const e = t[n + a];
            o[a]._custom = Pv(
              e[2],
              this.resolveDataElementOptions(a + n).radius
            );
          }
          return o;
        }
        parseObjectData(e, t, n, i) {
          const o = super.parseObjectData(e, t, n, i);
          for (let a = 0; a < o.length; a++) {
            const e = t[n + a];
            o[a]._custom = Pv(
              e && e.r && +e.r,
              this.resolveDataElementOptions(a + n).radius
            );
          }
          return o;
        }
        getMaxOverflow() {
          const e = this._cachedMeta.data;
          let t = 0;
          for (let n = e.length - 1; n >= 0; --n)
            t = Math.max(t, e[n].size(this.resolveDataElementOptions(n)) / 2);
          return t > 0 && t;
        }
        getLabelAndValue(e) {
          const t = this._cachedMeta,
            n = this.chart.data.labels || [],
            { xScale: i, yScale: o } = t,
            a = this.getParsed(e),
            s = i.getLabelForValue(a.x),
            r = o.getLabelForValue(a.y),
            l = a._custom;
          return {
            label: n[e] || "",
            value: "(" + s + ", " + r + (l ? ", " + l : "") + ")",
          };
        }
        update(e) {
          const t = this._cachedMeta.data;
          this.updateElements(t, 0, t.length, e);
        }
        updateElements(e, t, n, i) {
          const o = "reset" === i,
            { iScale: a, vScale: s } = this._cachedMeta,
            { sharedOptions: r, includeOptions: l } = this._getSharedOptions(
              t,
              i
            ),
            c = a.axis,
            u = s.axis;
          for (let d = t; d < t + n; d++) {
            const t = e[d],
              n = !o && this.getParsed(d),
              h = {},
              p = (h[c] = o
                ? a.getPixelForDecimal(0.5)
                : a.getPixelForValue(n[c])),
              f = (h[u] = o ? s.getBasePixel() : s.getPixelForValue(n[u]));
            (h.skip = isNaN(p) || isNaN(f)),
              l &&
                ((h.options =
                  r ||
                  this.resolveDataElementOptions(d, t.active ? "active" : i)),
                o && (h.options.radius = 0)),
              this.updateElement(t, d, h, i);
          }
        }
        resolveDataElementOptions(e, t) {
          const n = this.getParsed(e);
          let i = super.resolveDataElementOptions(e, t);
          i.$shared && (i = Object.assign({}, i, { $shared: !1 }));
          const o = i.radius;
          return (
            "active" !== t && (i.radius = 0),
            (i.radius += Pv(n && n._custom, o)),
            i
          );
        }
      }
      _(zy, "id", "bubble"),
        _(zy, "defaults", {
          datasetElementType: !1,
          dataElementType: "point",
          animations: {
            numbers: {
              type: "number",
              properties: ["x", "y", "borderWidth", "radius"],
            },
          },
        }),
        _(zy, "overrides", {
          scales: { x: { type: "linear" }, y: { type: "linear" } },
        });
      class jy extends Py {
        constructor(e, t) {
          super(e, t),
            (this.enableOptionSharing = !0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.offsetX = void 0),
            (this.offsetY = void 0);
        }
        linkScales() {}
        parse(e, t) {
          const n = this.getDataset().data,
            i = this._cachedMeta;
          if (!1 === this._parsing) i._parsed = n;
          else {
            let o,
              a,
              s = (e) => +n[e];
            if (Av(n[e])) {
              const { key: e = "value" } = this._parsing;
              s = (t) => +Bv(n[t], e);
            }
            for (o = e, a = e + t; o < a; ++o) i._parsed[o] = s(o);
          }
        }
        _getRotation() {
          return ob(this.options.rotation - 90);
        }
        _getCircumference() {
          return ob(this.options.circumference);
        }
        _getRotationExtents() {
          let e = Uv,
            t = -Uv;
          for (let n = 0; n < this.chart.data.datasets.length; ++n)
            if (
              this.chart.isDatasetVisible(n) &&
              this.chart.getDatasetMeta(n).type === this._type
            ) {
              const i = this.chart.getDatasetMeta(n).controller,
                o = i._getRotation(),
                a = i._getCircumference();
              (e = Math.min(e, o)), (t = Math.max(t, o + a));
            }
          return { rotation: e, circumference: t - e };
        }
        update(e) {
          const t = this.chart,
            { chartArea: n } = t,
            i = this._cachedMeta,
            o = i.data,
            a =
              this.getMaxBorderWidth() +
              this.getMaxOffset(o) +
              this.options.spacing,
            s = Math.max((Math.min(n.width, n.height) - a) / 2, 0),
            r = Math.min(
              ((l = this.options.cutout),
              (c = s),
              "string" === typeof l && l.endsWith("%")
                ? parseFloat(l) / 100
                : +l / c),
              1
            );
          var l, c;
          const u = this._getRingWeight(this.index),
            { circumference: d, rotation: h } = this._getRotationExtents(),
            {
              ratioX: p,
              ratioY: f,
              offsetX: g,
              offsetY: m,
            } = (function (e, t, n) {
              let i = 1,
                o = 1,
                a = 0,
                s = 0;
              if (t < Uv) {
                const r = e,
                  l = r + t,
                  c = Math.cos(r),
                  u = Math.sin(r),
                  d = Math.cos(l),
                  h = Math.sin(l),
                  p = (e, t, i) =>
                    db(e, r, l, !0) ? 1 : Math.max(t, t * n, i, i * n),
                  f = (e, t, i) =>
                    db(e, r, l, !0) ? -1 : Math.min(t, t * n, i, i * n),
                  g = p(0, c, d),
                  m = p(qv, u, h),
                  v = f(Vv, c, d),
                  b = f(Vv + qv, u, h);
                (i = (g - v) / 2),
                  (o = (m - b) / 2),
                  (a = -(g + v) / 2),
                  (s = -(m + b) / 2);
              }
              return { ratioX: i, ratioY: o, offsetX: a, offsetY: s };
            })(h, d, r),
            v = (n.width - a) / p,
            b = (n.height - a) / f,
            x = Math.max(Math.min(v, b) / 2, 0),
            y = Ev(this.options.radius, x),
            w = (y - Math.max(y * r, 0)) / this._getVisibleDatasetWeightTotal();
          (this.offsetX = g * y),
            (this.offsetY = m * y),
            (i.total = this.calculateTotal()),
            (this.outerRadius = y - w * this._getRingWeightOffset(this.index)),
            (this.innerRadius = Math.max(this.outerRadius - w * u, 0)),
            this.updateElements(o, 0, o.length, e);
        }
        _circumference(e, t) {
          const n = this.options,
            i = this._cachedMeta,
            o = this._getCircumference();
          return (t && n.animation.animateRotate) ||
            !this.chart.getDataVisibility(e) ||
            null === i._parsed[e] ||
            i.data[e].hidden
            ? 0
            : this.calculateCircumference((i._parsed[e] * o) / Uv);
        }
        updateElements(e, t, n, i) {
          const o = "reset" === i,
            a = this.chart,
            s = a.chartArea,
            r = a.options.animation,
            l = (s.left + s.right) / 2,
            c = (s.top + s.bottom) / 2,
            u = o && r.animateScale,
            d = u ? 0 : this.innerRadius,
            h = u ? 0 : this.outerRadius,
            { sharedOptions: p, includeOptions: f } = this._getSharedOptions(
              t,
              i
            );
          let g,
            m = this._getRotation();
          for (g = 0; g < t; ++g) m += this._circumference(g, o);
          for (g = t; g < t + n; ++g) {
            const t = this._circumference(g, o),
              n = e[g],
              a = {
                x: l + this.offsetX,
                y: c + this.offsetY,
                startAngle: m,
                endAngle: m + t,
                circumference: t,
                outerRadius: h,
                innerRadius: d,
              };
            f &&
              (a.options =
                p ||
                this.resolveDataElementOptions(g, n.active ? "active" : i)),
              (m += t),
              this.updateElement(n, g, a, i);
          }
        }
        calculateTotal() {
          const e = this._cachedMeta,
            t = e.data;
          let n,
            i = 0;
          for (n = 0; n < t.length; n++) {
            const o = e._parsed[n];
            null === o ||
              isNaN(o) ||
              !this.chart.getDataVisibility(n) ||
              t[n].hidden ||
              (i += Math.abs(o));
          }
          return i;
        }
        calculateCircumference(e) {
          const t = this._cachedMeta.total;
          return t > 0 && !isNaN(e) ? Uv * (Math.abs(e) / t) : 0;
        }
        getLabelAndValue(e) {
          const t = this._cachedMeta,
            n = this.chart,
            i = n.data.labels || [],
            o = Db(t._parsed[e], n.options.locale);
          return { label: i[e] || "", value: o };
        }
        getMaxBorderWidth(e) {
          let t = 0;
          const n = this.chart;
          let i, o, a, s, r;
          if (!e)
            for (i = 0, o = n.data.datasets.length; i < o; ++i)
              if (n.isDatasetVisible(i)) {
                (a = n.getDatasetMeta(i)), (e = a.data), (s = a.controller);
                break;
              }
          if (!e) return 0;
          for (i = 0, o = e.length; i < o; ++i)
            (r = s.resolveDataElementOptions(i)),
              "inner" !== r.borderAlign &&
                (t = Math.max(t, r.borderWidth || 0, r.hoverBorderWidth || 0));
          return t;
        }
        getMaxOffset(e) {
          let t = 0;
          for (let n = 0, i = e.length; n < i; ++n) {
            const e = this.resolveDataElementOptions(n);
            t = Math.max(t, e.offset || 0, e.hoverOffset || 0);
          }
          return t;
        }
        _getRingWeightOffset(e) {
          let t = 0;
          for (let n = 0; n < e; ++n)
            this.chart.isDatasetVisible(n) && (t += this._getRingWeight(n));
          return t;
        }
        _getRingWeight(e) {
          return Math.max(Pv(this.chart.data.datasets[e].weight, 1), 0);
        }
        _getVisibleDatasetWeightTotal() {
          return (
            this._getRingWeightOffset(this.chart.data.datasets.length) || 1
          );
        }
      }
      _(jy, "id", "doughnut"),
        _(jy, "defaults", {
          datasetElementType: !1,
          dataElementType: "arc",
          animation: { animateRotate: !0, animateScale: !1 },
          animations: {
            numbers: {
              type: "number",
              properties: [
                "circumference",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "startAngle",
                "x",
                "y",
                "offset",
                "borderWidth",
                "spacing",
              ],
            },
          },
          cutout: "50%",
          rotation: 0,
          circumference: 360,
          radius: "100%",
          spacing: 0,
          indexAxis: "r",
        }),
        _(jy, "descriptors", {
          _scriptable: (e) => "spacing" !== e,
          _indexable: (e) =>
            "spacing" !== e &&
            !e.startsWith("borderDash") &&
            !e.startsWith("hoverBorderDash"),
        }),
        _(jy, "overrides", {
          aspectRatio: 1,
          plugins: {
            legend: {
              labels: {
                generateLabels(e) {
                  const t = e.data;
                  if (t.labels.length && t.datasets.length) {
                    const {
                      labels: { pointStyle: n, color: i },
                    } = e.legend.options;
                    return t.labels.map((t, o) => {
                      const a = e.getDatasetMeta(0).controller.getStyle(o);
                      return {
                        text: t,
                        fillStyle: a.backgroundColor,
                        strokeStyle: a.borderColor,
                        fontColor: i,
                        lineWidth: a.borderWidth,
                        pointStyle: n,
                        hidden: !e.getDataVisibility(o),
                        index: o,
                      };
                    });
                  }
                  return [];
                },
              },
              onClick(e, t, n) {
                n.chart.toggleDataVisibility(t.index), n.chart.update();
              },
            },
          },
        });
      class By extends Py {
        initialize() {
          (this.enableOptionSharing = !0),
            (this.supportsDecimation = !0),
            super.initialize();
        }
        update(e) {
          const t = this._cachedMeta,
            { dataset: n, data: i = [], _dataset: o } = t,
            a = this.chart._animationsDisabled;
          let { start: s, count: r } = Ab(t, i, a);
          (this._drawStart = s),
            (this._drawCount = r),
            Cb(t) && ((s = 0), (r = i.length)),
            (n._chart = this.chart),
            (n._datasetIndex = this.index),
            (n._decimated = !!o._decimated),
            (n.points = i);
          const l = this.resolveDatasetElementOptions(e);
          this.options.showLine || (l.borderWidth = 0),
            (l.segment = this.options.segment),
            this.updateElement(n, void 0, { animated: !a, options: l }, e),
            this.updateElements(i, s, r, e);
        }
        updateElements(e, t, n, i) {
          const o = "reset" === i,
            {
              iScale: a,
              vScale: s,
              _stacked: r,
              _dataset: l,
            } = this._cachedMeta,
            { sharedOptions: c, includeOptions: u } = this._getSharedOptions(
              t,
              i
            ),
            d = a.axis,
            h = s.axis,
            { spanGaps: p, segment: f } = this.options,
            g = nb(p) ? p : Number.POSITIVE_INFINITY,
            m = this.chart._animationsDisabled || o || "none" === i,
            v = t + n,
            b = e.length;
          let x = t > 0 && this.getParsed(t - 1);
          for (let y = 0; y < b; ++y) {
            const n = e[y],
              p = m ? n : {};
            if (y < t || y >= v) {
              p.skip = !0;
              continue;
            }
            const b = this.getParsed(y),
              w = Sv(b[h]),
              S = (p[d] = a.getPixelForValue(b[d], y)),
              k = (p[h] =
                o || w
                  ? s.getBasePixel()
                  : s.getPixelForValue(r ? this.applyStack(s, b, r) : b[h], y));
            (p.skip = isNaN(S) || isNaN(k) || w),
              (p.stop = y > 0 && Math.abs(b[d] - x[d]) > g),
              f && ((p.parsed = b), (p.raw = l.data[y])),
              u &&
                (p.options =
                  c ||
                  this.resolveDataElementOptions(y, n.active ? "active" : i)),
              m || this.updateElement(n, y, p, i),
              (x = b);
          }
        }
        getMaxOverflow() {
          const e = this._cachedMeta,
            t = e.dataset,
            n = (t.options && t.options.borderWidth) || 0,
            i = e.data || [];
          if (!i.length) return n;
          const o = i[0].size(this.resolveDataElementOptions(0)),
            a = i[i.length - 1].size(
              this.resolveDataElementOptions(i.length - 1)
            );
          return Math.max(n, o, a) / 2;
        }
        draw() {
          const e = this._cachedMeta;
          e.dataset.updateControlPoints(this.chart.chartArea, e.iScale.axis),
            super.draw();
        }
      }
      _(By, "id", "line"),
        _(By, "defaults", {
          datasetElementType: "line",
          dataElementType: "point",
          showLine: !0,
          spanGaps: !1,
        }),
        _(By, "overrides", {
          scales: {
            _index_: { type: "category" },
            _value_: { type: "linear" },
          },
        });
      class Fy extends Py {
        constructor(e, t) {
          super(e, t), (this.innerRadius = void 0), (this.outerRadius = void 0);
        }
        getLabelAndValue(e) {
          const t = this._cachedMeta,
            n = this.chart,
            i = n.data.labels || [],
            o = Db(t._parsed[e].r, n.options.locale);
          return { label: i[e] || "", value: o };
        }
        parseObjectData(e, t, n, i) {
          return Tx.bind(this)(e, t, n, i);
        }
        update(e) {
          const t = this._cachedMeta.data;
          this._updateRadius(), this.updateElements(t, 0, t.length, e);
        }
        getMinMax() {
          const e = this._cachedMeta,
            t = {
              min: Number.POSITIVE_INFINITY,
              max: Number.NEGATIVE_INFINITY,
            };
          return (
            e.data.forEach((e, n) => {
              const i = this.getParsed(n).r;
              !isNaN(i) &&
                this.chart.getDataVisibility(n) &&
                (i < t.min && (t.min = i), i > t.max && (t.max = i));
            }),
            t
          );
        }
        _updateRadius() {
          const e = this.chart,
            t = e.chartArea,
            n = e.options,
            i = Math.min(t.right - t.left, t.bottom - t.top),
            o = Math.max(i / 2, 0),
            a =
              (o -
                Math.max(
                  n.cutoutPercentage ? (o / 100) * n.cutoutPercentage : 1,
                  0
                )) /
              e.getVisibleDatasetCount();
          (this.outerRadius = o - a * this.index),
            (this.innerRadius = this.outerRadius - a);
        }
        updateElements(e, t, n, i) {
          const o = "reset" === i,
            a = this.chart,
            s = a.options.animation,
            r = this._cachedMeta.rScale,
            l = r.xCenter,
            c = r.yCenter,
            u = r.getIndexAngle(0) - 0.5 * Vv;
          let d,
            h = u;
          const p = 360 / this.countVisibleElements();
          for (d = 0; d < t; ++d) h += this._computeAngle(d, i, p);
          for (d = t; d < t + n; d++) {
            const t = e[d];
            let n = h,
              f = h + this._computeAngle(d, i, p),
              g = a.getDataVisibility(d)
                ? r.getDistanceFromCenterForValue(this.getParsed(d).r)
                : 0;
            (h = f),
              o && (s.animateScale && (g = 0), s.animateRotate && (n = f = u));
            const m = {
              x: l,
              y: c,
              innerRadius: 0,
              outerRadius: g,
              startAngle: n,
              endAngle: f,
              options: this.resolveDataElementOptions(
                d,
                t.active ? "active" : i
              ),
            };
            this.updateElement(t, d, m, i);
          }
        }
        countVisibleElements() {
          const e = this._cachedMeta;
          let t = 0;
          return (
            e.data.forEach((e, n) => {
              !isNaN(this.getParsed(n).r) &&
                this.chart.getDataVisibility(n) &&
                t++;
            }),
            t
          );
        }
        _computeAngle(e, t, n) {
          return this.chart.getDataVisibility(e)
            ? ob(this.resolveDataElementOptions(e, t).angle || n)
            : 0;
        }
      }
      _(Fy, "id", "polarArea"),
        _(Fy, "defaults", {
          dataElementType: "arc",
          animation: { animateRotate: !0, animateScale: !0 },
          animations: {
            numbers: {
              type: "number",
              properties: [
                "x",
                "y",
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
              ],
            },
          },
          indexAxis: "r",
          startAngle: 0,
        }),
        _(Fy, "overrides", {
          aspectRatio: 1,
          plugins: {
            legend: {
              labels: {
                generateLabels(e) {
                  const t = e.data;
                  if (t.labels.length && t.datasets.length) {
                    const {
                      labels: { pointStyle: n, color: i },
                    } = e.legend.options;
                    return t.labels.map((t, o) => {
                      const a = e.getDatasetMeta(0).controller.getStyle(o);
                      return {
                        text: t,
                        fillStyle: a.backgroundColor,
                        strokeStyle: a.borderColor,
                        fontColor: i,
                        lineWidth: a.borderWidth,
                        pointStyle: n,
                        hidden: !e.getDataVisibility(o),
                        index: o,
                      };
                    });
                  }
                  return [];
                },
              },
              onClick(e, t, n) {
                n.chart.toggleDataVisibility(t.index), n.chart.update();
              },
            },
          },
          scales: {
            r: {
              type: "radialLinear",
              angleLines: { display: !1 },
              beginAtZero: !0,
              grid: { circular: !0 },
              pointLabels: { display: !1 },
              startAngle: 0,
            },
          },
        });
      class Wy extends jy {}
      _(Wy, "id", "pie"),
        _(Wy, "defaults", {
          cutout: 0,
          rotation: 0,
          circumference: 360,
          radius: "100%",
        });
      class Hy extends Py {
        getLabelAndValue(e) {
          const t = this._cachedMeta.vScale,
            n = this.getParsed(e);
          return {
            label: t.getLabels()[e],
            value: "" + t.getLabelForValue(n[t.axis]),
          };
        }
        parseObjectData(e, t, n, i) {
          return Tx.bind(this)(e, t, n, i);
        }
        update(e) {
          const t = this._cachedMeta,
            n = t.dataset,
            i = t.data || [],
            o = t.iScale.getLabels();
          if (((n.points = i), "resize" !== e)) {
            const t = this.resolveDatasetElementOptions(e);
            this.options.showLine || (t.borderWidth = 0);
            const a = {
              _loop: !0,
              _fullLoop: o.length === i.length,
              options: t,
            };
            this.updateElement(n, void 0, a, e);
          }
          this.updateElements(i, 0, i.length, e);
        }
        updateElements(e, t, n, i) {
          const o = this._cachedMeta.rScale,
            a = "reset" === i;
          for (let s = t; s < t + n; s++) {
            const t = e[s],
              n = this.resolveDataElementOptions(s, t.active ? "active" : i),
              r = o.getPointPositionForValue(s, this.getParsed(s).r),
              l = a ? o.xCenter : r.x,
              c = a ? o.yCenter : r.y,
              u = {
                x: l,
                y: c,
                angle: r.angle,
                skip: isNaN(l) || isNaN(c),
                options: n,
              };
            this.updateElement(t, s, u, i);
          }
        }
      }
      _(Hy, "id", "radar"),
        _(Hy, "defaults", {
          datasetElementType: "line",
          dataElementType: "point",
          indexAxis: "r",
          showLine: !0,
          elements: { line: { fill: "start" } },
        }),
        _(Hy, "overrides", {
          aspectRatio: 1,
          scales: { r: { type: "radialLinear" } },
        });
      class Gy extends Py {
        getLabelAndValue(e) {
          const t = this._cachedMeta,
            n = this.chart.data.labels || [],
            { xScale: i, yScale: o } = t,
            a = this.getParsed(e),
            s = i.getLabelForValue(a.x),
            r = o.getLabelForValue(a.y);
          return { label: n[e] || "", value: "(" + s + ", " + r + ")" };
        }
        update(e) {
          const t = this._cachedMeta,
            { data: n = [] } = t,
            i = this.chart._animationsDisabled;
          let { start: o, count: a } = Ab(t, n, i);
          if (
            ((this._drawStart = o),
            (this._drawCount = a),
            Cb(t) && ((o = 0), (a = n.length)),
            this.options.showLine)
          ) {
            this.datasetElementType || this.addElements();
            const { dataset: o, _dataset: a } = t;
            (o._chart = this.chart),
              (o._datasetIndex = this.index),
              (o._decimated = !!a._decimated),
              (o.points = n);
            const s = this.resolveDatasetElementOptions(e);
            (s.segment = this.options.segment),
              this.updateElement(o, void 0, { animated: !i, options: s }, e);
          } else
            this.datasetElementType &&
              (delete t.dataset, (this.datasetElementType = !1));
          this.updateElements(n, o, a, e);
        }
        addElements() {
          const { showLine: e } = this.options;
          !this.datasetElementType &&
            e &&
            (this.datasetElementType = this.chart.registry.getElement("line")),
            super.addElements();
        }
        updateElements(e, t, n, i) {
          const o = "reset" === i,
            {
              iScale: a,
              vScale: s,
              _stacked: r,
              _dataset: l,
            } = this._cachedMeta,
            c = this.resolveDataElementOptions(t, i),
            u = this.getSharedOptions(c),
            d = this.includeOptions(i, u),
            h = a.axis,
            p = s.axis,
            { spanGaps: f, segment: g } = this.options,
            m = nb(f) ? f : Number.POSITIVE_INFINITY,
            v = this.chart._animationsDisabled || o || "none" === i;
          let b = t > 0 && this.getParsed(t - 1);
          for (let x = t; x < t + n; ++x) {
            const t = e[x],
              n = this.getParsed(x),
              c = v ? t : {},
              f = Sv(n[p]),
              y = (c[h] = a.getPixelForValue(n[h], x)),
              w = (c[p] =
                o || f
                  ? s.getBasePixel()
                  : s.getPixelForValue(r ? this.applyStack(s, n, r) : n[p], x));
            (c.skip = isNaN(y) || isNaN(w) || f),
              (c.stop = x > 0 && Math.abs(n[h] - b[h]) > m),
              g && ((c.parsed = n), (c.raw = l.data[x])),
              d &&
                (c.options =
                  u ||
                  this.resolveDataElementOptions(x, t.active ? "active" : i)),
              v || this.updateElement(t, x, c, i),
              (b = n);
          }
          this.updateSharedOptions(u, i, c);
        }
        getMaxOverflow() {
          const e = this._cachedMeta,
            t = e.data || [];
          if (!this.options.showLine) {
            let e = 0;
            for (let n = t.length - 1; n >= 0; --n)
              e = Math.max(e, t[n].size(this.resolveDataElementOptions(n)) / 2);
            return e > 0 && e;
          }
          const n = e.dataset,
            i = (n.options && n.options.borderWidth) || 0;
          if (!t.length) return i;
          const o = t[0].size(this.resolveDataElementOptions(0)),
            a = t[t.length - 1].size(
              this.resolveDataElementOptions(t.length - 1)
            );
          return Math.max(i, o, a) / 2;
        }
      }
      _(Gy, "id", "scatter"),
        _(Gy, "defaults", {
          datasetElementType: !1,
          dataElementType: "point",
          showLine: !1,
          fill: !1,
        }),
        _(Gy, "overrides", {
          interaction: { mode: "point" },
          scales: { x: { type: "linear" }, y: { type: "linear" } },
        });
      function Vy() {
        throw new Error(
          "This method is not implemented: Check that a complete date adapter is provided."
        );
      }
      class Uy {
        static override(e) {
          Object.assign(Uy.prototype, e);
        }
        constructor(e) {
          _(this, "options", void 0), (this.options = e || {});
        }
        init() {}
        formats() {
          return Vy();
        }
        parse() {
          return Vy();
        }
        format() {
          return Vy();
        }
        add() {
          return Vy();
        }
        diff() {
          return Vy();
        }
        startOf() {
          return Vy();
        }
        endOf() {
          return Vy();
        }
      }
      var Yy = Uy;
      function Xy(e, t, n, i) {
        const { controller: o, data: a, _sorted: s } = e,
          r = o._cachedMeta.iScale;
        if (r && t === r.axis && "r" !== t && s && a.length) {
          const e = r._reversePixels ? mb : gb;
          if (!i) return e(a, t, n);
          if (o._sharedOptions) {
            const i = a[0],
              o = "function" === typeof i.getRange && i.getRange(t);
            if (o) {
              const i = e(a, t, n - o),
                s = e(a, t, n + o);
              return { lo: i.lo, hi: s.hi };
            }
          }
        }
        return { lo: 0, hi: a.length - 1 };
      }
      function Ky(e, t, n, i, o) {
        const a = e.getSortedVisibleDatasetMetas(),
          s = n[t];
        for (let r = 0, l = a.length; r < l; ++r) {
          const { index: e, data: n } = a[r],
            { lo: l, hi: c } = Xy(a[r], t, s, o);
          for (let t = l; t <= c; ++t) {
            const o = n[t];
            o.skip || i(o, e, t);
          }
        }
      }
      function qy(e, t, n, i, o) {
        const a = [];
        if (!o && !e.isPointInArea(t)) return a;
        return (
          Ky(
            e,
            n,
            t,
            function (n, s, r) {
              (o || Qb(n, e.chartArea, 0)) &&
                n.inRange(t.x, t.y, i) &&
                a.push({ element: n, datasetIndex: s, index: r });
            },
            !0
          ),
          a
        );
      }
      function Zy(e, t, n, i, o, a) {
        let s = [];
        const r = (function (e) {
          const t = -1 !== e.indexOf("x"),
            n = -1 !== e.indexOf("y");
          return function (e, i) {
            const o = t ? Math.abs(e.x - i.x) : 0,
              a = n ? Math.abs(e.y - i.y) : 0;
            return Math.sqrt(Math.pow(o, 2) + Math.pow(a, 2));
          };
        })(n);
        let l = Number.POSITIVE_INFINITY;
        return (
          Ky(e, n, t, function (n, c, u) {
            const d = n.inRange(t.x, t.y, o);
            if (i && !d) return;
            const h = n.getCenterPoint(o);
            if (!(!!a || e.isPointInArea(h)) && !d) return;
            const p = r(t, h);
            p < l
              ? ((s = [{ element: n, datasetIndex: c, index: u }]), (l = p))
              : p === l && s.push({ element: n, datasetIndex: c, index: u });
          }),
          s
        );
      }
      function Qy(e, t, n, i, o, a) {
        return a || e.isPointInArea(t)
          ? "r" !== n || i
            ? Zy(e, t, n, i, o, a)
            : (function (e, t, n, i) {
                let o = [];
                return (
                  Ky(e, n, t, function (e, n, a) {
                    const { startAngle: s, endAngle: r } = e.getProps(
                        ["startAngle", "endAngle"],
                        i
                      ),
                      { angle: l } = rb(e, { x: t.x, y: t.y });
                    db(l, s, r) &&
                      o.push({ element: e, datasetIndex: n, index: a });
                  }),
                  o
                );
              })(e, t, n, o)
          : [];
      }
      function $y(e, t, n, i, o) {
        const a = [],
          s = "x" === n ? "inXRange" : "inYRange";
        let r = !1;
        return (
          Ky(e, n, t, (e, i, l) => {
            e[s] &&
              e[s](t[n], o) &&
              (a.push({ element: e, datasetIndex: i, index: l }),
              (r = r || e.inRange(t.x, t.y, o)));
          }),
          i && !r ? [] : a
        );
      }
      var Jy = {
        evaluateInteractionItems: Ky,
        modes: {
          index(e, t, n, i) {
            const o = Ux(t, e),
              a = n.axis || "x",
              s = n.includeInvisible || !1,
              r = n.intersect ? qy(e, o, a, i, s) : Qy(e, o, a, !1, i, s),
              l = [];
            return r.length
              ? (e.getSortedVisibleDatasetMetas().forEach((e) => {
                  const t = r[0].index,
                    n = e.data[t];
                  n &&
                    !n.skip &&
                    l.push({ element: n, datasetIndex: e.index, index: t });
                }),
                l)
              : [];
          },
          dataset(e, t, n, i) {
            const o = Ux(t, e),
              a = n.axis || "xy",
              s = n.includeInvisible || !1;
            let r = n.intersect ? qy(e, o, a, i, s) : Qy(e, o, a, !1, i, s);
            if (r.length > 0) {
              const t = r[0].datasetIndex,
                n = e.getDatasetMeta(t).data;
              r = [];
              for (let e = 0; e < n.length; ++e)
                r.push({ element: n[e], datasetIndex: t, index: e });
            }
            return r;
          },
          point: (e, t, n, i) =>
            qy(e, Ux(t, e), n.axis || "xy", i, n.includeInvisible || !1),
          nearest(e, t, n, i) {
            const o = Ux(t, e),
              a = n.axis || "xy",
              s = n.includeInvisible || !1;
            return Qy(e, o, a, n.intersect, i, s);
          },
          x: (e, t, n, i) => $y(e, Ux(t, e), "x", n.intersect, i),
          y: (e, t, n, i) => $y(e, Ux(t, e), "y", n.intersect, i),
        },
      };
      const ew = ["left", "top", "right", "bottom"];
      function tw(e, t) {
        return e.filter((e) => e.pos === t);
      }
      function nw(e, t) {
        return e.filter((e) => -1 === ew.indexOf(e.pos) && e.box.axis === t);
      }
      function iw(e, t) {
        return e.sort((e, n) => {
          const i = t ? n : e,
            o = t ? e : n;
          return i.weight === o.weight
            ? i.index - o.index
            : i.weight - o.weight;
        });
      }
      function ow(e, t) {
        const n = (function (e) {
            const t = {};
            for (const n of e) {
              const { stack: e, pos: i, stackWeight: o } = n;
              if (!e || !ew.includes(i)) continue;
              const a =
                t[e] || (t[e] = { count: 0, placed: 0, weight: 0, size: 0 });
              a.count++, (a.weight += o);
            }
            return t;
          })(e),
          { vBoxMaxWidth: i, hBoxMaxHeight: o } = t;
        let a, s, r;
        for (a = 0, s = e.length; a < s; ++a) {
          r = e[a];
          const { fullSize: s } = r.box,
            l = n[r.stack],
            c = l && r.stackWeight / l.weight;
          r.horizontal
            ? ((r.width = c ? c * i : s && t.availableWidth), (r.height = o))
            : ((r.width = i), (r.height = c ? c * o : s && t.availableHeight));
        }
        return n;
      }
      function aw(e, t, n, i) {
        return Math.max(e[n], t[n]) + Math.max(e[i], t[i]);
      }
      function sw(e, t) {
        (e.top = Math.max(e.top, t.top)),
          (e.left = Math.max(e.left, t.left)),
          (e.bottom = Math.max(e.bottom, t.bottom)),
          (e.right = Math.max(e.right, t.right));
      }
      function rw(e, t, n, i) {
        const { pos: o, box: a } = n,
          s = e.maxPadding;
        if (!Av(o)) {
          n.size && (e[o] -= n.size);
          const t = i[n.stack] || { size: 0, count: 1 };
          (t.size = Math.max(t.size, n.horizontal ? a.height : a.width)),
            (n.size = t.size / t.count),
            (e[o] += n.size);
        }
        a.getPadding && sw(s, a.getPadding());
        const r = Math.max(0, t.outerWidth - aw(s, e, "left", "right")),
          l = Math.max(0, t.outerHeight - aw(s, e, "top", "bottom")),
          c = r !== e.w,
          u = l !== e.h;
        return (
          (e.w = r),
          (e.h = l),
          n.horizontal ? { same: c, other: u } : { same: u, other: c }
        );
      }
      function lw(e, t) {
        const n = t.maxPadding;
        function i(e) {
          const i = { left: 0, top: 0, right: 0, bottom: 0 };
          return (
            e.forEach((e) => {
              i[e] = Math.max(t[e], n[e]);
            }),
            i
          );
        }
        return i(e ? ["left", "right"] : ["top", "bottom"]);
      }
      function cw(e, t, n, i) {
        const o = [];
        let a, s, r, l, c, u;
        for (a = 0, s = e.length, c = 0; a < s; ++a) {
          (r = e[a]),
            (l = r.box),
            l.update(r.width || t.w, r.height || t.h, lw(r.horizontal, t));
          const { same: s, other: d } = rw(t, n, r, i);
          (c |= s && o.length), (u = u || d), l.fullSize || o.push(r);
        }
        return (c && cw(o, t, n, i)) || u;
      }
      function uw(e, t, n, i, o) {
        (e.top = n),
          (e.left = t),
          (e.right = t + i),
          (e.bottom = n + o),
          (e.width = i),
          (e.height = o);
      }
      function dw(e, t, n, i) {
        const o = n.padding;
        let { x: a, y: s } = t;
        for (const r of e) {
          const e = r.box,
            l = i[r.stack] || { count: 1, placed: 0, weight: 1 },
            c = r.stackWeight / l.weight || 1;
          if (r.horizontal) {
            const i = t.w * c,
              a = l.size || e.height;
            Wv(l.start) && (s = l.start),
              e.fullSize
                ? uw(e, o.left, s, n.outerWidth - o.right - o.left, a)
                : uw(e, t.left + l.placed, s, i, a),
              (l.start = s),
              (l.placed += i),
              (s = e.bottom);
          } else {
            const i = t.h * c,
              s = l.size || e.width;
            Wv(l.start) && (a = l.start),
              e.fullSize
                ? uw(e, a, o.top, s, n.outerHeight - o.bottom - o.top)
                : uw(e, a, t.top + l.placed, s, i),
              (l.start = a),
              (l.placed += i),
              (a = e.right);
          }
        }
        (t.x = a), (t.y = s);
      }
      var hw = {
        addBox(e, t) {
          e.boxes || (e.boxes = []),
            (t.fullSize = t.fullSize || !1),
            (t.position = t.position || "top"),
            (t.weight = t.weight || 0),
            (t._layers =
              t._layers ||
              function () {
                return [
                  {
                    z: 0,
                    draw(e) {
                      t.draw(e);
                    },
                  },
                ];
              }),
            e.boxes.push(t);
        },
        removeBox(e, t) {
          const n = e.boxes ? e.boxes.indexOf(t) : -1;
          -1 !== n && e.boxes.splice(n, 1);
        },
        configure(e, t, n) {
          (t.fullSize = n.fullSize),
            (t.position = n.position),
            (t.weight = n.weight);
        },
        update(e, t, n, i) {
          if (!e) return;
          const o = px(e.options.layout.padding),
            a = Math.max(t - o.width, 0),
            s = Math.max(n - o.height, 0),
            r = (function (e) {
              const t = (function (e) {
                  const t = [];
                  let n, i, o, a, s, r;
                  for (n = 0, i = (e || []).length; n < i; ++n)
                    (o = e[n]),
                      ({
                        position: a,
                        options: { stack: s, stackWeight: r = 1 },
                      } = o),
                      t.push({
                        index: n,
                        box: o,
                        pos: a,
                        horizontal: o.isHorizontal(),
                        weight: o.weight,
                        stack: s && a + s,
                        stackWeight: r,
                      });
                  return t;
                })(e),
                n = iw(
                  t.filter((e) => e.box.fullSize),
                  !0
                ),
                i = iw(tw(t, "left"), !0),
                o = iw(tw(t, "right")),
                a = iw(tw(t, "top"), !0),
                s = iw(tw(t, "bottom")),
                r = nw(t, "x"),
                l = nw(t, "y");
              return {
                fullSize: n,
                leftAndTop: i.concat(a),
                rightAndBottom: o.concat(l).concat(s).concat(r),
                chartArea: tw(t, "chartArea"),
                vertical: i.concat(o).concat(l),
                horizontal: a.concat(s).concat(r),
              };
            })(e.boxes),
            l = r.vertical,
            c = r.horizontal;
          Tv(e.boxes, (e) => {
            "function" === typeof e.beforeLayout && e.beforeLayout();
          });
          const u =
              l.reduce(
                (e, t) =>
                  t.box.options && !1 === t.box.options.display ? e : e + 1,
                0
              ) || 1,
            d = Object.freeze({
              outerWidth: t,
              outerHeight: n,
              padding: o,
              availableWidth: a,
              availableHeight: s,
              vBoxMaxWidth: a / 2 / u,
              hBoxMaxHeight: s / 2,
            }),
            h = Object.assign({}, o);
          sw(h, px(i));
          const p = Object.assign(
              { maxPadding: h, w: a, h: s, x: o.left, y: o.top },
              o
            ),
            f = ow(l.concat(c), d);
          cw(r.fullSize, p, d, f),
            cw(l, p, d, f),
            cw(c, p, d, f) && cw(l, p, d, f),
            (function (e) {
              const t = e.maxPadding;
              function n(n) {
                const i = Math.max(t[n] - e[n], 0);
                return (e[n] += i), i;
              }
              (e.y += n("top")), (e.x += n("left")), n("right"), n("bottom");
            })(p),
            dw(r.leftAndTop, p, d, f),
            (p.x += p.w),
            (p.y += p.h),
            dw(r.rightAndBottom, p, d, f),
            (e.chartArea = {
              left: p.left,
              top: p.top,
              right: p.left + p.w,
              bottom: p.top + p.h,
              height: p.h,
              width: p.w,
            }),
            Tv(r.chartArea, (t) => {
              const n = t.box;
              Object.assign(n, e.chartArea),
                n.update(p.w, p.h, { left: 0, top: 0, right: 0, bottom: 0 });
            });
        },
      };
      class pw {
        acquireContext(e, t) {}
        releaseContext(e) {
          return !1;
        }
        addEventListener(e, t, n) {}
        removeEventListener(e, t, n) {}
        getDevicePixelRatio() {
          return 1;
        }
        getMaximumSize(e, t, n, i) {
          return (
            (t = Math.max(0, t || e.width)),
            (n = n || e.height),
            { width: t, height: Math.max(0, i ? Math.floor(t / i) : n) }
          );
        }
        isAttached(e) {
          return !0;
        }
        updateConfig(e) {}
      }
      class fw extends pw {
        acquireContext(e) {
          return (e && e.getContext && e.getContext("2d")) || null;
        }
        updateConfig(e) {
          e.options.animation = !1;
        }
      }
      const gw = "$chartjs",
        mw = {
          touchstart: "mousedown",
          touchmove: "mousemove",
          touchend: "mouseup",
          pointerenter: "mouseenter",
          pointerdown: "mousedown",
          pointermove: "mousemove",
          pointerup: "mouseup",
          pointerleave: "mouseout",
          pointerout: "mouseout",
        },
        vw = (e) => null === e || "" === e;
      const bw = !!qx && { passive: !0 };
      function xw(e, t, n) {
        e && e.canvas && e.canvas.removeEventListener(t, n, bw);
      }
      function yw(e, t) {
        for (const n of e) if (n === t || n.contains(t)) return !0;
      }
      function ww(e, t, n) {
        const i = e.canvas,
          o = new MutationObserver((e) => {
            let t = !1;
            for (const n of e)
              (t = t || yw(n.addedNodes, i)), (t = t && !yw(n.removedNodes, i));
            t && n();
          });
        return o.observe(document, { childList: !0, subtree: !0 }), o;
      }
      function Sw(e, t, n) {
        const i = e.canvas,
          o = new MutationObserver((e) => {
            let t = !1;
            for (const n of e)
              (t = t || yw(n.removedNodes, i)), (t = t && !yw(n.addedNodes, i));
            t && n();
          });
        return o.observe(document, { childList: !0, subtree: !0 }), o;
      }
      const kw = new Map();
      let Aw = 0;
      function Cw() {
        const e = window.devicePixelRatio;
        e !== Aw &&
          ((Aw = e),
          kw.forEach((t, n) => {
            n.currentDevicePixelRatio !== e && t();
          }));
      }
      function Mw(e, t, n) {
        const i = e.canvas,
          o = i && Bx(i);
        if (!o) return;
        const a = wb((e, t) => {
            const i = o.clientWidth;
            n(e, t), i < o.clientWidth && n();
          }, window),
          s = new ResizeObserver((e) => {
            const t = e[0],
              n = t.contentRect.width,
              i = t.contentRect.height;
            (0 === n && 0 === i) || a(n, i);
          });
        return (
          s.observe(o),
          (function (e, t) {
            kw.size || window.addEventListener("resize", Cw), kw.set(e, t);
          })(e, a),
          s
        );
      }
      function Pw(e, t, n) {
        n && n.disconnect(),
          "resize" === t &&
            (function (e) {
              kw.delete(e), kw.size || window.removeEventListener("resize", Cw);
            })(e);
      }
      function Ew(e, t, n) {
        const i = e.canvas,
          o = wb((t) => {
            null !== e.ctx &&
              n(
                (function (e, t) {
                  const n = mw[e.type] || e.type,
                    { x: i, y: o } = Ux(e, t);
                  return {
                    type: n,
                    chart: t,
                    native: e,
                    x: void 0 !== i ? i : null,
                    y: void 0 !== o ? o : null,
                  };
                })(t, e)
              );
          }, e);
        return (
          (function (e, t, n) {
            e && e.addEventListener(t, n, bw);
          })(i, t, o),
          o
        );
      }
      class Lw extends pw {
        acquireContext(e, t) {
          const n = e && e.getContext && e.getContext("2d");
          return n && n.canvas === e
            ? ((function (e, t) {
                const n = e.style,
                  i = e.getAttribute("height"),
                  o = e.getAttribute("width");
                if (
                  ((e[gw] = {
                    initial: {
                      height: i,
                      width: o,
                      style: {
                        display: n.display,
                        height: n.height,
                        width: n.width,
                      },
                    },
                  }),
                  (n.display = n.display || "block"),
                  (n.boxSizing = n.boxSizing || "border-box"),
                  vw(o))
                ) {
                  const t = Zx(e, "width");
                  void 0 !== t && (e.width = t);
                }
                if (vw(i))
                  if ("" === e.style.height) e.height = e.width / (t || 2);
                  else {
                    const t = Zx(e, "height");
                    void 0 !== t && (e.height = t);
                  }
              })(e, t),
              n)
            : null;
        }
        releaseContext(e) {
          const t = e.canvas;
          if (!t[gw]) return !1;
          const n = t[gw].initial;
          ["height", "width"].forEach((e) => {
            const i = n[e];
            Sv(i) ? t.removeAttribute(e) : t.setAttribute(e, i);
          });
          const i = n.style || {};
          return (
            Object.keys(i).forEach((e) => {
              t.style[e] = i[e];
            }),
            (t.width = t.width),
            delete t[gw],
            !0
          );
        }
        addEventListener(e, t, n) {
          this.removeEventListener(e, t);
          const i = e.$proxies || (e.$proxies = {}),
            o = { attach: ww, detach: Sw, resize: Mw }[t] || Ew;
          i[t] = o(e, t, n);
        }
        removeEventListener(e, t) {
          const n = e.$proxies || (e.$proxies = {}),
            i = n[t];
          if (!i) return;
          (({ attach: Pw, detach: Pw, resize: Pw })[t] || xw)(e, t, i),
            (n[t] = void 0);
        }
        getDevicePixelRatio() {
          return window.devicePixelRatio;
        }
        getMaximumSize(e, t, n, i) {
          return Xx(e, t, n, i);
        }
        isAttached(e) {
          const t = e && Bx(e);
          return !(!t || !t.isConnected);
        }
      }
      class Tw {
        constructor() {
          _(this, "x", void 0),
            _(this, "y", void 0),
            _(this, "active", !1),
            _(this, "options", void 0),
            _(this, "$animations", void 0);
        }
        tooltipPosition(e) {
          const { x: t, y: n } = this.getProps(["x", "y"], e);
          return { x: t, y: n };
        }
        hasValue() {
          return nb(this.x) && nb(this.y);
        }
        getProps(e, t) {
          const n = this.$animations;
          if (!t || !n) return this;
          const i = {};
          return (
            e.forEach((e) => {
              i[e] = n[e] && n[e].active() ? n[e]._to : this[e];
            }),
            i
          );
        }
      }
      function Ow(e, t) {
        const n = e.options.ticks,
          i = (function (e) {
            const t = e.options.offset,
              n = e._tickSize(),
              i = e._length / n + (t ? 0 : 1),
              o = e._maxLength / n;
            return Math.floor(Math.min(i, o));
          })(e),
          o = Math.min(n.maxTicksLimit || i, i),
          a = n.major.enabled
            ? (function (e) {
                const t = [];
                let n, i;
                for (n = 0, i = e.length; n < i; n++) e[n].major && t.push(n);
                return t;
              })(t)
            : [],
          s = a.length,
          r = a[0],
          l = a[s - 1],
          c = [];
        if (s > o)
          return (
            (function (e, t, n, i) {
              let o,
                a = 0,
                s = n[0];
              for (i = Math.ceil(i), o = 0; o < e.length; o++)
                o === s && (t.push(e[o]), a++, (s = n[a * i]));
            })(t, c, a, s / o),
            c
          );
        const u = (function (e, t, n) {
          const i = (function (e) {
              const t = e.length;
              let n, i;
              if (t < 2) return !1;
              for (i = e[0], n = 1; n < t; ++n)
                if (e[n] - e[n - 1] !== i) return !1;
              return i;
            })(e),
            o = t.length / n;
          if (!i) return Math.max(o, 1);
          const a = (function (e) {
            const t = [],
              n = Math.sqrt(e);
            let i;
            for (i = 1; i < n; i++) e % i === 0 && (t.push(i), t.push(e / i));
            return n === (0 | n) && t.push(n), t.sort((e, t) => e - t).pop(), t;
          })(i);
          for (let s = 0, r = a.length - 1; s < r; s++) {
            const e = a[s];
            if (e > o) return e;
          }
          return Math.max(o, 1);
        })(a, t, o);
        if (s > 0) {
          let e, n;
          const i = s > 1 ? Math.round((l - r) / (s - 1)) : null;
          for (Rw(t, c, u, Sv(i) ? 0 : r - i, r), e = 0, n = s - 1; e < n; e++)
            Rw(t, c, u, a[e], a[e + 1]);
          return Rw(t, c, u, l, Sv(i) ? t.length : l + i), c;
        }
        return Rw(t, c, u), c;
      }
      function Rw(e, t, n, i, o) {
        const a = Pv(i, 0),
          s = Math.min(Pv(o, e.length), e.length);
        let r,
          l,
          c,
          u = 0;
        for (
          n = Math.ceil(n),
            o && ((r = o - i), (n = r / Math.floor(r / n))),
            c = a;
          c < 0;

        )
          u++, (c = Math.round(a + u * n));
        for (l = Math.max(a, 0); l < s; l++)
          l === c && (t.push(e[l]), u++, (c = Math.round(a + u * n)));
      }
      _(Tw, "defaults", {}), _(Tw, "defaultRoutes", void 0);
      const Iw = (e, t, n) =>
          "top" === t || "left" === t ? e[t] + n : e[t] - n,
        Nw = (e, t) => Math.min(t || e, e);
      function _w(e, t) {
        const n = [],
          i = e.length / t,
          o = e.length;
        let a = 0;
        for (; a < o; a += i) n.push(e[Math.floor(a)]);
        return n;
      }
      function Dw(e, t, n) {
        const i = e.ticks.length,
          o = Math.min(t, i - 1),
          a = e._startPixel,
          s = e._endPixel,
          r = 1e-6;
        let l,
          c = e.getPixelForTick(o);
        if (
          !(
            n &&
            ((l =
              1 === i
                ? Math.max(c - a, s - c)
                : 0 === t
                ? (e.getPixelForTick(1) - c) / 2
                : (c - e.getPixelForTick(o - 1)) / 2),
            (c += o < t ? l : -l),
            c < a - r || c > s + r)
          )
        )
          return c;
      }
      function zw(e) {
        return e.drawTicks ? e.tickLength : 0;
      }
      function jw(e, t) {
        if (!e.display) return 0;
        const n = fx(e.font, t),
          i = px(e.padding);
        return (kv(e.text) ? e.text.length : 1) * n.lineHeight + i.height;
      }
      function Bw(e, t, n) {
        let i = Sb(e);
        return (
          ((n && "right" !== t) || (!n && "right" === t)) &&
            (i = ((e) => ("left" === e ? "right" : "right" === e ? "left" : e))(
              i
            )),
          i
        );
      }
      class Fw extends Tw {
        constructor(e) {
          super(),
            (this.id = e.id),
            (this.type = e.type),
            (this.options = void 0),
            (this.ctx = e.ctx),
            (this.chart = e.chart),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
            (this.maxWidth = void 0),
            (this.maxHeight = void 0),
            (this.paddingTop = void 0),
            (this.paddingBottom = void 0),
            (this.paddingLeft = void 0),
            (this.paddingRight = void 0),
            (this.axis = void 0),
            (this.labelRotation = void 0),
            (this.min = void 0),
            (this.max = void 0),
            (this._range = void 0),
            (this.ticks = []),
            (this._gridLineItems = null),
            (this._labelItems = null),
            (this._labelSizes = null),
            (this._length = 0),
            (this._maxLength = 0),
            (this._longestTextCache = {}),
            (this._startPixel = void 0),
            (this._endPixel = void 0),
            (this._reversePixels = !1),
            (this._userMax = void 0),
            (this._userMin = void 0),
            (this._suggestedMax = void 0),
            (this._suggestedMin = void 0),
            (this._ticksLength = 0),
            (this._borderValue = 0),
            (this._cache = {}),
            (this._dataLimitsCached = !1),
            (this.$context = void 0);
        }
        init(e) {
          (this.options = e.setContext(this.getContext())),
            (this.axis = e.axis),
            (this._userMin = this.parse(e.min)),
            (this._userMax = this.parse(e.max)),
            (this._suggestedMin = this.parse(e.suggestedMin)),
            (this._suggestedMax = this.parse(e.suggestedMax));
        }
        parse(e, t) {
          return e;
        }
        getUserBounds() {
          let {
            _userMin: e,
            _userMax: t,
            _suggestedMin: n,
            _suggestedMax: i,
          } = this;
          return (
            (e = Mv(e, Number.POSITIVE_INFINITY)),
            (t = Mv(t, Number.NEGATIVE_INFINITY)),
            (n = Mv(n, Number.POSITIVE_INFINITY)),
            (i = Mv(i, Number.NEGATIVE_INFINITY)),
            {
              min: Mv(e, n),
              max: Mv(t, i),
              minDefined: Cv(e),
              maxDefined: Cv(t),
            }
          );
        }
        getMinMax(e) {
          let t,
            {
              min: n,
              max: i,
              minDefined: o,
              maxDefined: a,
            } = this.getUserBounds();
          if (o && a) return { min: n, max: i };
          const s = this.getMatchingVisibleMetas();
          for (let r = 0, l = s.length; r < l; ++r)
            (t = s[r].controller.getMinMax(this, e)),
              o || (n = Math.min(n, t.min)),
              a || (i = Math.max(i, t.max));
          return (
            (n = a && n > i ? i : n),
            (i = o && n > i ? n : i),
            { min: Mv(n, Mv(i, n)), max: Mv(i, Mv(n, i)) }
          );
        }
        getPadding() {
          return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0,
          };
        }
        getTicks() {
          return this.ticks;
        }
        getLabels() {
          const e = this.chart.data;
          return (
            this.options.labels ||
            (this.isHorizontal() ? e.xLabels : e.yLabels) ||
            e.labels ||
            []
          );
        }
        getLabelItems() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : this.chart.chartArea;
          return (
            this._labelItems || (this._labelItems = this._computeLabelItems(e))
          );
        }
        beforeLayout() {
          (this._cache = {}), (this._dataLimitsCached = !1);
        }
        beforeUpdate() {
          Lv(this.options.beforeUpdate, [this]);
        }
        update(e, t, n) {
          const { beginAtZero: i, grace: o, ticks: a } = this.options,
            s = a.sampleSize;
          this.beforeUpdate(),
            (this.maxWidth = e),
            (this.maxHeight = t),
            (this._margins = n =
              Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, n)),
            (this.ticks = null),
            (this._labelSizes = null),
            (this._gridLineItems = null),
            (this._labelItems = null),
            this.beforeSetDimensions(),
            this.setDimensions(),
            this.afterSetDimensions(),
            (this._maxLength = this.isHorizontal()
              ? this.width + n.left + n.right
              : this.height + n.top + n.bottom),
            this._dataLimitsCached ||
              (this.beforeDataLimits(),
              this.determineDataLimits(),
              this.afterDataLimits(),
              (this._range = (function (e, t, n) {
                const { min: i, max: o } = e,
                  a = Ev(t, (o - i) / 2),
                  s = (e, t) => (n && 0 === e ? 0 : e + t);
                return { min: s(i, -Math.abs(a)), max: s(o, a) };
              })(this, o, i)),
              (this._dataLimitsCached = !0)),
            this.beforeBuildTicks(),
            (this.ticks = this.buildTicks() || []),
            this.afterBuildTicks();
          const r = s < this.ticks.length;
          this._convertTicksToLabels(r ? _w(this.ticks, s) : this.ticks),
            this.configure(),
            this.beforeCalculateLabelRotation(),
            this.calculateLabelRotation(),
            this.afterCalculateLabelRotation(),
            a.display &&
              (a.autoSkip || "auto" === a.source) &&
              ((this.ticks = Ow(this, this.ticks)),
              (this._labelSizes = null),
              this.afterAutoSkip()),
            r && this._convertTicksToLabels(this.ticks),
            this.beforeFit(),
            this.fit(),
            this.afterFit(),
            this.afterUpdate();
        }
        configure() {
          let e,
            t,
            n = this.options.reverse;
          this.isHorizontal()
            ? ((e = this.left), (t = this.right))
            : ((e = this.top), (t = this.bottom), (n = !n)),
            (this._startPixel = e),
            (this._endPixel = t),
            (this._reversePixels = n),
            (this._length = t - e),
            (this._alignToPixels = this.options.alignToPixels);
        }
        afterUpdate() {
          Lv(this.options.afterUpdate, [this]);
        }
        beforeSetDimensions() {
          Lv(this.options.beforeSetDimensions, [this]);
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = 0),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = 0),
              (this.bottom = this.height)),
            (this.paddingLeft = 0),
            (this.paddingTop = 0),
            (this.paddingRight = 0),
            (this.paddingBottom = 0);
        }
        afterSetDimensions() {
          Lv(this.options.afterSetDimensions, [this]);
        }
        _callHooks(e) {
          this.chart.notifyPlugins(e, this.getContext()),
            Lv(this.options[e], [this]);
        }
        beforeDataLimits() {
          this._callHooks("beforeDataLimits");
        }
        determineDataLimits() {}
        afterDataLimits() {
          this._callHooks("afterDataLimits");
        }
        beforeBuildTicks() {
          this._callHooks("beforeBuildTicks");
        }
        buildTicks() {
          return [];
        }
        afterBuildTicks() {
          this._callHooks("afterBuildTicks");
        }
        beforeTickToLabelConversion() {
          Lv(this.options.beforeTickToLabelConversion, [this]);
        }
        generateTickLabels(e) {
          const t = this.options.ticks;
          let n, i, o;
          for (n = 0, i = e.length; n < i; n++)
            (o = e[n]), (o.label = Lv(t.callback, [o.value, n, e], this));
        }
        afterTickToLabelConversion() {
          Lv(this.options.afterTickToLabelConversion, [this]);
        }
        beforeCalculateLabelRotation() {
          Lv(this.options.beforeCalculateLabelRotation, [this]);
        }
        calculateLabelRotation() {
          const e = this.options,
            t = e.ticks,
            n = Nw(this.ticks.length, e.ticks.maxTicksLimit),
            i = t.minRotation || 0,
            o = t.maxRotation;
          let a,
            s,
            r,
            l = i;
          if (
            !this._isVisible() ||
            !t.display ||
            i >= o ||
            n <= 1 ||
            !this.isHorizontal()
          )
            return void (this.labelRotation = i);
          const c = this._getLabelSizes(),
            u = c.widest.width,
            d = c.highest.height,
            h = hb(this.chart.width - u, 0, this.maxWidth);
          (a = e.offset ? this.maxWidth / n : h / (n - 1)),
            u + 6 > a &&
              ((a = h / (n - (e.offset ? 0.5 : 1))),
              (s =
                this.maxHeight -
                zw(e.grid) -
                t.padding -
                jw(e.title, this.chart.options.font)),
              (r = Math.sqrt(u * u + d * d)),
              (l = ab(
                Math.min(
                  Math.asin(hb((c.highest.height + 6) / a, -1, 1)),
                  Math.asin(hb(s / r, -1, 1)) - Math.asin(hb(d / r, -1, 1))
                )
              )),
              (l = Math.max(i, Math.min(o, l)))),
            (this.labelRotation = l);
        }
        afterCalculateLabelRotation() {
          Lv(this.options.afterCalculateLabelRotation, [this]);
        }
        afterAutoSkip() {}
        beforeFit() {
          Lv(this.options.beforeFit, [this]);
        }
        fit() {
          const e = { width: 0, height: 0 },
            {
              chart: t,
              options: { ticks: n, title: i, grid: o },
            } = this,
            a = this._isVisible(),
            s = this.isHorizontal();
          if (a) {
            const a = jw(i, t.options.font);
            if (
              (s
                ? ((e.width = this.maxWidth), (e.height = zw(o) + a))
                : ((e.height = this.maxHeight), (e.width = zw(o) + a)),
              n.display && this.ticks.length)
            ) {
              const {
                  first: t,
                  last: i,
                  widest: o,
                  highest: a,
                } = this._getLabelSizes(),
                r = 2 * n.padding,
                l = ob(this.labelRotation),
                c = Math.cos(l),
                u = Math.sin(l);
              if (s) {
                const t = n.mirror ? 0 : u * o.width + c * a.height;
                e.height = Math.min(this.maxHeight, e.height + t + r);
              } else {
                const t = n.mirror ? 0 : c * o.width + u * a.height;
                e.width = Math.min(this.maxWidth, e.width + t + r);
              }
              this._calculatePadding(t, i, u, c);
            }
          }
          this._handleMargins(),
            s
              ? ((this.width = this._length =
                  t.width - this._margins.left - this._margins.right),
                (this.height = e.height))
              : ((this.width = e.width),
                (this.height = this._length =
                  t.height - this._margins.top - this._margins.bottom));
        }
        _calculatePadding(e, t, n, i) {
          const {
              ticks: { align: o, padding: a },
              position: s,
            } = this.options,
            r = 0 !== this.labelRotation,
            l = "top" !== s && "x" === this.axis;
          if (this.isHorizontal()) {
            const s = this.getPixelForTick(0) - this.left,
              c = this.right - this.getPixelForTick(this.ticks.length - 1);
            let u = 0,
              d = 0;
            r
              ? l
                ? ((u = i * e.width), (d = n * t.height))
                : ((u = n * e.height), (d = i * t.width))
              : "start" === o
              ? (d = t.width)
              : "end" === o
              ? (u = e.width)
              : "inner" !== o && ((u = e.width / 2), (d = t.width / 2)),
              (this.paddingLeft = Math.max(
                ((u - s + a) * this.width) / (this.width - s),
                0
              )),
              (this.paddingRight = Math.max(
                ((d - c + a) * this.width) / (this.width - c),
                0
              ));
          } else {
            let n = t.height / 2,
              i = e.height / 2;
            "start" === o
              ? ((n = 0), (i = e.height))
              : "end" === o && ((n = t.height), (i = 0)),
              (this.paddingTop = n + a),
              (this.paddingBottom = i + a);
          }
        }
        _handleMargins() {
          this._margins &&
            ((this._margins.left = Math.max(
              this.paddingLeft,
              this._margins.left
            )),
            (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
            (this._margins.right = Math.max(
              this.paddingRight,
              this._margins.right
            )),
            (this._margins.bottom = Math.max(
              this.paddingBottom,
              this._margins.bottom
            )));
        }
        afterFit() {
          Lv(this.options.afterFit, [this]);
        }
        isHorizontal() {
          const { axis: e, position: t } = this.options;
          return "top" === t || "bottom" === t || "x" === e;
        }
        isFullSize() {
          return this.options.fullSize;
        }
        _convertTicksToLabels(e) {
          let t, n;
          for (
            this.beforeTickToLabelConversion(),
              this.generateTickLabels(e),
              t = 0,
              n = e.length;
            t < n;
            t++
          )
            Sv(e[t].label) && (e.splice(t, 1), n--, t--);
          this.afterTickToLabelConversion();
        }
        _getLabelSizes() {
          let e = this._labelSizes;
          if (!e) {
            const t = this.options.ticks.sampleSize;
            let n = this.ticks;
            t < n.length && (n = _w(n, t)),
              (this._labelSizes = e =
                this._computeLabelSizes(
                  n,
                  n.length,
                  this.options.ticks.maxTicksLimit
                ));
          }
          return e;
        }
        _computeLabelSizes(e, t, n) {
          const { ctx: i, _longestTextCache: o } = this,
            a = [],
            s = [],
            r = Math.floor(t / Nw(t, n));
          let l,
            c,
            u,
            d,
            h,
            p,
            f,
            g,
            m,
            v,
            b,
            x = 0,
            y = 0;
          for (l = 0; l < t; l += r) {
            if (
              ((d = e[l].label),
              (h = this._resolveTickFontOptions(l)),
              (i.font = p = h.string),
              (f = o[p] = o[p] || { data: {}, gc: [] }),
              (g = h.lineHeight),
              (m = v = 0),
              Sv(d) || kv(d))
            ) {
              if (kv(d))
                for (c = 0, u = d.length; c < u; ++c)
                  (b = d[c]),
                    Sv(b) ||
                      kv(b) ||
                      ((m = Ub(i, f.data, f.gc, m, b)), (v += g));
            } else (m = Ub(i, f.data, f.gc, m, d)), (v = g);
            a.push(m), s.push(v), (x = Math.max(m, x)), (y = Math.max(v, y));
          }
          !(function (e, t) {
            Tv(e, (e) => {
              const n = e.gc,
                i = n.length / 2;
              let o;
              if (i > t) {
                for (o = 0; o < i; ++o) delete e.data[n[o]];
                n.splice(0, i);
              }
            });
          })(o, t);
          const w = a.indexOf(x),
            S = s.indexOf(y),
            k = (e) => ({ width: a[e] || 0, height: s[e] || 0 });
          return {
            first: k(0),
            last: k(t - 1),
            widest: k(w),
            highest: k(S),
            widths: a,
            heights: s,
          };
        }
        getLabelForValue(e) {
          return e;
        }
        getPixelForValue(e, t) {
          return NaN;
        }
        getValueForPixel(e) {}
        getPixelForTick(e) {
          const t = this.ticks;
          return e < 0 || e > t.length - 1
            ? null
            : this.getPixelForValue(t[e].value);
        }
        getPixelForDecimal(e) {
          this._reversePixels && (e = 1 - e);
          const t = this._startPixel + e * this._length;
          return hb(
            this._alignToPixels ? Xb(this.chart, t, 0) : t,
            -32768,
            32767
          );
        }
        getDecimalForPixel(e) {
          const t = (e - this._startPixel) / this._length;
          return this._reversePixels ? 1 - t : t;
        }
        getBasePixel() {
          return this.getPixelForValue(this.getBaseValue());
        }
        getBaseValue() {
          const { min: e, max: t } = this;
          return e < 0 && t < 0 ? t : e > 0 && t > 0 ? e : 0;
        }
        getContext(e) {
          const t = this.ticks || [];
          if (e >= 0 && e < t.length) {
            const n = t[e];
            return (
              n.$context ||
              (n.$context = (function (e, t, n) {
                return mx(e, { tick: n, index: t, type: "tick" });
              })(this.getContext(), e, n))
            );
          }
          return (
            this.$context ||
            (this.$context = mx(this.chart.getContext(), {
              scale: this,
              type: "scale",
            }))
          );
        }
        _tickSize() {
          const e = this.options.ticks,
            t = ob(this.labelRotation),
            n = Math.abs(Math.cos(t)),
            i = Math.abs(Math.sin(t)),
            o = this._getLabelSizes(),
            a = e.autoSkipPadding || 0,
            s = o ? o.widest.width + a : 0,
            r = o ? o.highest.height + a : 0;
          return this.isHorizontal()
            ? r * n > s * i
              ? s / n
              : r / i
            : r * i < s * n
            ? r / n
            : s / i;
        }
        _isVisible() {
          const e = this.options.display;
          return "auto" !== e ? !!e : this.getMatchingVisibleMetas().length > 0;
        }
        _computeGridLineItems(e) {
          const t = this.axis,
            n = this.chart,
            i = this.options,
            { grid: o, position: a, border: s } = i,
            r = o.offset,
            l = this.isHorizontal(),
            c = this.ticks.length + (r ? 1 : 0),
            u = zw(o),
            d = [],
            h = s.setContext(this.getContext()),
            p = h.display ? h.width : 0,
            f = p / 2,
            g = function (e) {
              return Xb(n, e, p);
            };
          let m, v, b, x, y, w, S, k, A, C, M, P;
          if ("top" === a)
            (m = g(this.bottom)),
              (w = this.bottom - u),
              (k = m - f),
              (C = g(e.top) + f),
              (P = e.bottom);
          else if ("bottom" === a)
            (m = g(this.top)),
              (C = e.top),
              (P = g(e.bottom) - f),
              (w = m + f),
              (k = this.top + u);
          else if ("left" === a)
            (m = g(this.right)),
              (y = this.right - u),
              (S = m - f),
              (A = g(e.left) + f),
              (M = e.right);
          else if ("right" === a)
            (m = g(this.left)),
              (A = e.left),
              (M = g(e.right) - f),
              (y = m + f),
              (S = this.left + u);
          else if ("x" === t) {
            if ("center" === a) m = g((e.top + e.bottom) / 2 + 0.5);
            else if (Av(a)) {
              const e = Object.keys(a)[0],
                t = a[e];
              m = g(this.chart.scales[e].getPixelForValue(t));
            }
            (C = e.top), (P = e.bottom), (w = m + f), (k = w + u);
          } else if ("y" === t) {
            if ("center" === a) m = g((e.left + e.right) / 2);
            else if (Av(a)) {
              const e = Object.keys(a)[0],
                t = a[e];
              m = g(this.chart.scales[e].getPixelForValue(t));
            }
            (y = m - f), (S = y - u), (A = e.left), (M = e.right);
          }
          const E = Pv(i.ticks.maxTicksLimit, c),
            L = Math.max(1, Math.ceil(c / E));
          for (v = 0; v < c; v += L) {
            const e = this.getContext(v),
              t = o.setContext(e),
              i = s.setContext(e),
              a = t.lineWidth,
              c = t.color,
              u = i.dash || [],
              h = i.dashOffset,
              p = t.tickWidth,
              f = t.tickColor,
              g = t.tickBorderDash || [],
              m = t.tickBorderDashOffset;
            (b = Dw(this, v, r)),
              void 0 !== b &&
                ((x = Xb(n, b, a)),
                l ? (y = S = A = M = x) : (w = k = C = P = x),
                d.push({
                  tx1: y,
                  ty1: w,
                  tx2: S,
                  ty2: k,
                  x1: A,
                  y1: C,
                  x2: M,
                  y2: P,
                  width: a,
                  color: c,
                  borderDash: u,
                  borderDashOffset: h,
                  tickWidth: p,
                  tickColor: f,
                  tickBorderDash: g,
                  tickBorderDashOffset: m,
                }));
          }
          return (this._ticksLength = c), (this._borderValue = m), d;
        }
        _computeLabelItems(e) {
          const t = this.axis,
            n = this.options,
            { position: i, ticks: o } = n,
            a = this.isHorizontal(),
            s = this.ticks,
            { align: r, crossAlign: l, padding: c, mirror: u } = o,
            d = zw(n.grid),
            h = d + c,
            p = u ? -c : h,
            f = -ob(this.labelRotation),
            g = [];
          let m,
            v,
            b,
            x,
            y,
            w,
            S,
            k,
            A,
            C,
            M,
            P,
            E = "middle";
          if ("top" === i)
            (w = this.bottom - p), (S = this._getXAxisLabelAlignment());
          else if ("bottom" === i)
            (w = this.top + p), (S = this._getXAxisLabelAlignment());
          else if ("left" === i) {
            const e = this._getYAxisLabelAlignment(d);
            (S = e.textAlign), (y = e.x);
          } else if ("right" === i) {
            const e = this._getYAxisLabelAlignment(d);
            (S = e.textAlign), (y = e.x);
          } else if ("x" === t) {
            if ("center" === i) w = (e.top + e.bottom) / 2 + h;
            else if (Av(i)) {
              const e = Object.keys(i)[0],
                t = i[e];
              w = this.chart.scales[e].getPixelForValue(t) + h;
            }
            S = this._getXAxisLabelAlignment();
          } else if ("y" === t) {
            if ("center" === i) y = (e.left + e.right) / 2 - h;
            else if (Av(i)) {
              const e = Object.keys(i)[0],
                t = i[e];
              y = this.chart.scales[e].getPixelForValue(t);
            }
            S = this._getYAxisLabelAlignment(d).textAlign;
          }
          "y" === t &&
            ("start" === r ? (E = "top") : "end" === r && (E = "bottom"));
          const L = this._getLabelSizes();
          for (m = 0, v = s.length; m < v; ++m) {
            (b = s[m]), (x = b.label);
            const e = o.setContext(this.getContext(m));
            (k = this.getPixelForTick(m) + o.labelOffset),
              (A = this._resolveTickFontOptions(m)),
              (C = A.lineHeight),
              (M = kv(x) ? x.length : 1);
            const t = M / 2,
              n = e.color,
              r = e.textStrokeColor,
              c = e.textStrokeWidth;
            let d,
              h = S;
            if (
              (a
                ? ((y = k),
                  "inner" === S &&
                    (h =
                      m === v - 1
                        ? this.options.reverse
                          ? "left"
                          : "right"
                        : 0 === m
                        ? this.options.reverse
                          ? "right"
                          : "left"
                        : "center"),
                  (P =
                    "top" === i
                      ? "near" === l || 0 !== f
                        ? -M * C + C / 2
                        : "center" === l
                        ? -L.highest.height / 2 - t * C + C
                        : -L.highest.height + C / 2
                      : "near" === l || 0 !== f
                      ? C / 2
                      : "center" === l
                      ? L.highest.height / 2 - t * C
                      : L.highest.height - M * C),
                  u && (P *= -1),
                  0 === f ||
                    e.showLabelBackdrop ||
                    (y += (C / 2) * Math.sin(f)))
                : ((w = k), (P = ((1 - M) * C) / 2)),
              e.showLabelBackdrop)
            ) {
              const t = px(e.backdropPadding),
                n = L.heights[m],
                i = L.widths[m];
              let o = P - t.top,
                a = 0 - t.left;
              switch (E) {
                case "middle":
                  o -= n / 2;
                  break;
                case "bottom":
                  o -= n;
              }
              switch (S) {
                case "center":
                  a -= i / 2;
                  break;
                case "right":
                  a -= i;
                  break;
                case "inner":
                  m === v - 1 ? (a -= i) : m > 0 && (a -= i / 2);
              }
              d = {
                left: a,
                top: o,
                width: i + t.width,
                height: n + t.height,
                color: e.backdropColor,
              };
            }
            g.push({
              label: x,
              font: A,
              textOffset: P,
              options: {
                rotation: f,
                color: n,
                strokeColor: r,
                strokeWidth: c,
                textAlign: h,
                textBaseline: E,
                translation: [y, w],
                backdrop: d,
              },
            });
          }
          return g;
        }
        _getXAxisLabelAlignment() {
          const { position: e, ticks: t } = this.options;
          if (-ob(this.labelRotation)) return "top" === e ? "left" : "right";
          let n = "center";
          return (
            "start" === t.align
              ? (n = "left")
              : "end" === t.align
              ? (n = "right")
              : "inner" === t.align && (n = "inner"),
            n
          );
        }
        _getYAxisLabelAlignment(e) {
          const {
              position: t,
              ticks: { crossAlign: n, mirror: i, padding: o },
            } = this.options,
            a = e + o,
            s = this._getLabelSizes().widest.width;
          let r, l;
          return (
            "left" === t
              ? i
                ? ((l = this.right + o),
                  "near" === n
                    ? (r = "left")
                    : "center" === n
                    ? ((r = "center"), (l += s / 2))
                    : ((r = "right"), (l += s)))
                : ((l = this.right - a),
                  "near" === n
                    ? (r = "right")
                    : "center" === n
                    ? ((r = "center"), (l -= s / 2))
                    : ((r = "left"), (l = this.left)))
              : "right" === t
              ? i
                ? ((l = this.left + o),
                  "near" === n
                    ? (r = "right")
                    : "center" === n
                    ? ((r = "center"), (l -= s / 2))
                    : ((r = "left"), (l -= s)))
                : ((l = this.left + a),
                  "near" === n
                    ? (r = "left")
                    : "center" === n
                    ? ((r = "center"), (l += s / 2))
                    : ((r = "right"), (l = this.right)))
              : (r = "right"),
            { textAlign: r, x: l }
          );
        }
        _computeLabelArea() {
          if (this.options.ticks.mirror) return;
          const e = this.chart,
            t = this.options.position;
          return "left" === t || "right" === t
            ? { top: 0, left: this.left, bottom: e.height, right: this.right }
            : "top" === t || "bottom" === t
            ? { top: this.top, left: 0, bottom: this.bottom, right: e.width }
            : void 0;
        }
        drawBackground() {
          const {
            ctx: e,
            options: { backgroundColor: t },
            left: n,
            top: i,
            width: o,
            height: a,
          } = this;
          t &&
            (e.save(), (e.fillStyle = t), e.fillRect(n, i, o, a), e.restore());
        }
        getLineWidthForValue(e) {
          const t = this.options.grid;
          if (!this._isVisible() || !t.display) return 0;
          const n = this.ticks.findIndex((t) => t.value === e);
          if (n >= 0) {
            return t.setContext(this.getContext(n)).lineWidth;
          }
          return 0;
        }
        drawGrid(e) {
          const t = this.options.grid,
            n = this.ctx,
            i =
              this._gridLineItems ||
              (this._gridLineItems = this._computeGridLineItems(e));
          let o, a;
          const s = (e, t, i) => {
            i.width &&
              i.color &&
              (n.save(),
              (n.lineWidth = i.width),
              (n.strokeStyle = i.color),
              n.setLineDash(i.borderDash || []),
              (n.lineDashOffset = i.borderDashOffset),
              n.beginPath(),
              n.moveTo(e.x, e.y),
              n.lineTo(t.x, t.y),
              n.stroke(),
              n.restore());
          };
          if (t.display)
            for (o = 0, a = i.length; o < a; ++o) {
              const e = i[o];
              t.drawOnChartArea &&
                s({ x: e.x1, y: e.y1 }, { x: e.x2, y: e.y2 }, e),
                t.drawTicks &&
                  s(
                    { x: e.tx1, y: e.ty1 },
                    { x: e.tx2, y: e.ty2 },
                    {
                      color: e.tickColor,
                      width: e.tickWidth,
                      borderDash: e.tickBorderDash,
                      borderDashOffset: e.tickBorderDashOffset,
                    }
                  );
            }
        }
        drawBorder() {
          const {
              chart: e,
              ctx: t,
              options: { border: n, grid: i },
            } = this,
            o = n.setContext(this.getContext()),
            a = n.display ? o.width : 0;
          if (!a) return;
          const s = i.setContext(this.getContext(0)).lineWidth,
            r = this._borderValue;
          let l, c, u, d;
          this.isHorizontal()
            ? ((l = Xb(e, this.left, a) - a / 2),
              (c = Xb(e, this.right, s) + s / 2),
              (u = d = r))
            : ((u = Xb(e, this.top, a) - a / 2),
              (d = Xb(e, this.bottom, s) + s / 2),
              (l = c = r)),
            t.save(),
            (t.lineWidth = o.width),
            (t.strokeStyle = o.color),
            t.beginPath(),
            t.moveTo(l, u),
            t.lineTo(c, d),
            t.stroke(),
            t.restore();
        }
        drawLabels(e) {
          if (!this.options.ticks.display) return;
          const t = this.ctx,
            n = this._computeLabelArea();
          n && $b(t, n);
          const i = this.getLabelItems(e);
          for (const o of i) {
            const e = o.options,
              n = o.font;
            ox(t, o.label, 0, o.textOffset, n, e);
          }
          n && Jb(t);
        }
        drawTitle() {
          const {
            ctx: e,
            options: { position: t, title: n, reverse: i },
          } = this;
          if (!n.display) return;
          const o = fx(n.font),
            a = px(n.padding),
            s = n.align;
          let r = o.lineHeight / 2;
          "bottom" === t || "center" === t || Av(t)
            ? ((r += a.bottom),
              kv(n.text) && (r += o.lineHeight * (n.text.length - 1)))
            : (r += a.top);
          const {
            titleX: l,
            titleY: c,
            maxWidth: u,
            rotation: d,
          } = (function (e, t, n, i) {
            const { top: o, left: a, bottom: s, right: r, chart: l } = e,
              { chartArea: c, scales: u } = l;
            let d,
              h,
              p,
              f = 0;
            const g = s - o,
              m = r - a;
            if (e.isHorizontal()) {
              if (((h = kb(i, a, r)), Av(n))) {
                const e = Object.keys(n)[0],
                  i = n[e];
                p = u[e].getPixelForValue(i) + g - t;
              } else
                p =
                  "center" === n ? (c.bottom + c.top) / 2 + g - t : Iw(e, n, t);
              d = r - a;
            } else {
              if (Av(n)) {
                const e = Object.keys(n)[0],
                  i = n[e];
                h = u[e].getPixelForValue(i) - m + t;
              } else
                h =
                  "center" === n ? (c.left + c.right) / 2 - m + t : Iw(e, n, t);
              (p = kb(i, s, o)), (f = "left" === n ? -qv : qv);
            }
            return { titleX: h, titleY: p, maxWidth: d, rotation: f };
          })(this, r, t, s);
          ox(e, n.text, 0, 0, o, {
            color: n.color,
            maxWidth: u,
            rotation: d,
            textAlign: Bw(s, t, i),
            textBaseline: "middle",
            translation: [l, c],
          });
        }
        draw(e) {
          this._isVisible() &&
            (this.drawBackground(),
            this.drawGrid(e),
            this.drawBorder(),
            this.drawTitle(),
            this.drawLabels(e));
        }
        _layers() {
          const e = this.options,
            t = (e.ticks && e.ticks.z) || 0,
            n = Pv(e.grid && e.grid.z, -1),
            i = Pv(e.border && e.border.z, 0);
          return this._isVisible() && this.draw === Fw.prototype.draw
            ? [
                {
                  z: n,
                  draw: (e) => {
                    this.drawBackground(), this.drawGrid(e), this.drawTitle();
                  },
                },
                {
                  z: i,
                  draw: () => {
                    this.drawBorder();
                  },
                },
                {
                  z: t,
                  draw: (e) => {
                    this.drawLabels(e);
                  },
                },
              ]
            : [
                {
                  z: t,
                  draw: (e) => {
                    this.draw(e);
                  },
                },
              ];
        }
        getMatchingVisibleMetas(e) {
          const t = this.chart.getSortedVisibleDatasetMetas(),
            n = this.axis + "AxisID",
            i = [];
          let o, a;
          for (o = 0, a = t.length; o < a; ++o) {
            const a = t[o];
            a[n] !== this.id || (e && a.type !== e) || i.push(a);
          }
          return i;
        }
        _resolveTickFontOptions(e) {
          return fx(this.options.ticks.setContext(this.getContext(e)).font);
        }
        _maxDigits() {
          const e = this._resolveTickFontOptions(0).lineHeight;
          return (this.isHorizontal() ? this.width : this.height) / e;
        }
      }
      class Ww {
        constructor(e, t, n) {
          (this.type = e),
            (this.scope = t),
            (this.override = n),
            (this.items = Object.create(null));
        }
        isForType(e) {
          return Object.prototype.isPrototypeOf.call(
            this.type.prototype,
            e.prototype
          );
        }
        register(e) {
          const t = Object.getPrototypeOf(e);
          let n;
          (function (e) {
            return "id" in e && "defaults" in e;
          })(t) && (n = this.register(t));
          const i = this.items,
            o = e.id,
            a = this.scope + "." + o;
          if (!o) throw new Error("class does not have id: " + e);
          return (
            o in i ||
              ((i[o] = e),
              (function (e, t, n) {
                const i = _v(Object.create(null), [
                  n ? Vb.get(n) : {},
                  Vb.get(t),
                  e.defaults,
                ]);
                Vb.set(t, i),
                  e.defaultRoutes &&
                    (function (e, t) {
                      Object.keys(t).forEach((n) => {
                        const i = n.split("."),
                          o = i.pop(),
                          a = [e].concat(i).join("."),
                          s = t[n].split("."),
                          r = s.pop(),
                          l = s.join(".");
                        Vb.route(a, o, l, r);
                      });
                    })(t, e.defaultRoutes);
                e.descriptors && Vb.describe(t, e.descriptors);
              })(e, a, n),
              this.override && Vb.override(e.id, e.overrides)),
            a
          );
        }
        get(e) {
          return this.items[e];
        }
        unregister(e) {
          const t = this.items,
            n = e.id,
            i = this.scope;
          n in t && delete t[n],
            i && n in Vb[i] && (delete Vb[i][n], this.override && delete Bb[n]);
        }
      }
      class Hw {
        constructor() {
          (this.controllers = new Ww(Py, "datasets", !0)),
            (this.elements = new Ww(Tw, "elements")),
            (this.plugins = new Ww(Object, "plugins")),
            (this.scales = new Ww(Fw, "scales")),
            (this._typedRegistries = [
              this.controllers,
              this.scales,
              this.elements,
            ]);
        }
        add() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("register", t);
        }
        remove() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("unregister", t);
        }
        addControllers() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("register", t, this.controllers);
        }
        addElements() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("register", t, this.elements);
        }
        addPlugins() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("register", t, this.plugins);
        }
        addScales() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("register", t, this.scales);
        }
        getController(e) {
          return this._get(e, this.controllers, "controller");
        }
        getElement(e) {
          return this._get(e, this.elements, "element");
        }
        getPlugin(e) {
          return this._get(e, this.plugins, "plugin");
        }
        getScale(e) {
          return this._get(e, this.scales, "scale");
        }
        removeControllers() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("unregister", t, this.controllers);
        }
        removeElements() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("unregister", t, this.elements);
        }
        removePlugins() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("unregister", t, this.plugins);
        }
        removeScales() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          this._each("unregister", t, this.scales);
        }
        _each(e, t, n) {
          [...t].forEach((t) => {
            const i = n || this._getRegistryForType(t);
            n || i.isForType(t) || (i === this.plugins && t.id)
              ? this._exec(e, i, t)
              : Tv(t, (t) => {
                  const i = n || this._getRegistryForType(t);
                  this._exec(e, i, t);
                });
          });
        }
        _exec(e, t, n) {
          const i = Fv(e);
          Lv(n["before" + i], [], n), t[e](n), Lv(n["after" + i], [], n);
        }
        _getRegistryForType(e) {
          for (let t = 0; t < this._typedRegistries.length; t++) {
            const n = this._typedRegistries[t];
            if (n.isForType(e)) return n;
          }
          return this.plugins;
        }
        _get(e, t, n) {
          const i = t.get(e);
          if (void 0 === i)
            throw new Error('"' + e + '" is not a registered ' + n + ".");
          return i;
        }
      }
      var Gw = new Hw();
      class Vw {
        constructor() {
          this._init = [];
        }
        notify(e, t, n, i) {
          "beforeInit" === t &&
            ((this._init = this._createDescriptors(e, !0)),
            this._notify(this._init, e, "install"));
          const o = i ? this._descriptors(e).filter(i) : this._descriptors(e),
            a = this._notify(o, e, t, n);
          return (
            "afterDestroy" === t &&
              (this._notify(o, e, "stop"),
              this._notify(this._init, e, "uninstall")),
            a
          );
        }
        _notify(e, t, n, i) {
          i = i || {};
          for (const o of e) {
            const e = o.plugin;
            if (!1 === Lv(e[n], [t, i, o.options], e) && i.cancelable)
              return !1;
          }
          return !0;
        }
        invalidate() {
          Sv(this._cache) ||
            ((this._oldCache = this._cache), (this._cache = void 0));
        }
        _descriptors(e) {
          if (this._cache) return this._cache;
          const t = (this._cache = this._createDescriptors(e));
          return this._notifyStateChanges(e), t;
        }
        _createDescriptors(e, t) {
          const n = e && e.config,
            i = Pv(n.options && n.options.plugins, {}),
            o = (function (e) {
              const t = {},
                n = [],
                i = Object.keys(Gw.plugins.items);
              for (let a = 0; a < i.length; a++) n.push(Gw.getPlugin(i[a]));
              const o = e.plugins || [];
              for (let a = 0; a < o.length; a++) {
                const e = o[a];
                -1 === n.indexOf(e) && (n.push(e), (t[e.id] = !0));
              }
              return { plugins: n, localIds: t };
            })(n);
          return !1 !== i || t
            ? (function (e, t, n, i) {
                let { plugins: o, localIds: a } = t;
                const s = [],
                  r = e.getContext();
                for (const l of o) {
                  const t = l.id,
                    o = Uw(n[t], i);
                  null !== o &&
                    s.push({
                      plugin: l,
                      options: Yw(e.config, { plugin: l, local: a[t] }, o, r),
                    });
                }
                return s;
              })(e, o, i, t)
            : [];
        }
        _notifyStateChanges(e) {
          const t = this._oldCache || [],
            n = this._cache,
            i = (e, t) =>
              e.filter((e) => !t.some((t) => e.plugin.id === t.plugin.id));
          this._notify(i(t, n), e, "stop"), this._notify(i(n, t), e, "start");
        }
      }
      function Uw(e, t) {
        return t || !1 !== e ? (!0 === e ? {} : e) : null;
      }
      function Yw(e, t, n, i) {
        let { plugin: o, local: a } = t;
        const s = e.pluginScopeKeys(o),
          r = e.getOptionScopes(n, s);
        return (
          a && o.defaults && r.push(o.defaults),
          e.createResolver(r, i, [""], {
            scriptable: !1,
            indexable: !1,
            allKeys: !0,
          })
        );
      }
      function Xw(e, t) {
        const n = Vb.datasets[e] || {};
        return (
          ((t.datasets || {})[e] || {}).indexAxis ||
          t.indexAxis ||
          n.indexAxis ||
          "x"
        );
      }
      function Kw(e) {
        if ("x" === e || "y" === e || "r" === e) return e;
      }
      function qw(e) {
        if (Kw(e)) return e;
        for (
          var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1;
          i < t;
          i++
        )
          n[i - 1] = arguments[i];
        for (const a of n) {
          const t =
            a.axis ||
            ("top" === (o = a.position) || "bottom" === o
              ? "x"
              : "left" === o || "right" === o
              ? "y"
              : void 0) ||
            (e.length > 1 && Kw(e[0].toLowerCase()));
          if (t) return t;
        }
        var o;
        throw new Error(
          "Cannot determine type of '".concat(
            e,
            "' axis. Please provide 'axis' or 'position' option."
          )
        );
      }
      function Zw(e, t, n) {
        if (n[t + "AxisID"] === e) return { axis: t };
      }
      function Qw(e, t) {
        const n = Bb[e.type] || { scales: {} },
          i = t.scales || {},
          o = Xw(e.type, t),
          a = Object.create(null);
        return (
          Object.keys(i).forEach((t) => {
            const s = i[t];
            if (!Av(s))
              return console.error(
                "Invalid scale configuration for scale: ".concat(t)
              );
            if (s._proxy)
              return console.warn(
                "Ignoring resolver passed as options for scale: ".concat(t)
              );
            const r = qw(
                t,
                s,
                (function (e, t) {
                  if (t.data && t.data.datasets) {
                    const n = t.data.datasets.filter(
                      (t) => t.xAxisID === e || t.yAxisID === e
                    );
                    if (n.length) return Zw(e, "x", n[0]) || Zw(e, "y", n[0]);
                  }
                  return {};
                })(t, e),
                Vb.scales[s.type]
              ),
              l = (function (e, t) {
                return e === t ? "_index_" : "_value_";
              })(r, o),
              c = n.scales || {};
            a[t] = Dv(Object.create(null), [{ axis: r }, s, c[r], c[l]]);
          }),
          e.data.datasets.forEach((n) => {
            const o = n.type || e.type,
              s = n.indexAxis || Xw(o, t),
              r = (Bb[o] || {}).scales || {};
            Object.keys(r).forEach((e) => {
              const t = (function (e, t) {
                  let n = e;
                  return (
                    "_index_" === e
                      ? (n = t)
                      : "_value_" === e && (n = "x" === t ? "y" : "x"),
                    n
                  );
                })(e, s),
                o = n[t + "AxisID"] || t;
              (a[o] = a[o] || Object.create(null)),
                Dv(a[o], [{ axis: t }, i[o], r[e]]);
            });
          }),
          Object.keys(a).forEach((e) => {
            const t = a[e];
            Dv(t, [Vb.scales[t.type], Vb.scale]);
          }),
          a
        );
      }
      function $w(e) {
        const t = e.options || (e.options = {});
        (t.plugins = Pv(t.plugins, {})), (t.scales = Qw(e, t));
      }
      function Jw(e) {
        return (
          ((e = e || {}).datasets = e.datasets || []),
          (e.labels = e.labels || []),
          e
        );
      }
      const eS = new Map(),
        tS = new Set();
      function nS(e, t) {
        let n = eS.get(e);
        return n || ((n = t()), eS.set(e, n), tS.add(n)), n;
      }
      const iS = (e, t, n) => {
        const i = Bv(t, n);
        void 0 !== i && e.add(i);
      };
      class oS {
        constructor(e) {
          (this._config = (function (e) {
            return ((e = e || {}).data = Jw(e.data)), $w(e), e;
          })(e)),
            (this._scopeCache = new Map()),
            (this._resolverCache = new Map());
        }
        get platform() {
          return this._config.platform;
        }
        get type() {
          return this._config.type;
        }
        set type(e) {
          this._config.type = e;
        }
        get data() {
          return this._config.data;
        }
        set data(e) {
          this._config.data = Jw(e);
        }
        get options() {
          return this._config.options;
        }
        set options(e) {
          this._config.options = e;
        }
        get plugins() {
          return this._config.plugins;
        }
        update() {
          const e = this._config;
          this.clearCache(), $w(e);
        }
        clearCache() {
          this._scopeCache.clear(), this._resolverCache.clear();
        }
        datasetScopeKeys(e) {
          return nS(e, () => [["datasets.".concat(e), ""]]);
        }
        datasetAnimationScopeKeys(e, t) {
          return nS("".concat(e, ".transition.").concat(t), () => [
            [
              "datasets.".concat(e, ".transitions.").concat(t),
              "transitions.".concat(t),
            ],
            ["datasets.".concat(e), ""],
          ]);
        }
        datasetElementScopeKeys(e, t) {
          return nS("".concat(e, "-").concat(t), () => [
            [
              "datasets.".concat(e, ".elements.").concat(t),
              "datasets.".concat(e),
              "elements.".concat(t),
              "",
            ],
          ]);
        }
        pluginScopeKeys(e) {
          const t = e.id,
            n = this.type;
          return nS("".concat(n, "-plugin-").concat(t), () => [
            ["plugins.".concat(t), ...(e.additionalOptionScopes || [])],
          ]);
        }
        _cachedScopes(e, t) {
          const n = this._scopeCache;
          let i = n.get(e);
          return (i && !t) || ((i = new Map()), n.set(e, i)), i;
        }
        getOptionScopes(e, t, n) {
          const { options: i, type: o } = this,
            a = this._cachedScopes(e, n),
            s = a.get(t);
          if (s) return s;
          const r = new Set();
          t.forEach((t) => {
            e && (r.add(e), t.forEach((t) => iS(r, e, t))),
              t.forEach((e) => iS(r, i, e)),
              t.forEach((e) => iS(r, Bb[o] || {}, e)),
              t.forEach((e) => iS(r, Vb, e)),
              t.forEach((e) => iS(r, Fb, e));
          });
          const l = Array.from(r);
          return (
            0 === l.length && l.push(Object.create(null)),
            tS.has(t) && a.set(t, l),
            l
          );
        }
        chartOptionScopes() {
          const { options: e, type: t } = this;
          return [e, Bb[t] || {}, Vb.datasets[t] || {}, { type: t }, Vb, Fb];
        }
        resolveNamedOptions(e, t, n) {
          let i =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : [""];
          const o = { $shared: !0 },
            { resolver: a, subPrefixes: s } = aS(this._resolverCache, e, i);
          let r = a;
          if (
            (function (e, t) {
              const { isScriptable: n, isIndexable: i } = xx(e);
              for (const o of t) {
                const t = n(o),
                  a = i(o),
                  s = (a || t) && e[o];
                if ((t && (Hv(s) || sS(s))) || (a && kv(s))) return !0;
              }
              return !1;
            })(a, t)
          ) {
            o.$shared = !1;
            r = bx(a, (n = Hv(n) ? n() : n), this.createResolver(e, n, s));
          }
          for (const l of t) o[l] = r[l];
          return o;
        }
        createResolver(e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [""],
            i = arguments.length > 3 ? arguments[3] : void 0;
          const { resolver: o } = aS(this._resolverCache, e, n);
          return Av(t) ? bx(o, t, void 0, i) : o;
        }
      }
      function aS(e, t, n) {
        let i = e.get(t);
        i || ((i = new Map()), e.set(t, i));
        const o = n.join();
        let a = i.get(o);
        if (!a) {
          (a = {
            resolver: vx(t, n),
            subPrefixes: n.filter((e) => !e.toLowerCase().includes("hover")),
          }),
            i.set(o, a);
        }
        return a;
      }
      const sS = (e) =>
        Av(e) && Object.getOwnPropertyNames(e).some((t) => Hv(e[t]));
      const rS = ["top", "bottom", "left", "right", "chartArea"];
      function lS(e, t) {
        return (
          "top" === e || "bottom" === e || (-1 === rS.indexOf(e) && "x" === t)
        );
      }
      function cS(e, t) {
        return function (n, i) {
          return n[e] === i[e] ? n[t] - i[t] : n[e] - i[e];
        };
      }
      function uS(e) {
        const t = e.chart,
          n = t.options.animation;
        t.notifyPlugins("afterRender"), Lv(n && n.onComplete, [e], t);
      }
      function dS(e) {
        const t = e.chart,
          n = t.options.animation;
        Lv(n && n.onProgress, [e], t);
      }
      function hS(e) {
        return (
          jx() && "string" === typeof e
            ? (e = document.getElementById(e))
            : e && e.length && (e = e[0]),
          e && e.canvas && (e = e.canvas),
          e
        );
      }
      const pS = {},
        fS = (e) => {
          const t = hS(e);
          return Object.values(pS)
            .filter((e) => e.canvas === t)
            .pop();
        };
      function gS(e, t, n) {
        const i = Object.keys(e);
        for (const o of i) {
          const i = +o;
          if (i >= t) {
            const a = e[o];
            delete e[o], (n > 0 || i > t) && (e[i + n] = a);
          }
        }
      }
      function mS(e, t, n) {
        return e.options.clip ? e[n] : t[n];
      }
      class vS {
        static register() {
          Gw.add(...arguments), bS();
        }
        static unregister() {
          Gw.remove(...arguments), bS();
        }
        constructor(e, t) {
          const n = (this.config = new oS(t)),
            i = hS(e),
            o = fS(i);
          if (o)
            throw new Error(
              "Canvas is already in use. Chart with ID '" +
                o.id +
                "' must be destroyed before the canvas with ID '" +
                o.canvas.id +
                "' can be reused."
            );
          const a = n.createResolver(n.chartOptionScopes(), this.getContext());
          (this.platform = new (n.platform ||
            (function (e) {
              return !jx() ||
                ("undefined" !== typeof OffscreenCanvas &&
                  e instanceof OffscreenCanvas)
                ? fw
                : Lw;
            })(i))()),
            this.platform.updateConfig(n);
          const s = this.platform.acquireContext(i, a.aspectRatio),
            r = s && s.canvas,
            l = r && r.height,
            c = r && r.width;
          (this.id = wv()),
            (this.ctx = s),
            (this.canvas = r),
            (this.width = c),
            (this.height = l),
            (this._options = a),
            (this._aspectRatio = this.aspectRatio),
            (this._layers = []),
            (this._metasets = []),
            (this._stacks = void 0),
            (this.boxes = []),
            (this.currentDevicePixelRatio = void 0),
            (this.chartArea = void 0),
            (this._active = []),
            (this._lastEvent = void 0),
            (this._listeners = {}),
            (this._responsiveListeners = void 0),
            (this._sortedMetasets = []),
            (this.scales = {}),
            (this._plugins = new Vw()),
            (this.$proxies = {}),
            (this._hiddenIndices = {}),
            (this.attached = !1),
            (this._animationsDisabled = void 0),
            (this.$context = void 0),
            (this._doResize = (function (e, t) {
              let n;
              return function () {
                for (
                  var i = arguments.length, o = new Array(i), a = 0;
                  a < i;
                  a++
                )
                  o[a] = arguments[a];
                return (
                  t
                    ? (clearTimeout(n), (n = setTimeout(e, t, o)))
                    : e.apply(this, o),
                  t
                );
              };
            })((e) => this.update(e), a.resizeDelay || 0)),
            (this._dataChanges = []),
            (pS[this.id] = this),
            s && r
              ? (dy.listen(this, "complete", uS),
                dy.listen(this, "progress", dS),
                this._initialize(),
                this.attached && this.update())
              : console.error(
                  "Failed to create chart: can't acquire context from the given item"
                );
        }
        get aspectRatio() {
          const {
            options: { aspectRatio: e, maintainAspectRatio: t },
            width: n,
            height: i,
            _aspectRatio: o,
          } = this;
          return Sv(e) ? (t && o ? o : i ? n / i : null) : e;
        }
        get data() {
          return this.config.data;
        }
        set data(e) {
          this.config.data = e;
        }
        get options() {
          return this._options;
        }
        set options(e) {
          this.config.options = e;
        }
        get registry() {
          return Gw;
        }
        _initialize() {
          return (
            this.notifyPlugins("beforeInit"),
            this.options.responsive
              ? this.resize()
              : Kx(this, this.options.devicePixelRatio),
            this.bindEvents(),
            this.notifyPlugins("afterInit"),
            this
          );
        }
        clear() {
          return Kb(this.canvas, this.ctx), this;
        }
        stop() {
          return dy.stop(this), this;
        }
        resize(e, t) {
          dy.running(this)
            ? (this._resizeBeforeDraw = { width: e, height: t })
            : this._resize(e, t);
        }
        _resize(e, t) {
          const n = this.options,
            i = this.canvas,
            o = n.maintainAspectRatio && this.aspectRatio,
            a = this.platform.getMaximumSize(i, e, t, o),
            s = n.devicePixelRatio || this.platform.getDevicePixelRatio(),
            r = this.width ? "resize" : "attach";
          (this.width = a.width),
            (this.height = a.height),
            (this._aspectRatio = this.aspectRatio),
            Kx(this, s, !0) &&
              (this.notifyPlugins("resize", { size: a }),
              Lv(n.onResize, [this, a], this),
              this.attached && this._doResize(r) && this.render());
        }
        ensureScalesHaveIDs() {
          Tv(this.options.scales || {}, (e, t) => {
            e.id = t;
          });
        }
        buildOrUpdateScales() {
          const e = this.options,
            t = e.scales,
            n = this.scales,
            i = Object.keys(n).reduce((e, t) => ((e[t] = !1), e), {});
          let o = [];
          t &&
            (o = o.concat(
              Object.keys(t).map((e) => {
                const n = t[e],
                  i = qw(e, n),
                  o = "r" === i,
                  a = "x" === i;
                return {
                  options: n,
                  dposition: o ? "chartArea" : a ? "bottom" : "left",
                  dtype: o ? "radialLinear" : a ? "category" : "linear",
                };
              })
            )),
            Tv(o, (t) => {
              const o = t.options,
                a = o.id,
                s = qw(a, o),
                r = Pv(o.type, t.dtype);
              (void 0 !== o.position &&
                lS(o.position, s) === lS(t.dposition)) ||
                (o.position = t.dposition),
                (i[a] = !0);
              let l = null;
              if (a in n && n[a].type === r) l = n[a];
              else {
                (l = new (Gw.getScale(r))({
                  id: a,
                  type: r,
                  ctx: this.ctx,
                  chart: this,
                })),
                  (n[l.id] = l);
              }
              l.init(o, e);
            }),
            Tv(i, (e, t) => {
              e || delete n[t];
            }),
            Tv(n, (e) => {
              hw.configure(this, e, e.options), hw.addBox(this, e);
            });
        }
        _updateMetasets() {
          const e = this._metasets,
            t = this.data.datasets.length,
            n = e.length;
          if ((e.sort((e, t) => e.index - t.index), n > t)) {
            for (let e = t; e < n; ++e) this._destroyDatasetMeta(e);
            e.splice(t, n - t);
          }
          this._sortedMetasets = e.slice(0).sort(cS("order", "index"));
        }
        _removeUnreferencedMetasets() {
          const {
            _metasets: e,
            data: { datasets: t },
          } = this;
          e.length > t.length && delete this._stacks,
            e.forEach((e, n) => {
              0 === t.filter((t) => t === e._dataset).length &&
                this._destroyDatasetMeta(n);
            });
        }
        buildOrUpdateControllers() {
          const e = [],
            t = this.data.datasets;
          let n, i;
          for (
            this._removeUnreferencedMetasets(), n = 0, i = t.length;
            n < i;
            n++
          ) {
            const i = t[n];
            let o = this.getDatasetMeta(n);
            const a = i.type || this.config.type;
            if (
              (o.type &&
                o.type !== a &&
                (this._destroyDatasetMeta(n), (o = this.getDatasetMeta(n))),
              (o.type = a),
              (o.indexAxis = i.indexAxis || Xw(a, this.options)),
              (o.order = i.order || 0),
              (o.index = n),
              (o.label = "" + i.label),
              (o.visible = this.isDatasetVisible(n)),
              o.controller)
            )
              o.controller.updateIndex(n), o.controller.linkScales();
            else {
              const t = Gw.getController(a),
                { datasetElementType: i, dataElementType: s } = Vb.datasets[a];
              Object.assign(t, {
                dataElementType: Gw.getElement(s),
                datasetElementType: i && Gw.getElement(i),
              }),
                (o.controller = new t(this, n)),
                e.push(o.controller);
            }
          }
          return this._updateMetasets(), e;
        }
        _resetElements() {
          Tv(
            this.data.datasets,
            (e, t) => {
              this.getDatasetMeta(t).controller.reset();
            },
            this
          );
        }
        reset() {
          this._resetElements(), this.notifyPlugins("reset");
        }
        update(e) {
          const t = this.config;
          t.update();
          const n = (this._options = t.createResolver(
              t.chartOptionScopes(),
              this.getContext()
            )),
            i = (this._animationsDisabled = !n.animation);
          if (
            (this._updateScales(),
            this._checkEventBindings(),
            this._updateHiddenIndices(),
            this._plugins.invalidate(),
            !1 ===
              this.notifyPlugins("beforeUpdate", { mode: e, cancelable: !0 }))
          )
            return;
          const o = this.buildOrUpdateControllers();
          this.notifyPlugins("beforeElementsUpdate");
          let a = 0;
          for (let l = 0, c = this.data.datasets.length; l < c; l++) {
            const { controller: e } = this.getDatasetMeta(l),
              t = !i && -1 === o.indexOf(e);
            e.buildOrUpdateElements(t), (a = Math.max(+e.getMaxOverflow(), a));
          }
          (a = this._minPadding = n.layout.autoPadding ? a : 0),
            this._updateLayout(a),
            i ||
              Tv(o, (e) => {
                e.reset();
              }),
            this._updateDatasets(e),
            this.notifyPlugins("afterUpdate", { mode: e }),
            this._layers.sort(cS("z", "_idx"));
          const { _active: s, _lastEvent: r } = this;
          r
            ? this._eventHandler(r, !0)
            : s.length && this._updateHoverStyles(s, s, !0),
            this.render();
        }
        _updateScales() {
          Tv(this.scales, (e) => {
            hw.removeBox(this, e);
          }),
            this.ensureScalesHaveIDs(),
            this.buildOrUpdateScales();
        }
        _checkEventBindings() {
          const e = this.options,
            t = new Set(Object.keys(this._listeners)),
            n = new Set(e.events);
          (Gv(t, n) && !!this._responsiveListeners === e.responsive) ||
            (this.unbindEvents(), this.bindEvents());
        }
        _updateHiddenIndices() {
          const { _hiddenIndices: e } = this,
            t = this._getUniformDataChanges() || [];
          for (const { method: n, start: i, count: o } of t) {
            gS(e, i, "_removeElements" === n ? -o : o);
          }
        }
        _getUniformDataChanges() {
          const e = this._dataChanges;
          if (!e || !e.length) return;
          this._dataChanges = [];
          const t = this.data.datasets.length,
            n = (t) =>
              new Set(
                e
                  .filter((e) => e[0] === t)
                  .map((e, t) => t + "," + e.splice(1).join(","))
              ),
            i = n(0);
          for (let o = 1; o < t; o++) if (!Gv(i, n(o))) return;
          return Array.from(i)
            .map((e) => e.split(","))
            .map((e) => ({ method: e[1], start: +e[2], count: +e[3] }));
        }
        _updateLayout(e) {
          if (!1 === this.notifyPlugins("beforeLayout", { cancelable: !0 }))
            return;
          hw.update(this, this.width, this.height, e);
          const t = this.chartArea,
            n = t.width <= 0 || t.height <= 0;
          (this._layers = []),
            Tv(
              this.boxes,
              (e) => {
                (n && "chartArea" === e.position) ||
                  (e.configure && e.configure(),
                  this._layers.push(...e._layers()));
              },
              this
            ),
            this._layers.forEach((e, t) => {
              e._idx = t;
            }),
            this.notifyPlugins("afterLayout");
        }
        _updateDatasets(e) {
          if (
            !1 !==
            this.notifyPlugins("beforeDatasetsUpdate", {
              mode: e,
              cancelable: !0,
            })
          ) {
            for (let e = 0, t = this.data.datasets.length; e < t; ++e)
              this.getDatasetMeta(e).controller.configure();
            for (let t = 0, n = this.data.datasets.length; t < n; ++t)
              this._updateDataset(t, Hv(e) ? e({ datasetIndex: t }) : e);
            this.notifyPlugins("afterDatasetsUpdate", { mode: e });
          }
        }
        _updateDataset(e, t) {
          const n = this.getDatasetMeta(e),
            i = { meta: n, index: e, mode: t, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetUpdate", i) &&
            (n.controller._update(t),
            (i.cancelable = !1),
            this.notifyPlugins("afterDatasetUpdate", i));
        }
        render() {
          !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) &&
            (dy.has(this)
              ? this.attached && !dy.running(this) && dy.start(this)
              : (this.draw(), uS({ chart: this })));
        }
        draw() {
          let e;
          if (this._resizeBeforeDraw) {
            const { width: e, height: t } = this._resizeBeforeDraw;
            (this._resizeBeforeDraw = null), this._resize(e, t);
          }
          if ((this.clear(), this.width <= 0 || this.height <= 0)) return;
          if (!1 === this.notifyPlugins("beforeDraw", { cancelable: !0 }))
            return;
          const t = this._layers;
          for (e = 0; e < t.length && t[e].z <= 0; ++e)
            t[e].draw(this.chartArea);
          for (this._drawDatasets(); e < t.length; ++e)
            t[e].draw(this.chartArea);
          this.notifyPlugins("afterDraw");
        }
        _getSortedDatasetMetas(e) {
          const t = this._sortedMetasets,
            n = [];
          let i, o;
          for (i = 0, o = t.length; i < o; ++i) {
            const o = t[i];
            (e && !o.visible) || n.push(o);
          }
          return n;
        }
        getSortedVisibleDatasetMetas() {
          return this._getSortedDatasetMetas(!0);
        }
        _drawDatasets() {
          if (
            !1 === this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })
          )
            return;
          const e = this.getSortedVisibleDatasetMetas();
          for (let t = e.length - 1; t >= 0; --t) this._drawDataset(e[t]);
          this.notifyPlugins("afterDatasetsDraw");
        }
        _drawDataset(e) {
          const t = this.ctx,
            n = e._clip,
            i = !n.disabled,
            o = (function (e, t) {
              const { xScale: n, yScale: i } = e;
              return n && i
                ? {
                    left: mS(n, t, "left"),
                    right: mS(n, t, "right"),
                    top: mS(i, t, "top"),
                    bottom: mS(i, t, "bottom"),
                  }
                : t;
            })(e, this.chartArea),
            a = { meta: e, index: e.index, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetDraw", a) &&
            (i &&
              $b(t, {
                left: !1 === n.left ? 0 : o.left - n.left,
                right: !1 === n.right ? this.width : o.right + n.right,
                top: !1 === n.top ? 0 : o.top - n.top,
                bottom: !1 === n.bottom ? this.height : o.bottom + n.bottom,
              }),
            e.controller.draw(),
            i && Jb(t),
            (a.cancelable = !1),
            this.notifyPlugins("afterDatasetDraw", a));
        }
        isPointInArea(e) {
          return Qb(e, this.chartArea, this._minPadding);
        }
        getElementsAtEventForMode(e, t, n, i) {
          const o = Jy.modes[t];
          return "function" === typeof o ? o(this, e, n, i) : [];
        }
        getDatasetMeta(e) {
          const t = this.data.datasets[e],
            n = this._metasets;
          let i = n.filter((e) => e && e._dataset === t).pop();
          return (
            i ||
              ((i = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                xAxisID: null,
                yAxisID: null,
                order: (t && t.order) || 0,
                index: e,
                _dataset: t,
                _parsed: [],
                _sorted: !1,
              }),
              n.push(i)),
            i
          );
        }
        getContext() {
          return (
            this.$context ||
            (this.$context = mx(null, { chart: this, type: "chart" }))
          );
        }
        getVisibleDatasetCount() {
          return this.getSortedVisibleDatasetMetas().length;
        }
        isDatasetVisible(e) {
          const t = this.data.datasets[e];
          if (!t) return !1;
          const n = this.getDatasetMeta(e);
          return "boolean" === typeof n.hidden ? !n.hidden : !t.hidden;
        }
        setDatasetVisibility(e, t) {
          this.getDatasetMeta(e).hidden = !t;
        }
        toggleDataVisibility(e) {
          this._hiddenIndices[e] = !this._hiddenIndices[e];
        }
        getDataVisibility(e) {
          return !this._hiddenIndices[e];
        }
        _updateVisibility(e, t, n) {
          const i = n ? "show" : "hide",
            o = this.getDatasetMeta(e),
            a = o.controller._resolveAnimations(void 0, i);
          Wv(t)
            ? ((o.data[t].hidden = !n), this.update())
            : (this.setDatasetVisibility(e, n),
              a.update(o, { visible: n }),
              this.update((t) => (t.datasetIndex === e ? i : void 0)));
        }
        hide(e, t) {
          this._updateVisibility(e, t, !1);
        }
        show(e, t) {
          this._updateVisibility(e, t, !0);
        }
        _destroyDatasetMeta(e) {
          const t = this._metasets[e];
          t && t.controller && t.controller._destroy(),
            delete this._metasets[e];
        }
        _stop() {
          let e, t;
          for (
            this.stop(), dy.remove(this), e = 0, t = this.data.datasets.length;
            e < t;
            ++e
          )
            this._destroyDatasetMeta(e);
        }
        destroy() {
          this.notifyPlugins("beforeDestroy");
          const { canvas: e, ctx: t } = this;
          this._stop(),
            this.config.clearCache(),
            e &&
              (this.unbindEvents(),
              Kb(e, t),
              this.platform.releaseContext(t),
              (this.canvas = null),
              (this.ctx = null)),
            delete pS[this.id],
            this.notifyPlugins("afterDestroy");
        }
        toBase64Image() {
          return this.canvas.toDataURL(...arguments);
        }
        bindEvents() {
          this.bindUserEvents(),
            this.options.responsive
              ? this.bindResponsiveEvents()
              : (this.attached = !0);
        }
        bindUserEvents() {
          const e = this._listeners,
            t = this.platform,
            n = (n, i) => {
              t.addEventListener(this, n, i), (e[n] = i);
            },
            i = (e, t, n) => {
              (e.offsetX = t), (e.offsetY = n), this._eventHandler(e);
            };
          Tv(this.options.events, (e) => n(e, i));
        }
        bindResponsiveEvents() {
          this._responsiveListeners || (this._responsiveListeners = {});
          const e = this._responsiveListeners,
            t = this.platform,
            n = (n, i) => {
              t.addEventListener(this, n, i), (e[n] = i);
            },
            i = (n, i) => {
              e[n] && (t.removeEventListener(this, n, i), delete e[n]);
            },
            o = (e, t) => {
              this.canvas && this.resize(e, t);
            };
          let a;
          const s = () => {
            i("attach", s),
              (this.attached = !0),
              this.resize(),
              n("resize", o),
              n("detach", a);
          };
          (a = () => {
            (this.attached = !1),
              i("resize", o),
              this._stop(),
              this._resize(0, 0),
              n("attach", s);
          }),
            t.isAttached(this.canvas) ? s() : a();
        }
        unbindEvents() {
          Tv(this._listeners, (e, t) => {
            this.platform.removeEventListener(this, t, e);
          }),
            (this._listeners = {}),
            Tv(this._responsiveListeners, (e, t) => {
              this.platform.removeEventListener(this, t, e);
            }),
            (this._responsiveListeners = void 0);
        }
        updateHoverStyle(e, t, n) {
          const i = n ? "set" : "remove";
          let o, a, s, r;
          for (
            "dataset" === t &&
              ((o = this.getDatasetMeta(e[0].datasetIndex)),
              o.controller["_" + i + "DatasetHoverStyle"]()),
              s = 0,
              r = e.length;
            s < r;
            ++s
          ) {
            a = e[s];
            const t = a && this.getDatasetMeta(a.datasetIndex).controller;
            t && t[i + "HoverStyle"](a.element, a.datasetIndex, a.index);
          }
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(e) {
          const t = this._active || [],
            n = e.map((e) => {
              let { datasetIndex: t, index: n } = e;
              const i = this.getDatasetMeta(t);
              if (!i) throw new Error("No dataset found at index " + t);
              return { datasetIndex: t, element: i.data[n], index: n };
            });
          !Ov(n, t) &&
            ((this._active = n),
            (this._lastEvent = null),
            this._updateHoverStyles(n, t));
        }
        notifyPlugins(e, t, n) {
          return this._plugins.notify(this, e, t, n);
        }
        isPluginEnabled(e) {
          return (
            1 === this._plugins._cache.filter((t) => t.plugin.id === e).length
          );
        }
        _updateHoverStyles(e, t, n) {
          const i = this.options.hover,
            o = (e, t) =>
              e.filter(
                (e) =>
                  !t.some(
                    (t) =>
                      e.datasetIndex === t.datasetIndex && e.index === t.index
                  )
              ),
            a = o(t, e),
            s = n ? e : o(e, t);
          a.length && this.updateHoverStyle(a, i.mode, !1),
            s.length && i.mode && this.updateHoverStyle(s, i.mode, !0);
        }
        _eventHandler(e, t) {
          const n = {
              event: e,
              replay: t,
              cancelable: !0,
              inChartArea: this.isPointInArea(e),
            },
            i = (t) =>
              (t.options.events || this.options.events).includes(e.native.type);
          if (!1 === this.notifyPlugins("beforeEvent", n, i)) return;
          const o = this._handleEvent(e, t, n.inChartArea);
          return (
            (n.cancelable = !1),
            this.notifyPlugins("afterEvent", n, i),
            (o || n.changed) && this.render(),
            this
          );
        }
        _handleEvent(e, t, n) {
          const { _active: i = [], options: o } = this,
            a = t,
            s = this._getActiveElements(e, i, n, a),
            r = (function (e) {
              return (
                "mouseup" === e.type ||
                "click" === e.type ||
                "contextmenu" === e.type
              );
            })(e),
            l = (function (e, t, n, i) {
              return n && "mouseout" !== e.type ? (i ? t : e) : null;
            })(e, this._lastEvent, n, r);
          n &&
            ((this._lastEvent = null),
            Lv(o.onHover, [e, s, this], this),
            r && Lv(o.onClick, [e, s, this], this));
          const c = !Ov(s, i);
          return (
            (c || t) && ((this._active = s), this._updateHoverStyles(s, i, t)),
            (this._lastEvent = l),
            c
          );
        }
        _getActiveElements(e, t, n, i) {
          if ("mouseout" === e.type) return [];
          if (!n) return t;
          const o = this.options.hover;
          return this.getElementsAtEventForMode(e, o.mode, o, i);
        }
      }
      function bS() {
        return Tv(vS.instances, (e) => e._plugins.invalidate());
      }
      function xS(e, t, n, i) {
        const o = ux(e.options.borderRadius, [
          "outerStart",
          "outerEnd",
          "innerStart",
          "innerEnd",
        ]);
        const a = (n - t) / 2,
          s = Math.min(a, (i * t) / 2),
          r = (e) => {
            const t = ((n - Math.min(a, e)) * i) / 2;
            return hb(e, 0, Math.min(a, t));
          };
        return {
          outerStart: r(o.outerStart),
          outerEnd: r(o.outerEnd),
          innerStart: hb(o.innerStart, 0, s),
          innerEnd: hb(o.innerEnd, 0, s),
        };
      }
      function yS(e, t, n, i) {
        return { x: n + e * Math.cos(t), y: i + e * Math.sin(t) };
      }
      function wS(e, t, n, i, o, a) {
        const { x: s, y: r, startAngle: l, pixelMargin: c, innerRadius: u } = t,
          d = Math.max(t.outerRadius + i + n - c, 0),
          h = u > 0 ? u + i + n + c : 0;
        let p = 0;
        const f = o - l;
        if (i) {
          const e = ((u > 0 ? u - i : 0) + (d > 0 ? d - i : 0)) / 2;
          p = (f - (0 !== e ? (f * e) / (e + i) : f)) / 2;
        }
        const g = (f - Math.max(0.001, f * d - n / Vv) / d) / 2,
          m = l + g + p,
          v = o - g - p,
          {
            outerStart: b,
            outerEnd: x,
            innerStart: y,
            innerEnd: w,
          } = xS(t, h, d, v - m),
          S = d - b,
          k = d - x,
          A = m + b / S,
          C = v - x / k,
          M = h + y,
          P = h + w,
          E = m + y / M,
          L = v - w / P;
        if ((e.beginPath(), a)) {
          const t = (A + C) / 2;
          if ((e.arc(s, r, d, A, t), e.arc(s, r, d, t, C), x > 0)) {
            const t = yS(k, C, s, r);
            e.arc(t.x, t.y, x, C, v + qv);
          }
          const n = yS(P, v, s, r);
          if ((e.lineTo(n.x, n.y), w > 0)) {
            const t = yS(P, L, s, r);
            e.arc(t.x, t.y, w, v + qv, L + Math.PI);
          }
          const i = (v - w / h + (m + y / h)) / 2;
          if (
            (e.arc(s, r, h, v - w / h, i, !0),
            e.arc(s, r, h, i, m + y / h, !0),
            y > 0)
          ) {
            const t = yS(M, E, s, r);
            e.arc(t.x, t.y, y, E + Math.PI, m - qv);
          }
          const o = yS(S, m, s, r);
          if ((e.lineTo(o.x, o.y), b > 0)) {
            const t = yS(S, A, s, r);
            e.arc(t.x, t.y, b, m - qv, A);
          }
        } else {
          e.moveTo(s, r);
          const t = Math.cos(A) * d + s,
            n = Math.sin(A) * d + r;
          e.lineTo(t, n);
          const i = Math.cos(C) * d + s,
            o = Math.sin(C) * d + r;
          e.lineTo(i, o);
        }
        e.closePath();
      }
      function SS(e, t, n, i, o) {
        const {
            fullCircles: a,
            startAngle: s,
            circumference: r,
            options: l,
          } = t,
          {
            borderWidth: c,
            borderJoinStyle: u,
            borderDash: d,
            borderDashOffset: h,
          } = l,
          p = "inner" === l.borderAlign;
        if (!c) return;
        e.setLineDash(d || []),
          (e.lineDashOffset = h),
          p
            ? ((e.lineWidth = 2 * c), (e.lineJoin = u || "round"))
            : ((e.lineWidth = c), (e.lineJoin = u || "bevel"));
        let f = t.endAngle;
        if (a) {
          wS(e, t, n, i, f, o);
          for (let t = 0; t < a; ++t) e.stroke();
          isNaN(r) || (f = s + (r % Uv || Uv));
        }
        p &&
          (function (e, t, n) {
            const {
              startAngle: i,
              pixelMargin: o,
              x: a,
              y: s,
              outerRadius: r,
              innerRadius: l,
            } = t;
            let c = o / r;
            e.beginPath(),
              e.arc(a, s, r, i - c, n + c),
              l > o
                ? ((c = o / l), e.arc(a, s, l, n + c, i - c, !0))
                : e.arc(a, s, o, n + qv, i - qv),
              e.closePath(),
              e.clip();
          })(e, t, f),
          a || (wS(e, t, n, i, f, o), e.stroke());
      }
      _(vS, "defaults", Vb),
        _(vS, "instances", pS),
        _(vS, "overrides", Bb),
        _(vS, "registry", Gw),
        _(vS, "version", "4.4.4"),
        _(vS, "getChart", fS);
      class kS extends Tw {
        constructor(e) {
          super(),
            _(this, "circumference", void 0),
            _(this, "endAngle", void 0),
            _(this, "fullCircles", void 0),
            _(this, "innerRadius", void 0),
            _(this, "outerRadius", void 0),
            _(this, "pixelMargin", void 0),
            _(this, "startAngle", void 0),
            (this.options = void 0),
            (this.circumference = void 0),
            (this.startAngle = void 0),
            (this.endAngle = void 0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.pixelMargin = 0),
            (this.fullCircles = 0),
            e && Object.assign(this, e);
        }
        inRange(e, t, n) {
          const i = this.getProps(["x", "y"], n),
            { angle: o, distance: a } = rb(i, { x: e, y: t }),
            {
              startAngle: s,
              endAngle: r,
              innerRadius: l,
              outerRadius: c,
              circumference: u,
            } = this.getProps(
              [
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              n
            ),
            d = (this.options.spacing + this.options.borderWidth) / 2,
            h = Pv(u, r - s),
            p = db(o, s, r) && s !== r,
            f = h >= Uv || p,
            g = pb(a, l + d, c + d);
          return f && g;
        }
        getCenterPoint(e) {
          const {
              x: t,
              y: n,
              startAngle: i,
              endAngle: o,
              innerRadius: a,
              outerRadius: s,
            } = this.getProps(
              [
                "x",
                "y",
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
              ],
              e
            ),
            { offset: r, spacing: l } = this.options,
            c = (i + o) / 2,
            u = (a + s + l + r) / 2;
          return { x: t + Math.cos(c) * u, y: n + Math.sin(c) * u };
        }
        tooltipPosition(e) {
          return this.getCenterPoint(e);
        }
        draw(e) {
          const { options: t, circumference: n } = this,
            i = (t.offset || 0) / 4,
            o = (t.spacing || 0) / 2,
            a = t.circular;
          if (
            ((this.pixelMargin = "inner" === t.borderAlign ? 0.33 : 0),
            (this.fullCircles = n > Uv ? Math.floor(n / Uv) : 0),
            0 === n || this.innerRadius < 0 || this.outerRadius < 0)
          )
            return;
          e.save();
          const s = (this.startAngle + this.endAngle) / 2;
          e.translate(Math.cos(s) * i, Math.sin(s) * i);
          const r = i * (1 - Math.sin(Math.min(Vv, n || 0)));
          (e.fillStyle = t.backgroundColor),
            (e.strokeStyle = t.borderColor),
            (function (e, t, n, i, o) {
              const { fullCircles: a, startAngle: s, circumference: r } = t;
              let l = t.endAngle;
              if (a) {
                wS(e, t, n, i, l, o);
                for (let t = 0; t < a; ++t) e.fill();
                isNaN(r) || (l = s + (r % Uv || Uv));
              }
              wS(e, t, n, i, l, o), e.fill();
            })(e, this, r, o, a),
            SS(e, this, r, o, a),
            e.restore();
        }
      }
      function AS(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t;
        (e.lineCap = Pv(n.borderCapStyle, t.borderCapStyle)),
          e.setLineDash(Pv(n.borderDash, t.borderDash)),
          (e.lineDashOffset = Pv(n.borderDashOffset, t.borderDashOffset)),
          (e.lineJoin = Pv(n.borderJoinStyle, t.borderJoinStyle)),
          (e.lineWidth = Pv(n.borderWidth, t.borderWidth)),
          (e.strokeStyle = Pv(n.borderColor, t.borderColor));
      }
      function CS(e, t, n) {
        e.lineTo(n.x, n.y);
      }
      function MS(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        const i = e.length,
          { start: o = 0, end: a = i - 1 } = n,
          { start: s, end: r } = t,
          l = Math.max(o, s),
          c = Math.min(a, r),
          u = (o < s && a < s) || (o > r && a > r);
        return {
          count: i,
          start: l,
          loop: t.loop,
          ilen: c < l && !u ? i + c - l : c - l,
        };
      }
      function PS(e, t, n, i) {
        const { points: o, options: a } = t,
          { count: s, start: r, loop: l, ilen: c } = MS(o, n, i),
          u = (function (e) {
            return e.stepped
              ? ex
              : e.tension || "monotone" === e.cubicInterpolationMode
              ? tx
              : CS;
          })(a);
        let d,
          h,
          p,
          { move: f = !0, reverse: g } = i || {};
        for (d = 0; d <= c; ++d)
          (h = o[(r + (g ? c - d : d)) % s]),
            h.skip ||
              (f ? (e.moveTo(h.x, h.y), (f = !1)) : u(e, p, h, g, a.stepped),
              (p = h));
        return (
          l && ((h = o[(r + (g ? c : 0)) % s]), u(e, p, h, g, a.stepped)), !!l
        );
      }
      function ES(e, t, n, i) {
        const o = t.points,
          { count: a, start: s, ilen: r } = MS(o, n, i),
          { move: l = !0, reverse: c } = i || {};
        let u,
          d,
          h,
          p,
          f,
          g,
          m = 0,
          v = 0;
        const b = (e) => (s + (c ? r - e : e)) % a,
          x = () => {
            p !== f && (e.lineTo(m, f), e.lineTo(m, p), e.lineTo(m, g));
          };
        for (l && ((d = o[b(0)]), e.moveTo(d.x, d.y)), u = 0; u <= r; ++u) {
          if (((d = o[b(u)]), d.skip)) continue;
          const t = d.x,
            n = d.y,
            i = 0 | t;
          i === h
            ? (n < p ? (p = n) : n > f && (f = n), (m = (v * m + t) / ++v))
            : (x(), e.lineTo(t, n), (h = i), (v = 0), (p = f = n)),
            (g = n);
        }
        x();
      }
      function LS(e) {
        const t = e.options,
          n = t.borderDash && t.borderDash.length;
        return !e._decimated &&
          !e._loop &&
          !t.tension &&
          "monotone" !== t.cubicInterpolationMode &&
          !t.stepped &&
          !n
          ? ES
          : PS;
      }
      _(kS, "id", "arc"),
        _(kS, "defaults", {
          borderAlign: "center",
          borderColor: "#fff",
          borderDash: [],
          borderDashOffset: 0,
          borderJoinStyle: void 0,
          borderRadius: 0,
          borderWidth: 2,
          offset: 0,
          spacing: 0,
          angle: void 0,
          circular: !0,
        }),
        _(kS, "defaultRoutes", { backgroundColor: "backgroundColor" }),
        _(kS, "descriptors", {
          _scriptable: !0,
          _indexable: (e) => "borderDash" !== e,
        });
      const TS = "function" === typeof Path2D;
      function OS(e, t, n, i) {
        TS && !t.options.segment
          ? (function (e, t, n, i) {
              let o = t._path;
              o ||
                ((o = t._path = new Path2D()),
                t.path(o, n, i) && o.closePath()),
                AS(e, t.options),
                e.stroke(o);
            })(e, t, n, i)
          : (function (e, t, n, i) {
              const { segments: o, options: a } = t,
                s = LS(t);
              for (const r of o)
                AS(e, a, r.style),
                  e.beginPath(),
                  s(e, t, r, { start: n, end: n + i - 1 }) && e.closePath(),
                  e.stroke();
            })(e, t, n, i);
      }
      class RS extends Tw {
        constructor(e) {
          super(),
            (this.animated = !0),
            (this.options = void 0),
            (this._chart = void 0),
            (this._loop = void 0),
            (this._fullLoop = void 0),
            (this._path = void 0),
            (this._points = void 0),
            (this._segments = void 0),
            (this._decimated = !1),
            (this._pointsUpdated = !1),
            (this._datasetIndex = void 0),
            e && Object.assign(this, e);
        }
        updateControlPoints(e, t) {
          const n = this.options;
          if (
            (n.tension || "monotone" === n.cubicInterpolationMode) &&
            !n.stepped &&
            !this._pointsUpdated
          ) {
            const i = n.spanGaps ? this._loop : this._fullLoop;
            zx(this._points, n, e, i, t), (this._pointsUpdated = !0);
          }
        }
        set points(e) {
          (this._points = e),
            delete this._segments,
            delete this._path,
            (this._pointsUpdated = !1);
        }
        get points() {
          return this._points;
        }
        get segments() {
          return (
            this._segments ||
            (this._segments = (function (e, t) {
              const n = e.points,
                i = e.options.spanGaps,
                o = n.length;
              if (!o) return [];
              const a = !!e._loop,
                { start: s, end: r } = (function (e, t, n, i) {
                  let o = 0,
                    a = t - 1;
                  if (n && !i) for (; o < t && !e[o].skip; ) o++;
                  for (; o < t && e[o].skip; ) o++;
                  for (o %= t, n && (a += o); a > o && e[a % t].skip; ) a--;
                  return (a %= t), { start: o, end: a };
                })(n, o, a, i);
              return ry(
                e,
                !0 === i
                  ? [{ start: s, end: r, loop: a }]
                  : (function (e, t, n, i) {
                      const o = e.length,
                        a = [];
                      let s,
                        r = t,
                        l = e[t];
                      for (s = t + 1; s <= n; ++s) {
                        const n = e[s % o];
                        n.skip || n.stop
                          ? l.skip ||
                            ((i = !1),
                            a.push({ start: t % o, end: (s - 1) % o, loop: i }),
                            (t = r = n.stop ? s : null))
                          : ((r = s), l.skip && (t = s)),
                          (l = n);
                      }
                      return (
                        null !== r &&
                          a.push({ start: t % o, end: r % o, loop: i }),
                        a
                      );
                    })(
                      n,
                      s,
                      r < s ? r + o : r,
                      !!e._fullLoop && 0 === s && r === o - 1
                    ),
                n,
                t
              );
            })(this, this.options.segment))
          );
        }
        first() {
          const e = this.segments,
            t = this.points;
          return e.length && t[e[0].start];
        }
        last() {
          const e = this.segments,
            t = this.points,
            n = e.length;
          return n && t[e[n - 1].end];
        }
        interpolate(e, t) {
          const n = this.options,
            i = e[t],
            o = this.points,
            a = sy(this, { property: t, start: i, end: i });
          if (!a.length) return;
          const s = [],
            r = (function (e) {
              return e.stepped
                ? $x
                : e.tension || "monotone" === e.cubicInterpolationMode
                ? Jx
                : Qx;
            })(n);
          let l, c;
          for (l = 0, c = a.length; l < c; ++l) {
            const { start: c, end: u } = a[l],
              d = o[c],
              h = o[u];
            if (d === h) {
              s.push(d);
              continue;
            }
            const p = r(d, h, Math.abs((i - d[t]) / (h[t] - d[t])), n.stepped);
            (p[t] = e[t]), s.push(p);
          }
          return 1 === s.length ? s[0] : s;
        }
        pathSegment(e, t, n) {
          return LS(this)(e, this, t, n);
        }
        path(e, t, n) {
          const i = this.segments,
            o = LS(this);
          let a = this._loop;
          (t = t || 0), (n = n || this.points.length - t);
          for (const s of i) a &= o(e, this, s, { start: t, end: t + n - 1 });
          return !!a;
        }
        draw(e, t, n, i) {
          const o = this.options || {};
          (this.points || []).length &&
            o.borderWidth &&
            (e.save(), OS(e, this, n, i), e.restore()),
            this.animated &&
              ((this._pointsUpdated = !1), (this._path = void 0));
        }
      }
      function IS(e, t, n, i) {
        const o = e.options,
          { [n]: a } = e.getProps([n], i);
        return Math.abs(t - a) < o.radius + o.hitRadius;
      }
      _(RS, "id", "line"),
        _(RS, "defaults", {
          borderCapStyle: "butt",
          borderDash: [],
          borderDashOffset: 0,
          borderJoinStyle: "miter",
          borderWidth: 3,
          capBezierPoints: !0,
          cubicInterpolationMode: "default",
          fill: !1,
          spanGaps: !1,
          stepped: !1,
          tension: 0,
        }),
        _(RS, "defaultRoutes", {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        }),
        _(RS, "descriptors", {
          _scriptable: !0,
          _indexable: (e) => "borderDash" !== e && "fill" !== e,
        });
      class NS extends Tw {
        constructor(e) {
          super(),
            _(this, "parsed", void 0),
            _(this, "skip", void 0),
            _(this, "stop", void 0),
            (this.options = void 0),
            (this.parsed = void 0),
            (this.skip = void 0),
            (this.stop = void 0),
            e && Object.assign(this, e);
        }
        inRange(e, t, n) {
          const i = this.options,
            { x: o, y: a } = this.getProps(["x", "y"], n);
          return (
            Math.pow(e - o, 2) + Math.pow(t - a, 2) <
            Math.pow(i.hitRadius + i.radius, 2)
          );
        }
        inXRange(e, t) {
          return IS(this, e, "x", t);
        }
        inYRange(e, t) {
          return IS(this, e, "y", t);
        }
        getCenterPoint(e) {
          const { x: t, y: n } = this.getProps(["x", "y"], e);
          return { x: t, y: n };
        }
        size(e) {
          let t = (e = e || this.options || {}).radius || 0;
          t = Math.max(t, (t && e.hoverRadius) || 0);
          return 2 * (t + ((t && e.borderWidth) || 0));
        }
        draw(e, t) {
          const n = this.options;
          this.skip ||
            n.radius < 0.1 ||
            !Qb(this, t, this.size(n) / 2) ||
            ((e.strokeStyle = n.borderColor),
            (e.lineWidth = n.borderWidth),
            (e.fillStyle = n.backgroundColor),
            qb(e, n, this.x, this.y));
        }
        getRange() {
          const e = this.options || {};
          return e.radius + e.hitRadius;
        }
      }
      function _S(e, t) {
        const {
          x: n,
          y: i,
          base: o,
          width: a,
          height: s,
        } = e.getProps(["x", "y", "base", "width", "height"], t);
        let r, l, c, u, d;
        return (
          e.horizontal
            ? ((d = s / 2),
              (r = Math.min(n, o)),
              (l = Math.max(n, o)),
              (c = i - d),
              (u = i + d))
            : ((d = a / 2),
              (r = n - d),
              (l = n + d),
              (c = Math.min(i, o)),
              (u = Math.max(i, o))),
          { left: r, top: c, right: l, bottom: u }
        );
      }
      function DS(e, t, n, i) {
        return e ? 0 : hb(t, n, i);
      }
      function zS(e) {
        const t = _S(e),
          n = t.right - t.left,
          i = t.bottom - t.top,
          o = (function (e, t, n) {
            const i = e.options.borderWidth,
              o = e.borderSkipped,
              a = dx(i);
            return {
              t: DS(o.top, a.top, 0, n),
              r: DS(o.right, a.right, 0, t),
              b: DS(o.bottom, a.bottom, 0, n),
              l: DS(o.left, a.left, 0, t),
            };
          })(e, n / 2, i / 2),
          a = (function (e, t, n) {
            const { enableBorderRadius: i } = e.getProps([
                "enableBorderRadius",
              ]),
              o = e.options.borderRadius,
              a = hx(o),
              s = Math.min(t, n),
              r = e.borderSkipped,
              l = i || Av(o);
            return {
              topLeft: DS(!l || r.top || r.left, a.topLeft, 0, s),
              topRight: DS(!l || r.top || r.right, a.topRight, 0, s),
              bottomLeft: DS(!l || r.bottom || r.left, a.bottomLeft, 0, s),
              bottomRight: DS(!l || r.bottom || r.right, a.bottomRight, 0, s),
            };
          })(e, n / 2, i / 2);
        return {
          outer: { x: t.left, y: t.top, w: n, h: i, radius: a },
          inner: {
            x: t.left + o.l,
            y: t.top + o.t,
            w: n - o.l - o.r,
            h: i - o.t - o.b,
            radius: {
              topLeft: Math.max(0, a.topLeft - Math.max(o.t, o.l)),
              topRight: Math.max(0, a.topRight - Math.max(o.t, o.r)),
              bottomLeft: Math.max(0, a.bottomLeft - Math.max(o.b, o.l)),
              bottomRight: Math.max(0, a.bottomRight - Math.max(o.b, o.r)),
            },
          },
        };
      }
      function jS(e, t, n, i) {
        const o = null === t,
          a = null === n,
          s = e && !(o && a) && _S(e, i);
        return (
          s && (o || pb(t, s.left, s.right)) && (a || pb(n, s.top, s.bottom))
        );
      }
      function BS(e, t) {
        e.rect(t.x, t.y, t.w, t.h);
      }
      function FS(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        const i = e.x !== n.x ? -t : 0,
          o = e.y !== n.y ? -t : 0,
          a = (e.x + e.w !== n.x + n.w ? t : 0) - i,
          s = (e.y + e.h !== n.y + n.h ? t : 0) - o;
        return {
          x: e.x + i,
          y: e.y + o,
          w: e.w + a,
          h: e.h + s,
          radius: e.radius,
        };
      }
      _(NS, "id", "point"),
        _(NS, "defaults", {
          borderWidth: 1,
          hitRadius: 1,
          hoverBorderWidth: 1,
          hoverRadius: 4,
          pointStyle: "circle",
          radius: 3,
          rotation: 0,
        }),
        _(NS, "defaultRoutes", {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        });
      class WS extends Tw {
        constructor(e) {
          super(),
            (this.options = void 0),
            (this.horizontal = void 0),
            (this.base = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.inflateAmount = void 0),
            e && Object.assign(this, e);
        }
        draw(e) {
          const {
              inflateAmount: t,
              options: { borderColor: n, backgroundColor: i },
            } = this,
            { inner: o, outer: a } = zS(this),
            s =
              (r = a.radius).topLeft ||
              r.topRight ||
              r.bottomLeft ||
              r.bottomRight
                ? ax
                : BS;
          var r;
          e.save(),
            (a.w === o.w && a.h === o.h) ||
              (e.beginPath(),
              s(e, FS(a, t, o)),
              e.clip(),
              s(e, FS(o, -t, a)),
              (e.fillStyle = n),
              e.fill("evenodd")),
            e.beginPath(),
            s(e, FS(o, t)),
            (e.fillStyle = i),
            e.fill(),
            e.restore();
        }
        inRange(e, t, n) {
          return jS(this, e, t, n);
        }
        inXRange(e, t) {
          return jS(this, e, null, t);
        }
        inYRange(e, t) {
          return jS(this, null, e, t);
        }
        getCenterPoint(e) {
          const {
            x: t,
            y: n,
            base: i,
            horizontal: o,
          } = this.getProps(["x", "y", "base", "horizontal"], e);
          return { x: o ? (t + i) / 2 : t, y: o ? n : (n + i) / 2 };
        }
        getRange(e) {
          return "x" === e ? this.width / 2 : this.height / 2;
        }
      }
      _(WS, "id", "bar"),
        _(WS, "defaults", {
          borderSkipped: "start",
          borderWidth: 0,
          borderRadius: 0,
          inflateAmount: "auto",
          pointStyle: void 0,
        }),
        _(WS, "defaultRoutes", {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        });
      const HS = (e, t) => {
        let { boxHeight: n = t, boxWidth: i = t } = e;
        return (
          e.usePointStyle &&
            ((n = Math.min(n, t)), (i = e.pointStyleWidth || Math.min(i, t))),
          { boxWidth: i, boxHeight: n, itemHeight: Math.max(t, n) }
        );
      };
      class GS extends Tw {
        constructor(e) {
          super(),
            (this._added = !1),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1),
            (this.chart = e.chart),
            (this.options = e.options),
            (this.ctx = e.ctx),
            (this.legendItems = void 0),
            (this.columnSizes = void 0),
            (this.lineWidths = void 0),
            (this.maxHeight = void 0),
            (this.maxWidth = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this._margins = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(e, t, n) {
          (this.maxWidth = e),
            (this.maxHeight = t),
            (this._margins = n),
            this.setDimensions(),
            this.buildLabels(),
            this.fit();
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = this._margins.left),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = this._margins.top),
              (this.bottom = this.height));
        }
        buildLabels() {
          const e = this.options.labels || {};
          let t = Lv(e.generateLabels, [this.chart], this) || [];
          e.filter && (t = t.filter((t) => e.filter(t, this.chart.data))),
            e.sort && (t = t.sort((t, n) => e.sort(t, n, this.chart.data))),
            this.options.reverse && t.reverse(),
            (this.legendItems = t);
        }
        fit() {
          const { options: e, ctx: t } = this;
          if (!e.display) return void (this.width = this.height = 0);
          const n = e.labels,
            i = fx(n.font),
            o = i.size,
            a = this._computeTitleHeight(),
            { boxWidth: s, itemHeight: r } = HS(n, o);
          let l, c;
          (t.font = i.string),
            this.isHorizontal()
              ? ((l = this.maxWidth), (c = this._fitRows(a, o, s, r) + 10))
              : ((c = this.maxHeight), (l = this._fitCols(a, i, s, r) + 10)),
            (this.width = Math.min(l, e.maxWidth || this.maxWidth)),
            (this.height = Math.min(c, e.maxHeight || this.maxHeight));
        }
        _fitRows(e, t, n, i) {
          const {
              ctx: o,
              maxWidth: a,
              options: {
                labels: { padding: s },
              },
            } = this,
            r = (this.legendHitBoxes = []),
            l = (this.lineWidths = [0]),
            c = i + s;
          let u = e;
          (o.textAlign = "left"), (o.textBaseline = "middle");
          let d = -1,
            h = -c;
          return (
            this.legendItems.forEach((e, p) => {
              const f = n + t / 2 + o.measureText(e.text).width;
              (0 === p || l[l.length - 1] + f + 2 * s > a) &&
                ((u += c), (l[l.length - (p > 0 ? 0 : 1)] = 0), (h += c), d++),
                (r[p] = { left: 0, top: h, row: d, width: f, height: i }),
                (l[l.length - 1] += f + s);
            }),
            u
          );
        }
        _fitCols(e, t, n, i) {
          const {
              ctx: o,
              maxHeight: a,
              options: {
                labels: { padding: s },
              },
            } = this,
            r = (this.legendHitBoxes = []),
            l = (this.columnSizes = []),
            c = a - e;
          let u = s,
            d = 0,
            h = 0,
            p = 0,
            f = 0;
          return (
            this.legendItems.forEach((e, a) => {
              const { itemWidth: g, itemHeight: m } = (function (
                e,
                t,
                n,
                i,
                o
              ) {
                const a = (function (e, t, n, i) {
                    let o = e.text;
                    o &&
                      "string" !== typeof o &&
                      (o = o.reduce((e, t) => (e.length > t.length ? e : t)));
                    return t + n.size / 2 + i.measureText(o).width;
                  })(i, e, t, n),
                  s = (function (e, t, n) {
                    let i = e;
                    "string" !== typeof t.text && (i = VS(t, n));
                    return i;
                  })(o, i, t.lineHeight);
                return { itemWidth: a, itemHeight: s };
              })(n, t, o, e, i);
              a > 0 &&
                h + m + 2 * s > c &&
                ((u += d + s),
                l.push({ width: d, height: h }),
                (p += d + s),
                f++,
                (d = h = 0)),
                (r[a] = { left: p, top: h, col: f, width: g, height: m }),
                (d = Math.max(d, g)),
                (h += m + s);
            }),
            (u += d),
            l.push({ width: d, height: h }),
            u
          );
        }
        adjustHitBoxes() {
          if (!this.options.display) return;
          const e = this._computeTitleHeight(),
            {
              legendHitBoxes: t,
              options: {
                align: n,
                labels: { padding: i },
                rtl: o,
              },
            } = this,
            a = ey(o, this.left, this.width);
          if (this.isHorizontal()) {
            let o = 0,
              s = kb(n, this.left + i, this.right - this.lineWidths[o]);
            for (const r of t)
              o !== r.row &&
                ((o = r.row),
                (s = kb(n, this.left + i, this.right - this.lineWidths[o]))),
                (r.top += this.top + e + i),
                (r.left = a.leftForLtr(a.x(s), r.width)),
                (s += r.width + i);
          } else {
            let o = 0,
              s = kb(
                n,
                this.top + e + i,
                this.bottom - this.columnSizes[o].height
              );
            for (const r of t)
              r.col !== o &&
                ((o = r.col),
                (s = kb(
                  n,
                  this.top + e + i,
                  this.bottom - this.columnSizes[o].height
                ))),
                (r.top = s),
                (r.left += this.left + i),
                (r.left = a.leftForLtr(a.x(r.left), r.width)),
                (s += r.height + i);
          }
        }
        isHorizontal() {
          return (
            "top" === this.options.position ||
            "bottom" === this.options.position
          );
        }
        draw() {
          if (this.options.display) {
            const e = this.ctx;
            $b(e, this), this._draw(), Jb(e);
          }
        }
        _draw() {
          const { options: e, columnSizes: t, lineWidths: n, ctx: i } = this,
            { align: o, labels: a } = e,
            s = Vb.color,
            r = ey(e.rtl, this.left, this.width),
            l = fx(a.font),
            { padding: c } = a,
            u = l.size,
            d = u / 2;
          let h;
          this.drawTitle(),
            (i.textAlign = r.textAlign("left")),
            (i.textBaseline = "middle"),
            (i.lineWidth = 0.5),
            (i.font = l.string);
          const { boxWidth: p, boxHeight: f, itemHeight: g } = HS(a, u),
            m = this.isHorizontal(),
            v = this._computeTitleHeight();
          (h = m
            ? {
                x: kb(o, this.left + c, this.right - n[0]),
                y: this.top + c + v,
                line: 0,
              }
            : {
                x: this.left + c,
                y: kb(o, this.top + v + c, this.bottom - t[0].height),
                line: 0,
              }),
            ty(this.ctx, e.textDirection);
          const b = g + c;
          this.legendItems.forEach((x, y) => {
            (i.strokeStyle = x.fontColor), (i.fillStyle = x.fontColor);
            const w = i.measureText(x.text).width,
              S = r.textAlign(x.textAlign || (x.textAlign = a.textAlign)),
              k = p + d + w;
            let A = h.x,
              C = h.y;
            r.setWidth(this.width),
              m
                ? y > 0 &&
                  A + k + c > this.right &&
                  ((C = h.y += b),
                  h.line++,
                  (A = h.x = kb(o, this.left + c, this.right - n[h.line])))
                : y > 0 &&
                  C + b > this.bottom &&
                  ((A = h.x = A + t[h.line].width + c),
                  h.line++,
                  (C = h.y =
                    kb(o, this.top + v + c, this.bottom - t[h.line].height)));
            if (
              ((function (e, t, n) {
                if (isNaN(p) || p <= 0 || isNaN(f) || f < 0) return;
                i.save();
                const o = Pv(n.lineWidth, 1);
                if (
                  ((i.fillStyle = Pv(n.fillStyle, s)),
                  (i.lineCap = Pv(n.lineCap, "butt")),
                  (i.lineDashOffset = Pv(n.lineDashOffset, 0)),
                  (i.lineJoin = Pv(n.lineJoin, "miter")),
                  (i.lineWidth = o),
                  (i.strokeStyle = Pv(n.strokeStyle, s)),
                  i.setLineDash(Pv(n.lineDash, [])),
                  a.usePointStyle)
                ) {
                  const s = {
                      radius: (f * Math.SQRT2) / 2,
                      pointStyle: n.pointStyle,
                      rotation: n.rotation,
                      borderWidth: o,
                    },
                    l = r.xPlus(e, p / 2);
                  Zb(i, s, l, t + d, a.pointStyleWidth && p);
                } else {
                  const a = t + Math.max((u - f) / 2, 0),
                    s = r.leftForLtr(e, p),
                    l = hx(n.borderRadius);
                  i.beginPath(),
                    Object.values(l).some((e) => 0 !== e)
                      ? ax(i, { x: s, y: a, w: p, h: f, radius: l })
                      : i.rect(s, a, p, f),
                    i.fill(),
                    0 !== o && i.stroke();
                }
                i.restore();
              })(r.x(A), C, x),
              (A = ((e, t, n, i) =>
                e === (i ? "left" : "right")
                  ? n
                  : "center" === e
                  ? (t + n) / 2
                  : t)(S, A + p + d, m ? A + k : this.right, e.rtl)),
              (function (e, t, n) {
                ox(i, n.text, e, t + g / 2, l, {
                  strikethrough: n.hidden,
                  textAlign: r.textAlign(n.textAlign),
                });
              })(r.x(A), C, x),
              m)
            )
              h.x += k + c;
            else if ("string" !== typeof x.text) {
              const e = l.lineHeight;
              h.y += VS(x, e) + c;
            } else h.y += b;
          }),
            ny(this.ctx, e.textDirection);
        }
        drawTitle() {
          const e = this.options,
            t = e.title,
            n = fx(t.font),
            i = px(t.padding);
          if (!t.display) return;
          const o = ey(e.rtl, this.left, this.width),
            a = this.ctx,
            s = t.position,
            r = n.size / 2,
            l = i.top + r;
          let c,
            u = this.left,
            d = this.width;
          if (this.isHorizontal())
            (d = Math.max(...this.lineWidths)),
              (c = this.top + l),
              (u = kb(e.align, u, this.right - d));
          else {
            const t = this.columnSizes.reduce(
              (e, t) => Math.max(e, t.height),
              0
            );
            c =
              l +
              kb(
                e.align,
                this.top,
                this.bottom - t - e.labels.padding - this._computeTitleHeight()
              );
          }
          const h = kb(s, u, u + d);
          (a.textAlign = o.textAlign(Sb(s))),
            (a.textBaseline = "middle"),
            (a.strokeStyle = t.color),
            (a.fillStyle = t.color),
            (a.font = n.string),
            ox(a, t.text, h, c, n);
        }
        _computeTitleHeight() {
          const e = this.options.title,
            t = fx(e.font),
            n = px(e.padding);
          return e.display ? t.lineHeight + n.height : 0;
        }
        _getLegendItemAt(e, t) {
          let n, i, o;
          if (pb(e, this.left, this.right) && pb(t, this.top, this.bottom))
            for (o = this.legendHitBoxes, n = 0; n < o.length; ++n)
              if (
                ((i = o[n]),
                pb(e, i.left, i.left + i.width) &&
                  pb(t, i.top, i.top + i.height))
              )
                return this.legendItems[n];
          return null;
        }
        handleEvent(e) {
          const t = this.options;
          if (
            !(function (e, t) {
              if (
                ("mousemove" === e || "mouseout" === e) &&
                (t.onHover || t.onLeave)
              )
                return !0;
              if (t.onClick && ("click" === e || "mouseup" === e)) return !0;
              return !1;
            })(e.type, t)
          )
            return;
          const n = this._getLegendItemAt(e.x, e.y);
          if ("mousemove" === e.type || "mouseout" === e.type) {
            const a = this._hoveredItem,
              s =
                ((o = n),
                null !== (i = a) &&
                  null !== o &&
                  i.datasetIndex === o.datasetIndex &&
                  i.index === o.index);
            a && !s && Lv(t.onLeave, [e, a, this], this),
              (this._hoveredItem = n),
              n && !s && Lv(t.onHover, [e, n, this], this);
          } else n && Lv(t.onClick, [e, n, this], this);
          var i, o;
        }
      }
      function VS(e, t) {
        return t * (e.text ? e.text.length : 0);
      }
      var US = {
        id: "legend",
        _element: GS,
        start(e, t, n) {
          const i = (e.legend = new GS({ ctx: e.ctx, options: n, chart: e }));
          hw.configure(e, i, n), hw.addBox(e, i);
        },
        stop(e) {
          hw.removeBox(e, e.legend), delete e.legend;
        },
        beforeUpdate(e, t, n) {
          const i = e.legend;
          hw.configure(e, i, n), (i.options = n);
        },
        afterUpdate(e) {
          const t = e.legend;
          t.buildLabels(), t.adjustHitBoxes();
        },
        afterEvent(e, t) {
          t.replay || e.legend.handleEvent(t.event);
        },
        defaults: {
          display: !0,
          position: "top",
          align: "center",
          fullSize: !0,
          reverse: !1,
          weight: 1e3,
          onClick(e, t, n) {
            const i = t.datasetIndex,
              o = n.chart;
            o.isDatasetVisible(i)
              ? (o.hide(i), (t.hidden = !0))
              : (o.show(i), (t.hidden = !1));
          },
          onHover: null,
          onLeave: null,
          labels: {
            color: (e) => e.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels(e) {
              const t = e.data.datasets,
                {
                  labels: {
                    usePointStyle: n,
                    pointStyle: i,
                    textAlign: o,
                    color: a,
                    useBorderRadius: s,
                    borderRadius: r,
                  },
                } = e.legend.options;
              return e._getSortedDatasetMetas().map((e) => {
                const l = e.controller.getStyle(n ? 0 : void 0),
                  c = px(l.borderWidth);
                return {
                  text: t[e.index].label,
                  fillStyle: l.backgroundColor,
                  fontColor: a,
                  hidden: !e.visible,
                  lineCap: l.borderCapStyle,
                  lineDash: l.borderDash,
                  lineDashOffset: l.borderDashOffset,
                  lineJoin: l.borderJoinStyle,
                  lineWidth: (c.width + c.height) / 4,
                  strokeStyle: l.borderColor,
                  pointStyle: i || l.pointStyle,
                  rotation: l.rotation,
                  textAlign: o || l.textAlign,
                  borderRadius: s && (r || l.borderRadius),
                  datasetIndex: e.index,
                };
              }, this);
            },
          },
          title: {
            color: (e) => e.chart.options.color,
            display: !1,
            position: "center",
            text: "",
          },
        },
        descriptors: {
          _scriptable: (e) => !e.startsWith("on"),
          labels: {
            _scriptable: (e) =>
              !["generateLabels", "filter", "sort"].includes(e),
          },
        },
      };
      class YS extends Tw {
        constructor(e) {
          super(),
            (this.chart = e.chart),
            (this.options = e.options),
            (this.ctx = e.ctx),
            (this._padding = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(e, t) {
          const n = this.options;
          if (((this.left = 0), (this.top = 0), !n.display))
            return void (this.width =
              this.height =
              this.right =
              this.bottom =
                0);
          (this.width = this.right = e), (this.height = this.bottom = t);
          const i = kv(n.text) ? n.text.length : 1;
          this._padding = px(n.padding);
          const o = i * fx(n.font).lineHeight + this._padding.height;
          this.isHorizontal() ? (this.height = o) : (this.width = o);
        }
        isHorizontal() {
          const e = this.options.position;
          return "top" === e || "bottom" === e;
        }
        _drawArgs(e) {
          const { top: t, left: n, bottom: i, right: o, options: a } = this,
            s = a.align;
          let r,
            l,
            c,
            u = 0;
          return (
            this.isHorizontal()
              ? ((l = kb(s, n, o)), (c = t + e), (r = o - n))
              : ("left" === a.position
                  ? ((l = n + e), (c = kb(s, i, t)), (u = -0.5 * Vv))
                  : ((l = o - e), (c = kb(s, t, i)), (u = 0.5 * Vv)),
                (r = i - t)),
            { titleX: l, titleY: c, maxWidth: r, rotation: u }
          );
        }
        draw() {
          const e = this.ctx,
            t = this.options;
          if (!t.display) return;
          const n = fx(t.font),
            i = n.lineHeight / 2 + this._padding.top,
            {
              titleX: o,
              titleY: a,
              maxWidth: s,
              rotation: r,
            } = this._drawArgs(i);
          ox(e, t.text, 0, 0, n, {
            color: t.color,
            maxWidth: s,
            rotation: r,
            textAlign: Sb(t.align),
            textBaseline: "middle",
            translation: [o, a],
          });
        }
      }
      var XS = {
        id: "title",
        _element: YS,
        start(e, t, n) {
          !(function (e, t) {
            const n = new YS({ ctx: e.ctx, options: t, chart: e });
            hw.configure(e, n, t), hw.addBox(e, n), (e.titleBlock = n);
          })(e, n);
        },
        stop(e) {
          const t = e.titleBlock;
          hw.removeBox(e, t), delete e.titleBlock;
        },
        beforeUpdate(e, t, n) {
          const i = e.titleBlock;
          hw.configure(e, i, n), (i.options = n);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "bold" },
          fullSize: !0,
          padding: 10,
          position: "top",
          text: "",
          weight: 2e3,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      new WeakMap();
      const KS = {
        average(e) {
          if (!e.length) return !1;
          let t,
            n,
            i = new Set(),
            o = 0,
            a = 0;
          for (t = 0, n = e.length; t < n; ++t) {
            const n = e[t].element;
            if (n && n.hasValue()) {
              const e = n.tooltipPosition();
              i.add(e.x), (o += e.y), ++a;
            }
          }
          if (0 === a || 0 === i.size) return !1;
          return { x: [...i].reduce((e, t) => e + t) / i.size, y: o / a };
        },
        nearest(e, t) {
          if (!e.length) return !1;
          let n,
            i,
            o,
            a = t.x,
            s = t.y,
            r = Number.POSITIVE_INFINITY;
          for (n = 0, i = e.length; n < i; ++n) {
            const i = e[n].element;
            if (i && i.hasValue()) {
              const e = lb(t, i.getCenterPoint());
              e < r && ((r = e), (o = i));
            }
          }
          if (o) {
            const e = o.tooltipPosition();
            (a = e.x), (s = e.y);
          }
          return { x: a, y: s };
        },
      };
      function qS(e, t) {
        return t && (kv(t) ? Array.prototype.push.apply(e, t) : e.push(t)), e;
      }
      function ZS(e) {
        return ("string" === typeof e || e instanceof String) &&
          e.indexOf("\n") > -1
          ? e.split("\n")
          : e;
      }
      function QS(e, t) {
        const { element: n, datasetIndex: i, index: o } = t,
          a = e.getDatasetMeta(i).controller,
          { label: s, value: r } = a.getLabelAndValue(o);
        return {
          chart: e,
          label: s,
          parsed: a.getParsed(o),
          raw: e.data.datasets[i].data[o],
          formattedValue: r,
          dataset: a.getDataset(),
          dataIndex: o,
          datasetIndex: i,
          element: n,
        };
      }
      function $S(e, t) {
        const n = e.chart.ctx,
          { body: i, footer: o, title: a } = e,
          { boxWidth: s, boxHeight: r } = t,
          l = fx(t.bodyFont),
          c = fx(t.titleFont),
          u = fx(t.footerFont),
          d = a.length,
          h = o.length,
          p = i.length,
          f = px(t.padding);
        let g = f.height,
          m = 0,
          v = i.reduce(
            (e, t) => e + t.before.length + t.lines.length + t.after.length,
            0
          );
        if (
          ((v += e.beforeBody.length + e.afterBody.length),
          d &&
            (g +=
              d * c.lineHeight +
              (d - 1) * t.titleSpacing +
              t.titleMarginBottom),
          v)
        ) {
          g +=
            p * (t.displayColors ? Math.max(r, l.lineHeight) : l.lineHeight) +
            (v - p) * l.lineHeight +
            (v - 1) * t.bodySpacing;
        }
        h &&
          (g +=
            t.footerMarginTop + h * u.lineHeight + (h - 1) * t.footerSpacing);
        let b = 0;
        const x = function (e) {
          m = Math.max(m, n.measureText(e).width + b);
        };
        return (
          n.save(),
          (n.font = c.string),
          Tv(e.title, x),
          (n.font = l.string),
          Tv(e.beforeBody.concat(e.afterBody), x),
          (b = t.displayColors ? s + 2 + t.boxPadding : 0),
          Tv(i, (e) => {
            Tv(e.before, x), Tv(e.lines, x), Tv(e.after, x);
          }),
          (b = 0),
          (n.font = u.string),
          Tv(e.footer, x),
          n.restore(),
          (m += f.width),
          { width: m, height: g }
        );
      }
      function JS(e, t, n, i) {
        const { x: o, width: a } = n,
          {
            width: s,
            chartArea: { left: r, right: l },
          } = e;
        let c = "center";
        return (
          "center" === i
            ? (c = o <= (r + l) / 2 ? "left" : "right")
            : o <= a / 2
            ? (c = "left")
            : o >= s - a / 2 && (c = "right"),
          (function (e, t, n, i) {
            const { x: o, width: a } = i,
              s = n.caretSize + n.caretPadding;
            return (
              ("left" === e && o + a + s > t.width) ||
              ("right" === e && o - a - s < 0) ||
              void 0
            );
          })(c, e, t, n) && (c = "center"),
          c
        );
      }
      function ek(e, t, n) {
        const i =
          n.yAlign ||
          t.yAlign ||
          (function (e, t) {
            const { y: n, height: i } = t;
            return n < i / 2
              ? "top"
              : n > e.height - i / 2
              ? "bottom"
              : "center";
          })(e, n);
        return { xAlign: n.xAlign || t.xAlign || JS(e, t, n, i), yAlign: i };
      }
      function tk(e, t, n, i) {
        const { caretSize: o, caretPadding: a, cornerRadius: s } = e,
          { xAlign: r, yAlign: l } = n,
          c = o + a,
          { topLeft: u, topRight: d, bottomLeft: h, bottomRight: p } = hx(s);
        let f = (function (e, t) {
          let { x: n, width: i } = e;
          return "right" === t ? (n -= i) : "center" === t && (n -= i / 2), n;
        })(t, r);
        const g = (function (e, t, n) {
          let { y: i, height: o } = e;
          return (
            "top" === t ? (i += n) : (i -= "bottom" === t ? o + n : o / 2), i
          );
        })(t, l, c);
        return (
          "center" === l
            ? "left" === r
              ? (f += c)
              : "right" === r && (f -= c)
            : "left" === r
            ? (f -= Math.max(u, h) + o)
            : "right" === r && (f += Math.max(d, p) + o),
          { x: hb(f, 0, i.width - t.width), y: hb(g, 0, i.height - t.height) }
        );
      }
      function nk(e, t, n) {
        const i = px(n.padding);
        return "center" === t
          ? e.x + e.width / 2
          : "right" === t
          ? e.x + e.width - i.right
          : e.x + i.left;
      }
      function ik(e) {
        return qS([], ZS(e));
      }
      function ok(e, t) {
        const n =
          t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;
        return n ? e.override(n) : e;
      }
      const ak = {
        beforeTitle: yv,
        title(e) {
          if (e.length > 0) {
            const t = e[0],
              n = t.chart.data.labels,
              i = n ? n.length : 0;
            if (this && this.options && "dataset" === this.options.mode)
              return t.dataset.label || "";
            if (t.label) return t.label;
            if (i > 0 && t.dataIndex < i) return n[t.dataIndex];
          }
          return "";
        },
        afterTitle: yv,
        beforeBody: yv,
        beforeLabel: yv,
        label(e) {
          if (this && this.options && "dataset" === this.options.mode)
            return e.label + ": " + e.formattedValue || e.formattedValue;
          let t = e.dataset.label || "";
          t && (t += ": ");
          const n = e.formattedValue;
          return Sv(n) || (t += n), t;
        },
        labelColor(e) {
          const t = e.chart
            .getDatasetMeta(e.datasetIndex)
            .controller.getStyle(e.dataIndex);
          return {
            borderColor: t.borderColor,
            backgroundColor: t.backgroundColor,
            borderWidth: t.borderWidth,
            borderDash: t.borderDash,
            borderDashOffset: t.borderDashOffset,
            borderRadius: 0,
          };
        },
        labelTextColor() {
          return this.options.bodyColor;
        },
        labelPointStyle(e) {
          const t = e.chart
            .getDatasetMeta(e.datasetIndex)
            .controller.getStyle(e.dataIndex);
          return { pointStyle: t.pointStyle, rotation: t.rotation };
        },
        afterLabel: yv,
        afterBody: yv,
        beforeFooter: yv,
        footer: yv,
        afterFooter: yv,
      };
      function sk(e, t, n, i) {
        const o = e[t].call(n, i);
        return "undefined" === typeof o ? ak[t].call(n, i) : o;
      }
      class rk extends Tw {
        constructor(e) {
          super(),
            (this.opacity = 0),
            (this._active = []),
            (this._eventPosition = void 0),
            (this._size = void 0),
            (this._cachedAnimations = void 0),
            (this._tooltipItems = []),
            (this.$animations = void 0),
            (this.$context = void 0),
            (this.chart = e.chart),
            (this.options = e.options),
            (this.dataPoints = void 0),
            (this.title = void 0),
            (this.beforeBody = void 0),
            (this.body = void 0),
            (this.afterBody = void 0),
            (this.footer = void 0),
            (this.xAlign = void 0),
            (this.yAlign = void 0),
            (this.x = void 0),
            (this.y = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this.caretX = void 0),
            (this.caretY = void 0),
            (this.labelColors = void 0),
            (this.labelPointStyles = void 0),
            (this.labelTextColors = void 0);
        }
        initialize(e) {
          (this.options = e),
            (this._cachedAnimations = void 0),
            (this.$context = void 0);
        }
        _resolveAnimations() {
          const e = this._cachedAnimations;
          if (e) return e;
          const t = this.chart,
            n = this.options.setContext(this.getContext()),
            i = n.enabled && t.options.animation && n.animations,
            o = new gy(this.chart, i);
          return i._cacheable && (this._cachedAnimations = Object.freeze(o)), o;
        }
        getContext() {
          return (
            this.$context ||
            (this.$context =
              ((e = this.chart.getContext()),
              (t = this),
              (n = this._tooltipItems),
              mx(e, { tooltip: t, tooltipItems: n, type: "tooltip" })))
          );
          var e, t, n;
        }
        getTitle(e, t) {
          const { callbacks: n } = t,
            i = sk(n, "beforeTitle", this, e),
            o = sk(n, "title", this, e),
            a = sk(n, "afterTitle", this, e);
          let s = [];
          return (s = qS(s, ZS(i))), (s = qS(s, ZS(o))), (s = qS(s, ZS(a))), s;
        }
        getBeforeBody(e, t) {
          return ik(sk(t.callbacks, "beforeBody", this, e));
        }
        getBody(e, t) {
          const { callbacks: n } = t,
            i = [];
          return (
            Tv(e, (e) => {
              const t = { before: [], lines: [], after: [] },
                o = ok(n, e);
              qS(t.before, ZS(sk(o, "beforeLabel", this, e))),
                qS(t.lines, sk(o, "label", this, e)),
                qS(t.after, ZS(sk(o, "afterLabel", this, e))),
                i.push(t);
            }),
            i
          );
        }
        getAfterBody(e, t) {
          return ik(sk(t.callbacks, "afterBody", this, e));
        }
        getFooter(e, t) {
          const { callbacks: n } = t,
            i = sk(n, "beforeFooter", this, e),
            o = sk(n, "footer", this, e),
            a = sk(n, "afterFooter", this, e);
          let s = [];
          return (s = qS(s, ZS(i))), (s = qS(s, ZS(o))), (s = qS(s, ZS(a))), s;
        }
        _createItems(e) {
          const t = this._active,
            n = this.chart.data,
            i = [],
            o = [],
            a = [];
          let s,
            r,
            l = [];
          for (s = 0, r = t.length; s < r; ++s) l.push(QS(this.chart, t[s]));
          return (
            e.filter && (l = l.filter((t, i, o) => e.filter(t, i, o, n))),
            e.itemSort && (l = l.sort((t, i) => e.itemSort(t, i, n))),
            Tv(l, (t) => {
              const n = ok(e.callbacks, t);
              i.push(sk(n, "labelColor", this, t)),
                o.push(sk(n, "labelPointStyle", this, t)),
                a.push(sk(n, "labelTextColor", this, t));
            }),
            (this.labelColors = i),
            (this.labelPointStyles = o),
            (this.labelTextColors = a),
            (this.dataPoints = l),
            l
          );
        }
        update(e, t) {
          const n = this.options.setContext(this.getContext()),
            i = this._active;
          let o,
            a = [];
          if (i.length) {
            const e = KS[n.position].call(this, i, this._eventPosition);
            (a = this._createItems(n)),
              (this.title = this.getTitle(a, n)),
              (this.beforeBody = this.getBeforeBody(a, n)),
              (this.body = this.getBody(a, n)),
              (this.afterBody = this.getAfterBody(a, n)),
              (this.footer = this.getFooter(a, n));
            const t = (this._size = $S(this, n)),
              s = Object.assign({}, e, t),
              r = ek(this.chart, n, s),
              l = tk(n, s, r, this.chart);
            (this.xAlign = r.xAlign),
              (this.yAlign = r.yAlign),
              (o = {
                opacity: 1,
                x: l.x,
                y: l.y,
                width: t.width,
                height: t.height,
                caretX: e.x,
                caretY: e.y,
              });
          } else 0 !== this.opacity && (o = { opacity: 0 });
          (this._tooltipItems = a),
            (this.$context = void 0),
            o && this._resolveAnimations().update(this, o),
            e &&
              n.external &&
              n.external.call(this, {
                chart: this.chart,
                tooltip: this,
                replay: t,
              });
        }
        drawCaret(e, t, n, i) {
          const o = this.getCaretPosition(e, n, i);
          t.lineTo(o.x1, o.y1), t.lineTo(o.x2, o.y2), t.lineTo(o.x3, o.y3);
        }
        getCaretPosition(e, t, n) {
          const { xAlign: i, yAlign: o } = this,
            { caretSize: a, cornerRadius: s } = n,
            { topLeft: r, topRight: l, bottomLeft: c, bottomRight: u } = hx(s),
            { x: d, y: h } = e,
            { width: p, height: f } = t;
          let g, m, v, b, x, y;
          return (
            "center" === o
              ? ((x = h + f / 2),
                "left" === i
                  ? ((g = d), (m = g - a), (b = x + a), (y = x - a))
                  : ((g = d + p), (m = g + a), (b = x - a), (y = x + a)),
                (v = g))
              : ((m =
                  "left" === i
                    ? d + Math.max(r, c) + a
                    : "right" === i
                    ? d + p - Math.max(l, u) - a
                    : this.caretX),
                "top" === o
                  ? ((b = h), (x = b - a), (g = m - a), (v = m + a))
                  : ((b = h + f), (x = b + a), (g = m + a), (v = m - a)),
                (y = b)),
            { x1: g, x2: m, x3: v, y1: b, y2: x, y3: y }
          );
        }
        drawTitle(e, t, n) {
          const i = this.title,
            o = i.length;
          let a, s, r;
          if (o) {
            const l = ey(n.rtl, this.x, this.width);
            for (
              e.x = nk(this, n.titleAlign, n),
                t.textAlign = l.textAlign(n.titleAlign),
                t.textBaseline = "middle",
                a = fx(n.titleFont),
                s = n.titleSpacing,
                t.fillStyle = n.titleColor,
                t.font = a.string,
                r = 0;
              r < o;
              ++r
            )
              t.fillText(i[r], l.x(e.x), e.y + a.lineHeight / 2),
                (e.y += a.lineHeight + s),
                r + 1 === o && (e.y += n.titleMarginBottom - s);
          }
        }
        _drawColorBox(e, t, n, i, o) {
          const a = this.labelColors[n],
            s = this.labelPointStyles[n],
            { boxHeight: r, boxWidth: l } = o,
            c = fx(o.bodyFont),
            u = nk(this, "left", o),
            d = i.x(u),
            h = r < c.lineHeight ? (c.lineHeight - r) / 2 : 0,
            p = t.y + h;
          if (o.usePointStyle) {
            const t = {
                radius: Math.min(l, r) / 2,
                pointStyle: s.pointStyle,
                rotation: s.rotation,
                borderWidth: 1,
              },
              n = i.leftForLtr(d, l) + l / 2,
              c = p + r / 2;
            (e.strokeStyle = o.multiKeyBackground),
              (e.fillStyle = o.multiKeyBackground),
              qb(e, t, n, c),
              (e.strokeStyle = a.borderColor),
              (e.fillStyle = a.backgroundColor),
              qb(e, t, n, c);
          } else {
            (e.lineWidth = Av(a.borderWidth)
              ? Math.max(...Object.values(a.borderWidth))
              : a.borderWidth || 1),
              (e.strokeStyle = a.borderColor),
              e.setLineDash(a.borderDash || []),
              (e.lineDashOffset = a.borderDashOffset || 0);
            const t = i.leftForLtr(d, l),
              n = i.leftForLtr(i.xPlus(d, 1), l - 2),
              s = hx(a.borderRadius);
            Object.values(s).some((e) => 0 !== e)
              ? (e.beginPath(),
                (e.fillStyle = o.multiKeyBackground),
                ax(e, { x: t, y: p, w: l, h: r, radius: s }),
                e.fill(),
                e.stroke(),
                (e.fillStyle = a.backgroundColor),
                e.beginPath(),
                ax(e, { x: n, y: p + 1, w: l - 2, h: r - 2, radius: s }),
                e.fill())
              : ((e.fillStyle = o.multiKeyBackground),
                e.fillRect(t, p, l, r),
                e.strokeRect(t, p, l, r),
                (e.fillStyle = a.backgroundColor),
                e.fillRect(n, p + 1, l - 2, r - 2));
          }
          e.fillStyle = this.labelTextColors[n];
        }
        drawBody(e, t, n) {
          const { body: i } = this,
            {
              bodySpacing: o,
              bodyAlign: a,
              displayColors: s,
              boxHeight: r,
              boxWidth: l,
              boxPadding: c,
            } = n,
            u = fx(n.bodyFont);
          let d = u.lineHeight,
            h = 0;
          const p = ey(n.rtl, this.x, this.width),
            f = function (n) {
              t.fillText(n, p.x(e.x + h), e.y + d / 2), (e.y += d + o);
            },
            g = p.textAlign(a);
          let m, v, b, x, y, w, S;
          for (
            t.textAlign = a,
              t.textBaseline = "middle",
              t.font = u.string,
              e.x = nk(this, g, n),
              t.fillStyle = n.bodyColor,
              Tv(this.beforeBody, f),
              h =
                s && "right" !== g
                  ? "center" === a
                    ? l / 2 + c
                    : l + 2 + c
                  : 0,
              x = 0,
              w = i.length;
            x < w;
            ++x
          ) {
            for (
              m = i[x],
                v = this.labelTextColors[x],
                t.fillStyle = v,
                Tv(m.before, f),
                b = m.lines,
                s &&
                  b.length &&
                  (this._drawColorBox(t, e, x, p, n),
                  (d = Math.max(u.lineHeight, r))),
                y = 0,
                S = b.length;
              y < S;
              ++y
            )
              f(b[y]), (d = u.lineHeight);
            Tv(m.after, f);
          }
          (h = 0), (d = u.lineHeight), Tv(this.afterBody, f), (e.y -= o);
        }
        drawFooter(e, t, n) {
          const i = this.footer,
            o = i.length;
          let a, s;
          if (o) {
            const r = ey(n.rtl, this.x, this.width);
            for (
              e.x = nk(this, n.footerAlign, n),
                e.y += n.footerMarginTop,
                t.textAlign = r.textAlign(n.footerAlign),
                t.textBaseline = "middle",
                a = fx(n.footerFont),
                t.fillStyle = n.footerColor,
                t.font = a.string,
                s = 0;
              s < o;
              ++s
            )
              t.fillText(i[s], r.x(e.x), e.y + a.lineHeight / 2),
                (e.y += a.lineHeight + n.footerSpacing);
          }
        }
        drawBackground(e, t, n, i) {
          const { xAlign: o, yAlign: a } = this,
            { x: s, y: r } = e,
            { width: l, height: c } = n,
            {
              topLeft: u,
              topRight: d,
              bottomLeft: h,
              bottomRight: p,
            } = hx(i.cornerRadius);
          (t.fillStyle = i.backgroundColor),
            (t.strokeStyle = i.borderColor),
            (t.lineWidth = i.borderWidth),
            t.beginPath(),
            t.moveTo(s + u, r),
            "top" === a && this.drawCaret(e, t, n, i),
            t.lineTo(s + l - d, r),
            t.quadraticCurveTo(s + l, r, s + l, r + d),
            "center" === a && "right" === o && this.drawCaret(e, t, n, i),
            t.lineTo(s + l, r + c - p),
            t.quadraticCurveTo(s + l, r + c, s + l - p, r + c),
            "bottom" === a && this.drawCaret(e, t, n, i),
            t.lineTo(s + h, r + c),
            t.quadraticCurveTo(s, r + c, s, r + c - h),
            "center" === a && "left" === o && this.drawCaret(e, t, n, i),
            t.lineTo(s, r + u),
            t.quadraticCurveTo(s, r, s + u, r),
            t.closePath(),
            t.fill(),
            i.borderWidth > 0 && t.stroke();
        }
        _updateAnimationTarget(e) {
          const t = this.chart,
            n = this.$animations,
            i = n && n.x,
            o = n && n.y;
          if (i || o) {
            const n = KS[e.position].call(
              this,
              this._active,
              this._eventPosition
            );
            if (!n) return;
            const a = (this._size = $S(this, e)),
              s = Object.assign({}, n, this._size),
              r = ek(t, e, s),
              l = tk(e, s, r, t);
            (i._to === l.x && o._to === l.y) ||
              ((this.xAlign = r.xAlign),
              (this.yAlign = r.yAlign),
              (this.width = a.width),
              (this.height = a.height),
              (this.caretX = n.x),
              (this.caretY = n.y),
              this._resolveAnimations().update(this, l));
          }
        }
        _willRender() {
          return !!this.opacity;
        }
        draw(e) {
          const t = this.options.setContext(this.getContext());
          let n = this.opacity;
          if (!n) return;
          this._updateAnimationTarget(t);
          const i = { width: this.width, height: this.height },
            o = { x: this.x, y: this.y };
          n = Math.abs(n) < 0.001 ? 0 : n;
          const a = px(t.padding),
            s =
              this.title.length ||
              this.beforeBody.length ||
              this.body.length ||
              this.afterBody.length ||
              this.footer.length;
          t.enabled &&
            s &&
            (e.save(),
            (e.globalAlpha = n),
            this.drawBackground(o, e, i, t),
            ty(e, t.textDirection),
            (o.y += a.top),
            this.drawTitle(o, e, t),
            this.drawBody(o, e, t),
            this.drawFooter(o, e, t),
            ny(e, t.textDirection),
            e.restore());
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(e, t) {
          const n = this._active,
            i = e.map((e) => {
              let { datasetIndex: t, index: n } = e;
              const i = this.chart.getDatasetMeta(t);
              if (!i) throw new Error("Cannot find a dataset at index " + t);
              return { datasetIndex: t, element: i.data[n], index: n };
            }),
            o = !Ov(n, i),
            a = this._positionChanged(i, t);
          (o || a) &&
            ((this._active = i),
            (this._eventPosition = t),
            (this._ignoreReplayEvents = !0),
            this.update(!0));
        }
        handleEvent(e, t) {
          let n =
            !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          if (t && this._ignoreReplayEvents) return !1;
          this._ignoreReplayEvents = !1;
          const i = this.options,
            o = this._active || [],
            a = this._getActiveElements(e, o, t, n),
            s = this._positionChanged(a, e),
            r = t || !Ov(a, o) || s;
          return (
            r &&
              ((this._active = a),
              (i.enabled || i.external) &&
                ((this._eventPosition = { x: e.x, y: e.y }),
                this.update(!0, t))),
            r
          );
        }
        _getActiveElements(e, t, n, i) {
          const o = this.options;
          if ("mouseout" === e.type) return [];
          if (!i)
            return t.filter(
              (e) =>
                this.chart.data.datasets[e.datasetIndex] &&
                void 0 !==
                  this.chart
                    .getDatasetMeta(e.datasetIndex)
                    .controller.getParsed(e.index)
            );
          const a = this.chart.getElementsAtEventForMode(e, o.mode, o, n);
          return o.reverse && a.reverse(), a;
        }
        _positionChanged(e, t) {
          const { caretX: n, caretY: i, options: o } = this,
            a = KS[o.position].call(this, e, t);
          return !1 !== a && (n !== a.x || i !== a.y);
        }
      }
      _(rk, "positioners", KS);
      var lk = {
        id: "tooltip",
        _element: rk,
        positioners: KS,
        afterInit(e, t, n) {
          n && (e.tooltip = new rk({ chart: e, options: n }));
        },
        beforeUpdate(e, t, n) {
          e.tooltip && e.tooltip.initialize(n);
        },
        reset(e, t, n) {
          e.tooltip && e.tooltip.initialize(n);
        },
        afterDraw(e) {
          const t = e.tooltip;
          if (t && t._willRender()) {
            const n = { tooltip: t };
            if (
              !1 ===
              e.notifyPlugins("beforeTooltipDraw", { ...n, cancelable: !0 })
            )
              return;
            t.draw(e.ctx), e.notifyPlugins("afterTooltipDraw", n);
          }
        },
        afterEvent(e, t) {
          if (e.tooltip) {
            const n = t.replay;
            e.tooltip.handleEvent(t.event, n, t.inChartArea) &&
              (t.changed = !0);
          }
        },
        defaults: {
          enabled: !0,
          external: null,
          position: "average",
          backgroundColor: "rgba(0,0,0,0.8)",
          titleColor: "#fff",
          titleFont: { weight: "bold" },
          titleSpacing: 2,
          titleMarginBottom: 6,
          titleAlign: "left",
          bodyColor: "#fff",
          bodySpacing: 2,
          bodyFont: {},
          bodyAlign: "left",
          footerColor: "#fff",
          footerSpacing: 2,
          footerMarginTop: 6,
          footerFont: { weight: "bold" },
          footerAlign: "left",
          padding: 6,
          caretPadding: 2,
          caretSize: 5,
          cornerRadius: 6,
          boxHeight: (e, t) => t.bodyFont.size,
          boxWidth: (e, t) => t.bodyFont.size,
          multiKeyBackground: "#fff",
          displayColors: !0,
          boxPadding: 0,
          borderColor: "rgba(0,0,0,0)",
          borderWidth: 0,
          animation: { duration: 400, easing: "easeOutQuart" },
          animations: {
            numbers: {
              type: "number",
              properties: ["x", "y", "width", "height", "caretX", "caretY"],
            },
            opacity: { easing: "linear", duration: 200 },
          },
          callbacks: ak,
        },
        defaultRoutes: {
          bodyFont: "font",
          footerFont: "font",
          titleFont: "font",
        },
        descriptors: {
          _scriptable: (e) =>
            "filter" !== e && "itemSort" !== e && "external" !== e,
          _indexable: !1,
          callbacks: { _scriptable: !1, _indexable: !1 },
          animation: { _fallback: !1 },
          animations: { _fallback: "animation" },
        },
        additionalOptionScopes: ["interaction"],
      };
      function ck(e, t, n, i) {
        const o = e.indexOf(t);
        if (-1 === o)
          return ((e, t, n, i) => (
            "string" === typeof t
              ? ((n = e.push(t) - 1), i.unshift({ index: n, label: t }))
              : isNaN(t) && (n = null),
            n
          ))(e, t, n, i);
        return o !== e.lastIndexOf(t) ? n : o;
      }
      function uk(e) {
        const t = this.getLabels();
        return e >= 0 && e < t.length ? t[e] : e;
      }
      class dk extends Fw {
        constructor(e) {
          super(e),
            (this._startValue = void 0),
            (this._valueRange = 0),
            (this._addedLabels = []);
        }
        init(e) {
          const t = this._addedLabels;
          if (t.length) {
            const e = this.getLabels();
            for (const { index: n, label: i } of t)
              e[n] === i && e.splice(n, 1);
            this._addedLabels = [];
          }
          super.init(e);
        }
        parse(e, t) {
          if (Sv(e)) return null;
          const n = this.getLabels();
          return ((e, t) => (null === e ? null : hb(Math.round(e), 0, t)))(
            (t =
              isFinite(t) && n[t] === e
                ? t
                : ck(n, e, Pv(t, e), this._addedLabels)),
            n.length - 1
          );
        }
        determineDataLimits() {
          const { minDefined: e, maxDefined: t } = this.getUserBounds();
          let { min: n, max: i } = this.getMinMax(!0);
          "ticks" === this.options.bounds &&
            (e || (n = 0), t || (i = this.getLabels().length - 1)),
            (this.min = n),
            (this.max = i);
        }
        buildTicks() {
          const e = this.min,
            t = this.max,
            n = this.options.offset,
            i = [];
          let o = this.getLabels();
          (o = 0 === e && t === o.length - 1 ? o : o.slice(e, t + 1)),
            (this._valueRange = Math.max(o.length - (n ? 0 : 1), 1)),
            (this._startValue = this.min - (n ? 0.5 : 0));
          for (let a = e; a <= t; a++) i.push({ value: a });
          return i;
        }
        getLabelForValue(e) {
          return uk.call(this, e);
        }
        configure() {
          super.configure(),
            this.isHorizontal() || (this._reversePixels = !this._reversePixels);
        }
        getPixelForValue(e) {
          return (
            "number" !== typeof e && (e = this.parse(e)),
            null === e
              ? NaN
              : this.getPixelForDecimal(
                  (e - this._startValue) / this._valueRange
                )
          );
        }
        getPixelForTick(e) {
          const t = this.ticks;
          return e < 0 || e > t.length - 1
            ? null
            : this.getPixelForValue(t[e].value);
        }
        getValueForPixel(e) {
          return Math.round(
            this._startValue + this.getDecimalForPixel(e) * this._valueRange
          );
        }
        getBasePixel() {
          return this.bottom;
        }
      }
      function hk(e, t) {
        const n = [],
          {
            bounds: i,
            step: o,
            min: a,
            max: s,
            precision: r,
            count: l,
            maxTicks: c,
            maxDigits: u,
            includeBounds: d,
          } = e,
          h = o || 1,
          p = c - 1,
          { min: f, max: g } = t,
          m = !Sv(a),
          v = !Sv(s),
          b = !Sv(l),
          x = (g - f) / (u + 1);
        let y,
          w,
          S,
          k,
          A = tb((g - f) / p / h) * h;
        if (A < 1e-14 && !m && !v) return [{ value: f }, { value: g }];
        (k = Math.ceil(g / A) - Math.floor(f / A)),
          k > p && (A = tb((k * A) / p / h) * h),
          Sv(r) || ((y = Math.pow(10, r)), (A = Math.ceil(A * y) / y)),
          "ticks" === i
            ? ((w = Math.floor(f / A) * A), (S = Math.ceil(g / A) * A))
            : ((w = f), (S = g)),
          m &&
          v &&
          o &&
          (function (e, t) {
            const n = Math.round(e);
            return n - t <= e && n + t >= e;
          })((s - a) / o, A / 1e3)
            ? ((k = Math.round(Math.min((s - a) / A, c))),
              (A = (s - a) / k),
              (w = a),
              (S = s))
            : b
            ? ((w = m ? a : w), (S = v ? s : S), (k = l - 1), (A = (S - w) / k))
            : ((k = (S - w) / A),
              (k = eb(k, Math.round(k), A / 1e3)
                ? Math.round(k)
                : Math.ceil(k)));
        const C = Math.max(sb(A), sb(w));
        (y = Math.pow(10, Sv(r) ? C : r)),
          (w = Math.round(w * y) / y),
          (S = Math.round(S * y) / y);
        let M = 0;
        for (
          m &&
          (d && w !== a
            ? (n.push({ value: a }),
              w < a && M++,
              eb(Math.round((w + M * A) * y) / y, a, pk(a, x, e)) && M++)
            : w < a && M++);
          M < k;
          ++M
        ) {
          const e = Math.round((w + M * A) * y) / y;
          if (v && e > s) break;
          n.push({ value: e });
        }
        return (
          v && d && S !== s
            ? n.length && eb(n[n.length - 1].value, s, pk(s, x, e))
              ? (n[n.length - 1].value = s)
              : n.push({ value: s })
            : (v && S !== s) || n.push({ value: S }),
          n
        );
      }
      function pk(e, t, n) {
        let { horizontal: i, minRotation: o } = n;
        const a = ob(o),
          s = (i ? Math.sin(a) : Math.cos(a)) || 0.001,
          r = 0.75 * t * ("" + e).length;
        return Math.min(t / s, r);
      }
      _(dk, "id", "category"), _(dk, "defaults", { ticks: { callback: uk } });
      class fk extends Fw {
        constructor(e) {
          super(e),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._endValue = void 0),
            (this._valueRange = 0);
        }
        parse(e, t) {
          return Sv(e) ||
            (("number" === typeof e || e instanceof Number) && !isFinite(+e))
            ? null
            : +e;
        }
        handleTickRangeOptions() {
          const { beginAtZero: e } = this.options,
            { minDefined: t, maxDefined: n } = this.getUserBounds();
          let { min: i, max: o } = this;
          const a = (e) => (i = t ? i : e),
            s = (e) => (o = n ? o : e);
          if (e) {
            const e = Jv(i),
              t = Jv(o);
            e < 0 && t < 0 ? s(0) : e > 0 && t > 0 && a(0);
          }
          if (i === o) {
            let t = 0 === o ? 1 : Math.abs(0.05 * o);
            s(o + t), e || a(i - t);
          }
          (this.min = i), (this.max = o);
        }
        getTickLimit() {
          const e = this.options.ticks;
          let t,
            { maxTicksLimit: n, stepSize: i } = e;
          return (
            i
              ? ((t = Math.ceil(this.max / i) - Math.floor(this.min / i) + 1),
                t > 1e3 &&
                  (console.warn(
                    "scales."
                      .concat(this.id, ".ticks.stepSize: ")
                      .concat(i, " would result generating up to ")
                      .concat(t, " ticks. Limiting to 1000.")
                  ),
                  (t = 1e3)))
              : ((t = this.computeTickLimit()), (n = n || 11)),
            n && (t = Math.min(n, t)),
            t
          );
        }
        computeTickLimit() {
          return Number.POSITIVE_INFINITY;
        }
        buildTicks() {
          const e = this.options,
            t = e.ticks;
          let n = this.getTickLimit();
          n = Math.max(2, n);
          const i = hk(
            {
              maxTicks: n,
              bounds: e.bounds,
              min: e.min,
              max: e.max,
              precision: t.precision,
              step: t.stepSize,
              count: t.count,
              maxDigits: this._maxDigits(),
              horizontal: this.isHorizontal(),
              minRotation: t.minRotation || 0,
              includeBounds: !1 !== t.includeBounds,
            },
            this._range || this
          );
          return (
            "ticks" === e.bounds && ib(i, this, "value"),
            e.reverse
              ? (i.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            i
          );
        }
        configure() {
          const e = this.ticks;
          let t = this.min,
            n = this.max;
          if ((super.configure(), this.options.offset && e.length)) {
            const i = (n - t) / Math.max(e.length - 1, 1) / 2;
            (t -= i), (n += i);
          }
          (this._startValue = t),
            (this._endValue = n),
            (this._valueRange = n - t);
        }
        getLabelForValue(e) {
          return Db(e, this.chart.options.locale, this.options.ticks.format);
        }
      }
      class gk extends fk {
        determineDataLimits() {
          const { min: e, max: t } = this.getMinMax(!0);
          (this.min = Cv(e) ? e : 0),
            (this.max = Cv(t) ? t : 1),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          const e = this.isHorizontal(),
            t = e ? this.width : this.height,
            n = ob(this.options.ticks.minRotation),
            i = (e ? Math.sin(n) : Math.cos(n)) || 0.001,
            o = this._resolveTickFontOptions(0);
          return Math.ceil(t / Math.min(40, o.lineHeight / i));
        }
        getPixelForValue(e) {
          return null === e
            ? NaN
            : this.getPixelForDecimal(
                (e - this._startValue) / this._valueRange
              );
        }
        getValueForPixel(e) {
          return (
            this._startValue + this.getDecimalForPixel(e) * this._valueRange
          );
        }
      }
      _(gk, "id", "linear"),
        _(gk, "defaults", { ticks: { callback: jb.formatters.numeric } });
      const mk = (e) => Math.floor($v(e)),
        vk = (e, t) => Math.pow(10, mk(e) + t);
      function bk(e) {
        return 1 === e / Math.pow(10, mk(e));
      }
      function xk(e, t, n) {
        const i = Math.pow(10, n),
          o = Math.floor(e / i);
        return Math.ceil(t / i) - o;
      }
      function yk(e, t) {
        let { min: n, max: i } = t;
        n = Mv(e.min, n);
        const o = [],
          a = mk(n);
        let s = (function (e, t) {
            let n = mk(t - e);
            for (; xk(e, t, n) > 10; ) n++;
            for (; xk(e, t, n) < 10; ) n--;
            return Math.min(n, mk(e));
          })(n, i),
          r = s < 0 ? Math.pow(10, Math.abs(s)) : 1;
        const l = Math.pow(10, s),
          c = a > s ? Math.pow(10, a) : 0,
          u = Math.round((n - c) * r) / r,
          d = Math.floor((n - c) / l / 10) * l * 10;
        let h = Math.floor((u - d) / Math.pow(10, s)),
          p = Mv(e.min, Math.round((c + d + h * Math.pow(10, s)) * r) / r);
        for (; p < i; )
          o.push({ value: p, major: bk(p), significand: h }),
            h >= 10 ? (h = h < 15 ? 15 : 20) : h++,
            h >= 20 && (s++, (h = 2), (r = s >= 0 ? 1 : r)),
            (p = Math.round((c + d + h * Math.pow(10, s)) * r) / r);
        const f = Mv(e.max, p);
        return o.push({ value: f, major: bk(f), significand: h }), o;
      }
      class wk extends Fw {
        constructor(e) {
          super(e),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._valueRange = 0);
        }
        parse(e, t) {
          const n = fk.prototype.parse.apply(this, [e, t]);
          if (0 !== n) return Cv(n) && n > 0 ? n : null;
          this._zero = !0;
        }
        determineDataLimits() {
          const { min: e, max: t } = this.getMinMax(!0);
          (this.min = Cv(e) ? Math.max(0, e) : null),
            (this.max = Cv(t) ? Math.max(0, t) : null),
            this.options.beginAtZero && (this._zero = !0),
            this._zero &&
              this.min !== this._suggestedMin &&
              !Cv(this._userMin) &&
              (this.min =
                e === vk(this.min, 0) ? vk(this.min, -1) : vk(this.min, 0)),
            this.handleTickRangeOptions();
        }
        handleTickRangeOptions() {
          const { minDefined: e, maxDefined: t } = this.getUserBounds();
          let n = this.min,
            i = this.max;
          const o = (t) => (n = e ? n : t),
            a = (e) => (i = t ? i : e);
          n === i && (n <= 0 ? (o(1), a(10)) : (o(vk(n, -1)), a(vk(i, 1)))),
            n <= 0 && o(vk(i, -1)),
            i <= 0 && a(vk(n, 1)),
            (this.min = n),
            (this.max = i);
        }
        buildTicks() {
          const e = this.options,
            t = yk({ min: this._userMin, max: this._userMax }, this);
          return (
            "ticks" === e.bounds && ib(t, this, "value"),
            e.reverse
              ? (t.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            t
          );
        }
        getLabelForValue(e) {
          return void 0 === e
            ? "0"
            : Db(e, this.chart.options.locale, this.options.ticks.format);
        }
        configure() {
          const e = this.min;
          super.configure(),
            (this._startValue = $v(e)),
            (this._valueRange = $v(this.max) - $v(e));
        }
        getPixelForValue(e) {
          return (
            (void 0 !== e && 0 !== e) || (e = this.min),
            null === e || isNaN(e)
              ? NaN
              : this.getPixelForDecimal(
                  e === this.min
                    ? 0
                    : ($v(e) - this._startValue) / this._valueRange
                )
          );
        }
        getValueForPixel(e) {
          const t = this.getDecimalForPixel(e);
          return Math.pow(10, this._startValue + t * this._valueRange);
        }
      }
      function Sk(e) {
        const t = e.ticks;
        if (t.display && e.display) {
          const e = px(t.backdropPadding);
          return Pv(t.font && t.font.size, Vb.font.size) + e.height;
        }
        return 0;
      }
      function kk(e, t, n, i, o) {
        return e === i || e === o
          ? { start: t - n / 2, end: t + n / 2 }
          : e < i || e > o
          ? { start: t - n, end: t }
          : { start: t, end: t + n };
      }
      function Ak(e) {
        const t = {
            l: e.left + e._padding.left,
            r: e.right - e._padding.right,
            t: e.top + e._padding.top,
            b: e.bottom - e._padding.bottom,
          },
          n = Object.assign({}, t),
          i = [],
          o = [],
          a = e._pointLabels.length,
          s = e.options.pointLabels,
          r = s.centerPointLabels ? Vv / a : 0;
        for (let d = 0; d < a; d++) {
          const a = s.setContext(e.getPointLabelContext(d));
          o[d] = a.padding;
          const h = e.getPointPosition(d, e.drawingArea + o[d], r),
            p = fx(a.font),
            f =
              ((l = e.ctx),
              (c = p),
              (u = kv((u = e._pointLabels[d])) ? u : [u]),
              { w: Yb(l, c.string, u), h: u.length * c.lineHeight });
          i[d] = f;
          const g = ub(e.getIndexAngle(d) + r),
            m = Math.round(ab(g));
          Ck(n, t, g, kk(m, h.x, f.w, 0, 180), kk(m, h.y, f.h, 90, 270));
        }
        var l, c, u;
        e.setCenterPoint(t.l - n.l, n.r - t.r, t.t - n.t, n.b - t.b),
          (e._pointLabelItems = (function (e, t, n) {
            const i = [],
              o = e._pointLabels.length,
              a = e.options,
              { centerPointLabels: s, display: r } = a.pointLabels,
              l = { extra: Sk(a) / 2, additionalAngle: s ? Vv / o : 0 };
            let c;
            for (let u = 0; u < o; u++) {
              (l.padding = n[u]), (l.size = t[u]);
              const o = Mk(e, u, l);
              i.push(o),
                "auto" === r && ((o.visible = Pk(o, c)), o.visible && (c = o));
            }
            return i;
          })(e, i, o));
      }
      function Ck(e, t, n, i, o) {
        const a = Math.abs(Math.sin(n)),
          s = Math.abs(Math.cos(n));
        let r = 0,
          l = 0;
        i.start < t.l
          ? ((r = (t.l - i.start) / a), (e.l = Math.min(e.l, t.l - r)))
          : i.end > t.r &&
            ((r = (i.end - t.r) / a), (e.r = Math.max(e.r, t.r + r))),
          o.start < t.t
            ? ((l = (t.t - o.start) / s), (e.t = Math.min(e.t, t.t - l)))
            : o.end > t.b &&
              ((l = (o.end - t.b) / s), (e.b = Math.max(e.b, t.b + l)));
      }
      function Mk(e, t, n) {
        const i = e.drawingArea,
          { extra: o, additionalAngle: a, padding: s, size: r } = n,
          l = e.getPointPosition(t, i + o + s, a),
          c = Math.round(ab(ub(l.angle + qv))),
          u = (function (e, t, n) {
            90 === n || 270 === n
              ? (e -= t / 2)
              : (n > 270 || n < 90) && (e -= t);
            return e;
          })(l.y, r.h, c),
          d = (function (e) {
            if (0 === e || 180 === e) return "center";
            if (e < 180) return "left";
            return "right";
          })(c),
          h = (function (e, t, n) {
            "right" === n ? (e -= t) : "center" === n && (e -= t / 2);
            return e;
          })(l.x, r.w, d);
        return {
          visible: !0,
          x: l.x,
          y: u,
          textAlign: d,
          left: h,
          top: u,
          right: h + r.w,
          bottom: u + r.h,
        };
      }
      function Pk(e, t) {
        if (!t) return !0;
        const { left: n, top: i, right: o, bottom: a } = e;
        return !(
          Qb({ x: n, y: i }, t) ||
          Qb({ x: n, y: a }, t) ||
          Qb({ x: o, y: i }, t) ||
          Qb({ x: o, y: a }, t)
        );
      }
      function Ek(e, t, n) {
        const { left: i, top: o, right: a, bottom: s } = n,
          { backdropColor: r } = t;
        if (!Sv(r)) {
          const n = hx(t.borderRadius),
            l = px(t.backdropPadding);
          e.fillStyle = r;
          const c = i - l.left,
            u = o - l.top,
            d = a - i + l.width,
            h = s - o + l.height;
          Object.values(n).some((e) => 0 !== e)
            ? (e.beginPath(),
              ax(e, { x: c, y: u, w: d, h: h, radius: n }),
              e.fill())
            : e.fillRect(c, u, d, h);
        }
      }
      function Lk(e, t, n, i) {
        const { ctx: o } = e;
        if (n) o.arc(e.xCenter, e.yCenter, t, 0, Uv);
        else {
          let n = e.getPointPosition(0, t);
          o.moveTo(n.x, n.y);
          for (let a = 1; a < i; a++)
            (n = e.getPointPosition(a, t)), o.lineTo(n.x, n.y);
        }
      }
      _(wk, "id", "logarithmic"),
        _(wk, "defaults", {
          ticks: {
            callback: jb.formatters.logarithmic,
            major: { enabled: !0 },
          },
        });
      class Tk extends fk {
        constructor(e) {
          super(e),
            (this.xCenter = void 0),
            (this.yCenter = void 0),
            (this.drawingArea = void 0),
            (this._pointLabels = []),
            (this._pointLabelItems = []);
        }
        setDimensions() {
          const e = (this._padding = px(Sk(this.options) / 2)),
            t = (this.width = this.maxWidth - e.width),
            n = (this.height = this.maxHeight - e.height);
          (this.xCenter = Math.floor(this.left + t / 2 + e.left)),
            (this.yCenter = Math.floor(this.top + n / 2 + e.top)),
            (this.drawingArea = Math.floor(Math.min(t, n) / 2));
        }
        determineDataLimits() {
          const { min: e, max: t } = this.getMinMax(!1);
          (this.min = Cv(e) && !isNaN(e) ? e : 0),
            (this.max = Cv(t) && !isNaN(t) ? t : 0),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          return Math.ceil(this.drawingArea / Sk(this.options));
        }
        generateTickLabels(e) {
          fk.prototype.generateTickLabels.call(this, e),
            (this._pointLabels = this.getLabels()
              .map((e, t) => {
                const n = Lv(this.options.pointLabels.callback, [e, t], this);
                return n || 0 === n ? n : "";
              })
              .filter((e, t) => this.chart.getDataVisibility(t)));
        }
        fit() {
          const e = this.options;
          e.display && e.pointLabels.display
            ? Ak(this)
            : this.setCenterPoint(0, 0, 0, 0);
        }
        setCenterPoint(e, t, n, i) {
          (this.xCenter += Math.floor((e - t) / 2)),
            (this.yCenter += Math.floor((n - i) / 2)),
            (this.drawingArea -= Math.min(
              this.drawingArea / 2,
              Math.max(e, t, n, i)
            ));
        }
        getIndexAngle(e) {
          return ub(
            e * (Uv / (this._pointLabels.length || 1)) +
              ob(this.options.startAngle || 0)
          );
        }
        getDistanceFromCenterForValue(e) {
          if (Sv(e)) return NaN;
          const t = this.drawingArea / (this.max - this.min);
          return this.options.reverse ? (this.max - e) * t : (e - this.min) * t;
        }
        getValueForDistanceFromCenter(e) {
          if (Sv(e)) return NaN;
          const t = e / (this.drawingArea / (this.max - this.min));
          return this.options.reverse ? this.max - t : this.min + t;
        }
        getPointLabelContext(e) {
          const t = this._pointLabels || [];
          if (e >= 0 && e < t.length) {
            const n = t[e];
            return (function (e, t, n) {
              return mx(e, { label: n, index: t, type: "pointLabel" });
            })(this.getContext(), e, n);
          }
        }
        getPointPosition(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
          const i = this.getIndexAngle(e) - qv + n;
          return {
            x: Math.cos(i) * t + this.xCenter,
            y: Math.sin(i) * t + this.yCenter,
            angle: i,
          };
        }
        getPointPositionForValue(e, t) {
          return this.getPointPosition(
            e,
            this.getDistanceFromCenterForValue(t)
          );
        }
        getBasePosition(e) {
          return this.getPointPositionForValue(e || 0, this.getBaseValue());
        }
        getPointLabelPosition(e) {
          const {
            left: t,
            top: n,
            right: i,
            bottom: o,
          } = this._pointLabelItems[e];
          return { left: t, top: n, right: i, bottom: o };
        }
        drawBackground() {
          const {
            backgroundColor: e,
            grid: { circular: t },
          } = this.options;
          if (e) {
            const n = this.ctx;
            n.save(),
              n.beginPath(),
              Lk(
                this,
                this.getDistanceFromCenterForValue(this._endValue),
                t,
                this._pointLabels.length
              ),
              n.closePath(),
              (n.fillStyle = e),
              n.fill(),
              n.restore();
          }
        }
        drawGrid() {
          const e = this.ctx,
            t = this.options,
            { angleLines: n, grid: i, border: o } = t,
            a = this._pointLabels.length;
          let s, r, l;
          if (
            (t.pointLabels.display &&
              (function (e, t) {
                const {
                  ctx: n,
                  options: { pointLabels: i },
                } = e;
                for (let o = t - 1; o >= 0; o--) {
                  const t = e._pointLabelItems[o];
                  if (!t.visible) continue;
                  const a = i.setContext(e.getPointLabelContext(o));
                  Ek(n, a, t);
                  const s = fx(a.font),
                    { x: r, y: l, textAlign: c } = t;
                  ox(n, e._pointLabels[o], r, l + s.lineHeight / 2, s, {
                    color: a.color,
                    textAlign: c,
                    textBaseline: "middle",
                  });
                }
              })(this, a),
            i.display &&
              this.ticks.forEach((e, t) => {
                if (0 !== t || (0 === t && this.min < 0)) {
                  r = this.getDistanceFromCenterForValue(e.value);
                  const n = this.getContext(t),
                    s = i.setContext(n),
                    l = o.setContext(n);
                  !(function (e, t, n, i, o) {
                    const a = e.ctx,
                      s = t.circular,
                      { color: r, lineWidth: l } = t;
                    (!s && !i) ||
                      !r ||
                      !l ||
                      n < 0 ||
                      (a.save(),
                      (a.strokeStyle = r),
                      (a.lineWidth = l),
                      a.setLineDash(o.dash),
                      (a.lineDashOffset = o.dashOffset),
                      a.beginPath(),
                      Lk(e, n, s, i),
                      a.closePath(),
                      a.stroke(),
                      a.restore());
                  })(this, s, r, a, l);
                }
              }),
            n.display)
          ) {
            for (e.save(), s = a - 1; s >= 0; s--) {
              const i = n.setContext(this.getPointLabelContext(s)),
                { color: o, lineWidth: a } = i;
              a &&
                o &&
                ((e.lineWidth = a),
                (e.strokeStyle = o),
                e.setLineDash(i.borderDash),
                (e.lineDashOffset = i.borderDashOffset),
                (r = this.getDistanceFromCenterForValue(
                  t.reverse ? this.min : this.max
                )),
                (l = this.getPointPosition(s, r)),
                e.beginPath(),
                e.moveTo(this.xCenter, this.yCenter),
                e.lineTo(l.x, l.y),
                e.stroke());
            }
            e.restore();
          }
        }
        drawBorder() {}
        drawLabels() {
          const e = this.ctx,
            t = this.options,
            n = t.ticks;
          if (!n.display) return;
          const i = this.getIndexAngle(0);
          let o, a;
          e.save(),
            e.translate(this.xCenter, this.yCenter),
            e.rotate(i),
            (e.textAlign = "center"),
            (e.textBaseline = "middle"),
            this.ticks.forEach((i, s) => {
              if (0 === s && this.min >= 0 && !t.reverse) return;
              const r = n.setContext(this.getContext(s)),
                l = fx(r.font);
              if (
                ((o = this.getDistanceFromCenterForValue(this.ticks[s].value)),
                r.showLabelBackdrop)
              ) {
                (e.font = l.string),
                  (a = e.measureText(i.label).width),
                  (e.fillStyle = r.backdropColor);
                const t = px(r.backdropPadding);
                e.fillRect(
                  -a / 2 - t.left,
                  -o - l.size / 2 - t.top,
                  a + t.width,
                  l.size + t.height
                );
              }
              ox(e, i.label, 0, -o, l, {
                color: r.color,
                strokeColor: r.textStrokeColor,
                strokeWidth: r.textStrokeWidth,
              });
            }),
            e.restore();
        }
        drawTitle() {}
      }
      _(Tk, "id", "radialLinear"),
        _(Tk, "defaults", {
          display: !0,
          animate: !0,
          position: "chartArea",
          angleLines: {
            display: !0,
            lineWidth: 1,
            borderDash: [],
            borderDashOffset: 0,
          },
          grid: { circular: !1 },
          startAngle: 0,
          ticks: { showLabelBackdrop: !0, callback: jb.formatters.numeric },
          pointLabels: {
            backdropColor: void 0,
            backdropPadding: 2,
            display: !0,
            font: { size: 10 },
            callback: (e) => e,
            padding: 5,
            centerPointLabels: !1,
          },
        }),
        _(Tk, "defaultRoutes", {
          "angleLines.color": "borderColor",
          "pointLabels.color": "color",
          "ticks.color": "color",
        }),
        _(Tk, "descriptors", { angleLines: { _fallback: "grid" } });
      const Ok = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        Rk = Object.keys(Ok);
      function Ik(e, t) {
        return e - t;
      }
      function Nk(e, t) {
        if (Sv(t)) return null;
        const n = e._adapter,
          { parser: i, round: o, isoWeekday: a } = e._parseOpts;
        let s = t;
        return (
          "function" === typeof i && (s = i(s)),
          Cv(s) || (s = "string" === typeof i ? n.parse(s, i) : n.parse(s)),
          null === s
            ? null
            : (o &&
                (s =
                  "week" !== o || (!nb(a) && !0 !== a)
                    ? n.startOf(s, o)
                    : n.startOf(s, "isoWeek", a)),
              +s)
        );
      }
      function _k(e, t, n, i) {
        const o = Rk.length;
        for (let a = Rk.indexOf(e); a < o - 1; ++a) {
          const e = Ok[Rk[a]],
            o = e.steps ? e.steps : Number.MAX_SAFE_INTEGER;
          if (e.common && Math.ceil((n - t) / (o * e.size)) <= i) return Rk[a];
        }
        return Rk[o - 1];
      }
      function Dk(e, t, n) {
        if (n) {
          if (n.length) {
            const { lo: i, hi: o } = fb(n, t);
            e[n[i] >= t ? n[i] : n[o]] = !0;
          }
        } else e[t] = !0;
      }
      function zk(e, t, n) {
        const i = [],
          o = {},
          a = t.length;
        let s, r;
        for (s = 0; s < a; ++s)
          (r = t[s]), (o[r] = s), i.push({ value: r, major: !1 });
        return 0 !== a && n
          ? (function (e, t, n, i) {
              const o = e._adapter,
                a = +o.startOf(t[0].value, i),
                s = t[t.length - 1].value;
              let r, l;
              for (r = a; r <= s; r = +o.add(r, 1, i))
                (l = n[r]), l >= 0 && (t[l].major = !0);
              return t;
            })(e, i, o, n)
          : i;
      }
      class jk extends Fw {
        constructor(e) {
          super(e),
            (this._cache = { data: [], labels: [], all: [] }),
            (this._unit = "day"),
            (this._majorUnit = void 0),
            (this._offsets = {}),
            (this._normalized = !1),
            (this._parseOpts = void 0);
        }
        init(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          const n = e.time || (e.time = {}),
            i = (this._adapter = new Yy(e.adapters.date));
          i.init(t),
            Dv(n.displayFormats, i.formats()),
            (this._parseOpts = {
              parser: n.parser,
              round: n.round,
              isoWeekday: n.isoWeekday,
            }),
            super.init(e),
            (this._normalized = t.normalized);
        }
        parse(e, t) {
          return void 0 === e ? null : Nk(this, e);
        }
        beforeLayout() {
          super.beforeLayout(),
            (this._cache = { data: [], labels: [], all: [] });
        }
        determineDataLimits() {
          const e = this.options,
            t = this._adapter,
            n = e.time.unit || "day";
          let {
            min: i,
            max: o,
            minDefined: a,
            maxDefined: s,
          } = this.getUserBounds();
          function r(e) {
            a || isNaN(e.min) || (i = Math.min(i, e.min)),
              s || isNaN(e.max) || (o = Math.max(o, e.max));
          }
          (a && s) ||
            (r(this._getLabelBounds()),
            ("ticks" === e.bounds && "labels" === e.ticks.source) ||
              r(this.getMinMax(!1))),
            (i = Cv(i) && !isNaN(i) ? i : +t.startOf(Date.now(), n)),
            (o = Cv(o) && !isNaN(o) ? o : +t.endOf(Date.now(), n) + 1),
            (this.min = Math.min(i, o - 1)),
            (this.max = Math.max(i + 1, o));
        }
        _getLabelBounds() {
          const e = this.getLabelTimestamps();
          let t = Number.POSITIVE_INFINITY,
            n = Number.NEGATIVE_INFINITY;
          return (
            e.length && ((t = e[0]), (n = e[e.length - 1])), { min: t, max: n }
          );
        }
        buildTicks() {
          const e = this.options,
            t = e.time,
            n = e.ticks,
            i =
              "labels" === n.source
                ? this.getLabelTimestamps()
                : this._generate();
          "ticks" === e.bounds &&
            i.length &&
            ((this.min = this._userMin || i[0]),
            (this.max = this._userMax || i[i.length - 1]));
          const o = this.min,
            a = (function (e, t, n) {
              let i = 0,
                o = e.length;
              for (; i < o && e[i] < t; ) i++;
              for (; o > i && e[o - 1] > n; ) o--;
              return i > 0 || o < e.length ? e.slice(i, o) : e;
            })(i, o, this.max);
          return (
            (this._unit =
              t.unit ||
              (n.autoSkip
                ? _k(t.minUnit, this.min, this.max, this._getLabelCapacity(o))
                : (function (e, t, n, i, o) {
                    for (let a = Rk.length - 1; a >= Rk.indexOf(n); a--) {
                      const n = Rk[a];
                      if (Ok[n].common && e._adapter.diff(o, i, n) >= t - 1)
                        return n;
                    }
                    return Rk[n ? Rk.indexOf(n) : 0];
                  })(this, a.length, t.minUnit, this.min, this.max))),
            (this._majorUnit =
              n.major.enabled && "year" !== this._unit
                ? (function (e) {
                    for (let t = Rk.indexOf(e) + 1, n = Rk.length; t < n; ++t)
                      if (Ok[Rk[t]].common) return Rk[t];
                  })(this._unit)
                : void 0),
            this.initOffsets(i),
            e.reverse && a.reverse(),
            zk(this, a, this._majorUnit)
          );
        }
        afterAutoSkip() {
          this.options.offsetAfterAutoskip &&
            this.initOffsets(this.ticks.map((e) => +e.value));
        }
        initOffsets() {
          let e,
            t,
            n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [],
            i = 0,
            o = 0;
          this.options.offset &&
            n.length &&
            ((e = this.getDecimalForValue(n[0])),
            (i =
              1 === n.length ? 1 - e : (this.getDecimalForValue(n[1]) - e) / 2),
            (t = this.getDecimalForValue(n[n.length - 1])),
            (o =
              1 === n.length
                ? t
                : (t - this.getDecimalForValue(n[n.length - 2])) / 2));
          const a = n.length < 3 ? 0.5 : 0.25;
          (i = hb(i, 0, a)),
            (o = hb(o, 0, a)),
            (this._offsets = { start: i, end: o, factor: 1 / (i + 1 + o) });
        }
        _generate() {
          const e = this._adapter,
            t = this.min,
            n = this.max,
            i = this.options,
            o = i.time,
            a = o.unit || _k(o.minUnit, t, n, this._getLabelCapacity(t)),
            s = Pv(i.ticks.stepSize, 1),
            r = "week" === a && o.isoWeekday,
            l = nb(r) || !0 === r,
            c = {};
          let u,
            d,
            h = t;
          if (
            (l && (h = +e.startOf(h, "isoWeek", r)),
            (h = +e.startOf(h, l ? "day" : a)),
            e.diff(n, t, a) > 1e5 * s)
          )
            throw new Error(
              t +
                " and " +
                n +
                " are too far apart with stepSize of " +
                s +
                " " +
                a
            );
          const p = "data" === i.ticks.source && this.getDataTimestamps();
          for (u = h, d = 0; u < n; u = +e.add(u, s, a), d++) Dk(c, u, p);
          return (
            (u !== n && "ticks" !== i.bounds && 1 !== d) || Dk(c, u, p),
            Object.keys(c)
              .sort(Ik)
              .map((e) => +e)
          );
        }
        getLabelForValue(e) {
          const t = this._adapter,
            n = this.options.time;
          return n.tooltipFormat
            ? t.format(e, n.tooltipFormat)
            : t.format(e, n.displayFormats.datetime);
        }
        format(e, t) {
          const n = this.options.time.displayFormats,
            i = this._unit,
            o = t || n[i];
          return this._adapter.format(e, o);
        }
        _tickFormatFunction(e, t, n, i) {
          const o = this.options,
            a = o.ticks.callback;
          if (a) return Lv(a, [e, t, n], this);
          const s = o.time.displayFormats,
            r = this._unit,
            l = this._majorUnit,
            c = r && s[r],
            u = l && s[l],
            d = n[t],
            h = l && u && d && d.major;
          return this._adapter.format(e, i || (h ? u : c));
        }
        generateTickLabels(e) {
          let t, n, i;
          for (t = 0, n = e.length; t < n; ++t)
            (i = e[t]), (i.label = this._tickFormatFunction(i.value, t, e));
        }
        getDecimalForValue(e) {
          return null === e ? NaN : (e - this.min) / (this.max - this.min);
        }
        getPixelForValue(e) {
          const t = this._offsets,
            n = this.getDecimalForValue(e);
          return this.getPixelForDecimal((t.start + n) * t.factor);
        }
        getValueForPixel(e) {
          const t = this._offsets,
            n = this.getDecimalForPixel(e) / t.factor - t.end;
          return this.min + n * (this.max - this.min);
        }
        _getLabelSize(e) {
          const t = this.options.ticks,
            n = this.ctx.measureText(e).width,
            i = ob(this.isHorizontal() ? t.maxRotation : t.minRotation),
            o = Math.cos(i),
            a = Math.sin(i),
            s = this._resolveTickFontOptions(0).size;
          return { w: n * o + s * a, h: n * a + s * o };
        }
        _getLabelCapacity(e) {
          const t = this.options.time,
            n = t.displayFormats,
            i = n[t.unit] || n.millisecond,
            o = this._tickFormatFunction(
              e,
              0,
              zk(this, [e], this._majorUnit),
              i
            ),
            a = this._getLabelSize(o),
            s =
              Math.floor(
                this.isHorizontal() ? this.width / a.w : this.height / a.h
              ) - 1;
          return s > 0 ? s : 1;
        }
        getDataTimestamps() {
          let e,
            t,
            n = this._cache.data || [];
          if (n.length) return n;
          const i = this.getMatchingVisibleMetas();
          if (this._normalized && i.length)
            return (this._cache.data =
              i[0].controller.getAllParsedValues(this));
          for (e = 0, t = i.length; e < t; ++e)
            n = n.concat(i[e].controller.getAllParsedValues(this));
          return (this._cache.data = this.normalize(n));
        }
        getLabelTimestamps() {
          const e = this._cache.labels || [];
          let t, n;
          if (e.length) return e;
          const i = this.getLabels();
          for (t = 0, n = i.length; t < n; ++t) e.push(Nk(this, i[t]));
          return (this._cache.labels = this._normalized
            ? e
            : this.normalize(e));
        }
        normalize(e) {
          return xb(e.sort(Ik));
        }
      }
      function Bk(e, t, n) {
        let i,
          o,
          a,
          s,
          r = 0,
          l = e.length - 1;
        n
          ? (t >= e[r].pos &&
              t <= e[l].pos &&
              ({ lo: r, hi: l } = gb(e, "pos", t)),
            ({ pos: i, time: a } = e[r]),
            ({ pos: o, time: s } = e[l]))
          : (t >= e[r].time &&
              t <= e[l].time &&
              ({ lo: r, hi: l } = gb(e, "time", t)),
            ({ time: i, pos: a } = e[r]),
            ({ time: o, pos: s } = e[l]));
        const c = o - i;
        return c ? a + ((s - a) * (t - i)) / c : a;
      }
      _(jk, "id", "time"),
        _(jk, "defaults", {
          bounds: "data",
          adapters: {},
          time: {
            parser: !1,
            unit: !1,
            round: !1,
            isoWeekday: !1,
            minUnit: "millisecond",
            displayFormats: {},
          },
          ticks: { source: "auto", callback: !1, major: { enabled: !1 } },
        });
      class Fk extends jk {
        constructor(e) {
          super(e),
            (this._table = []),
            (this._minPos = void 0),
            (this._tableRange = void 0);
        }
        initOffsets() {
          const e = this._getTimestampsForTable(),
            t = (this._table = this.buildLookupTable(e));
          (this._minPos = Bk(t, this.min)),
            (this._tableRange = Bk(t, this.max) - this._minPos),
            super.initOffsets(e);
        }
        buildLookupTable(e) {
          const { min: t, max: n } = this,
            i = [],
            o = [];
          let a, s, r, l, c;
          for (a = 0, s = e.length; a < s; ++a)
            (l = e[a]), l >= t && l <= n && i.push(l);
          if (i.length < 2)
            return [
              { time: t, pos: 0 },
              { time: n, pos: 1 },
            ];
          for (a = 0, s = i.length; a < s; ++a)
            (c = i[a + 1]),
              (r = i[a - 1]),
              (l = i[a]),
              Math.round((c + r) / 2) !== l &&
                o.push({ time: l, pos: a / (s - 1) });
          return o;
        }
        _generate() {
          const e = this.min,
            t = this.max;
          let n = super.getDataTimestamps();
          return (
            (n.includes(e) && n.length) || n.splice(0, 0, e),
            (n.includes(t) && 1 !== n.length) || n.push(t),
            n.sort((e, t) => e - t)
          );
        }
        _getTimestampsForTable() {
          let e = this._cache.all || [];
          if (e.length) return e;
          const t = this.getDataTimestamps(),
            n = this.getLabelTimestamps();
          return (
            (e =
              t.length && n.length
                ? this.normalize(t.concat(n))
                : t.length
                ? t
                : n),
            (e = this._cache.all = e),
            e
          );
        }
        getDecimalForValue(e) {
          return (Bk(this._table, e) - this._minPos) / this._tableRange;
        }
        getValueForPixel(e) {
          const t = this._offsets,
            n = this.getDecimalForPixel(e) / t.factor - t.end;
          return Bk(this._table, n * this._tableRange + this._minPos, !0);
        }
      }
      _(Fk, "id", "timeseries"), _(Fk, "defaults", jk.defaults);
      const Wk = "label";
      function Hk(e, t) {
        "function" === typeof e ? e(t) : e && (e.current = t);
      }
      function Gk(e, t) {
        e.labels = t;
      }
      function Vk(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Wk;
        const i = [];
        e.datasets = t.map((t) => {
          const o = e.datasets.find((e) => e[n] === t[n]);
          return o && t.data && !i.includes(o)
            ? (i.push(o), Object.assign(o, t), o)
            : { ...t };
        });
      }
      function Uk(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Wk;
        const n = { labels: [], datasets: [] };
        return Gk(n, e.labels), Vk(n, e.datasets, t), n;
      }
      function Yk(e, n) {
        const {
            height: i = 150,
            width: o = 300,
            redraw: a = !1,
            datasetIdKey: s,
            type: r,
            data: l,
            options: c,
            plugins: u = [],
            fallbackContent: d,
            updateMode: h,
            ...p
          } = e,
          f = (0, t.useRef)(null),
          g = (0, t.useRef)(),
          m = () => {
            f.current &&
              ((g.current = new vS(f.current, {
                type: r,
                data: Uk(l, s),
                options: c && { ...c },
                plugins: u,
              })),
              Hk(n, g.current));
          },
          v = () => {
            Hk(n, null), g.current && (g.current.destroy(), (g.current = null));
          };
        return (
          (0, t.useEffect)(() => {
            !a &&
              g.current &&
              c &&
              (function (e, t) {
                const n = e.options;
                n && t && Object.assign(n, t);
              })(g.current, c);
          }, [a, c]),
          (0, t.useEffect)(() => {
            !a && g.current && Gk(g.current.config.data, l.labels);
          }, [a, l.labels]),
          (0, t.useEffect)(() => {
            !a &&
              g.current &&
              l.datasets &&
              Vk(g.current.config.data, l.datasets, s);
          }, [a, l.datasets]),
          (0, t.useEffect)(() => {
            g.current && (a ? (v(), setTimeout(m)) : g.current.update(h));
          }, [a, c, l.labels, l.datasets, h]),
          (0, t.useEffect)(() => {
            g.current && (v(), setTimeout(m));
          }, [r]),
          (0, t.useEffect)(() => (m(), () => v()), []),
          t.createElement(
            "canvas",
            Object.assign({ ref: f, role: "img", height: i, width: o }, p),
            d
          )
        );
      }
      const Xk = (0, t.forwardRef)(Yk);
      function Kk(e, n) {
        return (
          vS.register(n),
          (0, t.forwardRef)((n, i) =>
            t.createElement(Xk, Object.assign({}, n, { ref: i, type: e }))
          )
        );
      }
      const qk = Kk("bar", Dy);
      var Zk = n(6895),
        Qk = n.n(Zk);
      const $k = (e) => e && e.enabled && e.modifierKey,
        Jk = (e, t) => e && t[e + "Key"],
        eA = (e, t) => e && !t[e + "Key"];
      function tA(e, t, n) {
        return (
          void 0 === e ||
          ("string" === typeof e
            ? -1 !== e.indexOf(t)
            : "function" === typeof e && -1 !== e({ chart: n }).indexOf(t))
        );
      }
      function nA(e, t) {
        return (
          "function" === typeof e && (e = e({ chart: t })),
          "string" === typeof e
            ? { x: -1 !== e.indexOf("x"), y: -1 !== e.indexOf("y") }
            : { x: !1, y: !1 }
        );
      }
      function iA(e, t, n) {
        const { mode: i = "xy", scaleMode: o, overScaleMode: a } = e || {},
          s = (function (e, t) {
            let { x: n, y: i } = e;
            const o = t.scales,
              a = Object.keys(o);
            for (let s = 0; s < a.length; s++) {
              const e = o[a[s]];
              if (i >= e.top && i <= e.bottom && n >= e.left && n <= e.right)
                return e;
            }
            return null;
          })(t, n),
          r = nA(i, n),
          l = nA(o, n);
        if (a) {
          const e = nA(a, n);
          for (const t of ["x", "y"]) e[t] && ((l[t] = r[t]), (r[t] = !1));
        }
        if (s && l[s.axis]) return [s];
        const c = [];
        return (
          Tv(n.scales, function (e) {
            r[e.axis] && c.push(e);
          }),
          c
        );
      }
      const oA = new WeakMap();
      function aA(e) {
        let t = oA.get(e);
        return (
          t ||
            ((t = {
              originalScaleLimits: {},
              updatedScaleLimits: {},
              handlers: {},
              panDelta: {},
            }),
            oA.set(e, t)),
          t
        );
      }
      function sA(e, t, n) {
        const i = e.max - e.min,
          o = i * (t - 1),
          a = e.isHorizontal() ? n.x : n.y,
          s = Math.max(
            0,
            Math.min(1, (e.getValueForPixel(a) - e.min) / i || 0)
          );
        return { min: o * s, max: o * (1 - s) };
      }
      function rA(e, t, n, i, o) {
        let a = n[i];
        if ("original" === a) {
          const n = e.originalScaleLimits[t.id][i];
          a = Pv(n.options, n.scale);
        }
        return Pv(a, o);
      }
      function lA(e, t, n) {
        let { min: i, max: o } = t,
          a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        const s = aA(e.chart),
          { id: r, axis: l, options: c } = e,
          u = (n && (n[r] || n[l])) || {},
          { minRange: d = 0 } = u,
          h = rA(s, e, u, "min", -1 / 0),
          p = rA(s, e, u, "max", 1 / 0),
          f = a ? Math.max(o - i, d) : e.max - e.min,
          g = (f - o + i) / 2;
        return (
          (i -= g),
          (o += g),
          i < h
            ? ((i = h), (o = Math.min(h + f, p)))
            : o > p && ((o = p), (i = Math.max(p - f, h))),
          (c.min = i),
          (c.max = o),
          (s.updatedScaleLimits[e.id] = { min: i, max: o }),
          e.parse(i) !== e.min || e.parse(o) !== e.max
        );
      }
      const cA = (e) =>
        0 === e || isNaN(e)
          ? 0
          : e < 0
          ? Math.min(Math.round(e), -1)
          : Math.max(Math.round(e), 1);
      const uA = {
        second: 500,
        minute: 3e4,
        hour: 18e5,
        day: 432e5,
        week: 3024e5,
        month: 1296e6,
        quarter: 5184e6,
        year: 157248e5,
      };
      function dA(e, t, n) {
        let i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        const { min: o, max: a, options: s } = e,
          r = s.time && s.time.round,
          l = uA[r] || 0,
          c = e.getValueForPixel(e.getPixelForValue(o + l) - t),
          u = e.getValueForPixel(e.getPixelForValue(a + l) - t),
          { min: d = -1 / 0, max: h = 1 / 0 } = (i && n && n[e.axis]) || {};
        return (
          !!(isNaN(c) || isNaN(u) || c < d || u > h) ||
          lA(e, { min: c, max: u }, n, i)
        );
      }
      function hA(e, t, n) {
        return dA(e, t, n, !0);
      }
      const pA = {
          category: function (e, t, n, i) {
            const o = sA(e, t, n);
            return (
              e.min === e.max &&
                t < 1 &&
                (function (e) {
                  const t = e.getLabels().length - 1;
                  e.min > 0 && (e.min -= 1), e.max < t && (e.max += 1);
                })(e),
              lA(e, { min: e.min + cA(o.min), max: e.max - cA(o.max) }, i, !0)
            );
          },
          default: function (e, t, n, i) {
            const o = sA(e, t, n);
            return lA(e, { min: e.min + o.min, max: e.max - o.max }, i, !0);
          },
        },
        fA = {
          default: function (e, t, n, i) {
            lA(
              e,
              (function (e, t, n) {
                const i = e.getValueForPixel(t),
                  o = e.getValueForPixel(n);
                return { min: Math.min(i, o), max: Math.max(i, o) };
              })(e, t, n),
              i,
              !0
            );
          },
        },
        gA = {
          category: function (e, t, n) {
            const i = e.getLabels().length - 1;
            let { min: o, max: a } = e;
            const s = Math.max(a - o, 1),
              r = Math.round(
                (function (e) {
                  return e.isHorizontal() ? e.width : e.height;
                })(e) / Math.max(s, 10)
              ),
              l = Math.round(Math.abs(t / r));
            let c;
            return (
              t < -r
                ? ((a = Math.min(a + l, i)),
                  (o = 1 === s ? a : a - s),
                  (c = a === i))
                : t > r &&
                  ((o = Math.max(0, o - l)),
                  (a = 1 === s ? o : o + s),
                  (c = 0 === o)),
              lA(e, { min: o, max: a }, n) || c
            );
          },
          default: dA,
          logarithmic: hA,
          timeseries: hA,
        };
      function mA(e, t) {
        Tv(e, (n, i) => {
          t[i] || delete e[i];
        });
      }
      function vA(e, t) {
        const { scales: n } = e,
          { originalScaleLimits: i, updatedScaleLimits: o } = t;
        return (
          Tv(n, function (e) {
            (function (e, t, n) {
              const {
                id: i,
                options: { min: o, max: a },
              } = e;
              if (!t[i] || !n[i]) return !0;
              const s = n[i];
              return s.min !== o || s.max !== a;
            })(e, i, o) &&
              (i[e.id] = {
                min: { scale: e.min, options: e.options.min },
                max: { scale: e.max, options: e.options.max },
              });
          }),
          mA(i, n),
          mA(o, n),
          i
        );
      }
      function bA(e, t, n, i) {
        Lv(pA[e.type] || pA.default, [e, t, n, i]);
      }
      function xA(e, t, n, i, o) {
        Lv(fA[e.type] || fA.default, [e, t, n, i, o]);
      }
      function yA(e) {
        const t = e.chartArea;
        return { x: (t.left + t.right) / 2, y: (t.top + t.bottom) / 2 };
      }
      function wA(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : "none";
        const {
            x: i = 1,
            y: o = 1,
            focalPoint: a = yA(e),
          } = "number" === typeof t ? { x: t, y: t } : t,
          s = aA(e),
          {
            options: { limits: r, zoom: l },
          } = s;
        vA(e, s);
        const c = 1 !== i,
          u = 1 !== o;
        Tv(iA(l, a, e) || e.scales, function (e) {
          e.isHorizontal() && c
            ? bA(e, i, a, r)
            : !e.isHorizontal() && u && bA(e, o, a, r);
        }),
          e.update(n),
          Lv(l.onZoom, [{ chart: e }]);
      }
      function SA(e, t, n) {
        let i =
          arguments.length > 3 && void 0 !== arguments[3]
            ? arguments[3]
            : "none";
        const o = aA(e),
          {
            options: { limits: a, zoom: s },
          } = o,
          { mode: r = "xy" } = s;
        vA(e, o);
        const l = tA(r, "x", e),
          c = tA(r, "y", e);
        Tv(e.scales, function (e) {
          e.isHorizontal() && l
            ? xA(e, t.x, n.x, a)
            : !e.isHorizontal() && c && xA(e, t.y, n.y, a);
        }),
          e.update(i),
          Lv(s.onZoom, [{ chart: e }]);
      }
      function kA(e) {
        const t = aA(e);
        let n = 1,
          i = 1;
        return (
          Tv(e.scales, function (e) {
            const o = (function (e, t) {
              const n = e.originalScaleLimits[t];
              if (!n) return;
              const { min: i, max: o } = n;
              return Pv(o.options, o.scale) - Pv(i.options, i.scale);
            })(t, e.id);
            if (o) {
              const t = Math.round((o / (e.max - e.min)) * 100) / 100;
              (n = Math.min(n, t)), (i = Math.max(i, t));
            }
          }),
          n < 1 ? n : i
        );
      }
      function AA(e, t, n, i) {
        const { panDelta: o } = i,
          a = o[e.id] || 0;
        Jv(a) === Jv(t) && (t += a);
        Lv(gA[e.type] || gA.default, [e, t, n]) ? (o[e.id] = 0) : (o[e.id] = t);
      }
      function CA(e, t, n) {
        let i =
          arguments.length > 3 && void 0 !== arguments[3]
            ? arguments[3]
            : "none";
        const { x: o = 0, y: a = 0 } =
            "number" === typeof t ? { x: t, y: t } : t,
          s = aA(e),
          {
            options: { pan: r, limits: l },
          } = s,
          { onPan: c } = r || {};
        vA(e, s);
        const u = 0 !== o,
          d = 0 !== a;
        Tv(n || e.scales, function (e) {
          e.isHorizontal() && u
            ? AA(e, o, l, s)
            : !e.isHorizontal() && d && AA(e, a, l, s);
        }),
          e.update(i),
          Lv(c, [{ chart: e }]);
      }
      function MA(e) {
        const t = aA(e);
        vA(e, t);
        const n = {};
        for (const i of Object.keys(e.scales)) {
          const { min: e, max: o } = t.originalScaleLimits[i] || {
            min: {},
            max: {},
          };
          n[i] = { min: e.scale, max: o.scale };
        }
        return n;
      }
      function PA(e, t) {
        const { handlers: n } = aA(e),
          i = n[t];
        i && i.target && (i.target.removeEventListener(t, i), delete n[t]);
      }
      function EA(e, t, n, i) {
        const { handlers: o, options: a } = aA(e),
          s = o[n];
        (s && s.target === t) ||
          (PA(e, n),
          (o[n] = (t) => i(e, t, a)),
          (o[n].target = t),
          t.addEventListener(n, o[n]));
      }
      function LA(e, t) {
        const n = aA(e);
        n.dragStart && ((n.dragging = !0), (n.dragEnd = t), e.update("none"));
      }
      function TA(e, t) {
        const n = aA(e);
        n.dragStart &&
          "Escape" === t.key &&
          (PA(e, "keydown"),
          (n.dragging = !1),
          (n.dragStart = n.dragEnd = null),
          e.update("none"));
      }
      function OA(e, t, n) {
        const { onZoomStart: i, onZoomRejected: o } = n;
        if (i) {
          if (!1 === Lv(i, [{ chart: e, event: t, point: Ux(t, e) }]))
            return Lv(o, [{ chart: e, event: t }]), !1;
        }
      }
      function RA(e, t) {
        const n = aA(e),
          { pan: i, zoom: o = {} } = n.options;
        if (0 !== t.button || Jk($k(i), t) || eA($k(o.drag), t))
          return Lv(o.onZoomRejected, [{ chart: e, event: t }]);
        !1 !== OA(e, t, o) &&
          ((n.dragStart = t),
          EA(e, e.canvas, "mousemove", LA),
          EA(e, window.document, "keydown", TA));
      }
      function IA(e, t, n, i) {
        const o = tA(t, "x", e),
          a = tA(t, "y", e);
        let {
          top: s,
          left: r,
          right: l,
          bottom: c,
          width: u,
          height: d,
        } = e.chartArea;
        const h = Ux(n, e),
          p = Ux(i, e);
        o && ((r = Math.min(h.x, p.x)), (l = Math.max(h.x, p.x))),
          a && ((s = Math.min(h.y, p.y)), (c = Math.max(h.y, p.y)));
        const f = l - r,
          g = c - s;
        return {
          left: r,
          top: s,
          right: l,
          bottom: c,
          width: f,
          height: g,
          zoomX: o && f ? 1 + (u - f) / u : 1,
          zoomY: a && g ? 1 + (d - g) / d : 1,
        };
      }
      function NA(e, t) {
        const n = aA(e);
        if (!n.dragStart) return;
        PA(e, "mousemove");
        const {
            mode: i,
            onZoomComplete: o,
            drag: { threshold: a = 0 },
          } = n.options.zoom,
          s = IA(e, i, n.dragStart, t),
          r = tA(i, "x", e) ? s.width : 0,
          l = tA(i, "y", e) ? s.height : 0,
          c = Math.sqrt(r * r + l * l);
        if (((n.dragStart = n.dragEnd = null), c <= a))
          return (n.dragging = !1), void e.update("none");
        SA(e, { x: s.left, y: s.top }, { x: s.right, y: s.bottom }, "zoom"),
          setTimeout(() => (n.dragging = !1), 500),
          Lv(o, [{ chart: e }]);
      }
      function _A(e, t) {
        const {
          handlers: { onZoomComplete: n },
          options: { zoom: i },
        } = aA(e);
        if (
          !(function (e, t, n) {
            if (eA($k(n.wheel), t))
              Lv(n.onZoomRejected, [{ chart: e, event: t }]);
            else if (
              !1 !== OA(e, t, n) &&
              (t.cancelable && t.preventDefault(), void 0 !== t.deltaY)
            )
              return !0;
          })(e, t, i)
        )
          return;
        const o = t.target.getBoundingClientRect(),
          a = 1 + (t.deltaY >= 0 ? -i.wheel.speed : i.wheel.speed);
        wA(e, {
          x: a,
          y: a,
          focalPoint: { x: t.clientX - o.left, y: t.clientY - o.top },
        }),
          n && n();
      }
      function DA(e, t, n, i) {
        n &&
          (aA(e).handlers[t] = (function (e, t) {
            let n;
            return function () {
              return clearTimeout(n), (n = setTimeout(e, t)), t;
            };
          })(() => Lv(n, [{ chart: e }]), i));
      }
      function zA(e, t) {
        return function (n, i) {
          const { pan: o, zoom: a = {} } = t.options;
          if (!o || !o.enabled) return !1;
          const s = i && i.srcEvent;
          return (
            !s ||
            !(
              !t.panning &&
              "mouse" === i.pointerType &&
              (eA($k(o), s) || Jk($k(a.drag), s))
            ) ||
            (Lv(o.onPanRejected, [{ chart: e, event: i }]), !1)
          );
        };
      }
      function jA(e, t, n) {
        if (t.scale) {
          const { center: i, pointers: o } = n,
            a = (1 / t.scale) * n.scale,
            s = n.target.getBoundingClientRect(),
            r = (function (e, t) {
              const n = Math.abs(e.clientX - t.clientX),
                i = Math.abs(e.clientY - t.clientY),
                o = n / i;
              let a, s;
              return (
                o > 0.3 && o < 1.7 ? (a = s = !0) : n > i ? (a = !0) : (s = !0),
                { x: a, y: s }
              );
            })(o[0], o[1]),
            l = t.options.zoom.mode;
          wA(e, {
            x: r.x && tA(l, "x", e) ? a : 1,
            y: r.y && tA(l, "y", e) ? a : 1,
            focalPoint: { x: i.x - s.left, y: i.y - s.top },
          }),
            (t.scale = n.scale);
        }
      }
      function BA(e, t, n) {
        const i = t.delta;
        i &&
          ((t.panning = !0),
          CA(e, { x: n.deltaX - i.x, y: n.deltaY - i.y }, t.panScales),
          (t.delta = { x: n.deltaX, y: n.deltaY }));
      }
      const FA = new WeakMap();
      function WA(e, t) {
        const n = aA(e),
          i = e.canvas,
          { pan: o, zoom: a } = t,
          s = new (Qk().Manager)(i);
        a &&
          a.pinch.enabled &&
          (s.add(new (Qk().Pinch)()),
          s.on("pinchstart", () =>
            (function (e, t) {
              t.options.zoom.pinch.enabled && (t.scale = 1);
            })(0, n)
          ),
          s.on("pinch", (t) => jA(e, n, t)),
          s.on("pinchend", (t) =>
            (function (e, t, n) {
              t.scale &&
                (jA(e, t, n),
                (t.scale = null),
                Lv(t.options.zoom.onZoomComplete, [{ chart: e }]));
            })(e, n, t)
          )),
          o &&
            o.enabled &&
            (s.add(
              new (Qk().Pan)({ threshold: o.threshold, enable: zA(e, n) })
            ),
            s.on("panstart", (t) =>
              (function (e, t, n) {
                const {
                  enabled: i,
                  onPanStart: o,
                  onPanRejected: a,
                } = t.options.pan;
                if (!i) return;
                const s = n.target.getBoundingClientRect(),
                  r = { x: n.center.x - s.left, y: n.center.y - s.top };
                if (!1 === Lv(o, [{ chart: e, event: n, point: r }]))
                  return Lv(a, [{ chart: e, event: n }]);
                (t.panScales = iA(t.options.pan, r, e)),
                  (t.delta = { x: 0, y: 0 }),
                  clearTimeout(t.panEndTimeout),
                  BA(e, t, n);
              })(e, n, t)
            ),
            s.on("panmove", (t) => BA(e, n, t)),
            s.on("panend", () =>
              (function (e, t) {
                (t.delta = null),
                  t.panning &&
                    ((t.panEndTimeout = setTimeout(
                      () => (t.panning = !1),
                      500
                    )),
                    Lv(t.options.pan.onPanComplete, [{ chart: e }]));
              })(e, n)
            )),
          FA.set(e, s);
      }
      function HA(e, t, n) {
        const i = n.zoom.drag,
          { dragStart: o, dragEnd: a } = aA(e);
        if (i.drawTime !== t || !a) return;
        const {
            left: s,
            top: r,
            width: l,
            height: c,
          } = IA(e, n.zoom.mode, o, a),
          u = e.ctx;
        u.save(),
          u.beginPath(),
          (u.fillStyle = i.backgroundColor || "rgba(225,225,225,0.3)"),
          u.fillRect(s, r, l, c),
          i.borderWidth > 0 &&
            ((u.lineWidth = i.borderWidth),
            (u.strokeStyle = i.borderColor || "rgba(225,225,225)"),
            u.strokeRect(s, r, l, c)),
          u.restore();
      }
      var GA = {
        id: "zoom",
        version: "2.0.1",
        defaults: {
          pan: { enabled: !1, mode: "xy", threshold: 10, modifierKey: null },
          zoom: {
            wheel: { enabled: !1, speed: 0.1, modifierKey: null },
            drag: {
              enabled: !1,
              drawTime: "beforeDatasetsDraw",
              modifierKey: null,
            },
            pinch: { enabled: !1 },
            mode: "xy",
          },
        },
        start: function (e, t, n) {
          (aA(e).options = n),
            Object.prototype.hasOwnProperty.call(n.zoom, "enabled") &&
              console.warn(
                "The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`."
              ),
            (Object.prototype.hasOwnProperty.call(n.zoom, "overScaleMode") ||
              Object.prototype.hasOwnProperty.call(n.pan, "overScaleMode")) &&
              console.warn(
                "The option `overScaleMode` is deprecated. Please use `scaleMode` instead (and update `mode` as desired)."
              ),
            Qk() && WA(e, n),
            (e.pan = (t, n, i) => CA(e, t, n, i)),
            (e.zoom = (t, n) => wA(e, t, n)),
            (e.zoomRect = (t, n, i) => SA(e, t, n, i)),
            (e.zoomScale = (t, n, i) =>
              (function (e, t, n) {
                let i =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : "none";
                vA(e, aA(e)), lA(e.scales[t], n, void 0, !0), e.update(i);
              })(e, t, n, i)),
            (e.resetZoom = (t) =>
              (function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : "default";
                const n = aA(e),
                  i = vA(e, n);
                Tv(e.scales, function (e) {
                  const t = e.options;
                  i[e.id]
                    ? ((t.min = i[e.id].min.options),
                      (t.max = i[e.id].max.options))
                    : (delete t.min, delete t.max);
                }),
                  e.update(t),
                  Lv(n.options.zoom.onZoomComplete, [{ chart: e }]);
              })(e, t)),
            (e.getZoomLevel = () => kA(e)),
            (e.getInitialScaleBounds = () => MA(e)),
            (e.isZoomedOrPanned = () =>
              (function (e) {
                const t = MA(e);
                for (const n of Object.keys(e.scales)) {
                  const { min: i, max: o } = t[n];
                  if (void 0 !== i && e.scales[n].min !== i) return !0;
                  if (void 0 !== o && e.scales[n].max !== o) return !0;
                }
                return !1;
              })(e));
        },
        beforeEvent(e) {
          const t = aA(e);
          if (t.panning || t.dragging) return !1;
        },
        beforeUpdate: function (e, t, n) {
          (aA(e).options = n),
            (function (e, t) {
              const n = e.canvas,
                { wheel: i, drag: o, onZoomComplete: a } = t.zoom;
              i.enabled
                ? (EA(e, n, "wheel", _A), DA(e, "onZoomComplete", a, 250))
                : PA(e, "wheel"),
                o.enabled
                  ? (EA(e, n, "mousedown", RA),
                    EA(e, n.ownerDocument, "mouseup", NA))
                  : (PA(e, "mousedown"),
                    PA(e, "mousemove"),
                    PA(e, "mouseup"),
                    PA(e, "keydown"));
            })(e, n);
        },
        beforeDatasetsDraw(e, t, n) {
          HA(e, "beforeDatasetsDraw", n);
        },
        afterDatasetsDraw(e, t, n) {
          HA(e, "afterDatasetsDraw", n);
        },
        beforeDraw(e, t, n) {
          HA(e, "beforeDraw", n);
        },
        afterDraw(e, t, n) {
          HA(e, "afterDraw", n);
        },
        stop: function (e) {
          !(function (e) {
            PA(e, "mousedown"),
              PA(e, "mousemove"),
              PA(e, "mouseup"),
              PA(e, "wheel"),
              PA(e, "click"),
              PA(e, "keydown");
          })(e),
            Qk() &&
              (function (e) {
                const t = FA.get(e);
                t &&
                  (t.remove("pinchstart"),
                  t.remove("pinch"),
                  t.remove("pinchend"),
                  t.remove("panstart"),
                  t.remove("pan"),
                  t.remove("panend"),
                  t.destroy(),
                  FA.delete(e));
              })(e),
            (function (e) {
              oA.delete(e);
            })(e);
        },
        panFunctions: gA,
        zoomFunctions: pA,
        zoomRectFunctions: fA,
      };
      vS.register(XS, lk, US, WS, dk, gk, GA);
      const VA = (e) => {
        let {
          data: n,
          timelineData: i,
          trendColor: o,
          showDollarSign: a,
          isAllTime: s,
          selectedBarMonth: r,
          isDisplayingYear: l,
          onHoverBar: c,
        } = e;
        const u = (0, t.useRef)(null),
          d = ((e, t) => {
            const n = parseInt(e.slice(1, 3), 16),
              i = parseInt(e.slice(3, 5), 16),
              o = parseInt(e.slice(5, 7), 16);
            return "rgba("
              .concat(n, ", ")
              .concat(i, ", ")
              .concat(o, ", ")
              .concat(t, ")");
          })(o, 0.2),
          h = Ol("(max-width:600px)"),
          [p, f] = (0, t.useState)(null);
        (0, t.useEffect)(() => {
          const e = (e) => {
            u.current && !u.current.contains(e.target) && f(null);
          };
          return (
            document.addEventListener("click", e),
            () => {
              document.removeEventListener("click", e);
            }
          );
        }, []);
        const g = {
            responsive: !0,
            maintainAspectRatio: !1,
            layout: { padding: { bottom: 50 } },
            onClick: (e, t) => {
              if (t.length > 0) {
                const e = t[0].index;
                if (0 === n[e]) return;
                const o = s ? za(i[e]) : Na(i[e]);
                l && r && r(o);
              }
            },
            onHover: (e, t) => {
              if (t.length > 0) {
                const e = t[0].index,
                  o = n[e],
                  a = l ? ja(i[e]) : _a(i[e]);
                c && c({ value: o, label: a }), f(e);
              } else f(null), c && c(null);
            },
            plugins: {
              legend: { display: !1 },
              tooltip: {
                backgroundColor: "rgb(0, 0, 0)",
                borderColor: "rgba(255, 255, 255, 0.2)",
                borderWidth: 1,
                yAlign: "bottom",
                position: "nearest",
                caretPadding: 10,
                cornerRadius: 8,
                displayColors: !1,
                titleAlign: "center",
                bodyAlign: "center",
                titleFont: { size: 18, family: "Roboto", weight: "bold" },
                bodyFont: {
                  size: 12,
                  family: "ProximaNovaRegular",
                  weight: "normal",
                },
                bodyColor: "#D1D1D1",
                titleColor: "#ffffff",
                callbacks: {
                  title: function (e) {
                    return a
                      ? "$".concat(Ra(e[0].raw))
                      : "".concat(Ra(e[0].raw));
                  },
                  label: function (e) {
                    return s ? ja(i[e.dataIndex]) : _a(i[e.dataIndex]);
                  },
                },
              },
            },
            scales: {
              x: {
                grid: { display: !1 },
                ticks: {
                  display: !1,
                  color: "#d1d1d1",
                  font: { size: 14, family: "ProximaNovaRegular" },
                },
              },
              y: {
                grace: "20%",
                grid: { display: !1 },
                ticks: {
                  display: !1,
                  color: "#d1d1d1",
                  font: { size: 14, family: "ProximaNovaRegular" },
                },
              },
            },
          },
          m = {
            labels: s
              ? i.map((e, t) => za(0 === e ? new Date(2020, t).getTime() : e))
              : i.map((e) => Na(e)),
            datasets: [
              {
                label: "Value",
                data: n,
                minBarLength: 5,
                maxBarThickness: 30,
                backgroundColor(e) {
                  const { chart: t, datasetIndex: n, index: i } = e,
                    a = t.data.datasets[n].data[i],
                    s = t.scales.y.getPixelForValue(a),
                    r = t.getDatasetMeta(n).data[i];
                  if (r) {
                    const { x: e, width: n, base: l } = r,
                      c = t.ctx;
                    if (!isFinite(s) || !isFinite(l))
                      return "rgba(128, 128, 128, 0.5)";
                    if (0 === a) return "rgba(128, 128, 128, 0.5)";
                    {
                      const e = c.createLinearGradient(0, s, 0, l);
                      return (
                        e.addColorStop(0, o),
                        e.addColorStop(1, d),
                        null === p || p === i ? e : "rgba(128, 128, 128, 0.5)"
                      );
                    }
                  }
                  return o;
                },
                borderColor: "transparent",
                borderWidth: 1,
                borderRadius: 20,
                borderSkipped: !1,
              },
            ],
          };
        return (0, js.jsx)("div", {
          className: "chart-container",
          style: {
            position: "relative",
            width: "100%",
            height: h ? "300px" : "470px",
          },
          ref: u,
          onMouseLeave: () => {
            c && c(null), f(null);
          },
          children: (0, js.jsx)(qk, { data: m, options: g }),
        });
      };
      var UA = n(5896),
        YA = n(1707);
      const XA = (e) => {
          let {
            statsData: n,
            graphData: i,
            timelineData: o,
            datesObjArray: a,
            onTimeRangeChange: s,
            onYearChange: r,
            onMonthChange: l,
            onDateChange: c,
            onMonthSelectedInYearlyView: u,
          } = e;
          const [d, h] = (0, t.useState)("7days"),
            p = Ol("(max-width:600px)"),
            f = Ol("(max-width:900px)"),
            g = (() => {
              const e = new Date().getFullYear(),
                t = [];
              for (let n = new Date(Da).getFullYear(); n <= e; n++) t.push(n);
              return t;
            })(),
            m = new Date().getFullYear(),
            v = new Date().getMonth() + 1,
            [b, x] = (0, t.useState)(m),
            [y, w] = (0, t.useState)(!0),
            [S, k] = (0, t.useState)(null),
            A = (() => {
              const e = new Date().getFullYear(),
                t = new Date(Da).getFullYear(),
                n = new Date(Da).getMonth(),
                i = [];
              for (let o = t; o <= e; o++)
                for (let e = 0; e < 12; e++)
                  (o === t && e < n) || i.push({ year: o, month: e + 1 });
              return i;
            })(),
            [C, M] = (0, t.useState)(new Date().getMonth() + 1),
            P = Date.now(),
            E = new Date(P).getDate(),
            [L, T] = (0, t.useState)(E);
          (0, t.useEffect)(() => {
            "1month" === d && (l && l(C), r && r(b));
          }, [C, b, d]);
          return (
            (0, t.useEffect)(() => {
              h("7days"),
                M(v),
                T(E),
                s(7),
                l && l(v),
                c && c(E),
                r && r(m),
                w(!1);
            }, [n.name]),
            (0, js.jsxs)(Hl, {
              sx: {
                backgroundImage: "url(".concat(ud, ")"),
                backgroundRepeat: "no-repeat",
                padding: "20px",
                borderRadius: "8px",
                border: "1px solid rgba(255, 255, 255, 0.04)",
                maxWidth: "825px",
                width: "100%",
                height: p ? "max-content" : "630px",
                backgroundSize: "cover",
                backgroundPosition: "center",
              },
              children: [
                (0, js.jsx)(vu, {
                  sx: {
                    fontSize: "18px",
                    fontWeight: 400,
                    marginBottom: "10px",
                    fontFamily: "ProximaNovaRegular",
                    padding: "6px 20px",
                    backgroundColor: "rgba(255, 255, 255, 0.06)",
                    color: "#ffffff",
                    borderRadius: "32px",
                    height: "44px",
                    width: "max-content",
                    display: "flex",
                    alignItems: "center",
                  },
                  children: n.name,
                }),
                (0, js.jsxs)(Hl, {
                  sx: {
                    display: "flex",
                    flexDirection: p ? "column" : "row",
                    justifyContent: "space-between",
                  },
                  children: [
                    (0, js.jsxs)(Hl, {
                      sx: {
                        display: "flex",
                        flexDirection: "row",
                        gap: "4px",
                        alignItems: "center",
                      },
                      children: [
                        (0, js.jsx)(vu, {
                          sx: {
                            fontFamily: "ProximaNovaRegular",
                            fontWeight: 700,
                            fontSize: "24px",
                            lineHeight: "36px",
                          },
                          children: S
                            ? (0, js.jsxs)(js.Fragment, {
                                children: [
                                  n.name.includes("USD") ? "$" : "",
                                  S.value.toLocaleString("en-US"),
                                  " ",
                                  (0, js.jsx)("span", {
                                    style: { fontSize: "20px" },
                                    children: n.textWithValue,
                                  }),
                                  (0, js.jsxs)("span", {
                                    style: {
                                      fontSize: "14px",
                                      fontWeight: 400,
                                      fontFamily: "ProximaNovaRegular",
                                      color: "rgba(255, 255, 255, 0.8)",
                                    },
                                    children: [" ", "(", S.label, ")"],
                                  }),
                                ],
                              })
                            : (0, js.jsxs)(js.Fragment, {
                                children: [
                                  n.name.includes("USD") ? "$" : "",
                                  Number(n.value).toLocaleString("en-US"),
                                  " ",
                                  (0, js.jsx)("span", {
                                    style: { fontSize: "20px" },
                                    children: n.textWithValue,
                                  }),
                                ],
                              }),
                        }),
                        0 !==
                          (null === n || void 0 === n
                            ? void 0
                            : n.trendPercentage) &&
                          n.trend &&
                          !S &&
                          (0, js.jsxs)(js.Fragment, {
                            children: [
                              (0, js.jsx)("img", {
                                src: "Up" === n.trend ? od : ad,
                                alt: "trend icon",
                                height: "24px",
                                width: "24px",
                              }),
                              (0, js.jsxs)(vu, {
                                sx: {
                                  fontFamily: "ProximaNovaRegular",
                                  fontWeight: 400,
                                  fontSize: "18px",
                                  lineHeight: "27px",
                                  color:
                                    "Up" === n.trend
                                      ? "rgba(0, 220, 114, 1)"
                                      : "rgba(255, 80, 74, 1)",
                                },
                                children: [n.trendPercentage, " %"],
                              }),
                            ],
                          }),
                      ],
                    }),
                    (0, js.jsx)(Fm, {
                      chartTime: d,
                      handleSelectTime: (e) => {
                        switch ((h(e), e)) {
                          case "7days":
                            s(7),
                              l && l(v),
                              c && c(E),
                              r && r(m),
                              M(v),
                              T(E),
                              w(!1);
                            break;
                          case "1month":
                            s(30), M(v), c && c(0), w(!1);
                            break;
                          case "alltime":
                            s(1e6), l && l(0), c && c(0), r && r(b), w(!0);
                            break;
                          default:
                            s(7),
                              l && l(v),
                              c && c(E),
                              T(E),
                              r && r(m),
                              M(v),
                              w(!1);
                        }
                      },
                    }),
                  ],
                }),
                "alltime" === d &&
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      justifyContent: "flex-end",
                      py: "10px",
                      alignItems: "center",
                    },
                    children: [
                      (0, js.jsx)(jc, {
                        sx: { color: "rgba(255, 255, 255, 0.3)" },
                        onClick: () => {
                          const e = g.findIndex((e) => e === b);
                          e > 0 && (l && l(0), r && r(g[e - 1]), x(g[e - 1]));
                        },
                        disabled: b === g[0] || !y,
                        children: (0, js.jsx)(UA.A, {}),
                      }),
                      (0, js.jsx)(vu, {
                        sx: { cursor: y ? "default" : "pointer" },
                        onClick: () => {
                          y || (w(!0), u && u(!0), r && r(b), l && l(0));
                        },
                        children: b,
                      }),
                      (0, js.jsx)(jc, {
                        sx: { color: "rgba(255, 255, 255, 0.3)" },
                        onClick: () => {
                          const e = g.findIndex((e) => e === b);
                          e < g.length - 1 &&
                            (l && l(0), r && r(g[e + 1]), x(g[e + 1]));
                        },
                        disabled: b === g[g.length - 1] || !y,
                        children: (0, js.jsx)(YA.A, {}),
                      }),
                    ],
                  }),
                "1month" === d &&
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      justifyContent: "flex-end",
                      py: "10px",
                      alignItems: "center",
                    },
                    children: [
                      (0, js.jsx)(jc, {
                        sx: { color: "rgba(255, 255, 255, 0.3)" },
                        onClick: () => {
                          M((e) => {
                            const t = A.findIndex((t) => t.month === e),
                              n = t > 0 ? t - 1 : A.length - 1,
                              i = A[n].month,
                              o = A[n].year;
                            return l && l(i), r && r(o), M(i), x(o), i;
                          }),
                            u && u(!1);
                        },
                        disabled: 0 === A.findIndex((e) => e.month === C),
                        children: (0, js.jsx)(UA.A, {}),
                      }),
                      (0, js.jsxs)(vu, { children: [Ba(C), " ", b] }),
                      (0, js.jsx)(jc, {
                        sx: { color: "rgba(255, 255, 255, 0.3)" },
                        onClick: () => {
                          M((e) => {
                            const t = A.findIndex((t) => t.month === e),
                              n = t < A.length - 1 ? t + 1 : 0,
                              i = A[n].month,
                              o = A[n].year;
                            return l && l(i), r && r(o), M(i), x(o), i;
                          }),
                            u && u(!1);
                        },
                        disabled:
                          (C === new Date().getMonth() + 1 &&
                            b === new Date().getFullYear()) ||
                          A.findIndex((e) => e.month === C) === A.length - 1,
                        children: (0, js.jsx)(YA.A, {}),
                      }),
                    ],
                  }),
                "7days" === d &&
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      justifyContent: "flex-end",
                      py: "10px",
                      alignItems: "center",
                    },
                    children: [
                      (0, js.jsx)(jc, {
                        sx: { color: "rgba(255, 255, 255, 0.3)" },
                        onClick: () => {
                          c && c(a[0].dayN - 1),
                            T(a[0].dayN - 1),
                            a[0].dayN - 1 === 0
                              ? (M(a[0].month - 1), l && l(a[0].month - 1))
                              : (M(a[0].month), l && l(a[0].month)),
                            a[0].dayN - 1 === 0 && a[0].month - 1 === 0
                              ? (x(a[0].year - 1), r && r(a[0].year - 1))
                              : (x(a[0].year), r && r(a[0].year));
                        },
                        disabled:
                          3 === a[0].dayN &&
                          a[0].month === A[0].month &&
                          a[0].year === A[0].year,
                        children: (0, js.jsx)(UA.A, {}),
                      }),
                      (0, js.jsx)(vu, {
                        children: ""
                          .concat(a[0].dayN, "/")
                          .concat(Ba(a[0].month), "/")
                          .concat(a[0].year, " - \n              ")
                          .concat(a[a.length - 1].dayN, "/")
                          .concat(Ba(a[a.length - 1].month), "/")
                          .concat(a[a.length - 1].year),
                      }),
                      (0, js.jsx)(jc, {
                        sx: { color: "rgba(255, 255, 255, 0.3)" },
                        onClick: () => {
                          let e = a[a.length - 1].dayN,
                            t = a[a.length - 1].month,
                            n = a[a.length - 1].year,
                            i = e + 7;
                          const o = (e, t) => new Date(t, e, 0).getDate();
                          for (; i > o(t, n); )
                            (i -= o(t, n)),
                              (t += 1),
                              t > 12 && ((t = 1), (n += 1));
                          T(i), M(t), x(n), c && c(i), l && l(t), r && r(n);
                        },
                        disabled: L === E && C === v && b === m,
                        children: (0, js.jsx)(YA.A, {}),
                      }),
                    ],
                  }),
                (0, js.jsx)(Hl, {
                  sx: {
                    height: p ? "300px" : f ? "400px" : "calc(100% - 100px)",
                    width: p ? "100%" : "calc(100% - 20px)",
                    marginTop: p ? "20px" : "0px",
                  },
                  children: (0, js.jsx)(VA, {
                    data: i,
                    timelineData: o,
                    trendColor: "#00DC72",
                    showDollarSign: n.name.includes("USD"),
                    isAllTime: "alltime" === d,
                    selectedBarMonth: (e) => {
                      const t =
                        ((e) =>
                          [
                            "Jan",
                            "Feb",
                            "Mar",
                            "Apr",
                            "May",
                            "Jun",
                            "Jul",
                            "Aug",
                            "Sep",
                            "Oct",
                            "Nov",
                            "Dec",
                          ].indexOf(e))(e) + 1;
                      l && l(t), u && u(!0), w(!1);
                    },
                    isDisplayingYear: y,
                    onHoverBar: k,
                  }),
                }),
              ],
            })
          );
        },
        KA = Wa.injectEndpoints({
          endpoints: (e) => ({
            getNetworkSummary: e.query({
              query: () => "/network-summary/get-network-summary",
            }),
            getResourcesLeased: e.query({
              query: () => "/resources-leased/get-resources-leased",
            }),
            getNetworkCapacity: e.query({
              query: () => "/network-capacity/get-network-capacity",
            }),
            getCluster: e.query({ query: () => "/cluster/get-cluster" }),
            getClusterGraph: e.query({
              query: (e) => "/cluster/get-cluster-graph?range=".concat(e),
            }),
            getNetworkCapacityYearlyGraph: e.query({
              query: (e) =>
                "/network-capacity/get-network-capacity-graph-month-year?year=".concat(
                  e,
                  "&month=0&date=0"
                ),
            }),
            getNetworkCapacityMonthlyGraph: e.query({
              query: (e) => {
                let { month: t, year: n } = e;
                return "/network-capacity/get-network-capacity-graph-month-year?year="
                  .concat(n, "&month=")
                  .concat(t, "&date=0");
              },
            }),
            getNetworkCapacityWeeklyGraph: e.query({
              query: (e) => {
                let { date: t, month: n, year: i } = e;
                return "/network-capacity/get-network-capacity-graph-month-year?year="
                  .concat(i, "&month=")
                  .concat(n, "&date=")
                  .concat(t);
              },
            }),
            getNetworkCapacityTrend: e.query({
              query: (e) => {
                let { date: t, month: n, year: i } = e;
                return "/network-capacity/get-network-capacity-trend-month-year?year="
                  .concat(i, "&month=")
                  .concat(n, "&date=")
                  .concat(t);
              },
            }),
            getNetworkSummaryYearlyGraph: e.query({
              query: (e) =>
                "/network-summary/get-network-summary-graph-month-year?year=".concat(
                  e,
                  "&month=0&date=0"
                ),
            }),
            getNetworkSummaryMonthlyGraph: e.query({
              query: (e) => {
                let { month: t, year: n } = e;
                return "/network-summary/get-network-summary-graph-month-year?year="
                  .concat(n, "&month=")
                  .concat(t, "&date=0");
              },
            }),
            getNetworkSummaryWeeklyGraph: e.query({
              query: (e) => {
                let { date: t, month: n, year: i } = e;
                return "/network-summary/get-network-summary-graph-month-year?year="
                  .concat(i, "&month=")
                  .concat(n, "&date=")
                  .concat(t);
              },
            }),
            getNetworkSummaryTrend: e.query({
              query: (e) => {
                let { date: t, month: n, year: i } = e;
                return "/network-summary/get-network-summary-trend-month-year?year="
                  .concat(i, "&month=")
                  .concat(n, "&date=")
                  .concat(t);
              },
            }),
            getResourcesLeasedYearlyGraph: e.query({
              query: (e) =>
                "/resources-leased/get-resources-leased-graph-month-year?year=".concat(
                  e,
                  "&month=0&date=0"
                ),
            }),
            getResourcesLeasedMonthlyGraph: e.query({
              query: (e) => {
                let { month: t, year: n } = e;
                return "/resources-leased/get-resources-leased-graph-month-year?year="
                  .concat(n, "&month=")
                  .concat(t, "&date=0");
              },
            }),
            getResourcesLeasedWeeklyGraph: e.query({
              query: (e) => {
                let { date: t, month: n, year: i } = e;
                return "/resources-leased/get-resources-leased-graph-month-year?year="
                  .concat(i, "&month=")
                  .concat(n, "&date=")
                  .concat(t);
              },
            }),
            getResourcesLeasedTrend: e.query({
              query: (e) => {
                let { date: t, month: n, year: i } = e;
                return "/resources-leased/get-resources-leased-trend-month-year?year="
                  .concat(i, "&month=")
                  .concat(n, "&date=")
                  .concat(t);
              },
            }),
          }),
        }),
        {
          useGetNetworkSummaryQuery: qA,
          useGetResourcesLeasedQuery: ZA,
          useGetNetworkCapacityQuery: QA,
          useGetClusterQuery: $A,
          useGetClusterGraphQuery: JA,
          useGetNetworkCapacityYearlyGraphQuery: eC,
          useGetNetworkCapacityMonthlyGraphQuery: tC,
          useGetNetworkCapacityWeeklyGraphQuery: nC,
          useGetNetworkSummaryYearlyGraphQuery: iC,
          useGetNetworkSummaryMonthlyGraphQuery: oC,
          useGetNetworkSummaryWeeklyGraphQuery: aC,
          useGetResourcesLeasedYearlyGraphQuery: sC,
          useGetResourcesLeasedMonthlyGraphQuery: rC,
          useGetResourcesLeasedWeeklyGraphQuery: lC,
          useGetNetworkCapacityTrendQuery: cC,
          useGetNetworkSummaryTrendQuery: uC,
          useGetResourcesLeasedTrendQuery: dC,
        } = KA;
      var hC = n(6559);
      const pC = () => {
          var e, n, i, o, a, s, r, l;
          const [c, u] = (0, t.useState)(null),
            [d, h] = (0, t.useState)([]),
            [p, f] = (0, t.useState)({}),
            [g, m] = (0, t.useState)(7),
            v = Ol("(max-width:900px)"),
            b = new Date().getFullYear(),
            x = new Date().getMonth() + 1,
            [y, w] = (0, t.useState)(x),
            [S, k] = (0, t.useState)(b),
            A = Date.now(),
            C = new Date(A).getDate(),
            [M, P] = (0, t.useState)(C),
            [E, L] = (0, t.useState)(!1),
            T = {
              "Active Providers": "activeProviders",
              "CPU Capacity": "CPUCapacity",
              "GPU Capacity": "GPUCapacity",
              "Memory Capacity": "memoryCapacity",
              "Disk Storage Capacity": "diskStorageCapacity",
            },
            { data: O, isLoading: R, error: I } = QA(),
            {
              data: N,
              isLoading: _,
              error: D,
            } = cC(
              { date: M, month: y, year: S },
              { refetchOnMountOrArgChange: !0 }
            ),
            z = eC(S, { refetchOnMountOrArgChange: !0 }),
            j = tC({ month: y, year: S }, { refetchOnMountOrArgChange: !0 }),
            B = nC(
              { date: M, month: y, year: S },
              { refetchOnMountOrArgChange: !0 }
            );
          let F, W, H;
          if (
            (g > 30
              ? ((F = E ? j.data : z.data),
                (W = E ? j.isLoading : z.isLoading),
                (H = E ? j.error : z.error))
              : 30 === g
              ? ((F = j.data), (W = j.isLoading), (H = j.error))
              : 7 === g && ((F = B.data), (W = B.isLoading), (H = B.error)),
            (0, t.useEffect)(() => {
              if (O) {
                const { payload: e } = O;
                h([
                  {
                    name: "Active Providers",
                    value: e.activeProviders,
                    trend: e.activeProvidersPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.activeProvidersPercentage
                    ).toFixed(2),
                    boxShadeNumber: 1,
                    infoIconText:
                      "This is the number of currently active providers on the network",
                  },
                  {
                    name: "CPU Capacity",
                    value: e.CPUCapacity.toFixed(2),
                    trend: e.CPUCapacityPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.CPUCapacityPercentage).toFixed(
                      2
                    ),
                    boxShadeNumber: 1,
                    textWithValue: "CPU",
                  },
                  {
                    name: "GPU Capacity",
                    value: e.GPUCapacity.toFixed(2),
                    trend: e.GPUCapacityPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.GPUCapacityPercentage).toFixed(
                      2
                    ),
                    boxShadeNumber: 1,
                    textWithValue: "GPU",
                  },
                  {
                    name: "Memory Capacity",
                    value: e.memoryCapacity.toFixed(2),
                    trend: e.memoryCapacityPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.memoryCapacityPercentage
                    ).toFixed(2),
                    boxShadeNumber: 1,
                    textWithValue: "GB",
                  },
                  {
                    name: "Disk Storage Capacity",
                    value: e.diskStorageCapacity.toFixed(2),
                    trend: e.diskStorageCapacityPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.diskStorageCapacityPercentage
                    ).toFixed(2),
                    boxShadeNumber: 1,
                    textWithValue: "GB",
                  },
                ]);
              }
            }, [O]),
            (0, t.useEffect)(() => {
              if (F) {
                const e = [...F.payload].reduce(
                  (e, t) => (
                    (e.activeProviders = e.activeProviders || []),
                    (e.CPUCapacity = e.CPUCapacity || []),
                    (e.GPUCapacity = e.GPUCapacity || []),
                    (e.memoryCapacity = e.memoryCapacity || []),
                    (e.diskStorageCapacity = e.diskStorageCapacity || []),
                    (e.dayBasedTimestamp = e.dayBasedTimestamp || []),
                    e.activeProviders.push(t.activeProviders),
                    e.CPUCapacity.push(t.CPUCapacity),
                    e.GPUCapacity.push(t.GPUCapacity),
                    e.memoryCapacity.push(t.memoryCapacity),
                    e.diskStorageCapacity.push(t.diskStorageCapacity),
                    e.dayBasedTimestamp.push(t.dayBasedTimestamp),
                    (e._id = e._id || []),
                    e._id.push(t._id),
                    e
                  ),
                  {}
                );
                f(e);
              }
            }, [F, g]),
            (0, t.useEffect)(() => {
              null !== c && (m(7), k(b), w(x), P(C), L(!1));
            }, [c]),
            R || W || _)
          )
            return (0, js.jsx)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                height: "50vh",
                textAlign: "center",
              },
              children: (0, js.jsx)(cf, {
                sx: { fontSize: 100, color: "#fff" },
              }),
            });
          if (I || H || D)
            return (0, js.jsxs)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                height: "50vh",
                textAlign: "center",
              },
              children: [
                (0, js.jsx)(hC.A, { sx: { fontSize: 60, color: "orange" } }),
                (0, js.jsx)(vu, {
                  sx: {
                    mt: 2,
                    fontSize: v ? "16px" : "24px",
                    fontFamily: "Roboto",
                    fontWeight: 600,
                  },
                  children: "Unable to load data. Please wait and try again.",
                }),
              ],
            });
          const G = (e) => {
              c !== e && u(e);
            },
            V = () =>
              (0, js.jsx)("div", {
                style: {
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                },
                children: (0, js.jsx)(Ef, {
                  container: !0,
                  spacing: 2,
                  justifyContent: "flex-start",
                  sx: { maxWidth: "1200px", marginTop: "24px" },
                  children: d.map((e, t) =>
                    (0, js.jsx)(
                      Ef,
                      {
                        item: !0,
                        md: 6,
                        sm: 12,
                        xs: 12,
                        sx: { display: "flex", justifyContent: "center" },
                        children: (0, js.jsx)(
                          vm,
                          {
                            name: e.name,
                            value: e.value,
                            trend: e.trend,
                            trendPercentage: e.trendPercentage,
                            boxShadeNumber: e.boxShadeNumber,
                            isActive: c === t,
                            toggleGraphView: () => G(t),
                            textWithValue: e.textWithValue,
                            infoIconText: e.infoIconText,
                          },
                          t
                        ),
                      },
                      t
                    )
                  ),
                }),
              });
          return (0, js.jsx)(Hl, {
            children:
              null === c
                ? V()
                : (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: v ? "column" : "row",
                      gap: "20px",
                      justifyContent: "center",
                      alignItems: "center",
                    },
                    children: [
                      v
                        ? V()
                        : (0, js.jsx)(Hl, {
                            sx: {
                              backgroundImage: "url(".concat(rd, ")"),
                              backgroundRepeat: "no-repeat",
                              borderRadius: "8px",
                              border: "1px solid rgba(255, 255, 255, 0.04)",
                              maxWidth: "557px",
                              width: "100%",
                              height: "630px",
                              backgroundSize: "cover",
                              backgroundPosition: "center",
                              overflowY: "auto",
                              padding: "22px 20px",
                              boxSizing: "border-box",
                              "&::-webkit-scrollbar": { width: "8px" },
                              "&::-webkit-scrollbar-track": {
                                backgroundColor: "transparent",
                                width: "4px",
                                border: "1px solid rgba(255, 255, 255, 0.08)",
                                marginBlock: "8px",
                                borderRadius: "4px",
                                paddingBlock: "2px",
                              },
                              "&::-webkit-scrollbar-thumb": {
                                borderRadius: "4px",
                                backgroundColor: "rgba(25, 26, 26, 1)",
                              },
                              "&::-webkit-scrollbar-thumb:hover": {
                                backgroundColor: "rgba(255, 255, 255, 0.3)",
                              },
                            },
                            children: (0, js.jsx)(Hl, {
                              sx: {
                                display: "flex",
                                flexDirection: "column",
                                gap: "22px",
                                marginTop: "0px",
                              },
                              children: d.map((e, t) =>
                                (0, js.jsx)(
                                  vm,
                                  {
                                    name: e.name,
                                    value: e.value,
                                    trend: e.trend,
                                    trendPercentage: e.trendPercentage,
                                    boxShadeNumber: e.boxShadeNumber,
                                    isActive: c === t,
                                    toggleGraphView: () => G(t),
                                    textWithValue: e.textWithValue,
                                    infoIconText: e.infoIconText,
                                  },
                                  t
                                )
                              ),
                            }),
                          }),
                      (0, js.jsx)(XA, {
                        statsData: {
                          name:
                            null === (e = d[c]) || void 0 === e
                              ? void 0
                              : e.name,
                          value:
                            null === (n = d[c]) || void 0 === n
                              ? void 0
                              : n.value,
                          trend:
                            (null === N ||
                            void 0 === N ||
                            null === (i = N.payload) ||
                            void 0 === i
                              ? void 0
                              : i.percentageChange[
                                  T[
                                    null === (o = d[c]) || void 0 === o
                                      ? void 0
                                      : o.name
                                  ]
                                ]) >= 0
                              ? "Up"
                              : "Down",
                          trendPercentage: Math.abs(
                            null === N ||
                              void 0 === N ||
                              null === (a = N.payload) ||
                              void 0 === a
                              ? void 0
                              : a.percentageChange[
                                  T[
                                    null === (s = d[c]) || void 0 === s
                                      ? void 0
                                      : s.name
                                  ]
                                ].toFixed(2)
                          ),
                          textWithValue:
                            null === (r = d[c]) || void 0 === r
                              ? void 0
                              : r.textWithValue,
                        },
                        timelineData: p.dayBasedTimestamp,
                        graphData:
                          p[
                            T[
                              null === (l = d[c]) || void 0 === l
                                ? void 0
                                : l.name
                            ]
                          ] || [],
                        onTimeRangeChange: m,
                        onYearChange: k,
                        onMonthChange: w,
                        onDateChange: P,
                        onMonthSelectedInYearlyView: L,
                        datesObjArray: p._id,
                      }),
                    ],
                  }),
          });
        },
        fC = () => {
          var e, n, i, o, a, s, r, l;
          const [c, u] = (0, t.useState)(null),
            [d, h] = (0, t.useState)([]),
            p = Ol("(max-width:900px)"),
            [f, g] = (0, t.useState)(7),
            [m, v] = (0, t.useState)({}),
            b = {
              "Daily USD Spent": "dailyUsdSpend",
              "Total USD Spent": "totalUsdSpend",
              "Daily new Leases": "dailyNewLeases",
              "Total Leases": "totalLeases",
            },
            x = new Date().getFullYear(),
            y = new Date().getMonth() + 1,
            [w, S] = (0, t.useState)(y),
            [k, A] = (0, t.useState)(x),
            C = Date.now(),
            M = new Date(C).getDate(),
            [P, E] = (0, t.useState)(M),
            [L, T] = (0, t.useState)(!1),
            { data: O, isLoading: R, error: I } = qA(),
            {
              data: N,
              isLoading: _,
              error: D,
            } = uC(
              { date: P, month: w, year: k },
              { refetchOnMountOrArgChange: !0 }
            ),
            z = iC(k, { refetchOnMountOrArgChange: !0 }),
            j = oC({ month: w, year: k }, { refetchOnMountOrArgChange: !0 }),
            B = aC(
              { date: P, month: w, year: k },
              { refetchOnMountOrArgChange: !0 }
            );
          let F, W, H;
          if (
            (f > 30
              ? ((F = L ? j.data : z.data),
                (W = L ? j.isLoading : z.isLoading),
                (H = L ? j.error : z.error))
              : 30 === f
              ? ((F = j.data), (W = j.isLoading), (H = j.error))
              : 7 === f && ((F = B.data), (W = B.isLoading), (H = B.error)),
            (0, t.useEffect)(() => {
              if (O) {
                const { payload: e } = O;
                h([
                  {
                    name: "Daily USD Spent",
                    value: e.dailyUsdSpend,
                    trend: e.dailyUsdSpendPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.dailyUsdSpendPercentage
                    ).toFixed(2),
                    boxShadeNumber: 1,
                    infoIconText: "Amount spent in the last 24h",
                  },
                  {
                    name: "Total USD Spent",
                    value: e.totalUsdSpend,
                    trend: e.totalUsdSpendPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.totalUsdSpendPercentage
                    ).toFixed(2),
                    boxShadeNumber: 2,
                    infoIconText:
                      "This is the total amount of USD spent to rent out computing power on Dojo Compute since the beginning of the network",
                  },
                  {
                    name: "Daily new Leases",
                    value: e.dailyNewLeases,
                    trend: e.dailyNewLeasesPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.dailyNewLeasesPercentage
                    ).toFixed(2),
                    boxShadeNumber: 2,
                    infoIconText: "Last 24hours",
                  },
                  {
                    name: "Total Leases",
                    value: e.totalLeases,
                    trend: e.totalLeasesPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.totalLeasesPercentage).toFixed(
                      2
                    ),
                    boxShadeNumber: 2,
                    infoIconText:
                      "This is the total number of leases that were live at some point and that someone paid for - includes test and temporary deployments",
                  },
                ]);
              }
            }, [O]),
            (0, t.useEffect)(() => {
              if (F) {
                const e = [...F.payload].reduce(
                  (e, t) => (
                    (e.dailyUsdSpend = e.dailyUsdSpend || []),
                    (e.totalUsdSpend = e.totalUsdSpend || []),
                    (e.dailyNewLeases = e.dailyNewLeases || []),
                    (e.totalLeases = e.totalLeases || []),
                    (e.dayBasedTimestamp = e.dayBasedTimestamp || []),
                    e.dailyUsdSpend.push(t.dailyUsdSpend),
                    e.totalUsdSpend.push(t.totalUsdSpend),
                    e.dailyNewLeases.push(t.dailyNewLeases),
                    e.totalLeases.push(t.totalLeases),
                    e.dayBasedTimestamp.push(t.dayBasedTimestamp),
                    (e._id = e._id || []),
                    e._id.push(t._id),
                    e
                  ),
                  {}
                );
                v(e);
              }
            }, [F, f]),
            (0, t.useEffect)(() => {
              null !== c && (g(7), A(x), S(y), E(M), T(!1));
            }, [c]),
            R || W || _)
          )
            return (0, js.jsx)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                height: "50vh",
                textAlign: "center",
              },
              children: (0, js.jsx)(cf, {
                sx: { fontSize: 100, color: "#fff" },
              }),
            });
          if (I || H || D)
            return (0, js.jsxs)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                height: "50vh",
                textAlign: "center",
              },
              children: [
                (0, js.jsx)(hC.A, { sx: { fontSize: 60, color: "orange" } }),
                (0, js.jsx)(vu, {
                  sx: {
                    mt: 2,
                    fontSize: p ? "16px" : "24px",
                    fontFamily: "Roboto",
                    fontWeight: 600,
                  },
                  children: "Unable to load data. Please wait and try again.",
                }),
              ],
            });
          const G = (e) => {
              c !== e && u(e);
            },
            V = () =>
              (0, js.jsx)("div", {
                style: {
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                },
                children: (0, js.jsx)(Ef, {
                  container: !0,
                  spacing: 2,
                  justifyContent: "flex-start",
                  sx: { maxWidth: "1200px", marginTop: "24px" },
                  children: d.map((e, t) =>
                    (0, js.jsx)(
                      Ef,
                      {
                        item: !0,
                        md: 6,
                        sm: 12,
                        xs: 12,
                        sx: { display: "flex", justifyContent: "center" },
                        children: (0, js.jsx)(
                          vm,
                          {
                            name: e.name,
                            value: e.value,
                            trend: e.trend,
                            trendPercentage: e.trendPercentage,
                            boxShadeNumber: e.boxShadeNumber,
                            isActive: c === t,
                            toggleGraphView: () => G(t),
                            infoIconText: e.infoIconText,
                          },
                          t
                        ),
                      },
                      t
                    )
                  ),
                }),
              });
          return (0, js.jsx)(Hl, {
            children:
              null === c
                ? V()
                : (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: p ? "column" : "row",
                      gap: "20px",
                      justifyContent: "center",
                      alignItems: "center",
                    },
                    children: [
                      p
                        ? V()
                        : (0, js.jsx)(Hl, {
                            sx: {
                              backgroundImage: "url(".concat(rd, ")"),
                              backgroundRepeat: "no-repeat",
                              paddingX: "20px",
                              borderRadius: "8px",
                              border: "1px solid rgba(255, 255, 255, 0.04)",
                              maxWidth: "557px",
                              width: "100%",
                              height: "630px",
                              backgroundSize: "cover",
                              backgroundPosition: "center",
                              display: "flex",
                              flexDirection: "column",
                              gap: "16px",
                              justifyContent: "center",
                              alignItems: "center",
                            },
                            id: "".concat(
                              null === (e = d[c]) || void 0 === e
                                ? void 0
                                : e.name,
                              "-box"
                            ),
                            children: d.map((e, t) =>
                              (0, js.jsx)(
                                vm,
                                {
                                  name: e.name,
                                  value: e.value,
                                  trend: e.trend,
                                  trendPercentage: e.trendPercentage,
                                  boxShadeNumber: e.boxShadeNumber,
                                  isActive: c === t,
                                  toggleGraphView: () => G(t),
                                  infoIconText: e.infoIconText,
                                },
                                t
                              )
                            ),
                          }),
                      (0, js.jsx)(XA, {
                        statsData: {
                          name:
                            null === (n = d[c]) || void 0 === n
                              ? void 0
                              : n.name,
                          value:
                            null === (i = d[c]) || void 0 === i
                              ? void 0
                              : i.value,
                          trend:
                            (null === N ||
                            void 0 === N ||
                            null === (o = N.payload) ||
                            void 0 === o
                              ? void 0
                              : o.percentageChange[
                                  b[
                                    null === (a = d[c]) || void 0 === a
                                      ? void 0
                                      : a.name
                                  ]
                                ]) >= 0
                              ? "Up"
                              : "Down",
                          trendPercentage: Math.abs(
                            null === N ||
                              void 0 === N ||
                              null === (s = N.payload) ||
                              void 0 === s
                              ? void 0
                              : s.percentageChange[
                                  b[
                                    null === (r = d[c]) || void 0 === r
                                      ? void 0
                                      : r.name
                                  ]
                                ].toFixed(2)
                          ),
                        },
                        timelineData: m.dayBasedTimestamp,
                        graphData:
                          m[
                            b[
                              null === (l = d[c]) || void 0 === l
                                ? void 0
                                : l.name
                            ]
                          ] || [],
                        onTimeRangeChange: g,
                        onYearChange: A,
                        onMonthChange: S,
                        onDateChange: E,
                        onMonthSelectedInYearlyView: T,
                        datesObjArray: m._id,
                      }),
                    ],
                  }),
          });
        },
        gC = () => {
          var e, n, i, o, a, s, r, l;
          const [c, u] = (0, t.useState)(null),
            [d, h] = (0, t.useState)([]),
            [p, f] = (0, t.useState)({}),
            [g, m] = (0, t.useState)(7),
            v = Ol("(max-width:900px)"),
            b = new Date().getFullYear(),
            x = new Date().getMonth() + 1,
            [y, w] = (0, t.useState)(x),
            [S, k] = (0, t.useState)(b),
            A = Date.now(),
            C = new Date(A).getDate(),
            [M, P] = (0, t.useState)(C),
            [E, L] = (0, t.useState)(!1),
            { data: T, isLoading: O, error: R } = ZA(),
            {
              data: I,
              isLoading: N,
              error: _,
            } = dC(
              { date: M, month: y, year: S },
              { refetchOnMountOrArgChange: !0 }
            ),
            D = sC(S, { refetchOnMountOrArgChange: !0 }),
            z = rC({ month: y, year: S }, { refetchOnMountOrArgChange: !0 }),
            j = lC(
              { date: M, month: y, year: S },
              { refetchOnMountOrArgChange: !0 }
            );
          let B, F, W;
          g > 30
            ? ((B = E ? z.data : D.data),
              (F = E ? z.isLoading : D.isLoading),
              (W = E ? z.error : D.error))
            : 30 === g
            ? ((B = z.data), (F = z.isLoading), (W = z.error))
            : 7 === g && ((B = j.data), (F = j.isLoading), (W = j.error));
          const H = {
            "Active Leases": "activeLeases",
            "CPU Leased": "CPULeased",
            "GPU Leased": "GPULeased",
            "Memory Leased": "memoryLeased",
            "Disk Storage Leased": "diskStorageLeased",
          };
          if (
            ((0, t.useEffect)(() => {
              if (T) {
                const { payload: e } = T;
                h([
                  {
                    name: "Active Leases",
                    value: Number(e.activeLeases).toFixed(2),
                    trend: e.activeLeasesPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.activeLeasesPercentage).toFixed(
                      2
                    ),
                    boxShadeNumber: 1,
                    infoIconText:
                      "This is the number of currently active leases on the network",
                  },
                  {
                    name: "CPU Leased",
                    value: Number(e.CPULeased).toFixed(2),
                    trend: e.CPULeasedPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.CPULeasedPercentage).toFixed(2),
                    boxShadeNumber: 1,
                    textWithValue: "CPU",
                  },
                  {
                    name: "GPU Leased",
                    value: Number(e.GPULeased).toFixed(2),
                    trend: e.GPULeasedPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.GPULeasedPercentage).toFixed(2),
                    boxShadeNumber: 1,
                    textWithValue: "GPU",
                  },
                  {
                    name: "Memory Leased",
                    value: Number(e.memoryLeased).toFixed(3),
                    trend: e.memoryLeasedPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(e.memoryLeasedPercentage).toFixed(
                      2
                    ),
                    boxShadeNumber: 1,
                    textWithValue: "GB",
                  },
                  {
                    name: "Disk Storage Leased",
                    value: Number(e.diskStorageLeased).toFixed(3),
                    trend: e.diskStorageLeasedPercentage >= 0 ? "Up" : "Down",
                    trendPercentage: Math.abs(
                      e.diskStorageLeasedPercentage
                    ).toFixed(2),
                    boxShadeNumber: 1,
                    textWithValue: "GB",
                  },
                ]);
              }
            }, [T]),
            (0, t.useEffect)(() => {
              if (B) {
                const e = [...B.payload].reduce(
                  (e, t) => (
                    (e.activeLeases = e.activeLeases || []),
                    (e.CPULeased = e.CPULeased || []),
                    (e.GPULeased = e.GPULeased || []),
                    (e.memoryLeased = e.memoryLeased || []),
                    (e.diskStorageLeased = e.diskStorageLeased || []),
                    (e.dayBasedTimestamp = e.dayBasedTimestamp || []),
                    e.activeLeases.push(t.activeLeases),
                    e.CPULeased.push(t.CPULeased),
                    e.GPULeased.push(t.GPULeased),
                    e.memoryLeased.push(t.memoryLeased),
                    e.diskStorageLeased.push(t.diskStorageLeased),
                    e.dayBasedTimestamp.push(t.dayBasedTimestamp),
                    (e._id = e._id || []),
                    e._id.push(t._id),
                    e
                  ),
                  {}
                );
                f(e);
              }
            }, [B, g]),
            (0, t.useEffect)(() => {
              null !== c && (m(7), k(b), w(x), P(C), L(!1));
            }, [c]),
            O || F || N)
          )
            return (0, js.jsx)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                height: "50vh",
                textAlign: "center",
              },
              children: (0, js.jsx)(cf, {
                sx: { fontSize: 100, color: "#fff" },
              }),
            });
          if (R || W || _)
            return (0, js.jsxs)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                height: "50vh",
                textAlign: "center",
              },
              children: [
                (0, js.jsx)(hC.A, { sx: { fontSize: 60, color: "orange" } }),
                (0, js.jsx)(vu, {
                  sx: {
                    mt: 2,
                    fontSize: v ? "16px" : "24px",
                    fontFamily: "Roboto",
                    fontWeight: 600,
                  },
                  children: "Unable to load data. Please wait and try again.",
                }),
              ],
            });
          const G = (e) => {
              c !== e && u(e);
            },
            V = () =>
              (0, js.jsx)("div", {
                style: {
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                },
                children: (0, js.jsx)(Ef, {
                  container: !0,
                  spacing: 2,
                  justifyContent: "flex-start",
                  sx: { maxWidth: "1200px", marginTop: "24px" },
                  children: d.map((e, t) =>
                    (0, js.jsx)(
                      Ef,
                      {
                        item: !0,
                        md: 6,
                        sm: 12,
                        xs: 12,
                        sx: { display: "flex", justifyContent: "center" },
                        children: (0, js.jsx)(
                          vm,
                          {
                            name: e.name,
                            value: e.value,
                            trend: e.trend,
                            trendPercentage: e.trendPercentage,
                            boxShadeNumber: e.boxShadeNumber,
                            isActive: c === t,
                            toggleGraphView: () => G(t),
                            textWithValue: e.textWithValue,
                            infoIconText: e.infoIconText,
                          },
                          t
                        ),
                      },
                      t
                    )
                  ),
                }),
              });
          return (0, js.jsx)(Hl, {
            children:
              null === c
                ? V()
                : (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: v ? "column" : "row",
                      gap: "20px",
                      justifyContent: "center",
                      alignItems: "center",
                    },
                    children: [
                      v
                        ? V()
                        : (0, js.jsx)(Hl, {
                            sx: {
                              backgroundImage: "url(".concat(rd, ")"),
                              backgroundRepeat: "no-repeat",
                              borderRadius: "8px",
                              border: "1px solid rgba(255, 255, 255, 0.04)",
                              maxWidth: "557px",
                              width: "100%",
                              height: "630px",
                              backgroundSize: "cover",
                              backgroundPosition: "center",
                              overflowY: "auto",
                              padding: "22px 20px",
                              boxSizing: "border-box",
                              "&::-webkit-scrollbar": { width: "8px" },
                              "&::-webkit-scrollbar-track": {
                                backgroundColor: "transparent",
                                width: "4px",
                                border: "1px solid rgba(255, 255, 255, 0.08)",
                                marginBlock: "8px",
                                borderRadius: "4px",
                                paddingBlock: "2px",
                              },
                              "&::-webkit-scrollbar-thumb": {
                                borderRadius: "4px",
                                backgroundColor: "rgba(25, 26, 26, 1)",
                              },
                              "&::-webkit-scrollbar-thumb:hover": {
                                backgroundColor: "rgba(255, 255, 255, 0.3)",
                              },
                            },
                            children: (0, js.jsx)(Hl, {
                              sx: {
                                display: "flex",
                                flexDirection: "column",
                                gap: "22px",
                                marginTop: "0px",
                              },
                              children: d.map((e, t) =>
                                (0, js.jsx)(
                                  vm,
                                  {
                                    name: e.name,
                                    value: e.value,
                                    trend: e.trend,
                                    trendPercentage: e.trendPercentage,
                                    boxShadeNumber: e.boxShadeNumber,
                                    isActive: c === t,
                                    toggleGraphView: () => G(t),
                                    textWithValue: e.textWithValue,
                                    infoIconText: e.infoIconText,
                                  },
                                  t
                                )
                              ),
                            }),
                          }),
                      (0, js.jsx)(XA, {
                        statsData: {
                          name:
                            null === (e = d[c]) || void 0 === e
                              ? void 0
                              : e.name,
                          value:
                            null === (n = d[c]) || void 0 === n
                              ? void 0
                              : n.value,
                          trend:
                            (null === I ||
                            void 0 === I ||
                            null === (i = I.payload) ||
                            void 0 === i
                              ? void 0
                              : i.percentageChange[
                                  H[
                                    null === (o = d[c]) || void 0 === o
                                      ? void 0
                                      : o.name
                                  ]
                                ]) >= 0
                              ? "Up"
                              : "Down",
                          trendPercentage: Math.abs(
                            null === I ||
                              void 0 === I ||
                              null === (a = I.payload) ||
                              void 0 === a
                              ? void 0
                              : a.percentageChange[
                                  H[
                                    null === (s = d[c]) || void 0 === s
                                      ? void 0
                                      : s.name
                                  ]
                                ].toFixed(2)
                          ),
                          textWithValue:
                            null === (r = d[c]) || void 0 === r
                              ? void 0
                              : r.textWithValue,
                        },
                        timelineData: p.dayBasedTimestamp,
                        graphData:
                          p[
                            H[
                              null === (l = d[c]) || void 0 === l
                                ? void 0
                                : l.name
                            ]
                          ] || [],
                        onTimeRangeChange: m,
                        onYearChange: k,
                        onMonthChange: w,
                        onDateChange: P,
                        onMonthSelectedInYearlyView: L,
                        datesObjArray: p._id,
                      }),
                    ],
                  }),
          });
        },
        mC = (e) => {
          let { handleTabChange: t, tab: n } = e;
          const i = Ol("(max-width:410px)"),
            o = Ol("(max-width:350px)"),
            a = {
              cursor: "pointer",
              margin: i ? "12px 10px" : "12px 24px",
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              padding: "10px",
              borderRadius: "8px",
              flex: "none",
              "&:hover": { backgroundColor: "#5f616540" },
            };
          return (0, js.jsx)(Ef, {
            container: !0,
            sx: {
              display: "inline-flex",
              padding: "2px",
              justifyContent: "center",
            },
            children: [
              "Network Summary",
              "Resources Leased",
              "Network Capacity",
            ].map((e, i) =>
              (0, js.jsx)(
                Ef,
                {
                  item: !0,
                  onClick: () => t(i),
                  sx: {
                    ...a,
                    ...(n === i
                      ? { color: "rgba(255, 255, 255, 1)" }
                      : { color: "rgba(255, 255, 255, 0.8)" }),
                  },
                  children: (0, js.jsx)(vu, {
                    fontSize: o ? "12px" : "18px",
                    fontWeight: 500,
                    lineHeight: "30px",
                    fontFamily: "Roboto",
                    sx: {
                      borderBottom:
                        n === i ? "1px solid rgba(255, 255, 255, 0.2)" : "none",
                    },
                    children: e,
                  }),
                },
                e
              )
            ),
          });
        },
        vC = () => {
          const [e, n] = (0, t.useState)(0);
          return (0, js.jsxs)(Hl, {
            sx: { width: "100%" },
            children: [
              (0, js.jsx)(mC, {
                handleTabChange: (e) => {
                  n(e);
                },
                tab: e,
              }),
              (0, js.jsxs)(Hl, {
                sx: { p: 3 },
                children: [
                  0 === e && (0, js.jsx)(fC, {}),
                  1 === e && (0, js.jsx)(gC, {}),
                  2 === e && (0, js.jsx)(pC, {}),
                ],
              }),
            ],
          });
        },
        bC = (e) => {
          let { style: t = {} } = e;
          return (0, js.jsx)("div", { className: "divider", style: { ...t } });
        },
        xC = (e) => {
          let {
            title1: t,
            title2: n,
            value1: i,
            value2: o,
            title3: a,
            title4: s,
            title5: r,
            title6: l,
            value3: c,
            value4: u,
            value5: d,
            value6: h,
          } = e;
          return (0, js.jsxs)(js.Fragment, {
            children: [
              (0, js.jsxs)(
                "div",
                {
                  className: "home-stats-sub-box",
                  children: [
                    (0, js.jsxs)(
                      "div",
                      {
                        className: "test",
                        children: [
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h3", {
                              className: "worker-title",
                              children: t,
                            }),
                          }),
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h1", {
                              className: "worker-stats-value",
                              children: i,
                            }),
                          }),
                        ],
                      },
                      t
                    ),
                    (0, js.jsxs)(
                      "div",
                      {
                        className: "test2",
                        children: [
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h3", {
                              className: "worker-title",
                              children: n,
                            }),
                          }),
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h1", {
                              className: "worker-stats-value",
                              children: o,
                            }),
                          }),
                        ],
                      },
                      n
                    ),
                  ],
                },
                t
              ),
              (0, js.jsx)(bC, {}),
              (0, js.jsxs)(
                "div",
                {
                  className: "home-stats-sub-box",
                  children: [
                    (0, js.jsxs)(
                      "div",
                      {
                        className: "test",
                        children: [
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h3", {
                              className: "worker-title",
                              children: a,
                            }),
                          }),
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h1", {
                              className: "worker-stats-value",
                              children: c,
                            }),
                          }),
                        ],
                      },
                      a
                    ),
                    (0, js.jsxs)(
                      "div",
                      {
                        className: "test2",
                        children: [
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h3", {
                              className: "worker-title",
                              children: s,
                            }),
                          }),
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h1", {
                              className: "worker-stats-value",
                              children: u,
                            }),
                          }),
                        ],
                      },
                      s
                    ),
                  ],
                },
                t
              ),
              (0, js.jsx)(bC, {}),
              (0, js.jsxs)(
                "div",
                {
                  className: "home-stats-sub-box",
                  children: [
                    (0, js.jsxs)(
                      "div",
                      {
                        className: "test",
                        children: [
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h3", {
                              className: "worker-title",
                              children: r,
                            }),
                          }),
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h1", {
                              className: "worker-stats-value",
                              children: d,
                            }),
                          }),
                        ],
                      },
                      r
                    ),
                    (0, js.jsxs)(
                      "div",
                      {
                        className: "test2",
                        children: [
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h3", {
                              className: "worker-title",
                              children: l,
                            }),
                          }),
                          (0, js.jsx)("div", {
                            children: (0, js.jsx)("h1", {
                              className: "worker-stats-value",
                              children: h,
                            }),
                          }),
                        ],
                      },
                      l
                    ),
                  ],
                },
                r
              ),
            ],
          });
        },
        yC = () => {
          const { dojoPrice: e } = Ss((e) => e.user),
            { homeStats: t, loading: n } = Ss((e) => e.compute),
            {
              availableCpu: i,
              availableGpu: o,
              totalCpu: a,
              totalGpu: s,
              verifiedCpu: r,
              verifiedGpu: l,
            } = t;
          return (0, js.jsxs)("div", {
            className: "flex-row flex-col",
            style: { width: "100%" },
            children: [
              (0, js.jsxs)("div", {
                className: "home-price-box",
                style: {
                  backgroundImage: "url(".concat(ed, ")"),
                  backgroundSize: "cover",
                },
                children: [
                  (0, js.jsx)("div", {
                    children: (0, js.jsx)("p", {
                      className: "home-title",
                      color: "rgba(0, 220, 114, 1)",
                      children: "Price of $DOAI",
                    }),
                  }),
                  (0, js.jsxs)("h1", {
                    className: "worker-stats-value",
                    children: ["$", e.toString().slice(0, 6)],
                  }),
                ],
              }),
              (0, js.jsxs)("div", {
                className: "home-stats-box",
                style: {
                  backgroundImage: "url(".concat(cd, ")"),
                  backgroundSize: "cover",
                },
                children: [
                  (0, js.jsx)(xC, {
                    title1: "Total GPUs",
                    title2: "Total CPUs",
                    value1: s,
                    value2: a,
                    title3: "Verified GPUs",
                    title4: "Verified CPUs",
                    value3: l,
                    value4: r,
                    title5: "Available GPUs",
                    title6: "Available CPUs",
                    value5: o,
                    value6: i,
                  }),
                  (0, js.jsx)(bC, { style: { border: "none" } }),
                ],
              }),
            ],
          });
        },
        wC = () => {
          const {
            continent: e,
            data: t,
            gpu: n,
            cpu: i,
          } = Ss((e) => e.compute);
          return (0, js.jsxs)("div", {
            className: "cpu-stats-box",
            children: [
              (0, js.jsxs)("div", {
                className: "cpu-stats-header",
                children: [
                  (0, js.jsxs)("div", {
                    className: "flex-row tablet-row ",
                    children: [
                      (0, js.jsx)("img", {
                        src: dd,
                        alt: "",
                        style: { marginRight: 20 },
                      }),
                      (0, js.jsxs)("div", {
                        children: [
                          (0, js.jsx)(vu, {
                            color: "rgba(148, 152, 156, 1)",
                            fontSize: 16,
                            fontFamily: "Roboto",
                            children: "Map",
                          }),
                          (0, js.jsx)(vu, {
                            color: "rgba(229, 233, 236, 1)",
                            fontSize: 24,
                            fontFamily: "ProximaNovaBold",
                            fontWeight: 600,
                            children: e,
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, js.jsxs)("div", {
                    className: "flex-row tablet-row mr",
                    children: [
                      (0, js.jsx)("img", {
                        src: hd,
                        alt: "",
                        style: { marginRight: 20 },
                      }),
                      (0, js.jsxs)("div", {
                        children: [
                          (0, js.jsx)(vu, {
                            color: "rgba(148, 152, 156, 1)",
                            fontSize: 16,
                            fontFamily: "Roboto",
                            children: "Total GPUs/CPUs",
                          }),
                          (0, js.jsxs)(vu, {
                            color: "rgba(229, 233, 236, 1)",
                            fontSize: 24,
                            fontFamily: "ProximaNovaBold",
                            fontWeight: 600,
                            children: [
                              n[e.replace(" ", "")],
                              " /",
                              " ",
                              i[e.replace(" ", "")],
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              (0, js.jsx)("div", {
                className: "cpu-stats-data-box",
                children: Object.keys(t).map((e) =>
                  (0, js.jsxs)(
                    "div",
                    {
                      className: "flex-row",
                      children: [
                        (0, js.jsx)("div", {
                          className: "worker-title",
                          children: (0, js.jsx)(vu, {
                            fontFamily: "ProximaNovaLight",
                            fontSize: 18,
                            color: "rgba(209, 209, 209, 1)",
                            children: t[e].name,
                          }),
                        }),
                        (0, js.jsx)("div", {
                          className: "home-title",
                          children: (0, js.jsx)(vu, {
                            fontFamily: "ProximaNovaLight",
                            fontSize: 18,
                            color: "rgba(0, 220, 114, 1)",
                            children: t[e].value,
                          }),
                        }),
                      ],
                    },
                    t[e].name
                  )
                ),
              }),
            ],
          });
        };
      var SC = function (e, t) {
        return (
          (SC =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            }),
          SC(e, t)
        );
      };
      function kC(e, t) {
        if ("function" !== typeof t && null !== t)
          throw new TypeError(
            "Class extends value " + String(t) + " is not a constructor or null"
          );
        function n() {
          this.constructor = e;
        }
        SC(e, t),
          (e.prototype =
            null === t
              ? Object.create(t)
              : ((n.prototype = t.prototype), new n()));
      }
      var AC = function () {
        return (
          (AC =
            Object.assign ||
            function (e) {
              for (var t, n = 1, i = arguments.length; n < i; n++)
                for (var o in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
              return e;
            }),
          AC.apply(this, arguments)
        );
      };
      function CC(e, t) {
        var n = {};
        for (var i in e)
          Object.prototype.hasOwnProperty.call(e, i) &&
            t.indexOf(i) < 0 &&
            (n[i] = e[i]);
        if (null != e && "function" === typeof Object.getOwnPropertySymbols) {
          var o = 0;
          for (i = Object.getOwnPropertySymbols(e); o < i.length; o++)
            t.indexOf(i[o]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(e, i[o]) &&
              (n[i[o]] = e[i[o]]);
        }
        return n;
      }
      function MC(e, t, n, i) {
        return new (n || (n = Promise))(function (o, a) {
          function s(e) {
            try {
              l(i.next(e));
            } catch (nT) {
              a(nT);
            }
          }
          function r(e) {
            try {
              l(i.throw(e));
            } catch (nT) {
              a(nT);
            }
          }
          function l(e) {
            var t;
            e.done
              ? o(e.value)
              : ((t = e.value),
                t instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })).then(s, r);
          }
          l((i = i.apply(e, t || [])).next());
        });
      }
      function PC(e, t) {
        var n,
          i,
          o,
          a,
          s = {
            label: 0,
            sent: function () {
              if (1 & o[0]) throw o[1];
              return o[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (a = { next: r(0), throw: r(1), return: r(2) }),
          "function" === typeof Symbol &&
            (a[Symbol.iterator] = function () {
              return this;
            }),
          a
        );
        function r(a) {
          return function (r) {
            return (function (a) {
              if (n) throw new TypeError("Generator is already executing.");
              for (; s; )
                try {
                  if (
                    ((n = 1),
                    i &&
                      (o =
                        2 & a[0]
                          ? i.return
                          : a[0]
                          ? i.throw || ((o = i.return) && o.call(i), 0)
                          : i.next) &&
                      !(o = o.call(i, a[1])).done)
                  )
                    return o;
                  switch (((i = 0), o && (a = [2 & a[0], o.value]), a[0])) {
                    case 0:
                    case 1:
                      o = a;
                      break;
                    case 4:
                      return s.label++, { value: a[1], done: !1 };
                    case 5:
                      s.label++, (i = a[1]), (a = [0]);
                      continue;
                    case 7:
                      (a = s.ops.pop()), s.trys.pop();
                      continue;
                    default:
                      if (
                        !(o = (o = s.trys).length > 0 && o[o.length - 1]) &&
                        (6 === a[0] || 2 === a[0])
                      ) {
                        s = 0;
                        continue;
                      }
                      if (3 === a[0] && (!o || (a[1] > o[0] && a[1] < o[3]))) {
                        s.label = a[1];
                        break;
                      }
                      if (6 === a[0] && s.label < o[1]) {
                        (s.label = o[1]), (o = a);
                        break;
                      }
                      if (o && s.label < o[2]) {
                        (s.label = o[2]), s.ops.push(a);
                        break;
                      }
                      o[2] && s.ops.pop(), s.trys.pop();
                      continue;
                  }
                  a = t.call(e, s);
                } catch (nT) {
                  (a = [6, nT]), (i = 0);
                } finally {
                  n = o = 0;
                }
              if (5 & a[0]) throw a[1];
              return { value: a[0] ? a[1] : void 0, done: !0 };
            })([a, r]);
          };
        }
      }
      function EC(e) {
        return e &&
          e.__esModule &&
          Object.prototype.hasOwnProperty.call(e, "default")
          ? e.default
          : e;
      }
      var LC = EC(function (e, t, n, i, o, a, s, r) {
          if (!e) {
            var l;
            if (void 0 === t)
              l = new Error(
                "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
              );
            else {
              var c = [n, i, o, a, s, r],
                u = 0;
              (l = new Error(
                t.replace(/%s/g, function () {
                  return c[u++];
                })
              )).name = "Invariant Violation";
            }
            throw ((l.framesToPop = 1), l);
          }
        }),
        TC = (0, t.createContext)(null);
      function OC(e, t, n, i) {
        var o = {};
        return (
          (function (e, t) {
            Object.keys(e).forEach(function (n) {
              return t(e[n], n);
            });
          })(e, function (e, a) {
            var s = n[a];
            s !== t[a] && ((o[a] = s), e(i, s));
          }),
          o
        );
      }
      function RC(e, t, n) {
        var i = (function (e, t, n) {
          return Object.keys(e).reduce(function (n, i) {
            return t(n, e[i], i);
          }, n);
        })(
          n,
          function (n, i, o) {
            return (
              "function" === typeof e[o] &&
                n.push(google.maps.event.addListener(t, i, e[o])),
              n
            );
          },
          []
        );
        return i;
      }
      function IC(e) {
        google.maps.event.removeListener(e);
      }
      function NC(e) {
        void 0 === e && (e = []), e.forEach(IC);
      }
      function _C(e) {
        var t = e.updaterMap,
          n = e.eventMap,
          i = e.prevProps,
          o = e.nextProps,
          a = e.instance,
          s = RC(o, a, n);
        return OC(t, i, o, a), s;
      }
      var DC = {
          onDblClick: "dblclick",
          onDragEnd: "dragend",
          onDragStart: "dragstart",
          onMapTypeIdChanged: "maptypeid_changed",
          onMouseMove: "mousemove",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseDown: "mousedown",
          onMouseUp: "mouseup",
          onRightClick: "rightclick",
          onTilesLoaded: "tilesloaded",
          onBoundsChanged: "bounds_changed",
          onCenterChanged: "center_changed",
          onClick: "click",
          onDrag: "drag",
          onHeadingChanged: "heading_changed",
          onIdle: "idle",
          onProjectionChanged: "projection_changed",
          onResize: "resize",
          onTiltChanged: "tilt_changed",
          onZoomChanged: "zoom_changed",
        },
        zC = {
          extraMapTypes: function (e, t) {
            t.forEach(function (t, n) {
              e.mapTypes.set(String(n), t);
            });
          },
          center: function (e, t) {
            e.setCenter(t);
          },
          clickableIcons: function (e, t) {
            e.setClickableIcons(t);
          },
          heading: function (e, t) {
            e.setHeading(t);
          },
          mapTypeId: function (e, t) {
            e.setMapTypeId(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          streetView: function (e, t) {
            e.setStreetView(t);
          },
          tilt: function (e, t) {
            e.setTilt(t);
          },
          zoom: function (e, t) {
            e.setZoom(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.children,
          i = e.options,
          o = e.id,
          a = e.mapContainerStyle,
          s = e.mapContainerClassName,
          r = e.center,
          l = e.onClick,
          c = e.onDblClick,
          u = e.onDrag,
          d = e.onDragEnd,
          h = e.onDragStart,
          p = e.onMouseMove,
          f = e.onMouseOut,
          g = e.onMouseOver,
          m = e.onMouseDown,
          v = e.onMouseUp,
          b = e.onRightClick,
          x = e.onCenterChanged,
          y = e.onLoad,
          w = e.onUnmount,
          S = (0, t.useState)(null),
          k = S[0],
          A = S[1],
          C = (0, t.useRef)(null),
          M = (0, t.useState)(null),
          P = M[0],
          E = M[1],
          L = (0, t.useState)(null),
          T = L[0],
          O = L[1],
          R = (0, t.useState)(null),
          I = R[0],
          N = R[1],
          _ = (0, t.useState)(null),
          D = _[0],
          z = _[1],
          j = (0, t.useState)(null),
          B = j[0],
          F = j[1],
          W = (0, t.useState)(null),
          H = W[0],
          G = W[1],
          V = (0, t.useState)(null),
          U = V[0],
          Y = V[1],
          X = (0, t.useState)(null),
          K = X[0],
          q = X[1],
          Z = (0, t.useState)(null),
          Q = Z[0],
          $ = Z[1],
          J = (0, t.useState)(null),
          ee = J[0],
          te = J[1],
          ne = (0, t.useState)(null),
          ie = ne[0],
          oe = ne[1],
          ae = (0, t.useState)(null),
          se = ae[0],
          re = ae[1];
        return (
          (0, t.useEffect)(
            function () {
              i && null !== k && k.setOptions(i);
            },
            [k, i]
          ),
          (0, t.useEffect)(
            function () {
              null !== k && "undefined" !== typeof r && k.setCenter(r);
            },
            [k, r]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                c &&
                (null !== T && google.maps.event.removeListener(T),
                O(google.maps.event.addListener(k, "dblclick", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                d &&
                (null !== I && google.maps.event.removeListener(I),
                N(google.maps.event.addListener(k, "dragend", d)));
            },
            [d]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                h &&
                (null !== D && google.maps.event.removeListener(D),
                z(google.maps.event.addListener(k, "dragstart", h)));
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                m &&
                (null !== B && google.maps.event.removeListener(B),
                F(google.maps.event.addListener(k, "mousedown", m)));
            },
            [m]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                p &&
                (null !== H && google.maps.event.removeListener(H),
                G(google.maps.event.addListener(k, "mousemove", p)));
            },
            [p]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                f &&
                (null !== U && google.maps.event.removeListener(U),
                Y(google.maps.event.addListener(k, "mouseout", f)));
            },
            [f]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                g &&
                (null !== K && google.maps.event.removeListener(K),
                q(google.maps.event.addListener(k, "mouseover", g)));
            },
            [g]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                v &&
                (null !== Q && google.maps.event.removeListener(Q),
                $(google.maps.event.addListener(k, "mouseup", v)));
            },
            [v]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                b &&
                (null !== ee && google.maps.event.removeListener(ee),
                te(google.maps.event.addListener(k, "rightclick", b)));
            },
            [b]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                l &&
                (null !== ie && google.maps.event.removeListener(ie),
                oe(google.maps.event.addListener(k, "click", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                u &&
                (null !== se && google.maps.event.removeListener(se),
                re(google.maps.event.addListener(k, "drag", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                x &&
                (null !== P && google.maps.event.removeListener(P),
                E(google.maps.event.addListener(k, "center_changed", x)));
            },
            [l]
          ),
          (0, t.useEffect)(function () {
            var e =
              null === C.current ? null : new google.maps.Map(C.current, i);
            return (
              A(e),
              null !== e && y && y(e),
              function () {
                null !== e && w && w(e);
              }
            );
          }, []),
          (0, js.jsx)("div", {
            id: o,
            ref: C,
            style: a,
            className: s,
            children: (0, js.jsx)(TC.Provider, {
              value: k,
              children: null !== k ? n : null,
            }),
          })
        );
      });
      var jC = (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.state = { map: null }),
              (t.registeredEvents = []),
              (t.mapRef = null),
              (t.getInstance = function () {
                return null === t.mapRef
                  ? null
                  : new google.maps.Map(t.mapRef, t.props.options);
              }),
              (t.panTo = function (e) {
                var n = t.getInstance();
                n && n.panTo(e);
              }),
              (t.setMapCallback = function () {
                null !== t.state.map &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.map);
              }),
              (t.getRef = function (e) {
                t.mapRef = e;
              }),
              t
            );
          }
          return (
            kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = this.getInstance();
              (this.registeredEvents = _C({
                updaterMap: zC,
                eventMap: DC,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { map: e };
                }, this.setMapCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.map &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: zC,
                  eventMap: DC,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.map,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.map &&
                (this.props.onUnmount && this.props.onUnmount(this.state.map),
                NC(this.registeredEvents));
            }),
            (t.prototype.render = function () {
              return (0, js.jsx)("div", {
                id: this.props.id,
                ref: this.getRef,
                style: this.props.mapContainerStyle,
                className: this.props.mapContainerClassName,
                children: (0, js.jsx)(TC.Provider, {
                  value: this.state.map,
                  children:
                    null !== this.state.map ? this.props.children : null,
                }),
              });
            }),
            t
          );
        })(t.PureComponent),
        BC = "undefined" !== typeof document;
      function FC(e) {
        var t = e.url,
          n = e.id,
          i = e.nonce;
        return BC
          ? new Promise(function (e, o) {
              var a = document.getElementById(n),
                s = window;
              if (a) {
                var r = a.getAttribute("data-state");
                if (a.src === t && "error" !== r) {
                  if ("ready" === r) return e(n);
                  var l = s.initMap,
                    c = a.onerror;
                  return (
                    (s.initMap = function () {
                      l && l(), e(n);
                    }),
                    void (a.onerror = function (e) {
                      c && c(e), o(e);
                    })
                  );
                }
                a.remove();
              }
              var u = document.createElement("script");
              (u.type = "text/javascript"),
                (u.src = t),
                (u.id = n),
                (u.async = !0),
                (u.nonce = i || ""),
                (u.onerror = function (e) {
                  u.setAttribute("data-state", "error"), o(e);
                }),
                (s.initMap = function () {
                  u.setAttribute("data-state", "ready"), e(n);
                }),
                document.head.appendChild(u);
            }).catch(function (e) {
              throw (console.error("injectScript error: ", e), e);
            })
          : Promise.reject(new Error("document is undefined"));
      }
      function WC(e) {
        var t = e.href;
        return (
          !(
            !t ||
            (0 !==
              t.indexOf("https://fonts.googleapis.com/css?family=Roboto") &&
              0 !==
                t.indexOf(
                  "https://fonts.googleapis.com/css?family=Google+Sans+Text"
                ))
          ) ||
          ("style" === e.tagName.toLowerCase() &&
          e.styleSheet &&
          e.styleSheet.cssText &&
          0 === e.styleSheet.cssText.replace("\r\n", "").indexOf(".gm-style")
            ? ((e.styleSheet.cssText = ""), !0)
            : "style" === e.tagName.toLowerCase() &&
              e.innerHTML &&
              0 === e.innerHTML.replace("\r\n", "").indexOf(".gm-style")
            ? ((e.innerHTML = ""), !0)
            : "style" === e.tagName.toLowerCase() &&
              !e.styleSheet &&
              !e.innerHTML)
        );
      }
      function HC() {
        var e = document.getElementsByTagName("head")[0];
        if (e) {
          var t = e.insertBefore.bind(e);
          e.insertBefore = function (n, i) {
            return WC(n) || Reflect.apply(t, e, [n, i]), n;
          };
          var n = e.appendChild.bind(e);
          e.appendChild = function (t) {
            return WC(t) || Reflect.apply(n, e, [t]), t;
          };
        }
      }
      function GC(e) {
        var t = e.googleMapsApiKey,
          n = e.googleMapsClientId,
          i = e.version,
          o = void 0 === i ? "weekly" : i,
          a = e.language,
          s = e.region,
          r = e.libraries,
          l = e.channel,
          c = e.mapIds,
          u = e.authReferrerPolicy,
          d = [];
        return (
          LC(
            (t && n) || !(t && n),
            "You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time."
          ),
          t ? d.push("key=".concat(t)) : n && d.push("client=".concat(n)),
          o && d.push("v=".concat(o)),
          a && d.push("language=".concat(a)),
          s && d.push("region=".concat(s)),
          r && r.length && d.push("libraries=".concat(r.sort().join(","))),
          l && d.push("channel=".concat(l)),
          c && c.length && d.push("map_ids=".concat(c.join(","))),
          u && d.push("auth_referrer_policy=".concat(u)),
          d.push("callback=initMap"),
          "https://maps.googleapis.com/maps/api/js?".concat(d.join("&"))
        );
      }
      var VC = !1;
      function UC() {
        return (0, js.jsx)("div", { children: "Loading..." });
      }
      var YC,
        XC = { id: "script-loader", version: "weekly" };
      !(function (e) {
        function n() {
          var n = (null !== e && e.apply(this, arguments)) || this;
          return (
            (n.check = (0, t.createRef)()),
            (n.state = { loaded: !1 }),
            (n.cleanupCallback = function () {
              delete window.google.maps, n.injectScript();
            }),
            (n.isCleaningUp = function () {
              return MC(n, void 0, void 0, function () {
                function e(e) {
                  if (VC) {
                    if (BC)
                      var t = window.setInterval(function () {
                        VC || (window.clearInterval(t), e());
                      }, 1);
                  } else e();
                }
                return PC(this, function (t) {
                  return [2, new Promise(e)];
                });
              });
            }),
            (n.cleanup = function () {
              VC = !0;
              var e = document.getElementById(n.props.id);
              e && e.parentNode && e.parentNode.removeChild(e),
                Array.prototype.slice
                  .call(document.getElementsByTagName("script"))
                  .filter(function (e) {
                    return (
                      "string" === typeof e.src &&
                      e.src.includes("maps.googleapis")
                    );
                  })
                  .forEach(function (e) {
                    e.parentNode && e.parentNode.removeChild(e);
                  }),
                Array.prototype.slice
                  .call(document.getElementsByTagName("link"))
                  .filter(function (e) {
                    return (
                      "https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans" ===
                      e.href
                    );
                  })
                  .forEach(function (e) {
                    e.parentNode && e.parentNode.removeChild(e);
                  }),
                Array.prototype.slice
                  .call(document.getElementsByTagName("style"))
                  .filter(function (e) {
                    return (
                      void 0 !== e.innerText &&
                      e.innerText.length > 0 &&
                      e.innerText.includes(".gm-")
                    );
                  })
                  .forEach(function (e) {
                    e.parentNode && e.parentNode.removeChild(e);
                  });
            }),
            (n.injectScript = function () {
              n.props.preventGoogleFontsLoading && HC(),
                LC(
                  !!n.props.id,
                  'LoadScript requires "id" prop to be a string: %s',
                  n.props.id
                ),
                FC({ id: n.props.id, nonce: n.props.nonce, url: GC(n.props) })
                  .then(function () {
                    n.props.onLoad && n.props.onLoad(),
                      n.setState(function () {
                        return { loaded: !0 };
                      });
                  })
                  .catch(function (e) {
                    n.props.onError && n.props.onError(e),
                      console.error(
                        "\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key ("
                          .concat(
                            n.props.googleMapsApiKey || "-",
                            ") or Client ID ("
                          )
                          .concat(
                            n.props.googleMapsClientId || "-",
                            ") to <LoadScript />\n          Otherwise it is a Network issue.\n        "
                          )
                      );
                  });
            }),
            n
          );
        }
        kC(n, e),
          (n.prototype.componentDidMount = function () {
            if (BC) {
              if (window.google && window.google.maps && !VC)
                return void console.error("google api is already presented");
              this.isCleaningUp()
                .then(this.injectScript)
                .catch(function (e) {
                  console.error(
                    "Error at injecting script after cleaning up: ",
                    e
                  );
                });
            }
          }),
          (n.prototype.componentDidUpdate = function (e) {
            this.props.libraries !== e.libraries &&
              console.warn(
                "Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"
              ),
              BC &&
                e.language !== this.props.language &&
                (this.cleanup(),
                this.setState(function () {
                  return { loaded: !1 };
                }, this.cleanupCallback));
          }),
          (n.prototype.componentWillUnmount = function () {
            var e = this;
            if (BC) {
              this.cleanup();
              window.setTimeout(function () {
                e.check.current || (delete window.google, (VC = !1));
              }, 1),
                this.props.onUnmount && this.props.onUnmount();
            }
          }),
          (n.prototype.render = function () {
            return (0, js.jsxs)(js.Fragment, {
              children: [
                (0, js.jsx)("div", { ref: this.check }),
                this.state.loaded
                  ? this.props.children
                  : this.props.loadingElement || (0, js.jsx)(UC, {}),
              ],
            });
          }),
          (n.defaultProps = XC);
      })(t.PureComponent);
      var KC = (0, js.jsx)(UC, {});
      (0, t.memo)(function (e) {
        var n = e.loadingElement,
          i = e.onLoad,
          o = e.onError,
          a = e.onUnmount,
          s = e.children,
          r = (function (e) {
            var n = e.id,
              i = void 0 === n ? XC.id : n,
              o = e.version,
              a = void 0 === o ? XC.version : o,
              s = e.nonce,
              r = e.googleMapsApiKey,
              l = e.googleMapsClientId,
              c = e.language,
              u = e.region,
              d = e.libraries,
              h = e.preventGoogleFontsLoading,
              p = e.channel,
              f = e.mapIds,
              g = e.authReferrerPolicy,
              m = (0, t.useRef)(!1),
              v = (0, t.useState)(!1),
              b = v[0],
              x = v[1],
              y = (0, t.useState)(void 0),
              w = y[0],
              S = y[1];
            (0, t.useEffect)(function () {
              return (
                (m.current = !0),
                function () {
                  m.current = !1;
                }
              );
            }, []),
              (0, t.useEffect)(
                function () {
                  BC && h && HC();
                },
                [h]
              ),
              (0, t.useEffect)(
                function () {
                  b &&
                    LC(
                      !!window.google,
                      "useLoadScript was marked as loaded, but window.google is not present. Something went wrong."
                    );
                },
                [b]
              );
            var k = GC({
              version: a,
              googleMapsApiKey: r,
              googleMapsClientId: l,
              language: c,
              region: u,
              libraries: d,
              channel: p,
              mapIds: f,
              authReferrerPolicy: g,
            });
            (0, t.useEffect)(
              function () {
                function e() {
                  m.current && (x(!0), (YC = k));
                }
                BC &&
                  (window.google && window.google.maps && YC === k
                    ? e()
                    : FC({ id: i, url: k, nonce: s })
                        .then(e)
                        .catch(function (e) {
                          m.current && S(e),
                            console.warn(
                              "\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key ("
                                .concat(r || "-", ") or Client ID (")
                                .concat(
                                  l || "-",
                                  ")\n        Otherwise it is a Network issue.\n      "
                                )
                            ),
                            console.error(e);
                        }));
              },
              [i, k, s]
            );
            var A = (0, t.useRef)();
            return (
              (0, t.useEffect)(
                function () {
                  A.current &&
                    d !== A.current &&
                    console.warn(
                      "Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"
                    ),
                    (A.current = d);
                },
                [d]
              ),
              { isLoaded: b, loadError: w, url: k }
            );
          })(
            CC(e, [
              "loadingElement",
              "onLoad",
              "onError",
              "onUnmount",
              "children",
            ])
          ),
          l = r.isLoaded,
          c = r.loadError;
        return (
          (0, t.useEffect)(
            function () {
              l && "function" === typeof i && i();
            },
            [l, i]
          ),
          (0, t.useEffect)(
            function () {
              c && "function" === typeof o && o(c);
            },
            [c, o]
          ),
          (0, t.useEffect)(
            function () {
              return function () {
                a && a();
              };
            },
            [a]
          ),
          l ? s : n || KC
        );
      });
      function qC(e, t, n, i) {
        return new (n || (n = Promise))(function (o, a) {
          function s(e) {
            try {
              l(i.next(e));
            } catch (nT) {
              a(nT);
            }
          }
          function r(e) {
            try {
              l(i.throw(e));
            } catch (nT) {
              a(nT);
            }
          }
          function l(e) {
            var t;
            e.done
              ? o(e.value)
              : ((t = e.value),
                t instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })).then(s, r);
          }
          l((i = i.apply(e, t || [])).next());
        });
      }
      var ZC = function e(t, n) {
        if (t === n) return !0;
        if (t && n && "object" == typeof t && "object" == typeof n) {
          if (t.constructor !== n.constructor) return !1;
          var i, o, a;
          if (Array.isArray(t)) {
            if ((i = t.length) != n.length) return !1;
            for (o = i; 0 !== o--; ) if (!e(t[o], n[o])) return !1;
            return !0;
          }
          if (t.constructor === RegExp)
            return t.source === n.source && t.flags === n.flags;
          if (t.valueOf !== Object.prototype.valueOf)
            return t.valueOf() === n.valueOf();
          if (t.toString !== Object.prototype.toString)
            return t.toString() === n.toString();
          if ((i = (a = Object.keys(t)).length) !== Object.keys(n).length)
            return !1;
          for (o = i; 0 !== o--; )
            if (!Object.prototype.hasOwnProperty.call(n, a[o])) return !1;
          for (o = i; 0 !== o--; ) {
            var s = a[o];
            if (!e(t[s], n[s])) return !1;
          }
          return !0;
        }
        return t !== t && n !== n;
      };
      const QC = "__googleMapsScriptId";
      var $C;
      !(function (e) {
        (e[(e.INITIALIZED = 0)] = "INITIALIZED"),
          (e[(e.LOADING = 1)] = "LOADING"),
          (e[(e.SUCCESS = 2)] = "SUCCESS"),
          (e[(e.FAILURE = 3)] = "FAILURE");
      })($C || ($C = {}));
      class JC {
        constructor(e) {
          let {
            apiKey: t,
            authReferrerPolicy: n,
            channel: i,
            client: o,
            id: a = QC,
            language: s,
            libraries: r = [],
            mapIds: l,
            nonce: c,
            region: u,
            retries: d = 3,
            url: h = "https://maps.googleapis.com/maps/api/js",
            version: p,
          } = e;
          if (
            ((this.callbacks = []),
            (this.done = !1),
            (this.loading = !1),
            (this.errors = []),
            (this.apiKey = t),
            (this.authReferrerPolicy = n),
            (this.channel = i),
            (this.client = o),
            (this.id = a || QC),
            (this.language = s),
            (this.libraries = r),
            (this.mapIds = l),
            (this.nonce = c),
            (this.region = u),
            (this.retries = d),
            (this.url = h),
            (this.version = p),
            JC.instance)
          ) {
            if (!ZC(this.options, JC.instance.options))
              throw new Error(
                "Loader must not be called again with different options. "
                  .concat(JSON.stringify(this.options), " !== ")
                  .concat(JSON.stringify(JC.instance.options))
              );
            return JC.instance;
          }
          JC.instance = this;
        }
        get options() {
          return {
            version: this.version,
            apiKey: this.apiKey,
            channel: this.channel,
            client: this.client,
            id: this.id,
            libraries: this.libraries,
            language: this.language,
            region: this.region,
            mapIds: this.mapIds,
            nonce: this.nonce,
            url: this.url,
            authReferrerPolicy: this.authReferrerPolicy,
          };
        }
        get status() {
          return this.errors.length
            ? $C.FAILURE
            : this.done
            ? $C.SUCCESS
            : this.loading
            ? $C.LOADING
            : $C.INITIALIZED;
        }
        get failed() {
          return (
            this.done && !this.loading && this.errors.length >= this.retries + 1
          );
        }
        createUrl() {
          let e = this.url;
          return (
            (e += "?callback=__googleMapsCallback"),
            this.apiKey && (e += "&key=".concat(this.apiKey)),
            this.channel && (e += "&channel=".concat(this.channel)),
            this.client && (e += "&client=".concat(this.client)),
            this.libraries.length > 0 &&
              (e += "&libraries=".concat(this.libraries.join(","))),
            this.language && (e += "&language=".concat(this.language)),
            this.region && (e += "&region=".concat(this.region)),
            this.version && (e += "&v=".concat(this.version)),
            this.mapIds && (e += "&map_ids=".concat(this.mapIds.join(","))),
            this.authReferrerPolicy &&
              (e += "&auth_referrer_policy=".concat(this.authReferrerPolicy)),
            e
          );
        }
        deleteScript() {
          const e = document.getElementById(this.id);
          e && e.remove();
        }
        load() {
          return this.loadPromise();
        }
        loadPromise() {
          return new Promise((e, t) => {
            this.loadCallback((n) => {
              n ? t(n.error) : e(window.google);
            });
          });
        }
        importLibrary(e) {
          return this.execute(), google.maps.importLibrary(e);
        }
        loadCallback(e) {
          this.callbacks.push(e), this.execute();
        }
        setScript() {
          var e, t;
          if (document.getElementById(this.id)) return void this.callback();
          const n = {
            key: this.apiKey,
            channel: this.channel,
            client: this.client,
            libraries: this.libraries.length && this.libraries,
            v: this.version,
            mapIds: this.mapIds,
            language: this.language,
            region: this.region,
            authReferrerPolicy: this.authReferrerPolicy,
          };
          Object.keys(n).forEach((e) => !n[e] && delete n[e]),
            (null ===
              (t =
                null ===
                  (e =
                    null === window || void 0 === window
                      ? void 0
                      : window.google) || void 0 === e
                  ? void 0
                  : e.maps) || void 0 === t
              ? void 0
              : t.importLibrary) ||
              ((e) => {
                let t,
                  n,
                  i,
                  o = "The Google Maps JavaScript API",
                  a = "google",
                  s = "importLibrary",
                  r = "__ib__",
                  l = document,
                  c = window;
                c = c[a] || (c[a] = {});
                const u = c.maps || (c.maps = {}),
                  d = new Set(),
                  h = new URLSearchParams(),
                  p = () =>
                    t ||
                    (t = new Promise((s, c) =>
                      qC(this, void 0, void 0, function* () {
                        var p;
                        for (i in (yield (n = l.createElement("script")),
                        (n.id = this.id),
                        h.set("libraries", [...d] + ""),
                        e))
                          h.set(
                            i.replace(
                              /[A-Z]/g,
                              (e) => "_" + e[0].toLowerCase()
                            ),
                            e[i]
                          );
                        h.set("callback", a + ".maps." + r),
                          (n.src = this.url + "?" + h),
                          (u[r] = s),
                          (n.onerror = () =>
                            (t = c(Error(o + " could not load.")))),
                          (n.nonce =
                            this.nonce ||
                            (null === (p = l.querySelector("script[nonce]")) ||
                            void 0 === p
                              ? void 0
                              : p.nonce) ||
                            ""),
                          l.head.append(n);
                      })
                    ));
                u[s]
                  ? console.warn(o + " only loads once. Ignoring:", e)
                  : (u[s] = function (e) {
                      for (
                        var t = arguments.length,
                          n = new Array(t > 1 ? t - 1 : 0),
                          i = 1;
                        i < t;
                        i++
                      )
                        n[i - 1] = arguments[i];
                      return d.add(e) && p().then(() => u[s](e, ...n));
                    });
              })(n);
          const i = this.libraries.map((e) => this.importLibrary(e));
          i.length || i.push(this.importLibrary("core")),
            Promise.all(i).then(
              () => this.callback(),
              (e) => {
                const t = new ErrorEvent("error", { error: e });
                this.loadErrorCallback(t);
              }
            );
        }
        reset() {
          this.deleteScript(),
            (this.done = !1),
            (this.loading = !1),
            (this.errors = []),
            (this.onerrorEvent = null);
        }
        resetIfRetryingFailed() {
          this.failed && this.reset();
        }
        loadErrorCallback(e) {
          if ((this.errors.push(e), this.errors.length <= this.retries)) {
            const e = this.errors.length * Math.pow(2, this.errors.length);
            console.error(
              "Failed to load Google Maps script, retrying in ".concat(
                e,
                " ms."
              )
            ),
              setTimeout(() => {
                this.deleteScript(), this.setScript();
              }, e);
          } else (this.onerrorEvent = e), this.callback();
        }
        callback() {
          (this.done = !0),
            (this.loading = !1),
            this.callbacks.forEach((e) => {
              e(this.onerrorEvent);
            }),
            (this.callbacks = []);
        }
        execute() {
          if ((this.resetIfRetryingFailed(), this.done)) this.callback();
          else {
            if (
              window.google &&
              window.google.maps &&
              window.google.maps.version
            )
              return (
                console.warn(
                  "Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."
                ),
                void this.callback()
              );
            this.loading || ((this.loading = !0), this.setScript());
          }
        }
      }
      var eM = ["maps"];
      var tM = {},
        nM = {
          options: function (e, t) {
            e.setOptions(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.onLoad,
          o = e.onUnmount,
          a = (0, t.useContext)(TC),
          s = (0, t.useState)(null),
          r = s[0],
          l = s[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== r && r.setMap(a);
            },
            [a]
          ),
          (0, t.useEffect)(
            function () {
              n && null !== r && r.setOptions(n);
            },
            [r, n]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.TrafficLayer(
              AC(AC({}, n || {}), { map: a })
            );
            return (
              l(e),
              i && i(e),
              function () {
                null !== r && (o && o(r), r.setMap(null));
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.state = { trafficLayer: null }),
              (t.setTrafficLayerCallback = function () {
                null !== t.state.trafficLayer &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.trafficLayer);
              }),
              (t.registeredEvents = []),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.TrafficLayer(
                AC(AC({}, this.props.options || {}), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: nM,
                eventMap: tM,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { trafficLayer: e };
                }, this.setTrafficLayerCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.trafficLayer &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: nM,
                  eventMap: tM,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.trafficLayer,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.trafficLayer &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.trafficLayer),
                NC(this.registeredEvents),
                this.state.trafficLayer.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      (0, t.memo)(function (e) {
        var n = e.onLoad,
          i = e.onUnmount,
          o = (0, t.useContext)(TC),
          a = (0, t.useState)(null),
          s = a[0],
          r = a[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== s && s.setMap(o);
            },
            [o]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.BicyclingLayer();
            return (
              r(e),
              e.setMap(o),
              n && n(e),
              function () {
                null !== e && (i && i(e), e.setMap(null));
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.state = { bicyclingLayer: null }),
              (t.setBicyclingLayerCallback = function () {
                null !== t.state.bicyclingLayer &&
                  (t.state.bicyclingLayer.setMap(t.context),
                  t.props.onLoad && t.props.onLoad(t.state.bicyclingLayer));
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.BicyclingLayer();
              this.setState(function () {
                return { bicyclingLayer: e };
              }, this.setBicyclingLayerCallback);
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.bicyclingLayer &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.bicyclingLayer),
                this.state.bicyclingLayer.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      (0, t.memo)(function (e) {
        var n = e.onLoad,
          i = e.onUnmount,
          o = (0, t.useContext)(TC),
          a = (0, t.useState)(null),
          s = a[0],
          r = a[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== s && s.setMap(o);
            },
            [o]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.TransitLayer();
            return (
              r(e),
              e.setMap(o),
              n && n(e),
              function () {
                null !== s && (i && i(s), s.setMap(null));
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.state = { transitLayer: null }),
              (t.setTransitLayerCallback = function () {
                null !== t.state.transitLayer &&
                  (t.state.transitLayer.setMap(t.context),
                  t.props.onLoad && t.props.onLoad(t.state.transitLayer));
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.TransitLayer();
              this.setState(function () {
                return { transitLayer: e };
              }, this.setTransitLayerCallback);
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.transitLayer &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.transitLayer),
                this.state.transitLayer.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var iM = {
          onCircleComplete: "circlecomplete",
          onMarkerComplete: "markercomplete",
          onOverlayComplete: "overlaycomplete",
          onPolygonComplete: "polygoncomplete",
          onPolylineComplete: "polylinecomplete",
          onRectangleComplete: "rectanglecomplete",
        },
        oM = {
          drawingMode: function (e, t) {
            e.setDrawingMode(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.drawingMode,
          o = e.onCircleComplete,
          a = e.onMarkerComplete,
          s = e.onOverlayComplete,
          r = e.onPolygonComplete,
          l = e.onPolylineComplete,
          c = e.onRectangleComplete,
          u = e.onLoad,
          d = e.onUnmount,
          h = (0, t.useContext)(TC),
          p = (0, t.useState)(null),
          f = p[0],
          g = p[1],
          m = (0, t.useState)(null),
          v = m[0],
          b = m[1],
          x = (0, t.useState)(null),
          y = x[0],
          w = x[1],
          S = (0, t.useState)(null),
          k = S[0],
          A = S[1],
          C = (0, t.useState)(null),
          M = C[0],
          P = C[1],
          E = (0, t.useState)(null),
          L = E[0],
          T = E[1],
          O = (0, t.useState)(null),
          R = O[0],
          I = O[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== f && f.setMap(h);
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              n && null !== f && f.setOptions(n);
            },
            [f, n]
          ),
          (0, t.useEffect)(
            function () {
              null !== f &&
                f.setDrawingMode(null !== i && void 0 !== i ? i : null);
            },
            [f, i]
          ),
          (0, t.useEffect)(
            function () {
              f &&
                o &&
                (null !== v && google.maps.event.removeListener(v),
                b(google.maps.event.addListener(f, "circlecomplete", o)));
            },
            [f, o]
          ),
          (0, t.useEffect)(
            function () {
              f &&
                a &&
                (null !== y && google.maps.event.removeListener(y),
                w(google.maps.event.addListener(f, "markercomplete", a)));
            },
            [f, a]
          ),
          (0, t.useEffect)(
            function () {
              f &&
                s &&
                (null !== k && google.maps.event.removeListener(k),
                A(google.maps.event.addListener(f, "overlaycomplete", s)));
            },
            [f, s]
          ),
          (0, t.useEffect)(
            function () {
              f &&
                r &&
                (null !== M && google.maps.event.removeListener(M),
                P(google.maps.event.addListener(f, "polygoncomplete", r)));
            },
            [f, r]
          ),
          (0, t.useEffect)(
            function () {
              f &&
                l &&
                (null !== L && google.maps.event.removeListener(L),
                T(google.maps.event.addListener(f, "polylinecomplete", l)));
            },
            [f, l]
          ),
          (0, t.useEffect)(
            function () {
              f &&
                c &&
                (null !== R && google.maps.event.removeListener(R),
                I(google.maps.event.addListener(f, "rectanglecomplete", c)));
            },
            [f, c]
          ),
          (0, t.useEffect)(function () {
            LC(
              !!google.maps.drawing,
              "Did you include prop libraries={['drawing']} in the URL? %s",
              google.maps.drawing
            );
            var e = new google.maps.drawing.DrawingManager(
              AC(AC({}, n || {}), { map: h })
            );
            return (
              i && e.setDrawingMode(i),
              o && b(google.maps.event.addListener(e, "circlecomplete", o)),
              a && w(google.maps.event.addListener(e, "markercomplete", a)),
              s && A(google.maps.event.addListener(e, "overlaycomplete", s)),
              r && P(google.maps.event.addListener(e, "polygoncomplete", r)),
              l && T(google.maps.event.addListener(e, "polylinecomplete", l)),
              c && I(google.maps.event.addListener(e, "rectanglecomplete", c)),
              g(e),
              u && u(e),
              function () {
                null !== f &&
                  (v && google.maps.event.removeListener(v),
                  y && google.maps.event.removeListener(y),
                  k && google.maps.event.removeListener(k),
                  M && google.maps.event.removeListener(M),
                  L && google.maps.event.removeListener(L),
                  R && google.maps.event.removeListener(R),
                  d && d(f),
                  f.setMap(null));
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t(t) {
            var n = e.call(this, t) || this;
            return (
              (n.registeredEvents = []),
              (n.state = { drawingManager: null }),
              (n.setDrawingManagerCallback = function () {
                null !== n.state.drawingManager &&
                  n.props.onLoad &&
                  n.props.onLoad(n.state.drawingManager);
              }),
              LC(
                !!google.maps.drawing,
                "Did you include prop libraries={['drawing']} in the URL? %s",
                google.maps.drawing
              ),
              n
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.drawing.DrawingManager(
                AC(AC({}, this.props.options || {}), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: oM,
                eventMap: iM,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { drawingManager: e };
                }, this.setDrawingManagerCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.drawingManager &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: oM,
                  eventMap: iM,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.drawingManager,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.drawingManager &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.drawingManager),
                NC(this.registeredEvents),
                this.state.drawingManager.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var aM = {
          onAnimationChanged: "animation_changed",
          onClick: "click",
          onClickableChanged: "clickable_changed",
          onCursorChanged: "cursor_changed",
          onDblClick: "dblclick",
          onDrag: "drag",
          onDragEnd: "dragend",
          onDraggableChanged: "draggable_changed",
          onDragStart: "dragstart",
          onFlatChanged: "flat_changed",
          onIconChanged: "icon_changed",
          onMouseDown: "mousedown",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseUp: "mouseup",
          onPositionChanged: "position_changed",
          onRightClick: "rightclick",
          onShapeChanged: "shape_changed",
          onTitleChanged: "title_changed",
          onVisibleChanged: "visible_changed",
          onZindexChanged: "zindex_changed",
        },
        sM = {
          animation: function (e, t) {
            e.setAnimation(t);
          },
          clickable: function (e, t) {
            e.setClickable(t);
          },
          cursor: function (e, t) {
            e.setCursor(t);
          },
          draggable: function (e, t) {
            e.setDraggable(t);
          },
          icon: function (e, t) {
            e.setIcon(t);
          },
          label: function (e, t) {
            e.setLabel(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          opacity: function (e, t) {
            e.setOpacity(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          position: function (e, t) {
            e.setPosition(t);
          },
          shape: function (e, t) {
            e.setShape(t);
          },
          title: function (e, t) {
            e.setTitle(t);
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
          zIndex: function (e, t) {
            e.setZIndex(t);
          },
        },
        rM = {};
      (0, t.memo)(function (e) {
        var n = e.position,
          i = e.options,
          o = e.clusterer,
          a = e.noClustererRedraw,
          s = e.children,
          r = e.draggable,
          l = e.visible,
          c = e.animation,
          u = e.clickable,
          d = e.cursor,
          h = e.icon,
          p = e.label,
          f = e.opacity,
          g = e.shape,
          m = e.title,
          v = e.zIndex,
          b = e.onClick,
          x = e.onDblClick,
          y = e.onDrag,
          w = e.onDragEnd,
          S = e.onDragStart,
          k = e.onMouseOut,
          A = e.onMouseOver,
          C = e.onMouseUp,
          M = e.onMouseDown,
          P = e.onRightClick,
          E = e.onClickableChanged,
          L = e.onCursorChanged,
          T = e.onAnimationChanged,
          O = e.onDraggableChanged,
          R = e.onFlatChanged,
          I = e.onIconChanged,
          N = e.onPositionChanged,
          _ = e.onShapeChanged,
          D = e.onTitleChanged,
          z = e.onVisibleChanged,
          j = e.onZindexChanged,
          B = e.onLoad,
          F = e.onUnmount,
          W = (0, t.useContext)(TC),
          H = (0, t.useState)(null),
          G = H[0],
          V = H[1],
          U = (0, t.useState)(null),
          Y = U[0],
          X = U[1],
          K = (0, t.useState)(null),
          q = K[0],
          Z = K[1],
          Q = (0, t.useState)(null),
          $ = Q[0],
          J = Q[1],
          ee = (0, t.useState)(null),
          te = ee[0],
          ne = ee[1],
          ie = (0, t.useState)(null),
          oe = ie[0],
          ae = ie[1],
          se = (0, t.useState)(null),
          re = se[0],
          le = se[1],
          ce = (0, t.useState)(null),
          ue = ce[0],
          de = ce[1],
          he = (0, t.useState)(null),
          pe = he[0],
          fe = he[1],
          ge = (0, t.useState)(null),
          me = ge[0],
          ve = ge[1],
          be = (0, t.useState)(null),
          xe = be[0],
          ye = be[1],
          we = (0, t.useState)(null),
          Se = we[0],
          ke = we[1],
          Ae = (0, t.useState)(null),
          Ce = Ae[0],
          Me = Ae[1],
          Pe = (0, t.useState)(null),
          Ee = Pe[0],
          Le = Pe[1],
          Te = (0, t.useState)(null),
          Oe = Te[0],
          Re = Te[1],
          Ie = (0, t.useState)(null),
          Ne = Ie[0],
          _e = Ie[1],
          De = (0, t.useState)(null),
          ze = De[0],
          je = De[1],
          Be = (0, t.useState)(null),
          Fe = Be[0],
          We = Be[1],
          He = (0, t.useState)(null),
          Ge = He[0],
          Ve = He[1],
          Ue = (0, t.useState)(null),
          Ye = Ue[0],
          Xe = Ue[1],
          Ke = (0, t.useState)(null),
          qe = Ke[0],
          Ze = Ke[1],
          Qe = (0, t.useState)(null),
          $e = Qe[0],
          Je = Qe[1];
        (0, t.useEffect)(
          function () {
            null !== G && G.setMap(W);
          },
          [W]
        ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof i && null !== G && G.setOptions(i);
            },
            [G, i]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof r && null !== G && G.setDraggable(r);
            },
            [G, r]
          ),
          (0, t.useEffect)(
            function () {
              n && null !== G && G.setPosition(n);
            },
            [G, n]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof l && null !== G && G.setVisible(l);
            },
            [G, l]
          ),
          (0, t.useEffect)(
            function () {
              null === G || void 0 === G || G.setAnimation(c);
            },
            [G, c]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== u && G.setClickable(u);
            },
            [G, u]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== d && G.setCursor(d);
            },
            [G, d]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== h && G.setIcon(h);
            },
            [G, h]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== p && G.setLabel(p);
            },
            [G, p]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== f && G.setOpacity(f);
            },
            [G, f]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== g && G.setShape(g);
            },
            [G, g]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== m && G.setTitle(m);
            },
            [G, m]
          ),
          (0, t.useEffect)(
            function () {
              G && void 0 !== v && G.setZIndex(v);
            },
            [G, v]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                x &&
                (null !== Y && google.maps.event.removeListener(Y),
                X(google.maps.event.addListener(G, "dblclick", x)));
            },
            [x]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                w &&
                (null !== q && google.maps.event.removeListener(q),
                Z(google.maps.event.addListener(G, "dragend", w)));
            },
            [w]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                S &&
                (null !== $ && google.maps.event.removeListener($),
                J(google.maps.event.addListener(G, "dragstart", S)));
            },
            [S]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                M &&
                (null !== te && google.maps.event.removeListener(te),
                ne(google.maps.event.addListener(G, "mousedown", M)));
            },
            [M]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                k &&
                (null !== oe && google.maps.event.removeListener(oe),
                ae(google.maps.event.addListener(G, "mouseout", k)));
            },
            [k]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                A &&
                (null !== re && google.maps.event.removeListener(re),
                le(google.maps.event.addListener(G, "mouseover", A)));
            },
            [A]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                C &&
                (null !== ue && google.maps.event.removeListener(ue),
                de(google.maps.event.addListener(G, "mouseup", C)));
            },
            [C]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                P &&
                (null !== pe && google.maps.event.removeListener(pe),
                fe(google.maps.event.addListener(G, "rightclick", P)));
            },
            [P]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                b &&
                (null !== me && google.maps.event.removeListener(me),
                ve(google.maps.event.addListener(G, "click", b)));
            },
            [b]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                y &&
                (null !== xe && google.maps.event.removeListener(xe),
                ye(google.maps.event.addListener(G, "drag", y)));
            },
            [y]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                E &&
                (null !== Se && google.maps.event.removeListener(Se),
                ke(google.maps.event.addListener(G, "clickable_changed", E)));
            },
            [E]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                L &&
                (null !== Ce && google.maps.event.removeListener(Ce),
                Me(google.maps.event.addListener(G, "cursor_changed", L)));
            },
            [L]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                T &&
                (null !== Ee && google.maps.event.removeListener(Ee),
                Le(google.maps.event.addListener(G, "animation_changed", T)));
            },
            [T]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                O &&
                (null !== Oe && google.maps.event.removeListener(Oe),
                Re(google.maps.event.addListener(G, "draggable_changed", O)));
            },
            [O]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                R &&
                (null !== Ne && google.maps.event.removeListener(Ne),
                _e(google.maps.event.addListener(G, "flat_changed", R)));
            },
            [R]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                I &&
                (null !== ze && google.maps.event.removeListener(ze),
                je(google.maps.event.addListener(G, "icon_changed", I)));
            },
            [I]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                N &&
                (null !== Fe && google.maps.event.removeListener(Fe),
                We(google.maps.event.addListener(G, "position_changed", N)));
            },
            [N]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                _ &&
                (null !== Ge && google.maps.event.removeListener(Ge),
                Ve(google.maps.event.addListener(G, "shape_changed", _)));
            },
            [_]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                D &&
                (null !== Ye && google.maps.event.removeListener(Ye),
                Xe(google.maps.event.addListener(G, "title_changed", D)));
            },
            [D]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                z &&
                (null !== qe && google.maps.event.removeListener(qe),
                Ze(google.maps.event.addListener(G, "visible_changed", z)));
            },
            [z]
          ),
          (0, t.useEffect)(
            function () {
              G &&
                j &&
                (null !== $e && google.maps.event.removeListener($e),
                Je(google.maps.event.addListener(G, "zindex_changed", j)));
            },
            [j]
          ),
          (0, t.useEffect)(function () {
            var e = AC(AC(AC({}, i || rM), o ? rM : { map: W }), {
                position: n,
              }),
              t = new google.maps.Marker(e);
            return (
              o ? o.addMarker(t, !!a) : t.setMap(W),
              n && t.setPosition(n),
              "undefined" !== typeof l && t.setVisible(l),
              "undefined" !== typeof r && t.setDraggable(r),
              "undefined" !== typeof u && t.setClickable(u),
              "string" === typeof d && t.setCursor(d),
              h && t.setIcon(h),
              "undefined" !== typeof p && t.setLabel(p),
              "undefined" !== typeof f && t.setOpacity(f),
              g && t.setShape(g),
              "string" === typeof m && t.setTitle(m),
              "number" === typeof v && t.setZIndex(v),
              x && X(google.maps.event.addListener(t, "dblclick", x)),
              w && Z(google.maps.event.addListener(t, "dragend", w)),
              S && J(google.maps.event.addListener(t, "dragstart", S)),
              M && ne(google.maps.event.addListener(t, "mousedown", M)),
              k && ae(google.maps.event.addListener(t, "mouseout", k)),
              A && le(google.maps.event.addListener(t, "mouseover", A)),
              C && de(google.maps.event.addListener(t, "mouseup", C)),
              P && fe(google.maps.event.addListener(t, "rightclick", P)),
              b && ve(google.maps.event.addListener(t, "click", b)),
              y && ye(google.maps.event.addListener(t, "drag", y)),
              E && ke(google.maps.event.addListener(t, "clickable_changed", E)),
              L && Me(google.maps.event.addListener(t, "cursor_changed", L)),
              T && Le(google.maps.event.addListener(t, "animation_changed", T)),
              O && Re(google.maps.event.addListener(t, "draggable_changed", O)),
              R && _e(google.maps.event.addListener(t, "flat_changed", R)),
              I && je(google.maps.event.addListener(t, "icon_changed", I)),
              N && We(google.maps.event.addListener(t, "position_changed", N)),
              _ && Ve(google.maps.event.addListener(t, "shape_changed", _)),
              D && Xe(google.maps.event.addListener(t, "title_changed", D)),
              z && Ze(google.maps.event.addListener(t, "visible_changed", z)),
              j && Je(google.maps.event.addListener(t, "zindex_changed", j)),
              V(t),
              B && B(t),
              function () {
                null !== Y && google.maps.event.removeListener(Y),
                  null !== q && google.maps.event.removeListener(q),
                  null !== $ && google.maps.event.removeListener($),
                  null !== te && google.maps.event.removeListener(te),
                  null !== oe && google.maps.event.removeListener(oe),
                  null !== re && google.maps.event.removeListener(re),
                  null !== ue && google.maps.event.removeListener(ue),
                  null !== pe && google.maps.event.removeListener(pe),
                  null !== me && google.maps.event.removeListener(me),
                  null !== Se && google.maps.event.removeListener(Se),
                  null !== Ce && google.maps.event.removeListener(Ce),
                  null !== Ee && google.maps.event.removeListener(Ee),
                  null !== Oe && google.maps.event.removeListener(Oe),
                  null !== Ne && google.maps.event.removeListener(Ne),
                  null !== ze && google.maps.event.removeListener(ze),
                  null !== Fe && google.maps.event.removeListener(Fe),
                  null !== Ye && google.maps.event.removeListener(Ye),
                  null !== qe && google.maps.event.removeListener(qe),
                  null !== $e && google.maps.event.removeListener($e),
                  F && F(t),
                  o ? o.removeMarker(t, !!a) : t && t.setMap(null);
              }
            );
          }, []);
        var et = (0, t.useMemo)(
          function () {
            return s
              ? t.Children.map(s, function (e) {
                  if (!(0, t.isValidElement)(e)) return e;
                  var n = e;
                  return (0, t.cloneElement)(n, { anchor: G });
                })
              : null;
          },
          [s, G]
        );
        return (0, js.jsx)(js.Fragment, { children: et }) || null;
      }),
        (function (e) {
          function n() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (t.registeredEvents = []), t;
          }
          kC(n, e),
            (n.prototype.componentDidMount = function () {
              var e = AC(
                AC(
                  AC({}, this.props.options || rM),
                  this.props.clusterer ? rM : { map: this.context }
                ),
                { position: this.props.position }
              );
              (this.marker = new google.maps.Marker(e)),
                this.props.clusterer
                  ? this.props.clusterer.addMarker(
                      this.marker,
                      !!this.props.noClustererRedraw
                    )
                  : this.marker.setMap(this.context),
                (this.registeredEvents = _C({
                  updaterMap: sM,
                  eventMap: aM,
                  prevProps: {},
                  nextProps: this.props,
                  instance: this.marker,
                })),
                this.props.onLoad && this.props.onLoad(this.marker);
            }),
            (n.prototype.componentDidUpdate = function (e) {
              this.marker &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: sM,
                  eventMap: aM,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.marker,
                })));
            }),
            (n.prototype.componentWillUnmount = function () {
              this.marker &&
                (this.props.onUnmount && this.props.onUnmount(this.marker),
                NC(this.registeredEvents),
                this.props.clusterer
                  ? this.props.clusterer.removeMarker(
                      this.marker,
                      !!this.props.noClustererRedraw
                    )
                  : this.marker && this.marker.setMap(null));
            }),
            (n.prototype.render = function () {
              var e = this,
                n = null;
              return (
                this.props.children &&
                  (n = t.Children.map(this.props.children, function (n) {
                    if (!(0, t.isValidElement)(n)) return n;
                    var i = n;
                    return (0, t.cloneElement)(i, { anchor: e.marker });
                  })),
                n || null
              );
            }),
            (n.contextType = TC);
        })(t.PureComponent);
      var lM = (function () {
          function e(t, n) {
            t.getClusterer().extend(e, google.maps.OverlayView),
              (this.cluster = t),
              (this.clusterClassName = this.cluster
                .getClusterer()
                .getClusterClass()),
              (this.className = this.clusterClassName),
              (this.styles = n),
              (this.center = void 0),
              (this.div = null),
              (this.sums = null),
              (this.visible = !1),
              (this.boundsChangedListener = null),
              (this.url = ""),
              (this.height = 0),
              (this.width = 0),
              (this.anchorText = [0, 0]),
              (this.anchorIcon = [0, 0]),
              (this.textColor = "black"),
              (this.textSize = 11),
              (this.textDecoration = "none"),
              (this.fontWeight = "bold"),
              (this.fontStyle = "normal"),
              (this.fontFamily = "Arial,sans-serif"),
              (this.backgroundPosition = "0 0"),
              (this.cMouseDownInCluster = null),
              (this.cDraggingMapByCluster = null),
              (this.timeOut = null),
              this.setMap(t.getMap()),
              (this.onBoundsChanged = this.onBoundsChanged.bind(this)),
              (this.onMouseDown = this.onMouseDown.bind(this)),
              (this.onClick = this.onClick.bind(this)),
              (this.onMouseOver = this.onMouseOver.bind(this)),
              (this.onMouseOut = this.onMouseOut.bind(this)),
              (this.onAdd = this.onAdd.bind(this)),
              (this.onRemove = this.onRemove.bind(this)),
              (this.draw = this.draw.bind(this)),
              (this.hide = this.hide.bind(this)),
              (this.show = this.show.bind(this)),
              (this.useStyle = this.useStyle.bind(this)),
              (this.setCenter = this.setCenter.bind(this)),
              (this.getPosFromLatLng = this.getPosFromLatLng.bind(this));
          }
          return (
            (e.prototype.onBoundsChanged = function () {
              this.cDraggingMapByCluster = this.cMouseDownInCluster;
            }),
            (e.prototype.onMouseDown = function () {
              (this.cMouseDownInCluster = !0),
                (this.cDraggingMapByCluster = !1);
            }),
            (e.prototype.onClick = function (e) {
              if (
                ((this.cMouseDownInCluster = !1), !this.cDraggingMapByCluster)
              ) {
                var t = this.cluster.getClusterer();
                if (
                  (google.maps.event.trigger(t, "click", this.cluster),
                  google.maps.event.trigger(t, "clusterclick", this.cluster),
                  t.getZoomOnClick())
                ) {
                  var n = t.getMaxZoom(),
                    i = this.cluster.getBounds(),
                    o = t.getMap();
                  null !== o && "fitBounds" in o && o.fitBounds(i),
                    (this.timeOut = window.setTimeout(function () {
                      var e = t.getMap();
                      if (null !== e) {
                        "fitBounds" in e && e.fitBounds(i);
                        var o = e.getZoom() || 0;
                        null !== n && o > n && e.setZoom(n + 1);
                      }
                    }, 100));
                }
                (e.cancelBubble = !0), e.stopPropagation && e.stopPropagation();
              }
            }),
            (e.prototype.onMouseOver = function () {
              google.maps.event.trigger(
                this.cluster.getClusterer(),
                "mouseover",
                this.cluster
              );
            }),
            (e.prototype.onMouseOut = function () {
              google.maps.event.trigger(
                this.cluster.getClusterer(),
                "mouseout",
                this.cluster
              );
            }),
            (e.prototype.onAdd = function () {
              var e;
              (this.div = document.createElement("div")),
                (this.div.className = this.className),
                this.visible && this.show(),
                null === (e = this.getPanes()) ||
                  void 0 === e ||
                  e.overlayMouseTarget.appendChild(this.div);
              var t = this.getMap();
              null !== t &&
                ((this.boundsChangedListener = google.maps.event.addListener(
                  t,
                  "bounds_changed",
                  this.onBoundsChanged
                )),
                this.div.addEventListener("mousedown", this.onMouseDown),
                this.div.addEventListener("click", this.onClick),
                this.div.addEventListener("mouseover", this.onMouseOver),
                this.div.addEventListener("mouseout", this.onMouseOut));
            }),
            (e.prototype.onRemove = function () {
              this.div &&
                this.div.parentNode &&
                (this.hide(),
                null !== this.boundsChangedListener &&
                  google.maps.event.removeListener(this.boundsChangedListener),
                this.div.removeEventListener("mousedown", this.onMouseDown),
                this.div.removeEventListener("click", this.onClick),
                this.div.removeEventListener("mouseover", this.onMouseOver),
                this.div.removeEventListener("mouseout", this.onMouseOut),
                this.div.parentNode.removeChild(this.div),
                null !== this.timeOut &&
                  (window.clearTimeout(this.timeOut), (this.timeOut = null)),
                (this.div = null));
            }),
            (e.prototype.draw = function () {
              if (this.visible && null !== this.div && this.center) {
                var e = this.getPosFromLatLng(this.center);
                (this.div.style.top = null !== e ? "".concat(e.y, "px") : "0"),
                  (this.div.style.left =
                    null !== e ? "".concat(e.x, "px") : "0");
              }
            }),
            (e.prototype.hide = function () {
              this.div && (this.div.style.display = "none"),
                (this.visible = !1);
            }),
            (e.prototype.show = function () {
              var e, t, n, i, o, a;
              if (this.div && this.center) {
                var s =
                    null === this.sums ||
                    "undefined" === typeof this.sums.title ||
                    "" === this.sums.title
                      ? this.cluster.getClusterer().getTitle()
                      : this.sums.title,
                  r = this.backgroundPosition.split(" "),
                  l = parseInt(
                    (null === (e = r[0]) || void 0 === e
                      ? void 0
                      : e.replace(/^\s+|\s+$/g, "")) || "0",
                    10
                  ),
                  c = parseInt(
                    (null === (t = r[1]) || void 0 === t
                      ? void 0
                      : t.replace(/^\s+|\s+$/g, "")) || "0",
                    10
                  ),
                  u = this.getPosFromLatLng(this.center);
                (this.div.className = this.className),
                  this.div.setAttribute(
                    "style",
                    "cursor: pointer; position: absolute; top: "
                      .concat(
                        null !== u ? "".concat(u.y, "px") : "0",
                        "; left: "
                      )
                      .concat(
                        null !== u ? "".concat(u.x, "px") : "0",
                        "; width: "
                      )
                      .concat(this.width, "px; height: ")
                      .concat(this.height, "px; ")
                  );
                var d = document.createElement("img");
                (d.alt = s),
                  (d.src = this.url),
                  (d.width = this.width),
                  (d.height = this.height),
                  d.setAttribute(
                    "style",
                    "position: absolute; top: "
                      .concat(c, "px; left: ")
                      .concat(l, "px")
                  ),
                  this.cluster.getClusterer().enableRetinaIcons ||
                    (d.style.clip = "rect(-"
                      .concat(c, "px, -")
                      .concat(l + this.width, "px, -")
                      .concat(c + this.height, ", -")
                      .concat(l, ")"));
                var h = document.createElement("div");
                h.setAttribute(
                  "style",
                  "position: absolute; top: "
                    .concat(this.anchorText[0], "px; left: ")
                    .concat(this.anchorText[1], "px; color: ")
                    .concat(this.textColor, "; font-size: ")
                    .concat(this.textSize, "px; font-family: ")
                    .concat(this.fontFamily, "; font-weight: ")
                    .concat(this.fontWeight, "; fontStyle: ")
                    .concat(this.fontStyle, "; text-decoration: ")
                    .concat(
                      this.textDecoration,
                      "; text-align: center; width: "
                    )
                    .concat(this.width, "px; line-height: ")
                    .concat(this.height, "px")
                ),
                  (null === (n = this.sums) || void 0 === n
                    ? void 0
                    : n.text) &&
                    (h.innerText = "".concat(
                      null === (i = this.sums) || void 0 === i ? void 0 : i.text
                    )),
                  (null === (o = this.sums) || void 0 === o
                    ? void 0
                    : o.html) &&
                    (h.innerHTML = "".concat(
                      null === (a = this.sums) || void 0 === a ? void 0 : a.html
                    )),
                  (this.div.innerHTML = ""),
                  this.div.appendChild(d),
                  this.div.appendChild(h),
                  (this.div.title = s),
                  (this.div.style.display = "");
              }
              this.visible = !0;
            }),
            (e.prototype.useStyle = function (e) {
              this.sums = e;
              var t = this.cluster.getClusterer().getStyles(),
                n = t[Math.min(t.length - 1, Math.max(0, e.index - 1))];
              n &&
                ((this.url = n.url),
                (this.height = n.height),
                (this.width = n.width),
                n.className &&
                  (this.className = ""
                    .concat(this.clusterClassName, " ")
                    .concat(n.className)),
                (this.anchorText = n.anchorText || [0, 0]),
                (this.anchorIcon = n.anchorIcon || [
                  this.height / 2,
                  this.width / 2,
                ]),
                (this.textColor = n.textColor || "black"),
                (this.textSize = n.textSize || 11),
                (this.textDecoration = n.textDecoration || "none"),
                (this.fontWeight = n.fontWeight || "bold"),
                (this.fontStyle = n.fontStyle || "normal"),
                (this.fontFamily = n.fontFamily || "Arial,sans-serif"),
                (this.backgroundPosition = n.backgroundPosition || "0 0"));
            }),
            (e.prototype.setCenter = function (e) {
              this.center = e;
            }),
            (e.prototype.getPosFromLatLng = function (e) {
              var t = this.getProjection().fromLatLngToDivPixel(e);
              return (
                null !== t &&
                  ((t.x -= this.anchorIcon[1]), (t.y -= this.anchorIcon[0])),
                t
              );
            }),
            e
          );
        })(),
        cM = (function () {
          function e(e) {
            (this.markerClusterer = e),
              (this.map = this.markerClusterer.getMap()),
              (this.gridSize = this.markerClusterer.getGridSize()),
              (this.minClusterSize =
                this.markerClusterer.getMinimumClusterSize()),
              (this.averageCenter = this.markerClusterer.getAverageCenter()),
              (this.markers = []),
              (this.center = void 0),
              (this.bounds = null),
              (this.clusterIcon = new lM(
                this,
                this.markerClusterer.getStyles()
              )),
              (this.getSize = this.getSize.bind(this)),
              (this.getMarkers = this.getMarkers.bind(this)),
              (this.getCenter = this.getCenter.bind(this)),
              (this.getMap = this.getMap.bind(this)),
              (this.getClusterer = this.getClusterer.bind(this)),
              (this.getBounds = this.getBounds.bind(this)),
              (this.remove = this.remove.bind(this)),
              (this.addMarker = this.addMarker.bind(this)),
              (this.isMarkerInClusterBounds =
                this.isMarkerInClusterBounds.bind(this)),
              (this.calculateBounds = this.calculateBounds.bind(this)),
              (this.updateIcon = this.updateIcon.bind(this)),
              (this.isMarkerAlreadyAdded =
                this.isMarkerAlreadyAdded.bind(this));
          }
          return (
            (e.prototype.getSize = function () {
              return this.markers.length;
            }),
            (e.prototype.getMarkers = function () {
              return this.markers;
            }),
            (e.prototype.getCenter = function () {
              return this.center;
            }),
            (e.prototype.getMap = function () {
              return this.map;
            }),
            (e.prototype.getClusterer = function () {
              return this.markerClusterer;
            }),
            (e.prototype.getBounds = function () {
              for (
                var e = new google.maps.LatLngBounds(this.center, this.center),
                  t = 0,
                  n = this.getMarkers();
                t < n.length;
                t++
              ) {
                var i = n[t].getPosition();
                i && e.extend(i);
              }
              return e;
            }),
            (e.prototype.remove = function () {
              this.clusterIcon.setMap(null),
                (this.markers = []),
                delete this.markers;
            }),
            (e.prototype.addMarker = function (e) {
              var t, n;
              if (this.isMarkerAlreadyAdded(e)) return !1;
              if (this.center) {
                if (this.averageCenter && (n = e.getPosition())) {
                  var i = this.markers.length + 1;
                  (this.center = new google.maps.LatLng(
                    (this.center.lat() * (i - 1) + n.lat()) / i,
                    (this.center.lng() * (i - 1) + n.lng()) / i
                  )),
                    this.calculateBounds();
                }
              } else
                (n = e.getPosition()) &&
                  ((this.center = n), this.calculateBounds());
              (e.isAdded = !0), this.markers.push(e);
              var o = this.markers.length,
                a = this.markerClusterer.getMaxZoom(),
                s =
                  null === (t = this.map) || void 0 === t
                    ? void 0
                    : t.getZoom();
              if (null !== a && "undefined" !== typeof s && s > a)
                e.getMap() !== this.map && e.setMap(this.map);
              else if (o < this.minClusterSize)
                e.getMap() !== this.map && e.setMap(this.map);
              else if (o === this.minClusterSize)
                for (var r = 0, l = this.markers; r < l.length; r++) {
                  l[r].setMap(null);
                }
              else e.setMap(null);
              return !0;
            }),
            (e.prototype.isMarkerInClusterBounds = function (e) {
              if (null !== this.bounds) {
                var t = e.getPosition();
                if (t) return this.bounds.contains(t);
              }
              return !1;
            }),
            (e.prototype.calculateBounds = function () {
              this.bounds = this.markerClusterer.getExtendedBounds(
                new google.maps.LatLngBounds(this.center, this.center)
              );
            }),
            (e.prototype.updateIcon = function () {
              var e,
                t = this.markers.length,
                n = this.markerClusterer.getMaxZoom(),
                i =
                  null === (e = this.map) || void 0 === e
                    ? void 0
                    : e.getZoom();
              (null !== n && "undefined" !== typeof i && i > n) ||
              t < this.minClusterSize
                ? this.clusterIcon.hide()
                : (this.center && this.clusterIcon.setCenter(this.center),
                  this.clusterIcon.useStyle(
                    this.markerClusterer.getCalculator()(
                      this.markers,
                      this.markerClusterer.getStyles().length
                    )
                  ),
                  this.clusterIcon.show());
            }),
            (e.prototype.isMarkerAlreadyAdded = function (e) {
              if (this.markers.includes) return this.markers.includes(e);
              for (var t = 0; t < this.markers.length; t++)
                if (e === this.markers[t]) return !0;
              return !1;
            }),
            e
          );
        })();
      function uM(e, t) {
        var n = e.length,
          i = n.toString().length,
          o = Math.min(i, t);
        return { text: n.toString(), index: o, title: "" };
      }
      var dM = [53, 56, 66, 78, 90],
        hM = (function () {
          function e(t, n, i) {
            void 0 === n && (n = []),
              void 0 === i && (i = {}),
              (this.getMinimumClusterSize =
                this.getMinimumClusterSize.bind(this)),
              (this.setMinimumClusterSize =
                this.setMinimumClusterSize.bind(this)),
              (this.getEnableRetinaIcons =
                this.getEnableRetinaIcons.bind(this)),
              (this.setEnableRetinaIcons =
                this.setEnableRetinaIcons.bind(this)),
              (this.addToClosestCluster = this.addToClosestCluster.bind(this)),
              (this.getImageExtension = this.getImageExtension.bind(this)),
              (this.setImageExtension = this.setImageExtension.bind(this)),
              (this.getExtendedBounds = this.getExtendedBounds.bind(this)),
              (this.getAverageCenter = this.getAverageCenter.bind(this)),
              (this.setAverageCenter = this.setAverageCenter.bind(this)),
              (this.getTotalClusters = this.getTotalClusters.bind(this)),
              (this.fitMapToMarkers = this.fitMapToMarkers.bind(this)),
              (this.getIgnoreHidden = this.getIgnoreHidden.bind(this)),
              (this.setIgnoreHidden = this.setIgnoreHidden.bind(this)),
              (this.getClusterClass = this.getClusterClass.bind(this)),
              (this.setClusterClass = this.setClusterClass.bind(this)),
              (this.getTotalMarkers = this.getTotalMarkers.bind(this)),
              (this.getZoomOnClick = this.getZoomOnClick.bind(this)),
              (this.setZoomOnClick = this.setZoomOnClick.bind(this)),
              (this.getBatchSizeIE = this.getBatchSizeIE.bind(this)),
              (this.setBatchSizeIE = this.setBatchSizeIE.bind(this)),
              (this.createClusters = this.createClusters.bind(this)),
              (this.onZoomChanged = this.onZoomChanged.bind(this)),
              (this.getImageSizes = this.getImageSizes.bind(this)),
              (this.setImageSizes = this.setImageSizes.bind(this)),
              (this.getCalculator = this.getCalculator.bind(this)),
              (this.setCalculator = this.setCalculator.bind(this)),
              (this.removeMarkers = this.removeMarkers.bind(this)),
              (this.resetViewport = this.resetViewport.bind(this)),
              (this.getImagePath = this.getImagePath.bind(this)),
              (this.setImagePath = this.setImagePath.bind(this)),
              (this.pushMarkerTo = this.pushMarkerTo.bind(this)),
              (this.removeMarker = this.removeMarker.bind(this)),
              (this.clearMarkers = this.clearMarkers.bind(this)),
              (this.setupStyles = this.setupStyles.bind(this)),
              (this.getGridSize = this.getGridSize.bind(this)),
              (this.setGridSize = this.setGridSize.bind(this)),
              (this.getClusters = this.getClusters.bind(this)),
              (this.getMaxZoom = this.getMaxZoom.bind(this)),
              (this.setMaxZoom = this.setMaxZoom.bind(this)),
              (this.getMarkers = this.getMarkers.bind(this)),
              (this.addMarkers = this.addMarkers.bind(this)),
              (this.getStyles = this.getStyles.bind(this)),
              (this.setStyles = this.setStyles.bind(this)),
              (this.addMarker = this.addMarker.bind(this)),
              (this.onRemove = this.onRemove.bind(this)),
              (this.getTitle = this.getTitle.bind(this)),
              (this.setTitle = this.setTitle.bind(this)),
              (this.repaint = this.repaint.bind(this)),
              (this.onIdle = this.onIdle.bind(this)),
              (this.redraw = this.redraw.bind(this)),
              (this.onAdd = this.onAdd.bind(this)),
              (this.draw = this.draw.bind(this)),
              (this.extend = this.extend.bind(this)),
              this.extend(e, google.maps.OverlayView),
              (this.markers = []),
              (this.clusters = []),
              (this.listeners = []),
              (this.activeMap = null),
              (this.ready = !1),
              (this.gridSize = i.gridSize || 60),
              (this.minClusterSize = i.minimumClusterSize || 2),
              (this.maxZoom = i.maxZoom || null),
              (this.styles = i.styles || []),
              (this.title = i.title || ""),
              (this.zoomOnClick = !0),
              void 0 !== i.zoomOnClick && (this.zoomOnClick = i.zoomOnClick),
              (this.averageCenter = !1),
              void 0 !== i.averageCenter &&
                (this.averageCenter = i.averageCenter),
              (this.ignoreHidden = !1),
              void 0 !== i.ignoreHidden && (this.ignoreHidden = i.ignoreHidden),
              (this.enableRetinaIcons = !1),
              void 0 !== i.enableRetinaIcons &&
                (this.enableRetinaIcons = i.enableRetinaIcons),
              (this.imagePath =
                i.imagePath ||
                "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m"),
              (this.imageExtension = i.imageExtension || "png"),
              (this.imageSizes = i.imageSizes || dM),
              (this.calculator = i.calculator || uM),
              (this.batchSize = i.batchSize || 2e3),
              (this.batchSizeIE = i.batchSizeIE || 500),
              (this.clusterClass = i.clusterClass || "cluster"),
              -1 !== navigator.userAgent.toLowerCase().indexOf("msie") &&
                (this.batchSize = this.batchSizeIE),
              (this.timerRefStatic = null),
              this.setupStyles(),
              this.addMarkers(n, !0),
              this.setMap(t);
          }
          return (
            (e.prototype.onZoomChanged = function () {
              var e, t;
              this.resetViewport(!1),
                ((null === (e = this.getMap()) || void 0 === e
                  ? void 0
                  : e.getZoom()) !== (this.get("minZoom") || 0) &&
                  (null === (t = this.getMap()) || void 0 === t
                    ? void 0
                    : t.getZoom()) !== this.get("maxZoom")) ||
                  google.maps.event.trigger(this, "idle");
            }),
            (e.prototype.onIdle = function () {
              this.redraw();
            }),
            (e.prototype.onAdd = function () {
              var e = this.getMap();
              (this.activeMap = e),
                (this.ready = !0),
                this.repaint(),
                null !== e &&
                  (this.listeners = [
                    google.maps.event.addListener(
                      e,
                      "zoom_changed",
                      this.onZoomChanged
                    ),
                    google.maps.event.addListener(e, "idle", this.onIdle),
                  ]);
            }),
            (e.prototype.onRemove = function () {
              for (var e = 0, t = this.markers; e < t.length; e++) {
                var n = t[e];
                n.getMap() !== this.activeMap && n.setMap(this.activeMap);
              }
              for (var i = 0, o = this.clusters; i < o.length; i++) {
                o[i].remove();
              }
              this.clusters = [];
              for (var a = 0, s = this.listeners; a < s.length; a++) {
                var r = s[a];
                google.maps.event.removeListener(r);
              }
              (this.listeners = []), (this.activeMap = null), (this.ready = !1);
            }),
            (e.prototype.draw = function () {}),
            (e.prototype.getMap = function () {
              return null;
            }),
            (e.prototype.getPanes = function () {
              return null;
            }),
            (e.prototype.getProjection = function () {
              return {
                fromContainerPixelToLatLng: function () {
                  return null;
                },
                fromDivPixelToLatLng: function () {
                  return null;
                },
                fromLatLngToContainerPixel: function () {
                  return null;
                },
                fromLatLngToDivPixel: function () {
                  return null;
                },
                getVisibleRegion: function () {
                  return null;
                },
                getWorldWidth: function () {
                  return 0;
                },
              };
            }),
            (e.prototype.setMap = function () {}),
            (e.prototype.addListener = function () {
              return { remove: function () {} };
            }),
            (e.prototype.bindTo = function () {}),
            (e.prototype.get = function () {}),
            (e.prototype.notify = function () {}),
            (e.prototype.set = function () {}),
            (e.prototype.setValues = function () {}),
            (e.prototype.unbind = function () {}),
            (e.prototype.unbindAll = function () {}),
            (e.prototype.setupStyles = function () {
              if (!(this.styles.length > 0))
                for (var e = 0; e < this.imageSizes.length; e++)
                  this.styles.push({
                    url: ""
                      .concat(this.imagePath + (e + 1), ".")
                      .concat(this.imageExtension),
                    height: this.imageSizes[e] || 0,
                    width: this.imageSizes[e] || 0,
                  });
            }),
            (e.prototype.fitMapToMarkers = function () {
              for (
                var e = this.getMarkers(),
                  t = new google.maps.LatLngBounds(),
                  n = 0,
                  i = e;
                n < i.length;
                n++
              ) {
                var o = i[n].getPosition();
                o && t.extend(o);
              }
              var a = this.getMap();
              null !== a && "fitBounds" in a && a.fitBounds(t);
            }),
            (e.prototype.getGridSize = function () {
              return this.gridSize;
            }),
            (e.prototype.setGridSize = function (e) {
              this.gridSize = e;
            }),
            (e.prototype.getMinimumClusterSize = function () {
              return this.minClusterSize;
            }),
            (e.prototype.setMinimumClusterSize = function (e) {
              this.minClusterSize = e;
            }),
            (e.prototype.getMaxZoom = function () {
              return this.maxZoom;
            }),
            (e.prototype.setMaxZoom = function (e) {
              this.maxZoom = e;
            }),
            (e.prototype.getStyles = function () {
              return this.styles;
            }),
            (e.prototype.setStyles = function (e) {
              this.styles = e;
            }),
            (e.prototype.getTitle = function () {
              return this.title;
            }),
            (e.prototype.setTitle = function (e) {
              this.title = e;
            }),
            (e.prototype.getZoomOnClick = function () {
              return this.zoomOnClick;
            }),
            (e.prototype.setZoomOnClick = function (e) {
              this.zoomOnClick = e;
            }),
            (e.prototype.getAverageCenter = function () {
              return this.averageCenter;
            }),
            (e.prototype.setAverageCenter = function (e) {
              this.averageCenter = e;
            }),
            (e.prototype.getIgnoreHidden = function () {
              return this.ignoreHidden;
            }),
            (e.prototype.setIgnoreHidden = function (e) {
              this.ignoreHidden = e;
            }),
            (e.prototype.getEnableRetinaIcons = function () {
              return this.enableRetinaIcons;
            }),
            (e.prototype.setEnableRetinaIcons = function (e) {
              this.enableRetinaIcons = e;
            }),
            (e.prototype.getImageExtension = function () {
              return this.imageExtension;
            }),
            (e.prototype.setImageExtension = function (e) {
              this.imageExtension = e;
            }),
            (e.prototype.getImagePath = function () {
              return this.imagePath;
            }),
            (e.prototype.setImagePath = function (e) {
              this.imagePath = e;
            }),
            (e.prototype.getImageSizes = function () {
              return this.imageSizes;
            }),
            (e.prototype.setImageSizes = function (e) {
              this.imageSizes = e;
            }),
            (e.prototype.getCalculator = function () {
              return this.calculator;
            }),
            (e.prototype.setCalculator = function (e) {
              this.calculator = e;
            }),
            (e.prototype.getBatchSizeIE = function () {
              return this.batchSizeIE;
            }),
            (e.prototype.setBatchSizeIE = function (e) {
              this.batchSizeIE = e;
            }),
            (e.prototype.getClusterClass = function () {
              return this.clusterClass;
            }),
            (e.prototype.setClusterClass = function (e) {
              this.clusterClass = e;
            }),
            (e.prototype.getMarkers = function () {
              return this.markers;
            }),
            (e.prototype.getTotalMarkers = function () {
              return this.markers.length;
            }),
            (e.prototype.getClusters = function () {
              return this.clusters;
            }),
            (e.prototype.getTotalClusters = function () {
              return this.clusters.length;
            }),
            (e.prototype.addMarker = function (e, t) {
              this.pushMarkerTo(e), t || this.redraw();
            }),
            (e.prototype.addMarkers = function (e, t) {
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var i = e[n];
                  i && this.pushMarkerTo(i);
                }
              t || this.redraw();
            }),
            (e.prototype.pushMarkerTo = function (e) {
              var t = this;
              e.getDraggable() &&
                google.maps.event.addListener(e, "dragend", function () {
                  t.ready && ((e.isAdded = !1), t.repaint());
                }),
                (e.isAdded = !1),
                this.markers.push(e);
            }),
            (e.prototype.removeMarker_ = function (e) {
              var t = -1;
              if (this.markers.indexOf) t = this.markers.indexOf(e);
              else
                for (var n = 0; n < this.markers.length; n++)
                  if (e === this.markers[n]) {
                    t = n;
                    break;
                  }
              return (
                -1 !== t && (e.setMap(null), this.markers.splice(t, 1), !0)
              );
            }),
            (e.prototype.removeMarker = function (e, t) {
              var n = this.removeMarker_(e);
              return !t && n && this.repaint(), n;
            }),
            (e.prototype.removeMarkers = function (e, t) {
              for (var n = !1, i = 0, o = e; i < o.length; i++) {
                var a = o[i];
                n = n || this.removeMarker_(a);
              }
              return !t && n && this.repaint(), n;
            }),
            (e.prototype.clearMarkers = function () {
              this.resetViewport(!0), (this.markers = []);
            }),
            (e.prototype.repaint = function () {
              var e = this.clusters.slice();
              (this.clusters = []),
                this.resetViewport(!1),
                this.redraw(),
                setTimeout(function () {
                  for (var t = 0, n = e; t < n.length; t++) {
                    n[t].remove();
                  }
                }, 0);
            }),
            (e.prototype.getExtendedBounds = function (e) {
              var t = this.getProjection(),
                n = t.fromLatLngToDivPixel(
                  new google.maps.LatLng(
                    e.getNorthEast().lat(),
                    e.getNorthEast().lng()
                  )
                );
              null !== n && ((n.x += this.gridSize), (n.y -= this.gridSize));
              var i = t.fromLatLngToDivPixel(
                new google.maps.LatLng(
                  e.getSouthWest().lat(),
                  e.getSouthWest().lng()
                )
              );
              if (
                (null !== i && ((i.x -= this.gridSize), (i.y += this.gridSize)),
                null !== n)
              ) {
                var o = t.fromDivPixelToLatLng(n);
                null !== o && e.extend(o);
              }
              if (null !== i) {
                var a = t.fromDivPixelToLatLng(i);
                null !== a && e.extend(a);
              }
              return e;
            }),
            (e.prototype.redraw = function () {
              this.createClusters(0);
            }),
            (e.prototype.resetViewport = function (e) {
              for (var t = 0, n = this.clusters; t < n.length; t++) {
                n[t].remove();
              }
              this.clusters = [];
              for (var i = 0, o = this.markers; i < o.length; i++) {
                var a = o[i];
                (a.isAdded = !1), e && a.setMap(null);
              }
            }),
            (e.prototype.distanceBetweenPoints = function (e, t) {
              var n = ((t.lat() - e.lat()) * Math.PI) / 180,
                i = ((t.lng() - e.lng()) * Math.PI) / 180,
                o =
                  Math.sin(n / 2) * Math.sin(n / 2) +
                  Math.cos((e.lat() * Math.PI) / 180) *
                    Math.cos((t.lat() * Math.PI) / 180) *
                    Math.sin(i / 2) *
                    Math.sin(i / 2);
              return 2 * Math.atan2(Math.sqrt(o), Math.sqrt(1 - o)) * 6371;
            }),
            (e.prototype.isMarkerInBounds = function (e, t) {
              var n = e.getPosition();
              return !!n && t.contains(n);
            }),
            (e.prototype.addToClosestCluster = function (e) {
              for (
                var t, n = 4e4, i = null, o = 0, a = this.clusters;
                o < a.length;
                o++
              ) {
                var s = (t = a[o]).getCenter(),
                  r = e.getPosition();
                if (s && r) {
                  var l = this.distanceBetweenPoints(s, r);
                  l < n && ((n = l), (i = t));
                }
              }
              i && i.isMarkerInClusterBounds(e)
                ? i.addMarker(e)
                : ((t = new cM(this)).addMarker(e), this.clusters.push(t));
            }),
            (e.prototype.createClusters = function (e) {
              var t = this;
              if (this.ready) {
                0 === e &&
                  (google.maps.event.trigger(this, "clusteringbegin", this),
                  null !== this.timerRefStatic &&
                    (window.clearTimeout(this.timerRefStatic),
                    delete this.timerRefStatic));
                for (
                  var n = this.getMap(),
                    i = null !== n && ("getBounds" in n) ? n.getBounds() : null,
                    o =
                      ((null === n || void 0 === n ? void 0 : n.getZoom()) ||
                        0) > 3
                        ? new google.maps.LatLngBounds(
                            null === i || void 0 === i
                              ? void 0
                              : i.getSouthWest(),
                            null === i || void 0 === i
                              ? void 0
                              : i.getNorthEast()
                          )
                        : new google.maps.LatLngBounds(
                            new google.maps.LatLng(
                              85.02070771743472,
                              -178.48388434375
                            ),
                            new google.maps.LatLng(
                              -85.08136444384544,
                              178.00048865625
                            )
                          ),
                    a = this.getExtendedBounds(o),
                    s = Math.min(e + this.batchSize, this.markers.length),
                    r = e;
                  r < s;
                  r++
                ) {
                  var l = this.markers[r];
                  l &&
                    !l.isAdded &&
                    this.isMarkerInBounds(l, a) &&
                    (!this.ignoreHidden ||
                      (this.ignoreHidden && l.getVisible())) &&
                    this.addToClosestCluster(l);
                }
                if (s < this.markers.length)
                  this.timerRefStatic = window.setTimeout(function () {
                    t.createClusters(s);
                  }, 0);
                else {
                  (this.timerRefStatic = null),
                    google.maps.event.trigger(this, "clusteringend", this);
                  for (var c = 0, u = this.clusters; c < u.length; c++) {
                    u[c].updateIcon();
                  }
                }
              }
            }),
            (e.prototype.extend = function (e, t) {
              return function (e) {
                for (var t in e.prototype) {
                  var n = t;
                  this.prototype[n] = e.prototype[n];
                }
                return this;
              }.apply(e, [t]);
            }),
            e
          );
        })(),
        pM = {
          onClick: "click",
          onClusteringBegin: "clusteringbegin",
          onClusteringEnd: "clusteringend",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
        },
        fM = {
          averageCenter: function (e, t) {
            e.setAverageCenter(t);
          },
          batchSizeIE: function (e, t) {
            e.setBatchSizeIE(t);
          },
          calculator: function (e, t) {
            e.setCalculator(t);
          },
          clusterClass: function (e, t) {
            e.setClusterClass(t);
          },
          enableRetinaIcons: function (e, t) {
            e.setEnableRetinaIcons(t);
          },
          gridSize: function (e, t) {
            e.setGridSize(t);
          },
          ignoreHidden: function (e, t) {
            e.setIgnoreHidden(t);
          },
          imageExtension: function (e, t) {
            e.setImageExtension(t);
          },
          imagePath: function (e, t) {
            e.setImagePath(t);
          },
          imageSizes: function (e, t) {
            e.setImageSizes(t);
          },
          maxZoom: function (e, t) {
            e.setMaxZoom(t);
          },
          minimumClusterSize: function (e, t) {
            e.setMinimumClusterSize(t);
          },
          styles: function (e, t) {
            e.setStyles(t);
          },
          title: function (e, t) {
            e.setTitle(t);
          },
          zoomOnClick: function (e, t) {
            e.setZoomOnClick(t);
          },
        },
        gM = {};
      (0, t.memo)(function (e) {
        var n = e.children,
          i = e.options,
          o = e.averageCenter,
          a = e.batchSizeIE,
          s = e.calculator,
          r = e.clusterClass,
          l = e.enableRetinaIcons,
          c = e.gridSize,
          u = e.ignoreHidden,
          d = e.imageExtension,
          h = e.imagePath,
          p = e.imageSizes,
          f = e.maxZoom,
          g = e.minimumClusterSize,
          m = e.styles,
          v = e.title,
          b = e.zoomOnClick,
          x = e.onClick,
          y = e.onClusteringBegin,
          w = e.onClusteringEnd,
          S = e.onMouseOver,
          k = e.onMouseOut,
          A = e.onLoad,
          C = e.onUnmount,
          M = (0, t.useState)(null),
          P = M[0],
          E = M[1],
          L = (0, t.useContext)(TC),
          T = (0, t.useState)(null),
          O = T[0],
          R = T[1],
          I = (0, t.useState)(null),
          N = I[0],
          _ = I[1],
          D = (0, t.useState)(null),
          z = D[0],
          j = D[1],
          B = (0, t.useState)(null),
          F = B[0],
          W = B[1],
          H = (0, t.useState)(null),
          G = H[0],
          V = H[1];
        return (
          (0, t.useEffect)(
            function () {
              P &&
                k &&
                (null !== F && google.maps.event.removeListener(F),
                W(google.maps.event.addListener(P, pM.onMouseOut, k)));
            },
            [k]
          ),
          (0, t.useEffect)(
            function () {
              P &&
                S &&
                (null !== G && google.maps.event.removeListener(G),
                V(google.maps.event.addListener(P, pM.onMouseOver, S)));
            },
            [S]
          ),
          (0, t.useEffect)(
            function () {
              P &&
                x &&
                (null !== O && google.maps.event.removeListener(O),
                R(google.maps.event.addListener(P, pM.onClick, x)));
            },
            [x]
          ),
          (0, t.useEffect)(
            function () {
              P &&
                y &&
                (null !== N && google.maps.event.removeListener(N),
                _(google.maps.event.addListener(P, pM.onClusteringBegin, y)));
            },
            [y]
          ),
          (0, t.useEffect)(
            function () {
              P &&
                w &&
                (null !== z && google.maps.event.removeListener(z),
                _(google.maps.event.addListener(P, pM.onClusteringEnd, w)));
            },
            [w]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof o && null !== P && fM.averageCenter(P, o);
            },
            [P, o]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof a && null !== P && fM.batchSizeIE(P, a);
            },
            [P, a]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof s && null !== P && fM.calculator(P, s);
            },
            [P, s]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof r && null !== P && fM.clusterClass(P, r);
            },
            [P, r]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof l &&
                null !== P &&
                fM.enableRetinaIcons(P, l);
            },
            [P, l]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof c && null !== P && fM.gridSize(P, c);
            },
            [P, c]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof u && null !== P && fM.ignoreHidden(P, u);
            },
            [P, u]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof d && null !== P && fM.imageExtension(P, d);
            },
            [P, d]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof h && null !== P && fM.imagePath(P, h);
            },
            [P, h]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof p && null !== P && fM.imageSizes(P, p);
            },
            [P, p]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof f && null !== P && fM.maxZoom(P, f);
            },
            [P, f]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof g &&
                null !== P &&
                fM.minimumClusterSize(P, g);
            },
            [P, g]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof m && null !== P && fM.styles(P, m);
            },
            [P, m]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof v && null !== P && fM.title(P, v);
            },
            [P, v]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof b && null !== P && fM.zoomOnClick(P, b);
            },
            [P, b]
          ),
          (0, t.useEffect)(function () {
            if (L) {
              var e = AC({}, i || gM),
                t = new hM(L, [], e);
              return (
                o && fM.averageCenter(t, o),
                a && fM.batchSizeIE(t, a),
                s && fM.calculator(t, s),
                r && fM.clusterClass(t, r),
                l && fM.enableRetinaIcons(t, l),
                c && fM.gridSize(t, c),
                u && fM.ignoreHidden(t, u),
                d && fM.imageExtension(t, d),
                h && fM.imagePath(t, h),
                p && fM.imageSizes(t, p),
                f && fM.maxZoom(t, f),
                g && fM.minimumClusterSize(t, g),
                m && fM.styles(t, m),
                v && fM.title(t, v),
                b && fM.zoomOnClick(t, b),
                k && W(google.maps.event.addListener(t, pM.onMouseOut, k)),
                S && V(google.maps.event.addListener(t, pM.onMouseOver, S)),
                x && R(google.maps.event.addListener(t, pM.onClick, x)),
                y &&
                  _(google.maps.event.addListener(t, pM.onClusteringBegin, y)),
                w && j(google.maps.event.addListener(t, pM.onClusteringEnd, w)),
                E(t),
                A && A(t),
                function () {
                  null !== F && google.maps.event.removeListener(F),
                    null !== G && google.maps.event.removeListener(G),
                    null !== O && google.maps.event.removeListener(O),
                    null !== N && google.maps.event.removeListener(N),
                    null !== z && google.maps.event.removeListener(z),
                    C && C(t);
                }
              );
            }
          }, []),
          (null !== P && n(P)) || null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { markerClusterer: null }),
              (t.setClustererCallback = function () {
                null !== t.state.markerClusterer &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.markerClusterer);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              if (this.context) {
                var e = new hM(this.context, [], this.props.options);
                (this.registeredEvents = _C({
                  updaterMap: fM,
                  eventMap: pM,
                  prevProps: {},
                  nextProps: this.props,
                  instance: e,
                })),
                  this.setState(function () {
                    return { markerClusterer: e };
                  }, this.setClustererCallback);
              }
            }),
            (t.prototype.componentDidUpdate = function (e) {
              this.state.markerClusterer &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: fM,
                  eventMap: pM,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.markerClusterer,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.markerClusterer &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.markerClusterer),
                NC(this.registeredEvents),
                this.state.markerClusterer.setMap(null));
            }),
            (t.prototype.render = function () {
              return null !== this.state.markerClusterer
                ? this.props.children(this.state.markerClusterer)
                : null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      function mM(e) {
        (e.cancelBubble = !0), e.stopPropagation && e.stopPropagation();
      }
      var vM = (function () {
          function e(t) {
            void 0 === t && (t = {}),
              (this.getCloseClickHandler =
                this.getCloseClickHandler.bind(this)),
              (this.closeClickHandler = this.closeClickHandler.bind(this)),
              (this.createInfoBoxDiv = this.createInfoBoxDiv.bind(this)),
              (this.addClickHandler = this.addClickHandler.bind(this)),
              (this.getCloseBoxImg = this.getCloseBoxImg.bind(this)),
              (this.getBoxWidths = this.getBoxWidths.bind(this)),
              (this.setBoxStyle = this.setBoxStyle.bind(this)),
              (this.setPosition = this.setPosition.bind(this)),
              (this.getPosition = this.getPosition.bind(this)),
              (this.setOptions = this.setOptions.bind(this)),
              (this.setContent = this.setContent.bind(this)),
              (this.setVisible = this.setVisible.bind(this)),
              (this.getContent = this.getContent.bind(this)),
              (this.getVisible = this.getVisible.bind(this)),
              (this.setZIndex = this.setZIndex.bind(this)),
              (this.getZIndex = this.getZIndex.bind(this)),
              (this.onRemove = this.onRemove.bind(this)),
              (this.panBox = this.panBox.bind(this)),
              (this.extend = this.extend.bind(this)),
              (this.close = this.close.bind(this)),
              (this.draw = this.draw.bind(this)),
              (this.show = this.show.bind(this)),
              (this.hide = this.hide.bind(this)),
              (this.open = this.open.bind(this)),
              this.extend(e, google.maps.OverlayView),
              (this.content = t.content || ""),
              (this.disableAutoPan = t.disableAutoPan || !1),
              (this.maxWidth = t.maxWidth || 0),
              (this.pixelOffset = t.pixelOffset || new google.maps.Size(0, 0)),
              (this.position = t.position || new google.maps.LatLng(0, 0)),
              (this.zIndex = t.zIndex || null),
              (this.boxClass = t.boxClass || "infoBox"),
              (this.boxStyle = t.boxStyle || {}),
              (this.closeBoxMargin = t.closeBoxMargin || "2px"),
              (this.closeBoxURL =
                t.closeBoxURL ||
                "http://www.google.com/intl/en_us/mapfiles/close.gif"),
              "" === t.closeBoxURL && (this.closeBoxURL = ""),
              (this.infoBoxClearance =
                t.infoBoxClearance || new google.maps.Size(1, 1)),
              "undefined" === typeof t.visible &&
                ("undefined" === typeof t.isHidden
                  ? (t.visible = !0)
                  : (t.visible = !t.isHidden)),
              (this.isHidden = !t.visible),
              (this.alignBottom = t.alignBottom || !1),
              (this.pane = t.pane || "floatPane"),
              (this.enableEventPropagation = t.enableEventPropagation || !1),
              (this.div = null),
              (this.closeListener = null),
              (this.moveListener = null),
              (this.mapListener = null),
              (this.contextListener = null),
              (this.eventListeners = null),
              (this.fixedWidthSet = null);
          }
          return (
            (e.prototype.createInfoBoxDiv = function () {
              var e = this;
              if (!this.div) {
                (this.div = document.createElement("div")),
                  this.setBoxStyle(),
                  "string" === typeof this.content
                    ? (this.div.innerHTML =
                        this.getCloseBoxImg() + this.content)
                    : ((this.div.innerHTML = this.getCloseBoxImg()),
                      this.div.appendChild(this.content));
                var t = this.getPanes();
                if (
                  (null !== t && t[this.pane].appendChild(this.div),
                  this.addClickHandler(),
                  this.div.style.width)
                )
                  this.fixedWidthSet = !0;
                else if (
                  0 !== this.maxWidth &&
                  this.div.offsetWidth > this.maxWidth
                )
                  (this.div.style.width = this.maxWidth + "px"),
                    (this.fixedWidthSet = !0);
                else {
                  var n = this.getBoxWidths();
                  (this.div.style.width =
                    this.div.offsetWidth - n.left - n.right + "px"),
                    (this.fixedWidthSet = !1);
                }
                if (
                  (this.panBox(this.disableAutoPan),
                  !this.enableEventPropagation)
                ) {
                  this.eventListeners = [];
                  for (
                    var i = 0,
                      o = [
                        "mousedown",
                        "mouseover",
                        "mouseout",
                        "mouseup",
                        "click",
                        "dblclick",
                        "touchstart",
                        "touchend",
                        "touchmove",
                      ];
                    i < o.length;
                    i++
                  ) {
                    var a = o[i];
                    this.eventListeners.push(
                      google.maps.event.addListener(this.div, a, mM)
                    );
                  }
                  this.eventListeners.push(
                    google.maps.event.addListener(
                      this.div,
                      "mouseover",
                      function () {
                        e.div && (e.div.style.cursor = "default");
                      }
                    )
                  );
                }
                (this.contextListener = google.maps.event.addListener(
                  this.div,
                  "contextmenu",
                  function (t) {
                    (t.returnValue = !1),
                      t.preventDefault && t.preventDefault(),
                      e.enableEventPropagation || mM(t);
                  }
                )),
                  google.maps.event.trigger(this, "domready");
              }
            }),
            (e.prototype.getCloseBoxImg = function () {
              var e = "";
              return (
                "" !== this.closeBoxURL &&
                  ((e = '<img alt=""'),
                  (e += ' aria-hidden="true"'),
                  (e += " src='" + this.closeBoxURL + "'"),
                  (e += " align=right"),
                  (e += " style='"),
                  (e += " position: relative;"),
                  (e += " cursor: pointer;"),
                  (e += " margin: " + this.closeBoxMargin + ";"),
                  (e += "'>")),
                e
              );
            }),
            (e.prototype.addClickHandler = function () {
              this.closeListener =
                this.div && this.div.firstChild && "" !== this.closeBoxURL
                  ? google.maps.event.addListener(
                      this.div.firstChild,
                      "click",
                      this.getCloseClickHandler()
                    )
                  : null;
            }),
            (e.prototype.closeClickHandler = function (e) {
              (e.cancelBubble = !0),
                e.stopPropagation && e.stopPropagation(),
                google.maps.event.trigger(this, "closeclick"),
                this.close();
            }),
            (e.prototype.getCloseClickHandler = function () {
              return this.closeClickHandler;
            }),
            (e.prototype.panBox = function (e) {
              if (this.div && !e) {
                var t = this.getMap();
                if (t instanceof google.maps.Map) {
                  var n = 0,
                    i = 0,
                    o = t.getBounds();
                  o && !o.contains(this.position) && t.setCenter(this.position);
                  var a = t.getDiv(),
                    s = a.offsetWidth,
                    r = a.offsetHeight,
                    l = this.pixelOffset.width,
                    c = this.pixelOffset.height,
                    u = this.div.offsetWidth,
                    d = this.div.offsetHeight,
                    h = this.infoBoxClearance.width,
                    p = this.infoBoxClearance.height,
                    f = this.getProjection().fromLatLngToContainerPixel(
                      this.position
                    );
                  null !== f &&
                    (f.x < -l + h
                      ? (n = f.x + l - h)
                      : f.x + u + l + h > s && (n = f.x + u + l + h - s),
                    this.alignBottom
                      ? f.y < -c + p + d
                        ? (i = f.y + c - p - d)
                        : f.y + c + p > r && (i = f.y + c + p - r)
                      : f.y < -c + p
                      ? (i = f.y + c - p)
                      : f.y + d + c + p > r && (i = f.y + d + c + p - r)),
                    (0 === n && 0 === i) || t.panBy(n, i);
                }
              }
            }),
            (e.prototype.setBoxStyle = function () {
              if (this.div) {
                (this.div.className = this.boxClass),
                  (this.div.style.cssText = "");
                var e = this.boxStyle;
                for (var t in e)
                  Object.prototype.hasOwnProperty.call(e, t) &&
                    (this.div.style[t] = e[t]);
                if (
                  ((this.div.style.webkitTransform = "translateZ(0)"),
                  "undefined" !== typeof this.div.style.opacity &&
                    "" !== this.div.style.opacity)
                ) {
                  var n = parseFloat(this.div.style.opacity || "");
                  (this.div.style.msFilter =
                    '"progid:DXImageTransform.Microsoft.Alpha(Opacity=' +
                    100 * n +
                    ')"'),
                    (this.div.style.filter = "alpha(opacity=" + 100 * n + ")");
                }
                (this.div.style.position = "absolute"),
                  (this.div.style.visibility = "hidden"),
                  null !== this.zIndex &&
                    (this.div.style.zIndex = this.zIndex + ""),
                  this.div.style.overflow || (this.div.style.overflow = "auto");
              }
            }),
            (e.prototype.getBoxWidths = function () {
              var e = { top: 0, bottom: 0, left: 0, right: 0 };
              if (!this.div) return e;
              if (document.defaultView) {
                var t = this.div.ownerDocument,
                  n =
                    t && t.defaultView
                      ? t.defaultView.getComputedStyle(this.div, "")
                      : null;
                n &&
                  ((e.top = parseInt(n.borderTopWidth || "", 10) || 0),
                  (e.bottom = parseInt(n.borderBottomWidth || "", 10) || 0),
                  (e.left = parseInt(n.borderLeftWidth || "", 10) || 0),
                  (e.right = parseInt(n.borderRightWidth || "", 10) || 0));
              } else if (document.documentElement.currentStyle) {
                var i = this.div.currentStyle;
                i &&
                  ((e.top = parseInt(i.borderTopWidth || "", 10) || 0),
                  (e.bottom = parseInt(i.borderBottomWidth || "", 10) || 0),
                  (e.left = parseInt(i.borderLeftWidth || "", 10) || 0),
                  (e.right = parseInt(i.borderRightWidth || "", 10) || 0));
              }
              return e;
            }),
            (e.prototype.onRemove = function () {
              this.div &&
                this.div.parentNode &&
                (this.div.parentNode.removeChild(this.div), (this.div = null));
            }),
            (e.prototype.draw = function () {
              if ((this.createInfoBoxDiv(), this.div)) {
                var e = this.getProjection().fromLatLngToDivPixel(
                  this.position
                );
                null !== e &&
                  ((this.div.style.left = e.x + this.pixelOffset.width + "px"),
                  this.alignBottom
                    ? (this.div.style.bottom =
                        -(e.y + this.pixelOffset.height) + "px")
                    : (this.div.style.top =
                        e.y + this.pixelOffset.height + "px")),
                  this.isHidden
                    ? (this.div.style.visibility = "hidden")
                    : (this.div.style.visibility = "visible");
              }
            }),
            (e.prototype.setOptions = function (e) {
              void 0 === e && (e = {}),
                "undefined" !== typeof e.boxClass &&
                  ((this.boxClass = e.boxClass), this.setBoxStyle()),
                "undefined" !== typeof e.boxStyle &&
                  ((this.boxStyle = e.boxStyle), this.setBoxStyle()),
                "undefined" !== typeof e.content && this.setContent(e.content),
                "undefined" !== typeof e.disableAutoPan &&
                  (this.disableAutoPan = e.disableAutoPan),
                "undefined" !== typeof e.maxWidth &&
                  (this.maxWidth = e.maxWidth),
                "undefined" !== typeof e.pixelOffset &&
                  (this.pixelOffset = e.pixelOffset),
                "undefined" !== typeof e.alignBottom &&
                  (this.alignBottom = e.alignBottom),
                "undefined" !== typeof e.position &&
                  this.setPosition(e.position),
                "undefined" !== typeof e.zIndex && this.setZIndex(e.zIndex),
                "undefined" !== typeof e.closeBoxMargin &&
                  (this.closeBoxMargin = e.closeBoxMargin),
                "undefined" !== typeof e.closeBoxURL &&
                  (this.closeBoxURL = e.closeBoxURL),
                "undefined" !== typeof e.infoBoxClearance &&
                  (this.infoBoxClearance = e.infoBoxClearance),
                "undefined" !== typeof e.isHidden &&
                  (this.isHidden = e.isHidden),
                "undefined" !== typeof e.visible &&
                  (this.isHidden = !e.visible),
                "undefined" !== typeof e.enableEventPropagation &&
                  (this.enableEventPropagation = e.enableEventPropagation),
                this.div && this.draw();
            }),
            (e.prototype.setContent = function (e) {
              (this.content = e),
                this.div &&
                  (this.closeListener &&
                    (google.maps.event.removeListener(this.closeListener),
                    (this.closeListener = null)),
                  this.fixedWidthSet || (this.div.style.width = ""),
                  "string" === typeof e
                    ? (this.div.innerHTML = this.getCloseBoxImg() + e)
                    : ((this.div.innerHTML = this.getCloseBoxImg()),
                      this.div.appendChild(e)),
                  this.fixedWidthSet ||
                    ((this.div.style.width = this.div.offsetWidth + "px"),
                    "string" === typeof e
                      ? (this.div.innerHTML = this.getCloseBoxImg() + e)
                      : ((this.div.innerHTML = this.getCloseBoxImg()),
                        this.div.appendChild(e))),
                  this.addClickHandler()),
                google.maps.event.trigger(this, "content_changed");
            }),
            (e.prototype.setPosition = function (e) {
              (this.position = e),
                this.div && this.draw(),
                google.maps.event.trigger(this, "position_changed");
            }),
            (e.prototype.setVisible = function (e) {
              (this.isHidden = !e),
                this.div &&
                  (this.div.style.visibility = this.isHidden
                    ? "hidden"
                    : "visible");
            }),
            (e.prototype.setZIndex = function (e) {
              (this.zIndex = e),
                this.div && (this.div.style.zIndex = e + ""),
                google.maps.event.trigger(this, "zindex_changed");
            }),
            (e.prototype.getContent = function () {
              return this.content;
            }),
            (e.prototype.getPosition = function () {
              return this.position;
            }),
            (e.prototype.getZIndex = function () {
              return this.zIndex;
            }),
            (e.prototype.getVisible = function () {
              var e = this.getMap();
              return "undefined" !== typeof e && null !== e && !this.isHidden;
            }),
            (e.prototype.show = function () {
              (this.isHidden = !1),
                this.div && (this.div.style.visibility = "visible");
            }),
            (e.prototype.hide = function () {
              (this.isHidden = !0),
                this.div && (this.div.style.visibility = "hidden");
            }),
            (e.prototype.open = function (e, t) {
              var n = this;
              t &&
                ((this.position = t.getPosition()),
                (this.moveListener = google.maps.event.addListener(
                  t,
                  "position_changed",
                  function () {
                    var e = t.getPosition();
                    n.setPosition(e);
                  }
                )),
                (this.mapListener = google.maps.event.addListener(
                  t,
                  "map_changed",
                  function () {
                    n.setMap(t.map);
                  }
                ))),
                this.setMap(e),
                this.div && this.panBox();
            }),
            (e.prototype.close = function () {
              if (
                (this.closeListener &&
                  (google.maps.event.removeListener(this.closeListener),
                  (this.closeListener = null)),
                this.eventListeners)
              ) {
                for (var e = 0, t = this.eventListeners; e < t.length; e++) {
                  var n = t[e];
                  google.maps.event.removeListener(n);
                }
                this.eventListeners = null;
              }
              this.moveListener &&
                (google.maps.event.removeListener(this.moveListener),
                (this.moveListener = null)),
                this.mapListener &&
                  (google.maps.event.removeListener(this.mapListener),
                  (this.mapListener = null)),
                this.contextListener &&
                  (google.maps.event.removeListener(this.contextListener),
                  (this.contextListener = null)),
                this.setMap(null);
            }),
            (e.prototype.extend = function (e, t) {
              return function (e) {
                for (var t in e.prototype)
                  Object.prototype.hasOwnProperty.call(this, t) ||
                    (this.prototype[t] = e.prototype[t]);
                return this;
              }.apply(e, [t]);
            }),
            e
          );
        })(),
        bM = {
          onCloseClick: "closeclick",
          onContentChanged: "content_changed",
          onDomReady: "domready",
          onPositionChanged: "position_changed",
          onZindexChanged: "zindex_changed",
        },
        xM = {
          options: function (e, t) {
            e.setOptions(t);
          },
          position: function (e, t) {
            t instanceof google.maps.LatLng
              ? e.setPosition(t)
              : e.setPosition(new google.maps.LatLng(t.lat, t.lng));
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
          zIndex: function (e, t) {
            e.setZIndex(t);
          },
        },
        yM = {};
      (0, t.memo)(function (e) {
        var n = e.children,
          i = e.anchor,
          o = e.options,
          a = e.position,
          s = e.zIndex,
          r = e.onCloseClick,
          l = e.onDomReady,
          c = e.onContentChanged,
          u = e.onPositionChanged,
          d = e.onZindexChanged,
          h = e.onLoad,
          p = e.onUnmount,
          f = (0, t.useContext)(TC),
          g = (0, t.useState)(null),
          m = g[0],
          v = g[1],
          b = (0, t.useState)(null),
          x = b[0],
          y = b[1],
          w = (0, t.useState)(null),
          S = w[0],
          k = w[1],
          A = (0, t.useState)(null),
          C = A[0],
          M = A[1],
          P = (0, t.useState)(null),
          E = P[0],
          L = P[1],
          T = (0, t.useState)(null),
          O = T[0],
          R = T[1],
          I = (0, t.useRef)(null);
        return (
          (0, t.useEffect)(
            function () {
              f &&
                null !== m &&
                (m.close(), i ? m.open(f, i) : m.getPosition() && m.open(f));
            },
            [f, m, i]
          ),
          (0, t.useEffect)(
            function () {
              o && null !== m && m.setOptions(o);
            },
            [m, o]
          ),
          (0, t.useEffect)(
            function () {
              if (a && null !== m) {
                var e =
                  a instanceof google.maps.LatLng
                    ? a
                    : new google.maps.LatLng(a.lat, a.lng);
                m.setPosition(e);
              }
            },
            [a]
          ),
          (0, t.useEffect)(
            function () {
              "number" === typeof s && null !== m && m.setZIndex(s);
            },
            [s]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                r &&
                (null !== x && google.maps.event.removeListener(x),
                y(google.maps.event.addListener(m, "closeclick", r)));
            },
            [r]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                l &&
                (null !== S && google.maps.event.removeListener(S),
                k(google.maps.event.addListener(m, "domready", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                c &&
                (null !== C && google.maps.event.removeListener(C),
                M(google.maps.event.addListener(m, "content_changed", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                u &&
                (null !== E && google.maps.event.removeListener(E),
                L(google.maps.event.addListener(m, "position_changed", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                d &&
                (null !== O && google.maps.event.removeListener(O),
                R(google.maps.event.addListener(m, "zindex_changed", d)));
            },
            [d]
          ),
          (0, t.useEffect)(function () {
            if (f) {
              var e = o || yM,
                t = e.position,
                n = CC(e, ["position"]),
                a = void 0;
              !t ||
                t instanceof google.maps.LatLng ||
                (a = new google.maps.LatLng(t.lat, t.lng));
              var s = new vM(AC(AC({}, n), a ? { position: a } : {}));
              (I.current = document.createElement("div")),
                v(s),
                r && y(google.maps.event.addListener(s, "closeclick", r)),
                l && k(google.maps.event.addListener(s, "domready", l)),
                c && M(google.maps.event.addListener(s, "content_changed", c)),
                u && L(google.maps.event.addListener(s, "position_changed", u)),
                d && R(google.maps.event.addListener(s, "zindex_changed", d)),
                s.setContent(I.current),
                i
                  ? s.open(f, i)
                  : s.getPosition()
                  ? s.open(f)
                  : LC(
                      !1,
                      "You must provide either an anchor or a position prop for <InfoBox>."
                    ),
                h && h(s);
            }
            return function () {
              null !== m &&
                (x && google.maps.event.removeListener(x),
                C && google.maps.event.removeListener(C),
                S && google.maps.event.removeListener(S),
                E && google.maps.event.removeListener(E),
                O && google.maps.event.removeListener(O),
                p && p(m),
                m.close());
            };
          }, []),
          I.current ? (0, yl.createPortal)(t.Children.only(n), I.current) : null
        );
      }),
        (function (e) {
          function n() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.containerElement = null),
              (t.state = { infoBox: null }),
              (t.open = function (e, n) {
                n
                  ? null !== t.context && e.open(t.context, n)
                  : e.getPosition()
                  ? null !== t.context && e.open(t.context)
                  : LC(
                      !1,
                      "You must provide either an anchor or a position prop for <InfoBox>."
                    );
              }),
              (t.setInfoBoxCallback = function () {
                null !== t.state.infoBox &&
                  null !== t.containerElement &&
                  (t.state.infoBox.setContent(t.containerElement),
                  t.open(t.state.infoBox, t.props.anchor),
                  t.props.onLoad && t.props.onLoad(t.state.infoBox));
              }),
              t
            );
          }
          kC(n, e),
            (n.prototype.componentDidMount = function () {
              var e,
                t = this.props.options || {},
                n = t.position,
                i = CC(t, ["position"]);
              !n ||
                n instanceof google.maps.LatLng ||
                (e = new google.maps.LatLng(n.lat, n.lng));
              var o = new vM(AC(AC({}, i), e ? { position: e } : {}));
              (this.containerElement = document.createElement("div")),
                (this.registeredEvents = _C({
                  updaterMap: xM,
                  eventMap: bM,
                  prevProps: {},
                  nextProps: this.props,
                  instance: o,
                })),
                this.setState({ infoBox: o }, this.setInfoBoxCallback);
            }),
            (n.prototype.componentDidUpdate = function (e) {
              var t = this.state.infoBox;
              null !== t &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: xM,
                  eventMap: bM,
                  prevProps: e,
                  nextProps: this.props,
                  instance: t,
                })));
            }),
            (n.prototype.componentWillUnmount = function () {
              var e = this.props.onUnmount,
                t = this.state.infoBox;
              null !== t && (e && e(t), NC(this.registeredEvents), t.close());
            }),
            (n.prototype.render = function () {
              return this.containerElement
                ? (0, yl.createPortal)(
                    t.Children.only(this.props.children),
                    this.containerElement
                  )
                : null;
            }),
            (n.contextType = TC);
        })(t.PureComponent);
      var wM = function e(t, n) {
          if (t === n) return !0;
          if (t && n && "object" == typeof t && "object" == typeof n) {
            if (t.constructor !== n.constructor) return !1;
            var i, o, a;
            if (Array.isArray(t)) {
              if ((i = t.length) != n.length) return !1;
              for (o = i; 0 !== o--; ) if (!e(t[o], n[o])) return !1;
              return !0;
            }
            if (t.constructor === RegExp)
              return t.source === n.source && t.flags === n.flags;
            if (t.valueOf !== Object.prototype.valueOf)
              return t.valueOf() === n.valueOf();
            if (t.toString !== Object.prototype.toString)
              return t.toString() === n.toString();
            if ((i = (a = Object.keys(t)).length) !== Object.keys(n).length)
              return !1;
            for (o = i; 0 !== o--; )
              if (!Object.prototype.hasOwnProperty.call(n, a[o])) return !1;
            for (o = i; 0 !== o--; ) {
              var s = a[o];
              if (!e(t[s], n[s])) return !1;
            }
            return !0;
          }
          return t !== t && n !== n;
        },
        SM = EC(wM);
      const kM = [
        Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array,
      ];
      class AM {
        static from(e) {
          if (!(e instanceof ArrayBuffer))
            throw new Error("Data must be an instance of ArrayBuffer.");
          const [t, n] = new Uint8Array(e, 0, 2);
          if (219 !== t)
            throw new Error("Data does not appear to be in a KDBush format.");
          const i = n >> 4;
          if (1 !== i)
            throw new Error(
              "Got v".concat(i, " data when expected v").concat(1, ".")
            );
          const o = kM[15 & n];
          if (!o) throw new Error("Unrecognized array type.");
          const [a] = new Uint16Array(e, 2, 1),
            [s] = new Uint32Array(e, 4, 1);
          return new AM(s, a, o, e);
        }
        constructor(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 64,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : Float64Array,
            i = arguments.length > 3 ? arguments[3] : void 0;
          if (isNaN(e) || e < 0)
            throw new Error("Unpexpected numItems value: ".concat(e, "."));
          (this.numItems = +e),
            (this.nodeSize = Math.min(Math.max(+t, 2), 65535)),
            (this.ArrayType = n),
            (this.IndexArrayType = e < 65536 ? Uint16Array : Uint32Array);
          const o = kM.indexOf(this.ArrayType),
            a = 2 * e * this.ArrayType.BYTES_PER_ELEMENT,
            s = e * this.IndexArrayType.BYTES_PER_ELEMENT,
            r = (8 - (s % 8)) % 8;
          if (o < 0)
            throw new Error("Unexpected typed array class: ".concat(n, "."));
          i && i instanceof ArrayBuffer
            ? ((this.data = i),
              (this.ids = new this.IndexArrayType(this.data, 8, e)),
              (this.coords = new this.ArrayType(this.data, 8 + s + r, 2 * e)),
              (this._pos = 2 * e),
              (this._finished = !0))
            : ((this.data = new ArrayBuffer(8 + a + s + r)),
              (this.ids = new this.IndexArrayType(this.data, 8, e)),
              (this.coords = new this.ArrayType(this.data, 8 + s + r, 2 * e)),
              (this._pos = 0),
              (this._finished = !1),
              new Uint8Array(this.data, 0, 2).set([219, 16 + o]),
              (new Uint16Array(this.data, 2, 1)[0] = t),
              (new Uint32Array(this.data, 4, 1)[0] = e));
        }
        add(e, t) {
          const n = this._pos >> 1;
          return (
            (this.ids[n] = n),
            (this.coords[this._pos++] = e),
            (this.coords[this._pos++] = t),
            n
          );
        }
        finish() {
          const e = this._pos >> 1;
          if (e !== this.numItems)
            throw new Error(
              "Added "
                .concat(e, " items when expected ")
                .concat(this.numItems, ".")
            );
          return (
            CM(this.ids, this.coords, this.nodeSize, 0, this.numItems - 1, 0),
            (this._finished = !0),
            this
          );
        }
        range(e, t, n, i) {
          if (!this._finished)
            throw new Error("Data not yet indexed - call index.finish().");
          const { ids: o, coords: a, nodeSize: s } = this,
            r = [0, o.length - 1, 0],
            l = [];
          for (; r.length; ) {
            const c = r.pop() || 0,
              u = r.pop() || 0,
              d = r.pop() || 0;
            if (u - d <= s) {
              for (let s = d; s <= u; s++) {
                const r = a[2 * s],
                  c = a[2 * s + 1];
                r >= e && r <= n && c >= t && c <= i && l.push(o[s]);
              }
              continue;
            }
            const h = (d + u) >> 1,
              p = a[2 * h],
              f = a[2 * h + 1];
            p >= e && p <= n && f >= t && f <= i && l.push(o[h]),
              (0 === c ? e <= p : t <= f) &&
                (r.push(d), r.push(h - 1), r.push(1 - c)),
              (0 === c ? n >= p : i >= f) &&
                (r.push(h + 1), r.push(u), r.push(1 - c));
          }
          return l;
        }
        within(e, t, n) {
          if (!this._finished)
            throw new Error("Data not yet indexed - call index.finish().");
          const { ids: i, coords: o, nodeSize: a } = this,
            s = [0, i.length - 1, 0],
            r = [],
            l = n * n;
          for (; s.length; ) {
            const c = s.pop() || 0,
              u = s.pop() || 0,
              d = s.pop() || 0;
            if (u - d <= a) {
              for (let n = d; n <= u; n++)
                LM(o[2 * n], o[2 * n + 1], e, t) <= l && r.push(i[n]);
              continue;
            }
            const h = (d + u) >> 1,
              p = o[2 * h],
              f = o[2 * h + 1];
            LM(p, f, e, t) <= l && r.push(i[h]),
              (0 === c ? e - n <= p : t - n <= f) &&
                (s.push(d), s.push(h - 1), s.push(1 - c)),
              (0 === c ? e + n >= p : t + n >= f) &&
                (s.push(h + 1), s.push(u), s.push(1 - c));
          }
          return r;
        }
      }
      function CM(e, t, n, i, o, a) {
        if (o - i <= n) return;
        const s = (i + o) >> 1;
        MM(e, t, s, i, o, a),
          CM(e, t, n, i, s - 1, 1 - a),
          CM(e, t, n, s + 1, o, 1 - a);
      }
      function MM(e, t, n, i, o, a) {
        for (; o > i; ) {
          if (o - i > 600) {
            const s = o - i + 1,
              r = n - i + 1,
              l = Math.log(s),
              c = 0.5 * Math.exp((2 * l) / 3),
              u =
                0.5 *
                Math.sqrt((l * c * (s - c)) / s) *
                (r - s / 2 < 0 ? -1 : 1);
            MM(
              e,
              t,
              n,
              Math.max(i, Math.floor(n - (r * c) / s + u)),
              Math.min(o, Math.floor(n + ((s - r) * c) / s + u)),
              a
            );
          }
          const s = t[2 * n + a];
          let r = i,
            l = o;
          for (PM(e, t, i, n), t[2 * o + a] > s && PM(e, t, i, o); r < l; ) {
            for (PM(e, t, r, l), r++, l--; t[2 * r + a] < s; ) r++;
            for (; t[2 * l + a] > s; ) l--;
          }
          t[2 * i + a] === s ? PM(e, t, i, l) : (l++, PM(e, t, l, o)),
            l <= n && (i = l + 1),
            n <= l && (o = l - 1);
        }
      }
      function PM(e, t, n, i) {
        EM(e, n, i), EM(t, 2 * n, 2 * i), EM(t, 2 * n + 1, 2 * i + 1);
      }
      function EM(e, t, n) {
        const i = e[t];
        (e[t] = e[n]), (e[n] = i);
      }
      function LM(e, t, n, i) {
        const o = e - n,
          a = t - i;
        return o * o + a * a;
      }
      const TM = {
          minZoom: 0,
          maxZoom: 16,
          minPoints: 2,
          radius: 40,
          extent: 512,
          nodeSize: 64,
          log: !1,
          generateId: !1,
          reduce: null,
          map: (e) => e,
        },
        OM =
          Math.fround ||
          ((RM = new Float32Array(1)), (e) => ((RM[0] = +e), RM[0]));
      var RM;
      const IM = 3,
        NM = 5,
        _M = 6;
      class DM {
        constructor(e) {
          (this.options = Object.assign(Object.create(TM), e)),
            (this.trees = new Array(this.options.maxZoom + 1)),
            (this.stride = this.options.reduce ? 7 : 6),
            (this.clusterProps = []);
        }
        load(e) {
          const { log: t, minZoom: n, maxZoom: i } = this.options;
          t && console.time("total time");
          const o = "prepare ".concat(e.length, " points");
          t && console.time(o), (this.points = e);
          const a = [];
          for (let r = 0; r < e.length; r++) {
            const t = e[r];
            if (!t.geometry) continue;
            const [n, i] = t.geometry.coordinates,
              o = OM(BM(n)),
              s = OM(FM(i));
            a.push(o, s, 1 / 0, r, -1, 1), this.options.reduce && a.push(0);
          }
          let s = (this.trees[i + 1] = this._createTree(a));
          t && console.timeEnd(o);
          for (let r = i; r >= n; r--) {
            const e = +Date.now();
            (s = this.trees[r] = this._createTree(this._cluster(s, r))),
              t &&
                console.log(
                  "z%d: %d clusters in %dms",
                  r,
                  s.numItems,
                  +Date.now() - e
                );
          }
          return t && console.timeEnd("total time"), this;
        }
        getClusters(e, t) {
          let n = ((((e[0] + 180) % 360) + 360) % 360) - 180;
          const i = Math.max(-90, Math.min(90, e[1]));
          let o =
            180 === e[2] ? 180 : ((((e[2] + 180) % 360) + 360) % 360) - 180;
          const a = Math.max(-90, Math.min(90, e[3]));
          if (e[2] - e[0] >= 360) (n = -180), (o = 180);
          else if (n > o) {
            const e = this.getClusters([n, i, 180, a], t),
              s = this.getClusters([-180, i, o, a], t);
            return e.concat(s);
          }
          const s = this.trees[this._limitZoom(t)],
            r = s.range(BM(n), FM(a), BM(o), FM(i)),
            l = s.data,
            c = [];
          for (const u of r) {
            const e = this.stride * u;
            c.push(
              l[e + NM] > 1
                ? zM(l, e, this.clusterProps)
                : this.points[l[e + IM]]
            );
          }
          return c;
        }
        getChildren(e) {
          const t = this._getOriginId(e),
            n = this._getOriginZoom(e),
            i = "No cluster with the specified id.",
            o = this.trees[n];
          if (!o) throw new Error(i);
          const a = o.data;
          if (t * this.stride >= a.length) throw new Error(i);
          const s =
              this.options.radius / (this.options.extent * Math.pow(2, n - 1)),
            r = a[t * this.stride],
            l = a[t * this.stride + 1],
            c = o.within(r, l, s),
            u = [];
          for (const d of c) {
            const t = d * this.stride;
            a[t + 4] === e &&
              u.push(
                a[t + NM] > 1
                  ? zM(a, t, this.clusterProps)
                  : this.points[a[t + IM]]
              );
          }
          if (0 === u.length) throw new Error(i);
          return u;
        }
        getLeaves(e, t, n) {
          (t = t || 10), (n = n || 0);
          const i = [];
          return this._appendLeaves(i, e, t, n, 0), i;
        }
        getTile(e, t, n) {
          const i = this.trees[this._limitZoom(e)],
            o = Math.pow(2, e),
            { extent: a, radius: s } = this.options,
            r = s / a,
            l = (n - r) / o,
            c = (n + 1 + r) / o,
            u = { features: [] };
          return (
            this._addTileFeatures(
              i.range((t - r) / o, l, (t + 1 + r) / o, c),
              i.data,
              t,
              n,
              o,
              u
            ),
            0 === t &&
              this._addTileFeatures(
                i.range(1 - r / o, l, 1, c),
                i.data,
                o,
                n,
                o,
                u
              ),
            t === o - 1 &&
              this._addTileFeatures(
                i.range(0, l, r / o, c),
                i.data,
                -1,
                n,
                o,
                u
              ),
            u.features.length ? u : null
          );
        }
        getClusterExpansionZoom(e) {
          let t = this._getOriginZoom(e) - 1;
          for (; t <= this.options.maxZoom; ) {
            const n = this.getChildren(e);
            if ((t++, 1 !== n.length)) break;
            e = n[0].properties.cluster_id;
          }
          return t;
        }
        _appendLeaves(e, t, n, i, o) {
          const a = this.getChildren(t);
          for (const s of a) {
            const t = s.properties;
            if (
              (t && t.cluster
                ? o + t.point_count <= i
                  ? (o += t.point_count)
                  : (o = this._appendLeaves(e, t.cluster_id, n, i, o))
                : o < i
                ? o++
                : e.push(s),
              e.length === n)
            )
              break;
          }
          return o;
        }
        _createTree(e) {
          const t = new AM(
            (e.length / this.stride) | 0,
            this.options.nodeSize,
            Float32Array
          );
          for (let n = 0; n < e.length; n += this.stride) t.add(e[n], e[n + 1]);
          return t.finish(), (t.data = e), t;
        }
        _addTileFeatures(e, t, n, i, o, a) {
          for (const s of e) {
            const e = s * this.stride,
              r = t[e + NM] > 1;
            let l, c, u;
            if (r)
              (l = jM(t, e, this.clusterProps)), (c = t[e]), (u = t[e + 1]);
            else {
              const n = this.points[t[e + IM]];
              l = n.properties;
              const [i, o] = n.geometry.coordinates;
              (c = BM(i)), (u = FM(o));
            }
            const d = {
              type: 1,
              geometry: [
                [
                  Math.round(this.options.extent * (c * o - n)),
                  Math.round(this.options.extent * (u * o - i)),
                ],
              ],
              tags: l,
            };
            let h;
            (h =
              r || this.options.generateId
                ? t[e + IM]
                : this.points[t[e + IM]].id),
              void 0 !== h && (d.id = h),
              a.features.push(d);
          }
        }
        _limitZoom(e) {
          return Math.max(
            this.options.minZoom,
            Math.min(Math.floor(+e), this.options.maxZoom + 1)
          );
        }
        _cluster(e, t) {
          const {
              radius: n,
              extent: i,
              reduce: o,
              minPoints: a,
            } = this.options,
            s = n / (i * Math.pow(2, t)),
            r = e.data,
            l = [],
            c = this.stride;
          for (let u = 0; u < r.length; u += c) {
            if (r[u + 2] <= t) continue;
            r[u + 2] = t;
            const n = r[u],
              i = r[u + 1],
              d = e.within(r[u], r[u + 1], s),
              h = r[u + NM];
            let p = h;
            for (const e of d) {
              const n = e * c;
              r[n + 2] > t && (p += r[n + NM]);
            }
            if (p > h && p >= a) {
              let e,
                a = n * h,
                s = i * h,
                f = -1;
              const g = ((u / c) << 5) + (t + 1) + this.points.length;
              for (const n of d) {
                const i = n * c;
                if (r[i + 2] <= t) continue;
                r[i + 2] = t;
                const l = r[i + NM];
                (a += r[i] * l),
                  (s += r[i + 1] * l),
                  (r[i + 4] = g),
                  o &&
                    (e ||
                      ((e = this._map(r, u, !0)),
                      (f = this.clusterProps.length),
                      this.clusterProps.push(e)),
                    o(e, this._map(r, i)));
              }
              (r[u + 4] = g),
                l.push(a / p, s / p, 1 / 0, g, -1, p),
                o && l.push(f);
            } else {
              for (let e = 0; e < c; e++) l.push(r[u + e]);
              if (p > 1)
                for (const e of d) {
                  const n = e * c;
                  if (!(r[n + 2] <= t)) {
                    r[n + 2] = t;
                    for (let e = 0; e < c; e++) l.push(r[n + e]);
                  }
                }
            }
          }
          return l;
        }
        _getOriginId(e) {
          return (e - this.points.length) >> 5;
        }
        _getOriginZoom(e) {
          return (e - this.points.length) % 32;
        }
        _map(e, t, n) {
          if (e[t + NM] > 1) {
            const i = this.clusterProps[e[t + _M]];
            return n ? Object.assign({}, i) : i;
          }
          const i = this.points[e[t + IM]].properties,
            o = this.options.map(i);
          return n && o === i ? Object.assign({}, o) : o;
        }
      }
      function zM(e, t, n) {
        return {
          type: "Feature",
          id: e[t + IM],
          properties: jM(e, t, n),
          geometry: {
            type: "Point",
            coordinates: [((i = e[t]), 360 * (i - 0.5)), WM(e[t + 1])],
          },
        };
        var i;
      }
      function jM(e, t, n) {
        const i = e[t + NM],
          o =
            i >= 1e4
              ? "".concat(Math.round(i / 1e3), "k")
              : i >= 1e3
              ? "".concat(Math.round(i / 100) / 10, "k")
              : i,
          a = e[t + _M],
          s = -1 === a ? {} : Object.assign({}, n[a]);
        return Object.assign(s, {
          cluster: !0,
          cluster_id: e[t + IM],
          point_count: i,
          point_count_abbreviated: o,
        });
      }
      function BM(e) {
        return e / 360 + 0.5;
      }
      function FM(e) {
        const t = Math.sin((e * Math.PI) / 180),
          n = 0.5 - (0.25 * Math.log((1 + t) / (1 - t))) / Math.PI;
        return n < 0 ? 0 : n > 1 ? 1 : n;
      }
      function WM(e) {
        const t = ((180 - 360 * e) * Math.PI) / 180;
        return (360 * Math.atan(Math.exp(t))) / Math.PI - 90;
      }
      function HM(e, t) {
        var n = {};
        for (var i in e)
          Object.prototype.hasOwnProperty.call(e, i) &&
            t.indexOf(i) < 0 &&
            (n[i] = e[i]);
        if (null != e && "function" === typeof Object.getOwnPropertySymbols) {
          var o = 0;
          for (i = Object.getOwnPropertySymbols(e); o < i.length; o++)
            t.indexOf(i[o]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(e, i[o]) &&
              (n[i[o]] = e[i[o]]);
        }
        return n;
      }
      class GM {
        static isAdvancedMarkerAvailable(e) {
          return (
            google.maps.marker &&
            !0 === e.getMapCapabilities().isAdvancedMarkersAvailable
          );
        }
        static isAdvancedMarker(e) {
          return (
            google.maps.marker &&
            e instanceof google.maps.marker.AdvancedMarkerElement
          );
        }
        static setMap(e, t) {
          this.isAdvancedMarker(e) ? (e.map = t) : e.setMap(t);
        }
        static getPosition(e) {
          if (this.isAdvancedMarker(e)) {
            if (e.position) {
              if (e.position instanceof google.maps.LatLng) return e.position;
              if (e.position.lat && e.position.lng)
                return new google.maps.LatLng(e.position.lat, e.position.lng);
            }
            return new google.maps.LatLng(null);
          }
          return e.getPosition();
        }
        static getVisible(e) {
          return !!this.isAdvancedMarker(e) || e.getVisible();
        }
      }
      class VM {
        constructor(e) {
          let { markers: t, position: n } = e;
          (this.markers = t),
            n &&
              (n instanceof google.maps.LatLng
                ? (this._position = n)
                : (this._position = new google.maps.LatLng(n)));
        }
        get bounds() {
          if (0 === this.markers.length && !this._position) return;
          const e = new google.maps.LatLngBounds(
            this._position,
            this._position
          );
          for (const t of this.markers) e.extend(GM.getPosition(t));
          return e;
        }
        get position() {
          return this._position || this.bounds.getCenter();
        }
        get count() {
          return this.markers.filter((e) => GM.getVisible(e)).length;
        }
        push(e) {
          this.markers.push(e);
        }
        delete() {
          this.marker && (GM.setMap(this.marker, null), (this.marker = void 0)),
            (this.markers.length = 0);
        }
      }
      class UM {
        constructor(e) {
          let { maxZoom: t = 16 } = e;
          this.maxZoom = t;
        }
        noop(e) {
          let { markers: t } = e;
          return YM(t);
        }
      }
      const YM = (e) => {
        const t = e.map(
          (e) => new VM({ position: GM.getPosition(e), markers: [e] })
        );
        return t;
      };
      class XM extends UM {
        constructor(e) {
          var { maxZoom: t, radius: n = 60 } = e,
            i = HM(e, ["maxZoom", "radius"]);
          super({ maxZoom: t }),
            (this.state = { zoom: -1 }),
            (this.superCluster = new DM(
              Object.assign({ maxZoom: this.maxZoom, radius: n }, i)
            ));
        }
        calculate(e) {
          let t = !1;
          const n = { zoom: e.map.getZoom() };
          if (!SM(e.markers, this.markers)) {
            (t = !0), (this.markers = [...e.markers]);
            const n = this.markers.map((e) => {
              const t = GM.getPosition(e);
              return {
                type: "Feature",
                geometry: { type: "Point", coordinates: [t.lng(), t.lat()] },
                properties: { marker: e },
              };
            });
            this.superCluster.load(n);
          }
          return (
            t ||
              ((this.state.zoom <= this.maxZoom || n.zoom <= this.maxZoom) &&
                (t = !SM(this.state, n))),
            (this.state = n),
            t && (this.clusters = this.cluster(e)),
            { clusters: this.clusters, changed: t }
          );
        }
        cluster(e) {
          let { map: t } = e;
          return this.superCluster
            .getClusters([-180, -90, 180, 90], Math.round(t.getZoom()))
            .map((e) => this.transformCluster(e));
        }
        transformCluster(e) {
          let {
            geometry: {
              coordinates: [t, n],
            },
            properties: i,
          } = e;
          if (i.cluster)
            return new VM({
              markers: this.superCluster
                .getLeaves(i.cluster_id, 1 / 0)
                .map((e) => e.properties.marker),
              position: { lat: n, lng: t },
            });
          const o = i.marker;
          return new VM({ markers: [o], position: GM.getPosition(o) });
        }
      }
      class KM {
        constructor(e, t) {
          this.markers = { sum: e.length };
          const n = t.map((e) => e.count),
            i = n.reduce((e, t) => e + t, 0);
          this.clusters = {
            count: t.length,
            markers: {
              mean: i / t.length,
              sum: i,
              min: Math.min(...n),
              max: Math.max(...n),
            },
          };
        }
      }
      class qM {
        render(e, t, n) {
          let { count: i, position: o } = e;
          const a =
              i > Math.max(10, t.clusters.markers.mean) ? "#ff0000" : "#0000ff",
            s = '<svg fill="'
              .concat(
                a,
                '" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240" width="50" height="50">\n<circle cx="120" cy="120" opacity=".6" r="70" />\n<circle cx="120" cy="120" opacity=".3" r="90" />\n<circle cx="120" cy="120" opacity=".2" r="110" />\n<text x="50%" y="50%" style="fill:#fff" text-anchor="middle" font-size="50" dominant-baseline="middle" font-family="roboto,arial,sans-serif">'
              )
              .concat(i, "</text>\n</svg>"),
            r = "Cluster of ".concat(i, " markers"),
            l = Number(google.maps.Marker.MAX_ZINDEX) + i;
          if (GM.isAdvancedMarkerAvailable(n)) {
            const e = new DOMParser().parseFromString(
              s,
              "image/svg+xml"
            ).documentElement;
            e.setAttribute("transform", "translate(0 25)");
            const t = { map: n, position: o, zIndex: l, title: r, content: e };
            return new google.maps.marker.AdvancedMarkerElement(t);
          }
          const c = {
            position: o,
            zIndex: l,
            title: r,
            icon: {
              url: "data:image/svg+xml;base64,".concat(btoa(s)),
              anchor: new google.maps.Point(25, 25),
            },
          };
          return new google.maps.Marker(c);
        }
      }
      class ZM {
        constructor() {
          !(function (e, t) {
            for (let n in t.prototype) e.prototype[n] = t.prototype[n];
          })(ZM, google.maps.OverlayView);
        }
      }
      var QM;
      !(function (e) {
        (e.CLUSTERING_BEGIN = "clusteringbegin"),
          (e.CLUSTERING_END = "clusteringend"),
          (e.CLUSTER_CLICK = "click");
      })(QM || (QM = {}));
      const $M = (e, t, n) => {
        n.fitBounds(t.bounds);
      };
      class JM extends ZM {
        constructor(e) {
          let {
            map: t,
            markers: n = [],
            algorithmOptions: i = {},
            algorithm: o = new XM(i),
            renderer: a = new qM(),
            onClusterClick: s = $M,
          } = e;
          super(),
            (this.markers = [...n]),
            (this.clusters = []),
            (this.algorithm = o),
            (this.renderer = a),
            (this.onClusterClick = s),
            t && this.setMap(t);
        }
        addMarker(e, t) {
          this.markers.includes(e) ||
            (this.markers.push(e), t || this.render());
        }
        addMarkers(e, t) {
          e.forEach((e) => {
            this.addMarker(e, !0);
          }),
            t || this.render();
        }
        removeMarker(e, t) {
          const n = this.markers.indexOf(e);
          return (
            -1 !== n &&
            (GM.setMap(e, null),
            this.markers.splice(n, 1),
            t || this.render(),
            !0)
          );
        }
        removeMarkers(e, t) {
          let n = !1;
          return (
            e.forEach((e) => {
              n = this.removeMarker(e, !0) || n;
            }),
            n && !t && this.render(),
            n
          );
        }
        clearMarkers(e) {
          (this.markers.length = 0), e || this.render();
        }
        render() {
          const e = this.getMap();
          if (e instanceof google.maps.Map && e.getProjection()) {
            google.maps.event.trigger(this, QM.CLUSTERING_BEGIN, this);
            const { clusters: t, changed: n } = this.algorithm.calculate({
              markers: this.markers,
              map: e,
              mapCanvasProjection: this.getProjection(),
            });
            if (n || void 0 == n) {
              const e = new Set();
              for (const i of t) 1 == i.markers.length && e.add(i.markers[0]);
              const n = [];
              for (const t of this.clusters)
                null != t.marker &&
                  (1 == t.markers.length
                    ? e.has(t.marker) || GM.setMap(t.marker, null)
                    : n.push(t.marker));
              (this.clusters = t),
                this.renderClusters(),
                requestAnimationFrame(() =>
                  n.forEach((e) => GM.setMap(e, null))
                );
            }
            google.maps.event.trigger(this, QM.CLUSTERING_END, this);
          }
        }
        onAdd() {
          (this.idleListener = this.getMap().addListener(
            "idle",
            this.render.bind(this)
          )),
            this.render();
        }
        onRemove() {
          google.maps.event.removeListener(this.idleListener), this.reset();
        }
        reset() {
          this.markers.forEach((e) => GM.setMap(e, null)),
            this.clusters.forEach((e) => e.delete()),
            (this.clusters = []);
        }
        renderClusters() {
          const e = new KM(this.markers, this.clusters),
            t = this.getMap();
          this.clusters.forEach((n) => {
            1 === n.markers.length
              ? (n.marker = n.markers[0])
              : ((n.marker = this.renderer.render(n, e, t)),
                n.markers.forEach((e) => GM.setMap(e, null)),
                this.onClusterClick &&
                  n.marker.addListener("click", (e) => {
                    google.maps.event.trigger(this, QM.CLUSTER_CLICK, n),
                      this.onClusterClick(e, n, t);
                  })),
              GM.setMap(n.marker, t);
          });
        }
      }
      function eP(e) {
        var n = (function () {
            LC(
              !!t.useContext,
              "useGoogleMap is React hook and requires React version 16.8+"
            );
            var e = (0, t.useContext)(TC);
            return (
              LC(
                !!e,
                "useGoogleMap needs a GoogleMap available up in the tree"
              ),
              e
            );
          })(),
          i = (0, t.useState)(null),
          o = i[0],
          a = i[1];
        return (
          (0, t.useEffect)(
            function () {
              if (n && null === o) {
                var t = new JM(AC(AC({}, e), { map: n }));
                a(t);
              }
            },
            [n]
          ),
          o
        );
      }
      (0, t.memo)(function (e) {
        var t = e.children,
          n = eP(e.options);
        return null !== n ? t(n) : null;
      });
      var tP = {
          onCloseClick: "closeclick",
          onContentChanged: "content_changed",
          onDomReady: "domready",
          onPositionChanged: "position_changed",
          onZindexChanged: "zindex_changed",
        },
        nP = {
          options: function (e, t) {
            e.setOptions(t);
          },
          position: function (e, t) {
            e.setPosition(t);
          },
          zIndex: function (e, t) {
            e.setZIndex(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.children,
          i = e.anchor,
          o = e.options,
          a = e.position,
          s = e.zIndex,
          r = e.onCloseClick,
          l = e.onDomReady,
          c = e.onContentChanged,
          u = e.onPositionChanged,
          d = e.onZindexChanged,
          h = e.onLoad,
          p = e.onUnmount,
          f = (0, t.useContext)(TC),
          g = (0, t.useState)(null),
          m = g[0],
          v = g[1],
          b = (0, t.useState)(null),
          x = b[0],
          y = b[1],
          w = (0, t.useState)(null),
          S = w[0],
          k = w[1],
          A = (0, t.useState)(null),
          C = A[0],
          M = A[1],
          P = (0, t.useState)(null),
          E = P[0],
          L = P[1],
          T = (0, t.useState)(null),
          O = T[0],
          R = T[1],
          I = (0, t.useRef)(null);
        return (
          (0, t.useEffect)(
            function () {
              null !== m &&
                (m.close(), i ? m.open(f, i) : m.getPosition() && m.open(f));
            },
            [f, m, i]
          ),
          (0, t.useEffect)(
            function () {
              o && null !== m && m.setOptions(o);
            },
            [m, o]
          ),
          (0, t.useEffect)(
            function () {
              a && null !== m && m.setPosition(a);
            },
            [a]
          ),
          (0, t.useEffect)(
            function () {
              "number" === typeof s && null !== m && m.setZIndex(s);
            },
            [s]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                r &&
                (null !== x && google.maps.event.removeListener(x),
                y(google.maps.event.addListener(m, "closeclick", r)));
            },
            [r]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                l &&
                (null !== S && google.maps.event.removeListener(S),
                k(google.maps.event.addListener(m, "domready", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                c &&
                (null !== C && google.maps.event.removeListener(C),
                M(google.maps.event.addListener(m, "content_changed", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                u &&
                (null !== E && google.maps.event.removeListener(E),
                L(google.maps.event.addListener(m, "position_changed", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              m &&
                d &&
                (null !== O && google.maps.event.removeListener(O),
                R(google.maps.event.addListener(m, "zindex_changed", d)));
            },
            [d]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.InfoWindow(AC({}, o || {}));
            return (
              v(e),
              (I.current = document.createElement("div")),
              r && y(google.maps.event.addListener(e, "closeclick", r)),
              l && k(google.maps.event.addListener(e, "domready", l)),
              c && M(google.maps.event.addListener(e, "content_changed", c)),
              u && L(google.maps.event.addListener(e, "position_changed", u)),
              d && R(google.maps.event.addListener(e, "zindex_changed", d)),
              e.setContent(I.current),
              a && e.setPosition(a),
              s && e.setZIndex(s),
              i
                ? e.open(f, i)
                : e.getPosition()
                ? e.open(f)
                : LC(
                    !1,
                    "You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>."
                  ),
              h && h(e),
              function () {
                x && google.maps.event.removeListener(x),
                  C && google.maps.event.removeListener(C),
                  S && google.maps.event.removeListener(S),
                  E && google.maps.event.removeListener(E),
                  O && google.maps.event.removeListener(O),
                  p && p(e),
                  e.close();
              }
            );
          }, []),
          I.current ? (0, yl.createPortal)(t.Children.only(n), I.current) : null
        );
      }),
        (function (e) {
          function n() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.containerElement = null),
              (t.state = { infoWindow: null }),
              (t.open = function (e, n) {
                n
                  ? e.open(t.context, n)
                  : e.getPosition()
                  ? e.open(t.context)
                  : LC(
                      !1,
                      "You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>."
                    );
              }),
              (t.setInfoWindowCallback = function () {
                null !== t.state.infoWindow &&
                  null !== t.containerElement &&
                  (t.state.infoWindow.setContent(t.containerElement),
                  t.open(t.state.infoWindow, t.props.anchor),
                  t.props.onLoad && t.props.onLoad(t.state.infoWindow));
              }),
              t
            );
          }
          kC(n, e),
            (n.prototype.componentDidMount = function () {
              var e = new google.maps.InfoWindow(
                AC({}, this.props.options || {})
              );
              (this.containerElement = document.createElement("div")),
                (this.registeredEvents = _C({
                  updaterMap: nP,
                  eventMap: tP,
                  prevProps: {},
                  nextProps: this.props,
                  instance: e,
                })),
                this.setState(function () {
                  return { infoWindow: e };
                }, this.setInfoWindowCallback);
            }),
            (n.prototype.componentDidUpdate = function (e) {
              null !== this.state.infoWindow &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: nP,
                  eventMap: tP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.infoWindow,
                })));
            }),
            (n.prototype.componentWillUnmount = function () {
              null !== this.state.infoWindow &&
                (NC(this.registeredEvents),
                this.props.onUnmount &&
                  this.props.onUnmount(this.state.infoWindow),
                this.state.infoWindow.close());
            }),
            (n.prototype.render = function () {
              return this.containerElement
                ? (0, yl.createPortal)(
                    t.Children.only(this.props.children),
                    this.containerElement
                  )
                : null;
            }),
            (n.contextType = TC);
        })(t.PureComponent);
      var iP = {
          onClick: "click",
          onDblClick: "dblclick",
          onDrag: "drag",
          onDragEnd: "dragend",
          onDragStart: "dragstart",
          onMouseDown: "mousedown",
          onMouseMove: "mousemove",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseUp: "mouseup",
          onRightClick: "rightclick",
        },
        oP = {
          draggable: function (e, t) {
            e.setDraggable(t);
          },
          editable: function (e, t) {
            e.setEditable(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          path: function (e, t) {
            e.setPath(t);
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
        },
        aP = {};
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.draggable,
          o = e.editable,
          a = e.visible,
          s = e.path,
          r = e.onDblClick,
          l = e.onDragEnd,
          c = e.onDragStart,
          u = e.onMouseDown,
          d = e.onMouseMove,
          h = e.onMouseOut,
          p = e.onMouseOver,
          f = e.onMouseUp,
          g = e.onRightClick,
          m = e.onClick,
          v = e.onDrag,
          b = e.onLoad,
          x = e.onUnmount,
          y = (0, t.useContext)(TC),
          w = (0, t.useState)(null),
          S = w[0],
          k = w[1],
          A = (0, t.useState)(null),
          C = A[0],
          M = A[1],
          P = (0, t.useState)(null),
          E = P[0],
          L = P[1],
          T = (0, t.useState)(null),
          O = T[0],
          R = T[1],
          I = (0, t.useState)(null),
          N = I[0],
          _ = I[1],
          D = (0, t.useState)(null),
          z = D[0],
          j = D[1],
          B = (0, t.useState)(null),
          F = B[0],
          W = B[1],
          H = (0, t.useState)(null),
          G = H[0],
          V = H[1],
          U = (0, t.useState)(null),
          Y = U[0],
          X = U[1],
          K = (0, t.useState)(null),
          q = K[0],
          Z = K[1],
          Q = (0, t.useState)(null),
          $ = Q[0],
          J = Q[1],
          ee = (0, t.useState)(null),
          te = ee[0],
          ne = ee[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== S && S.setMap(y);
            },
            [y]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof n && null !== S && S.setOptions(n);
            },
            [S, n]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof i && null !== S && S.setDraggable(i);
            },
            [S, i]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof o && null !== S && S.setEditable(o);
            },
            [S, o]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof a && null !== S && S.setVisible(a);
            },
            [S, a]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof s && null !== S && S.setPath(s);
            },
            [S, s]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                r &&
                (null !== C && google.maps.event.removeListener(C),
                M(google.maps.event.addListener(S, "dblclick", r)));
            },
            [r]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                l &&
                (null !== E && google.maps.event.removeListener(E),
                L(google.maps.event.addListener(S, "dragend", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                c &&
                (null !== O && google.maps.event.removeListener(O),
                R(google.maps.event.addListener(S, "dragstart", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                u &&
                (null !== N && google.maps.event.removeListener(N),
                _(google.maps.event.addListener(S, "mousedown", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                d &&
                (null !== z && google.maps.event.removeListener(z),
                j(google.maps.event.addListener(S, "mousemove", d)));
            },
            [d]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                h &&
                (null !== F && google.maps.event.removeListener(F),
                W(google.maps.event.addListener(S, "mouseout", h)));
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                p &&
                (null !== G && google.maps.event.removeListener(G),
                V(google.maps.event.addListener(S, "mouseover", p)));
            },
            [p]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                f &&
                (null !== Y && google.maps.event.removeListener(Y),
                X(google.maps.event.addListener(S, "mouseup", f)));
            },
            [f]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                g &&
                (null !== q && google.maps.event.removeListener(q),
                Z(google.maps.event.addListener(S, "rightclick", g)));
            },
            [g]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                m &&
                (null !== $ && google.maps.event.removeListener($),
                J(google.maps.event.addListener(S, "click", m)));
            },
            [m]
          ),
          (0, t.useEffect)(
            function () {
              S &&
                v &&
                (null !== te && google.maps.event.removeListener(te),
                ne(google.maps.event.addListener(S, "drag", v)));
            },
            [v]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.Polyline(AC(AC({}, n || aP), { map: y }));
            return (
              s && e.setPath(s),
              "undefined" !== typeof a && e.setVisible(a),
              "undefined" !== typeof o && e.setEditable(o),
              "undefined" !== typeof i && e.setDraggable(i),
              r && M(google.maps.event.addListener(e, "dblclick", r)),
              l && L(google.maps.event.addListener(e, "dragend", l)),
              c && R(google.maps.event.addListener(e, "dragstart", c)),
              u && _(google.maps.event.addListener(e, "mousedown", u)),
              d && j(google.maps.event.addListener(e, "mousemove", d)),
              h && W(google.maps.event.addListener(e, "mouseout", h)),
              p && V(google.maps.event.addListener(e, "mouseover", p)),
              f && X(google.maps.event.addListener(e, "mouseup", f)),
              g && Z(google.maps.event.addListener(e, "rightclick", g)),
              m && J(google.maps.event.addListener(e, "click", m)),
              v && ne(google.maps.event.addListener(e, "drag", v)),
              k(e),
              b && b(e),
              function () {
                null !== C && google.maps.event.removeListener(C),
                  null !== E && google.maps.event.removeListener(E),
                  null !== O && google.maps.event.removeListener(O),
                  null !== N && google.maps.event.removeListener(N),
                  null !== z && google.maps.event.removeListener(z),
                  null !== F && google.maps.event.removeListener(F),
                  null !== G && google.maps.event.removeListener(G),
                  null !== Y && google.maps.event.removeListener(Y),
                  null !== q && google.maps.event.removeListener(q),
                  null !== $ && google.maps.event.removeListener($),
                  x && x(e),
                  e.setMap(null);
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { polyline: null }),
              (t.setPolylineCallback = function () {
                null !== t.state.polyline &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.polyline);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.Polyline(
                AC(AC({}, this.props.options || {}), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: oP,
                eventMap: iP,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { polyline: e };
                }, this.setPolylineCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.polyline &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: oP,
                  eventMap: iP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.polyline,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.polyline &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.polyline),
                NC(this.registeredEvents),
                this.state.polyline.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var sP = {
          onClick: "click",
          onDblClick: "dblclick",
          onDrag: "drag",
          onDragEnd: "dragend",
          onDragStart: "dragstart",
          onMouseDown: "mousedown",
          onMouseMove: "mousemove",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseUp: "mouseup",
          onRightClick: "rightclick",
        },
        rP = {
          draggable: function (e, t) {
            e.setDraggable(t);
          },
          editable: function (e, t) {
            e.setEditable(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          path: function (e, t) {
            e.setPath(t);
          },
          paths: function (e, t) {
            e.setPaths(t);
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.draggable,
          o = e.editable,
          a = e.visible,
          s = e.path,
          r = e.paths,
          l = e.onDblClick,
          c = e.onDragEnd,
          u = e.onDragStart,
          d = e.onMouseDown,
          h = e.onMouseMove,
          p = e.onMouseOut,
          f = e.onMouseOver,
          g = e.onMouseUp,
          m = e.onRightClick,
          v = e.onClick,
          b = e.onDrag,
          x = e.onLoad,
          y = e.onUnmount,
          w = e.onEdit,
          S = (0, t.useContext)(TC),
          k = (0, t.useState)(null),
          A = k[0],
          C = k[1],
          M = (0, t.useState)(null),
          P = M[0],
          E = M[1],
          L = (0, t.useState)(null),
          T = L[0],
          O = L[1],
          R = (0, t.useState)(null),
          I = R[0],
          N = R[1],
          _ = (0, t.useState)(null),
          D = _[0],
          z = _[1],
          j = (0, t.useState)(null),
          B = j[0],
          F = j[1],
          W = (0, t.useState)(null),
          H = W[0],
          G = W[1],
          V = (0, t.useState)(null),
          U = V[0],
          Y = V[1],
          X = (0, t.useState)(null),
          K = X[0],
          q = X[1],
          Z = (0, t.useState)(null),
          Q = Z[0],
          $ = Z[1],
          J = (0, t.useState)(null),
          ee = J[0],
          te = J[1],
          ne = (0, t.useState)(null),
          ie = ne[0],
          oe = ne[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== A && A.setMap(S);
            },
            [S]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof n && null !== A && A.setOptions(n);
            },
            [A, n]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof i && null !== A && A.setDraggable(i);
            },
            [A, i]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof o && null !== A && A.setEditable(o);
            },
            [A, o]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof a && null !== A && A.setVisible(a);
            },
            [A, a]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof s && null !== A && A.setPath(s);
            },
            [A, s]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof r && null !== A && A.setPaths(r);
            },
            [A, r]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                l &&
                (null !== P && google.maps.event.removeListener(P),
                E(google.maps.event.addListener(A, "dblclick", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                (google.maps.event.addListener(
                  A.getPath(),
                  "insert_at",
                  function () {
                    null === w || void 0 === w || w(A);
                  }
                ),
                google.maps.event.addListener(
                  A.getPath(),
                  "set_at",
                  function () {
                    null === w || void 0 === w || w(A);
                  }
                ));
            },
            [A, w]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                c &&
                (null !== T && google.maps.event.removeListener(T),
                O(google.maps.event.addListener(A, "dragend", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                u &&
                (null !== I && google.maps.event.removeListener(I),
                N(google.maps.event.addListener(A, "dragstart", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                d &&
                (null !== D && google.maps.event.removeListener(D),
                z(google.maps.event.addListener(A, "mousedown", d)));
            },
            [d]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                h &&
                (null !== B && google.maps.event.removeListener(B),
                F(google.maps.event.addListener(A, "mousemove", h)));
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                p &&
                (null !== H && google.maps.event.removeListener(H),
                G(google.maps.event.addListener(A, "mouseout", p)));
            },
            [p]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                f &&
                (null !== U && google.maps.event.removeListener(U),
                Y(google.maps.event.addListener(A, "mouseover", f)));
            },
            [f]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                g &&
                (null !== K && google.maps.event.removeListener(K),
                q(google.maps.event.addListener(A, "mouseup", g)));
            },
            [g]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                m &&
                (null !== Q && google.maps.event.removeListener(Q),
                $(google.maps.event.addListener(A, "rightclick", m)));
            },
            [m]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                v &&
                (null !== ee && google.maps.event.removeListener(ee),
                te(google.maps.event.addListener(A, "click", v)));
            },
            [v]
          ),
          (0, t.useEffect)(
            function () {
              A &&
                b &&
                (null !== ie && google.maps.event.removeListener(ie),
                oe(google.maps.event.addListener(A, "drag", b)));
            },
            [b]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.Polygon(AC(AC({}, n || {}), { map: S }));
            return (
              s && e.setPath(s),
              r && e.setPaths(r),
              "undefined" !== typeof a && e.setVisible(a),
              "undefined" !== typeof o && e.setEditable(o),
              "undefined" !== typeof i && e.setDraggable(i),
              l && E(google.maps.event.addListener(e, "dblclick", l)),
              c && O(google.maps.event.addListener(e, "dragend", c)),
              u && N(google.maps.event.addListener(e, "dragstart", u)),
              d && z(google.maps.event.addListener(e, "mousedown", d)),
              h && F(google.maps.event.addListener(e, "mousemove", h)),
              p && G(google.maps.event.addListener(e, "mouseout", p)),
              f && Y(google.maps.event.addListener(e, "mouseover", f)),
              g && q(google.maps.event.addListener(e, "mouseup", g)),
              m && $(google.maps.event.addListener(e, "rightclick", m)),
              v && te(google.maps.event.addListener(e, "click", v)),
              b && oe(google.maps.event.addListener(e, "drag", b)),
              C(e),
              x && x(e),
              function () {
                null !== P && google.maps.event.removeListener(P),
                  null !== T && google.maps.event.removeListener(T),
                  null !== I && google.maps.event.removeListener(I),
                  null !== D && google.maps.event.removeListener(D),
                  null !== B && google.maps.event.removeListener(B),
                  null !== H && google.maps.event.removeListener(H),
                  null !== U && google.maps.event.removeListener(U),
                  null !== K && google.maps.event.removeListener(K),
                  null !== Q && google.maps.event.removeListener(Q),
                  null !== ee && google.maps.event.removeListener(ee),
                  y && y(e),
                  e.setMap(null);
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { polygon: null }),
              (t.setPolygonCallback = function () {
                null !== t.state.polygon &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.polygon);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.Polygon(
                AC(AC({}, this.props.options || {}), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: rP,
                eventMap: sP,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { polygon: e };
                }, this.setPolygonCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.polygon &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: rP,
                  eventMap: sP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.polygon,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.polygon &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.polygon),
                NC(this.registeredEvents),
                this.state.polygon && this.state.polygon.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var lP = {
          onBoundsChanged: "bounds_changed",
          onClick: "click",
          onDblClick: "dblclick",
          onDrag: "drag",
          onDragEnd: "dragend",
          onDragStart: "dragstart",
          onMouseDown: "mousedown",
          onMouseMove: "mousemove",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseUp: "mouseup",
          onRightClick: "rightclick",
        },
        cP = {
          bounds: function (e, t) {
            e.setBounds(t);
          },
          draggable: function (e, t) {
            e.setDraggable(t);
          },
          editable: function (e, t) {
            e.setEditable(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.bounds,
          o = e.draggable,
          a = e.editable,
          s = e.visible,
          r = e.onDblClick,
          l = e.onDragEnd,
          c = e.onDragStart,
          u = e.onMouseDown,
          d = e.onMouseMove,
          h = e.onMouseOut,
          p = e.onMouseOver,
          f = e.onMouseUp,
          g = e.onRightClick,
          m = e.onClick,
          v = e.onDrag,
          b = e.onBoundsChanged,
          x = e.onLoad,
          y = e.onUnmount,
          w = (0, t.useContext)(TC),
          S = (0, t.useState)(null),
          k = S[0],
          A = S[1],
          C = (0, t.useState)(null),
          M = C[0],
          P = C[1],
          E = (0, t.useState)(null),
          L = E[0],
          T = E[1],
          O = (0, t.useState)(null),
          R = O[0],
          I = O[1],
          N = (0, t.useState)(null),
          _ = N[0],
          D = N[1],
          z = (0, t.useState)(null),
          j = z[0],
          B = z[1],
          F = (0, t.useState)(null),
          W = F[0],
          H = F[1],
          G = (0, t.useState)(null),
          V = G[0],
          U = G[1],
          Y = (0, t.useState)(null),
          X = Y[0],
          K = Y[1],
          q = (0, t.useState)(null),
          Z = q[0],
          Q = q[1],
          $ = (0, t.useState)(null),
          J = $[0],
          ee = $[1],
          te = (0, t.useState)(null),
          ne = te[0],
          ie = te[1],
          oe = (0, t.useState)(null),
          ae = oe[0],
          se = oe[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== k && k.setMap(w);
            },
            [w]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof n && null !== k && k.setOptions(n);
            },
            [k, n]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof o && null !== k && k.setDraggable(o);
            },
            [k, o]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof a && null !== k && k.setEditable(a);
            },
            [k, a]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof s && null !== k && k.setVisible(s);
            },
            [k, s]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof i && null !== k && k.setBounds(i);
            },
            [k, i]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                r &&
                (null !== M && google.maps.event.removeListener(M),
                P(google.maps.event.addListener(k, "dblclick", r)));
            },
            [r]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                l &&
                (null !== L && google.maps.event.removeListener(L),
                T(google.maps.event.addListener(k, "dragend", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                c &&
                (null !== R && google.maps.event.removeListener(R),
                I(google.maps.event.addListener(k, "dragstart", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                u &&
                (null !== _ && google.maps.event.removeListener(_),
                D(google.maps.event.addListener(k, "mousedown", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                d &&
                (null !== j && google.maps.event.removeListener(j),
                B(google.maps.event.addListener(k, "mousemove", d)));
            },
            [d]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                h &&
                (null !== W && google.maps.event.removeListener(W),
                H(google.maps.event.addListener(k, "mouseout", h)));
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                p &&
                (null !== V && google.maps.event.removeListener(V),
                U(google.maps.event.addListener(k, "mouseover", p)));
            },
            [p]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                f &&
                (null !== X && google.maps.event.removeListener(X),
                K(google.maps.event.addListener(k, "mouseup", f)));
            },
            [f]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                g &&
                (null !== Z && google.maps.event.removeListener(Z),
                Q(google.maps.event.addListener(k, "rightclick", g)));
            },
            [g]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                m &&
                (null !== J && google.maps.event.removeListener(J),
                ee(google.maps.event.addListener(k, "click", m)));
            },
            [m]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                v &&
                (null !== ne && google.maps.event.removeListener(ne),
                ie(google.maps.event.addListener(k, "drag", v)));
            },
            [v]
          ),
          (0, t.useEffect)(
            function () {
              k &&
                b &&
                (null !== ae && google.maps.event.removeListener(ae),
                se(google.maps.event.addListener(k, "bounds_changed", b)));
            },
            [b]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.Rectangle(AC(AC({}, n || {}), { map: w }));
            return (
              "undefined" !== typeof s && e.setVisible(s),
              "undefined" !== typeof a && e.setEditable(a),
              "undefined" !== typeof o && e.setDraggable(o),
              "undefined" !== typeof i && e.setBounds(i),
              r && P(google.maps.event.addListener(e, "dblclick", r)),
              l && T(google.maps.event.addListener(e, "dragend", l)),
              c && I(google.maps.event.addListener(e, "dragstart", c)),
              u && D(google.maps.event.addListener(e, "mousedown", u)),
              d && B(google.maps.event.addListener(e, "mousemove", d)),
              h && H(google.maps.event.addListener(e, "mouseout", h)),
              p && U(google.maps.event.addListener(e, "mouseover", p)),
              f && K(google.maps.event.addListener(e, "mouseup", f)),
              g && Q(google.maps.event.addListener(e, "rightclick", g)),
              m && ee(google.maps.event.addListener(e, "click", m)),
              v && ie(google.maps.event.addListener(e, "drag", v)),
              b && se(google.maps.event.addListener(e, "bounds_changed", b)),
              A(e),
              x && x(e),
              function () {
                null !== M && google.maps.event.removeListener(M),
                  null !== L && google.maps.event.removeListener(L),
                  null !== R && google.maps.event.removeListener(R),
                  null !== _ && google.maps.event.removeListener(_),
                  null !== j && google.maps.event.removeListener(j),
                  null !== W && google.maps.event.removeListener(W),
                  null !== V && google.maps.event.removeListener(V),
                  null !== X && google.maps.event.removeListener(X),
                  null !== Z && google.maps.event.removeListener(Z),
                  null !== J && google.maps.event.removeListener(J),
                  null !== ne && google.maps.event.removeListener(ne),
                  null !== ae && google.maps.event.removeListener(ae),
                  y && y(e),
                  e.setMap(null);
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { rectangle: null }),
              (t.setRectangleCallback = function () {
                null !== t.state.rectangle &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.rectangle);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.Rectangle(
                AC(AC({}, this.props.options || {}), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: cP,
                eventMap: lP,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { rectangle: e };
                }, this.setRectangleCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.rectangle &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: cP,
                  eventMap: lP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.rectangle,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.rectangle &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.rectangle),
                NC(this.registeredEvents),
                this.state.rectangle.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var uP = {
          onCenterChanged: "center_changed",
          onRadiusChanged: "radius_changed",
          onClick: "click",
          onDblClick: "dblclick",
          onDrag: "drag",
          onDragEnd: "dragend",
          onDragStart: "dragstart",
          onMouseDown: "mousedown",
          onMouseMove: "mousemove",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseUp: "mouseup",
          onRightClick: "rightclick",
        },
        dP = {
          center: function (e, t) {
            e.setCenter(t);
          },
          draggable: function (e, t) {
            e.setDraggable(t);
          },
          editable: function (e, t) {
            e.setEditable(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          radius: function (e, t) {
            e.setRadius(t);
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
        },
        hP = {};
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.center,
          o = e.radius,
          a = e.draggable,
          s = e.editable,
          r = e.visible,
          l = e.onDblClick,
          c = e.onDragEnd,
          u = e.onDragStart,
          d = e.onMouseDown,
          h = e.onMouseMove,
          p = e.onMouseOut,
          f = e.onMouseOver,
          g = e.onMouseUp,
          m = e.onRightClick,
          v = e.onClick,
          b = e.onDrag,
          x = e.onCenterChanged,
          y = e.onRadiusChanged,
          w = e.onLoad,
          S = e.onUnmount,
          k = (0, t.useContext)(TC),
          A = (0, t.useState)(null),
          C = A[0],
          M = A[1],
          P = (0, t.useState)(null),
          E = P[0],
          L = P[1],
          T = (0, t.useState)(null),
          O = T[0],
          R = T[1],
          I = (0, t.useState)(null),
          N = I[0],
          _ = I[1],
          D = (0, t.useState)(null),
          z = D[0],
          j = D[1],
          B = (0, t.useState)(null),
          F = B[0],
          W = B[1],
          H = (0, t.useState)(null),
          G = H[0],
          V = H[1],
          U = (0, t.useState)(null),
          Y = U[0],
          X = U[1],
          K = (0, t.useState)(null),
          q = K[0],
          Z = K[1],
          Q = (0, t.useState)(null),
          $ = Q[0],
          J = Q[1],
          ee = (0, t.useState)(null),
          te = ee[0],
          ne = ee[1],
          ie = (0, t.useState)(null),
          oe = ie[0],
          ae = ie[1],
          se = (0, t.useState)(null),
          re = se[0],
          le = se[1],
          ce = (0, t.useState)(null),
          ue = ce[0],
          de = ce[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== C && C.setMap(k);
            },
            [k]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof n && null !== C && C.setOptions(n);
            },
            [C, n]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof a && null !== C && C.setDraggable(a);
            },
            [C, a]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof s && null !== C && C.setEditable(s);
            },
            [C, s]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof r && null !== C && C.setVisible(r);
            },
            [C, r]
          ),
          (0, t.useEffect)(
            function () {
              "number" === typeof o && null !== C && C.setRadius(o);
            },
            [C, o]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof i && null !== C && C.setCenter(i);
            },
            [C, i]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                l &&
                (null !== E && google.maps.event.removeListener(E),
                L(google.maps.event.addListener(C, "dblclick", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                c &&
                (null !== O && google.maps.event.removeListener(O),
                R(google.maps.event.addListener(C, "dragend", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                u &&
                (null !== N && google.maps.event.removeListener(N),
                _(google.maps.event.addListener(C, "dragstart", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                d &&
                (null !== z && google.maps.event.removeListener(z),
                j(google.maps.event.addListener(C, "mousedown", d)));
            },
            [d]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                h &&
                (null !== F && google.maps.event.removeListener(F),
                W(google.maps.event.addListener(C, "mousemove", h)));
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                p &&
                (null !== G && google.maps.event.removeListener(G),
                V(google.maps.event.addListener(C, "mouseout", p)));
            },
            [p]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                f &&
                (null !== Y && google.maps.event.removeListener(Y),
                X(google.maps.event.addListener(C, "mouseover", f)));
            },
            [f]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                g &&
                (null !== q && google.maps.event.removeListener(q),
                Z(google.maps.event.addListener(C, "mouseup", g)));
            },
            [g]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                m &&
                (null !== $ && google.maps.event.removeListener($),
                J(google.maps.event.addListener(C, "rightclick", m)));
            },
            [m]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                v &&
                (null !== te && google.maps.event.removeListener(te),
                ne(google.maps.event.addListener(C, "click", v)));
            },
            [v]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                b &&
                (null !== oe && google.maps.event.removeListener(oe),
                ae(google.maps.event.addListener(C, "drag", b)));
            },
            [b]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                x &&
                (null !== re && google.maps.event.removeListener(re),
                le(google.maps.event.addListener(C, "center_changed", x)));
            },
            [v]
          ),
          (0, t.useEffect)(
            function () {
              C &&
                y &&
                (null !== ue && google.maps.event.removeListener(ue),
                de(google.maps.event.addListener(C, "radius_changed", y)));
            },
            [y]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.Circle(AC(AC({}, n || hP), { map: k }));
            return (
              "number" === typeof o && e.setRadius(o),
              "undefined" !== typeof i && e.setCenter(i),
              "number" === typeof o && e.setRadius(o),
              "undefined" !== typeof r && e.setVisible(r),
              "undefined" !== typeof s && e.setEditable(s),
              "undefined" !== typeof a && e.setDraggable(a),
              l && L(google.maps.event.addListener(e, "dblclick", l)),
              c && R(google.maps.event.addListener(e, "dragend", c)),
              u && _(google.maps.event.addListener(e, "dragstart", u)),
              d && j(google.maps.event.addListener(e, "mousedown", d)),
              h && W(google.maps.event.addListener(e, "mousemove", h)),
              p && V(google.maps.event.addListener(e, "mouseout", p)),
              f && X(google.maps.event.addListener(e, "mouseover", f)),
              g && Z(google.maps.event.addListener(e, "mouseup", g)),
              m && J(google.maps.event.addListener(e, "rightclick", m)),
              v && ne(google.maps.event.addListener(e, "click", v)),
              b && ae(google.maps.event.addListener(e, "drag", b)),
              x && le(google.maps.event.addListener(e, "center_changed", x)),
              y && de(google.maps.event.addListener(e, "radius_changed", y)),
              M(e),
              w && w(e),
              function () {
                null !== E && google.maps.event.removeListener(E),
                  null !== O && google.maps.event.removeListener(O),
                  null !== N && google.maps.event.removeListener(N),
                  null !== z && google.maps.event.removeListener(z),
                  null !== F && google.maps.event.removeListener(F),
                  null !== G && google.maps.event.removeListener(G),
                  null !== Y && google.maps.event.removeListener(Y),
                  null !== q && google.maps.event.removeListener(q),
                  null !== $ && google.maps.event.removeListener($),
                  null !== te && google.maps.event.removeListener(te),
                  null !== re && google.maps.event.removeListener(re),
                  null !== ue && google.maps.event.removeListener(ue),
                  S && S(e),
                  e.setMap(null);
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { circle: null }),
              (t.setCircleCallback = function () {
                null !== t.state.circle &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.circle);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              var e = new google.maps.Circle(
                AC(AC({}, this.props.options || {}), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: dP,
                eventMap: uP,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { circle: e };
                }, this.setCircleCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.circle &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: dP,
                  eventMap: uP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.circle,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              var e;
              null !== this.state.circle &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.circle),
                NC(this.registeredEvents),
                null === (e = this.state.circle) ||
                  void 0 === e ||
                  e.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var pP = {
          onClick: "click",
          onDblClick: "dblclick",
          onMouseDown: "mousedown",
          onMouseOut: "mouseout",
          onMouseOver: "mouseover",
          onMouseUp: "mouseup",
          onRightClick: "rightclick",
          onAddFeature: "addfeature",
          onRemoveFeature: "removefeature",
          onRemoveProperty: "removeproperty",
          onSetGeometry: "setgeometry",
          onSetProperty: "setproperty",
        },
        fP = {
          add: function (e, t) {
            e.add(t);
          },
          addgeojson: function (e, t, n) {
            e.addGeoJson(t, n);
          },
          contains: function (e, t) {
            e.contains(t);
          },
          foreach: function (e, t) {
            e.forEach(t);
          },
          loadgeojson: function (e, t, n, i) {
            e.loadGeoJson(t, n, i);
          },
          overridestyle: function (e, t, n) {
            e.overrideStyle(t, n);
          },
          remove: function (e, t) {
            e.remove(t);
          },
          revertstyle: function (e, t) {
            e.revertStyle(t);
          },
          controlposition: function (e, t) {
            e.setControlPosition(t);
          },
          controls: function (e, t) {
            e.setControls(t);
          },
          drawingmode: function (e, t) {
            e.setDrawingMode(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          style: function (e, t) {
            e.setStyle(t);
          },
          togeojson: function (e, t) {
            e.toGeoJson(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.options,
          i = e.onClick,
          o = e.onDblClick,
          a = e.onMouseDown,
          s = e.onMouseMove,
          r = e.onMouseOut,
          l = e.onMouseOver,
          c = e.onMouseUp,
          u = e.onRightClick,
          d = e.onAddFeature,
          h = e.onRemoveFeature,
          p = e.onRemoveProperty,
          f = e.onSetGeometry,
          g = e.onSetProperty,
          m = e.onLoad,
          v = e.onUnmount,
          b = (0, t.useContext)(TC),
          x = (0, t.useState)(null),
          y = x[0],
          w = x[1],
          S = (0, t.useState)(null),
          k = S[0],
          A = S[1],
          C = (0, t.useState)(null),
          M = C[0],
          P = C[1],
          E = (0, t.useState)(null),
          L = E[0],
          T = E[1],
          O = (0, t.useState)(null),
          R = O[0],
          I = O[1],
          N = (0, t.useState)(null),
          _ = N[0],
          D = N[1],
          z = (0, t.useState)(null),
          j = z[0],
          B = z[1],
          F = (0, t.useState)(null),
          W = F[0],
          H = F[1],
          G = (0, t.useState)(null),
          V = G[0],
          U = G[1],
          Y = (0, t.useState)(null),
          X = Y[0],
          K = Y[1],
          q = (0, t.useState)(null),
          Z = q[0],
          Q = q[1],
          $ = (0, t.useState)(null),
          J = $[0],
          ee = $[1],
          te = (0, t.useState)(null),
          ne = te[0],
          ie = te[1],
          oe = (0, t.useState)(null),
          ae = oe[0],
          se = oe[1];
        return (
          (0, t.useEffect)(
            function () {
              null !== y && y.setMap(b);
            },
            [b]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                o &&
                (null !== k && google.maps.event.removeListener(k),
                A(google.maps.event.addListener(y, "dblclick", o)));
            },
            [o]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                a &&
                (null !== M && google.maps.event.removeListener(M),
                P(google.maps.event.addListener(y, "mousedown", a)));
            },
            [a]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                s &&
                (null !== L && google.maps.event.removeListener(L),
                T(google.maps.event.addListener(y, "mousemove", s)));
            },
            [s]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                r &&
                (null !== R && google.maps.event.removeListener(R),
                I(google.maps.event.addListener(y, "mouseout", r)));
            },
            [r]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                l &&
                (null !== _ && google.maps.event.removeListener(_),
                D(google.maps.event.addListener(y, "mouseover", l)));
            },
            [l]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                c &&
                (null !== j && google.maps.event.removeListener(j),
                B(google.maps.event.addListener(y, "mouseup", c)));
            },
            [c]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                u &&
                (null !== W && google.maps.event.removeListener(W),
                H(google.maps.event.addListener(y, "rightclick", u)));
            },
            [u]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                i &&
                (null !== V && google.maps.event.removeListener(V),
                U(google.maps.event.addListener(y, "click", i)));
            },
            [i]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                d &&
                (null !== X && google.maps.event.removeListener(X),
                K(google.maps.event.addListener(y, "addfeature", d)));
            },
            [d]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                h &&
                (null !== Z && google.maps.event.removeListener(Z),
                Q(google.maps.event.addListener(y, "removefeature", h)));
            },
            [h]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                p &&
                (null !== J && google.maps.event.removeListener(J),
                ee(google.maps.event.addListener(y, "removeproperty", p)));
            },
            [p]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                f &&
                (null !== ne && google.maps.event.removeListener(ne),
                ie(google.maps.event.addListener(y, "setgeometry", f)));
            },
            [f]
          ),
          (0, t.useEffect)(
            function () {
              y &&
                g &&
                (null !== ae && google.maps.event.removeListener(ae),
                se(google.maps.event.addListener(y, "setproperty", g)));
            },
            [g]
          ),
          (0, t.useEffect)(function () {
            if (null !== b) {
              var e = new google.maps.Data(AC(AC({}, n || {}), { map: b }));
              o && A(google.maps.event.addListener(e, "dblclick", o)),
                a && P(google.maps.event.addListener(e, "mousedown", a)),
                s && T(google.maps.event.addListener(e, "mousemove", s)),
                r && I(google.maps.event.addListener(e, "mouseout", r)),
                l && D(google.maps.event.addListener(e, "mouseover", l)),
                c && B(google.maps.event.addListener(e, "mouseup", c)),
                u && H(google.maps.event.addListener(e, "rightclick", u)),
                i && U(google.maps.event.addListener(e, "click", i)),
                d && K(google.maps.event.addListener(e, "addfeature", d)),
                h && Q(google.maps.event.addListener(e, "removefeature", h)),
                p && ee(google.maps.event.addListener(e, "removeproperty", p)),
                f && ie(google.maps.event.addListener(e, "setgeometry", f)),
                g && se(google.maps.event.addListener(e, "setproperty", g)),
                w(e),
                m && m(e);
            }
            return function () {
              y &&
                (null !== k && google.maps.event.removeListener(k),
                null !== M && google.maps.event.removeListener(M),
                null !== L && google.maps.event.removeListener(L),
                null !== R && google.maps.event.removeListener(R),
                null !== _ && google.maps.event.removeListener(_),
                null !== j && google.maps.event.removeListener(j),
                null !== W && google.maps.event.removeListener(W),
                null !== V && google.maps.event.removeListener(V),
                null !== X && google.maps.event.removeListener(X),
                null !== Z && google.maps.event.removeListener(Z),
                null !== J && google.maps.event.removeListener(J),
                null !== ne && google.maps.event.removeListener(ne),
                null !== ae && google.maps.event.removeListener(ae),
                v && v(y),
                y.setMap(null));
            };
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { data: null }),
              (t.setDataCallback = function () {
                null !== t.state.data &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.data);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              if (null !== this.context) {
                var e = new google.maps.Data(
                  AC(AC({}, this.props.options || {}), { map: this.context })
                );
                (this.registeredEvents = _C({
                  updaterMap: fP,
                  eventMap: pP,
                  prevProps: {},
                  nextProps: this.props,
                  instance: e,
                })),
                  this.setState(function () {
                    return { data: e };
                  }, this.setDataCallback);
              }
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.data &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: fP,
                  eventMap: pP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.data,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.data &&
                (this.props.onUnmount && this.props.onUnmount(this.state.data),
                NC(this.registeredEvents),
                this.state.data && this.state.data.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var gP = {
          onClick: "click",
          onDefaultViewportChanged: "defaultviewport_changed",
          onStatusChanged: "status_changed",
        },
        mP = {
          options: function (e, t) {
            e.setOptions(t);
          },
          url: function (e, t) {
            e.setUrl(t);
          },
          zIndex: function (e, t) {
            e.setZIndex(t);
          },
        };
      !(function (e) {
        function t() {
          var t = (null !== e && e.apply(this, arguments)) || this;
          return (
            (t.registeredEvents = []),
            (t.state = { kmlLayer: null }),
            (t.setKmlLayerCallback = function () {
              null !== t.state.kmlLayer &&
                t.props.onLoad &&
                t.props.onLoad(t.state.kmlLayer);
            }),
            t
          );
        }
        kC(t, e),
          (t.prototype.componentDidMount = function () {
            var e = new google.maps.KmlLayer(
              AC(AC({}, this.props.options), { map: this.context })
            );
            (this.registeredEvents = _C({
              updaterMap: mP,
              eventMap: gP,
              prevProps: {},
              nextProps: this.props,
              instance: e,
            })),
              this.setState(function () {
                return { kmlLayer: e };
              }, this.setKmlLayerCallback);
          }),
          (t.prototype.componentDidUpdate = function (e) {
            null !== this.state.kmlLayer &&
              (NC(this.registeredEvents),
              (this.registeredEvents = _C({
                updaterMap: mP,
                eventMap: gP,
                prevProps: e,
                nextProps: this.props,
                instance: this.state.kmlLayer,
              })));
          }),
          (t.prototype.componentWillUnmount = function () {
            null !== this.state.kmlLayer &&
              (this.props.onUnmount &&
                this.props.onUnmount(this.state.kmlLayer),
              NC(this.registeredEvents),
              this.state.kmlLayer.setMap(null));
          }),
          (t.prototype.render = function () {
            return null;
          }),
          (t.contextType = TC);
      })(t.PureComponent);
      function vP(e, t) {
        return "function" === typeof t
          ? t(e.offsetWidth, e.offsetHeight)
          : { x: 0, y: 0 };
      }
      function bP(e, t) {
        return new t(e.lat, e.lng);
      }
      function xP(e, t) {
        return new t(
          new google.maps.LatLng(e.ne.lat, e.ne.lng),
          new google.maps.LatLng(e.sw.lat, e.sw.lng)
        );
      }
      function yP(e, t, n, i) {
        return void 0 !== n
          ? (function (e, t, n) {
              var i = e && e.fromLatLngToDivPixel(n.getNorthEast()),
                o = e && e.fromLatLngToDivPixel(n.getSouthWest());
              return i && o
                ? {
                    left: "".concat(o.x + t.x, "px"),
                    top: "".concat(i.y + t.y, "px"),
                    width: "".concat(i.x - o.x - t.x, "px"),
                    height: "".concat(o.y - i.y - t.y, "px"),
                  }
                : { left: "-9999px", top: "-9999px" };
            })(
              e,
              t,
              ((o = n),
              (a = google.maps.LatLngBounds),
              (s = xP),
              o instanceof a ? o : s(o, a))
            )
          : (function (e, t, n) {
              var i = e && e.fromLatLngToDivPixel(n);
              if (i) {
                var o = i.x,
                  a = i.y;
                return {
                  left: "".concat(o + t.x, "px"),
                  top: "".concat(a + t.y, "px"),
                };
              }
              return { left: "-9999px", top: "-9999px" };
            })(
              e,
              t,
              (function (e, t, n) {
                return e instanceof t ? e : n(e, t);
              })(i, google.maps.LatLng, bP)
            );
        var o, a, s;
      }
      function wP(e) {
        return e
          ? (e instanceof google.maps.LatLng
              ? e
              : new google.maps.LatLng(e.lat, e.lng)) + ""
          : "";
      }
      function SP(e) {
        return e
          ? (e instanceof google.maps.LatLngBounds
              ? e
              : new google.maps.LatLngBounds(
                  new google.maps.LatLng(e.south, e.east),
                  new google.maps.LatLng(e.north, e.west)
                )) + ""
          : "";
      }
      (0, t.memo)(function (e) {
        var n = e.position,
          i = e.bounds,
          o = e.mapPaneName,
          a = e.zIndex,
          s = e.onLoad,
          r = e.onUnmount,
          l = e.getPixelPositionOffset,
          c = e.children,
          u = (0, t.useContext)(TC),
          d = (0, t.useMemo)(function () {
            var e = document.createElement("div");
            return (e.style.position = "absolute"), e;
          }, []),
          h = (0, t.useMemo)(
            function () {
              return (function (e, t, n, i, o) {
                var a = (function (e) {
                  function t(t, n, i, o) {
                    var a = e.call(this) || this;
                    return (
                      (a.container = t),
                      (a.pane = n),
                      (a.position = i),
                      (a.bounds = o),
                      a
                    );
                  }
                  return (
                    kC(t, e),
                    (t.prototype.onAdd = function () {
                      var e,
                        t =
                          null === (e = this.getPanes()) || void 0 === e
                            ? void 0
                            : e[this.pane];
                      null === t ||
                        void 0 === t ||
                        t.appendChild(this.container);
                    }),
                    (t.prototype.draw = function () {
                      for (
                        var e = yP(
                            this.getProjection(),
                            AC(
                              {},
                              this.container
                                ? vP(this.container, o)
                                : { x: 0, y: 0 }
                            ),
                            this.bounds,
                            this.position
                          ),
                          t = 0,
                          n = Object.entries(e);
                        t < n.length;
                        t++
                      ) {
                        var i = n[t],
                          a = i[0],
                          s = i[1];
                        this.container.style[a] = s;
                      }
                    }),
                    (t.prototype.onRemove = function () {
                      null !== this.container.parentNode &&
                        this.container.parentNode.removeChild(this.container);
                    }),
                    t
                  );
                })(google.maps.OverlayView);
                return new a(e, t, n, i);
              })(d, o, n, i, l);
            },
            [d, o, n, i]
          );
        return (
          (0, t.useEffect)(
            function () {
              return (
                null === s || void 0 === s || s(h),
                null === h || void 0 === h || h.setMap(u),
                function () {
                  null === r || void 0 === r || r(h),
                    null === h || void 0 === h || h.setMap(null);
                }
              );
            },
            [u, h]
          ),
          (0, t.useEffect)(
            function () {
              d.style.zIndex = "".concat(a);
            },
            [a, d]
          ),
          yl.createPortal(c, d)
        );
      });
      var kP = (function (e) {
        function n(n) {
          var i = e.call(this, n) || this;
          (i.state = {
            paneEl: null,
            containerStyle: { position: "absolute" },
          }),
            (i.updatePane = function () {
              var e = i.props.mapPaneName,
                t = i.overlayView.getPanes();
              LC(!!e, "OverlayView requires props.mapPaneName but got %s", e),
                t ? i.setState({ paneEl: t[e] }) : i.setState({ paneEl: null });
            }),
            (i.onAdd = function () {
              var e, t;
              i.updatePane(),
                null === (t = (e = i.props).onLoad) ||
                  void 0 === t ||
                  t.call(e, i.overlayView);
            }),
            (i.onPositionElement = function () {
              var e,
                t,
                n = yP(
                  i.overlayView.getProjection(),
                  AC(
                    { x: 0, y: 0 },
                    i.containerRef.current
                      ? vP(
                          i.containerRef.current,
                          i.props.getPixelPositionOffset
                        )
                      : {}
                  ),
                  i.props.bounds,
                  i.props.position
                ),
                o = i.state.containerStyle,
                a = o.left,
                s = o.top,
                r = o.width,
                l = o.height;
              (t = { left: a, top: s, width: r, height: l }),
                ((e = n).left !== t.left ||
                  e.top !== t.top ||
                  e.width !== t.height ||
                  e.height !== t.height) &&
                  i.setState({
                    containerStyle: {
                      top: n.top || 0,
                      left: n.left || 0,
                      width: n.width || 0,
                      height: n.height || 0,
                      position: "absolute",
                    },
                  });
            }),
            (i.draw = function () {
              i.onPositionElement();
            }),
            (i.onRemove = function () {
              var e, t;
              i.setState(function () {
                return { paneEl: null };
              }),
                null === (t = (e = i.props).onUnmount) ||
                  void 0 === t ||
                  t.call(e, i.overlayView);
            }),
            (i.containerRef = (0, t.createRef)());
          var o = new google.maps.OverlayView();
          return (
            (o.onAdd = i.onAdd),
            (o.draw = i.draw),
            (o.onRemove = i.onRemove),
            (i.overlayView = o),
            i
          );
        }
        return (
          kC(n, e),
          (n.prototype.componentDidMount = function () {
            this.overlayView.setMap(this.context);
          }),
          (n.prototype.componentDidUpdate = function (e) {
            var t = wP(e.position),
              n = wP(this.props.position),
              i = SP(e.bounds),
              o = SP(this.props.bounds);
            (t === n && i === o) || this.overlayView.draw(),
              e.mapPaneName !== this.props.mapPaneName && this.updatePane();
          }),
          (n.prototype.componentWillUnmount = function () {
            this.overlayView.setMap(null);
          }),
          (n.prototype.render = function () {
            var e = this.state.paneEl;
            return e
              ? yl.createPortal(
                  (0, js.jsx)("div", {
                    ref: this.containerRef,
                    style: this.state.containerStyle,
                    children: t.Children.only(this.props.children),
                  }),
                  e
                )
              : null;
          }),
          (n.FLOAT_PANE = "floatPane"),
          (n.MAP_PANE = "mapPane"),
          (n.MARKER_LAYER = "markerLayer"),
          (n.OVERLAY_LAYER = "overlayLayer"),
          (n.OVERLAY_MOUSE_TARGET = "overlayMouseTarget"),
          (n.contextType = TC),
          n
        );
      })(t.PureComponent);
      function AP() {}
      var CP = { onDblClick: "dblclick", onClick: "click" },
        MP = {
          opacity: function (e, t) {
            e.setOpacity(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.url,
          i = e.bounds,
          o = e.options,
          a = e.visible,
          s = (0, t.useContext)(TC),
          r = new google.maps.LatLngBounds(
            new google.maps.LatLng(i.south, i.west),
            new google.maps.LatLng(i.north, i.east)
          ),
          l = (0, t.useMemo)(function () {
            return new google.maps.GroundOverlay(n, r, AC({}, o));
          }, []);
        return (
          (0, t.useEffect)(
            function () {
              null !== l && l.setMap(s);
            },
            [s]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof n &&
                null !== l &&
                (l.set("url", n), l.setMap(s));
            },
            [l, n]
          ),
          (0, t.useEffect)(
            function () {
              "undefined" !== typeof a && null !== l && l.setOpacity(a ? 1 : 0);
            },
            [l, a]
          ),
          (0, t.useEffect)(
            function () {
              var e = new google.maps.LatLngBounds(
                new google.maps.LatLng(i.south, i.west),
                new google.maps.LatLng(i.north, i.east)
              );
              "undefined" !== typeof i &&
                null !== l &&
                (l.set("bounds", e), l.setMap(s));
            },
            [l, i]
          ),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { groundOverlay: null }),
              (t.setGroundOverlayCallback = function () {
                null !== t.state.groundOverlay &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.groundOverlay);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              LC(
                !!this.props.url || !!this.props.bounds,
                "For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655"
              );
              var e = new google.maps.GroundOverlay(
                this.props.url,
                this.props.bounds,
                AC(AC({}, this.props.options), { map: this.context })
              );
              (this.registeredEvents = _C({
                updaterMap: MP,
                eventMap: CP,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { groundOverlay: e };
                }, this.setGroundOverlayCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              null !== this.state.groundOverlay &&
                (NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: MP,
                  eventMap: CP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.groundOverlay,
                })));
            }),
            (t.prototype.componentWillUnmount = function () {
              this.state.groundOverlay &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.groundOverlay),
                this.state.groundOverlay.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.defaultProps = { onLoad: AP }),
            (t.contextType = TC);
        })(t.PureComponent);
      var PP = {},
        EP = {
          data: function (e, t) {
            e.setData(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
        };
      (0, t.memo)(function (e) {
        var n = e.data,
          i = e.onLoad,
          o = e.onUnmount,
          a = e.options,
          s = (0, t.useContext)(TC),
          r = (0, t.useState)(null),
          l = r[0],
          c = r[1];
        return (
          (0, t.useEffect)(function () {
            google.maps.visualization ||
              LC(
                !!google.maps.visualization,
                'Did you include prop libraries={["visualization"]} in useJsApiScript? %s',
                google.maps.visualization
              );
          }, []),
          (0, t.useEffect)(
            function () {
              LC(!!n, "data property is required in HeatmapLayer %s", n);
            },
            [n]
          ),
          (0, t.useEffect)(
            function () {
              null !== l && l.setMap(s);
            },
            [s]
          ),
          (0, t.useEffect)(
            function () {
              a && null !== l && l.setOptions(a);
            },
            [l, a]
          ),
          (0, t.useEffect)(function () {
            var e = new google.maps.visualization.HeatmapLayer(
              AC(AC({}, a || {}), { data: n, map: s })
            );
            return (
              c(e),
              i && i(e),
              function () {
                null !== l && (o && o(l), l.setMap(null));
              }
            );
          }, []),
          null
        );
      }),
        (function (e) {
          function t() {
            var t = (null !== e && e.apply(this, arguments)) || this;
            return (
              (t.registeredEvents = []),
              (t.state = { heatmapLayer: null }),
              (t.setHeatmapLayerCallback = function () {
                null !== t.state.heatmapLayer &&
                  t.props.onLoad &&
                  t.props.onLoad(t.state.heatmapLayer);
              }),
              t
            );
          }
          kC(t, e),
            (t.prototype.componentDidMount = function () {
              LC(
                !!google.maps.visualization,
                'Did you include prop libraries={["visualization"]} to <LoadScript />? %s',
                google.maps.visualization
              ),
                LC(
                  !!this.props.data,
                  "data property is required in HeatmapLayer %s",
                  this.props.data
                );
              var e = new google.maps.visualization.HeatmapLayer(
                AC(AC({}, this.props.options || {}), {
                  data: this.props.data,
                  map: this.context,
                })
              );
              (this.registeredEvents = _C({
                updaterMap: EP,
                eventMap: PP,
                prevProps: {},
                nextProps: this.props,
                instance: e,
              })),
                this.setState(function () {
                  return { heatmapLayer: e };
                }, this.setHeatmapLayerCallback);
            }),
            (t.prototype.componentDidUpdate = function (e) {
              NC(this.registeredEvents),
                (this.registeredEvents = _C({
                  updaterMap: EP,
                  eventMap: PP,
                  prevProps: e,
                  nextProps: this.props,
                  instance: this.state.heatmapLayer,
                }));
            }),
            (t.prototype.componentWillUnmount = function () {
              null !== this.state.heatmapLayer &&
                (this.props.onUnmount &&
                  this.props.onUnmount(this.state.heatmapLayer),
                NC(this.registeredEvents),
                this.state.heatmapLayer.setMap(null));
            }),
            (t.prototype.render = function () {
              return null;
            }),
            (t.contextType = TC);
        })(t.PureComponent);
      var LP = {
          onCloseClick: "closeclick",
          onPanoChanged: "pano_changed",
          onPositionChanged: "position_changed",
          onPovChanged: "pov_changed",
          onResize: "resize",
          onStatusChanged: "status_changed",
          onVisibleChanged: "visible_changed",
          onZoomChanged: "zoom_changed",
        },
        TP = {
          register: function (e, t, n) {
            e.registerPanoProvider(t, n);
          },
          links: function (e, t) {
            e.setLinks(t);
          },
          motionTracking: function (e, t) {
            e.setMotionTracking(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          pano: function (e, t) {
            e.setPano(t);
          },
          position: function (e, t) {
            e.setPosition(t);
          },
          pov: function (e, t) {
            e.setPov(t);
          },
          visible: function (e, t) {
            e.setVisible(t);
          },
          zoom: function (e, t) {
            e.setZoom(t);
          },
        },
        OP =
          ((function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (
                (t.registeredEvents = []),
                (t.state = { streetViewPanorama: null }),
                (t.setStreetViewPanoramaCallback = function () {
                  null !== t.state.streetViewPanorama &&
                    t.props.onLoad &&
                    t.props.onLoad(t.state.streetViewPanorama);
                }),
                t
              );
            }
            kC(t, e),
              (t.prototype.componentDidMount = function () {
                var e,
                  t,
                  n =
                    null !==
                      (t =
                        null === (e = this.context) || void 0 === e
                          ? void 0
                          : e.getStreetView()) && void 0 !== t
                      ? t
                      : null;
                (this.registeredEvents = _C({
                  updaterMap: TP,
                  eventMap: LP,
                  prevProps: {},
                  nextProps: this.props,
                  instance: n,
                })),
                  this.setState(function () {
                    return { streetViewPanorama: n };
                  }, this.setStreetViewPanoramaCallback);
              }),
              (t.prototype.componentDidUpdate = function (e) {
                null !== this.state.streetViewPanorama &&
                  (NC(this.registeredEvents),
                  (this.registeredEvents = _C({
                    updaterMap: TP,
                    eventMap: LP,
                    prevProps: e,
                    nextProps: this.props,
                    instance: this.state.streetViewPanorama,
                  })));
              }),
              (t.prototype.componentWillUnmount = function () {
                null !== this.state.streetViewPanorama &&
                  (this.props.onUnmount &&
                    this.props.onUnmount(this.state.streetViewPanorama),
                  NC(this.registeredEvents),
                  this.state.streetViewPanorama.setVisible(!1));
              }),
              (t.prototype.render = function () {
                return null;
              }),
              (t.contextType = TC);
          })(t.PureComponent),
          (function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (
                (t.state = { streetViewService: null }),
                (t.setStreetViewServiceCallback = function () {
                  null !== t.state.streetViewService &&
                    t.props.onLoad &&
                    t.props.onLoad(t.state.streetViewService);
                }),
                t
              );
            }
            kC(t, e),
              (t.prototype.componentDidMount = function () {
                var e = new google.maps.StreetViewService();
                this.setState(function () {
                  return { streetViewService: e };
                }, this.setStreetViewServiceCallback);
              }),
              (t.prototype.componentWillUnmount = function () {
                null !== this.state.streetViewService &&
                  this.props.onUnmount &&
                  this.props.onUnmount(this.state.streetViewService);
              }),
              (t.prototype.render = function () {
                return null;
              }),
              (t.contextType = TC);
          })(t.PureComponent),
          (function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (
                (t.state = { directionsService: null }),
                (t.setDirectionsServiceCallback = function () {
                  null !== t.state.directionsService &&
                    t.props.onLoad &&
                    t.props.onLoad(t.state.directionsService);
                }),
                t
              );
            }
            kC(t, e),
              (t.prototype.componentDidMount = function () {
                LC(
                  !!this.props.options,
                  "DirectionsService expected options object as parameter, but got %s",
                  this.props.options
                );
                var e = new google.maps.DirectionsService();
                this.setState(function () {
                  return { directionsService: e };
                }, this.setDirectionsServiceCallback);
              }),
              (t.prototype.componentDidUpdate = function () {
                null !== this.state.directionsService &&
                  this.state.directionsService.route(
                    this.props.options,
                    this.props.callback
                  );
              }),
              (t.prototype.componentWillUnmount = function () {
                null !== this.state.directionsService &&
                  this.props.onUnmount &&
                  this.props.onUnmount(this.state.directionsService);
              }),
              (t.prototype.render = function () {
                return null;
              });
          })(t.PureComponent),
          { onDirectionsChanged: "directions_changed" }),
        RP = {
          directions: function (e, t) {
            e.setDirections(t);
          },
          map: function (e, t) {
            e.setMap(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          panel: function (e, t) {
            e.setPanel(t);
          },
          routeIndex: function (e, t) {
            e.setRouteIndex(t);
          },
        },
        IP =
          ((function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (
                (t.registeredEvents = []),
                (t.state = { directionsRenderer: null }),
                (t.setDirectionsRendererCallback = function () {
                  null !== t.state.directionsRenderer &&
                    (t.state.directionsRenderer.setMap(t.context),
                    t.props.onLoad &&
                      t.props.onLoad(t.state.directionsRenderer));
                }),
                t
              );
            }
            kC(t, e),
              (t.prototype.componentDidMount = function () {
                var e = new google.maps.DirectionsRenderer(this.props.options);
                (this.registeredEvents = _C({
                  updaterMap: RP,
                  eventMap: OP,
                  prevProps: {},
                  nextProps: this.props,
                  instance: e,
                })),
                  this.setState(function () {
                    return { directionsRenderer: e };
                  }, this.setDirectionsRendererCallback);
              }),
              (t.prototype.componentDidUpdate = function (e) {
                null !== this.state.directionsRenderer &&
                  (NC(this.registeredEvents),
                  (this.registeredEvents = _C({
                    updaterMap: RP,
                    eventMap: OP,
                    prevProps: e,
                    nextProps: this.props,
                    instance: this.state.directionsRenderer,
                  })));
              }),
              (t.prototype.componentWillUnmount = function () {
                null !== this.state.directionsRenderer &&
                  (this.props.onUnmount &&
                    this.props.onUnmount(this.state.directionsRenderer),
                  NC(this.registeredEvents),
                  this.state.directionsRenderer &&
                    this.state.directionsRenderer.setMap(null));
              }),
              (t.prototype.render = function () {
                return (0, js.jsx)(js.Fragment, {});
              }),
              (t.contextType = TC);
          })(t.PureComponent),
          (function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (
                (t.state = { distanceMatrixService: null }),
                (t.setDistanceMatrixServiceCallback = function () {
                  null !== t.state.distanceMatrixService &&
                    t.props.onLoad &&
                    t.props.onLoad(t.state.distanceMatrixService);
                }),
                t
              );
            }
            kC(t, e),
              (t.prototype.componentDidMount = function () {
                LC(
                  !!this.props.options,
                  "DistanceMatrixService expected options object as parameter, but go %s",
                  this.props.options
                );
                var e = new google.maps.DistanceMatrixService();
                this.setState(function () {
                  return { distanceMatrixService: e };
                }, this.setDistanceMatrixServiceCallback);
              }),
              (t.prototype.componentDidUpdate = function () {
                null !== this.state.distanceMatrixService &&
                  this.state.distanceMatrixService.getDistanceMatrix(
                    this.props.options,
                    this.props.callback
                  );
              }),
              (t.prototype.componentWillUnmount = function () {
                null !== this.state.distanceMatrixService &&
                  this.props.onUnmount &&
                  this.props.onUnmount(this.state.distanceMatrixService);
              }),
              (t.prototype.render = function () {
                return null;
              });
          })(t.PureComponent),
          { onPlacesChanged: "places_changed" }),
        NP = {
          bounds: function (e, t) {
            e.setBounds(t);
          },
        },
        _P =
          ((function (e) {
            function n() {
              var n = (null !== e && e.apply(this, arguments)) || this;
              return (
                (n.registeredEvents = []),
                (n.containerElement = (0, t.createRef)()),
                (n.state = { searchBox: null }),
                (n.setSearchBoxCallback = function () {
                  null !== n.state.searchBox &&
                    n.props.onLoad &&
                    n.props.onLoad(n.state.searchBox);
                }),
                n
              );
            }
            kC(n, e),
              (n.prototype.componentDidMount = function () {
                if (
                  (LC(
                    !!google.maps.places,
                    'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',
                    google.maps.places
                  ),
                  null !== this.containerElement &&
                    null !== this.containerElement.current)
                ) {
                  var e = this.containerElement.current.querySelector("input");
                  if (null !== e) {
                    var t = new google.maps.places.SearchBox(
                      e,
                      this.props.options
                    );
                    (this.registeredEvents = _C({
                      updaterMap: NP,
                      eventMap: IP,
                      prevProps: {},
                      nextProps: this.props,
                      instance: t,
                    })),
                      this.setState(function () {
                        return { searchBox: t };
                      }, this.setSearchBoxCallback);
                  }
                }
              }),
              (n.prototype.componentDidUpdate = function (e) {
                null !== this.state.searchBox &&
                  (NC(this.registeredEvents),
                  (this.registeredEvents = _C({
                    updaterMap: NP,
                    eventMap: IP,
                    prevProps: e,
                    nextProps: this.props,
                    instance: this.state.searchBox,
                  })));
              }),
              (n.prototype.componentWillUnmount = function () {
                null !== this.state.searchBox &&
                  (this.props.onUnmount &&
                    this.props.onUnmount(this.state.searchBox),
                  NC(this.registeredEvents));
              }),
              (n.prototype.render = function () {
                return (0, js.jsx)("div", {
                  ref: this.containerElement,
                  children: t.Children.only(this.props.children),
                });
              }),
              (n.contextType = TC);
          })(t.PureComponent),
          { onPlaceChanged: "place_changed" }),
        DP = {
          bounds: function (e, t) {
            e.setBounds(t);
          },
          restrictions: function (e, t) {
            e.setComponentRestrictions(t);
          },
          fields: function (e, t) {
            e.setFields(t);
          },
          options: function (e, t) {
            e.setOptions(t);
          },
          types: function (e, t) {
            e.setTypes(t);
          },
        };
      !(function (e) {
        function n() {
          var n = (null !== e && e.apply(this, arguments)) || this;
          return (
            (n.registeredEvents = []),
            (n.containerElement = (0, t.createRef)()),
            (n.state = { autocomplete: null }),
            (n.setAutocompleteCallback = function () {
              null !== n.state.autocomplete &&
                n.props.onLoad &&
                n.props.onLoad(n.state.autocomplete);
            }),
            n
          );
        }
        kC(n, e),
          (n.prototype.componentDidMount = function () {
            var e;
            LC(
              !!google.maps.places,
              'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',
              google.maps.places
            );
            var t =
              null === (e = this.containerElement.current) || void 0 === e
                ? void 0
                : e.querySelector("input");
            if (t) {
              var n = new google.maps.places.Autocomplete(
                t,
                this.props.options
              );
              (this.registeredEvents = _C({
                updaterMap: DP,
                eventMap: _P,
                prevProps: {},
                nextProps: this.props,
                instance: n,
              })),
                this.setState(function () {
                  return { autocomplete: n };
                }, this.setAutocompleteCallback);
            }
          }),
          (n.prototype.componentDidUpdate = function (e) {
            NC(this.registeredEvents),
              (this.registeredEvents = _C({
                updaterMap: DP,
                eventMap: _P,
                prevProps: e,
                nextProps: this.props,
                instance: this.state.autocomplete,
              }));
          }),
          (n.prototype.componentWillUnmount = function () {
            null !== this.state.autocomplete && NC(this.registeredEvents);
          }),
          (n.prototype.render = function () {
            return (0, js.jsx)("div", {
              ref: this.containerElement,
              className: this.props.className,
              children: t.Children.only(this.props.children),
            });
          }),
          (n.defaultProps = { className: "" }),
          (n.contextType = TC);
      })(t.PureComponent);
      const zP = JSON.parse(
          '[{"featureType":"administrative.country","elementType":"labels.text","stylers":[{"visibility":"off"}]},{"featureType":"administrative.continent","elementType":"labels.text","stylers":[{"visibility":"off"}]},{"elementType":"geometry","stylers":[{"color":"#212121"}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"elementType":"labels.text.stroke","stylers":[{"color":"#212121"}]},{"featureType":"administrative","elementType":"geometry","stylers":[{"color":"#757575"}]},{"featureType":"administrative.locality","elementType":"labels.text.fill","stylers":[{"color":"#bdbdbd"}]},{"featureType":"poi","elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#181818"}]},{"featureType":"poi.park","elementType":"labels.text.fill","stylers":[{"color":"#616161"}]},{"featureType":"poi.park","elementType":"labels.text.stroke","stylers":[{"color":"#1b1b1b"}]},{"featureType":"road","elementType":"geometry.fill","stylers":[{"color":"#2c2c2c"}]},{"featureType":"road","elementType":"labels.text.fill","stylers":[{"color":"#8a8a8a"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#373737"}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"color":"#3c3c3c"}]},{"featureType":"road.highway.controlled_access","elementType":"geometry","stylers":[{"color":"#4e4e4e"}]},{"featureType":"road.local","elementType":"labels.text.fill","stylers":[{"color":"#616161"}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"featureType":"water","elementType":"geometry","stylers":[{"color":"#000000"}]},{"featureType":"water","elementType":"labels.text.fill","stylers":[{"color":"#3d3d3d"}]}]'
        ),
        jP = [
          {
            code2: "AF",
            code3: "AFG",
            name: "Afghanistan",
            capital: "Kabul",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "BDS", name: "Badakhsh\u0101n", subdivision: null },
              { code: "BGL", name: "Baghl\u0101n", subdivision: null },
              { code: "BAL", name: "Balkh", subdivision: null },
              { code: "BDG", name: "B\u0101dgh\u012bs", subdivision: null },
              { code: "BAM", name: "B\u0101my\u0101n", subdivision: null },
              { code: "DAY", name: "D\u0101ykund\u012b", subdivision: null },
              { code: "FRA", name: "Far\u0101h", subdivision: null },
              { code: "FYB", name: "F\u0101ry\u0101b", subdivision: null },
              { code: "GHA", name: "Ghazn\u012b", subdivision: null },
              { code: "GHO", name: "Gh\u014dr", subdivision: null },
              { code: "HEL", name: "Helmand", subdivision: null },
              { code: "HER", name: "Her\u0101t", subdivision: null },
              { code: "JOW", name: "Jowzj\u0101n", subdivision: null },
              { code: "KAN", name: "Kandah\u0101r", subdivision: null },
              { code: "KHO", name: "Kh\u014dst", subdivision: null },
              { code: "KNR", name: "Kunar", subdivision: null },
              { code: "KDZ", name: "Kunduz", subdivision: null },
              { code: "KAB", name: "K\u0101bul", subdivision: null },
              { code: "KAP", name: "K\u0101p\u012bs\u0101", subdivision: null },
              { code: "LAG", name: "Laghm\u0101n", subdivision: null },
              { code: "LOG", name: "L\u014dgar", subdivision: null },
              { code: "NAN", name: "Nangarh\u0101r", subdivision: null },
              { code: "NIM", name: "N\u012bmr\u014dz", subdivision: null },
              { code: "NUR", name: "N\u016brist\u0101n", subdivision: null },
              { code: "PIA", name: "Paktiy\u0101", subdivision: null },
              { code: "PKA", name: "Pakt\u012bk\u0101", subdivision: null },
              { code: "PAN", name: "Panjshayr", subdivision: null },
              { code: "PAR", name: "Parw\u0101n", subdivision: null },
              { code: "SAM", name: "Samang\u0101n", subdivision: null },
              { code: "SAR", name: "Sar-e Pul", subdivision: null },
              { code: "TAK", name: "Takh\u0101r", subdivision: null },
              { code: "URU", name: "Uruzg\u0101n", subdivision: null },
              { code: "WAR", name: "Wardak", subdivision: null },
              { code: "ZAB", name: "Z\u0101bul", subdivision: null },
            ],
          },
          {
            code2: "AX",
            code3: "ALA",
            name: "\xc5land Islands",
            capital: "Mariehamn",
            region: "Europe",
            subregion: "Northern Europe",
            states: [],
          },
          {
            code2: "AL",
            code3: "ALB",
            name: "Albania",
            capital: "Tirana",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "01", name: "Berat", subdivision: null },
              { code: "09", name: "Dib\xebr", subdivision: null },
              { code: "02", name: "Durr\xebs", subdivision: null },
              { code: "03", name: "Elbasan", subdivision: null },
              { code: "04", name: "Fier", subdivision: null },
              { code: "05", name: "Gjirokast\xebr", subdivision: null },
              { code: "06", name: "Kor\xe7\xeb", subdivision: null },
              { code: "07", name: "Kuk\xebs", subdivision: null },
              { code: "08", name: "Lezh\xeb", subdivision: null },
              { code: "10", name: "Shkod\xebr", subdivision: null },
              { code: "11", name: "Tiran\xeb", subdivision: null },
              { code: "12", name: "Vlor\xeb", subdivision: null },
            ],
          },
          {
            code2: "DZ",
            code3: "DZA",
            name: "Algeria",
            capital: "Algiers",
            region: "Africa",
            subregion: "Northern Africa",
            states: [
              { code: "01", name: "Adrar", subdivision: null },
              { code: "16", name: "Alger", subdivision: null },
              { code: "23", name: "Annaba", subdivision: null },
              { code: "44", name: "A\xefn Defla", subdivision: null },
              { code: "46", name: "A\xefn T\xe9mouchent", subdivision: null },
              { code: "05", name: "Batna", subdivision: null },
              { code: "07", name: "Biskra", subdivision: null },
              { code: "09", name: "Blida", subdivision: null },
              { code: "34", name: "Bordj Bou Arr\xe9ridj", subdivision: null },
              { code: "10", name: "Bouira", subdivision: null },
              { code: "35", name: "Boumerd\xe8s", subdivision: null },
              { code: "08", name: "B\xe9char", subdivision: null },
              { code: "06", name: "B\xe9ja\xefa", subdivision: null },
              { code: "02", name: "Chlef", subdivision: null },
              { code: "25", name: "Constantine", subdivision: null },
              { code: "17", name: "Djelfa", subdivision: null },
              { code: "32", name: "El Bayadh", subdivision: null },
              { code: "39", name: "El Oued", subdivision: null },
              { code: "36", name: "El Tarf", subdivision: null },
              { code: "47", name: "Gharda\xefa", subdivision: null },
              { code: "24", name: "Guelma", subdivision: null },
              { code: "33", name: "Illizi", subdivision: null },
              { code: "18", name: "Jijel", subdivision: null },
              { code: "40", name: "Khenchela", subdivision: null },
              { code: "03", name: "Laghouat", subdivision: null },
              { code: "29", name: "Mascara", subdivision: null },
              { code: "43", name: "Mila", subdivision: null },
              { code: "27", name: "Mostaganem", subdivision: null },
              { code: "28", name: "Msila", subdivision: null },
              { code: "26", name: "M\xe9d\xe9a", subdivision: null },
              { code: "45", name: "Naama", subdivision: null },
              { code: "31", name: "Oran", subdivision: null },
              { code: "30", name: "Ouargla", subdivision: null },
              { code: "04", name: "Oum el Bouaghi", subdivision: null },
              { code: "48", name: "Relizane", subdivision: null },
              { code: "20", name: "Sa\xefda", subdivision: null },
              { code: "22", name: "Sidi Bel Abb\xe8s", subdivision: null },
              { code: "21", name: "Skikda", subdivision: null },
              { code: "41", name: "Souk Ahras", subdivision: null },
              { code: "19", name: "S\xe9tif", subdivision: null },
              { code: "11", name: "Tamanghasset", subdivision: null },
              { code: "14", name: "Tiaret", subdivision: null },
              { code: "37", name: "Tindouf", subdivision: null },
              { code: "42", name: "Tipaza", subdivision: null },
              { code: "38", name: "Tissemsilt", subdivision: null },
              { code: "15", name: "Tizi Ouzou", subdivision: null },
              { code: "13", name: "Tlemcen", subdivision: null },
              { code: "12", name: "T\xe9bessa", subdivision: null },
            ],
          },
          {
            code2: "AS",
            code3: "ASM",
            name: "American Samoa",
            capital: "Pago Pago",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "AD",
            code3: "AND",
            name: "Andorra",
            capital: "Andorra la Vella",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "07", name: "Andorra la Vella", subdivision: null },
              { code: "02", name: "Canillo", subdivision: null },
              { code: "03", name: "Encamp", subdivision: null },
              { code: "08", name: "Escaldes-Engordany", subdivision: null },
              { code: "04", name: "La Massana", subdivision: null },
              { code: "05", name: "Ordino", subdivision: null },
              {
                code: "06",
                name: "Sant Juli\xe0 de L\xf2ria",
                subdivision: null,
              },
            ],
          },
          {
            code2: "AO",
            code3: "AGO",
            name: "Angola",
            capital: "Luanda",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "BGO", name: "Bengo", subdivision: null },
              { code: "BGU", name: "Benguela", subdivision: null },
              { code: "BIE", name: "Bi\xe9", subdivision: null },
              { code: "CAB", name: "Cabinda", subdivision: null },
              { code: "CNN", name: "Cunene", subdivision: null },
              { code: "HUA", name: "Huambo", subdivision: null },
              { code: "HUI", name: "Hu\xedla", subdivision: null },
              { code: "CCU", name: "Kuando Kubango", subdivision: null },
              { code: "CNO", name: "Kwanza Norte", subdivision: null },
              { code: "CUS", name: "Kwanza Sul", subdivision: null },
              { code: "LUA", name: "Luanda", subdivision: null },
              { code: "LNO", name: "Lunda Norte", subdivision: null },
              { code: "LSU", name: "Lunda Sul", subdivision: null },
              { code: "MAL", name: "Malange", subdivision: null },
              { code: "MOX", name: "Moxico", subdivision: null },
              { code: "NAM", name: "Namibe", subdivision: null },
              { code: "UIG", name: "U\xedge", subdivision: null },
              { code: "ZAI", name: "Zaire", subdivision: null },
            ],
          },
          {
            code2: "AI",
            code3: "AIA",
            name: "Anguilla",
            capital: "The Valley",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "AQ",
            code3: "ATA",
            name: "Antarctica",
            capital: "",
            region: "Polar",
            subregion: "",
            states: [],
          },
          {
            code2: "AG",
            code3: "ATG",
            name: "Antigua and Barbuda",
            capital: "Saint John's",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "10", name: "Barbuda", subdivision: null },
              { code: "11", name: "Redonda", subdivision: null },
              { code: "03", name: "Saint George", subdivision: null },
              { code: "04", name: "Saint John", subdivision: null },
              { code: "05", name: "Saint Mary", subdivision: null },
              { code: "06", name: "Saint Paul", subdivision: null },
              { code: "07", name: "Saint Peter", subdivision: null },
              { code: "08", name: "Saint Philip", subdivision: null },
            ],
          },
          {
            code2: "AR",
            code3: "ARG",
            name: "Argentina",
            capital: "Buenos Aires",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "B", name: "Buenos Aires", subdivision: null },
              { code: "K", name: "Catamarca", subdivision: null },
              { code: "H", name: "Chaco", subdivision: null },
              { code: "U", name: "Chubut", subdivision: null },
              {
                code: "C",
                name: "Ciudad Aut\xf3noma de Buenos Aires",
                subdivision: null,
              },
              { code: "W", name: "Corrientes", subdivision: null },
              { code: "X", name: "C\xf3rdoba", subdivision: null },
              { code: "E", name: "Entre R\xedos", subdivision: null },
              { code: "P", name: "Formosa", subdivision: null },
              { code: "Y", name: "Jujuy", subdivision: null },
              { code: "L", name: "La Pampa", subdivision: null },
              { code: "F", name: "La Rioja", subdivision: null },
              { code: "M", name: "Mendoza", subdivision: null },
              { code: "N", name: "Misiones", subdivision: null },
              { code: "Q", name: "Neuqu\xe9n", subdivision: null },
              { code: "R", name: "R\xedo Negro", subdivision: null },
              { code: "A", name: "Salta", subdivision: null },
              { code: "J", name: "San Juan", subdivision: null },
              { code: "D", name: "San Luis", subdivision: null },
              { code: "Z", name: "Santa Cruz", subdivision: null },
              { code: "S", name: "Santa Fe", subdivision: null },
              { code: "G", name: "Santiago del Estero", subdivision: null },
              { code: "V", name: "Tierra del Fuego", subdivision: null },
              { code: "T", name: "Tucum\xe1n", subdivision: null },
            ],
          },
          {
            code2: "AM",
            code3: "ARM",
            name: "Armenia",
            capital: "Yerevan",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AG", name: "Aragac\u0323otn", subdivision: null },
              { code: "AR", name: "Ararat", subdivision: null },
              { code: "AV", name: "Armavir", subdivision: null },
              { code: "ER", name: "Erevan", subdivision: null },
              { code: "GR", name: "Ge\u0121ark'unik'", subdivision: null },
              { code: "KT", name: "Kotayk'", subdivision: null },
              { code: "LO", name: "Lo\u1e59i", subdivision: null },
              { code: "SU", name: "Syunik'", subdivision: null },
              { code: "TV", name: "Tavu\u0161", subdivision: null },
              { code: "VD", name: "Vayo\u0107 Jor", subdivision: null },
              { code: "SH", name: "\u0160irak", subdivision: null },
            ],
          },
          {
            code2: "AW",
            code3: "ABW",
            name: "Aruba",
            capital: "Oranjestad",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "AU",
            code3: "AUS",
            name: "Australia",
            capital: "Canberra",
            region: "Oceania",
            subregion: "Australia and New Zealand",
            states: [
              {
                code: "ACT",
                name: "Australian Capital Territory",
                subdivision: null,
              },
              { code: "NSW", name: "New South Wales", subdivision: null },
              { code: "NT", name: "Northern Territory", subdivision: null },
              { code: "QLD", name: "Queensland", subdivision: null },
              { code: "SA", name: "South Australia", subdivision: null },
              { code: "TAS", name: "Tasmania", subdivision: null },
              { code: "VIC", name: "Victoria", subdivision: null },
              { code: "WA", name: "Western Australia", subdivision: null },
            ],
          },
          {
            code2: "AT",
            code3: "AUT",
            name: "Austria",
            capital: "Vienna",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "B", name: "Burgenland", subdivision: null },
              { code: "K", name: "K\xe4rnten", subdivision: null },
              { code: "N\xd6", name: "Nieder\xf6sterreich", subdivision: null },
              { code: "O\xd6", name: "Ober\xf6sterreich", subdivision: null },
              { code: "S", name: "Salzburg", subdivision: null },
              { code: "ST", name: "Steiermark", subdivision: null },
              { code: "T", name: "Tirol", subdivision: null },
              { code: "V", name: "Vorarlberg", subdivision: null },
              { code: "W", name: "Wien", subdivision: null },
            ],
          },
          {
            code2: "AZ",
            code3: "AZE",
            name: "Azerbaijan",
            capital: "Baku",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "NX", name: "Nax\xe7\u0131van", subdivision: null },
            ],
          },
          {
            code2: "BS",
            code3: "BHS",
            name: "The Bahamas",
            capital: "Nassau",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "AK", name: "Acklins", subdivision: null },
              { code: "BY", name: "Berry Islands", subdivision: null },
              { code: "BI", name: "Bimini", subdivision: null },
              { code: "BP", name: "Black Point", subdivision: null },
              { code: "CI", name: "Cat Island", subdivision: null },
              { code: "CO", name: "Central Abaco", subdivision: null },
              { code: "CS", name: "Central Andros", subdivision: null },
              { code: "CE", name: "Central Eleuthera", subdivision: null },
              { code: "FP", name: "City of Freeport", subdivision: null },
              {
                code: "CK",
                name: "Crooked Island and Long Cay",
                subdivision: null,
              },
              { code: "EG", name: "East Grand Bahama", subdivision: null },
              { code: "EX", name: "Exuma", subdivision: null },
              { code: "GC", name: "Grand Cay", subdivision: null },
              { code: "HI", name: "Harbour Island", subdivision: null },
              { code: "HT", name: "Hope Town", subdivision: null },
              { code: "IN", name: "Inagua", subdivision: null },
              { code: "LI", name: "Long Island", subdivision: null },
              { code: "MC", name: "Mangrove Cay", subdivision: null },
              { code: "MG", name: "Mayaguana", subdivision: null },
              { code: "MI", name: "Moores Island", subdivision: null },
              { code: "NO", name: "North Abaco", subdivision: null },
              { code: "NS", name: "North Andros", subdivision: null },
              { code: "NE", name: "North Eleuthera", subdivision: null },
              { code: "RI", name: "Ragged Island", subdivision: null },
              { code: "RC", name: "Rum Cay", subdivision: null },
              { code: "SS", name: "San Salvador", subdivision: null },
              { code: "SO", name: "South Abaco", subdivision: null },
              { code: "SA", name: "South Andros", subdivision: null },
              { code: "SE", name: "South Eleuthera", subdivision: null },
              { code: "SW", name: "Spanish Wells", subdivision: null },
              { code: "WG", name: "West Grand Bahama", subdivision: null },
            ],
          },
          {
            code2: "BH",
            code3: "BHR",
            name: "Bahrain",
            capital: "Manama",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "14", name: "Al Jan\u016bb\u012byah", subdivision: null },
              { code: "13", name: "Al Man\u0101mah", subdivision: null },
              { code: "15", name: "Al Mu\u1e29arraq", subdivision: null },
              { code: "16", name: "Al Wus\u0163\xe1", subdivision: null },
              {
                code: "17",
                name: "Ash Sham\u0101l\u012byah",
                subdivision: null,
              },
            ],
          },
          {
            code2: "BD",
            code3: "BGD",
            name: "Bangladesh",
            capital: "Dhaka",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "A", name: "Barisal", subdivision: null },
              { code: "B", name: "Chittagong", subdivision: null },
              { code: "C", name: "Dhaka", subdivision: null },
              { code: "D", name: "Khulna", subdivision: null },
              { code: "E", name: "Rajshahi", subdivision: null },
              { code: "F", name: "Rangpur", subdivision: null },
              { code: "G", name: "Sylhet", subdivision: null },
            ],
          },
          {
            code2: "BB",
            code3: "BRB",
            name: "Barbados",
            capital: "Bridgetown",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "01", name: "Christ Church", subdivision: null },
              { code: "02", name: "Saint Andrew", subdivision: null },
              { code: "03", name: "Saint George", subdivision: null },
              { code: "04", name: "Saint James", subdivision: null },
              { code: "05", name: "Saint John", subdivision: null },
              { code: "06", name: "Saint Joseph", subdivision: null },
              { code: "07", name: "Saint Lucy", subdivision: null },
              { code: "08", name: "Saint Michael", subdivision: null },
              { code: "09", name: "Saint Peter", subdivision: null },
              { code: "10", name: "Saint Philip", subdivision: null },
              { code: "11", name: "Saint Thomas", subdivision: null },
            ],
          },
          {
            code2: "BY",
            code3: "BLR",
            name: "Belarus",
            capital: "Minsk",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "BR", name: "Brestskaya voblasts'", subdivision: null },
              { code: "HO", name: "Homyel'skaya voblasts'", subdivision: null },
              { code: "HM", name: "Horad Minsk", subdivision: null },
              { code: "HR", name: "Hrodzenskaya voblasts'", subdivision: null },
              {
                code: "MA",
                name: "Mahilyowskaya voblasts'",
                subdivision: null,
              },
              { code: "MI", name: "Minskaya voblasts'", subdivision: null },
              { code: "VI", name: "Vitsyebskaya voblasts'", subdivision: null },
            ],
          },
          {
            code2: "BE",
            code3: "BEL",
            name: "Belgium",
            capital: "Brussels",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              {
                code: "BRU",
                name: "Brussels Hoofdstedelijk Gewest",
                subdivision: null,
              },
              { code: "WAL", name: "R\xe9gion Wallonne", subdivision: null },
              { code: "VLG", name: "Vlaams Gewest", subdivision: null },
            ],
          },
          {
            code2: "BZ",
            code3: "BLZ",
            name: "Belize",
            capital: "Belmopan",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "BZ", name: "Belize", subdivision: null },
              { code: "CY", name: "Cayo", subdivision: null },
              { code: "CZL", name: "Corozal", subdivision: null },
              { code: "OW", name: "Orange Walk", subdivision: null },
              { code: "SC", name: "Stann Creek", subdivision: null },
              { code: "TOL", name: "Toledo", subdivision: null },
            ],
          },
          {
            code2: "BJ",
            code3: "BEN",
            name: "Benin",
            capital: "Porto-Novo",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "AL", name: "Alibori", subdivision: null },
              { code: "AK", name: "Atakora", subdivision: null },
              { code: "AQ", name: "Atlantique", subdivision: null },
              { code: "BO", name: "Borgou", subdivision: null },
              { code: "CO", name: "Collines", subdivision: null },
              { code: "DO", name: "Donga", subdivision: null },
              { code: "KO", name: "Kouffo", subdivision: null },
              { code: "LI", name: "Littoral", subdivision: null },
              { code: "MO", name: "Mono", subdivision: null },
              { code: "OU", name: "Ou\xe9m\xe9", subdivision: null },
              { code: "PL", name: "Plateau", subdivision: null },
              { code: "ZO", name: "Zou", subdivision: null },
            ],
          },
          {
            code2: "BM",
            code3: "BMU",
            name: "Bermuda",
            capital: "Hamilton",
            region: "North America",
            subregion: "Northern America",
            states: [],
          },
          {
            code2: "BT",
            code3: "BTN",
            name: "Bhutan",
            capital: "Thimphu",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "33", name: "Bumthang", subdivision: null },
              { code: "12", name: "Chhukha", subdivision: null },
              { code: "22", name: "Dagana", subdivision: null },
              { code: "GA", name: "Gasa", subdivision: null },
              { code: "13", name: "Ha", subdivision: null },
              { code: "44", name: "Lhuentse", subdivision: null },
              { code: "42", name: "Monggar", subdivision: null },
              { code: "11", name: "Paro", subdivision: null },
              { code: "43", name: "Pemagatshel", subdivision: null },
              { code: "23", name: "Punakha", subdivision: null },
              { code: "45", name: "Samdrup Jongkha", subdivision: null },
              { code: "14", name: "Samtse", subdivision: null },
              { code: "31", name: "Sarpang", subdivision: null },
              { code: "15", name: "Thimphu", subdivision: null },
              { code: "TY", name: "Trashi Yangtse", subdivision: null },
              { code: "41", name: "Trashigang", subdivision: null },
              { code: "32", name: "Trongsa", subdivision: null },
              { code: "21", name: "Tsirang", subdivision: null },
              { code: "24", name: "Wangdue Phodrang", subdivision: null },
              { code: "34", name: "Zhemgang", subdivision: null },
            ],
          },
          {
            code2: "BO",
            code3: "BOL",
            name: "Bolivia",
            capital: "Sucre",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "H", name: "Chuquisaca", subdivision: null },
              { code: "C", name: "Cochabamba", subdivision: null },
              { code: "B", name: "El Beni", subdivision: null },
              { code: "L", name: "La Paz", subdivision: null },
              { code: "O", name: "Oruro", subdivision: null },
              { code: "N", name: "Pando", subdivision: null },
              { code: "P", name: "Potos\xed", subdivision: null },
              { code: "S", name: "Santa Cruz", subdivision: null },
              { code: "T", name: "Tarija", subdivision: null },
            ],
          },
          {
            code2: "BQ",
            code3: "BES",
            name: "Bonaire",
            capital: "Kralendijk",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "BA",
            code3: "BIH",
            name: "Bosnia and Herzegovina",
            capital: "Sarajevo",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "BRC", name: "Br\u010dko distrikt", subdivision: null },
              {
                code: "BIH",
                name: "Federacija Bosna i Hercegovina",
                subdivision: null,
              },
              { code: "SRP", name: "Republika Srpska", subdivision: null },
            ],
          },
          {
            code2: "BW",
            code3: "BWA",
            name: "Botswana",
            capital: "Gaborone",
            region: "Africa",
            subregion: "Southern Africa",
            states: [
              { code: "CE", name: "Central", subdivision: null },
              { code: "CH", name: "Chobe", subdivision: null },
              { code: "FR", name: "Francistown", subdivision: null },
              { code: "GA", name: "Gaborone", subdivision: null },
              { code: "GH", name: "Ghanzi", subdivision: null },
              { code: "JW", name: "Jwaneng", subdivision: null },
              { code: "KG", name: "Kgalagadi", subdivision: null },
              { code: "KL", name: "Kgatleng", subdivision: null },
              { code: "KW", name: "Kweneng", subdivision: null },
              { code: "LO", name: "Lobatse", subdivision: null },
              { code: "NE", name: "North-East", subdivision: null },
              { code: "NW", name: "North-West", subdivision: null },
              { code: "SP", name: "Selibe Phikwe", subdivision: null },
              { code: "SE", name: "South-East", subdivision: null },
              { code: "SO", name: "Southern", subdivision: null },
              { code: "ST", name: "Sowa Town", subdivision: null },
            ],
          },
          {
            code2: "BV",
            code3: "BVT",
            name: "Bouvet Island",
            capital: "",
            region: "",
            subregion: "",
            states: [],
          },
          {
            code2: "BR",
            code3: "BRA",
            name: "Brazil",
            capital: "Bras\xedlia",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "AC", name: "Acre", subdivision: null },
              { code: "AL", name: "Alagoas", subdivision: null },
              { code: "AP", name: "Amap\xe1", subdivision: null },
              { code: "AM", name: "Amazonas", subdivision: null },
              { code: "BA", name: "Bahia", subdivision: null },
              { code: "CE", name: "Cear\xe1", subdivision: null },
              { code: "DF", name: "Distrito Federal", subdivision: null },
              { code: "ES", name: "Esp\xedrito Santo", subdivision: null },
              { code: "GO", name: "Goi\xe1s", subdivision: null },
              { code: "MA", name: "Maranh\xe3o", subdivision: null },
              { code: "MT", name: "Mato Grosso", subdivision: null },
              { code: "MS", name: "Mato Grosso do Sul", subdivision: null },
              { code: "MG", name: "Minas Gerais", subdivision: null },
              { code: "PR", name: "Paran\xe1", subdivision: null },
              { code: "PB", name: "Para\xedba", subdivision: null },
              { code: "PA", name: "Par\xe1", subdivision: null },
              { code: "PE", name: "Pernambuco", subdivision: null },
              { code: "PI", name: "Piau\xed", subdivision: null },
              { code: "RN", name: "Rio Grande do Norte", subdivision: null },
              { code: "RS", name: "Rio Grande do Sul", subdivision: null },
              { code: "RJ", name: "Rio de Janeiro", subdivision: null },
              { code: "RO", name: "Rond\xf4nia", subdivision: null },
              { code: "RR", name: "Roraima", subdivision: null },
              { code: "SC", name: "Santa Catarina", subdivision: null },
              { code: "SE", name: "Sergipe", subdivision: null },
              { code: "SP", name: "S\xe3o Paulo", subdivision: null },
              { code: "TO", name: "Tocantins", subdivision: null },
            ],
          },
          {
            code2: "IO",
            code3: "IOT",
            name: "British Indian Ocean Territory",
            capital: "Diego Garcia",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [],
          },
          {
            code2: "UM",
            code3: "UMI",
            name: "United States Minor Outlying Islands",
            capital: "",
            region: "North America",
            subregion: "Northern America",
            states: [
              { code: "81", name: "Baker Island", subdivision: null },
              { code: "84", name: "Howland Island", subdivision: null },
              { code: "86", name: "Jarvis Island", subdivision: null },
              { code: "67", name: "Johnston Atoll", subdivision: null },
              { code: "89", name: "Kingman Reef", subdivision: null },
              { code: "71", name: "Midway Islands", subdivision: null },
              { code: "76", name: "Navassa Island", subdivision: null },
              { code: "95", name: "Palmyra Atoll", subdivision: null },
              { code: "79", name: "Wake Island", subdivision: null },
            ],
          },
          {
            code2: "VG",
            code3: "VGB",
            name: "Virgin Islands (British)",
            capital: "Road Town",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "VI",
            code3: "VIR",
            name: "Virgin Islands (U.S.)",
            capital: "Charlotte Amalie",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "BN",
            code3: "BRN",
            name: "Brunei",
            capital: "Bandar Seri Begawan",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "BE", name: "Belait", subdivision: null },
              { code: "BM", name: "Brunei-Muara", subdivision: null },
              { code: "TE", name: "Temburong", subdivision: null },
              { code: "TU", name: "Tutong", subdivision: null },
            ],
          },
          {
            code2: "BG",
            code3: "BGR",
            name: "Bulgaria",
            capital: "Sofia",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "01", name: "Blagoevgrad", subdivision: null },
              { code: "02", name: "Burgas", subdivision: null },
              { code: "08", name: "Dobrich", subdivision: null },
              { code: "07", name: "Gabrovo", subdivision: null },
              { code: "26", name: "Haskovo", subdivision: null },
              { code: "09", name: "Kardzhali", subdivision: null },
              { code: "10", name: "Kyustendil", subdivision: null },
              { code: "11", name: "Lovech", subdivision: null },
              { code: "12", name: "Montana", subdivision: null },
              { code: "13", name: "Pazardzhik", subdivision: null },
              { code: "14", name: "Pernik", subdivision: null },
              { code: "15", name: "Pleven", subdivision: null },
              { code: "16", name: "Plovdiv", subdivision: null },
              { code: "17", name: "Razgrad", subdivision: null },
              { code: "18", name: "Ruse", subdivision: null },
              { code: "27", name: "Shumen", subdivision: null },
              { code: "19", name: "Silistra", subdivision: null },
              { code: "20", name: "Sliven", subdivision: null },
              { code: "21", name: "Smolyan", subdivision: null },
              { code: "23", name: "Sofia", subdivision: null },
              { code: "22", name: "Sofia-Grad", subdivision: null },
              { code: "24", name: "Stara Zagora", subdivision: null },
              { code: "25", name: "Targovishte", subdivision: null },
              { code: "03", name: "Varna", subdivision: null },
              { code: "04", name: "Veliko Tarnovo", subdivision: null },
              { code: "05", name: "Vidin", subdivision: null },
              { code: "06", name: "Vratsa", subdivision: null },
              { code: "28", name: "Yambol", subdivision: null },
            ],
          },
          {
            code2: "BF",
            code3: "BFA",
            name: "Burkina Faso",
            capital: "Ouagadougou",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "01", name: "Boucle du Mouhoun", subdivision: null },
              { code: "02", name: "Cascades", subdivision: null },
              { code: "03", name: "Centre", subdivision: null },
              { code: "04", name: "Centre-Est", subdivision: null },
              { code: "05", name: "Centre-Nord", subdivision: null },
              { code: "06", name: "Centre-Ouest", subdivision: null },
              { code: "07", name: "Centre-Sud", subdivision: null },
              { code: "08", name: "Est", subdivision: null },
              { code: "09", name: "Hauts-Bassins", subdivision: null },
              { code: "10", name: "Nord", subdivision: null },
              { code: "11", name: "Plateau-Central", subdivision: null },
              { code: "12", name: "Sahel", subdivision: null },
              { code: "13", name: "Sud-Ouest", subdivision: null },
            ],
          },
          {
            code2: "BI",
            code3: "BDI",
            name: "Burundi",
            capital: "Bujumbura",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "BB", name: "Bubanza", subdivision: null },
              { code: "BM", name: "Bujumbura Mairie", subdivision: null },
              { code: "BL", name: "Bujumbura Rural", subdivision: null },
              { code: "BR", name: "Bururi", subdivision: null },
              { code: "CA", name: "Cankuzo", subdivision: null },
              { code: "CI", name: "Cibitoke", subdivision: null },
              { code: "GI", name: "Gitega", subdivision: null },
              { code: "KR", name: "Karuzi", subdivision: null },
              { code: "KY", name: "Kayanza", subdivision: null },
              { code: "KI", name: "Kirundo", subdivision: null },
              { code: "MA", name: "Makamba", subdivision: null },
              { code: "MU", name: "Muramvya", subdivision: null },
              { code: "MY", name: "Muyinga", subdivision: null },
              { code: "MW", name: "Mwaro", subdivision: null },
              { code: "NG", name: "Ngozi", subdivision: null },
              { code: "RT", name: "Rutana", subdivision: null },
              { code: "RY", name: "Ruyigi", subdivision: null },
            ],
          },
          {
            code2: "KH",
            code3: "KHM",
            name: "Cambodia",
            capital: "Phnom Penh",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "2", name: "Baat Dambang", subdivision: null },
              { code: "1", name: "Banteay Mean Chey", subdivision: null },
              { code: "3", name: "Kampong Chaam", subdivision: null },
              { code: "4", name: "Kampong Chhnang", subdivision: null },
              { code: "5", name: "Kampong Spueu", subdivision: null },
              { code: "6", name: "Kampong Thum", subdivision: null },
              { code: "7", name: "Kampot", subdivision: null },
              { code: "8", name: "Kandaal", subdivision: null },
              { code: "9", name: "Kaoh Kong", subdivision: null },
              { code: "10", name: "Kracheh", subdivision: null },
              { code: "23", name: "Krong Kaeb", subdivision: null },
              { code: "24", name: "Krong Pailin", subdivision: null },
              { code: "18", name: "Krong Preah Sihanouk", subdivision: null },
              { code: "11", name: "Mondol Kiri", subdivision: null },
              { code: "22", name: "Otdar Mean Chey", subdivision: null },
              { code: "12", name: "Phnom Penh", subdivision: null },
              { code: "15", name: "Pousaat", subdivision: null },
              { code: "13", name: "Preah Vihear", subdivision: null },
              { code: "14", name: "Prey Veaeng", subdivision: null },
              { code: "16", name: "Rotanak Kiri", subdivision: null },
              { code: "17", name: "Siem Reab", subdivision: null },
              { code: "19", name: "Stueng Traeng", subdivision: null },
              { code: "20", name: "Svaay Rieng", subdivision: null },
              { code: "21", name: "Taakaev", subdivision: null },
            ],
          },
          {
            code2: "CM",
            code3: "CMR",
            name: "Cameroon",
            capital: "Yaound\xe9",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "AD", name: "Adamaoua", subdivision: null },
              { code: "CE", name: "Centre", subdivision: null },
              { code: "ES", name: "East", subdivision: null },
              { code: "EN", name: "Far North", subdivision: null },
              { code: "LT", name: "Littoral", subdivision: null },
              { code: "NO", name: "North", subdivision: null },
              { code: "NW", name: "North-West", subdivision: null },
              { code: "SU", name: "South", subdivision: null },
              { code: "SW", name: "South-West", subdivision: null },
              { code: "OU", name: "West", subdivision: null },
            ],
          },
          {
            code2: "CA",
            code3: "CAN",
            name: "Canada",
            capital: "Ottawa",
            region: "North America",
            subregion: "Northern America",
            states: [
              { code: "AB", name: "Alberta", subdivision: "province" },
              { code: "BC", name: "British Columbia", subdivision: "province" },
              { code: "MB", name: "Manitoba", subdivision: "province" },
              { code: "NB", name: "New Brunswick", subdivision: "province" },
              {
                code: "NL",
                name: "Newfoundland and Labrador",
                subdivision: "province",
              },
              { code: "NS", name: "Nova Scotia", subdivision: "province" },
              { code: "ON", name: "Ontario", subdivision: "province" },
              {
                code: "PE",
                name: "Prince Edward Island",
                subdivision: "province",
              },
              { code: "QC", name: "Quebec", subdivision: "province" },
              { code: "SK", name: "Saskatchewan", subdivision: "province" },
              {
                code: "NT",
                name: "Northwest Territories",
                subdivision: "territory",
              },
              { code: "NU", name: "Nunavut", subdivision: "territory" },
              { code: "YT", name: "Yukon", subdivision: "territory" },
            ],
          },
          {
            code2: "CV",
            code3: "CPV",
            name: "Cape Verde",
            capital: "Praia",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "B", name: "Ilhas de Barlavento", subdivision: null },
              { code: "S", name: "Ilhas de Sotavento", subdivision: null },
            ],
          },
          {
            code2: "KY",
            code3: "CYM",
            name: "Cayman Islands",
            capital: "George Town",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "CF",
            code3: "CAF",
            name: "Central African Republic",
            capital: "Bangui",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "BB", name: "Bamingui-Bangoran", subdivision: null },
              { code: "BGF", name: "Bangui", subdivision: null },
              { code: "BK", name: "Basse-Kotto", subdivision: null },
              { code: "KB", name: "Gribingui", subdivision: null },
              { code: "HM", name: "Haut-Mbomou", subdivision: null },
              { code: "HK", name: "Haute-Kotto", subdivision: null },
              {
                code: "HS",
                name: "Haute-Sangha / Mamb\xe9r\xe9-Kad\xe9\xef",
                subdivision: null,
              },
              { code: "KG", name: "K\xe9mo-Gribingui", subdivision: null },
              { code: "LB", name: "Lobaye", subdivision: null },
              { code: "MB", name: "Mbomou", subdivision: null },
              { code: "NM", name: "Nana-Mamb\xe9r\xe9", subdivision: null },
              { code: "MP", name: "Ombella-Mpoko", subdivision: null },
              { code: "UK", name: "Ouaka", subdivision: null },
              { code: "AC", name: "Ouham", subdivision: null },
              { code: "OP", name: "Ouham-Pend\xe9", subdivision: null },
              { code: "SE", name: "Sangha", subdivision: null },
              { code: "VK", name: "Vakaga", subdivision: null },
            ],
          },
          {
            code2: "TD",
            code3: "TCD",
            name: "Chad",
            capital: "N'Djamena",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "BA", name: "Al Ba\u1e6d\u1e29ah", subdivision: null },
              { code: "LC", name: "Al Bu\u1e29ayrah", subdivision: null },
              {
                code: "BG",
                name: "Ba\u1e29r al Ghaz\u0101l",
                subdivision: null,
              },
              { code: "BO", name: "B\u016brk\u016b", subdivision: null },
              { code: "EN", name: "Inn\u012bd\u012b", subdivision: null },
              { code: "KA", name: "K\u0101nim", subdivision: null },
              {
                code: "LO",
                name: "L\u016bq\u016bn al Gharb\u012b",
                subdivision: null,
              },
              {
                code: "LR",
                name: "L\u016bq\u016bn ash Sharq\u012b",
                subdivision: null,
              },
              {
                code: "ND",
                name: "Mad\u012bnat Injam\u012bn\u0101",
                subdivision: null,
              },
              { code: "MA", name: "M\u0101nd\u016bl", subdivision: null },
              {
                code: "MO",
                name: "M\u0101y\u016b K\u012bbb\u012b al Gharb\u012b",
                subdivision: null,
              },
              {
                code: "ME",
                name: "M\u0101y\u016b K\u012bbb\u012b ash Sharq\u012b",
                subdivision: null,
              },
              { code: "GR", name: "Q\u012br\u0101", subdivision: null },
              { code: "SA", name: "Sal\u0101m\u0101t", subdivision: null },
              {
                code: "CB",
                name: "Sh\u0101r\u012b B\u0101qirm\u012b",
                subdivision: null,
              },
              {
                code: "MC",
                name: "Sh\u0101r\u012b al Awsa\u1e6d",
                subdivision: null,
              },
              { code: "SI", name: "S\u012bl\u0101", subdivision: null },
              { code: "TI", name: "Tibast\u012b", subdivision: null },
              { code: "TA", name: "T\u0101njil\u012b", subdivision: null },
              { code: "OD", name: "Wadd\u0101y", subdivision: null },
              {
                code: "WF",
                name: "W\u0101d\u012b F\u012br\u0101",
                subdivision: null,
              },
              { code: "HL", name: "\u1e24ajjar Lam\u012bs", subdivision: null },
            ],
          },
          {
            code2: "CL",
            code3: "CHL",
            name: "Chile",
            capital: "Santiago",
            region: "South America",
            subregion: "South America",
            states: [
              {
                code: "AI",
                name: "Ais\xe9n del General Carlos Iba\xf1ez del Campo",
                subdivision: null,
              },
              { code: "AN", name: "Antofagasta", subdivision: null },
              { code: "AR", name: "Araucan\xeda", subdivision: null },
              { code: "AP", name: "Arica y Parinacota", subdivision: null },
              { code: "AT", name: "Atacama", subdivision: null },
              { code: "BI", name: "B\xedo-B\xedo", subdivision: null },
              { code: "CO", name: "Coquimbo", subdivision: null },
              {
                code: "LI",
                name: "Libertador General Bernardo O'Higgins",
                subdivision: null,
              },
              { code: "LL", name: "Los Lagos", subdivision: null },
              { code: "LR", name: "Los R\xedos", subdivision: null },
              { code: "MA", name: "Magallanes", subdivision: null },
              { code: "ML", name: "Maule", subdivision: null },
              {
                code: "RM",
                name: "Regi\xf3n Metropolitana de Santiago",
                subdivision: null,
              },
              { code: "TA", name: "Tarapac\xe1", subdivision: null },
              { code: "VS", name: "Valpara\xedso", subdivision: null },
            ],
          },
          {
            code2: "CN",
            code3: "CHN",
            name: "China",
            capital: "Beijing",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [
              { code: "45", name: "Guangxi", subdivision: "Autonomous region" },
              {
                code: "15",
                name: "Nei Mongol",
                subdivision: "Autonomous region",
              },
              { code: "64", name: "Ningxia", subdivision: "Autonomous region" },
              {
                code: "65",
                name: "Xinjiang",
                subdivision: "Autonomous region",
              },
              { code: "54", name: "Xizang", subdivision: "Autonomous region" },
              { code: "11", name: "Beijing", subdivision: "Municipality" },
              { code: "50", name: "Chongqing", subdivision: "Municipality" },
              { code: "31", name: "Shanghai", subdivision: "Municipality" },
              { code: "12", name: "Tianjin", subdivision: "Municipality" },
              { code: "34", name: "Anhui", subdivision: "Province" },
              { code: "35", name: "Fujian", subdivision: "Province" },
              { code: "62", name: "Gansu", subdivision: "Province" },
              { code: "44", name: "Guangdong", subdivision: "Province" },
              { code: "52", name: "Guizhou", subdivision: "Province" },
              { code: "46", name: "Hainan", subdivision: "Province" },
              { code: "13", name: "Hebei", subdivision: "Province" },
              { code: "23", name: "Heilongjiang", subdivision: "Province" },
              { code: "41", name: "Henan", subdivision: "Province" },
              { code: "42", name: "Hubei", subdivision: "Province" },
              { code: "43", name: "Hunan", subdivision: "Province" },
              { code: "32", name: "Jiangsu", subdivision: "Province" },
              { code: "36", name: "Jiangxi", subdivision: "Province" },
              { code: "22", name: "Jilin", subdivision: "Province" },
              { code: "21", name: "Liaoning", subdivision: "Province" },
              { code: "63", name: "Qinghai", subdivision: "Province" },
              { code: "61", name: "Shaanxi", subdivision: "Province" },
              { code: "37", name: "Shandong", subdivision: "Province" },
              { code: "14", name: "Shanxi", subdivision: "Province" },
              { code: "51", name: "Sichuan", subdivision: "Province" },
              { code: "71", name: "Taiwan", subdivision: "Province" },
              { code: "53", name: "Yunnan", subdivision: "Province" },
              { code: "33", name: "Zhejiang", subdivision: "Province" },
              {
                code: "91",
                name: "Hong Kong",
                subdivision: "Special administrative region",
              },
              {
                code: "92",
                name: "Macao",
                subdivision: "Special administrative region",
              },
              {
                code: "",
                name: "Hong Kong Island",
                subdivision: "Special administrative region",
              },
              {
                code: "KOWLOON",
                name: "Kowloon",
                subdivision: "Special administrative region",
              },
              {
                code: "NEW TERRITORIES",
                name: "New Territories",
                subdivision: "Special administrative region",
              },
            ],
          },
          {
            code2: "CX",
            code3: "CXR",
            name: "Christmas Island",
            capital: "Flying Fish Cove",
            region: "Oceania",
            subregion: "Australia and New Zealand",
            states: [],
          },
          {
            code2: "CC",
            code3: "CCK",
            name: "Cocos (Keeling) Islands",
            capital: "West Island",
            region: "Oceania",
            subregion: "Australia and New Zealand",
            states: [],
          },
          {
            code2: "CO",
            code3: "COL",
            name: "Colombia",
            capital: "Bogot\xe1",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "AMA", name: "Amazonas", subdivision: null },
              { code: "ANT", name: "Antioquia", subdivision: null },
              { code: "ARA", name: "Arauca", subdivision: null },
              { code: "ATL", name: "Atl\xe1ntico", subdivision: null },
              { code: "BOL", name: "Bol\xedvar", subdivision: null },
              { code: "BOY", name: "Boyac\xe1", subdivision: null },
              { code: "CAL", name: "Caldas", subdivision: null },
              { code: "CAQ", name: "Caquet\xe1", subdivision: null },
              { code: "CAS", name: "Casanare", subdivision: null },
              { code: "CAU", name: "Cauca", subdivision: null },
              { code: "CES", name: "Cesar", subdivision: null },
              { code: "CHO", name: "Choc\xf3", subdivision: null },
              { code: "CUN", name: "Cundinamarca", subdivision: null },
              { code: "COR", name: "C\xf3rdoba", subdivision: null },
              {
                code: "DC",
                name: "Distrito Capital de Bogot\xe1",
                subdivision: null,
              },
              { code: "GUA", name: "Guain\xeda", subdivision: null },
              { code: "GUV", name: "Guaviare", subdivision: null },
              { code: "HUI", name: "Huila", subdivision: null },
              { code: "LAG", name: "La Guajira", subdivision: null },
              { code: "MAG", name: "Magdalena", subdivision: null },
              { code: "MET", name: "Meta", subdivision: null },
              { code: "NAR", name: "Nari\xf1o", subdivision: null },
              { code: "NSA", name: "Norte de Santander", subdivision: null },
              { code: "PUT", name: "Putumayo", subdivision: null },
              { code: "QUI", name: "Quind\xedo", subdivision: null },
              { code: "RIS", name: "Risaralda", subdivision: null },
              {
                code: "SAP",
                name: "San Andr\xe9s, Providencia y Santa Catalina",
                subdivision: null,
              },
              { code: "SAN", name: "Santander", subdivision: null },
              { code: "SUC", name: "Sucre", subdivision: null },
              { code: "TOL", name: "Tolima", subdivision: null },
              { code: "VAC", name: "Valle del Cauca", subdivision: null },
              { code: "VAU", name: "Vaup\xe9s", subdivision: null },
              { code: "VID", name: "Vichada", subdivision: null },
            ],
          },
          {
            code2: "KM",
            code3: "COM",
            name: "Comoros",
            capital: "Moroni",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "A", name: "Anjouan", subdivision: null },
              { code: "G", name: "Grande Comore", subdivision: null },
              { code: "M", name: "Moh\xe9li", subdivision: null },
            ],
          },
          {
            code2: "CG",
            code3: "COG",
            name: "Republic of the Congo",
            capital: "Brazzaville",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "11", name: "Bouenza", subdivision: null },
              { code: "BZV", name: "Brazzaville", subdivision: null },
              { code: "8", name: "Cuvette", subdivision: null },
              { code: "15", name: "Cuvette-Ouest", subdivision: null },
              { code: "5", name: "Kouilou", subdivision: null },
              { code: "7", name: "Likouala", subdivision: null },
              { code: "2", name: "L\xe9koumou", subdivision: null },
              { code: "9", name: "Niari", subdivision: null },
              { code: "14", name: "Plateaux", subdivision: null },
              { code: "16", name: "Pointe-Noire", subdivision: null },
              { code: "12", name: "Pool", subdivision: null },
              { code: "13", name: "Sangha", subdivision: null },
            ],
          },
          {
            code2: "CD",
            code3: "COD",
            name: "Democratic Republic of the Congo",
            capital: "Kinshasa",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "BN", name: "Bandundu", subdivision: null },
              { code: "BC", name: "Bas-Congo", subdivision: null },
              { code: "KW", name: "Kasai-Occidental", subdivision: null },
              { code: "KE", name: "Kasai-Oriental", subdivision: null },
              { code: "KA", name: "Katanga", subdivision: null },
              { code: "KN", name: "Kinshasa", subdivision: null },
              { code: "MA", name: "Maniema", subdivision: null },
              { code: "NK", name: "Nord-Kivu", subdivision: null },
              { code: "OR", name: "Orientale", subdivision: null },
              { code: "SK", name: "Sud-Kivu", subdivision: null },
              { code: "EQ", name: "\xc9quateur", subdivision: null },
            ],
          },
          {
            code2: "CK",
            code3: "COK",
            name: "Cook Islands",
            capital: "Avarua",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "CR",
            code3: "CRI",
            name: "Costa Rica",
            capital: "San Jos\xe9",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "A", name: "Alajuela", subdivision: null },
              { code: "C", name: "Cartago", subdivision: null },
              { code: "G", name: "Guanacaste", subdivision: null },
              { code: "H", name: "Heredia", subdivision: null },
              { code: "L", name: "Lim\xf3n", subdivision: null },
              { code: "P", name: "Puntarenas", subdivision: null },
              { code: "SJ", name: "San Jos\xe9", subdivision: null },
            ],
          },
          {
            code2: "HR",
            code3: "HRV",
            name: "Croatia",
            capital: "Zagreb",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              {
                code: "07",
                name: "Bjelovarsko-bilogorska \u017eupanija",
                subdivision: null,
              },
              {
                code: "12",
                name: "Brodsko-posavska \u017eupanija",
                subdivision: null,
              },
              {
                code: "19",
                name: "Dubrova\u010dko-neretvanska \u017eupanija",
                subdivision: null,
              },
              { code: "21", name: "Grad Zagreb", subdivision: null },
              { code: "18", name: "Istarska \u017eupanija", subdivision: null },
              {
                code: "04",
                name: "Karlova\u010dka \u017eupanija",
                subdivision: null,
              },
              {
                code: "06",
                name: "Koprivni\u010dko-kri\u017eeva\u010dka \u017eupanija",
                subdivision: null,
              },
              {
                code: "02",
                name: "Krapinsko-zagorska \u017eupanija",
                subdivision: null,
              },
              {
                code: "09",
                name: "Li\u010dko-senjska \u017eupanija",
                subdivision: null,
              },
              {
                code: "20",
                name: "Me\u0111imurska \u017eupanija",
                subdivision: null,
              },
              {
                code: "14",
                name: "Osje\u010dko-baranjska \u017eupanija",
                subdivision: null,
              },
              {
                code: "11",
                name: "Po\u017ee\u0161ko-slavonska \u017eupanija",
                subdivision: null,
              },
              {
                code: "08",
                name: "Primorsko-goranska \u017eupanija",
                subdivision: null,
              },
              {
                code: "03",
                name: "Sisa\u010dko-moslava\u010dka \u017eupanija",
                subdivision: null,
              },
              {
                code: "17",
                name: "Splitsko-dalmatinska \u017eupanija",
                subdivision: null,
              },
              {
                code: "05",
                name: "Vara\u017edinska \u017eupanija",
                subdivision: null,
              },
              {
                code: "10",
                name: "Viroviti\u010dko-podravska \u017eupanija",
                subdivision: null,
              },
              {
                code: "16",
                name: "Vukovarsko-srijemska \u017eupanija",
                subdivision: null,
              },
              { code: "13", name: "Zadarska \u017eupanija", subdivision: null },
              {
                code: "01",
                name: "Zagreba\u010dka \u017eupanija",
                subdivision: null,
              },
              {
                code: "15",
                name: "\u0160ibensko-kninska \u017eupanija",
                subdivision: null,
              },
            ],
          },
          {
            code2: "CU",
            code3: "CUB",
            name: "Cuba",
            capital: "Havana",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "15", name: "Artemisa", subdivision: null },
              { code: "09", name: "Camag\xfcey", subdivision: null },
              { code: "08", name: "Ciego de \xc1vila", subdivision: null },
              { code: "06", name: "Cienfuegos", subdivision: null },
              { code: "12", name: "Granma", subdivision: null },
              { code: "14", name: "Guant\xe1namo", subdivision: null },
              { code: "11", name: "Holgu\xedn", subdivision: null },
              { code: "99", name: "Isla de la Juventud", subdivision: null },
              { code: "03", name: "La Habana", subdivision: null },
              { code: "10", name: "Las Tunas", subdivision: null },
              { code: "04", name: "Matanzas", subdivision: null },
              { code: "16", name: "Mayabeque", subdivision: null },
              { code: "01", name: "Pinar del R\xedo", subdivision: null },
              { code: "07", name: "Sancti Sp\xedritus", subdivision: null },
              { code: "13", name: "Santiago de Cuba", subdivision: null },
              { code: "05", name: "Villa Clara", subdivision: null },
            ],
          },
          {
            code2: "CW",
            code3: "CUW",
            name: "Cura\xe7ao",
            capital: "Willemstad",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "CY",
            code3: "CYP",
            name: "Cyprus",
            capital: "Nicosia",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "04", name: "Ammochostos", subdivision: null },
              { code: "06", name: "Keryneia", subdivision: null },
              { code: "03", name: "Larnaka", subdivision: null },
              { code: "01", name: "Lefkosia", subdivision: null },
              { code: "02", name: "Lemesos", subdivision: null },
              { code: "05", name: "Pafos", subdivision: null },
            ],
          },
          {
            code2: "CZ",
            code3: "CZE",
            name: "Czech Republic",
            capital: "Prague",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "JM", name: "Jihomoravsk\xfd kraj", subdivision: null },
              { code: "JC", name: "Jiho\u010desk\xfd kraj", subdivision: null },
              { code: "KA", name: "Karlovarsk\xfd kraj", subdivision: null },
              {
                code: "KR",
                name: "Kr\xe1lov\xe9hradeck\xfd kraj",
                subdivision: null,
              },
              { code: "LI", name: "Libereck\xfd kraj", subdivision: null },
              {
                code: "MO",
                name: "Moravskoslezsk\xfd kraj",
                subdivision: null,
              },
              { code: "OL", name: "Olomouck\xfd kraj", subdivision: null },
              { code: "PA", name: "Pardubick\xfd kraj", subdivision: null },
              { code: "PL", name: "Plze\u0148sk\xfd kraj", subdivision: null },
              {
                code: "PR",
                name: "Praha, hlavn\xed m\u011bsto",
                subdivision: null,
              },
              {
                code: "ST",
                name: "St\u0159edo\u010desk\xfd kraj",
                subdivision: null,
              },
              { code: "VY", name: "Vyso\u010dina", subdivision: null },
              { code: "ZL", name: "Zl\xednsk\xfd kraj", subdivision: null },
              { code: "US", name: "\xdasteck\xfd kraj", subdivision: null },
            ],
          },
          {
            code2: "DK",
            code3: "DNK",
            name: "Denmark",
            capital: "Copenhagen",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "84", name: "Hovedstaden", subdivision: null },
              { code: "82", name: "Midtjylland", subdivision: null },
              { code: "81", name: "Nordjylland", subdivision: null },
              { code: "85", name: "Sj\xe6lland", subdivision: null },
              { code: "83", name: "Syddanmark", subdivision: null },
            ],
          },
          {
            code2: "DJ",
            code3: "DJI",
            name: "Djibouti",
            capital: "Djibouti",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "AS", name: "Ali Sabieh", subdivision: null },
              { code: "AR", name: "Arta", subdivision: null },
              { code: "DI", name: "Dikhil", subdivision: null },
              { code: "DJ", name: "Djibouti", subdivision: null },
              { code: "OB", name: "Obock", subdivision: null },
              { code: "TA", name: "Tadjourah", subdivision: null },
            ],
          },
          {
            code2: "DM",
            code3: "DMA",
            name: "Dominica",
            capital: "Roseau",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "02", name: "Saint Andrew", subdivision: null },
              { code: "03", name: "Saint David", subdivision: null },
              { code: "04", name: "Saint George", subdivision: null },
              { code: "05", name: "Saint John", subdivision: null },
              { code: "06", name: "Saint Joseph", subdivision: null },
              { code: "07", name: "Saint Luke", subdivision: null },
              { code: "08", name: "Saint Mark", subdivision: null },
              { code: "09", name: "Saint Patrick", subdivision: null },
              { code: "10", name: "Saint Paul", subdivision: null },
              { code: "11", name: "Saint Peter", subdivision: null },
            ],
          },
          {
            code2: "DO",
            code3: "DOM",
            name: "Dominican Republic",
            capital: "Santo Domingo",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "33", name: "Cibao Nordeste", subdivision: null },
              { code: "34", name: "Cibao Noroeste", subdivision: null },
              { code: "35", name: "Cibao Norte", subdivision: null },
              { code: "36", name: "Cibao Sur", subdivision: null },
              { code: "37", name: "El Valle", subdivision: null },
              { code: "38", name: "Enriquillo", subdivision: null },
              { code: "39", name: "Higuamo", subdivision: null },
              { code: "40", name: "Ozama", subdivision: null },
              { code: "41", name: "Valdesia", subdivision: null },
              { code: "42", name: "Yuma", subdivision: null },
            ],
          },
          {
            code2: "EC",
            code3: "ECU",
            name: "Ecuador",
            capital: "Quito",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "A", name: "Azuay", subdivision: null },
              { code: "B", name: "Bol\xedvar", subdivision: null },
              { code: "C", name: "Carchi", subdivision: null },
              { code: "F", name: "Ca\xf1ar", subdivision: null },
              { code: "H", name: "Chimborazo", subdivision: null },
              { code: "X", name: "Cotopaxi", subdivision: null },
              { code: "O", name: "El Oro", subdivision: null },
              { code: "E", name: "Esmeraldas", subdivision: null },
              { code: "W", name: "Gal\xe1pagos", subdivision: null },
              { code: "G", name: "Guayas", subdivision: null },
              { code: "I", name: "Imbabura", subdivision: null },
              { code: "L", name: "Loja", subdivision: null },
              { code: "R", name: "Los R\xedos", subdivision: null },
              { code: "M", name: "Manab\xed", subdivision: null },
              { code: "S", name: "Morona-Santiago", subdivision: null },
              { code: "N", name: "Napo", subdivision: null },
              { code: "D", name: "Orellana", subdivision: null },
              { code: "Y", name: "Pastaza", subdivision: null },
              { code: "P", name: "Pichincha", subdivision: null },
              { code: "SE", name: "Santa Elena", subdivision: null },
              {
                code: "SD",
                name: "Santo Domingo de los Ts\xe1chilas",
                subdivision: null,
              },
              { code: "U", name: "Sucumb\xedos", subdivision: null },
              { code: "T", name: "Tungurahua", subdivision: null },
              { code: "Z", name: "Zamora-Chinchipe", subdivision: null },
            ],
          },
          {
            code2: "EG",
            code3: "EGY",
            name: "Egypt",
            capital: "Cairo",
            region: "Africa",
            subregion: "Northern Africa",
            states: [
              { code: "DK", name: "Ad Daqahl\u012byah", subdivision: null },
              {
                code: "BA",
                name: "Al Ba\u1e29r al A\u1e29mar",
                subdivision: null,
              },
              { code: "BH", name: "Al Bu\u1e29ayrah", subdivision: null },
              { code: "FYM", name: "Al Fayy\u016bm", subdivision: null },
              { code: "GH", name: "Al Gharb\u012byah", subdivision: null },
              { code: "ALX", name: "Al Iskandar\u012byah", subdivision: null },
              {
                code: "IS",
                name: "Al Ism\u0101\u0670\u012bl\u012byah",
                subdivision: null,
              },
              { code: "GZ", name: "Al J\u012bzah", subdivision: null },
              { code: "MN", name: "Al Miny\u0101", subdivision: null },
              {
                code: "MNF",
                name: "Al Min\u016bf\u012byah",
                subdivision: null,
              },
              {
                code: "KB",
                name: "Al Qaly\u016bb\u012byah",
                subdivision: null,
              },
              { code: "C", name: "Al Q\u0101hirah", subdivision: null },
              { code: "LX", name: "Al Uq\u015fur", subdivision: null },
              {
                code: "WAD",
                name: "Al W\u0101d\u012b al Jad\u012bd",
                subdivision: null,
              },
              { code: "SUZ", name: "As Suways", subdivision: null },
              {
                code: "SU",
                name: "As S\u0101dis min Ukt\u016bbar",
                subdivision: null,
              },
              { code: "SHR", name: "Ash Sharq\u012byah", subdivision: null },
              { code: "ASN", name: "Asw\u0101n", subdivision: null },
              { code: "AST", name: "Asy\u016b\u0163", subdivision: null },
              { code: "BNS", name: "Ban\u012b Suwayf", subdivision: null },
              {
                code: "PTS",
                name: "B\u016br Sa\u0670\u012bd",
                subdivision: null,
              },
              { code: "DT", name: "Dumy\u0101\u0163", subdivision: null },
              {
                code: "JS",
                name: "Jan\u016bb S\u012bn\u0101'",
                subdivision: null,
              },
              { code: "KFS", name: "Kafr ash Shaykh", subdivision: null },
              { code: "MT", name: "Ma\u0163r\u016b\u1e29", subdivision: null },
              { code: "KN", name: "Qin\u0101", subdivision: null },
              {
                code: "SIN",
                name: "Sham\u0101l S\u012bn\u0101'",
                subdivision: null,
              },
              { code: "SHG", name: "S\u016bh\u0101j", subdivision: null },
              { code: "HU", name: "\u1e28ulw\u0101n", subdivision: null },
            ],
          },
          {
            code2: "SV",
            code3: "SLV",
            name: "El Salvador",
            capital: "San Salvador",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "AH", name: "Ahuachap\xe1n", subdivision: null },
              { code: "CA", name: "Caba\xf1as", subdivision: null },
              { code: "CH", name: "Chalatenango", subdivision: null },
              { code: "CU", name: "Cuscatl\xe1n", subdivision: null },
              { code: "LI", name: "La Libertad", subdivision: null },
              { code: "PA", name: "La Paz", subdivision: null },
              { code: "UN", name: "La Uni\xf3n", subdivision: null },
              { code: "MO", name: "Moraz\xe1n", subdivision: null },
              { code: "SM", name: "San Miguel", subdivision: null },
              { code: "SS", name: "San Salvador", subdivision: null },
              { code: "SV", name: "San Vicente", subdivision: null },
              { code: "SA", name: "Santa Ana", subdivision: null },
              { code: "SO", name: "Sonsonate", subdivision: null },
              { code: "US", name: "Usulut\xe1n", subdivision: null },
            ],
          },
          {
            code2: "GQ",
            code3: "GNQ",
            name: "Equatorial Guinea",
            capital: "Malabo",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "C", name: "Regi\xf3n Continental", subdivision: null },
              { code: "I", name: "Regi\xf3n Insular", subdivision: null },
            ],
          },
          {
            code2: "ER",
            code3: "ERI",
            name: "Eritrea",
            capital: "Asmara",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "MA", name: "Al Awsa\u0163", subdivision: null },
              { code: "DU", name: "Al Jan\u016bb\u0129", subdivision: null },
              { code: "AN", name: "Ansab\u0101", subdivision: null },
              {
                code: "DK",
                name: "Jan\u016bb\u012b al Ba\u1e29r\u012b al A\u1e29mar",
                subdivision: null,
              },
              { code: "GB", name: "Q\u0101sh-Barkah", subdivision: null },
              {
                code: "SK",
                name: "Shim\u0101l\u012b al Ba\u1e29r\u012b al A\u1e29mar",
                subdivision: null,
              },
            ],
          },
          {
            code2: "EE",
            code3: "EST",
            name: "Estonia",
            capital: "Tallinn",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "37", name: "Harjumaa", subdivision: null },
              { code: "39", name: "Hiiumaa", subdivision: null },
              { code: "44", name: "Ida-Virumaa", subdivision: null },
              { code: "51", name: "J\xe4rvamaa", subdivision: null },
              { code: "49", name: "J\xf5gevamaa", subdivision: null },
              { code: "59", name: "L\xe4\xe4ne-Virumaa", subdivision: null },
              { code: "57", name: "L\xe4\xe4nemaa", subdivision: null },
              { code: "67", name: "P\xe4rnumaa", subdivision: null },
              { code: "65", name: "P\xf5lvamaa", subdivision: null },
              { code: "70", name: "Raplamaa", subdivision: null },
              { code: "74", name: "Saaremaa", subdivision: null },
              { code: "78", name: "Tartumaa", subdivision: null },
              { code: "82", name: "Valgamaa", subdivision: null },
              { code: "84", name: "Viljandimaa", subdivision: null },
              { code: "86", name: "V\xf5rumaa", subdivision: null },
            ],
          },
          {
            code2: "ET",
            code3: "ETH",
            name: "Ethiopia",
            capital: "Addis Ababa",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "BE", name: "B\u012bnshangul Gumuz", subdivision: null },
              { code: "DD", name: "Dir\u0113 Dawa", subdivision: null },
              { code: "GA", name: "Gamb\u0113la Hizboch", subdivision: null },
              { code: "HA", name: "H\u0101rer\u012b Hizb", subdivision: null },
              { code: "OR", name: "Orom\u012bya", subdivision: null },
              { code: "SO", name: "Sumal\u0113", subdivision: null },
              { code: "TI", name: "Tigray", subdivision: null },
              {
                code: "SN",
                name: "YeDebub Bih\u0113roch Bih\u0113reseboch na Hizboch",
                subdivision: null,
              },
              {
                code: "AA",
                name: "\u0100d\u012bs \u0100beba",
                subdivision: null,
              },
              { code: "AF", name: "\u0100far", subdivision: null },
              { code: "AM", name: "\u0100mara", subdivision: null },
            ],
          },
          {
            code2: "FK",
            code3: "FLK",
            name: "Falkland Islands",
            capital: "Stanley",
            region: "South America",
            subregion: "South America",
            states: [],
          },
          {
            code2: "FO",
            code3: "FRO",
            name: "Faroe Islands",
            capital: "T\xf3rshavn",
            region: "Europe",
            subregion: "Northern Europe",
            states: [],
          },
          {
            code2: "FJ",
            code3: "FJI",
            name: "Fiji",
            capital: "Suva",
            region: "Oceania",
            subregion: "Melanesia",
            states: [
              { code: "C", name: "Central", subdivision: null },
              { code: "E", name: "Eastern", subdivision: null },
              { code: "N", name: "Northern", subdivision: null },
              { code: "R", name: "Rotuma", subdivision: null },
              { code: "W", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "FI",
            code3: "FIN",
            name: "Finland",
            capital: "Helsinki",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "01", name: "Ahvenanmaan maakunta", subdivision: null },
              { code: "02", name: "Etel\xe4-Karjala", subdivision: null },
              { code: "03", name: "Etel\xe4-Pohjanmaa", subdivision: null },
              { code: "04", name: "Etel\xe4-Savo", subdivision: null },
              { code: "05", name: "Kainuu", subdivision: null },
              { code: "06", name: "Kanta-H\xe4me", subdivision: null },
              { code: "07", name: "Keski-Pohjanmaa", subdivision: null },
              { code: "08", name: "Keski-Suomi", subdivision: null },
              { code: "09", name: "Kymenlaakso", subdivision: null },
              { code: "10", name: "Lappi", subdivision: null },
              { code: "11", name: "Pirkanmaa", subdivision: null },
              { code: "12", name: "Pohjanmaa", subdivision: null },
              { code: "13", name: "Pohjois-Karjala", subdivision: null },
              { code: "14", name: "Pohjois-Pohjanmaa", subdivision: null },
              { code: "15", name: "Pohjois-Savo", subdivision: null },
              { code: "16", name: "P\xe4ij\xe4t-H\xe4me", subdivision: null },
              { code: "17", name: "Satakunta", subdivision: null },
              { code: "18", name: "Uusimaa", subdivision: null },
              { code: "19", name: "Varsinais-Suomi", subdivision: null },
            ],
          },
          {
            code2: "FR",
            code3: "FRA",
            name: "France",
            capital: "Paris",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "A", name: "Alsace", subdivision: "Metropolitan region" },
              {
                code: "B",
                name: "Aquitaine",
                subdivision: "Metropolitan region",
              },
              {
                code: "C",
                name: "Auvergne",
                subdivision: "Metropolitan region",
              },
              {
                code: "E",
                name: "Brittany",
                subdivision: "Metropolitan region",
              },
              {
                code: "D",
                name: "Burgundy",
                subdivision: "Metropolitan region",
              },
              {
                code: "F",
                name: "Centre-Val de Loire",
                subdivision: "Metropolitan region",
              },
              {
                code: "G",
                name: "Champagne-Ardenne",
                subdivision: "Metropolitan region",
              },
              {
                code: "H",
                name: "Corsica",
                subdivision: "Metropolitan region",
              },
              {
                code: "I",
                name: "Franche-Comt\xe9",
                subdivision: "Metropolitan region",
              },
              {
                code: "K",
                name: "Languedoc-Roussillon",
                subdivision: "Metropolitan region",
              },
              {
                code: "L",
                name: "Limousin",
                subdivision: "Metropolitan region",
              },
              {
                code: "M",
                name: "Lorraine",
                subdivision: "Metropolitan region",
              },
              {
                code: "P",
                name: "Lower Normandy",
                subdivision: "Metropolitan region",
              },
              {
                code: "N",
                name: "Midi-Pyr\xe9n\xe9es",
                subdivision: "Metropolitan region",
              },
              {
                code: "O",
                name: "Nord-Pas-de-Calais",
                subdivision: "Metropolitan region",
              },
              {
                code: "R",
                name: "Pays de la Loire",
                subdivision: "Metropolitan region",
              },
              {
                code: "S",
                name: "Picardy",
                subdivision: "Metropolitan region",
              },
              {
                code: "T",
                name: "Poitou-Charentes",
                subdivision: "Metropolitan region",
              },
              {
                code: "U",
                name: "Provence-Alpes-C\xf4te d'Azur",
                subdivision: "Metropolitan region",
              },
              {
                code: "V",
                name: "Rh\xf4ne-Alpes",
                subdivision: "Metropolitan region",
              },
              {
                code: "Q",
                name: "Upper Normandy",
                subdivision: "Metropolitan region",
              },
              {
                code: "J",
                name: "\xcele-de-France",
                subdivision: "Metropolitan region",
              },
            ],
          },
          {
            code2: "GF",
            code3: "GUF",
            name: "French Guiana",
            capital: "Cayenne",
            region: "South America",
            subregion: "South America",
            states: [],
          },
          {
            code2: "PF",
            code3: "PYF",
            name: "French Polynesia",
            capital: "Papeet\u0113",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "TF",
            code3: "ATF",
            name: "French Southern and Antarctic Lands",
            capital: "Port-aux-Fran\xe7ais",
            region: "Africa",
            subregion: "Southern Africa",
            states: [],
          },
          {
            code2: "GA",
            code3: "GAB",
            name: "Gabon",
            capital: "Libreville",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "1", name: "Estuaire", subdivision: null },
              { code: "2", name: "Haut-Ogoou\xe9", subdivision: null },
              { code: "3", name: "Moyen-Ogoou\xe9", subdivision: null },
              { code: "4", name: "Ngouni\xe9", subdivision: null },
              { code: "5", name: "Nyanga", subdivision: null },
              { code: "6", name: "Ogoou\xe9-Ivindo", subdivision: null },
              { code: "7", name: "Ogoou\xe9-Lolo", subdivision: null },
              { code: "8", name: "Ogoou\xe9-Maritime", subdivision: null },
              { code: "9", name: "Woleu-Ntem", subdivision: null },
            ],
          },
          {
            code2: "GM",
            code3: "GMB",
            name: "The Gambia",
            capital: "Banjul",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "B", name: "Banjul", subdivision: null },
              { code: "M", name: "Central River", subdivision: null },
              { code: "L", name: "Lower River", subdivision: null },
              { code: "N", name: "North Bank", subdivision: null },
              { code: "U", name: "Upper River", subdivision: null },
              { code: "W", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "GE",
            code3: "GEO",
            name: "Georgia",
            capital: "Tbilisi",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AB", name: "Abkhazia", subdivision: null },
              { code: "AJ", name: "Ajaria", subdivision: null },
              { code: "GU", name: "Guria", subdivision: null },
              { code: "IM", name: "Imereti", subdivision: null },
              { code: "KA", name: "K'akheti", subdivision: null },
              { code: "KK", name: "Kvemo Kartli", subdivision: null },
              { code: "MM", name: "Mtskheta-Mtianeti", subdivision: null },
              {
                code: "RL",
                name: "Rach'a-Lechkhumi-Kvemo Svaneti",
                subdivision: null,
              },
              { code: "SZ", name: "Samegrelo-Zemo Svaneti", subdivision: null },
              { code: "SJ", name: "Samtskhe-Javakheti", subdivision: null },
              { code: "SK", name: "Shida Kartli", subdivision: null },
              { code: "TB", name: "Tbilisi", subdivision: null },
            ],
          },
          {
            code2: "DE",
            code3: "DEU",
            name: "Germany",
            capital: "Berlin",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "BW", name: "Baden-W\xfcrttemberg", subdivision: null },
              { code: "BY", name: "Bayern", subdivision: null },
              { code: "BE", name: "Berlin", subdivision: null },
              { code: "BB", name: "Brandenburg", subdivision: null },
              { code: "HB", name: "Bremen", subdivision: null },
              { code: "HH", name: "Hamburg", subdivision: null },
              { code: "HE", name: "Hessen", subdivision: null },
              { code: "MV", name: "Mecklenburg-Vorpommern", subdivision: null },
              { code: "NI", name: "Niedersachsen", subdivision: null },
              { code: "NW", name: "Nordrhein-Westfalen", subdivision: null },
              { code: "RP", name: "Rheinland-Pfalz", subdivision: null },
              { code: "SL", name: "Saarland", subdivision: null },
              { code: "SN", name: "Sachsen", subdivision: null },
              { code: "ST", name: "Sachsen-Anhalt", subdivision: null },
              { code: "SH", name: "Schleswig-Holstein", subdivision: null },
              { code: "TH", name: "Th\xfcringen", subdivision: null },
            ],
          },
          {
            code2: "GH",
            code3: "GHA",
            name: "Ghana",
            capital: "Accra",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "AH", name: "Ashanti", subdivision: null },
              { code: "BA", name: "Brong-Ahafo", subdivision: null },
              { code: "CP", name: "Central", subdivision: null },
              { code: "EP", name: "Eastern", subdivision: null },
              { code: "AA", name: "Greater Accra", subdivision: null },
              { code: "NP", name: "Northern", subdivision: null },
              { code: "UE", name: "Upper East", subdivision: null },
              { code: "UW", name: "Upper West", subdivision: null },
              { code: "TV", name: "Volta", subdivision: null },
              { code: "WP", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "GI",
            code3: "GIB",
            name: "Gibraltar",
            capital: "Gibraltar",
            region: "Europe",
            subregion: "Southern Europe",
            states: [],
          },
          {
            code2: "GR",
            code3: "GRC",
            name: "Greece",
            capital: "Athens",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              {
                code: "A",
                name: "Anatoliki Makedonia kai Thraki",
                subdivision: null,
              },
              { code: "I", name: "Attiki", subdivision: null },
              { code: "G", name: "Dytiki Ellada", subdivision: null },
              { code: "C", name: "Dytiki Makedonia", subdivision: null },
              { code: "F", name: "Ionia Nisia", subdivision: null },
              { code: "D", name: "Ipeiros", subdivision: null },
              { code: "B", name: "Kentriki Makedonia", subdivision: null },
              { code: "M", name: "Kriti", subdivision: null },
              { code: "L", name: "Notio Aigaio", subdivision: null },
              { code: "J", name: "Peloponnisos", subdivision: null },
              { code: "H", name: "Sterea Ellada", subdivision: null },
              { code: "E", name: "Thessalia", subdivision: null },
              { code: "K", name: "Voreio Aigaio", subdivision: null },
            ],
          },
          {
            code2: "GL",
            code3: "GRL",
            name: "Greenland",
            capital: "Nuuk",
            region: "North America",
            subregion: "Northern America",
            states: [
              { code: "KU", name: "Kommune Kujalleq", subdivision: null },
              {
                code: "SM",
                name: "Kommuneqarfik Sermersooq",
                subdivision: null,
              },
              { code: "QA", name: "Qaasuitsup Kommunia", subdivision: null },
              { code: "QE", name: "Qeqqata Kommunia", subdivision: null },
            ],
          },
          {
            code2: "GD",
            code3: "GRD",
            name: "Grenada",
            capital: "St. George's",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "01", name: "Saint Andrew", subdivision: null },
              { code: "02", name: "Saint David", subdivision: null },
              { code: "03", name: "Saint George", subdivision: null },
              { code: "04", name: "Saint John", subdivision: null },
              { code: "05", name: "Saint Mark", subdivision: null },
              { code: "06", name: "Saint Patrick", subdivision: null },
              {
                code: "10",
                name: "Southern Grenadine Islands",
                subdivision: null,
              },
            ],
          },
          {
            code2: "GP",
            code3: "GLP",
            name: "Guadeloupe",
            capital: "Basse-Terre",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "GU",
            code3: "GUM",
            name: "Guam",
            capital: "Hag\xe5t\xf1a",
            region: "Oceania",
            subregion: "Micronesia",
            states: [],
          },
          {
            code2: "GT",
            code3: "GTM",
            name: "Guatemala",
            capital: "Guatemala City",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "AV", name: "Alta Verapaz", subdivision: null },
              { code: "BV", name: "Baja Verapaz", subdivision: null },
              { code: "CM", name: "Chimaltenango", subdivision: null },
              { code: "CQ", name: "Chiquimula", subdivision: null },
              { code: "PR", name: "El Progreso", subdivision: null },
              { code: "ES", name: "Escuintla", subdivision: null },
              { code: "GU", name: "Guatemala", subdivision: null },
              { code: "HU", name: "Huehuetenango", subdivision: null },
              { code: "IZ", name: "Izabal", subdivision: null },
              { code: "JA", name: "Jalapa", subdivision: null },
              { code: "JU", name: "Jutiapa", subdivision: null },
              { code: "PE", name: "Pet\xe9n", subdivision: null },
              { code: "QZ", name: "Quetzaltenango", subdivision: null },
              { code: "QC", name: "Quich\xe9", subdivision: null },
              { code: "RE", name: "Retalhuleu", subdivision: null },
              { code: "SA", name: "Sacatep\xe9quez", subdivision: null },
              { code: "SM", name: "San Marcos", subdivision: null },
              { code: "SR", name: "Santa Rosa", subdivision: null },
              { code: "SO", name: "Solol\xe1", subdivision: null },
              { code: "SU", name: "Suchitep\xe9quez", subdivision: null },
              { code: "TO", name: "Totonicap\xe1n", subdivision: null },
              { code: "ZA", name: "Zacapa", subdivision: null },
            ],
          },
          {
            code2: "GG",
            code3: "GGY",
            name: "Guernsey",
            capital: "St. Peter Port",
            region: "Europe",
            subregion: "Northern Europe",
            states: [],
          },
          {
            code2: "GN",
            code3: "GIN",
            name: "Guinea",
            capital: "Conakry",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "B", name: "Bok\xe9", subdivision: null },
              { code: "C", name: "Conakry", subdivision: null },
              { code: "F", name: "Faranah", subdivision: null },
              { code: "K", name: "Kankan", subdivision: null },
              { code: "D", name: "Kindia", subdivision: null },
              { code: "L", name: "Lab\xe9", subdivision: null },
              { code: "M", name: "Mamou", subdivision: null },
              { code: "N", name: "Nz\xe9r\xe9kor\xe9", subdivision: null },
            ],
          },
          {
            code2: "GW",
            code3: "GNB",
            name: "Guinea-Bissau",
            capital: "Bissau",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "L", name: "Leste", subdivision: null },
              { code: "N", name: "Norte", subdivision: null },
              { code: "S", name: "Sul", subdivision: null },
            ],
          },
          {
            code2: "GY",
            code3: "GUY",
            name: "Guyana",
            capital: "Georgetown",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "BA", name: "Barima-Waini", subdivision: null },
              { code: "CU", name: "Cuyuni-Mazaruni", subdivision: null },
              { code: "DE", name: "Demerara-Mahaica", subdivision: null },
              { code: "EB", name: "East Berbice-Corentyne", subdivision: null },
              {
                code: "ES",
                name: "Essequibo Islands-West Demerara",
                subdivision: null,
              },
              { code: "MA", name: "Mahaica-Berbice", subdivision: null },
              { code: "PM", name: "Pomeroon-Supenaam", subdivision: null },
              { code: "PT", name: "Potaro-Siparuni", subdivision: null },
              { code: "UD", name: "Upper Demerara-Berbice", subdivision: null },
              {
                code: "UT",
                name: "Upper Takutu-Upper Essequibo",
                subdivision: null,
              },
            ],
          },
          {
            code2: "HT",
            code3: "HTI",
            name: "Haiti",
            capital: "Port-au-Prince",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "AR", name: "Artibonite", subdivision: null },
              { code: "CE", name: "Centre", subdivision: null },
              { code: "GA", name: "Grande-Anse", subdivision: null },
              { code: "NI", name: "Nippes", subdivision: null },
              { code: "ND", name: "Nord", subdivision: null },
              { code: "NE", name: "Nord-Est", subdivision: null },
              { code: "NO", name: "Nord-Ouest", subdivision: null },
              { code: "OU", name: "Ouest", subdivision: null },
              { code: "SD", name: "Sud", subdivision: null },
              { code: "SE", name: "Sud-Est", subdivision: null },
            ],
          },
          {
            code2: "HM",
            code3: "HMD",
            name: "Heard Island and McDonald Islands",
            capital: "",
            region: "",
            subregion: "",
            states: [],
          },
          {
            code2: "VA",
            code3: "VAT",
            name: "Holy See",
            capital: "Rome",
            region: "Europe",
            subregion: "Southern Europe",
            states: [],
          },
          {
            code2: "HN",
            code3: "HND",
            name: "Honduras",
            capital: "Tegucigalpa",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "AT", name: "Atl\xe1ntida", subdivision: null },
              { code: "CH", name: "Choluteca", subdivision: null },
              { code: "CL", name: "Col\xf3n", subdivision: null },
              { code: "CM", name: "Comayagua", subdivision: null },
              { code: "CP", name: "Cop\xe1n", subdivision: null },
              { code: "CR", name: "Cort\xe9s", subdivision: null },
              { code: "EP", name: "El Para\xedso", subdivision: null },
              { code: "FM", name: "Francisco Moraz\xe1n", subdivision: null },
              { code: "GD", name: "Gracias a Dios", subdivision: null },
              { code: "IN", name: "Intibuc\xe1", subdivision: null },
              { code: "IB", name: "Islas de la Bah\xeda", subdivision: null },
              { code: "LP", name: "La Paz", subdivision: null },
              { code: "LE", name: "Lempira", subdivision: null },
              { code: "OC", name: "Ocotepeque", subdivision: null },
              { code: "OL", name: "Olancho", subdivision: null },
              { code: "SB", name: "Santa B\xe1rbara", subdivision: null },
              { code: "VA", name: "Valle", subdivision: null },
              { code: "YO", name: "Yoro", subdivision: null },
            ],
          },
          {
            code2: "HK",
            code3: "HKG",
            name: "Hong Kong",
            capital: "City of Victoria",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [],
          },
          {
            code2: "HU",
            code3: "HUN",
            name: "Hungary",
            capital: "Budapest",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "BA", name: "Baranya", subdivision: null },
              {
                code: "BZ",
                name: "Borsod-Aba\xfaj-Zempl\xe9n",
                subdivision: null,
              },
              { code: "BU", name: "Budapest", subdivision: null },
              { code: "BK", name: "B\xe1cs-Kiskun", subdivision: null },
              { code: "BE", name: "B\xe9k\xe9s", subdivision: null },
              { code: "BC", name: "B\xe9k\xe9scsaba", subdivision: null },
              { code: "CS", name: "Csongr\xe1d", subdivision: null },
              { code: "DE", name: "Debrecen", subdivision: null },
              { code: "DU", name: "Duna\xfajv\xe1ros", subdivision: null },
              { code: "EG", name: "Eger", subdivision: null },
              { code: "FE", name: "Fej\xe9r", subdivision: null },
              { code: "GY", name: "Gy\u0151r", subdivision: null },
              { code: "GS", name: "Gy\u0151r-Moson-Sopron", subdivision: null },
              { code: "HB", name: "Hajd\xfa-Bihar", subdivision: null },
              { code: "HE", name: "Heves", subdivision: null },
              {
                code: "HV",
                name: "H\xf3dmez\u0151v\xe1s\xe1rhely",
                subdivision: null,
              },
              {
                code: "JN",
                name: "J\xe1sz-Nagykun-Szolnok",
                subdivision: null,
              },
              { code: "KV", name: "Kaposv\xe1r", subdivision: null },
              { code: "KM", name: "Kecskem\xe9t", subdivision: null },
              { code: "KE", name: "Kom\xe1rom-Esztergom", subdivision: null },
              { code: "MI", name: "Miskolc", subdivision: null },
              { code: "NK", name: "Nagykanizsa", subdivision: null },
              { code: "NY", name: "Ny\xedregyh\xe1za", subdivision: null },
              { code: "NO", name: "N\xf3gr\xe1d", subdivision: null },
              { code: "PE", name: "Pest", subdivision: null },
              { code: "PS", name: "P\xe9cs", subdivision: null },
              { code: "ST", name: "Salg\xf3tarj\xe1n", subdivision: null },
              { code: "SO", name: "Somogy", subdivision: null },
              { code: "SN", name: "Sopron", subdivision: null },
              {
                code: "SZ",
                name: "Szabolcs-Szatm\xe1r-Bereg",
                subdivision: null,
              },
              { code: "SD", name: "Szeged", subdivision: null },
              { code: "SS", name: "Szeksz\xe1rd", subdivision: null },
              { code: "SK", name: "Szolnok", subdivision: null },
              { code: "SH", name: "Szombathely", subdivision: null },
              {
                code: "SF",
                name: "Sz\xe9kesfeh\xe9rv\xe1r",
                subdivision: null,
              },
              { code: "TB", name: "Tatab\xe1nya", subdivision: null },
              { code: "TO", name: "Tolna", subdivision: null },
              { code: "VA", name: "Vas", subdivision: null },
              { code: "VE", name: "Veszpr\xe9m", subdivision: null },
              { code: "VM", name: "Veszpr\xe9m", subdivision: null },
              { code: "ZA", name: "Zala", subdivision: null },
              { code: "ZE", name: "Zalaegerszeg", subdivision: null },
              { code: "ER", name: "\xc9rd", subdivision: null },
            ],
          },
          {
            code2: "IS",
            code3: "ISL",
            name: "Iceland",
            capital: "Reykjav\xedk",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "7", name: "Austurland", subdivision: null },
              {
                code: "1",
                name: "H\xf6fu\xf0borgarsv\xe6\xf0i utan Reykjav\xedkur",
                subdivision: null,
              },
              { code: "6", name: "Nor\xf0urland eystra", subdivision: null },
              { code: "5", name: "Nor\xf0urland vestra", subdivision: null },
              { code: "0", name: "Reykjav\xedk", subdivision: null },
              { code: "8", name: "Su\xf0urland", subdivision: null },
              { code: "2", name: "Su\xf0urnes", subdivision: null },
              { code: "4", name: "Vestfir\xf0ir", subdivision: null },
              { code: "3", name: "Vesturland", subdivision: null },
            ],
          },
          {
            code2: "IN",
            code3: "IND",
            name: "India",
            capital: "New Delhi",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              {
                code: "AN",
                name: "Andaman and Nicobar Islands",
                subdivision: "Union territory",
              },
              {
                code: "CH",
                name: "Chandigarh",
                subdivision: "Union territory",
              },
              {
                code: "DN",
                name: "Dadra and Nagar Haveli",
                subdivision: "Union territory",
              },
              {
                code: "DD",
                name: "Daman and Diu",
                subdivision: "Union territory",
              },
              { code: "DL", name: "Delhi", subdivision: "Union territory" },
              {
                code: "LD",
                name: "Lakshadweep",
                subdivision: "Union territory",
              },
              {
                code: "PY",
                name: "Puducherry",
                subdivision: "Union territory",
              },
              { code: "AP", name: "Andhra Pradesh", subdivision: "state" },
              { code: "AR", name: "Arunachal Pradesh", subdivision: "state" },
              { code: "AS", name: "Assam", subdivision: "state" },
              { code: "BR", name: "Bihar", subdivision: "state" },
              { code: "CT", name: "Chhattisgarh", subdivision: "state" },
              { code: "GA", name: "Goa", subdivision: "state" },
              { code: "GJ", name: "Gujarat", subdivision: "state" },
              { code: "HR", name: "Haryana", subdivision: "state" },
              { code: "HP", name: "Himachal Pradesh", subdivision: "state" },
              { code: "JK", name: "Jammu and Kashmir", subdivision: "state" },
              { code: "JH", name: "Jharkhand", subdivision: "state" },
              { code: "KA", name: "Karnataka", subdivision: "state" },
              { code: "KL", name: "Kerala", subdivision: "state" },
              { code: "MP", name: "Madhya Pradesh", subdivision: "state" },
              { code: "MH", name: "Maharashtra", subdivision: "state" },
              { code: "MN", name: "Manipur", subdivision: "state" },
              { code: "ML", name: "Meghalaya", subdivision: "state" },
              { code: "MZ", name: "Mizoram", subdivision: "state" },
              { code: "NL", name: "Nagaland", subdivision: "state" },
              { code: "OR", name: "Odisha", subdivision: "state" },
              { code: "PB", name: "Punjab", subdivision: "state" },
              { code: "RJ", name: "Rajasthan", subdivision: "state" },
              { code: "SK", name: "Sikkim", subdivision: "state" },
              { code: "TN", name: "Tamil Nadu", subdivision: "state" },
              { code: "TG", name: "Telangana", subdivision: "state" },
              { code: "TR", name: "Tripura", subdivision: "state" },
              { code: "UP", name: "Uttar Pradesh", subdivision: "state" },
              { code: "UT", name: "Uttarakhand", subdivision: "state" },
              { code: "WB", name: "West Bengal", subdivision: "state" },
            ],
          },
          {
            code2: "ID",
            code3: "IDN",
            name: "Indonesia",
            capital: "Jakarta",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "JW", name: "Jawa", subdivision: null },
              { code: "KA", name: "Kalimantan", subdivision: null },
              { code: "ML", name: "Maluku", subdivision: null },
              { code: "NU", name: "Nusa Tenggara", subdivision: null },
              { code: "PP", name: "Papua", subdivision: null },
              { code: "SL", name: "Sulawesi", subdivision: null },
              { code: "SM", name: "Sumatera", subdivision: null },
            ],
          },
          {
            code2: "CI",
            code3: "CIV",
            name: "Ivory Coast",
            capital: "Yamoussoukro",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "06", name: "18 Montagnes", subdivision: null },
              { code: "16", name: "Agn\xe9bi", subdivision: null },
              { code: "17", name: "Bafing", subdivision: null },
              { code: "09", name: "Bas-Sassandra", subdivision: null },
              { code: "10", name: "Dengu\xe9l\xe9", subdivision: null },
              { code: "18", name: "Fromager", subdivision: null },
              { code: "02", name: "Haut-Sassandra", subdivision: null },
              { code: "07", name: "Lacs", subdivision: null },
              { code: "01", name: "Lagunes", subdivision: null },
              { code: "12", name: "Marahou\xe9", subdivision: null },
              { code: "19", name: "Moyen-Cavally", subdivision: null },
              { code: "05", name: "Moyen-Como\xe9", subdivision: null },
              { code: "11", name: "Nzi-Como\xe9", subdivision: null },
              { code: "03", name: "Savanes", subdivision: null },
              { code: "15", name: "Sud-Bandama", subdivision: null },
              { code: "13", name: "Sud-Como\xe9", subdivision: null },
              { code: "04", name: "Vall\xe9e du Bandama", subdivision: null },
              { code: "14", name: "Worodougou", subdivision: null },
              { code: "08", name: "Zanzan", subdivision: null },
            ],
          },
          {
            code2: "IR",
            code3: "IRN",
            name: "Iran",
            capital: "Tehran",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "32", name: "Alborz", subdivision: null },
              { code: "03", name: "Ardab\u012bl", subdivision: null },
              { code: "06", name: "B\u016bshehr", subdivision: null },
              {
                code: "08",
                name: "Chah\u0101r Ma\u1e29\u0101ll va Bakht\u012b\u0101r\u012b",
                subdivision: null,
              },
              { code: "04", name: "E\u015ffah\u0101n", subdivision: null },
              { code: "14", name: "F\u0101rs", subdivision: null },
              { code: "27", name: "Golest\u0101n", subdivision: null },
              { code: "19", name: "G\u012bl\u0101n", subdivision: null },
              { code: "24", name: "Hamad\u0101n", subdivision: null },
              { code: "23", name: "Hormozg\u0101n", subdivision: null },
              { code: "15", name: "Kerm\u0101n", subdivision: null },
              { code: "17", name: "Kerm\u0101nsh\u0101h", subdivision: null },
              {
                code: "29",
                name: "Khor\u0101s\u0101n-e Jan\u016bb\u012b",
                subdivision: null,
              },
              {
                code: "30",
                name: "Khor\u0101s\u0101n-e Razav\u012b",
                subdivision: null,
              },
              {
                code: "31",
                name: "Khor\u0101s\u0101n-e Shem\u0101l\u012b",
                subdivision: null,
              },
              { code: "10", name: "Kh\u016bzest\u0101n", subdivision: null },
              {
                code: "18",
                name: "Kohg\u012bl\u016byeh va B\u016byer A\u1e29mad",
                subdivision: null,
              },
              { code: "16", name: "Kordest\u0101n", subdivision: null },
              { code: "20", name: "Lorest\u0101n", subdivision: null },
              { code: "22", name: "Markaz\u012b", subdivision: null },
              { code: "21", name: "M\u0101zandar\u0101n", subdivision: null },
              { code: "28", name: "Qazv\u012bn", subdivision: null },
              { code: "26", name: "Qom", subdivision: null },
              { code: "12", name: "Semn\u0101n", subdivision: null },
              {
                code: "13",
                name: "S\u012bst\u0101n va Bal\u016bchest\u0101n",
                subdivision: null,
              },
              { code: "07", name: "Tehr\u0101n", subdivision: null },
              { code: "25", name: "Yazd", subdivision: null },
              { code: "11", name: "Zanj\u0101n", subdivision: null },
              {
                code: "02",
                name: "\u0100z\u0304arb\u0101yj\u0101n-e Gharb\u012b",
                subdivision: null,
              },
              {
                code: "01",
                name: "\u0100z\u0304arb\u0101yj\u0101n-e Sharq\u012b",
                subdivision: null,
              },
              { code: "05", name: "\u012al\u0101m", subdivision: null },
            ],
          },
          {
            code2: "IQ",
            code3: "IRQ",
            name: "Iraq",
            capital: "Baghdad",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AN", name: "Al Anb\u0101r", subdivision: null },
              { code: "BA", name: "Al Ba\u015frah", subdivision: null },
              { code: "MU", name: "Al Muthann\xe1", subdivision: null },
              { code: "QA", name: "Al Q\u0101dis\u012byah", subdivision: null },
              { code: "NA", name: "An Najaf", subdivision: null },
              { code: "AR", name: "Arb\u012bl", subdivision: null },
              {
                code: "SU",
                name: "As Sulaym\u0101n\u012byah",
                subdivision: null,
              },
              { code: "TS", name: "At Ta'm\u012bm", subdivision: null },
              { code: "BG", name: "Baghd\u0101d", subdivision: null },
              { code: "BB", name: "B\u0101bil", subdivision: null },
              { code: "DA", name: "Dah\u016bk", subdivision: null },
              { code: "DQ", name: "Dh\u012b Q\u0101r", subdivision: null },
              { code: "DI", name: "Diy\u0101l\xe1", subdivision: null },
              { code: "KA", name: "Karbal\u0101'", subdivision: null },
              { code: "MA", name: "Mays\u0101n", subdivision: null },
              { code: "NI", name: "N\u012bnaw\xe1", subdivision: null },
              { code: "WA", name: "W\u0101si\u0163", subdivision: null },
              {
                code: "SD",
                name: "\u015eal\u0101\u1e29 ad D\u012bn",
                subdivision: null,
              },
            ],
          },
          {
            code2: "IE",
            code3: "IRL",
            name: "Republic of Ireland",
            capital: "Dublin",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "C", name: "Connaught", subdivision: null },
              { code: "L", name: "Leinster", subdivision: null },
              { code: "M", name: "Munster", subdivision: null },
              { code: "U", name: "Ulster", subdivision: null },
            ],
          },
          {
            code2: "IM",
            code3: "IMN",
            name: "Isle of Man",
            capital: "Douglas",
            region: "Europe",
            subregion: "Northern Europe",
            states: [],
          },
          {
            code2: "IL",
            code3: "ISR",
            name: "Israel",
            capital: "Jerusalem",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "D", name: "HaDarom", subdivision: null },
              { code: "M", name: "HaMerkaz", subdivision: null },
              { code: "Z", name: "HaTsafon", subdivision: null },
              { code: "HA", name: "H\u0331efa", subdivision: null },
              { code: "TA", name: "Tel-Aviv", subdivision: null },
              { code: "JM", name: "Yerushalayim", subdivision: null },
            ],
          },
          {
            code2: "IT",
            code3: "ITA",
            name: "Italy",
            capital: "Rome",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "65", name: "Abruzzo", subdivision: null },
              { code: "77", name: "Basilicata", subdivision: null },
              { code: "78", name: "Calabria", subdivision: null },
              { code: "72", name: "Campania", subdivision: null },
              { code: "45", name: "Emilia-Romagna", subdivision: null },
              { code: "36", name: "Friuli-Venezia Giulia", subdivision: null },
              { code: "62", name: "Lazio", subdivision: null },
              { code: "42", name: "Liguria", subdivision: null },
              { code: "25", name: "Lombardia", subdivision: null },
              { code: "57", name: "Marche", subdivision: null },
              { code: "67", name: "Molise", subdivision: null },
              { code: "21", name: "Piemonte", subdivision: null },
              { code: "75", name: "Puglia", subdivision: null },
              { code: "88", name: "Sardegna", subdivision: null },
              { code: "82", name: "Sicilia", subdivision: null },
              { code: "52", name: "Toscana", subdivision: null },
              { code: "32", name: "Trentino-Alto Adige", subdivision: null },
              { code: "55", name: "Umbria", subdivision: null },
              { code: "23", name: "Valle d'Aosta", subdivision: null },
              { code: "34", name: "Veneto", subdivision: null },
            ],
          },
          {
            code2: "JM",
            code3: "JAM",
            name: "Jamaica",
            capital: "Kingston",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "13", name: "Clarendon", subdivision: null },
              { code: "09", name: "Hanover", subdivision: null },
              { code: "01", name: "Kingston", subdivision: null },
              { code: "12", name: "Manchester", subdivision: null },
              { code: "04", name: "Portland", subdivision: null },
              { code: "02", name: "Saint Andrew", subdivision: null },
              { code: "06", name: "Saint Ann", subdivision: null },
              { code: "14", name: "Saint Catherine", subdivision: null },
              { code: "11", name: "Saint Elizabeth", subdivision: null },
              { code: "08", name: "Saint James", subdivision: null },
              { code: "05", name: "Saint Mary", subdivision: null },
              { code: "03", name: "Saint Thomas", subdivision: null },
              { code: "07", name: "Trelawny", subdivision: null },
              { code: "10", name: "Westmoreland", subdivision: null },
            ],
          },
          {
            code2: "JP",
            code3: "JPN",
            name: "Japan",
            capital: "Tokyo",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [
              { code: "23", name: "Aiti", subdivision: null },
              { code: "05", name: "Akita", subdivision: null },
              { code: "02", name: "Aomori", subdivision: null },
              { code: "38", name: "Ehime", subdivision: null },
              { code: "21", name: "Gihu", subdivision: null },
              { code: "10", name: "Gunma", subdivision: null },
              { code: "34", name: "Hirosima", subdivision: null },
              { code: "01", name: "Hokkaid\xf4", subdivision: null },
              { code: "18", name: "Hukui", subdivision: null },
              { code: "40", name: "Hukuoka", subdivision: null },
              { code: "07", name: "Hukusima", subdivision: null },
              { code: "28", name: "Hy\xf4go", subdivision: null },
              { code: "08", name: "Ibaraki", subdivision: null },
              { code: "17", name: "Isikawa", subdivision: null },
              { code: "03", name: "Iwate", subdivision: null },
              { code: "37", name: "Kagawa", subdivision: null },
              { code: "46", name: "Kagosima", subdivision: null },
              { code: "14", name: "Kanagawa", subdivision: null },
              { code: "43", name: "Kumamoto", subdivision: null },
              { code: "26", name: "Ky\xf4to", subdivision: null },
              { code: "39", name: "K\xf4ti", subdivision: null },
              { code: "24", name: "Mie", subdivision: null },
              { code: "04", name: "Miyagi", subdivision: null },
              { code: "45", name: "Miyazaki", subdivision: null },
              { code: "20", name: "Nagano", subdivision: null },
              { code: "42", name: "Nagasaki", subdivision: null },
              { code: "29", name: "Nara", subdivision: null },
              { code: "15", name: "Niigata", subdivision: null },
              { code: "33", name: "Okayama", subdivision: null },
              { code: "47", name: "Okinawa", subdivision: null },
              { code: "41", name: "Saga", subdivision: null },
              { code: "11", name: "Saitama", subdivision: null },
              { code: "25", name: "Siga", subdivision: null },
              { code: "32", name: "Simane", subdivision: null },
              { code: "22", name: "Sizuoka", subdivision: null },
              { code: "12", name: "Tiba", subdivision: null },
              { code: "36", name: "Tokusima", subdivision: null },
              { code: "09", name: "Totigi", subdivision: null },
              { code: "31", name: "Tottori", subdivision: null },
              { code: "16", name: "Toyama", subdivision: null },
              { code: "13", name: "T\xf4ky\xf4", subdivision: null },
              { code: "30", name: "Wakayama", subdivision: null },
              { code: "06", name: "Yamagata", subdivision: null },
              { code: "35", name: "Yamaguti", subdivision: null },
              { code: "19", name: "Yamanasi", subdivision: null },
              { code: "44", name: "\xd4ita", subdivision: null },
              { code: "27", name: "\xd4saka", subdivision: null },
            ],
          },
          {
            code2: "JE",
            code3: "JEY",
            name: "Jersey",
            capital: "Saint Helier",
            region: "Europe",
            subregion: "Northern Europe",
            states: [],
          },
          {
            code2: "JO",
            code3: "JOR",
            name: "Jordan",
            capital: "Amman",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "BA", name: "Al Balq\u0101'", subdivision: null },
              { code: "AQ", name: "Al \u02bdAqabah", subdivision: null },
              { code: "AZ", name: "Az Zarq\u0101'", subdivision: null },
              {
                code: "AT",
                name: "A\u0163 \u0162af\u012blah",
                subdivision: null,
              },
              { code: "IR", name: "Irbid", subdivision: null },
              { code: "JA", name: "Jerash", subdivision: null },
              { code: "KA", name: "Karak", subdivision: null },
              { code: "MN", name: "Ma'\u0101n", subdivision: null },
              { code: "MA", name: "Mafraq", subdivision: null },
              { code: "MD", name: "M\u0101dab\u0101", subdivision: null },
              { code: "AJ", name: "\u02bdAjl\u016bn", subdivision: null },
              { code: "AM", name: "\u2018Amm\u0101n", subdivision: null },
            ],
          },
          {
            code2: "KZ",
            code3: "KAZ",
            name: "Kazakhstan",
            capital: "Astana",
            region: "Asia",
            subregion: "Central Asia",
            states: [
              { code: "ALA", name: "Almaty", subdivision: null },
              { code: "ALM", name: "Almaty oblysy", subdivision: null },
              { code: "AKM", name: "Aqmola oblysy", subdivision: null },
              { code: "AKT", name: "Aqt\xf6be oblysy", subdivision: null },
              { code: "AST", name: "Astana", subdivision: null },
              { code: "ATY", name: "Atyra\u016b oblysy", subdivision: null },
              {
                code: "ZAP",
                name: "Batys Qazaqstan oblysy",
                subdivision: null,
              },
              {
                code: "MAN",
                name: "Mangghysta\u016b oblysy",
                subdivision: null,
              },
              {
                code: "YUZ",
                name: "Ongt\xfcstik Qazaqstan oblysy",
                subdivision: null,
              },
              { code: "PAV", name: "Pavlodar oblysy", subdivision: null },
              { code: "KAR", name: "Qaraghandy oblysy", subdivision: null },
              { code: "KUS", name: "Qostanay oblysy", subdivision: null },
              { code: "KZY", name: "Qyzylorda oblysy", subdivision: null },
              {
                code: "VOS",
                name: "Shyghys Qazaqstan oblysy",
                subdivision: null,
              },
              {
                code: "SEV",
                name: "Solt\xfcstik Qazaqstan oblysy",
                subdivision: null,
              },
              { code: "ZHA", name: "Zhambyl oblysy", subdivision: null },
            ],
          },
          {
            code2: "KE",
            code3: "KEN",
            name: "Kenya",
            capital: "Nairobi",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "200", name: "Central", subdivision: null },
              { code: "300", name: "Coast", subdivision: null },
              { code: "400", name: "Eastern", subdivision: null },
              { code: "110", name: "Nairobi", subdivision: null },
              { code: "500", name: "North-Eastern", subdivision: null },
              { code: "600", name: "Nyanza", subdivision: null },
              { code: "700", name: "Rift Valley", subdivision: null },
              { code: "800", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "KI",
            code3: "KIR",
            name: "Kiribati",
            capital: "South Tarawa",
            region: "Oceania",
            subregion: "Micronesia",
            states: [
              { code: "G", name: "Gilbert Islands", subdivision: null },
              { code: "L", name: "Line Islands", subdivision: null },
              { code: "P", name: "Phoenix Islands", subdivision: null },
            ],
          },
          {
            code2: "KW",
            code3: "KWT",
            name: "Kuwait",
            capital: "Kuwait City",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AH", name: "Al A\u1e29madi", subdivision: null },
              {
                code: "FA",
                name: "Al Farw\u0101n\u012byah",
                subdivision: null,
              },
              { code: "JA", name: "Al Jahr\u0101\u2019", subdivision: null },
              { code: "KU", name: "Al Kuwayt", subdivision: null },
              {
                code: "MU",
                name: "Mub\u0101rak al Kab\u012br",
                subdivision: null,
              },
              { code: "HA", name: "\u1e28awall\u012b", subdivision: null },
            ],
          },
          {
            code2: "KG",
            code3: "KGZ",
            name: "Kyrgyzstan",
            capital: "Bishkek",
            region: "Asia",
            subregion: "Central Asia",
            states: [
              { code: "B", name: "Batken", subdivision: null },
              { code: "GB", name: "Bishkek", subdivision: null },
              { code: "C", name: "Ch\xfc", subdivision: null },
              { code: "J", name: "Jalal-Abad", subdivision: null },
              { code: "N", name: "Naryn", subdivision: null },
              { code: "O", name: "Osh", subdivision: null },
              { code: "T", name: "Talas", subdivision: null },
              { code: "Y", name: "Ysyk-K\xf6l", subdivision: null },
            ],
          },
          {
            code2: "LA",
            code3: "LAO",
            name: "Laos",
            capital: "Vientiane",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "AT", name: "Attapu", subdivision: null },
              { code: "BK", name: "Bok\xe8o", subdivision: null },
              { code: "BL", name: "Bolikhamxai", subdivision: null },
              { code: "CH", name: "Champasak", subdivision: null },
              { code: "HO", name: "Houaphan", subdivision: null },
              { code: "KH", name: "Khammouan", subdivision: null },
              { code: "LM", name: "Louang Namtha", subdivision: null },
              { code: "LP", name: "Louangphabang", subdivision: null },
              { code: "OU", name: "Oud\xf4mxai", subdivision: null },
              { code: "PH", name: "Ph\xf4ngsali", subdivision: null },
              { code: "SL", name: "Salavan", subdivision: null },
              { code: "SV", name: "Savannakh\xe9t", subdivision: null },
              { code: "VT", name: "Vientiane", subdivision: null },
              { code: "VI", name: "Vientiane", subdivision: null },
              { code: "XA", name: "Xaignabouli", subdivision: null },
              { code: "XN", name: "Xais\xf4mboun", subdivision: null },
              { code: "XI", name: "Xiangkhoang", subdivision: null },
              { code: "XE", name: "X\xe9kong", subdivision: null },
            ],
          },
          {
            code2: "LV",
            code3: "LVA",
            name: "Latvia",
            capital: "Riga",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "001", name: "Aglonas novads", subdivision: null },
              { code: "002", name: "Aizkraukles novads", subdivision: null },
              { code: "003", name: "Aizputes novads", subdivision: null },
              { code: "004", name: "Akn\u012bstes novads", subdivision: null },
              { code: "005", name: "Alojas novads", subdivision: null },
              { code: "006", name: "Alsungas novads", subdivision: null },
              { code: "007", name: "Al\u016bksnes novads", subdivision: null },
              { code: "008", name: "Amatas novads", subdivision: null },
              { code: "009", name: "Apes novads", subdivision: null },
              { code: "010", name: "Auces novads", subdivision: null },
              { code: "012", name: "Bab\u012btes novads", subdivision: null },
              { code: "013", name: "Baldones novads", subdivision: null },
              { code: "014", name: "Baltinavas novads", subdivision: null },
              { code: "015", name: "Balvu novads", subdivision: null },
              { code: "016", name: "Bauskas novads", subdivision: null },
              { code: "017", name: "Bever\u012bnas novads", subdivision: null },
              { code: "018", name: "Broc\u0113nu novads", subdivision: null },
              { code: "019", name: "Burtnieku novads", subdivision: null },
              { code: "020", name: "Carnikavas novads", subdivision: null },
              { code: "021", name: "Cesvaines novads", subdivision: null },
              { code: "023", name: "Ciblas novads", subdivision: null },
              { code: "022", name: "C\u0113su novads", subdivision: null },
              { code: "024", name: "Dagdas novads", subdivision: null },
              { code: "DGV", name: "Daugavpils", subdivision: null },
              { code: "025", name: "Daugavpils novads", subdivision: null },
              { code: "026", name: "Dobeles novads", subdivision: null },
              { code: "027", name: "Dundagas novads", subdivision: null },
              { code: "028", name: "Durbes novads", subdivision: null },
              { code: "029", name: "Engures novads", subdivision: null },
              { code: "031", name: "Garkalnes novads", subdivision: null },
              { code: "032", name: "Grobi\u0146as novads", subdivision: null },
              { code: "033", name: "Gulbenes novads", subdivision: null },
              { code: "034", name: "Iecavas novads", subdivision: null },
              {
                code: "035",
                name: "Ik\u0161\u0137iles novads",
                subdivision: null,
              },
              { code: "036", name: "Il\u016bkstes novads", subdivision: null },
              { code: "037", name: "In\u010dukalna novads", subdivision: null },
              { code: "038", name: "Jaunjelgavas novads", subdivision: null },
              { code: "039", name: "Jaunpiebalgas novads", subdivision: null },
              { code: "040", name: "Jaunpils novads", subdivision: null },
              { code: "JEL", name: "Jelgava", subdivision: null },
              { code: "041", name: "Jelgavas novads", subdivision: null },
              { code: "JKB", name: "J\u0113kabpils", subdivision: null },
              { code: "042", name: "J\u0113kabpils novads", subdivision: null },
              { code: "JUR", name: "J\u016brmala", subdivision: null },
              { code: "043", name: "Kandavas novads", subdivision: null },
              { code: "045", name: "Koc\u0113nu novads", subdivision: null },
              { code: "046", name: "Kokneses novads", subdivision: null },
              { code: "048", name: "Krimuldas novads", subdivision: null },
              { code: "049", name: "Krustpils novads", subdivision: null },
              { code: "047", name: "Kr\u0101slavas novads", subdivision: null },
              { code: "050", name: "Kuld\u012bgas novads", subdivision: null },
              { code: "044", name: "K\u0101rsavas novads", subdivision: null },
              {
                code: "053",
                name: "Lielv\u0101rdes novads",
                subdivision: null,
              },
              { code: "LPX", name: "Liep\u0101ja", subdivision: null },
              { code: "054", name: "Limba\u017eu novads", subdivision: null },
              { code: "057", name: "Lub\u0101nas novads", subdivision: null },
              { code: "058", name: "Ludzas novads", subdivision: null },
              { code: "055", name: "L\u012bgatnes novads", subdivision: null },
              {
                code: "056",
                name: "L\u012bv\u0101nu novads",
                subdivision: null,
              },
              { code: "059", name: "Madonas novads", subdivision: null },
              { code: "060", name: "Mazsalacas novads", subdivision: null },
              { code: "061", name: "M\u0101lpils novads", subdivision: null },
              { code: "062", name: "M\u0101rupes novads", subdivision: null },
              { code: "063", name: "M\u0113rsraga novads", subdivision: null },
              {
                code: "064",
                name: "Nauk\u0161\u0113nu novads",
                subdivision: null,
              },
              { code: "065", name: "Neretas novads", subdivision: null },
              { code: "066", name: "N\u012bcas novads", subdivision: null },
              { code: "067", name: "Ogres novads", subdivision: null },
              { code: "068", name: "Olaines novads", subdivision: null },
              { code: "069", name: "Ozolnieku novads", subdivision: null },
              { code: "073", name: "Prei\u013cu novads", subdivision: null },
              { code: "074", name: "Priekules novads", subdivision: null },
              { code: "075", name: "Prieku\u013cu novads", subdivision: null },
              { code: "070", name: "P\u0101rgaujas novads", subdivision: null },
              {
                code: "071",
                name: "P\u0101vilostas novads",
                subdivision: null,
              },
              {
                code: "072",
                name: "P\u013cavi\u0146u novads",
                subdivision: null,
              },
              { code: "076", name: "Raunas novads", subdivision: null },
              { code: "078", name: "Riebi\u0146u novads", subdivision: null },
              { code: "079", name: "Rojas novads", subdivision: null },
              { code: "080", name: "Ropa\u017eu novads", subdivision: null },
              { code: "081", name: "Rucavas novads", subdivision: null },
              { code: "082", name: "Rug\u0101ju novads", subdivision: null },
              { code: "083", name: "Rund\u0101les novads", subdivision: null },
              { code: "REZ", name: "R\u0113zekne", subdivision: null },
              { code: "077", name: "R\u0113zeknes novads", subdivision: null },
              { code: "RIX", name: "R\u012bga", subdivision: null },
              { code: "084", name: "R\u016bjienas novads", subdivision: null },
              {
                code: "086",
                name: "Salacgr\u012bvas novads",
                subdivision: null,
              },
              { code: "085", name: "Salas novads", subdivision: null },
              { code: "087", name: "Salaspils novads", subdivision: null },
              { code: "088", name: "Saldus novads", subdivision: null },
              { code: "089", name: "Saulkrastu novads", subdivision: null },
              { code: "091", name: "Siguldas novads", subdivision: null },
              { code: "093", name: "Skrundas novads", subdivision: null },
              { code: "092", name: "Skr\u012bveru novads", subdivision: null },
              { code: "094", name: "Smiltenes novads", subdivision: null },
              { code: "095", name: "Stopi\u0146u novads", subdivision: null },
              { code: "096", name: "Stren\u010du novads", subdivision: null },
              { code: "090", name: "S\u0113jas novads", subdivision: null },
              { code: "097", name: "Talsu novads", subdivision: null },
              { code: "099", name: "Tukuma novads", subdivision: null },
              { code: "098", name: "T\u0113rvetes novads", subdivision: null },
              { code: "100", name: "Vai\u0146odes novads", subdivision: null },
              { code: "101", name: "Valkas novads", subdivision: null },
              { code: "VMR", name: "Valmiera", subdivision: null },
              {
                code: "102",
                name: "Varak\u013c\u0101nu novads",
                subdivision: null,
              },
              { code: "104", name: "Vecpiebalgas novads", subdivision: null },
              { code: "105", name: "Vecumnieku novads", subdivision: null },
              { code: "VEN", name: "Ventspils", subdivision: null },
              { code: "106", name: "Ventspils novads", subdivision: null },
              { code: "107", name: "Vies\u012btes novads", subdivision: null },
              { code: "108", name: "Vi\u013cakas novads", subdivision: null },
              {
                code: "109",
                name: "Vi\u013c\u0101nu novads",
                subdivision: null,
              },
              { code: "103", name: "V\u0101rkavas novads", subdivision: null },
              { code: "110", name: "Zilupes novads", subdivision: null },
              {
                code: "011",
                name: "\u0100da\u017eu novads",
                subdivision: null,
              },
              {
                code: "030",
                name: "\u0112rg\u013cu novads",
                subdivision: null,
              },
              { code: "051", name: "\u0136eguma novads", subdivision: null },
              { code: "052", name: "\u0136ekavas novads", subdivision: null },
            ],
          },
          {
            code2: "LB",
            code3: "LBN",
            name: "Lebanon",
            capital: "Beirut",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AK", name: "Aakk\xe2r", subdivision: null },
              { code: "BH", name: "Baalbek-Hermel", subdivision: null },
              { code: "BA", name: "Beyrouth", subdivision: null },
              { code: "BI", name: "B\xe9qaa", subdivision: null },
              { code: "AS", name: "Liban-Nord", subdivision: null },
              { code: "JA", name: "Liban-Sud", subdivision: null },
              { code: "JL", name: "Mont-Liban", subdivision: null },
              { code: "NA", name: "Nabat\xeey\xe9", subdivision: null },
            ],
          },
          {
            code2: "LS",
            code3: "LSO",
            name: "Lesotho",
            capital: "Maseru",
            region: "Africa",
            subregion: "Southern Africa",
            states: [
              { code: "D", name: "Berea", subdivision: null },
              { code: "B", name: "Butha-Buthe", subdivision: null },
              { code: "C", name: "Leribe", subdivision: null },
              { code: "E", name: "Mafeteng", subdivision: null },
              { code: "A", name: "Maseru", subdivision: null },
              { code: "F", name: "Mohale's Hoek", subdivision: null },
              { code: "J", name: "Mokhotlong", subdivision: null },
              { code: "H", name: "Qacha's Nek", subdivision: null },
              { code: "G", name: "Quthing", subdivision: null },
              { code: "K", name: "Thaba-Tseka", subdivision: null },
            ],
          },
          {
            code2: "LR",
            code3: "LBR",
            name: "Liberia",
            capital: "Monrovia",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "BM", name: "Bomi", subdivision: null },
              { code: "BG", name: "Bong", subdivision: null },
              { code: "GP", name: "Gbarpolu", subdivision: null },
              { code: "GB", name: "Grand Bassa", subdivision: null },
              { code: "CM", name: "Grand Cape Mount", subdivision: null },
              { code: "GG", name: "Grand Gedeh", subdivision: null },
              { code: "GK", name: "Grand Kru", subdivision: null },
              { code: "LO", name: "Lofa", subdivision: null },
              { code: "MG", name: "Margibi", subdivision: null },
              { code: "MY", name: "Maryland", subdivision: null },
              { code: "MO", name: "Montserrado", subdivision: null },
              { code: "NI", name: "Nimba", subdivision: null },
              { code: "RG", name: "River Gee", subdivision: null },
              { code: "RI", name: "Rivercess", subdivision: null },
              { code: "SI", name: "Sinoe", subdivision: null },
            ],
          },
          {
            code2: "LY",
            code3: "LBY",
            name: "Libya",
            capital: "Tripoli",
            region: "Africa",
            subregion: "Northern Africa",
            states: [
              { code: "BU", name: "Al Bu\u0163n\u0101n", subdivision: null },
              {
                code: "JA",
                name: "Al Jabal al Akh\u1e11ar",
                subdivision: null,
              },
              {
                code: "JG",
                name: "Al Jabal al Gharb\u012b",
                subdivision: null,
              },
              { code: "JI", name: "Al Jif\u0101rah", subdivision: null },
              { code: "JU", name: "Al Jufrah", subdivision: null },
              { code: "KF", name: "Al Kufrah", subdivision: null },
              { code: "MJ", name: "Al Marj", subdivision: null },
              { code: "MB", name: "Al Marqab", subdivision: null },
              {
                code: "WA",
                name: "Al W\u0101\u1e29\u0101t",
                subdivision: null,
              },
              { code: "NQ", name: "An Nuqa\u0163 al Khams", subdivision: null },
              { code: "ZA", name: "Az Z\u0101wiyah", subdivision: null },
              { code: "BA", name: "Bangh\u0101z\u012b", subdivision: null },
              { code: "DR", name: "Darnah", subdivision: null },
              { code: "GT", name: "Gh\u0101t", subdivision: null },
              { code: "MI", name: "Mi\u015fr\u0101tah", subdivision: null },
              { code: "MQ", name: "Murzuq", subdivision: null },
              { code: "NL", name: "N\u0101l\u016bt", subdivision: null },
              { code: "SB", name: "Sabh\u0101", subdivision: null },
              { code: "SR", name: "Surt", subdivision: null },
              {
                code: "WD",
                name: "W\u0101d\u012b al \u1e28ay\u0101t",
                subdivision: null,
              },
              {
                code: "WS",
                name: "W\u0101d\u012b ash Sh\u0101\u0163i\u02be",
                subdivision: null,
              },
              { code: "TB", name: "\u0162ar\u0101bulus", subdivision: null },
            ],
          },
          {
            code2: "LI",
            code3: "LIE",
            name: "Liechtenstein",
            capital: "Vaduz",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "01", name: "Balzers", subdivision: null },
              { code: "02", name: "Eschen", subdivision: null },
              { code: "03", name: "Gamprin", subdivision: null },
              { code: "04", name: "Mauren", subdivision: null },
              { code: "05", name: "Planken", subdivision: null },
              { code: "06", name: "Ruggell", subdivision: null },
              { code: "07", name: "Schaan", subdivision: null },
              { code: "08", name: "Schellenberg", subdivision: null },
              { code: "09", name: "Triesen", subdivision: null },
              { code: "10", name: "Triesenberg", subdivision: null },
              { code: "11", name: "Vaduz", subdivision: null },
            ],
          },
          {
            code2: "LT",
            code3: "LTU",
            name: "Lithuania",
            capital: "Vilnius",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "AL", name: "Alytaus Apskritis", subdivision: null },
              { code: "KU", name: "Kauno Apskritis", subdivision: null },
              {
                code: "KL",
                name: "Klaip\u0117dos Apskritis",
                subdivision: null,
              },
              {
                code: "MR",
                name: "Marijampol\u0117s Apskritis",
                subdivision: null,
              },
              {
                code: "PN",
                name: "Panev\u0117\u017eio Apskritis",
                subdivision: null,
              },
              {
                code: "TA",
                name: "Taurag\u0117s Apskritis",
                subdivision: null,
              },
              {
                code: "TE",
                name: "Tel\u0161i\u0173 Apskritis",
                subdivision: null,
              },
              { code: "UT", name: "Utenos Apskritis", subdivision: null },
              { code: "VL", name: "Vilniaus Apskritis", subdivision: null },
              {
                code: "SA",
                name: "\u0160iauli\u0173 Apskritis",
                subdivision: null,
              },
            ],
          },
          {
            code2: "LU",
            code3: "LUX",
            name: "Luxembourg",
            capital: "Luxembourg",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "D", name: "Diekirch", subdivision: null },
              { code: "G", name: "Grevenmacher", subdivision: null },
              { code: "L", name: "Luxembourg", subdivision: null },
            ],
          },
          {
            code2: "MO",
            code3: "MAC",
            name: "Macau",
            capital: "",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [],
          },
          {
            code2: "MK",
            code3: "MKD",
            name: "Republic of Macedonia",
            capital: "Skopje",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "01", name: "Aerodrom", subdivision: null },
              { code: "02", name: "Ara\u010dinovo", subdivision: null },
              { code: "03", name: "Berovo", subdivision: null },
              { code: "04", name: "Bitola", subdivision: null },
              { code: "05", name: "Bogdanci", subdivision: null },
              { code: "06", name: "Bogovinje", subdivision: null },
              { code: "07", name: "Bosilovo", subdivision: null },
              { code: "08", name: "Brvenica", subdivision: null },
              { code: "09", name: "Butel", subdivision: null },
              { code: "77", name: "Centar", subdivision: null },
              { code: "78", name: "Centar \u017dupa", subdivision: null },
              { code: "21", name: "Debar", subdivision: null },
              { code: "22", name: "Debarca", subdivision: null },
              { code: "23", name: "Del\u010devo", subdivision: null },
              { code: "25", name: "Demir Hisar", subdivision: null },
              { code: "24", name: "Demir Kapija", subdivision: null },
              { code: "26", name: "Dojran", subdivision: null },
              { code: "27", name: "Dolneni", subdivision: null },
              { code: "28", name: "Drugovo", subdivision: null },
              { code: "17", name: "Gazi Baba", subdivision: null },
              { code: "18", name: "Gevgelija", subdivision: null },
              { code: "29", name: "Gjor\u010de Petrov", subdivision: null },
              { code: "19", name: "Gostivar", subdivision: null },
              { code: "20", name: "Gradsko", subdivision: null },
              { code: "34", name: "Ilinden", subdivision: null },
              { code: "35", name: "Jegunovce", subdivision: null },
              { code: "37", name: "Karbinci", subdivision: null },
              { code: "38", name: "Karpo\u0161", subdivision: null },
              { code: "36", name: "Kavadarci", subdivision: null },
              { code: "39", name: "Kisela Voda", subdivision: null },
              { code: "40", name: "Ki\u010devo", subdivision: null },
              { code: "41", name: "Kon\u010de", subdivision: null },
              { code: "42", name: "Ko\u010dani", subdivision: null },
              { code: "43", name: "Kratovo", subdivision: null },
              { code: "44", name: "Kriva Palanka", subdivision: null },
              { code: "45", name: "Krivoga\u0161tani", subdivision: null },
              { code: "46", name: "Kru\u0161evo", subdivision: null },
              { code: "47", name: "Kumanovo", subdivision: null },
              { code: "48", name: "Lipkovo", subdivision: null },
              { code: "49", name: "Lozovo", subdivision: null },
              { code: "51", name: "Makedonska Kamenica", subdivision: null },
              { code: "52", name: "Makedonski Brod", subdivision: null },
              { code: "50", name: "Mavrovo i Rostu\u0161a", subdivision: null },
              { code: "53", name: "Mogila", subdivision: null },
              { code: "54", name: "Negotino", subdivision: null },
              { code: "55", name: "Novaci", subdivision: null },
              { code: "56", name: "Novo Selo", subdivision: null },
              { code: "58", name: "Ohrid", subdivision: null },
              { code: "57", name: "Oslomej", subdivision: null },
              { code: "60", name: "Peh\u010devo", subdivision: null },
              { code: "59", name: "Petrovec", subdivision: null },
              { code: "61", name: "Plasnica", subdivision: null },
              { code: "62", name: "Prilep", subdivision: null },
              { code: "63", name: "Probi\u0161tip", subdivision: null },
              { code: "64", name: "Radovi\u0161", subdivision: null },
              { code: "65", name: "Rankovce", subdivision: null },
              { code: "66", name: "Resen", subdivision: null },
              { code: "67", name: "Rosoman", subdivision: null },
              { code: "68", name: "Saraj", subdivision: null },
              { code: "70", name: "Sopi\u0161te", subdivision: null },
              { code: "71", name: "Staro Nagori\u010dane", subdivision: null },
              { code: "72", name: "Struga", subdivision: null },
              { code: "73", name: "Strumica", subdivision: null },
              { code: "74", name: "Studeni\u010dani", subdivision: null },
              { code: "69", name: "Sveti Nikole", subdivision: null },
              { code: "75", name: "Tearce", subdivision: null },
              { code: "76", name: "Tetovo", subdivision: null },
              { code: "10", name: "Valandovo", subdivision: null },
              { code: "11", name: "Vasilevo", subdivision: null },
              { code: "13", name: "Veles", subdivision: null },
              { code: "12", name: "Vev\u010dani", subdivision: null },
              { code: "14", name: "Vinica", subdivision: null },
              { code: "15", name: "Vrane\u0161tica", subdivision: null },
              { code: "16", name: "Vrap\u010di\u0161te", subdivision: null },
              { code: "31", name: "Zajas", subdivision: null },
              { code: "32", name: "Zelenikovo", subdivision: null },
              { code: "33", name: "Zrnovci", subdivision: null },
              { code: "79", name: "\u010cair", subdivision: null },
              { code: "80", name: "\u010ca\u0161ka", subdivision: null },
              {
                code: "81",
                name: "\u010ce\u0161inovo-Oble\u0161evo",
                subdivision: null,
              },
              {
                code: "82",
                name: "\u010cu\u010der Sandevo",
                subdivision: null,
              },
              { code: "83", name: "\u0160tip", subdivision: null },
              { code: "84", name: "\u0160uto Orizari", subdivision: null },
              { code: "30", name: "\u017delino", subdivision: null },
            ],
          },
          {
            code2: "MG",
            code3: "MDG",
            name: "Madagascar",
            capital: "Antananarivo",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "T", name: "Antananarivo", subdivision: null },
              { code: "D", name: "Antsiranana", subdivision: null },
              { code: "F", name: "Fianarantsoa", subdivision: null },
              { code: "M", name: "Mahajanga", subdivision: null },
              { code: "A", name: "Toamasina", subdivision: null },
              { code: "U", name: "Toliara", subdivision: null },
            ],
          },
          {
            code2: "MW",
            code3: "MWI",
            name: "Malawi",
            capital: "Lilongwe",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "C", name: "Central Region", subdivision: null },
              { code: "N", name: "Northern Region", subdivision: null },
              { code: "S", name: "Southern Region", subdivision: null },
            ],
          },
          {
            code2: "MY",
            code3: "MYS",
            name: "Malaysia",
            capital: "Kuala Lumpur",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              {
                code: "14",
                name: "Wilayah Persekutuan Kuala Lumpur",
                subdivision: "federal territory",
              },
              {
                code: "15",
                name: "Wilayah Persekutuan Labuan",
                subdivision: "federal territory",
              },
              {
                code: "16",
                name: "Wilayah Persekutuan Putrajaya",
                subdivision: "federal territory",
              },
              { code: "01", name: "Johor", subdivision: "state" },
              { code: "02", name: "Kedah", subdivision: "state" },
              { code: "03", name: "Kelantan", subdivision: "state" },
              { code: "04", name: "Melaka", subdivision: "state" },
              { code: "05", name: "Negeri Sembilan", subdivision: "state" },
              { code: "06", name: "Pahang", subdivision: "state" },
              { code: "08", name: "Perak", subdivision: "state" },
              { code: "09", name: "Perlis", subdivision: "state" },
              { code: "07", name: "Pulau Pinang", subdivision: "state" },
              { code: "12", name: "Sabah", subdivision: "state" },
              { code: "13", name: "Sarawak", subdivision: "state" },
              { code: "10", name: "Selangor", subdivision: "state" },
              { code: "11", name: "Terengganu", subdivision: "state" },
            ],
          },
          {
            code2: "MV",
            code3: "MDV",
            name: "Maldives",
            capital: "Mal\xe9",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "CE", name: "Central", subdivision: null },
              { code: "MLE", name: "Male", subdivision: null },
              { code: "NO", name: "North", subdivision: null },
              { code: "NC", name: "North Central", subdivision: null },
              { code: "SU", name: "South", subdivision: null },
              { code: "SC", name: "South Central", subdivision: null },
              { code: "UN", name: "Upper North", subdivision: null },
              { code: "US", name: "Upper South", subdivision: null },
            ],
          },
          {
            code2: "ML",
            code3: "MLI",
            name: "Mali",
            capital: "Bamako",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "BKO", name: "Bamako", subdivision: null },
              { code: "7", name: "Gao", subdivision: null },
              { code: "1", name: "Kayes", subdivision: null },
              { code: "8", name: "Kidal", subdivision: null },
              { code: "2", name: "Koulikoro", subdivision: null },
              { code: "5", name: "Mopti", subdivision: null },
              { code: "3", name: "Sikasso", subdivision: null },
              { code: "4", name: "S\xe9gou", subdivision: null },
              { code: "6", name: "Tombouctou", subdivision: null },
            ],
          },
          {
            code2: "MT",
            code3: "MLT",
            name: "Malta",
            capital: "Valletta",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "01", name: "Attard", subdivision: null },
              { code: "02", name: "Balzan", subdivision: null },
              { code: "03", name: "Birgu", subdivision: null },
              { code: "04", name: "Birkirkara", subdivision: null },
              { code: "05", name: "Bir\u017cebbu\u0121a", subdivision: null },
              { code: "06", name: "Bormla", subdivision: null },
              { code: "07", name: "Dingli", subdivision: null },
              { code: "08", name: "Fgura", subdivision: null },
              { code: "09", name: "Floriana", subdivision: null },
              { code: "10", name: "Fontana", subdivision: null },
              { code: "11", name: "Gudja", subdivision: null },
              { code: "13", name: "G\u0127ajnsielem", subdivision: null },
              { code: "14", name: "G\u0127arb", subdivision: null },
              { code: "15", name: "G\u0127arg\u0127ur", subdivision: null },
              { code: "16", name: "G\u0127asri", subdivision: null },
              { code: "17", name: "G\u0127axaq", subdivision: null },
              { code: "12", name: "G\u017cira", subdivision: null },
              { code: "19", name: "Iklin", subdivision: null },
              { code: "20", name: "Isla", subdivision: null },
              { code: "21", name: "Kalkara", subdivision: null },
              { code: "22", name: "Ker\u010bem", subdivision: null },
              { code: "23", name: "Kirkop", subdivision: null },
              { code: "24", name: "Lija", subdivision: null },
              { code: "25", name: "Luqa", subdivision: null },
              { code: "26", name: "Marsa", subdivision: null },
              { code: "27", name: "Marsaskala", subdivision: null },
              { code: "28", name: "Marsaxlokk", subdivision: null },
              { code: "29", name: "Mdina", subdivision: null },
              { code: "30", name: "Mellie\u0127a", subdivision: null },
              { code: "32", name: "Mosta", subdivision: null },
              { code: "33", name: "Mqabba", subdivision: null },
              { code: "34", name: "Msida", subdivision: null },
              { code: "35", name: "Mtarfa", subdivision: null },
              { code: "36", name: "Munxar", subdivision: null },
              { code: "31", name: "M\u0121arr", subdivision: null },
              { code: "37", name: "Nadur", subdivision: null },
              { code: "38", name: "Naxxar", subdivision: null },
              { code: "39", name: "Paola", subdivision: null },
              { code: "40", name: "Pembroke", subdivision: null },
              { code: "41", name: "Piet\xe0", subdivision: null },
              { code: "42", name: "Qala", subdivision: null },
              { code: "43", name: "Qormi", subdivision: null },
              { code: "44", name: "Qrendi", subdivision: null },
              { code: "45", name: "Rabat G\u0127awdex", subdivision: null },
              { code: "46", name: "Rabat Malta", subdivision: null },
              { code: "47", name: "Safi", subdivision: null },
              { code: "50", name: "San Lawrenz", subdivision: null },
              { code: "51", name: "San Pawl il-Ba\u0127ar", subdivision: null },
              { code: "48", name: "San \u0120iljan", subdivision: null },
              { code: "49", name: "San \u0120wann", subdivision: null },
              { code: "52", name: "Sannat", subdivision: null },
              { code: "53", name: "Santa Lu\u010bija", subdivision: null },
              { code: "54", name: "Santa Venera", subdivision: null },
              { code: "55", name: "Si\u0121\u0121iewi", subdivision: null },
              { code: "56", name: "Sliema", subdivision: null },
              { code: "57", name: "Swieqi", subdivision: null },
              { code: "58", name: "Ta' Xbiex", subdivision: null },
              { code: "59", name: "Tarxien", subdivision: null },
              { code: "60", name: "Valletta", subdivision: null },
              { code: "61", name: "Xag\u0127ra", subdivision: null },
              { code: "62", name: "Xewkija", subdivision: null },
              { code: "63", name: "Xg\u0127ajra", subdivision: null },
              { code: "18", name: "\u0126amrun", subdivision: null },
              { code: "64", name: "\u017babbar", subdivision: null },
              {
                code: "65",
                name: "\u017bebbu\u0121 G\u0127awdex",
                subdivision: null,
              },
              { code: "66", name: "\u017bebbu\u0121 Malta", subdivision: null },
              { code: "67", name: "\u017bejtun", subdivision: null },
              { code: "68", name: "\u017burrieq", subdivision: null },
            ],
          },
          {
            code2: "MH",
            code3: "MHL",
            name: "Marshall Islands",
            capital: "Majuro",
            region: "Oceania",
            subregion: "Micronesia",
            states: [
              { code: "L", name: "Ralik chain", subdivision: null },
              { code: "T", name: "Ratak chain", subdivision: null },
            ],
          },
          {
            code2: "MQ",
            code3: "MTQ",
            name: "Martinique",
            capital: "Fort-de-France",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "MR",
            code3: "MRT",
            name: "Mauritania",
            capital: "Nouakchott",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "07", name: "Adrar", subdivision: null },
              { code: "03", name: "Assaba", subdivision: null },
              { code: "05", name: "Brakna", subdivision: null },
              { code: "08", name: "Dakhlet Nou\xe2dhibou", subdivision: null },
              { code: "04", name: "Gorgol", subdivision: null },
              { code: "10", name: "Guidimaka", subdivision: null },
              { code: "01", name: "Hodh ech Chargui", subdivision: null },
              { code: "02", name: "Hodh el Gharbi", subdivision: null },
              { code: "12", name: "Inchiri", subdivision: null },
              { code: "NKC", name: "Nouakchott", subdivision: null },
              { code: "09", name: "Tagant", subdivision: null },
              { code: "11", name: "Tiris Zemmour", subdivision: null },
              { code: "06", name: "Trarza", subdivision: null },
            ],
          },
          {
            code2: "MU",
            code3: "MUS",
            name: "Mauritius",
            capital: "Port Louis",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "AG", name: "Agalega Islands", subdivision: null },
              { code: "BR", name: "Beau Bassin-Rose Hill", subdivision: null },
              { code: "BL", name: "Black River", subdivision: null },
              {
                code: "CC",
                name: "Cargados Carajos Shoals",
                subdivision: null,
              },
              { code: "CU", name: "Curepipe", subdivision: null },
              { code: "FL", name: "Flacq", subdivision: null },
              { code: "GP", name: "Grand Port", subdivision: null },
              { code: "MO", name: "Moka", subdivision: null },
              { code: "PA", name: "Pamplemousses", subdivision: null },
              { code: "PW", name: "Plaines Wilhems", subdivision: null },
              { code: "PL", name: "Port Louis", subdivision: null },
              { code: "PU", name: "Port Louis", subdivision: null },
              { code: "QB", name: "Quatre Bornes", subdivision: null },
              { code: "RR", name: "Rivi\xe8re du Rempart", subdivision: null },
              { code: "RO", name: "Rodrigues Island", subdivision: null },
              { code: "SA", name: "Savanne", subdivision: null },
              { code: "VP", name: "Vacoas-Phoenix", subdivision: null },
            ],
          },
          {
            code2: "YT",
            code3: "MYT",
            name: "Mayotte",
            capital: "Mamoudzou",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [],
          },
          {
            code2: "MX",
            code3: "MEX",
            name: "Mexico",
            capital: "Mexico City",
            region: "North America",
            subregion: "Central America",
            states: [
              {
                code: "DIF",
                name: "Distrito Federal",
                subdivision: "federal district",
              },
              { code: "AGU", name: "Aguascalientes", subdivision: "state" },
              { code: "BCN", name: "Baja California", subdivision: "state" },
              {
                code: "BCS",
                name: "Baja California Sur",
                subdivision: "state",
              },
              { code: "CAM", name: "Campeche", subdivision: "state" },
              { code: "CHP", name: "Chiapas", subdivision: "state" },
              { code: "CHH", name: "Chihuahua", subdivision: "state" },
              { code: "COA", name: "Coahuila", subdivision: "state" },
              { code: "COL", name: "Colima", subdivision: "state" },
              { code: "DUR", name: "Durango", subdivision: "state" },
              { code: "GUA", name: "Guanajuato", subdivision: "state" },
              { code: "GRO", name: "Guerrero", subdivision: "state" },
              { code: "HID", name: "Hidalgo", subdivision: "state" },
              { code: "JAL", name: "Jalisco", subdivision: "state" },
              { code: "MIC", name: "Michoac\xe1n", subdivision: "state" },
              { code: "MOR", name: "Morelos", subdivision: "state" },
              { code: "MEX", name: "M\xe9xico", subdivision: "state" },
              { code: "NAY", name: "Nayarit", subdivision: "state" },
              { code: "NLE", name: "Nuevo Le\xf3n", subdivision: "state" },
              { code: "OAX", name: "Oaxaca", subdivision: "state" },
              { code: "PUE", name: "Puebla", subdivision: "state" },
              { code: "QUE", name: "Quer\xe9taro", subdivision: "state" },
              { code: "ROO", name: "Quintana Roo", subdivision: "state" },
              { code: "SLP", name: "San Luis Potos\xed", subdivision: "state" },
              { code: "SIN", name: "Sinaloa", subdivision: "state" },
              { code: "SON", name: "Sonora", subdivision: "state" },
              { code: "TAB", name: "Tabasco", subdivision: "state" },
              { code: "TAM", name: "Tamaulipas", subdivision: "state" },
              { code: "TLA", name: "Tlaxcala", subdivision: "state" },
              { code: "VER", name: "Veracruz", subdivision: "state" },
              { code: "YUC", name: "Yucat\xe1n", subdivision: "state" },
              { code: "ZAC", name: "Zacatecas", subdivision: "state" },
            ],
          },
          {
            code2: "FM",
            code3: "FSM",
            name: "Federated States of Micronesia",
            capital: "Palikir",
            region: "Oceania",
            subregion: "Micronesia",
            states: [
              { code: "TRK", name: "Chuuk", subdivision: null },
              { code: "KSA", name: "Kosrae", subdivision: null },
              { code: "PNI", name: "Pohnpei", subdivision: null },
              { code: "YAP", name: "Yap", subdivision: null },
            ],
          },
          {
            code2: "MD",
            code3: "MDA",
            name: "Moldova",
            capital: "Chi\u0219in\u0103u",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "AN", name: "Anenii Noi", subdivision: null },
              { code: "BS", name: "Basarabeasca", subdivision: null },
              { code: "BR", name: "Briceni", subdivision: null },
              { code: "BA", name: "B\u0103l\u0163i", subdivision: null },
              { code: "CA", name: "Cahul", subdivision: null },
              { code: "CT", name: "Cantemir", subdivision: null },
              { code: "CU", name: "Chi\u015fin\u0103u", subdivision: null },
              { code: "CM", name: "Cimi\u015flia", subdivision: null },
              { code: "CR", name: "Criuleni", subdivision: null },
              {
                code: "CL",
                name: "C\u0103l\u0103ra\u015fi",
                subdivision: null,
              },
              { code: "CS", name: "C\u0103u\u015feni", subdivision: null },
              { code: "DO", name: "Dondu\u015feni", subdivision: null },
              { code: "DR", name: "Drochia", subdivision: null },
              { code: "DU", name: "Dub\u0103sari", subdivision: null },
              { code: "ED", name: "Edine\u0163", subdivision: null },
              { code: "FL", name: "Flore\u015fti", subdivision: null },
              { code: "FA", name: "F\u0103le\u015fti", subdivision: null },
              { code: "GL", name: "Glodeni", subdivision: null },
              {
                code: "GA",
                name: "G\u0103g\u0103uzia, Unitatea teritorial\u0103 autonom\u0103",
                subdivision: null,
              },
              { code: "HI", name: "H\xeence\u015fti", subdivision: null },
              { code: "IA", name: "Ialoveni", subdivision: null },
              { code: "LE", name: "Leova", subdivision: null },
              { code: "NI", name: "Nisporeni", subdivision: null },
              { code: "OC", name: "Ocni\u0163a", subdivision: null },
              { code: "OR", name: "Orhei", subdivision: null },
              { code: "RE", name: "Rezina", subdivision: null },
              { code: "RI", name: "R\xee\u015fcani", subdivision: null },
              { code: "SO", name: "Soroca", subdivision: null },
              { code: "ST", name: "Str\u0103\u015feni", subdivision: null },
              {
                code: "SN",
                name: "St\xeenga Nistrului, unitatea teritorial\u0103 din",
                subdivision: null,
              },
              { code: "SI", name: "S\xeengerei", subdivision: null },
              { code: "TA", name: "Taraclia", subdivision: null },
              { code: "TE", name: "Telene\u015fti", subdivision: null },
              { code: "BD", name: "Tighina", subdivision: null },
              { code: "UN", name: "Ungheni", subdivision: null },
              {
                code: "SD",
                name: "\u015eold\u0103ne\u015fti",
                subdivision: null,
              },
              { code: "SV", name: "\u015etefan Vod\u0103", subdivision: null },
            ],
          },
          {
            code2: "MC",
            code3: "MCO",
            name: "Monaco",
            capital: "Monaco",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "FO", name: "Fontvieille", subdivision: null },
              { code: "JE", name: "Jardin Exotique", subdivision: null },
              { code: "CL", name: "La Colle", subdivision: null },
              { code: "CO", name: "La Condamine", subdivision: null },
              { code: "GA", name: "La Gare", subdivision: null },
              { code: "SO", name: "La Source", subdivision: null },
              { code: "LA", name: "Larvotto", subdivision: null },
              { code: "MA", name: "Malbousquet", subdivision: null },
              { code: "MO", name: "Monaco-Ville", subdivision: null },
              { code: "MG", name: "Moneghetti", subdivision: null },
              { code: "MC", name: "Monte-Carlo", subdivision: null },
              { code: "MU", name: "Moulins", subdivision: null },
              { code: "PH", name: "Port-Hercule", subdivision: null },
              { code: "SR", name: "Saint-Roman", subdivision: null },
              { code: "SD", name: "Sainte-D\xe9vote", subdivision: null },
              { code: "SP", name: "Sp\xe9lugues", subdivision: null },
              { code: "VR", name: "Vallon de la Rousse", subdivision: null },
            ],
          },
          {
            code2: "MN",
            code3: "MNG",
            name: "Mongolia",
            capital: "Ulan Bator",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [
              { code: "073", name: "Arhangay", subdivision: null },
              { code: "071", name: "Bayan-\xd6lgiy", subdivision: null },
              { code: "069", name: "Bayanhongor", subdivision: null },
              { code: "067", name: "Bulgan", subdivision: null },
              { code: "037", name: "Darhan uul", subdivision: null },
              { code: "061", name: "Dornod", subdivision: null },
              { code: "063", name: "Dornogov\u012d", subdivision: null },
              { code: "059", name: "Dundgov\u012d", subdivision: null },
              { code: "057", name: "Dzavhan", subdivision: null },
              { code: "065", name: "Gov\u012d-Altay", subdivision: null },
              { code: "064", name: "Gov\u012d-S\xfcmber", subdivision: null },
              { code: "039", name: "Hentiy", subdivision: null },
              { code: "043", name: "Hovd", subdivision: null },
              { code: "041", name: "H\xf6vsg\xf6l", subdivision: null },
              { code: "035", name: "Orhon", subdivision: null },
              { code: "049", name: "Selenge", subdivision: null },
              { code: "051", name: "S\xfchbaatar", subdivision: null },
              { code: "047", name: "T\xf6v", subdivision: null },
              { code: "1", name: "Ulaanbaatar", subdivision: null },
              { code: "046", name: "Uvs", subdivision: null },
              { code: "053", name: "\xd6mn\xf6gov\u012d", subdivision: null },
              { code: "055", name: "\xd6v\xf6rhangay", subdivision: null },
            ],
          },
          {
            code2: "ME",
            code3: "MNE",
            name: "Montenegro",
            capital: "Podgorica",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "01", name: "Andrijevica", subdivision: null },
              { code: "02", name: "Bar", subdivision: null },
              { code: "03", name: "Berane", subdivision: null },
              { code: "04", name: "Bijelo Polje", subdivision: null },
              { code: "05", name: "Budva", subdivision: null },
              { code: "06", name: "Cetinje", subdivision: null },
              { code: "07", name: "Danilovgrad", subdivision: null },
              { code: "22", name: "Gusinje", subdivision: null },
              { code: "08", name: "Herceg-Novi", subdivision: null },
              { code: "09", name: "Kola\u0161in", subdivision: null },
              { code: "10", name: "Kotor", subdivision: null },
              { code: "11", name: "Mojkovac", subdivision: null },
              { code: "12", name: "Nik\u0161i\u0107", subdivision: null },
              { code: "23", name: "Petnjica", subdivision: null },
              { code: "13", name: "Plav", subdivision: null },
              { code: "14", name: "Pljevlja", subdivision: null },
              { code: "15", name: "Plu\u017eine", subdivision: null },
              { code: "16", name: "Podgorica", subdivision: null },
              { code: "17", name: "Ro\u017eaje", subdivision: null },
              { code: "19", name: "Tivat", subdivision: null },
              { code: "20", name: "Ulcinj", subdivision: null },
              { code: "18", name: "\u0160avnik", subdivision: null },
              { code: "21", name: "\u017dabljak", subdivision: null },
            ],
          },
          {
            code2: "MS",
            code3: "MSR",
            name: "Montserrat",
            capital: "Plymouth",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "MA",
            code3: "MAR",
            name: "Morocco",
            capital: "Rabat",
            region: "Africa",
            subregion: "Northern Africa",
            states: [
              { code: "09", name: "Chaouia-Ouardigha", subdivision: null },
              { code: "10", name: "Doukhala-Abda", subdivision: null },
              { code: "05", name: "F\xe8s-Boulemane", subdivision: null },
              {
                code: "02",
                name: "Gharb-Chrarda-Beni Hssen",
                subdivision: null,
              },
              { code: "08", name: "Grand Casablanca", subdivision: null },
              { code: "14", name: "Guelmim-Es Smara", subdivision: null },
              { code: "04", name: "L'Oriental", subdivision: null },
              {
                code: "15",
                name: "La\xe2youne-Boujdour-Sakia el Hamra",
                subdivision: null,
              },
              {
                code: "11",
                name: "Marrakech-Tensift-Al Haouz",
                subdivision: null,
              },
              { code: "06", name: "Mekn\xe8s-Tafilalet", subdivision: null },
              { code: "16", name: "Oued ed Dahab-Lagouira", subdivision: null },
              {
                code: "07",
                name: "Rabat-Sal\xe9-Zemmour-Zaer",
                subdivision: null,
              },
              { code: "13", name: "Souss-Massa-Dr\xe2a", subdivision: null },
              { code: "12", name: "Tadla-Azilal", subdivision: null },
              { code: "01", name: "Tanger-T\xe9touan", subdivision: null },
              {
                code: "03",
                name: "Taza-Al Hoceima-Taounate",
                subdivision: null,
              },
            ],
          },
          {
            code2: "MZ",
            code3: "MOZ",
            name: "Mozambique",
            capital: "Maputo",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "P", name: "Cabo Delgado", subdivision: null },
              { code: "G", name: "Gaza", subdivision: null },
              { code: "I", name: "Inhambane", subdivision: null },
              { code: "B", name: "Manica", subdivision: null },
              { code: "MPM", name: "Maputo", subdivision: null },
              { code: "L", name: "Maputo", subdivision: null },
              { code: "N", name: "Nampula", subdivision: null },
              { code: "A", name: "Niassa", subdivision: null },
              { code: "S", name: "Sofala", subdivision: null },
              { code: "T", name: "Tete", subdivision: null },
              { code: "Q", name: "Zamb\xe9zia", subdivision: null },
            ],
          },
          {
            code2: "MM",
            code3: "MMR",
            name: "Myanmar",
            capital: "Naypyidaw",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "07", name: "Ayeyarwady", subdivision: null },
              { code: "02", name: "Bago", subdivision: null },
              { code: "14", name: "Chin", subdivision: null },
              { code: "11", name: "Kachin", subdivision: null },
              { code: "12", name: "Kayah", subdivision: null },
              { code: "13", name: "Kayin", subdivision: null },
              { code: "03", name: "Magway", subdivision: null },
              { code: "04", name: "Mandalay", subdivision: null },
              { code: "15", name: "Mon", subdivision: null },
              { code: "16", name: "Rakhine", subdivision: null },
              { code: "01", name: "Sagaing", subdivision: null },
              { code: "17", name: "Shan", subdivision: null },
              { code: "05", name: "Tanintharyi", subdivision: null },
              { code: "06", name: "Yangon", subdivision: null },
            ],
          },
          {
            code2: "NA",
            code3: "NAM",
            name: "Namibia",
            capital: "Windhoek",
            region: "Africa",
            subregion: "Southern Africa",
            states: [
              { code: "ER", name: "Erongo", subdivision: null },
              { code: "HA", name: "Hardap", subdivision: null },
              { code: "KA", name: "Karas", subdivision: null },
              { code: "KE", name: "Kavango East", subdivision: null },
              { code: "KW", name: "Kavango West", subdivision: null },
              { code: "KH", name: "Khomas", subdivision: null },
              { code: "KU", name: "Kunene", subdivision: null },
              { code: "OW", name: "Ohangwena", subdivision: null },
              { code: "OH", name: "Omaheke", subdivision: null },
              { code: "OS", name: "Omusati", subdivision: null },
              { code: "ON", name: "Oshana", subdivision: null },
              { code: "OT", name: "Oshikoto", subdivision: null },
              { code: "OD", name: "Otjozondjupa", subdivision: null },
              { code: "CA", name: "Zambezi", subdivision: null },
            ],
          },
          {
            code2: "NR",
            code3: "NRU",
            name: "Nauru",
            capital: "Yaren",
            region: "Oceania",
            subregion: "Micronesia",
            states: [
              { code: "01", name: "Aiwo", subdivision: null },
              { code: "02", name: "Anabar", subdivision: null },
              { code: "03", name: "Anetan", subdivision: null },
              { code: "04", name: "Anibare", subdivision: null },
              { code: "05", name: "Baiti", subdivision: null },
              { code: "06", name: "Boe", subdivision: null },
              { code: "07", name: "Buada", subdivision: null },
              { code: "08", name: "Denigomodu", subdivision: null },
              { code: "09", name: "Ewa", subdivision: null },
              { code: "10", name: "Ijuw", subdivision: null },
              { code: "11", name: "Meneng", subdivision: null },
              { code: "12", name: "Nibok", subdivision: null },
              { code: "13", name: "Uaboe", subdivision: null },
              { code: "14", name: "Yaren", subdivision: null },
            ],
          },
          {
            code2: "NP",
            code3: "NPL",
            name: "Nepal",
            capital: "Kathmandu",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "2", name: "Madhya Pashchimanchal", subdivision: null },
              { code: "1", name: "Madhyamanchal", subdivision: null },
              { code: "3", name: "Pashchimanchal", subdivision: null },
              { code: "4", name: "Purwanchal", subdivision: null },
              { code: "5", name: "Sudur Pashchimanchal", subdivision: null },
            ],
          },
          {
            code2: "NL",
            code3: "NLD",
            name: "Netherlands",
            capital: "Amsterdam",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "DR", name: "Drenthe", subdivision: "Province" },
              { code: "FL", name: "Flevoland", subdivision: "Province" },
              { code: "FR", name: "Frysl\xe2n", subdivision: "Province" },
              { code: "GE", name: "Gelderland", subdivision: "Province" },
              { code: "GR", name: "Groningen", subdivision: "Province" },
              { code: "LI", name: "Limburg", subdivision: "Province" },
              { code: "NB", name: "Noord-Brabant", subdivision: "Province" },
              { code: "NH", name: "Noord-Holland", subdivision: "Province" },
              { code: "OV", name: "Overijssel", subdivision: "Province" },
              { code: "UT", name: "Utrecht", subdivision: "Province" },
              { code: "ZE", name: "Zeeland", subdivision: "Province" },
              { code: "ZH", name: "Zuid-Holland", subdivision: "Province" },
              { code: "AW", name: "Aruba", subdivision: "country" },
              { code: "CW", name: "Cura\xe7ao", subdivision: "country" },
              { code: "SX", name: "Sint Maarten", subdivision: "country" },
              {
                code: "BQ1",
                name: "Bonaire",
                subdivision: "special municipality",
              },
              {
                code: "BQ2",
                name: "Saba",
                subdivision: "special municipality",
              },
              {
                code: "BQ3",
                name: "Sint Eustatius",
                subdivision: "special municipality",
              },
            ],
          },
          {
            code2: "NC",
            code3: "NCL",
            name: "New Caledonia",
            capital: "Noum\xe9a",
            region: "Oceania",
            subregion: "Melanesia",
            states: [],
          },
          {
            code2: "NZ",
            code3: "NZL",
            name: "New Zealand",
            capital: "Wellington",
            region: "Oceania",
            subregion: "Australia and New Zealand",
            states: [
              { code: "N", name: "North Island", subdivision: "Island" },
              { code: "S", name: "South Island", subdivision: "Island" },
              {
                code: "AUK",
                name: "Auckland",
                subdivision: "regional council",
              },
              {
                code: "BOP",
                name: "Bay of Plenty",
                subdivision: "regional council",
              },
              {
                code: "CAN",
                name: "Canterbury",
                subdivision: "regional council",
              },
              {
                code: "HKB",
                name: "Hawke's Bay",
                subdivision: "regional council",
              },
              {
                code: "MWT",
                name: "Manawatu-Wanganui",
                subdivision: "regional council",
              },
              {
                code: "NTL",
                name: "Northland",
                subdivision: "regional council",
              },
              { code: "OTA", name: "Otago", subdivision: "regional council" },
              {
                code: "STL",
                name: "Southland",
                subdivision: "regional council",
              },
              {
                code: "TKI",
                name: "Taranaki",
                subdivision: "regional council",
              },
              { code: "WKO", name: "Waikato", subdivision: "regional council" },
              {
                code: "WGN",
                name: "Wellington",
                subdivision: "regional council",
              },
              {
                code: "WTC",
                name: "West Coast",
                subdivision: "regional council",
              },
              {
                code: "CIT",
                name: "Chatham Islands Territory",
                subdivision: "special island authority",
              },
              {
                code: "GIS",
                name: "Gisborne District",
                subdivision: "unitary authority",
              },
              {
                code: "MBH",
                name: "Marlborough District",
                subdivision: "unitary authority",
              },
              {
                code: "NSN",
                name: "Nelson City",
                subdivision: "unitary authority",
              },
              {
                code: "TAS",
                name: "Tasman District",
                subdivision: "unitary authority",
              },
            ],
          },
          {
            code2: "NI",
            code3: "NIC",
            name: "Nicaragua",
            capital: "Managua",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "AN", name: "Atl\xe1ntico Norte", subdivision: null },
              { code: "AS", name: "Atl\xe1ntico Sur", subdivision: null },
              { code: "BO", name: "Boaco", subdivision: null },
              { code: "CA", name: "Carazo", subdivision: null },
              { code: "CI", name: "Chinandega", subdivision: null },
              { code: "CO", name: "Chontales", subdivision: null },
              { code: "ES", name: "Estel\xed", subdivision: null },
              { code: "GR", name: "Granada", subdivision: null },
              { code: "JI", name: "Jinotega", subdivision: null },
              { code: "LE", name: "Le\xf3n", subdivision: null },
              { code: "MD", name: "Madriz", subdivision: null },
              { code: "MN", name: "Managua", subdivision: null },
              { code: "MS", name: "Masaya", subdivision: null },
              { code: "MT", name: "Matagalpa", subdivision: null },
              { code: "NS", name: "Nueva Segovia", subdivision: null },
              { code: "RI", name: "Rivas", subdivision: null },
              { code: "SJ", name: "R\xedo San Juan", subdivision: null },
            ],
          },
          {
            code2: "NE",
            code3: "NER",
            name: "Niger",
            capital: "Niamey",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "1", name: "Agadez", subdivision: null },
              { code: "2", name: "Diffa", subdivision: null },
              { code: "3", name: "Dosso", subdivision: null },
              { code: "4", name: "Maradi", subdivision: null },
              { code: "8", name: "Niamey", subdivision: null },
              { code: "5", name: "Tahoua", subdivision: null },
              { code: "6", name: "Tillab\xe9ri", subdivision: null },
              { code: "7", name: "Zinder", subdivision: null },
            ],
          },
          {
            code2: "NG",
            code3: "NGA",
            name: "Nigeria",
            capital: "Abuja",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "AB", name: "Abia", subdivision: null },
              {
                code: "FC",
                name: "Abuja Federal Capital Territory",
                subdivision: null,
              },
              { code: "AD", name: "Adamawa", subdivision: null },
              { code: "AK", name: "Akwa Ibom", subdivision: null },
              { code: "AN", name: "Anambra", subdivision: null },
              { code: "BA", name: "Bauchi", subdivision: null },
              { code: "BY", name: "Bayelsa", subdivision: null },
              { code: "BE", name: "Benue", subdivision: null },
              { code: "BO", name: "Borno", subdivision: null },
              { code: "CR", name: "Cross River", subdivision: null },
              { code: "DE", name: "Delta", subdivision: null },
              { code: "EB", name: "Ebonyi", subdivision: null },
              { code: "ED", name: "Edo", subdivision: null },
              { code: "EK", name: "Ekiti", subdivision: null },
              { code: "EN", name: "Enugu", subdivision: null },
              { code: "GO", name: "Gombe", subdivision: null },
              { code: "IM", name: "Imo", subdivision: null },
              { code: "JI", name: "Jigawa", subdivision: null },
              { code: "KD", name: "Kaduna", subdivision: null },
              { code: "KN", name: "Kano", subdivision: null },
              { code: "KT", name: "Katsina", subdivision: null },
              { code: "KE", name: "Kebbi", subdivision: null },
              { code: "KO", name: "Kogi", subdivision: null },
              { code: "KW", name: "Kwara", subdivision: null },
              { code: "LA", name: "Lagos", subdivision: null },
              { code: "NA", name: "Nassarawa", subdivision: null },
              { code: "NI", name: "Niger", subdivision: null },
              { code: "OG", name: "Ogun", subdivision: null },
              { code: "ON", name: "Ondo", subdivision: null },
              { code: "OS", name: "Osun", subdivision: null },
              { code: "OY", name: "Oyo", subdivision: null },
              { code: "PL", name: "Plateau", subdivision: null },
              { code: "RI", name: "Rivers", subdivision: null },
              { code: "SO", name: "Sokoto", subdivision: null },
              { code: "TA", name: "Taraba", subdivision: null },
              { code: "YO", name: "Yobe", subdivision: null },
              { code: "ZA", name: "Zamfara", subdivision: null },
            ],
          },
          {
            code2: "NU",
            code3: "NIU",
            name: "Niue",
            capital: "Alofi",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "NF",
            code3: "NFK",
            name: "Norfolk Island",
            capital: "Kingston",
            region: "Oceania",
            subregion: "Australia and New Zealand",
            states: [],
          },
          {
            code2: "KP",
            code3: "PRK",
            name: "North Korea",
            capital: "Pyongyang",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [
              { code: "04", name: "Chagang", subdivision: null },
              { code: "07", name: "Kangwon", subdivision: null },
              { code: "09", name: "North Hamgyong", subdivision: null },
              { code: "06", name: "North Hwanghae", subdivision: null },
              { code: "03", name: "North Pyongan", subdivision: null },
              { code: "01", name: "Pyongyang", subdivision: null },
              { code: "13", name: "Rason", subdivision: null },
              { code: "10", name: "Ryanggang", subdivision: null },
              { code: "08", name: "South Hamgyong", subdivision: null },
              { code: "05", name: "South Hwanghae", subdivision: null },
              { code: "02", name: "South Pyongan", subdivision: null },
            ],
          },
          {
            code2: "MP",
            code3: "MNP",
            name: "Northern Mariana Islands",
            capital: "Saipan",
            region: "Oceania",
            subregion: "Micronesia",
            states: [],
          },
          {
            code2: "NO",
            code3: "NOR",
            name: "Norway",
            capital: "Oslo",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "02", name: "Akershus", subdivision: null },
              { code: "09", name: "Aust-Agder", subdivision: null },
              { code: "06", name: "Buskerud", subdivision: null },
              { code: "20", name: "Finnmark", subdivision: null },
              { code: "04", name: "Hedmark", subdivision: null },
              { code: "12", name: "Hordaland", subdivision: null },
              { code: "22", name: "Jan Mayen", subdivision: null },
              { code: "15", name: "M\xf8re og Romsdal", subdivision: null },
              { code: "17", name: "Nord-Tr\xf8ndelag", subdivision: null },
              { code: "18", name: "Nordland", subdivision: null },
              { code: "05", name: "Oppland", subdivision: null },
              { code: "03", name: "Oslo", subdivision: null },
              { code: "11", name: "Rogaland", subdivision: null },
              { code: "14", name: "Sogn og Fjordane", subdivision: null },
              { code: "21", name: "Svalbard", subdivision: null },
              { code: "16", name: "S\xf8r-Tr\xf8ndelag", subdivision: null },
              { code: "08", name: "Telemark", subdivision: null },
              { code: "19", name: "Troms", subdivision: null },
              { code: "10", name: "Vest-Agder", subdivision: null },
              { code: "07", name: "Vestfold", subdivision: null },
              { code: "01", name: "\xd8stfold", subdivision: null },
            ],
          },
          {
            code2: "OM",
            code3: "OMN",
            name: "Oman",
            capital: "Muscat",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              {
                code: "DA",
                name: "Ad D\u0101khil\u012byah",
                subdivision: null,
              },
              { code: "BU", name: "Al Buraym\u012b", subdivision: null },
              { code: "BA", name: "Al B\u0101\u0163inah", subdivision: null },
              { code: "WU", name: "Al Wus\u0163\xe1", subdivision: null },
              { code: "SH", name: "Ash Sharq\u012byah", subdivision: null },
              {
                code: "ZA",
                name: "Az\u0327 Z\u0327\u0101hirah",
                subdivision: null,
              },
              { code: "MA", name: "Masqa\u0163", subdivision: null },
              { code: "MU", name: "Musandam", subdivision: null },
              { code: "ZU", name: "Z\u0327uf\u0101r", subdivision: null },
            ],
          },
          {
            code2: "PK",
            code3: "PAK",
            name: "Pakistan",
            capital: "Islamabad",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "JK", name: "Azad Kashmir", subdivision: null },
              { code: "BA", name: "Balochistan", subdivision: null },
              {
                code: "TA",
                name: "Federally Administered Tribal Areas",
                subdivision: null,
              },
              { code: "GB", name: "Gilgit-Baltistan", subdivision: null },
              { code: "IS", name: "Islamabad", subdivision: null },
              { code: "KP", name: "Khyber Pakhtunkhwa", subdivision: null },
              { code: "PB", name: "Punjab", subdivision: null },
              { code: "SD", name: "Sindh", subdivision: null },
            ],
          },
          {
            code2: "PW",
            code3: "PLW",
            name: "Palau",
            capital: "Ngerulmud",
            region: "Oceania",
            subregion: "Micronesia",
            states: [
              { code: "002", name: "Aimeliik", subdivision: null },
              { code: "004", name: "Airai", subdivision: null },
              { code: "010", name: "Angaur", subdivision: null },
              { code: "050", name: "Hatobohei", subdivision: null },
              { code: "100", name: "Kayangel", subdivision: null },
              { code: "150", name: "Koror", subdivision: null },
              { code: "212", name: "Melekeok", subdivision: null },
              { code: "214", name: "Ngaraard", subdivision: null },
              { code: "218", name: "Ngarchelong", subdivision: null },
              { code: "222", name: "Ngardmau", subdivision: null },
              { code: "224", name: "Ngatpang", subdivision: null },
              { code: "226", name: "Ngchesar", subdivision: null },
              { code: "227", name: "Ngeremlengui", subdivision: null },
              { code: "228", name: "Ngiwal", subdivision: null },
              { code: "350", name: "Peleliu", subdivision: null },
              { code: "370", name: "Sonsorol", subdivision: null },
            ],
          },
          {
            code2: "PS",
            code3: "PSE",
            name: "Palestine",
            capital: "Ramallah",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "BTH", name: "Bethlehem", subdivision: null },
              { code: "DEB", name: "Deir El Balah", subdivision: null },
              { code: "GZA", name: "Gaza", subdivision: null },
              { code: "HBN", name: "Hebron", subdivision: null },
              { code: "JEN", name: "Jenin", subdivision: null },
              {
                code: "JRH",
                name: "Jericho \u2013 Al Aghwar",
                subdivision: null,
              },
              { code: "JEM", name: "Jerusalem", subdivision: null },
              { code: "KYS", name: "Khan Yunis", subdivision: null },
              { code: "NBS", name: "Nablus", subdivision: null },
              { code: "NGZ", name: "North Gaza", subdivision: null },
              { code: "QQA", name: "Qalqilya", subdivision: null },
              { code: "RFH", name: "Rafah", subdivision: null },
              { code: "RBH", name: "Ramallah", subdivision: null },
              { code: "SLT", name: "Salfit", subdivision: null },
              { code: "TBS", name: "Tubas", subdivision: null },
              { code: "TKM", name: "Tulkarm", subdivision: null },
            ],
          },
          {
            code2: "PA",
            code3: "PAN",
            name: "Panama",
            capital: "Panama City",
            region: "North America",
            subregion: "Central America",
            states: [
              { code: "1", name: "Bocas del Toro", subdivision: null },
              { code: "4", name: "Chiriqu\xed", subdivision: null },
              { code: "2", name: "Cocl\xe9", subdivision: null },
              { code: "3", name: "Col\xf3n", subdivision: null },
              { code: "5", name: "Dari\xe9n", subdivision: null },
              { code: "EM", name: "Ember\xe1", subdivision: null },
              { code: "6", name: "Herrera", subdivision: null },
              { code: "KY", name: "Kuna Yala", subdivision: null },
              { code: "7", name: "Los Santos", subdivision: null },
              { code: "NB", name: "Ng\xf6be-Bugl\xe9", subdivision: null },
              { code: "8", name: "Panam\xe1", subdivision: null },
              { code: "10", name: "Panam\xe1 Oeste", subdivision: null },
              { code: "9", name: "Veraguas", subdivision: null },
            ],
          },
          {
            code2: "PG",
            code3: "PNG",
            name: "Papua New Guinea",
            capital: "Port Moresby",
            region: "Oceania",
            subregion: "Melanesia",
            states: [
              { code: "NSB", name: "Bougainville", subdivision: null },
              { code: "CPM", name: "Central", subdivision: null },
              { code: "CPK", name: "Chimbu", subdivision: null },
              { code: "EBR", name: "East New Britain", subdivision: null },
              { code: "ESW", name: "East Sepik", subdivision: null },
              { code: "EHG", name: "Eastern Highlands", subdivision: null },
              { code: "EPW", name: "Enga", subdivision: null },
              { code: "GPK", name: "Gulf", subdivision: null },
              { code: "MPM", name: "Madang", subdivision: null },
              { code: "MRL", name: "Manus", subdivision: null },
              { code: "MBA", name: "Milne Bay", subdivision: null },
              { code: "MPL", name: "Morobe", subdivision: null },
              {
                code: "NCD",
                name: "National Capital District",
                subdivision: null,
              },
              { code: "NIK", name: "New Ireland", subdivision: null },
              { code: "NPP", name: "Northern", subdivision: null },
              { code: "SAN", name: "Sandaun", subdivision: null },
              { code: "SHM", name: "Southern Highlands", subdivision: null },
              { code: "WBK", name: "West New Britain", subdivision: null },
              { code: "WPD", name: "Western", subdivision: null },
              { code: "WHM", name: "Western Highlands", subdivision: null },
            ],
          },
          {
            code2: "PY",
            code3: "PRY",
            name: "Paraguay",
            capital: "Asunci\xf3n",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "16", name: "Alto Paraguay", subdivision: null },
              { code: "10", name: "Alto Paran\xe1", subdivision: null },
              { code: "13", name: "Amambay", subdivision: null },
              { code: "ASU", name: "Asunci\xf3n", subdivision: null },
              { code: "19", name: "Boquer\xf3n", subdivision: null },
              { code: "5", name: "Caaguaz\xfa", subdivision: null },
              { code: "6", name: "Caazap\xe1", subdivision: null },
              { code: "14", name: "Canindey\xfa", subdivision: null },
              { code: "11", name: "Central", subdivision: null },
              { code: "1", name: "Concepci\xf3n", subdivision: null },
              { code: "3", name: "Cordillera", subdivision: null },
              { code: "4", name: "Guair\xe1", subdivision: null },
              { code: "7", name: "Itap\xfaa", subdivision: null },
              { code: "8", name: "Misiones", subdivision: null },
              { code: "9", name: "Paraguar\xed", subdivision: null },
              { code: "15", name: "Presidente Hayes", subdivision: null },
              { code: "2", name: "San Pedro", subdivision: null },
              { code: "12", name: "\xd1eembuc\xfa", subdivision: null },
            ],
          },
          {
            code2: "PE",
            code3: "PER",
            name: "Peru",
            capital: "Lima",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "AMA", name: "Amazonas", subdivision: null },
              { code: "ANC", name: "Ancash", subdivision: null },
              { code: "APU", name: "Apur\xedmac", subdivision: null },
              { code: "ARE", name: "Arequipa", subdivision: null },
              { code: "AYA", name: "Ayacucho", subdivision: null },
              { code: "CAJ", name: "Cajamarca", subdivision: null },
              { code: "CUS", name: "Cusco", subdivision: null },
              { code: "CAL", name: "El Callao", subdivision: null },
              { code: "HUV", name: "Huancavelica", subdivision: null },
              { code: "HUC", name: "Hu\xe1nuco", subdivision: null },
              { code: "ICA", name: "Ica", subdivision: null },
              { code: "JUN", name: "Jun\xedn", subdivision: null },
              { code: "LAL", name: "La Libertad", subdivision: null },
              { code: "LAM", name: "Lambayeque", subdivision: null },
              { code: "LIM", name: "Lima", subdivision: null },
              { code: "LOR", name: "Loreto", subdivision: null },
              { code: "MDD", name: "Madre de Dios", subdivision: null },
              { code: "MOQ", name: "Moquegua", subdivision: null },
              {
                code: "LMA",
                name: "Municipalidad Metropolitana de Lima",
                subdivision: null,
              },
              { code: "PAS", name: "Pasco", subdivision: null },
              { code: "PIU", name: "Piura", subdivision: null },
              { code: "PUN", name: "Puno", subdivision: null },
              { code: "SAM", name: "San Mart\xedn", subdivision: null },
              { code: "TAC", name: "Tacna", subdivision: null },
              { code: "TUM", name: "Tumbes", subdivision: null },
              { code: "UCA", name: "Ucayali", subdivision: null },
            ],
          },
          {
            code2: "PH",
            code3: "PHL",
            name: "Philippines",
            capital: "Manila",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              {
                code: "14",
                name: "Autonomous Region in Muslim Mindanao",
                subdivision: null,
              },
              { code: "05", name: "Bicol", subdivision: null },
              { code: "02", name: "Cagayan Valley", subdivision: null },
              { code: "40", name: "Calabarzon", subdivision: null },
              { code: "13", name: "Caraga", subdivision: null },
              { code: "03", name: "Central Luzon", subdivision: null },
              { code: "07", name: "Central Visayas", subdivision: null },
              {
                code: "15",
                name: "Cordillera Administrative Region",
                subdivision: null,
              },
              { code: "11", name: "Davao", subdivision: null },
              { code: "08", name: "Eastern Visayas", subdivision: null },
              { code: "01", name: "Ilocos", subdivision: null },
              { code: "41", name: "Mimaropa", subdivision: null },
              {
                code: "00",
                name: "National Capital Region",
                subdivision: null,
              },
              { code: "10", name: "Northern Mindanao", subdivision: null },
              { code: "12", name: "Soccsksargen", subdivision: null },
              { code: "06", name: "Western Visayas", subdivision: null },
              { code: "09", name: "Zamboanga Peninsula", subdivision: null },
            ],
          },
          {
            code2: "PN",
            code3: "PCN",
            name: "Pitcairn Islands",
            capital: "Adamstown",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "PL",
            code3: "POL",
            name: "Poland",
            capital: "Warsaw",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "DS", name: "Dolno\u015bl\u0105skie", subdivision: null },
              { code: "KP", name: "Kujawsko-pomorskie", subdivision: null },
              { code: "LU", name: "Lubelskie", subdivision: null },
              { code: "LB", name: "Lubuskie", subdivision: null },
              { code: "MZ", name: "Mazowieckie", subdivision: null },
              { code: "MA", name: "Ma\u0142opolskie", subdivision: null },
              { code: "OP", name: "Opolskie", subdivision: null },
              { code: "PK", name: "Podkarpackie", subdivision: null },
              { code: "PD", name: "Podlaskie", subdivision: null },
              { code: "PM", name: "Pomorskie", subdivision: null },
              {
                code: "WN",
                name: "Warmi\u0144sko-mazurskie",
                subdivision: null,
              },
              { code: "WP", name: "Wielkopolskie", subdivision: null },
              { code: "ZP", name: "Zachodniopomorskie", subdivision: null },
              { code: "LD", name: "\u0141\xf3dzkie", subdivision: null },
              { code: "SL", name: "\u015al\u0105skie", subdivision: null },
              {
                code: "SK",
                name: "\u015awi\u0119tokrzyskie",
                subdivision: null,
              },
            ],
          },
          {
            code2: "PT",
            code3: "PRT",
            name: "Portugal",
            capital: "Lisbon",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "01", name: "Aveiro", subdivision: null },
              { code: "02", name: "Beja", subdivision: null },
              { code: "03", name: "Braga", subdivision: null },
              { code: "04", name: "Bragan\xe7a", subdivision: null },
              { code: "05", name: "Castelo Branco", subdivision: null },
              { code: "06", name: "Coimbra", subdivision: null },
              { code: "08", name: "Faro", subdivision: null },
              { code: "09", name: "Guarda", subdivision: null },
              { code: "10", name: "Leiria", subdivision: null },
              { code: "11", name: "Lisboa", subdivision: null },
              { code: "12", name: "Portalegre", subdivision: null },
              { code: "13", name: "Porto", subdivision: null },
              {
                code: "30",
                name: "Regi\xe3o Aut\xf3noma da Madeira",
                subdivision: null,
              },
              {
                code: "20",
                name: "Regi\xe3o Aut\xf3noma dos A\xe7ores",
                subdivision: null,
              },
              { code: "14", name: "Santar\xe9m", subdivision: null },
              { code: "15", name: "Set\xfabal", subdivision: null },
              { code: "16", name: "Viana do Castelo", subdivision: null },
              { code: "17", name: "Vila Real", subdivision: null },
              { code: "18", name: "Viseu", subdivision: null },
              { code: "07", name: "\xc9vora", subdivision: null },
            ],
          },
          {
            code2: "PR",
            code3: "PRI",
            name: "Puerto Rico",
            capital: "San Juan",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "QA",
            code3: "QAT",
            name: "Qatar",
            capital: "Doha",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "DA", name: "Ad Daw\u1e29ah", subdivision: null },
              {
                code: "KH",
                name: "Al Khawr wa adh Dhakh\u012brah",
                subdivision: null,
              },
              { code: "WA", name: "Al Wakrah", subdivision: null },
              { code: "RA", name: "Ar Rayy\u0101n", subdivision: null },
              { code: "MS", name: "Ash Sham\u0101l", subdivision: null },
              {
                code: "ZA",
                name: "Az\u0327 Za\u0327`\u0101yin",
                subdivision: null,
              },
              { code: "US", name: "Umm \u015eal\u0101l", subdivision: null },
            ],
          },
          {
            code2: "XK",
            code3: "KOS",
            name: "Republic of Kosovo",
            capital: "Pristina",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [],
          },
          {
            code2: "RE",
            code3: "REU",
            name: "R\xe9union",
            capital: "Saint-Denis",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [],
          },
          {
            code2: "RO",
            code3: "ROU",
            name: "Romania",
            capital: "Bucharest",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              { code: "AB", name: "Alba", subdivision: null },
              { code: "AR", name: "Arad", subdivision: null },
              { code: "AG", name: "Arge\u0219", subdivision: null },
              { code: "BC", name: "Bac\u0103u", subdivision: null },
              { code: "BH", name: "Bihor", subdivision: null },
              {
                code: "BN",
                name: "Bistri\u021ba-N\u0103s\u0103ud",
                subdivision: null,
              },
              { code: "BT", name: "Boto\u0219ani", subdivision: null },
              { code: "BV", name: "Bra\u0219ov", subdivision: null },
              { code: "BR", name: "Br\u0103ila", subdivision: null },
              { code: "B", name: "Bucure\u0219ti", subdivision: null },
              { code: "BZ", name: "Buz\u0103u", subdivision: null },
              { code: "CS", name: "Cara\u0219-Severin", subdivision: null },
              { code: "CJ", name: "Cluj", subdivision: null },
              { code: "CT", name: "Constan\u021ba", subdivision: null },
              { code: "CV", name: "Covasna", subdivision: null },
              {
                code: "CL",
                name: "C\u0103l\u0103ra\u0219i",
                subdivision: null,
              },
              { code: "DJ", name: "Dolj", subdivision: null },
              { code: "DB", name: "D\xe2mbovi\u021ba", subdivision: null },
              { code: "GL", name: "Gala\u021bi", subdivision: null },
              { code: "GR", name: "Giurgiu", subdivision: null },
              { code: "GJ", name: "Gorj", subdivision: null },
              { code: "HR", name: "Harghita", subdivision: null },
              { code: "HD", name: "Hunedoara", subdivision: null },
              { code: "IL", name: "Ialomi\u021ba", subdivision: null },
              { code: "IS", name: "Ia\u0219i", subdivision: null },
              { code: "IF", name: "Ilfov", subdivision: null },
              { code: "MM", name: "Maramure\u0219", subdivision: null },
              { code: "MH", name: "Mehedin\u021bi", subdivision: null },
              { code: "MS", name: "Mure\u0219", subdivision: null },
              { code: "NT", name: "Neam\u021b", subdivision: null },
              { code: "OT", name: "Olt", subdivision: null },
              { code: "PH", name: "Prahova", subdivision: null },
              { code: "SM", name: "Satu Mare", subdivision: null },
              { code: "SB", name: "Sibiu", subdivision: null },
              { code: "SV", name: "Suceava", subdivision: null },
              { code: "SJ", name: "S\u0103laj", subdivision: null },
              { code: "TR", name: "Teleorman", subdivision: null },
              { code: "TM", name: "Timi\u0219", subdivision: null },
              { code: "TL", name: "Tulcea", subdivision: null },
              { code: "VS", name: "Vaslui", subdivision: null },
              { code: "VN", name: "Vrancea", subdivision: null },
              { code: "VL", name: "V\xe2lcea", subdivision: null },
            ],
          },
          {
            code2: "RU",
            code3: "RUS",
            name: "Russia",
            capital: "Moscow",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              {
                code: "AMU",
                name: "Amurskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "ARK",
                name: "Arkhangel'skaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "AST",
                name: "Astrakhanskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "BEL",
                name: "Belgorodskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "BRY",
                name: "Bryanskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "CHE",
                name: "Chelyabinskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "IRK",
                name: "Irkutskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "IVA",
                name: "Ivanovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KGD",
                name: "Kaliningradskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KLU",
                name: "Kaluzhskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KEM",
                name: "Kemerovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KIR",
                name: "Kirovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KOS",
                name: "Kostromskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KGN",
                name: "Kurganskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "KRS",
                name: "Kurskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "LEN",
                name: "Leningradskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "LIP",
                name: "Lipetskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "MAG",
                name: "Magadanskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "MOS",
                name: "Moskovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "MUR",
                name: "Murmanskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "NIZ",
                name: "Nizhegorodskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "NGR",
                name: "Novgorodskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "NVS",
                name: "Novosibirskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "OMS",
                name: "Omskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "ORE",
                name: "Orenburgskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "ORL",
                name: "Orlovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "PNZ",
                name: "Penzenskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "PSK",
                name: "Pskovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "ROS",
                name: "Rostovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "RYA",
                name: "Ryazanskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "SAK",
                name: "Sakhalinskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "SAM",
                name: "Samarskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "SAR",
                name: "Saratovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "SMO",
                name: "Smolenskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "SVE",
                name: "Sverdlovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "TAM",
                name: "Tambovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "TOM",
                name: "Tomskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "TUL",
                name: "Tul'skaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "TVE",
                name: "Tverskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "TYU",
                name: "Tyumenskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "ULY",
                name: "Ul'yanovskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "VLA",
                name: "Vladimirskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "VGG",
                name: "Volgogradskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "VLG",
                name: "Vologodskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "VOR",
                name: "Voronezhskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "YAR",
                name: "Yaroslavskaya oblast'",
                subdivision: "administrative region",
              },
              {
                code: "ALT",
                name: "Altayskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "KAM",
                name: "Kamchatskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "KHA",
                name: "Khabarovskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "KDA",
                name: "Krasnodarskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "KYA",
                name: "Krasnoyarskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "PER",
                name: "Permskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "PRI",
                name: "Primorskiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "STA",
                name: "Stavropol'skiy kray",
                subdivision: "administrative territory",
              },
              {
                code: "ZAB",
                name: "Zabaykal'skiy kray",
                subdivision: "administrative territory",
              },
              { code: "MOW", name: "Moskva", subdivision: "autonomous city" },
              {
                code: "SPE",
                name: "Sankt-Peterburg",
                subdivision: "autonomous city",
              },
              {
                code: "CHU",
                name: "Chukotskiy avtonomnyy okrug",
                subdivision: "autonomous district",
              },
              {
                code: "KHM",
                name: "Khanty-Mansiyskiy avtonomnyy okrug-Yugra",
                subdivision: "autonomous district",
              },
              {
                code: "NEN",
                name: "Nenetskiy avtonomnyy okrug",
                subdivision: "autonomous district",
              },
              {
                code: "YAN",
                name: "Yamalo-Nenetskiy avtonomnyy okrug",
                subdivision: "autonomous district",
              },
              {
                code: "YEV",
                name: "Yevreyskaya avtonomnaya oblast'",
                subdivision: "autonomous region",
              },
              {
                code: "AD",
                name: "Adygeya, Respublika",
                subdivision: "republic",
              },
              {
                code: "AL",
                name: "Altay, Respublika",
                subdivision: "republic",
              },
              {
                code: "BA",
                name: "Bashkortostan, Respublika",
                subdivision: "republic",
              },
              {
                code: "BU",
                name: "Buryatiya, Respublika",
                subdivision: "republic",
              },
              {
                code: "CE",
                name: "Chechenskaya Respublika",
                subdivision: "republic",
              },
              {
                code: "CU",
                name: "Chuvashskaya Respublika",
                subdivision: "republic",
              },
              {
                code: "DA",
                name: "Dagestan, Respublika",
                subdivision: "republic",
              },
              {
                code: "IN",
                name: "Ingushetiya, Respublika",
                subdivision: "republic",
              },
              {
                code: "KB",
                name: "Kabardino-Balkarskaya Respublika",
                subdivision: "republic",
              },
              {
                code: "KL",
                name: "Kalmykiya, Respublika",
                subdivision: "republic",
              },
              {
                code: "KC",
                name: "Karachayevo-Cherkesskaya Respublika",
                subdivision: "republic",
              },
              {
                code: "KR",
                name: "Kareliya, Respublika",
                subdivision: "republic",
              },
              {
                code: "KK",
                name: "Khakasiya, Respublika",
                subdivision: "republic",
              },
              { code: "KO", name: "Komi, Respublika", subdivision: "republic" },
              {
                code: "ME",
                name: "Mariy El, Respublika",
                subdivision: "republic",
              },
              {
                code: "MO",
                name: "Mordoviya, Respublika",
                subdivision: "republic",
              },
              {
                code: "SA",
                name: "Sakha, Respublika",
                subdivision: "republic",
              },
              {
                code: "SE",
                name: "Severnaya Osetiya-Alaniya, Respublika",
                subdivision: "republic",
              },
              {
                code: "TA",
                name: "Tatarstan, Respublika",
                subdivision: "republic",
              },
              { code: "TY", name: "Tyva, Respublika", subdivision: "republic" },
              {
                code: "UD",
                name: "Udmurtskaya Respublika",
                subdivision: "republic",
              },
            ],
          },
          {
            code2: "RW",
            code3: "RWA",
            name: "Rwanda",
            capital: "Kigali",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "02", name: "Est", subdivision: null },
              { code: "03", name: "Nord", subdivision: null },
              { code: "04", name: "Ouest", subdivision: null },
              { code: "05", name: "Sud", subdivision: null },
              { code: "01", name: "Ville de Kigali", subdivision: null },
            ],
          },
          {
            code2: "BL",
            code3: "BLM",
            name: "Saint Barth\xe9lemy",
            capital: "Gustavia",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "SH",
            code3: "SHN",
            name: "Saint Helena",
            capital: "Jamestown",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "AC", name: "Ascension", subdivision: null },
              { code: "HL", name: "Saint Helena", subdivision: null },
              { code: "TA", name: "Tristan da Cunha", subdivision: null },
            ],
          },
          {
            code2: "KN",
            code3: "KNA",
            name: "Saint Kitts and Nevis",
            capital: "Basseterre",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "N", name: "Nevis", subdivision: null },
              { code: "K", name: "Saint Kitts", subdivision: null },
            ],
          },
          {
            code2: "LC",
            code3: "LCA",
            name: "Saint Lucia",
            capital: "Castries",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "01", name: "Anse la Raye", subdivision: null },
              { code: "02", name: "Castries", subdivision: null },
              { code: "03", name: "Choiseul", subdivision: null },
              { code: "04", name: "Dauphin", subdivision: null },
              { code: "05", name: "Dennery", subdivision: null },
              { code: "06", name: "Gros Islet", subdivision: null },
              { code: "07", name: "Laborie", subdivision: null },
              { code: "08", name: "Micoud", subdivision: null },
              { code: "09", name: "Praslin", subdivision: null },
              { code: "10", name: "Soufri\xe8re", subdivision: null },
              { code: "11", name: "Vieux Fort", subdivision: null },
            ],
          },
          {
            code2: "MF",
            code3: "MAF",
            name: "Saint Martin",
            capital: "Marigot",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "PM",
            code3: "SPM",
            name: "Saint Pierre and Miquelon",
            capital: "Saint-Pierre",
            region: "North America",
            subregion: "Northern America",
            states: [],
          },
          {
            code2: "VC",
            code3: "VCT",
            name: "Saint Vincent and the Grenadines",
            capital: "Kingstown",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "01", name: "Charlotte", subdivision: null },
              { code: "06", name: "Grenadines", subdivision: null },
              { code: "02", name: "Saint Andrew", subdivision: null },
              { code: "03", name: "Saint David", subdivision: null },
              { code: "04", name: "Saint George", subdivision: null },
              { code: "05", name: "Saint Patrick", subdivision: null },
            ],
          },
          {
            code2: "WS",
            code3: "WSM",
            name: "Samoa",
            capital: "Apia",
            region: "Oceania",
            subregion: "Polynesia",
            states: [
              { code: "AA", name: "A'ana", subdivision: null },
              { code: "AL", name: "Aiga-i-le-Tai", subdivision: null },
              { code: "AT", name: "Atua", subdivision: null },
              { code: "FA", name: "Fa'asaleleaga", subdivision: null },
              { code: "GE", name: "Gaga'emauga", subdivision: null },
              { code: "GI", name: "Gagaifomauga", subdivision: null },
              { code: "PA", name: "Palauli", subdivision: null },
              { code: "SA", name: "Satupa'itea", subdivision: null },
              { code: "TU", name: "Tuamasaga", subdivision: null },
              { code: "VF", name: "Va'a-o-Fonoti", subdivision: null },
              { code: "VS", name: "Vaisigano", subdivision: null },
            ],
          },
          {
            code2: "SM",
            code3: "SMR",
            name: "San Marino",
            capital: "City of San Marino",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "01", name: "Acquaviva", subdivision: null },
              { code: "06", name: "Borgo Maggiore", subdivision: null },
              { code: "02", name: "Chiesanuova", subdivision: null },
              { code: "03", name: "Domagnano", subdivision: null },
              { code: "04", name: "Faetano", subdivision: null },
              { code: "05", name: "Fiorentino", subdivision: null },
              { code: "08", name: "Montegiardino", subdivision: null },
              { code: "07", name: "San Marino", subdivision: null },
              { code: "09", name: "Serravalle", subdivision: null },
            ],
          },
          {
            code2: "ST",
            code3: "STP",
            name: "S\xe3o Tom\xe9 and Pr\xedncipe",
            capital: "S\xe3o Tom\xe9",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "P", name: "Pr\xedncipe", subdivision: null },
              { code: "S", name: "S\xe3o Tom\xe9", subdivision: null },
            ],
          },
          {
            code2: "SA",
            code3: "SAU",
            name: "Saudi Arabia",
            capital: "Riyadh",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "11", name: "Al B\u0101\u1e29ah", subdivision: null },
              { code: "12", name: "Al Jawf", subdivision: null },
              { code: "03", name: "Al Mad\u012bnah", subdivision: null },
              { code: "05", name: "Al Qa\u015f\u012bm", subdivision: null },
              {
                code: "08",
                name: "Al \u1e28ud\u016bd ash Sham\u0101l\u012byah",
                subdivision: null,
              },
              { code: "01", name: "Ar Riy\u0101\u1e11", subdivision: null },
              { code: "04", name: "Ash Sharq\u012byah", subdivision: null },
              { code: "09", name: "J\u012bz\u0101n", subdivision: null },
              { code: "02", name: "Makkah", subdivision: null },
              { code: "10", name: "Najr\u0101n", subdivision: null },
              { code: "07", name: "Tab\u016bk", subdivision: null },
              { code: "14", name: "\u0670\u0100s\u012br", subdivision: null },
              { code: "06", name: "\u1e28\u0101'il", subdivision: null },
            ],
          },
          {
            code2: "SN",
            code3: "SEN",
            name: "Senegal",
            capital: "Dakar",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "DK", name: "Dakar", subdivision: null },
              { code: "DB", name: "Diourbel", subdivision: null },
              { code: "FK", name: "Fatick", subdivision: null },
              { code: "KA", name: "Kaffrine", subdivision: null },
              { code: "KL", name: "Kaolack", subdivision: null },
              { code: "KD", name: "Kolda", subdivision: null },
              { code: "KE", name: "K\xe9dougou", subdivision: null },
              { code: "LG", name: "Louga", subdivision: null },
              { code: "MT", name: "Matam", subdivision: null },
              { code: "SL", name: "Saint-Louis", subdivision: null },
              { code: "SE", name: "S\xe9dhiou", subdivision: null },
              { code: "TC", name: "Tambacounda", subdivision: null },
              { code: "TH", name: "Thi\xe8s", subdivision: null },
              { code: "ZG", name: "Ziguinchor", subdivision: null },
            ],
          },
          {
            code2: "RS",
            code3: "SRB",
            name: "Serbia",
            capital: "Belgrade",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "KM", name: "Kosovo-Metohija", subdivision: null },
              { code: "VO", name: "Vojvodina", subdivision: null },
            ],
          },
          {
            code2: "SC",
            code3: "SYC",
            name: "Seychelles",
            capital: "Victoria",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "02", name: "Anse Boileau", subdivision: null },
              { code: "03", name: "Anse Etoile", subdivision: null },
              { code: "05", name: "Anse Royale", subdivision: null },
              { code: "01", name: "Anse aux Pins", subdivision: null },
              { code: "04", name: "Au Cap", subdivision: null },
              { code: "06", name: "Baie Lazare", subdivision: null },
              { code: "07", name: "Baie Sainte Anne", subdivision: null },
              { code: "08", name: "Beau Vallon", subdivision: null },
              { code: "09", name: "Bel Air", subdivision: null },
              { code: "10", name: "Bel Ombre", subdivision: null },
              { code: "11", name: "Cascade", subdivision: null },
              { code: "16", name: "English River", subdivision: null },
              { code: "12", name: "Glacis", subdivision: null },
              { code: "13", name: "Grand Anse Mahe", subdivision: null },
              { code: "14", name: "Grand Anse Praslin", subdivision: null },
              { code: "15", name: "La Digue", subdivision: null },
              { code: "24", name: "Les Mamelles", subdivision: null },
              { code: "17", name: "Mont Buxton", subdivision: null },
              { code: "18", name: "Mont Fleuri", subdivision: null },
              { code: "19", name: "Plaisance", subdivision: null },
              { code: "20", name: "Pointe Larue", subdivision: null },
              { code: "21", name: "Port Glaud", subdivision: null },
              { code: "25", name: "Roche Caiman", subdivision: null },
              { code: "22", name: "Saint Louis", subdivision: null },
              { code: "23", name: "Takamaka", subdivision: null },
            ],
          },
          {
            code2: "SL",
            code3: "SLE",
            name: "Sierra Leone",
            capital: "Freetown",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "E", name: "Eastern", subdivision: null },
              { code: "N", name: "Northern", subdivision: null },
              { code: "S", name: "Southern", subdivision: null },
              { code: "W", name: "Western Area", subdivision: null },
            ],
          },
          {
            code2: "SG",
            code3: "SGP",
            name: "Singapore",
            capital: "Singapore",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "01", name: "Central Singapore", subdivision: null },
              { code: "02", name: "North East", subdivision: null },
              { code: "03", name: "North West", subdivision: null },
              { code: "04", name: "South East", subdivision: null },
              { code: "05", name: "South West", subdivision: null },
            ],
          },
          {
            code2: "SX",
            code3: "SXM",
            name: "Sint Maarten",
            capital: "Philipsburg",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "SK",
            code3: "SVK",
            name: "Slovakia",
            capital: "Bratislava",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              {
                code: "BC",
                name: "Banskobystrick\xfd kraj",
                subdivision: null,
              },
              { code: "BL", name: "Bratislavsk\xfd kraj", subdivision: null },
              { code: "KI", name: "Ko\u0161ick\xfd kraj", subdivision: null },
              { code: "NI", name: "Nitriansky kraj", subdivision: null },
              { code: "PV", name: "Pre\u0161ovsk\xfd kraj", subdivision: null },
              { code: "TC", name: "Tren\u010diansky kraj", subdivision: null },
              { code: "TA", name: "Trnavsk\xfd kraj", subdivision: null },
              { code: "ZI", name: "\u017dilinsk\xfd kraj", subdivision: null },
            ],
          },
          {
            code2: "SI",
            code3: "SVN",
            name: "Slovenia",
            capital: "Ljubljana",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "001", name: "Ajdov\u0161\u010dina", subdivision: null },
              { code: "195", name: "Apa\u010de", subdivision: null },
              { code: "002", name: "Beltinci", subdivision: null },
              { code: "148", name: "Benedikt", subdivision: null },
              { code: "149", name: "Bistrica ob Sotli", subdivision: null },
              { code: "003", name: "Bled", subdivision: null },
              { code: "150", name: "Bloke", subdivision: null },
              { code: "004", name: "Bohinj", subdivision: null },
              { code: "005", name: "Borovnica", subdivision: null },
              { code: "006", name: "Bovec", subdivision: null },
              { code: "151", name: "Braslov\u010de", subdivision: null },
              { code: "007", name: "Brda", subdivision: null },
              { code: "008", name: "Brezovica", subdivision: null },
              { code: "009", name: "Bre\u017eice", subdivision: null },
              { code: "152", name: "Cankova", subdivision: null },
              { code: "011", name: "Celje", subdivision: null },
              { code: "012", name: "Cerklje na Gorenjskem", subdivision: null },
              { code: "013", name: "Cerknica", subdivision: null },
              { code: "014", name: "Cerkno", subdivision: null },
              { code: "153", name: "Cerkvenjak", subdivision: null },
              { code: "196", name: "Cirkulane", subdivision: null },
              { code: "018", name: "Destrnik", subdivision: null },
              { code: "019", name: "Diva\u010da", subdivision: null },
              { code: "154", name: "Dobje", subdivision: null },
              { code: "020", name: "Dobrepolje", subdivision: null },
              { code: "155", name: "Dobrna", subdivision: null },
              {
                code: "021",
                name: "Dobrova\u2013Polhov Gradec",
                subdivision: null,
              },
              { code: "156", name: "Dobrovnik", subdivision: null },
              { code: "022", name: "Dol pri Ljubljani", subdivision: null },
              { code: "157", name: "Dolenjske Toplice", subdivision: null },
              { code: "023", name: "Dom\u017eale", subdivision: null },
              { code: "024", name: "Dornava", subdivision: null },
              { code: "025", name: "Dravograd", subdivision: null },
              { code: "026", name: "Duplek", subdivision: null },
              {
                code: "027",
                name: "Gorenja vas\u2013Poljane",
                subdivision: null,
              },
              { code: "028", name: "Gori\u0161nica", subdivision: null },
              { code: "207", name: "Gorje", subdivision: null },
              { code: "029", name: "Gornja Radgona", subdivision: null },
              { code: "030", name: "Gornji Grad", subdivision: null },
              { code: "031", name: "Gornji Petrovci", subdivision: null },
              { code: "158", name: "Grad", subdivision: null },
              { code: "032", name: "Grosuplje", subdivision: null },
              { code: "159", name: "Hajdina", subdivision: null },
              { code: "161", name: "Hodo\u0161", subdivision: null },
              { code: "162", name: "Horjul", subdivision: null },
              {
                code: "160",
                name: "Ho\u010de\u2013Slivnica",
                subdivision: null,
              },
              { code: "034", name: "Hrastnik", subdivision: null },
              { code: "035", name: "Hrpelje-Kozina", subdivision: null },
              { code: "036", name: "Idrija", subdivision: null },
              { code: "037", name: "Ig", subdivision: null },
              { code: "038", name: "Ilirska Bistrica", subdivision: null },
              { code: "039", name: "Ivan\u010dna Gorica", subdivision: null },
              { code: "040", name: "Izola", subdivision: null },
              { code: "041", name: "Jesenice", subdivision: null },
              { code: "163", name: "Jezersko", subdivision: null },
              { code: "042", name: "Jur\u0161inci", subdivision: null },
              { code: "043", name: "Kamnik", subdivision: null },
              { code: "044", name: "Kanal", subdivision: null },
              { code: "045", name: "Kidri\u010devo", subdivision: null },
              { code: "046", name: "Kobarid", subdivision: null },
              { code: "047", name: "Kobilje", subdivision: null },
              { code: "049", name: "Komen", subdivision: null },
              { code: "164", name: "Komenda", subdivision: null },
              { code: "050", name: "Koper", subdivision: null },
              { code: "197", name: "Kosanjevica na Krki", subdivision: null },
              { code: "165", name: "Kostel", subdivision: null },
              { code: "051", name: "Kozje", subdivision: null },
              { code: "048", name: "Ko\u010devje", subdivision: null },
              { code: "052", name: "Kranj", subdivision: null },
              { code: "053", name: "Kranjska Gora", subdivision: null },
              { code: "166", name: "Kri\u017eevci", subdivision: null },
              { code: "054", name: "Kr\u0161ko", subdivision: null },
              { code: "055", name: "Kungota", subdivision: null },
              { code: "056", name: "Kuzma", subdivision: null },
              { code: "057", name: "La\u0161ko", subdivision: null },
              { code: "058", name: "Lenart", subdivision: null },
              { code: "059", name: "Lendava", subdivision: null },
              { code: "060", name: "Litija", subdivision: null },
              { code: "061", name: "Ljubljana", subdivision: null },
              { code: "062", name: "Ljubno", subdivision: null },
              { code: "063", name: "Ljutomer", subdivision: null },
              { code: "208", name: "Log-Dragomer", subdivision: null },
              { code: "064", name: "Logatec", subdivision: null },
              { code: "167", name: "Lovrenc na Pohorju", subdivision: null },
              { code: "065", name: "Lo\u0161ka Dolina", subdivision: null },
              { code: "066", name: "Lo\u0161ki Potok", subdivision: null },
              { code: "068", name: "Lukovica", subdivision: null },
              { code: "067", name: "Lu\u010de", subdivision: null },
              { code: "069", name: "Maj\u0161perk", subdivision: null },
              { code: "198", name: "Makole", subdivision: null },
              { code: "070", name: "Maribor", subdivision: null },
              { code: "168", name: "Markovci", subdivision: null },
              { code: "071", name: "Medvode", subdivision: null },
              { code: "072", name: "Menge\u0161", subdivision: null },
              { code: "073", name: "Metlika", subdivision: null },
              { code: "074", name: "Me\u017eica", subdivision: null },
              {
                code: "169",
                name: "Miklav\u017e na Dravskem Polju",
                subdivision: null,
              },
              {
                code: "075",
                name: "Miren\u2013Kostanjevica",
                subdivision: null,
              },
              { code: "170", name: "Mirna Pe\u010d", subdivision: null },
              { code: "076", name: "Mislinja", subdivision: null },
              {
                code: "199",
                name: "Mokronog\u2013Trebelno",
                subdivision: null,
              },
              { code: "078", name: "Moravske Toplice", subdivision: null },
              { code: "077", name: "Morav\u010de", subdivision: null },
              { code: "079", name: "Mozirje", subdivision: null },
              { code: "080", name: "Murska Sobota", subdivision: null },
              { code: "081", name: "Muta", subdivision: null },
              { code: "082", name: "Naklo", subdivision: null },
              { code: "083", name: "Nazarje", subdivision: null },
              { code: "084", name: "Nova Gorica", subdivision: null },
              { code: "085", name: "Novo Mesto", subdivision: null },
              { code: "086", name: "Odranci", subdivision: null },
              { code: "171", name: "Oplotnica", subdivision: null },
              { code: "087", name: "Ormo\u017e", subdivision: null },
              { code: "088", name: "Osilnica", subdivision: null },
              { code: "089", name: "Pesnica", subdivision: null },
              { code: "090", name: "Piran", subdivision: null },
              { code: "091", name: "Pivka", subdivision: null },
              { code: "172", name: "Podlehnik", subdivision: null },
              { code: "093", name: "Podvelka", subdivision: null },
              { code: "092", name: "Pod\u010detrtek", subdivision: null },
              { code: "200", name: "Polj\u010dane", subdivision: null },
              { code: "173", name: "Polzela", subdivision: null },
              { code: "094", name: "Postojna", subdivision: null },
              { code: "174", name: "Prebold", subdivision: null },
              { code: "095", name: "Preddvor", subdivision: null },
              { code: "175", name: "Prevalje", subdivision: null },
              { code: "096", name: "Ptuj", subdivision: null },
              { code: "097", name: "Puconci", subdivision: null },
              { code: "100", name: "Radenci", subdivision: null },
              { code: "099", name: "Rade\u010de", subdivision: null },
              { code: "101", name: "Radlje ob Dravi", subdivision: null },
              { code: "102", name: "Radovljica", subdivision: null },
              {
                code: "103",
                name: "Ravne na Koro\u0161kem",
                subdivision: null,
              },
              { code: "176", name: "Razkri\u017eje", subdivision: null },
              { code: "098", name: "Ra\u010de\u2013Fram", subdivision: null },
              { code: "201", name: "Ren\u010de-Vogrsko", subdivision: null },
              {
                code: "209",
                name: "Re\u010dica ob Savinji",
                subdivision: null,
              },
              { code: "104", name: "Ribnica", subdivision: null },
              { code: "177", name: "Ribnica na Pohorju", subdivision: null },
              { code: "107", name: "Rogatec", subdivision: null },
              { code: "106", name: "Roga\u0161ka Slatina", subdivision: null },
              { code: "105", name: "Roga\u0161ovci", subdivision: null },
              { code: "108", name: "Ru\u0161e", subdivision: null },
              { code: "178", name: "Selnica ob Dravi", subdivision: null },
              { code: "109", name: "Semi\u010d", subdivision: null },
              { code: "110", name: "Sevnica", subdivision: null },
              { code: "111", name: "Se\u017eana", subdivision: null },
              { code: "112", name: "Slovenj Gradec", subdivision: null },
              { code: "113", name: "Slovenska Bistrica", subdivision: null },
              { code: "114", name: "Slovenske Konjice", subdivision: null },
              { code: "179", name: "Sodra\u017eica", subdivision: null },
              { code: "180", name: "Sol\u010dava", subdivision: null },
              {
                code: "202",
                name: "Sredi\u0161\u010de ob Dravi",
                subdivision: null,
              },
              { code: "115", name: "Star\u0161e", subdivision: null },
              { code: "203", name: "Stra\u017ea", subdivision: null },
              { code: "181", name: "Sveta Ana", subdivision: null },
              {
                code: "204",
                name: "Sveta Trojica v Slovenskih Goricah",
                subdivision: null,
              },
              {
                code: "182",
                name: "Sveti Andra\u017e v Slovenskih Goricah",
                subdivision: null,
              },
              { code: "116", name: "Sveti Jurij", subdivision: null },
              {
                code: "210",
                name: "Sveti Jurij v Slovenskih Goricah",
                subdivision: null,
              },
              { code: "205", name: "Sveti Toma\u017e", subdivision: null },
              { code: "184", name: "Tabor", subdivision: null },
              { code: "010", name: "Ti\u0161ina", subdivision: null },
              { code: "128", name: "Tolmin", subdivision: null },
              { code: "129", name: "Trbovlje", subdivision: null },
              { code: "130", name: "Trebnje", subdivision: null },
              { code: "185", name: "Trnovska Vas", subdivision: null },
              { code: "186", name: "Trzin", subdivision: null },
              { code: "131", name: "Tr\u017ei\u010d", subdivision: null },
              { code: "132", name: "Turni\u0161\u010de", subdivision: null },
              { code: "133", name: "Velenje", subdivision: null },
              { code: "187", name: "Velika Polana", subdivision: null },
              {
                code: "134",
                name: "Velike La\u0161\u010de",
                subdivision: null,
              },
              { code: "188", name: "Ver\u017eej", subdivision: null },
              { code: "135", name: "Videm", subdivision: null },
              { code: "136", name: "Vipava", subdivision: null },
              { code: "137", name: "Vitanje", subdivision: null },
              { code: "138", name: "Vodice", subdivision: null },
              { code: "139", name: "Vojnik", subdivision: null },
              { code: "189", name: "Vransko", subdivision: null },
              { code: "140", name: "Vrhnika", subdivision: null },
              { code: "141", name: "Vuzenica", subdivision: null },
              { code: "142", name: "Zagorje ob Savi", subdivision: null },
              { code: "143", name: "Zavr\u010d", subdivision: null },
              { code: "144", name: "Zre\u010de", subdivision: null },
              { code: "015", name: "\u010cren\u0161ovci", subdivision: null },
              {
                code: "016",
                name: "\u010crna na Koro\u0161kem",
                subdivision: null,
              },
              { code: "017", name: "\u010crnomelj", subdivision: null },
              { code: "033", name: "\u0160alovci", subdivision: null },
              {
                code: "183",
                name: "\u0160empeter\u2013Vrtojba",
                subdivision: null,
              },
              { code: "118", name: "\u0160entilj", subdivision: null },
              { code: "119", name: "\u0160entjernej", subdivision: null },
              { code: "120", name: "\u0160entjur", subdivision: null },
              { code: "211", name: "\u0160entrupert", subdivision: null },
              { code: "117", name: "\u0160en\u010dur", subdivision: null },
              { code: "121", name: "\u0160kocjan", subdivision: null },
              { code: "122", name: "\u0160kofja Loka", subdivision: null },
              { code: "123", name: "\u0160kofljica", subdivision: null },
              {
                code: "124",
                name: "\u0160marje pri Jel\u0161ah",
                subdivision: null,
              },
              {
                code: "206",
                name: "\u0160marje\u0161ke Toplice",
                subdivision: null,
              },
              { code: "125", name: "\u0160martno ob Paki", subdivision: null },
              {
                code: "194",
                name: "\u0160martno pri Litiji",
                subdivision: null,
              },
              { code: "126", name: "\u0160o\u0161tanj", subdivision: null },
              { code: "127", name: "\u0160tore", subdivision: null },
              { code: "190", name: "\u017dalec", subdivision: null },
              { code: "146", name: "\u017delezniki", subdivision: null },
              { code: "191", name: "\u017detale", subdivision: null },
              { code: "147", name: "\u017diri", subdivision: null },
              { code: "192", name: "\u017dirovnica", subdivision: null },
              { code: "193", name: "\u017du\u017eemberk", subdivision: null },
            ],
          },
          {
            code2: "SB",
            code3: "SLB",
            name: "Solomon Islands",
            capital: "Honiara",
            region: "Oceania",
            subregion: "Melanesia",
            states: [
              { code: "CT", name: "Capital Territory", subdivision: null },
              { code: "CE", name: "Central", subdivision: null },
              { code: "CH", name: "Choiseul", subdivision: null },
              { code: "GU", name: "Guadalcanal", subdivision: null },
              { code: "IS", name: "Isabel", subdivision: null },
              { code: "MK", name: "Makira-Ulawa", subdivision: null },
              { code: "ML", name: "Malaita", subdivision: null },
              { code: "RB", name: "Rennell and Bellona", subdivision: null },
              { code: "TE", name: "Temotu", subdivision: null },
              { code: "WE", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "SO",
            code3: "SOM",
            name: "Somalia",
            capital: "Mogadishu",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "AW", name: "Awdal", subdivision: null },
              { code: "BK", name: "Bakool", subdivision: null },
              { code: "BN", name: "Banaadir", subdivision: null },
              { code: "BR", name: "Bari", subdivision: null },
              { code: "BY", name: "Bay", subdivision: null },
              { code: "GA", name: "Galguduud", subdivision: null },
              { code: "GE", name: "Gedo", subdivision: null },
              { code: "HI", name: "Hiiraan", subdivision: null },
              { code: "JD", name: "Jubbada Dhexe", subdivision: null },
              { code: "JH", name: "Jubbada Hoose", subdivision: null },
              { code: "MU", name: "Mudug", subdivision: null },
              { code: "NU", name: "Nugaal", subdivision: null },
              { code: "SA", name: "Sanaag", subdivision: null },
              { code: "SD", name: "Shabeellaha Dhexe", subdivision: null },
              { code: "SH", name: "Shabeellaha Hoose", subdivision: null },
              { code: "SO", name: "Sool", subdivision: null },
              { code: "TO", name: "Togdheer", subdivision: null },
              { code: "WO", name: "Woqooyi Galbeed", subdivision: null },
            ],
          },
          {
            code2: "ZA",
            code3: "ZAF",
            name: "South Africa",
            capital: "Pretoria",
            region: "Africa",
            subregion: "Southern Africa",
            states: [
              { code: "EC", name: "Eastern Cape", subdivision: null },
              { code: "FS", name: "Free State", subdivision: null },
              { code: "GT", name: "Gauteng", subdivision: null },
              { code: "NL", name: "KwaZulu-Natal", subdivision: null },
              { code: "LP", name: "Limpopo", subdivision: null },
              { code: "MP", name: "Mpumalanga", subdivision: null },
              { code: "NW", name: "North West", subdivision: null },
              { code: "NC", name: "Northern Cape", subdivision: null },
              { code: "WC", name: "Western Cape", subdivision: null },
            ],
          },
          {
            code2: "GS",
            code3: "SGS",
            name: "South Georgia",
            capital: "King Edward Point",
            region: "South America",
            subregion: "South America",
            states: [],
          },
          {
            code2: "KR",
            code3: "KOR",
            name: "South Korea",
            capital: "Seoul",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [
              { code: "26", name: "Busan-gwangyeoksi", subdivision: null },
              { code: "43", name: "Chungcheongbuk-do", subdivision: null },
              { code: "44", name: "Chungcheongnam-do", subdivision: null },
              { code: "27", name: "Daegu-gwangyeoksi", subdivision: null },
              { code: "30", name: "Daejeon-gwangyeoksi", subdivision: null },
              { code: "42", name: "Gangwon-do", subdivision: null },
              { code: "29", name: "Gwangju-gwangyeoksi", subdivision: null },
              { code: "41", name: "Gyeonggi-do", subdivision: null },
              { code: "47", name: "Gyeongsangbuk-do", subdivision: null },
              { code: "48", name: "Gyeongsangnam-do", subdivision: null },
              { code: "28", name: "Incheon-gwangyeoksi", subdivision: null },
              { code: "49", name: "Jeju-teukbyeoljachido", subdivision: null },
              { code: "45", name: "Jeollabuk-do", subdivision: null },
              { code: "46", name: "Jeollanam-do", subdivision: null },
              { code: "50", name: "Sejong", subdivision: null },
              { code: "11", name: "Seoul-teukbyeolsi", subdivision: null },
              { code: "31", name: "Ulsan-gwangyeoksi", subdivision: null },
            ],
          },
          {
            code2: "SS",
            code3: "SSD",
            name: "South Sudan",
            capital: "Juba",
            region: "Africa",
            subregion: "Middle Africa",
            states: [
              { code: "EC", name: "Central Equatoria", subdivision: null },
              { code: "EE", name: "Eastern Equatoria", subdivision: null },
              { code: "JG", name: "Jonglei", subdivision: null },
              { code: "LK", name: "Lakes", subdivision: null },
              {
                code: "BN",
                name: "Northern Bahr el Ghazal",
                subdivision: null,
              },
              { code: "UY", name: "Unity", subdivision: null },
              { code: "NU", name: "Upper Nile", subdivision: null },
              { code: "WR", name: "Warrap", subdivision: null },
              { code: "BW", name: "Western Bahr el Ghazal", subdivision: null },
              { code: "EW", name: "Western Equatoria", subdivision: null },
            ],
          },
          {
            code2: "ES",
            code3: "ESP",
            name: "Spain",
            capital: "Madrid",
            region: "Europe",
            subregion: "Southern Europe",
            states: [
              { code: "C", name: "A Coru\xf1a", subdivision: "Province" },
              { code: "AB", name: "Albacete", subdivision: "Province" },
              { code: "A", name: "Alicante", subdivision: "Province" },
              { code: "AL", name: "Almer\xeda", subdivision: "Province" },
              { code: "O", name: "Asturias", subdivision: "Province" },
              { code: "BA", name: "Badajoz", subdivision: "Province" },
              { code: "PM", name: "Balears", subdivision: "Province" },
              { code: "B", name: "Barcelona", subdivision: "Province" },
              { code: "BU", name: "Burgos", subdivision: "Province" },
              { code: "S", name: "Cantabria", subdivision: "Province" },
              { code: "CS", name: "Castell\xf3n", subdivision: "Province" },
              { code: "CR", name: "Ciudad Real", subdivision: "Province" },
              { code: "CU", name: "Cuenca", subdivision: "Province" },
              { code: "CC", name: "C\xe1ceres", subdivision: "Province" },
              { code: "CA", name: "C\xe1diz", subdivision: "Province" },
              { code: "CO", name: "C\xf3rdoba", subdivision: "Province" },
              { code: "GI", name: "Girona", subdivision: "Province" },
              { code: "GR", name: "Granada", subdivision: "Province" },
              { code: "GU", name: "Guadalajara", subdivision: "Province" },
              { code: "SS", name: "Guip\xfazcoa", subdivision: "Province" },
              { code: "H", name: "Huelva", subdivision: "Province" },
              { code: "HU", name: "Huesca", subdivision: "Province" },
              { code: "J", name: "Ja\xe9n", subdivision: "Province" },
              { code: "LO", name: "La Rioja", subdivision: "Province" },
              { code: "GC", name: "Las Palmas", subdivision: "Province" },
              { code: "LE", name: "Le\xf3n", subdivision: "Province" },
              { code: "L", name: "Lleida", subdivision: "Province" },
              { code: "LU", name: "Lugo", subdivision: "Province" },
              { code: "M", name: "Madrid", subdivision: "Province" },
              { code: "MU", name: "Murcia", subdivision: "Province" },
              { code: "MA", name: "M\xe1laga", subdivision: "Province" },
              { code: "NA", name: "Navarra", subdivision: "Province" },
              { code: "OR", name: "Ourense", subdivision: "Province" },
              { code: "P", name: "Palencia", subdivision: "Province" },
              { code: "PO", name: "Pontevedra", subdivision: "Province" },
              { code: "SA", name: "Salamanca", subdivision: "Province" },
              {
                code: "TF",
                name: "Santa Cruz de Tenerife",
                subdivision: "Province",
              },
              { code: "SG", name: "Segovia", subdivision: "Province" },
              { code: "SE", name: "Sevilla", subdivision: "Province" },
              { code: "SO", name: "Soria", subdivision: "Province" },
              { code: "T", name: "Tarragona", subdivision: "Province" },
              { code: "TE", name: "Teruel", subdivision: "Province" },
              { code: "TO", name: "Toledo", subdivision: "Province" },
              { code: "V", name: "Valencia", subdivision: "Province" },
              { code: "VA", name: "Valladolid", subdivision: "Province" },
              { code: "BI", name: "Vizcaya", subdivision: "Province" },
              { code: "ZA", name: "Zamora", subdivision: "Province" },
              { code: "Z", name: "Zaragoza", subdivision: "Province" },
              { code: "VI", name: "\xc1lava", subdivision: "Province" },
              { code: "AV", name: "\xc1vila", subdivision: "Province" },
              {
                code: "CE",
                name: "Ceuta",
                subdivision: "autonomous city in North Africa",
              },
              {
                code: "ML",
                name: "Melilla",
                subdivision: "autonomous city in North Africa",
              },
              {
                code: "AN",
                name: "Andaluc\xeda",
                subdivision: "autonomous community",
              },
              {
                code: "AR",
                name: "Arag\xf3n",
                subdivision: "autonomous community",
              },
              {
                code: "AS",
                name: "Asturias, Principado de",
                subdivision: "autonomous community",
              },
              {
                code: "CN",
                name: "Canarias",
                subdivision: "autonomous community",
              },
              {
                code: "CB",
                name: "Cantabria",
                subdivision: "autonomous community",
              },
              {
                code: "CL",
                name: "Castilla y Le\xf3n",
                subdivision: "autonomous community",
              },
              {
                code: "CM",
                name: "Castilla-La Mancha",
                subdivision: "autonomous community",
              },
              {
                code: "CT",
                name: "Catalunya",
                subdivision: "autonomous community",
              },
              {
                code: "EX",
                name: "Extremadura",
                subdivision: "autonomous community",
              },
              {
                code: "GA",
                name: "Galicia",
                subdivision: "autonomous community",
              },
              {
                code: "IB",
                name: "Illes Balears",
                subdivision: "autonomous community",
              },
              {
                code: "RI",
                name: "La Rioja",
                subdivision: "autonomous community",
              },
              {
                code: "MD",
                name: "Madrid, Comunidad de",
                subdivision: "autonomous community",
              },
              {
                code: "MC",
                name: "Murcia, Regi\xf3n de",
                subdivision: "autonomous community",
              },
              {
                code: "NC",
                name: "Navarra, Comunidad Foral de",
                subdivision: "autonomous community",
              },
              {
                code: "PV",
                name: "Pa\xeds Vasco",
                subdivision: "autonomous community",
              },
              {
                code: "VC",
                name: "Valenciana, Comunidad",
                subdivision: "autonomous community",
              },
            ],
          },
          {
            code2: "LK",
            code3: "LKA",
            name: "Sri Lanka",
            capital: "Colombo",
            region: "Asia",
            subregion: "Southern Asia",
            states: [
              { code: "2", name: "Central Province", subdivision: null },
              { code: "5", name: "Eastern Province", subdivision: null },
              { code: "7", name: "North Central Province", subdivision: null },
              { code: "6", name: "North Western Province", subdivision: null },
              { code: "4", name: "Northern Province", subdivision: null },
              { code: "9", name: "Sabaragamuwa Province", subdivision: null },
              { code: "3", name: "Southern Province", subdivision: null },
              { code: "8", name: "Uva Province", subdivision: null },
              { code: "1", name: "Western Province", subdivision: null },
            ],
          },
          {
            code2: "SD",
            code3: "SDN",
            name: "Sudan",
            capital: "Khartoum",
            region: "Africa",
            subregion: "Northern Africa",
            states: [
              {
                code: "RS",
                name: "Al Ba\u1e29r al A\u1e29mar",
                subdivision: null,
              },
              { code: "GZ", name: "Al Jaz\u012brah", subdivision: null },
              { code: "KH", name: "Al Khar\u0163\u016bm", subdivision: null },
              { code: "GD", name: "Al Qa\u1e11\u0101rif", subdivision: null },
              { code: "NR", name: "An N\u012bl", subdivision: null },
              {
                code: "NW",
                name: "An N\u012bl al Abya\u1e11",
                subdivision: null,
              },
              { code: "NB", name: "An N\u012bl al Azraq", subdivision: null },
              {
                code: "NO",
                name: "Ash Sham\u0101l\u012byah",
                subdivision: null,
              },
              { code: "DW", name: "Gharb D\u0101rf\u016br", subdivision: null },
              {
                code: "DS",
                name: "Jan\u016bb D\u0101rf\u016br",
                subdivision: null,
              },
              {
                code: "KS",
                name: "Jan\u016bb Kurduf\u0101n",
                subdivision: null,
              },
              { code: "KA", name: "Kassal\u0101", subdivision: null },
              {
                code: "DN",
                name: "Sham\u0101l D\u0101rf\u016br",
                subdivision: null,
              },
              {
                code: "KN",
                name: "Sham\u0101l Kurduf\u0101n",
                subdivision: null,
              },
              { code: "DE", name: "Sharq D\u0101rf\u016br", subdivision: null },
              { code: "SI", name: "Sinn\u0101r", subdivision: null },
              { code: "DC", name: "Zalingei", subdivision: null },
            ],
          },
          {
            code2: "SR",
            code3: "SUR",
            name: "Suriname",
            capital: "Paramaribo",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "BR", name: "Brokopondo", subdivision: null },
              { code: "CM", name: "Commewijne", subdivision: null },
              { code: "CR", name: "Coronie", subdivision: null },
              { code: "MA", name: "Marowijne", subdivision: null },
              { code: "NI", name: "Nickerie", subdivision: null },
              { code: "PR", name: "Para", subdivision: null },
              { code: "PM", name: "Paramaribo", subdivision: null },
              { code: "SA", name: "Saramacca", subdivision: null },
              { code: "SI", name: "Sipaliwini", subdivision: null },
              { code: "WA", name: "Wanica", subdivision: null },
            ],
          },
          {
            code2: "SJ",
            code3: "SJM",
            name: "Svalbard and Jan Mayen",
            capital: "Longyearbyen",
            region: "Europe",
            subregion: "Northern Europe",
            states: [],
          },
          {
            code2: "SZ",
            code3: "SWZ",
            name: "Swaziland",
            capital: "Lobamba",
            region: "Africa",
            subregion: "Southern Africa",
            states: [
              { code: "HH", name: "Hhohho", subdivision: null },
              { code: "LU", name: "Lubombo", subdivision: null },
              { code: "MA", name: "Manzini", subdivision: null },
              { code: "SH", name: "Shiselweni", subdivision: null },
            ],
          },
          {
            code2: "SE",
            code3: "SWE",
            name: "Sweden",
            capital: "Stockholm",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              { code: "K", name: "Blekinge l\xe4n", subdivision: null },
              { code: "W", name: "Dalarnas l\xe4n", subdivision: null },
              { code: "I", name: "Gotlands l\xe4n", subdivision: null },
              { code: "X", name: "G\xe4vleborgs l\xe4n", subdivision: null },
              { code: "N", name: "Hallands l\xe4n", subdivision: null },
              { code: "Z", name: "J\xe4mtlands l\xe4n", subdivision: null },
              { code: "F", name: "J\xf6nk\xf6pings l\xe4n", subdivision: null },
              { code: "H", name: "Kalmar l\xe4n", subdivision: null },
              { code: "G", name: "Kronobergs l\xe4n", subdivision: null },
              { code: "BD", name: "Norrbottens l\xe4n", subdivision: null },
              { code: "M", name: "Sk\xe5ne l\xe4n", subdivision: null },
              { code: "AB", name: "Stockholms l\xe4n", subdivision: null },
              { code: "D", name: "S\xf6dermanlands l\xe4n", subdivision: null },
              { code: "C", name: "Uppsala l\xe4n", subdivision: null },
              { code: "S", name: "V\xe4rmlands l\xe4n", subdivision: null },
              {
                code: "AC",
                name: "V\xe4sterbottens l\xe4n",
                subdivision: null,
              },
              {
                code: "Y",
                name: "V\xe4sternorrlands l\xe4n",
                subdivision: null,
              },
              { code: "U", name: "V\xe4stmanlands l\xe4n", subdivision: null },
              {
                code: "O",
                name: "V\xe4stra G\xf6talands l\xe4n",
                subdivision: null,
              },
              { code: "T", name: "\xd6rebro l\xe4n", subdivision: null },
              {
                code: "E",
                name: "\xd6sterg\xf6tlands l\xe4n",
                subdivision: null,
              },
            ],
          },
          {
            code2: "CH",
            code3: "CHE",
            name: "Switzerland",
            capital: "Bern",
            region: "Europe",
            subregion: "Western Europe",
            states: [
              { code: "AG", name: "Aargau", subdivision: null },
              { code: "AR", name: "Appenzell Ausserrhoden", subdivision: null },
              { code: "AI", name: "Appenzell Innerrhoden", subdivision: null },
              { code: "BL", name: "Basel-Landschaft", subdivision: null },
              { code: "BS", name: "Basel-Stadt", subdivision: null },
              { code: "BE", name: "Bern", subdivision: null },
              { code: "FR", name: "Fribourg", subdivision: null },
              { code: "GE", name: "Gen\xe8ve", subdivision: null },
              { code: "GL", name: "Glarus", subdivision: null },
              { code: "GR", name: "Graub\xfcnden", subdivision: null },
              { code: "JU", name: "Jura", subdivision: null },
              { code: "LU", name: "Luzern", subdivision: null },
              { code: "NE", name: "Neuch\xe2tel", subdivision: null },
              { code: "NW", name: "Nidwalden", subdivision: null },
              { code: "OW", name: "Obwalden", subdivision: null },
              { code: "SG", name: "Sankt Gallen", subdivision: null },
              { code: "SH", name: "Schaffhausen", subdivision: null },
              { code: "SZ", name: "Schwyz", subdivision: null },
              { code: "SO", name: "Solothurn", subdivision: null },
              { code: "TG", name: "Thurgau", subdivision: null },
              { code: "TI", name: "Ticino", subdivision: null },
              { code: "UR", name: "Uri", subdivision: null },
              { code: "VS", name: "Valais", subdivision: null },
              { code: "VD", name: "Vaud", subdivision: null },
              { code: "ZG", name: "Zug", subdivision: null },
              { code: "ZH", name: "Z\xfcrich", subdivision: null },
            ],
          },
          {
            code2: "SY",
            code3: "SYR",
            name: "Syria",
            capital: "Damascus",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              {
                code: "LA",
                name: "Al L\u0101dhiq\u012byah",
                subdivision: null,
              },
              { code: "QU", name: "Al Qunay\u0163irah", subdivision: null },
              { code: "HA", name: "Al \u1e28asakah", subdivision: null },
              { code: "RA", name: "Ar Raqqah", subdivision: null },
              { code: "SU", name: "As Suwayd\u0101'", subdivision: null },
              { code: "DR", name: "Dar\u0670\u0101", subdivision: null },
              { code: "DY", name: "Dayr az Zawr", subdivision: null },
              { code: "DI", name: "Dimashq", subdivision: null },
              { code: "ID", name: "Idlib", subdivision: null },
              { code: "RD", name: "R\u012bf Dimashq", subdivision: null },
              { code: "TA", name: "\u0162ar\u0163\u016bs", subdivision: null },
              { code: "HL", name: "\u1e28alab", subdivision: null },
              { code: "HM", name: "\u1e28am\u0101h", subdivision: null },
              { code: "HI", name: "\u1e28im\u015f", subdivision: null },
            ],
          },
          {
            code2: "TW",
            code3: "TWN",
            name: "Taiwan",
            capital: "Taipei",
            region: "Asia",
            subregion: "Eastern Asia",
            states: [
              { code: "CHA", name: "Changhua", subdivision: null },
              { code: "CYQ", name: "Chiayi", subdivision: null },
              { code: "CYI", name: "Chiayi", subdivision: null },
              { code: "HSZ", name: "Hsinchu", subdivision: null },
              { code: "HSQ", name: "Hsinchu", subdivision: null },
              { code: "HUA", name: "Hualien", subdivision: null },
              { code: "ILA", name: "Ilan", subdivision: null },
              { code: "KHQ", name: "Kaohsiung", subdivision: null },
              { code: "KHH", name: "Kaohsiung", subdivision: null },
              { code: "KEE", name: "Keelung", subdivision: null },
              { code: "MIA", name: "Miaoli", subdivision: null },
              { code: "NAN", name: "Nantou", subdivision: null },
              { code: "PEN", name: "Penghu", subdivision: null },
              { code: "PIF", name: "Pingtung", subdivision: null },
              { code: "TXG", name: "Taichung", subdivision: null },
              { code: "TXQ", name: "Taichung", subdivision: null },
              { code: "TNN", name: "Tainan", subdivision: null },
              { code: "TNQ", name: "Tainan", subdivision: null },
              { code: "TPE", name: "Taipei", subdivision: null },
              { code: "TPQ", name: "Taipei", subdivision: null },
              { code: "TTT", name: "Taitung", subdivision: null },
              { code: "TAO", name: "Taoyuan", subdivision: null },
              { code: "YUN", name: "Yunlin", subdivision: null },
            ],
          },
          {
            code2: "TJ",
            code3: "TJK",
            name: "Tajikistan",
            capital: "Dushanbe",
            region: "Asia",
            subregion: "Central Asia",
            states: [
              { code: "DU", name: "Dushanbe", subdivision: null },
              { code: "KT", name: "Khatlon", subdivision: null },
              {
                code: "GB",
                name: "K\u016dhistoni Badakhshon",
                subdivision: null,
              },
              { code: "SU", name: "Sughd", subdivision: null },
            ],
          },
          {
            code2: "TZ",
            code3: "TZA",
            name: "Tanzania",
            capital: "Dodoma",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "01", name: "Arusha", subdivision: null },
              { code: "02", name: "Dar es Salaam", subdivision: null },
              { code: "03", name: "Dodoma", subdivision: null },
              { code: "04", name: "Iringa", subdivision: null },
              { code: "05", name: "Kagera", subdivision: null },
              { code: "06", name: "Kaskazini Pemba", subdivision: null },
              { code: "07", name: "Kaskazini Unguja", subdivision: null },
              { code: "08", name: "Kigoma", subdivision: null },
              { code: "09", name: "Kilimanjaro", subdivision: null },
              { code: "10", name: "Kusini Pemba", subdivision: null },
              { code: "11", name: "Kusini Unguja", subdivision: null },
              { code: "12", name: "Lindi", subdivision: null },
              { code: "26", name: "Manyara", subdivision: null },
              { code: "13", name: "Mara", subdivision: null },
              { code: "14", name: "Mbeya", subdivision: null },
              { code: "15", name: "Mjini Magharibi", subdivision: null },
              { code: "16", name: "Morogoro", subdivision: null },
              { code: "17", name: "Mtwara", subdivision: null },
              { code: "18", name: "Mwanza", subdivision: null },
              { code: "19", name: "Pwani", subdivision: null },
              { code: "20", name: "Rukwa", subdivision: null },
              { code: "21", name: "Ruvuma", subdivision: null },
              { code: "22", name: "Shinyanga", subdivision: null },
              { code: "23", name: "Singida", subdivision: null },
              { code: "24", name: "Tabora", subdivision: null },
              { code: "25", name: "Tanga", subdivision: null },
            ],
          },
          {
            code2: "TH",
            code3: "THA",
            name: "Thailand",
            capital: "Bangkok",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "37", name: "Amnat Charoen", subdivision: null },
              { code: "15", name: "Ang Thong", subdivision: null },
              { code: "38", name: "Bueng Kan", subdivision: null },
              { code: "31", name: "Buri Ram", subdivision: null },
              { code: "24", name: "Chachoengsao", subdivision: null },
              { code: "18", name: "Chai Nat", subdivision: null },
              { code: "36", name: "Chaiyaphum", subdivision: null },
              { code: "22", name: "Chanthaburi", subdivision: null },
              { code: "50", name: "Chiang Mai", subdivision: null },
              { code: "57", name: "Chiang Rai", subdivision: null },
              { code: "20", name: "Chon Buri", subdivision: null },
              { code: "86", name: "Chumphon", subdivision: null },
              { code: "46", name: "Kalasin", subdivision: null },
              { code: "62", name: "Kamphaeng Phet", subdivision: null },
              { code: "71", name: "Kanchanaburi", subdivision: null },
              { code: "40", name: "Khon Kaen", subdivision: null },
              { code: "81", name: "Krabi", subdivision: null },
              { code: "10", name: "Krung Thep Maha Nakhon", subdivision: null },
              { code: "52", name: "Lampang", subdivision: null },
              { code: "51", name: "Lamphun", subdivision: null },
              { code: "42", name: "Loei", subdivision: null },
              { code: "16", name: "Lop Buri", subdivision: null },
              { code: "58", name: "Mae Hong Son", subdivision: null },
              { code: "44", name: "Maha Sarakham", subdivision: null },
              { code: "49", name: "Mukdahan", subdivision: null },
              { code: "26", name: "Nakhon Nayok", subdivision: null },
              { code: "73", name: "Nakhon Pathom", subdivision: null },
              { code: "48", name: "Nakhon Phanom", subdivision: null },
              { code: "30", name: "Nakhon Ratchasima", subdivision: null },
              { code: "60", name: "Nakhon Sawan", subdivision: null },
              { code: "80", name: "Nakhon Si Thammarat", subdivision: null },
              { code: "55", name: "Nan", subdivision: null },
              { code: "96", name: "Narathiwat", subdivision: null },
              { code: "39", name: "Nong Bua Lam Phu", subdivision: null },
              { code: "43", name: "Nong Khai", subdivision: null },
              { code: "12", name: "Nonthaburi", subdivision: null },
              { code: "13", name: "Pathum Thani", subdivision: null },
              { code: "94", name: "Pattani", subdivision: null },
              { code: "82", name: "Phangnga", subdivision: null },
              { code: "93", name: "Phatthalung", subdivision: null },
              { code: "S", name: "Phatthaya", subdivision: null },
              { code: "56", name: "Phayao", subdivision: null },
              { code: "67", name: "Phetchabun", subdivision: null },
              { code: "76", name: "Phetchaburi", subdivision: null },
              { code: "66", name: "Phichit", subdivision: null },
              { code: "65", name: "Phitsanulok", subdivision: null },
              {
                code: "14",
                name: "Phra Nakhon Si Ayutthaya",
                subdivision: null,
              },
              { code: "54", name: "Phrae", subdivision: null },
              { code: "83", name: "Phuket", subdivision: null },
              { code: "25", name: "Prachin Buri", subdivision: null },
              { code: "77", name: "Prachuap Khiri Khan", subdivision: null },
              { code: "85", name: "Ranong", subdivision: null },
              { code: "70", name: "Ratchaburi", subdivision: null },
              { code: "21", name: "Rayong", subdivision: null },
              { code: "45", name: "Roi Et", subdivision: null },
              { code: "27", name: "Sa Kaeo", subdivision: null },
              { code: "47", name: "Sakon Nakhon", subdivision: null },
              { code: "11", name: "Samut Prakan", subdivision: null },
              { code: "74", name: "Samut Sakhon", subdivision: null },
              { code: "75", name: "Samut Songkhram", subdivision: null },
              { code: "19", name: "Saraburi", subdivision: null },
              { code: "91", name: "Satun", subdivision: null },
              { code: "33", name: "Si Sa Ket", subdivision: null },
              { code: "17", name: "Sing Buri", subdivision: null },
              { code: "90", name: "Songkhla", subdivision: null },
              { code: "64", name: "Sukhothai", subdivision: null },
              { code: "72", name: "Suphan Buri", subdivision: null },
              { code: "84", name: "Surat Thani", subdivision: null },
              { code: "32", name: "Surin", subdivision: null },
              { code: "63", name: "Tak", subdivision: null },
              { code: "92", name: "Trang", subdivision: null },
              { code: "23", name: "Trat", subdivision: null },
              { code: "34", name: "Ubon Ratchathani", subdivision: null },
              { code: "41", name: "Udon Thani", subdivision: null },
              { code: "61", name: "Uthai Thani", subdivision: null },
              { code: "53", name: "Uttaradit", subdivision: null },
              { code: "95", name: "Yala", subdivision: null },
              { code: "35", name: "Yasothon", subdivision: null },
            ],
          },
          {
            code2: "TL",
            code3: "TLS",
            name: "East Timor",
            capital: "Dili",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "AL", name: "Aileu", subdivision: null },
              { code: "AN", name: "Ainaro", subdivision: null },
              { code: "BA", name: "Baucau", subdivision: null },
              { code: "BO", name: "Bobonaro", subdivision: null },
              { code: "CO", name: "Cova Lima", subdivision: null },
              { code: "DI", name: "D\xedli", subdivision: null },
              { code: "ER", name: "Ermera", subdivision: null },
              { code: "LA", name: "Lautem", subdivision: null },
              { code: "LI", name: "Liqui\xe7a", subdivision: null },
              { code: "MT", name: "Manatuto", subdivision: null },
              { code: "MF", name: "Manufahi", subdivision: null },
              { code: "OE", name: "Oecussi", subdivision: null },
              { code: "VI", name: "Viqueque", subdivision: null },
            ],
          },
          {
            code2: "TG",
            code3: "TGO",
            name: "Togo",
            capital: "Lom\xe9",
            region: "Africa",
            subregion: "Western Africa",
            states: [
              { code: "C", name: "Centre", subdivision: null },
              { code: "K", name: "Kara", subdivision: null },
              { code: "M", name: "Maritime", subdivision: null },
              { code: "P", name: "Plateaux", subdivision: null },
              { code: "S", name: "Savannes", subdivision: null },
            ],
          },
          {
            code2: "TK",
            code3: "TKL",
            name: "Tokelau",
            capital: "Fakaofo",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "TO",
            code3: "TON",
            name: "Tonga",
            capital: "Nuku'alofa",
            region: "Oceania",
            subregion: "Polynesia",
            states: [
              { code: "01", name: "'Eua", subdivision: null },
              { code: "02", name: "Ha'apai", subdivision: null },
              { code: "03", name: "Niuas", subdivision: null },
              { code: "04", name: "Tongatapu", subdivision: null },
              { code: "05", name: "Vava'u", subdivision: null },
            ],
          },
          {
            code2: "TT",
            code3: "TTO",
            name: "Trinidad and Tobago",
            capital: "Port of Spain",
            region: "North America",
            subregion: "Caribbean",
            states: [
              { code: "ARI", name: "Arima", subdivision: null },
              { code: "CHA", name: "Chaguanas", subdivision: null },
              {
                code: "CTT",
                name: "Couva-Tabaquite-Talparo",
                subdivision: null,
              },
              { code: "DMN", name: "Diego Martin", subdivision: null },
              { code: "ETO", name: "Eastern Tobago", subdivision: null },
              { code: "PED", name: "Penal-Debe", subdivision: null },
              { code: "PTF", name: "Point Fortin", subdivision: null },
              { code: "POS", name: "Port of Spain", subdivision: null },
              { code: "PRT", name: "Princes Town", subdivision: null },
              { code: "RCM", name: "Rio Claro-Mayaro", subdivision: null },
              { code: "SFO", name: "San Fernando", subdivision: null },
              { code: "SJL", name: "San Juan-Laventille", subdivision: null },
              { code: "SGE", name: "Sangre Grande", subdivision: null },
              { code: "SIP", name: "Siparia", subdivision: null },
              { code: "TUP", name: "Tunapuna-Piarco", subdivision: null },
              { code: "WTO", name: "Western Tobago", subdivision: null },
            ],
          },
          {
            code2: "TN",
            code3: "TUN",
            name: "Tunisia",
            capital: "Tunis",
            region: "Africa",
            subregion: "Northern Africa",
            states: [
              { code: "12", name: "Ariana", subdivision: null },
              { code: "13", name: "Ben Arous", subdivision: null },
              { code: "23", name: "Bizerte", subdivision: null },
              { code: "31", name: "B\xe9ja", subdivision: null },
              { code: "81", name: "Gab\xe8s", subdivision: null },
              { code: "71", name: "Gafsa", subdivision: null },
              { code: "32", name: "Jendouba", subdivision: null },
              { code: "41", name: "Kairouan", subdivision: null },
              { code: "42", name: "Kasserine", subdivision: null },
              { code: "73", name: "Kebili", subdivision: null },
              { code: "14", name: "La Manouba", subdivision: null },
              { code: "33", name: "Le Kef", subdivision: null },
              { code: "53", name: "Mahdia", subdivision: null },
              { code: "82", name: "Medenine", subdivision: null },
              { code: "52", name: "Monastir", subdivision: null },
              { code: "21", name: "Nabeul", subdivision: null },
              { code: "61", name: "Sfax", subdivision: null },
              { code: "43", name: "Sidi Bouzid", subdivision: null },
              { code: "34", name: "Siliana", subdivision: null },
              { code: "51", name: "Sousse", subdivision: null },
              { code: "83", name: "Tataouine", subdivision: null },
              { code: "72", name: "Tozeur", subdivision: null },
              { code: "11", name: "Tunis", subdivision: null },
              { code: "22", name: "Zaghouan", subdivision: null },
            ],
          },
          {
            code2: "TR",
            code3: "TUR",
            name: "Turkey",
            capital: "Ankara",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "01", name: "Adana", subdivision: null },
              { code: "02", name: "Ad\u0131yaman", subdivision: null },
              { code: "03", name: "Afyonkarahisar", subdivision: null },
              { code: "68", name: "Aksaray", subdivision: null },
              { code: "05", name: "Amasya", subdivision: null },
              { code: "06", name: "Ankara", subdivision: null },
              { code: "07", name: "Antalya", subdivision: null },
              { code: "75", name: "Ardahan", subdivision: null },
              { code: "08", name: "Artvin", subdivision: null },
              { code: "09", name: "Ayd\u0131n", subdivision: null },
              { code: "04", name: "A\u011fr\u0131", subdivision: null },
              { code: "10", name: "Bal\u0131kesir", subdivision: null },
              { code: "74", name: "Bart\u0131n", subdivision: null },
              { code: "72", name: "Batman", subdivision: null },
              { code: "69", name: "Bayburt", subdivision: null },
              { code: "11", name: "Bilecik", subdivision: null },
              { code: "12", name: "Bing\xf6l", subdivision: null },
              { code: "13", name: "Bitlis", subdivision: null },
              { code: "14", name: "Bolu", subdivision: null },
              { code: "15", name: "Burdur", subdivision: null },
              { code: "16", name: "Bursa", subdivision: null },
              { code: "20", name: "Denizli", subdivision: null },
              { code: "21", name: "Diyarbak\u0131r", subdivision: null },
              { code: "81", name: "D\xfczce", subdivision: null },
              { code: "22", name: "Edirne", subdivision: null },
              { code: "23", name: "Elaz\u0131\u011f", subdivision: null },
              { code: "24", name: "Erzincan", subdivision: null },
              { code: "25", name: "Erzurum", subdivision: null },
              { code: "26", name: "Eski\u015fehir", subdivision: null },
              { code: "27", name: "Gaziantep", subdivision: null },
              { code: "28", name: "Giresun", subdivision: null },
              { code: "29", name: "G\xfcm\xfc\u015fhane", subdivision: null },
              { code: "30", name: "Hakk\xe2ri", subdivision: null },
              { code: "31", name: "Hatay", subdivision: null },
              { code: "32", name: "Isparta", subdivision: null },
              { code: "76", name: "I\u011fd\u0131r", subdivision: null },
              { code: "46", name: "Kahramanmara\u015f", subdivision: null },
              { code: "78", name: "Karab\xfck", subdivision: null },
              { code: "70", name: "Karaman", subdivision: null },
              { code: "36", name: "Kars", subdivision: null },
              { code: "37", name: "Kastamonu", subdivision: null },
              { code: "38", name: "Kayseri", subdivision: null },
              { code: "79", name: "Kilis", subdivision: null },
              { code: "41", name: "Kocaeli", subdivision: null },
              { code: "42", name: "Konya", subdivision: null },
              { code: "43", name: "K\xfctahya", subdivision: null },
              { code: "39", name: "K\u0131rklareli", subdivision: null },
              { code: "71", name: "K\u0131r\u0131kkale", subdivision: null },
              { code: "40", name: "K\u0131r\u015fehir", subdivision: null },
              { code: "44", name: "Malatya", subdivision: null },
              { code: "45", name: "Manisa", subdivision: null },
              { code: "47", name: "Mardin", subdivision: null },
              { code: "33", name: "Mersin", subdivision: null },
              { code: "48", name: "Mu\u011fla", subdivision: null },
              { code: "49", name: "Mu\u015f", subdivision: null },
              { code: "50", name: "Nev\u015fehir", subdivision: null },
              { code: "51", name: "Ni\u011fde", subdivision: null },
              { code: "52", name: "Ordu", subdivision: null },
              { code: "80", name: "Osmaniye", subdivision: null },
              { code: "53", name: "Rize", subdivision: null },
              { code: "54", name: "Sakarya", subdivision: null },
              { code: "55", name: "Samsun", subdivision: null },
              { code: "56", name: "Siirt", subdivision: null },
              { code: "57", name: "Sinop", subdivision: null },
              { code: "58", name: "Sivas", subdivision: null },
              { code: "59", name: "Tekirda\u011f", subdivision: null },
              { code: "60", name: "Tokat", subdivision: null },
              { code: "61", name: "Trabzon", subdivision: null },
              { code: "62", name: "Tunceli", subdivision: null },
              { code: "64", name: "U\u015fak", subdivision: null },
              { code: "65", name: "Van", subdivision: null },
              { code: "77", name: "Yalova", subdivision: null },
              { code: "66", name: "Yozgat", subdivision: null },
              { code: "67", name: "Zonguldak", subdivision: null },
              { code: "17", name: "\xc7anakkale", subdivision: null },
              { code: "18", name: "\xc7ank\u0131r\u0131", subdivision: null },
              { code: "19", name: "\xc7orum", subdivision: null },
              { code: "34", name: "\u0130stanbul", subdivision: null },
              { code: "35", name: "\u0130zmir", subdivision: null },
              { code: "63", name: "\u015eanl\u0131urfa", subdivision: null },
              { code: "73", name: "\u015e\u0131rnak", subdivision: null },
            ],
          },
          {
            code2: "TM",
            code3: "TKM",
            name: "Turkmenistan",
            capital: "Ashgabat",
            region: "Asia",
            subregion: "Central Asia",
            states: [
              { code: "A", name: "Ahal", subdivision: null },
              { code: "S", name: "A\u015fgabat", subdivision: null },
              { code: "B", name: "Balkan", subdivision: null },
              { code: "D", name: "Da\u015foguz", subdivision: null },
              { code: "L", name: "Lebap", subdivision: null },
              { code: "M", name: "Mary", subdivision: null },
            ],
          },
          {
            code2: "TC",
            code3: "TCA",
            name: "Turks and Caicos Islands",
            capital: "Cockburn Town",
            region: "North America",
            subregion: "Caribbean",
            states: [],
          },
          {
            code2: "TV",
            code3: "TUV",
            name: "Tuvalu",
            capital: "Funafuti",
            region: "Oceania",
            subregion: "Polynesia",
            states: [
              { code: "FUN", name: "Funafuti", subdivision: null },
              { code: "NMG", name: "Nanumanga", subdivision: null },
              { code: "NMA", name: "Nanumea", subdivision: null },
              { code: "NIT", name: "Niutao", subdivision: null },
              { code: "NUI", name: "Nui", subdivision: null },
              { code: "NKF", name: "Nukufetau", subdivision: null },
              { code: "NKL", name: "Nukulaelae", subdivision: null },
              { code: "VAI", name: "Vaitupu", subdivision: null },
            ],
          },
          {
            code2: "UG",
            code3: "UGA",
            name: "Uganda",
            capital: "Kampala",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "C", name: "Central", subdivision: null },
              { code: "E", name: "Eastern", subdivision: null },
              { code: "N", name: "Northern", subdivision: null },
              { code: "W", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "UA",
            code3: "UKR",
            name: "Ukraine",
            capital: "Kiev",
            region: "Europe",
            subregion: "Eastern Europe",
            states: [
              {
                code: "43",
                name: "Avtonomna Respublika Krym",
                subdivision: null,
              },
              { code: "71", name: "Cherkas'ka Oblast'", subdivision: null },
              { code: "74", name: "Chernihivs'ka Oblast'", subdivision: null },
              { code: "77", name: "Chernivets'ka Oblast'", subdivision: null },
              {
                code: "12",
                name: "Dnipropetrovs'ka Oblast'",
                subdivision: null,
              },
              { code: "14", name: "Donets'ka Oblast'", subdivision: null },
              {
                code: "26",
                name: "Ivano-Frankivs'ka Oblast'",
                subdivision: null,
              },
              { code: "63", name: "Kharkivs'ka Oblast'", subdivision: null },
              { code: "65", name: "Khersons'ka Oblast'", subdivision: null },
              { code: "68", name: "Khmel'nyts'ka Oblast'", subdivision: null },
              { code: "35", name: "Kirovohrads'ka Oblast'", subdivision: null },
              { code: "30", name: "Ky\xefv", subdivision: null },
              { code: "32", name: "Ky\xefvs'ka Oblast'", subdivision: null },
              { code: "46", name: "L'vivs'ka Oblast'", subdivision: null },
              { code: "09", name: "Luhans'ka Oblast'", subdivision: null },
              {
                code: "48",
                name: "Mykola\xefvs'ka Oblast'",
                subdivision: null,
              },
              { code: "51", name: "Odes'ka Oblast'", subdivision: null },
              { code: "53", name: "Poltavs'ka Oblast'", subdivision: null },
              { code: "56", name: "Rivnens'ka Oblast'", subdivision: null },
              { code: "40", name: "Sevastopol'", subdivision: null },
              { code: "59", name: "Sums'ka Oblast'", subdivision: null },
              { code: "61", name: "Ternopil's'ka Oblast'", subdivision: null },
              { code: "05", name: "Vinnyts'ka Oblast'", subdivision: null },
              { code: "07", name: "Volyns'ka Oblast'", subdivision: null },
              { code: "21", name: "Zakarpats'ka Oblast'", subdivision: null },
              { code: "23", name: "Zaporiz'ka Oblast'", subdivision: null },
              { code: "18", name: "Zhytomyrs'ka Oblast'", subdivision: null },
            ],
          },
          {
            code2: "AE",
            code3: "ARE",
            name: "United Arab Emirates",
            capital: "Abu Dhabi",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AJ", name: "'Ajm\u0101n", subdivision: null },
              { code: "AZ", name: "Ab\u016b Z\u0327aby", subdivision: null },
              { code: "FU", name: "Al Fujayrah", subdivision: null },
              { code: "SH", name: "Ash Sh\u0101riqah", subdivision: null },
              { code: "DU", name: "Dubayy", subdivision: null },
              { code: "RK", name: "Ra's al Khaymah", subdivision: null },
              { code: "UQ", name: "Umm al Qaywayn", subdivision: null },
            ],
          },
          {
            code2: "GB",
            code3: "GBR",
            name: "United Kingdom",
            capital: "London",
            region: "Europe",
            subregion: "Northern Europe",
            states: [
              {
                code: "BDG",
                name: "Barking and Dagenham",
                subdivision: "London borough",
              },
              { code: "BNE", name: "Barnet", subdivision: "London borough" },
              { code: "BEX", name: "Bexley", subdivision: "London borough" },
              { code: "BEN", name: "Brent", subdivision: "London borough" },
              { code: "BRY", name: "Bromley", subdivision: "London borough" },
              { code: "CMD", name: "Camden", subdivision: "London borough" },
              { code: "CRY", name: "Croydon", subdivision: "London borough" },
              { code: "EAL", name: "Ealing", subdivision: "London borough" },
              { code: "ENF", name: "Enfield", subdivision: "London borough" },
              { code: "GRE", name: "Greenwich", subdivision: "London borough" },
              { code: "HCK", name: "Hackney", subdivision: "London borough" },
              {
                code: "HMF",
                name: "Hammersmith and Fulham",
                subdivision: "London borough",
              },
              { code: "HRY", name: "Haringey", subdivision: "London borough" },
              { code: "HRW", name: "Harrow", subdivision: "London borough" },
              { code: "HAV", name: "Havering", subdivision: "London borough" },
              {
                code: "HIL",
                name: "Hillingdon",
                subdivision: "London borough",
              },
              { code: "HNS", name: "Hounslow", subdivision: "London borough" },
              { code: "ISL", name: "Islington", subdivision: "London borough" },
              {
                code: "KEC",
                name: "Kensington and Chelsea",
                subdivision: "London borough",
              },
              {
                code: "KTT",
                name: "Kingston upon Thames",
                subdivision: "London borough",
              },
              { code: "LBH", name: "Lambeth", subdivision: "London borough" },
              { code: "LEW", name: "Lewisham", subdivision: "London borough" },
              { code: "MRT", name: "Merton", subdivision: "London borough" },
              { code: "NWM", name: "Newham", subdivision: "London borough" },
              { code: "RDB", name: "Redbridge", subdivision: "London borough" },
              {
                code: "RIC",
                name: "Richmond upon Thames",
                subdivision: "London borough",
              },
              { code: "SWK", name: "Southwark", subdivision: "London borough" },
              { code: "STN", name: "Sutton", subdivision: "London borough" },
              {
                code: "TWH",
                name: "Tower Hamlets",
                subdivision: "London borough",
              },
              {
                code: "WFT",
                name: "Waltham Forest",
                subdivision: "London borough",
              },
              {
                code: "WND",
                name: "Wandsworth",
                subdivision: "London borough",
              },
              {
                code: "WSM",
                name: "Westminster",
                subdivision: "London borough",
              },
              { code: "EAW", name: "England and Wales", subdivision: "Nation" },
              { code: "GBN", name: "Great Britain", subdivision: "Nation" },
              { code: "UKM", name: "United Kingdom", subdivision: "Nation" },
              {
                code: "LND",
                name: "London, City of",
                subdivision: "city corporation",
              },
              {
                code: "ABE",
                name: "Aberdeen City",
                subdivision: "council area",
              },
              {
                code: "ABD",
                name: "Aberdeenshire",
                subdivision: "council area",
              },
              { code: "ANS", name: "Angus", subdivision: "council area" },
              {
                code: "AGB",
                name: "Argyll and Bute",
                subdivision: "council area",
              },
              {
                code: "CLK",
                name: "Clackmannanshire",
                subdivision: "council area",
              },
              {
                code: "DGY",
                name: "Dumfries and Galloway",
                subdivision: "council area",
              },
              { code: "DND", name: "Dundee City", subdivision: "council area" },
              {
                code: "EAY",
                name: "East Ayrshire",
                subdivision: "council area",
              },
              {
                code: "EDU",
                name: "East Dunbartonshire",
                subdivision: "council area",
              },
              {
                code: "ELN",
                name: "East Lothian",
                subdivision: "council area",
              },
              {
                code: "ERW",
                name: "East Renfrewshire",
                subdivision: "council area",
              },
              {
                code: "EDH",
                name: "Edinburgh, City of",
                subdivision: "council area",
              },
              { code: "ELS", name: "Eilean Siar", subdivision: "council area" },
              { code: "FAL", name: "Falkirk", subdivision: "council area" },
              { code: "FIF", name: "Fife", subdivision: "council area" },
              {
                code: "GLG",
                name: "Glasgow City",
                subdivision: "council area",
              },
              { code: "HLD", name: "Highland", subdivision: "council area" },
              { code: "IVC", name: "Inverclyde", subdivision: "council area" },
              { code: "MLN", name: "Midlothian", subdivision: "council area" },
              { code: "MRY", name: "Moray", subdivision: "council area" },
              {
                code: "NAY",
                name: "North Ayrshire",
                subdivision: "council area",
              },
              {
                code: "NLK",
                name: "North Lanarkshire",
                subdivision: "council area",
              },
              {
                code: "ORK",
                name: "Orkney Islands",
                subdivision: "council area",
              },
              {
                code: "PKN",
                name: "Perth and Kinross",
                subdivision: "council area",
              },
              {
                code: "RFW",
                name: "Renfrewshire",
                subdivision: "council area",
              },
              {
                code: "SCB",
                name: "Scottish Borders, The",
                subdivision: "council area",
              },
              {
                code: "ZET",
                name: "Shetland Islands",
                subdivision: "council area",
              },
              {
                code: "SAY",
                name: "South Ayrshire",
                subdivision: "council area",
              },
              {
                code: "SLK",
                name: "South Lanarkshire",
                subdivision: "council area",
              },
              { code: "STG", name: "Stirling", subdivision: "council area" },
              {
                code: "WDU",
                name: "West Dunbartonshire",
                subdivision: "council area",
              },
              {
                code: "WLN",
                name: "West Lothian",
                subdivision: "council area",
              },
              { code: "ENG", name: "England", subdivision: "country" },
              { code: "SCT", name: "Scotland", subdivision: "country" },
              { code: "WLS", name: "Wales", subdivision: "country" },
              {
                code: "ANT",
                name: "Antrim",
                subdivision: "district council area",
              },
              {
                code: "ARD",
                name: "Ards",
                subdivision: "district council area",
              },
              {
                code: "ARM",
                name: "Armagh",
                subdivision: "district council area",
              },
              {
                code: "BLA",
                name: "Ballymena",
                subdivision: "district council area",
              },
              {
                code: "BLY",
                name: "Ballymoney",
                subdivision: "district council area",
              },
              {
                code: "BNB",
                name: "Banbridge",
                subdivision: "district council area",
              },
              {
                code: "BFS",
                name: "Belfast",
                subdivision: "district council area",
              },
              {
                code: "CKF",
                name: "Carrickfergus",
                subdivision: "district council area",
              },
              {
                code: "CSR",
                name: "Castlereagh",
                subdivision: "district council area",
              },
              {
                code: "CLR",
                name: "Coleraine",
                subdivision: "district council area",
              },
              {
                code: "CKT",
                name: "Cookstown",
                subdivision: "district council area",
              },
              {
                code: "CGV",
                name: "Craigavon",
                subdivision: "district council area",
              },
              {
                code: "DRY",
                name: "Derry",
                subdivision: "district council area",
              },
              {
                code: "DOW",
                name: "Down",
                subdivision: "district council area",
              },
              {
                code: "DGN",
                name: "Dungannon and South Tyrone",
                subdivision: "district council area",
              },
              {
                code: "FER",
                name: "Fermanagh",
                subdivision: "district council area",
              },
              {
                code: "LRN",
                name: "Larne",
                subdivision: "district council area",
              },
              {
                code: "LMV",
                name: "Limavady",
                subdivision: "district council area",
              },
              {
                code: "LSB",
                name: "Lisburn",
                subdivision: "district council area",
              },
              {
                code: "MFT",
                name: "Magherafelt",
                subdivision: "district council area",
              },
              {
                code: "MYL",
                name: "Moyle",
                subdivision: "district council area",
              },
              {
                code: "NYM",
                name: "Newry and Mourne District",
                subdivision: "district council area",
              },
              {
                code: "NTA",
                name: "Newtownabbey",
                subdivision: "district council area",
              },
              {
                code: "NDN",
                name: "North Down",
                subdivision: "district council area",
              },
              {
                code: "OMH",
                name: "Omagh",
                subdivision: "district council area",
              },
              {
                code: "STB",
                name: "Strabane",
                subdivision: "district council area",
              },
              {
                code: "BNS",
                name: "Barnsley",
                subdivision: "metropolitan district",
              },
              {
                code: "BIR",
                name: "Birmingham",
                subdivision: "metropolitan district",
              },
              {
                code: "BOL",
                name: "Bolton",
                subdivision: "metropolitan district",
              },
              {
                code: "BRD",
                name: "Bradford",
                subdivision: "metropolitan district",
              },
              {
                code: "BUR",
                name: "Bury",
                subdivision: "metropolitan district",
              },
              {
                code: "CLD",
                name: "Calderdale",
                subdivision: "metropolitan district",
              },
              {
                code: "COV",
                name: "Coventry",
                subdivision: "metropolitan district",
              },
              {
                code: "DNC",
                name: "Doncaster",
                subdivision: "metropolitan district",
              },
              {
                code: "DUD",
                name: "Dudley",
                subdivision: "metropolitan district",
              },
              {
                code: "GAT",
                name: "Gateshead",
                subdivision: "metropolitan district",
              },
              {
                code: "KIR",
                name: "Kirklees",
                subdivision: "metropolitan district",
              },
              {
                code: "KWL",
                name: "Knowsley",
                subdivision: "metropolitan district",
              },
              {
                code: "LDS",
                name: "Leeds",
                subdivision: "metropolitan district",
              },
              {
                code: "LIV",
                name: "Liverpool",
                subdivision: "metropolitan district",
              },
              {
                code: "MAN",
                name: "Manchester",
                subdivision: "metropolitan district",
              },
              {
                code: "NET",
                name: "Newcastle upon Tyne",
                subdivision: "metropolitan district",
              },
              {
                code: "NTY",
                name: "North Tyneside",
                subdivision: "metropolitan district",
              },
              {
                code: "OLD",
                name: "Oldham",
                subdivision: "metropolitan district",
              },
              {
                code: "RCH",
                name: "Rochdale",
                subdivision: "metropolitan district",
              },
              {
                code: "ROT",
                name: "Rotherham",
                subdivision: "metropolitan district",
              },
              {
                code: "SLF",
                name: "Salford",
                subdivision: "metropolitan district",
              },
              {
                code: "SAW",
                name: "Sandwell",
                subdivision: "metropolitan district",
              },
              {
                code: "SFT",
                name: "Sefton",
                subdivision: "metropolitan district",
              },
              {
                code: "SHF",
                name: "Sheffield",
                subdivision: "metropolitan district",
              },
              {
                code: "SOL",
                name: "Solihull",
                subdivision: "metropolitan district",
              },
              {
                code: "STY",
                name: "South Tyneside",
                subdivision: "metropolitan district",
              },
              {
                code: "SHN",
                name: "St. Helens",
                subdivision: "metropolitan district",
              },
              {
                code: "SKP",
                name: "Stockport",
                subdivision: "metropolitan district",
              },
              {
                code: "SND",
                name: "Sunderland",
                subdivision: "metropolitan district",
              },
              {
                code: "TAM",
                name: "Tameside",
                subdivision: "metropolitan district",
              },
              {
                code: "TRF",
                name: "Trafford",
                subdivision: "metropolitan district",
              },
              {
                code: "WKF",
                name: "Wakefield",
                subdivision: "metropolitan district",
              },
              {
                code: "WLL",
                name: "Walsall",
                subdivision: "metropolitan district",
              },
              {
                code: "WGN",
                name: "Wigan",
                subdivision: "metropolitan district",
              },
              {
                code: "WRL",
                name: "Wirral",
                subdivision: "metropolitan district",
              },
              {
                code: "WLV",
                name: "Wolverhampton",
                subdivision: "metropolitan district",
              },
              {
                code: "NIR",
                name: "Northern Ireland",
                subdivision: "province",
              },
              {
                code: "BKM",
                name: "Buckinghamshire",
                subdivision: "two-tier county",
              },
              {
                code: "CAM",
                name: "Cambridgeshire",
                subdivision: "two-tier county",
              },
              { code: "CMA", name: "Cumbria", subdivision: "two-tier county" },
              {
                code: "DBY",
                name: "Derbyshire",
                subdivision: "two-tier county",
              },
              { code: "DEV", name: "Devon", subdivision: "two-tier county" },
              { code: "DOR", name: "Dorset", subdivision: "two-tier county" },
              {
                code: "ESX",
                name: "East Sussex",
                subdivision: "two-tier county",
              },
              { code: "ESS", name: "Essex", subdivision: "two-tier county" },
              {
                code: "GLS",
                name: "Gloucestershire",
                subdivision: "two-tier county",
              },
              {
                code: "HAM",
                name: "Hampshire",
                subdivision: "two-tier county",
              },
              {
                code: "HRT",
                name: "Hertfordshire",
                subdivision: "two-tier county",
              },
              { code: "KEN", name: "Kent", subdivision: "two-tier county" },
              {
                code: "LAN",
                name: "Lancashire",
                subdivision: "two-tier county",
              },
              {
                code: "LEC",
                name: "Leicestershire",
                subdivision: "two-tier county",
              },
              {
                code: "LIN",
                name: "Lincolnshire",
                subdivision: "two-tier county",
              },
              { code: "NFK", name: "Norfolk", subdivision: "two-tier county" },
              {
                code: "NYK",
                name: "North Yorkshire",
                subdivision: "two-tier county",
              },
              {
                code: "NTH",
                name: "Northamptonshire",
                subdivision: "two-tier county",
              },
              {
                code: "NTT",
                name: "Nottinghamshire",
                subdivision: "two-tier county",
              },
              {
                code: "OXF",
                name: "Oxfordshire",
                subdivision: "two-tier county",
              },
              { code: "SOM", name: "Somerset", subdivision: "two-tier county" },
              {
                code: "STS",
                name: "Staffordshire",
                subdivision: "two-tier county",
              },
              { code: "SFK", name: "Suffolk", subdivision: "two-tier county" },
              { code: "SRY", name: "Surrey", subdivision: "two-tier county" },
              {
                code: "WAR",
                name: "Warwickshire",
                subdivision: "two-tier county",
              },
              {
                code: "WSX",
                name: "West Sussex",
                subdivision: "two-tier county",
              },
              {
                code: "WOR",
                name: "Worcestershire",
                subdivision: "two-tier county",
              },
              {
                code: "BAS",
                name: "Bath and North East Somerset",
                subdivision: "unitary authority",
              },
              {
                code: "BDF",
                name: "Bedford",
                subdivision: "unitary authority",
              },
              {
                code: "BBD",
                name: "Blackburn with Darwen",
                subdivision: "unitary authority",
              },
              {
                code: "BPL",
                name: "Blackpool",
                subdivision: "unitary authority",
              },
              {
                code: "BGW",
                name: "Blaenau Gwent",
                subdivision: "unitary authority",
              },
              {
                code: "BMH",
                name: "Bournemouth",
                subdivision: "unitary authority",
              },
              {
                code: "BRC",
                name: "Bracknell Forest",
                subdivision: "unitary authority",
              },
              {
                code: "BGE",
                name: "Bridgend",
                subdivision: "unitary authority",
              },
              {
                code: "BNH",
                name: "Brighton and Hove",
                subdivision: "unitary authority",
              },
              {
                code: "BST",
                name: "Bristol, City of",
                subdivision: "unitary authority",
              },
              {
                code: "CAY",
                name: "Caerphilly",
                subdivision: "unitary authority",
              },
              {
                code: "CRF",
                name: "Cardiff",
                subdivision: "unitary authority",
              },
              {
                code: "CMN",
                name: "Carmarthenshire",
                subdivision: "unitary authority",
              },
              {
                code: "CBF",
                name: "Central Bedfordshire",
                subdivision: "unitary authority",
              },
              {
                code: "CGN",
                name: "Ceredigion",
                subdivision: "unitary authority",
              },
              {
                code: "CHE",
                name: "Cheshire East",
                subdivision: "unitary authority",
              },
              {
                code: "CHW",
                name: "Cheshire West and Chester",
                subdivision: "unitary authority",
              },
              { code: "CWY", name: "Conwy", subdivision: "unitary authority" },
              {
                code: "CON",
                name: "Cornwall",
                subdivision: "unitary authority",
              },
              {
                code: "DAL",
                name: "Darlington",
                subdivision: "unitary authority",
              },
              {
                code: "DEN",
                name: "Denbighshire",
                subdivision: "unitary authority",
              },
              { code: "DER", name: "Derby", subdivision: "unitary authority" },
              {
                code: "DUR",
                name: "Durham, County",
                subdivision: "unitary authority",
              },
              {
                code: "ERY",
                name: "East Riding of Yorkshire",
                subdivision: "unitary authority",
              },
              {
                code: "FLN",
                name: "Flintshire",
                subdivision: "unitary authority",
              },
              {
                code: "GWN",
                name: "Gwynedd",
                subdivision: "unitary authority",
              },
              { code: "HAL", name: "Halton", subdivision: "unitary authority" },
              {
                code: "HPL",
                name: "Hartlepool",
                subdivision: "unitary authority",
              },
              {
                code: "HEF",
                name: "Herefordshire",
                subdivision: "unitary authority",
              },
              {
                code: "AGY",
                name: "Isle of Anglesey",
                subdivision: "unitary authority",
              },
              {
                code: "IOW",
                name: "Isle of Wight",
                subdivision: "unitary authority",
              },
              {
                code: "IOS",
                name: "Isles of Scilly",
                subdivision: "unitary authority",
              },
              {
                code: "KHL",
                name: "Kingston upon Hull",
                subdivision: "unitary authority",
              },
              {
                code: "LCE",
                name: "Leicester",
                subdivision: "unitary authority",
              },
              { code: "LUT", name: "Luton", subdivision: "unitary authority" },
              { code: "MDW", name: "Medway", subdivision: "unitary authority" },
              {
                code: "MTY",
                name: "Merthyr Tydfil",
                subdivision: "unitary authority",
              },
              {
                code: "MDB",
                name: "Middlesbrough",
                subdivision: "unitary authority",
              },
              {
                code: "MIK",
                name: "Milton Keynes",
                subdivision: "unitary authority",
              },
              {
                code: "MON",
                name: "Monmouthshire",
                subdivision: "unitary authority",
              },
              {
                code: "NTL",
                name: "Neath Port Talbot",
                subdivision: "unitary authority",
              },
              {
                code: "NWP",
                name: "Newport",
                subdivision: "unitary authority",
              },
              {
                code: "NEL",
                name: "North East Lincolnshire",
                subdivision: "unitary authority",
              },
              {
                code: "NLN",
                name: "North Lincolnshire",
                subdivision: "unitary authority",
              },
              {
                code: "NSM",
                name: "North Somerset",
                subdivision: "unitary authority",
              },
              {
                code: "NBL",
                name: "Northumberland",
                subdivision: "unitary authority",
              },
              {
                code: "NGM",
                name: "Nottingham",
                subdivision: "unitary authority",
              },
              {
                code: "PEM",
                name: "Pembrokeshire",
                subdivision: "unitary authority",
              },
              {
                code: "PTE",
                name: "Peterborough",
                subdivision: "unitary authority",
              },
              {
                code: "PLY",
                name: "Plymouth",
                subdivision: "unitary authority",
              },
              { code: "POL", name: "Poole", subdivision: "unitary authority" },
              {
                code: "POR",
                name: "Portsmouth",
                subdivision: "unitary authority",
              },
              { code: "POW", name: "Powys", subdivision: "unitary authority" },
              {
                code: "RDG",
                name: "Reading",
                subdivision: "unitary authority",
              },
              {
                code: "RCC",
                name: "Redcar and Cleveland",
                subdivision: "unitary authority",
              },
              {
                code: "RCT",
                name: "Rhondda, Cynon, Taff",
                subdivision: "unitary authority",
              },
              {
                code: "RUT",
                name: "Rutland",
                subdivision: "unitary authority",
              },
              {
                code: "SHR",
                name: "Shropshire",
                subdivision: "unitary authority",
              },
              { code: "SLG", name: "Slough", subdivision: "unitary authority" },
              {
                code: "SGC",
                name: "South Gloucestershire",
                subdivision: "unitary authority",
              },
              {
                code: "STH",
                name: "Southampton",
                subdivision: "unitary authority",
              },
              {
                code: "SOS",
                name: "Southend-on-Sea",
                subdivision: "unitary authority",
              },
              {
                code: "STT",
                name: "Stockton-on-Tees",
                subdivision: "unitary authority",
              },
              {
                code: "STE",
                name: "Stoke-on-Trent",
                subdivision: "unitary authority",
              },
              {
                code: "SWA",
                name: "Swansea",
                subdivision: "unitary authority",
              },
              {
                code: "SWD",
                name: "Swindon",
                subdivision: "unitary authority",
              },
              {
                code: "TFW",
                name: "Telford and Wrekin",
                subdivision: "unitary authority",
              },
              {
                code: "THR",
                name: "Thurrock",
                subdivision: "unitary authority",
              },
              { code: "TOB", name: "Torbay", subdivision: "unitary authority" },
              {
                code: "TOF",
                name: "Torfaen",
                subdivision: "unitary authority",
              },
              {
                code: "VGL",
                name: "Vale of Glamorgan, The",
                subdivision: "unitary authority",
              },
              {
                code: "WRT",
                name: "Warrington",
                subdivision: "unitary authority",
              },
              {
                code: "WBK",
                name: "West Berkshire",
                subdivision: "unitary authority",
              },
              {
                code: "WIL",
                name: "Wiltshire",
                subdivision: "unitary authority",
              },
              {
                code: "WNM",
                name: "Windsor and Maidenhead",
                subdivision: "unitary authority",
              },
              {
                code: "WOK",
                name: "Wokingham",
                subdivision: "unitary authority",
              },
              {
                code: "WRX",
                name: "Wrexham",
                subdivision: "unitary authority",
              },
              { code: "YOR", name: "York", subdivision: "unitary authority" },
            ],
          },
          {
            code2: "US",
            code3: "USA",
            name: "United States",
            capital: "Washington, D.C.",
            region: "North America",
            subregion: "Northern America",
            states: [
              {
                code: "DC",
                name: "District of Columbia",
                subdivision: "district",
              },
              {
                code: "AS",
                name: "American Samoa",
                subdivision: "outlying territory",
              },
              { code: "GU", name: "Guam", subdivision: "outlying territory" },
              {
                code: "MP",
                name: "Northern Mariana Islands",
                subdivision: "outlying territory",
              },
              {
                code: "PR",
                name: "Puerto Rico",
                subdivision: "outlying territory",
              },
              {
                code: "UM",
                name: "United States Minor Outlying Islands",
                subdivision: "outlying territory",
              },
              {
                code: "VI",
                name: "Virgin Islands, U.S.",
                subdivision: "outlying territory",
              },
              { code: "AL", name: "Alabama", subdivision: "state" },
              { code: "AK", name: "Alaska", subdivision: "state" },
              { code: "AZ", name: "Arizona", subdivision: "state" },
              { code: "AR", name: "Arkansas", subdivision: "state" },
              { code: "CA", name: "California", subdivision: "state" },
              { code: "CO", name: "Colorado", subdivision: "state" },
              { code: "CT", name: "Connecticut", subdivision: "state" },
              { code: "DE", name: "Delaware", subdivision: "state" },
              { code: "FL", name: "Florida", subdivision: "state" },
              { code: "GA", name: "Georgia", subdivision: "state" },
              { code: "HI", name: "Hawaii", subdivision: "state" },
              { code: "ID", name: "Idaho", subdivision: "state" },
              { code: "IL", name: "Illinois", subdivision: "state" },
              { code: "IN", name: "Indiana", subdivision: "state" },
              { code: "IA", name: "Iowa", subdivision: "state" },
              { code: "KS", name: "Kansas", subdivision: "state" },
              { code: "KY", name: "Kentucky", subdivision: "state" },
              { code: "LA", name: "Louisiana", subdivision: "state" },
              { code: "ME", name: "Maine", subdivision: "state" },
              { code: "MD", name: "Maryland", subdivision: "state" },
              { code: "MA", name: "Massachusetts", subdivision: "state" },
              { code: "MI", name: "Michigan", subdivision: "state" },
              { code: "MN", name: "Minnesota", subdivision: "state" },
              { code: "MS", name: "Mississippi", subdivision: "state" },
              { code: "MO", name: "Missouri", subdivision: "state" },
              { code: "MT", name: "Montana", subdivision: "state" },
              { code: "NE", name: "Nebraska", subdivision: "state" },
              { code: "NV", name: "Nevada", subdivision: "state" },
              { code: "NH", name: "New Hampshire", subdivision: "state" },
              { code: "NJ", name: "New Jersey", subdivision: "state" },
              { code: "NM", name: "New Mexico", subdivision: "state" },
              { code: "NY", name: "New York", subdivision: "state" },
              { code: "NC", name: "North Carolina", subdivision: "state" },
              { code: "ND", name: "North Dakota", subdivision: "state" },
              { code: "OH", name: "Ohio", subdivision: "state" },
              { code: "OK", name: "Oklahoma", subdivision: "state" },
              { code: "OR", name: "Oregon", subdivision: "state" },
              { code: "PA", name: "Pennsylvania", subdivision: "state" },
              { code: "RI", name: "Rhode Island", subdivision: "state" },
              { code: "SC", name: "South Carolina", subdivision: "state" },
              { code: "SD", name: "South Dakota", subdivision: "state" },
              { code: "TN", name: "Tennessee", subdivision: "state" },
              { code: "TX", name: "Texas", subdivision: "state" },
              { code: "UT", name: "Utah", subdivision: "state" },
              { code: "VT", name: "Vermont", subdivision: "state" },
              { code: "VA", name: "Virginia", subdivision: "state" },
              { code: "WA", name: "Washington", subdivision: "state" },
              { code: "WV", name: "West Virginia", subdivision: "state" },
              { code: "WI", name: "Wisconsin", subdivision: "state" },
              { code: "WY", name: "Wyoming", subdivision: "state" },
            ],
          },
          {
            code2: "UY",
            code3: "URY",
            name: "Uruguay",
            capital: "Montevideo",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "AR", name: "Artigas", subdivision: null },
              { code: "CA", name: "Canelones", subdivision: null },
              { code: "CL", name: "Cerro Largo", subdivision: null },
              { code: "CO", name: "Colonia", subdivision: null },
              { code: "DU", name: "Durazno", subdivision: null },
              { code: "FS", name: "Flores", subdivision: null },
              { code: "FD", name: "Florida", subdivision: null },
              { code: "LA", name: "Lavalleja", subdivision: null },
              { code: "MA", name: "Maldonado", subdivision: null },
              { code: "MO", name: "Montevideo", subdivision: null },
              { code: "PA", name: "Paysand\xfa", subdivision: null },
              { code: "RV", name: "Rivera", subdivision: null },
              { code: "RO", name: "Rocha", subdivision: null },
              { code: "RN", name: "R\xedo Negro", subdivision: null },
              { code: "SA", name: "Salto", subdivision: null },
              { code: "SJ", name: "San Jos\xe9", subdivision: null },
              { code: "SO", name: "Soriano", subdivision: null },
              { code: "TA", name: "Tacuaremb\xf3", subdivision: null },
              { code: "TT", name: "Treinta y Tres", subdivision: null },
            ],
          },
          {
            code2: "UZ",
            code3: "UZB",
            name: "Uzbekistan",
            capital: "Tashkent",
            region: "Asia",
            subregion: "Central Asia",
            states: [
              { code: "AN", name: "Andijon", subdivision: null },
              { code: "BU", name: "Buxoro", subdivision: null },
              { code: "FA", name: "Farg\u2018ona", subdivision: null },
              { code: "JI", name: "Jizzax", subdivision: null },
              { code: "NG", name: "Namangan", subdivision: null },
              { code: "NW", name: "Navoiy", subdivision: null },
              { code: "QA", name: "Qashqadaryo", subdivision: null },
              {
                code: "QR",
                name: "Qoraqalpog\u2018iston Respublikasi",
                subdivision: null,
              },
              { code: "SA", name: "Samarqand", subdivision: null },
              { code: "SI", name: "Sirdaryo", subdivision: null },
              { code: "SU", name: "Surxondaryo", subdivision: null },
              { code: "TO", name: "Toshkent", subdivision: null },
              { code: "TK", name: "Toshkent", subdivision: null },
              { code: "XO", name: "Xorazm", subdivision: null },
            ],
          },
          {
            code2: "VU",
            code3: "VUT",
            name: "Vanuatu",
            capital: "Port Vila",
            region: "Oceania",
            subregion: "Melanesia",
            states: [
              { code: "MAP", name: "Malampa", subdivision: null },
              { code: "PAM", name: "P\xe9nama", subdivision: null },
              { code: "SAM", name: "Sanma", subdivision: null },
              { code: "SEE", name: "Sh\xe9fa", subdivision: null },
              { code: "TAE", name: "Taf\xe9a", subdivision: null },
              { code: "TOB", name: "Torba", subdivision: null },
            ],
          },
          {
            code2: "VE",
            code3: "VEN",
            name: "Venezuela",
            capital: "Caracas",
            region: "South America",
            subregion: "South America",
            states: [
              { code: "Z", name: "Amazonas", subdivision: null },
              { code: "B", name: "Anzo\xe1tegui", subdivision: null },
              { code: "C", name: "Apure", subdivision: null },
              { code: "D", name: "Aragua", subdivision: null },
              { code: "E", name: "Barinas", subdivision: null },
              { code: "F", name: "Bol\xedvar", subdivision: null },
              { code: "G", name: "Carabobo", subdivision: null },
              { code: "H", name: "Cojedes", subdivision: null },
              { code: "Y", name: "Delta Amacuro", subdivision: null },
              { code: "W", name: "Dependencias Federales", subdivision: null },
              { code: "A", name: "Distrito Capital", subdivision: null },
              { code: "I", name: "Falc\xf3n", subdivision: null },
              { code: "J", name: "Gu\xe1rico", subdivision: null },
              { code: "K", name: "Lara", subdivision: null },
              { code: "M", name: "Miranda", subdivision: null },
              { code: "N", name: "Monagas", subdivision: null },
              { code: "L", name: "M\xe9rida", subdivision: null },
              { code: "O", name: "Nueva Esparta", subdivision: null },
              { code: "P", name: "Portuguesa", subdivision: null },
              { code: "R", name: "Sucre", subdivision: null },
              { code: "T", name: "Trujillo", subdivision: null },
              { code: "S", name: "T\xe1chira", subdivision: null },
              { code: "X", name: "Vargas", subdivision: null },
              { code: "U", name: "Yaracuy", subdivision: null },
              { code: "V", name: "Zulia", subdivision: null },
            ],
          },
          {
            code2: "VN",
            code3: "VNM",
            name: "Vietnam",
            capital: "Hanoi",
            region: "Asia",
            subregion: "South-Eastern Asia",
            states: [
              { code: "44", name: "An Giang", subdivision: null },
              {
                code: "43",
                name: "B\xe0 R\u1ecba\u2013V\u0169ng T\xe0u",
                subdivision: null,
              },
              {
                code: "57",
                name: "B\xecnh D\u01b0\u01a1ng",
                subdivision: null,
              },
              {
                code: "58",
                name: "B\xecnh Ph\u01b0\u1edbc",
                subdivision: null,
              },
              { code: "40", name: "B\xecnh Thu\u1eadn", subdivision: null },
              { code: "31", name: "B\xecnh \u0110\u1ecbnh", subdivision: null },
              { code: "55", name: "B\u1ea1c Li\xeau", subdivision: null },
              { code: "54", name: "B\u1eafc Giang", subdivision: null },
              { code: "53", name: "B\u1eafc K\u1ea1n", subdivision: null },
              { code: "56", name: "B\u1eafc Ninh", subdivision: null },
              { code: "50", name: "B\u1ebfn Tre", subdivision: null },
              { code: "04", name: "Cao B\u1eb1ng", subdivision: null },
              { code: "59", name: "C\xe0 Mau", subdivision: null },
              { code: "CT", name: "C\u1ea7n Th\u01a1", subdivision: null },
              { code: "30", name: "Gia Lai", subdivision: null },
              { code: "03", name: "H\xe0 Giang", subdivision: null },
              { code: "63", name: "H\xe0 Nam", subdivision: null },
              { code: "HN", name: "H\xe0 N\u1ed9i", subdivision: null },
              { code: "15", name: "H\xe0 T\xe2y", subdivision: null },
              { code: "23", name: "H\xe0 T\u0129nh", subdivision: null },
              { code: "14", name: "H\xf2a B\xecnh", subdivision: null },
              { code: "66", name: "H\u01b0ng Y\xean", subdivision: null },
              {
                code: "61",
                name: "H\u1ea3i D\u01b0\u01a1ng",
                subdivision: null,
              },
              { code: "HP", name: "H\u1ea3i Ph\xf2ng", subdivision: null },
              { code: "73", name: "H\u1eadu Giang", subdivision: null },
              { code: "SG", name: "H\u1ed3 Ch\xed Minh", subdivision: null },
              { code: "34", name: "Kh\xe1nh H\xf2a", subdivision: null },
              { code: "47", name: "Ki\xean Giang", subdivision: null },
              { code: "28", name: "Kon Tum", subdivision: null },
              { code: "01", name: "Lai Ch\xe2u", subdivision: null },
              { code: "41", name: "Long An", subdivision: null },
              { code: "02", name: "L\xe0o Cai", subdivision: null },
              { code: "35", name: "L\xe2m \u0110\u1ed3ng", subdivision: null },
              { code: "09", name: "L\u1ea1ng S\u01a1n", subdivision: null },
              { code: "67", name: "Nam \u0110\u1ecbnh", subdivision: null },
              { code: "22", name: "Ngh\u1ec7 An", subdivision: null },
              { code: "18", name: "Ninh B\xecnh", subdivision: null },
              { code: "36", name: "Ninh Thu\u1eadn", subdivision: null },
              { code: "68", name: "Ph\xfa Th\u1ecd", subdivision: null },
              { code: "32", name: "Ph\xfa Y\xean", subdivision: null },
              { code: "24", name: "Qu\u1ea3ng B\xecnh", subdivision: null },
              { code: "27", name: "Qu\u1ea3ng Nam", subdivision: null },
              { code: "29", name: "Qu\u1ea3ng Ng\xe3i", subdivision: null },
              { code: "13", name: "Qu\u1ea3ng Ninh", subdivision: null },
              { code: "25", name: "Qu\u1ea3ng Tr\u1ecb", subdivision: null },
              { code: "52", name: "S\xf3c Tr\u0103ng", subdivision: null },
              { code: "05", name: "S\u01a1n La", subdivision: null },
              { code: "21", name: "Thanh H\xf3a", subdivision: null },
              { code: "20", name: "Th\xe1i B\xecnh", subdivision: null },
              { code: "69", name: "Th\xe1i Nguy\xean", subdivision: null },
              {
                code: "26",
                name: "Th\u1eeba Thi\xean\u2013Hu\u1ebf",
                subdivision: null,
              },
              { code: "46", name: "Ti\u1ec1n Giang", subdivision: null },
              { code: "51", name: "Tr\xe0 Vinh", subdivision: null },
              { code: "07", name: "Tuy\xean Quang", subdivision: null },
              { code: "37", name: "T\xe2y Ninh", subdivision: null },
              { code: "49", name: "V\u0129nh Long", subdivision: null },
              { code: "70", name: "V\u0129nh Ph\xfac", subdivision: null },
              { code: "06", name: "Y\xean B\xe1i", subdivision: null },
              { code: "71", name: "\u0110i\u1ec7n Bi\xean", subdivision: null },
              { code: "DN", name: "\u0110\xe0 N\u1eb5ng", subdivision: null },
              { code: "33", name: "\u0110\u1eafk L\u1eafk", subdivision: null },
              { code: "72", name: "\u0110\u1eafk N\xf4ng", subdivision: null },
              { code: "39", name: "\u0110\u1ed3ng Nai", subdivision: null },
              { code: "45", name: "\u0110\u1ed3ng Th\xe1p", subdivision: null },
            ],
          },
          {
            code2: "WF",
            code3: "WLF",
            name: "Wallis and Futuna",
            capital: "Mata-Utu",
            region: "Oceania",
            subregion: "Polynesia",
            states: [],
          },
          {
            code2: "EH",
            code3: "ESH",
            name: "Western Sahara",
            capital: "El Aai\xfan",
            region: "Africa",
            subregion: "Northern Africa",
            states: [],
          },
          {
            code2: "YE",
            code3: "YEM",
            name: "Yemen",
            capital: "Sana'a",
            region: "Asia",
            subregion: "Western Asia",
            states: [
              { code: "AD", name: "'Adan", subdivision: null },
              { code: "AM", name: "'Amr\u0101n", subdivision: null },
              { code: "AB", name: "Aby\u0101n", subdivision: null },
              { code: "BA", name: "Al Bay\u1e11\u0101'", subdivision: null },
              { code: "JA", name: "Al Jawf", subdivision: null },
              { code: "MR", name: "Al Mahrah", subdivision: null },
              { code: "MW", name: "Al Ma\u1e29w\u012bt", subdivision: null },
              { code: "HU", name: "Al \u1e28udaydah", subdivision: null },
              {
                code: "DA",
                name: "A\u1e11 \u1e10\u0101li'",
                subdivision: null,
              },
              { code: "DH", name: "Dham\u0101r", subdivision: null },
              { code: "IB", name: "Ibb", subdivision: null },
              { code: "LA", name: "La\u1e29ij", subdivision: null },
              { code: "MA", name: "Ma'rib", subdivision: null },
              { code: "RA", name: "Raymah", subdivision: null },
              { code: "SH", name: "Shabwah", subdivision: null },
              { code: "TA", name: "T\u0101\u2018izz", subdivision: null },
              { code: "SA", name: "\u015ean\u2018\u0101'", subdivision: null },
              { code: "SN", name: "\u015ean\u2018\u0101'", subdivision: null },
              { code: "SD", name: "\u015e\u0101\u2018dah", subdivision: null },
              { code: "HJ", name: "\u1e28ajjah", subdivision: null },
              { code: "HD", name: "\u1e28a\u1e11ramawt", subdivision: null },
            ],
          },
          {
            code2: "ZM",
            code3: "ZMB",
            name: "Zambia",
            capital: "Lusaka",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "02", name: "Central", subdivision: null },
              { code: "08", name: "Copperbelt", subdivision: null },
              { code: "03", name: "Eastern", subdivision: null },
              { code: "04", name: "Luapula", subdivision: null },
              { code: "09", name: "Lusaka", subdivision: null },
              { code: "06", name: "North-Western", subdivision: null },
              { code: "05", name: "Northern", subdivision: null },
              { code: "07", name: "Southern", subdivision: null },
              { code: "01", name: "Western", subdivision: null },
            ],
          },
          {
            code2: "ZW",
            code3: "ZWE",
            name: "Zimbabwe",
            capital: "Harare",
            region: "Africa",
            subregion: "Eastern Africa",
            states: [
              { code: "BU", name: "Bulawayo", subdivision: null },
              { code: "HA", name: "Harare", subdivision: null },
              { code: "MA", name: "Manicaland", subdivision: null },
              { code: "MC", name: "Mashonaland Central", subdivision: null },
              { code: "ME", name: "Mashonaland East", subdivision: null },
              { code: "MW", name: "Mashonaland West", subdivision: null },
              { code: "MV", name: "Masvingo", subdivision: null },
              { code: "MN", name: "Matabeleland North", subdivision: null },
              { code: "MS", name: "Matabeleland South", subdivision: null },
              { code: "MI", name: "Midlands", subdivision: null },
            ],
          },
        ],
        BP = (e) => {
          let { showMarkers: n, locations: i } = e;
          const [o, a] = (0, t.useState)({ lat: 0, lng: 0 }),
            s = ys(),
            { isLoaded: r } = (function (e) {
              var n = e.id,
                i = void 0 === n ? XC.id : n,
                o = e.version,
                a = void 0 === o ? XC.version : o,
                s = e.nonce,
                r = e.googleMapsApiKey,
                l = e.language,
                c = e.region,
                u = e.libraries,
                d = void 0 === u ? eM : u,
                h = e.preventGoogleFontsLoading,
                p = e.mapIds,
                f = e.authReferrerPolicy,
                g = (0, t.useRef)(!1),
                m = (0, t.useState)(!1),
                v = m[0],
                b = m[1],
                x = (0, t.useState)(void 0),
                y = x[0],
                w = x[1];
              (0, t.useEffect)(function () {
                return (
                  (g.current = !0),
                  function () {
                    g.current = !1;
                  }
                );
              }, []);
              var S = (0, t.useMemo)(
                function () {
                  return new JC({
                    id: i,
                    apiKey: r,
                    version: a,
                    libraries: d,
                    language: l || "en",
                    region: c || "US",
                    mapIds: p || [],
                    nonce: s || "",
                    authReferrerPolicy: f || "origin",
                  });
                },
                [i, r, a, d, l, c, p, s, f]
              );
              (0, t.useEffect)(function () {
                v ||
                  S.load()
                    .then(function () {
                      g.current && b(!0);
                    })
                    .catch(function (e) {
                      w(e);
                    });
              }, []),
                (0, t.useEffect)(
                  function () {
                    BC && h && HC();
                  },
                  [h]
                );
              var k = (0, t.useRef)();
              return (
                (0, t.useEffect)(
                  function () {
                    k.current &&
                      d !== k.current &&
                      console.warn(
                        "Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"
                      ),
                      (k.current = d);
                  },
                  [d]
                ),
                { isLoaded: v, loadError: y }
              );
            })({
              googleMapsApiKey: "AIzaSyAUX6mgZnWOga2ivyb5oTiGa8pVdjUKgzQ",
              mapIds: ["1b70260c6c29d636"],
            }),
            l = async (e, t) => {
              try {
                const { data: n } = await Ea.get(
                    "https://nominatim.openstreetmap.org/reverse?format=json&lat="
                      .concat(e, "&lon=")
                      .concat(t)
                  ),
                  i = jP.find(
                    (e) =>
                      e.name.toLowerCase() === n.address.country.toLowerCase()
                  );
                if (i) {
                  const { data: e } = await Ea.get(
                    ""
                      .concat(La, "compute-type/get-compute-type/")
                      .concat(i.region)
                  );
                  console.log("computeData", e),
                    s(zt(i.region)),
                    s(jt(e.payload)),
                    s(Bt(e.payload[0].totalPerDay));
                }
              } catch (n) {
                return console.error("Error fetching continent:", n), null;
              }
            };
          return r
            ? (0, js.jsx)(jC, {
                center: { lat: 30.578485714285716, lng: 37.39117142857143 },
                zoom: 0,
                options: {
                  scrollwheel: !1,
                  styles: zP,
                  zoomControl: !1,
                  streetViewControl: !1,
                  mapTypeControl: !1,
                  fullscreenControl: !1,
                  restriction: {
                    latLngBounds: {
                      north: 85,
                      south: -85,
                      west: -179,
                      east: 180,
                    },
                    strictBounds: !0,
                  },
                  disableDoubleClickZoom: !0,
                },
                mapContainerStyle: { width: "100%", height: "100%" },
                onClick: n
                  ? () => {}
                  : async (e) => {
                      const t = e.latLng.lat(),
                        n = e.latLng.lng();
                      a({ lat: t, lng: n }), await l(t, n);
                    },
                children:
                  o.lat &&
                  o.lng &&
                  (0, js.jsx)(js.Fragment, {
                    children: (0, js.jsx)(kP, {
                      position: { lat: o.lat, lng: o.lng },
                      mapPaneName: kP.OVERLAY_MOUSE_TARGET,
                      getPixelPositionOffset: (e, t) => {
                        return {
                          x: e + (n = { x: -30, y: -15 }).x,
                          y: t + n.y,
                        };
                        var n;
                      },
                      children: (0, js.jsx)("div", {
                        className: "home-marker",
                      }),
                    }),
                  }),
              })
            : (0, js.jsx)("div", {});
        },
        FP = {
          position: "fixed",
          top: 0,
          left: 0,
          width: "100%",
          height: "100%",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          backgroundColor: "black",
          zIndex: 9999,
          padding: "10px",
          boxSizing: "border-box",
        },
        WP = {
          width: "100%",
          height: "100%",
          objectFit: "contain",
          maxWidth: "100%",
          maxHeight: "100%",
        },
        HP = () =>
          (0, js.jsx)(js.Fragment, {
            children: (0, js.jsx)("div", {
              style: FP,
              children: (0, js.jsx)("video", {
                autoPlay: !0,
                loop: !0,
                muted: !0,
                playsInline: !0,
                style: WP,
                children: (0, js.jsx)("source", { src: kh, type: "video/mp4" }),
              }),
            }),
          }),
        GP = () => {
          const { loading: e } = Ss((e) => e.compute);
          return (0, js.jsx)("div", {
            className: "home-box",
            children: e
              ? (0, js.jsx)(HP, {})
              : (0, js.jsxs)(js.Fragment, {
                  children: [
                    (0, js.jsx)(yC, {}),
                    (0, js.jsxs)("div", {
                      className: "home-body",
                      children: [
                        (0, js.jsx)("div", {
                          className: "home-box-1",
                          children: (0, js.jsx)(BP, { showMarkers: !1 }),
                        }),
                        (0, js.jsx)(wC, {}),
                      ],
                    }),
                  ],
                }),
          });
        },
        VP = Wa.injectEndpoints({
          endpoints: (e) => ({
            getNetworkMapData: e.query({
              query: () => "/home-map/get-total-cpu-gpu",
            }),
          }),
        }),
        { useGetNetworkMapDataQuery: UP } = VP;
      const YP = function () {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        const {
            autoHideDuration: n = null,
            disableWindowBlurListener: i = !1,
            onClose: o,
            open: a,
            resumeHideDuration: s,
          } = e,
          r = (0, sc.A)();
        t.useEffect(() => {
          if (a)
            return (
              document.addEventListener("keydown", e),
              () => {
                document.removeEventListener("keydown", e);
              }
            );
          function e(e) {
            e.defaultPrevented ||
              ("Escape" !== e.key && "Esc" !== e.key) ||
              null == o ||
              o(e, "escapeKeyDown");
          }
        }, [a, o]);
        const l = (0, fp.A)((e, t) => {
            null == o || o(e, t);
          }),
          c = (0, fp.A)((e) => {
            o &&
              null != e &&
              r.start(e, () => {
                l(null, "timeout");
              });
          });
        t.useEffect(() => (a && c(n), r.clear), [a, n, c, r]);
        const u = r.clear,
          d = t.useCallback(() => {
            null != n && c(null != s ? s : 0.5 * n);
          }, [n, s, c]),
          h = (e) => (t) => {
            const n = e.onFocus;
            null == n || n(t), u();
          },
          p = (e) => (t) => {
            const n = e.onMouseEnter;
            null == n || n(t), u();
          },
          f = (e) => (t) => {
            const n = e.onMouseLeave;
            null == n || n(t), d();
          };
        return (
          t.useEffect(() => {
            if (!i && a)
              return (
                window.addEventListener("focus", d),
                window.addEventListener("blur", u),
                () => {
                  window.removeEventListener("focus", d),
                    window.removeEventListener("blur", u);
                }
              );
          }, [i, a, d, u]),
          {
            getRootProps: function () {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              const n = (0, Ts.A)({}, Mh(e), Mh(t));
              return (0, Ts.A)({ role: "presentation" }, t, n, {
                onBlur:
                  ((i = n),
                  (e) => {
                    const t = i.onBlur;
                    null == t || t(e), d();
                  }),
                onFocus: h(n),
                onMouseEnter: p(n),
                onMouseLeave: f(n),
              });
              var i;
            },
            onClickAway: (e) => {
              null == o || o(e, "clickaway");
            },
          }
        );
      };
      function XP(e) {
        return e.substring(2).toLowerCase();
      }
      function KP(e) {
        const {
            children: n,
            disableReactTree: i = !1,
            mouseEvent: o = "onClick",
            onClickAway: a,
            touchEvent: s = "onTouchEnd",
          } = e,
          r = t.useRef(!1),
          l = t.useRef(null),
          c = t.useRef(!1),
          u = t.useRef(!1);
        t.useEffect(
          () => (
            setTimeout(() => {
              c.current = !0;
            }, 0),
            () => {
              c.current = !1;
            }
          ),
          []
        );
        const d = (0, Ah.A)(n.ref, l),
          h = (0, fp.A)((e) => {
            const t = u.current;
            u.current = !1;
            const n = (0, Jh.A)(l.current);
            if (
              !c.current ||
              !l.current ||
              ("clientX" in e &&
                (function (e, t) {
                  return (
                    t.documentElement.clientWidth < e.clientX ||
                    t.documentElement.clientHeight < e.clientY
                  );
                })(e, n))
            )
              return;
            if (r.current) return void (r.current = !1);
            let o;
            (o = e.composedPath
              ? e.composedPath().indexOf(l.current) > -1
              : !n.documentElement.contains(e.target) ||
                l.current.contains(e.target)),
              o || (!i && t) || a(e);
          }),
          p = (e) => (t) => {
            u.current = !0;
            const i = n.props[e];
            i && i(t);
          },
          f = { ref: d };
        return (
          !1 !== s && (f[s] = p(s)),
          t.useEffect(() => {
            if (!1 !== s) {
              const e = XP(s),
                t = (0, Jh.A)(l.current),
                n = () => {
                  r.current = !0;
                };
              return (
                t.addEventListener(e, h),
                t.addEventListener("touchmove", n),
                () => {
                  t.removeEventListener(e, h),
                    t.removeEventListener("touchmove", n);
                }
              );
            }
          }, [h, s]),
          !1 !== o && (f[o] = p(o)),
          t.useEffect(() => {
            if (!1 !== o) {
              const e = XP(o),
                t = (0, Jh.A)(l.current);
              return (
                t.addEventListener(e, h),
                () => {
                  t.removeEventListener(e, h);
                }
              );
            }
          }, [h, o]),
          (0, js.jsx)(t.Fragment, { children: t.cloneElement(n, f) })
        );
      }
      function qP(e) {
        return (0, Cc.Ay)("MuiSnackbarContent", e);
      }
      (0, jl.A)("MuiSnackbarContent", ["root", "message", "action"]);
      const ZP = ["action", "className", "message", "role"],
        QP = (0, Ul.Ay)(Su, {
          name: "MuiSnackbarContent",
          slot: "Root",
          overridesResolver: (e, t) => t.root,
        })((e) => {
          let { theme: t } = e;
          const n = "light" === t.palette.mode ? 0.8 : 0.98,
            i = (0, Vl.tL)(t.palette.background.default, n);
          return (0, Ts.A)({}, t.typography.body2, {
            color: t.vars
              ? t.vars.palette.SnackbarContent.color
              : t.palette.getContrastText(i),
            backgroundColor: t.vars ? t.vars.palette.SnackbarContent.bg : i,
            display: "flex",
            alignItems: "center",
            flexWrap: "wrap",
            padding: "6px 16px",
            borderRadius: (t.vars || t).shape.borderRadius,
            flexGrow: 1,
            [t.breakpoints.up("sm")]: { flexGrow: "initial", minWidth: 288 },
          });
        }),
        $P = (0, Ul.Ay)("div", {
          name: "MuiSnackbarContent",
          slot: "Message",
          overridesResolver: (e, t) => t.message,
        })({ padding: "8px 0" }),
        JP = (0, Ul.Ay)("div", {
          name: "MuiSnackbarContent",
          slot: "Action",
          overridesResolver: (e, t) => t.action,
        })({
          display: "flex",
          alignItems: "center",
          marginLeft: "auto",
          paddingLeft: 16,
          marginRight: -8,
        }),
        eE = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiSnackbarContent" }),
            { action: i, className: o, message: a, role: s = "alert" } = n,
            r = (0, Xs.A)(n, ZP),
            l = n,
            c = ((e) => {
              const { classes: t } = e;
              return (0, Gl.A)(
                { root: ["root"], action: ["action"], message: ["message"] },
                qP,
                t
              );
            })(l);
          return (0,
          js.jsxs)(QP, (0, Ts.A)({ role: s, square: !0, elevation: 6, className: (0, Rl.A)(c.root, o), ownerState: l, ref: t }, r, { children: [(0, js.jsx)($P, { className: c.message, ownerState: l, children: a }), i ? (0, js.jsx)(JP, { className: c.action, ownerState: l, children: i }) : null] }));
        });
      function tE(e) {
        return (0, Cc.Ay)("MuiSnackbar", e);
      }
      (0, jl.A)("MuiSnackbar", [
        "root",
        "anchorOriginTopCenter",
        "anchorOriginBottomCenter",
        "anchorOriginTopRight",
        "anchorOriginBottomRight",
        "anchorOriginTopLeft",
        "anchorOriginBottomLeft",
      ]);
      const nE = ["onEnter", "onExited"],
        iE = [
          "action",
          "anchorOrigin",
          "autoHideDuration",
          "children",
          "className",
          "ClickAwayListenerProps",
          "ContentProps",
          "disableWindowBlurListener",
          "message",
          "onBlur",
          "onClose",
          "onFocus",
          "onMouseEnter",
          "onMouseLeave",
          "open",
          "resumeHideDuration",
          "TransitionComponent",
          "transitionDuration",
          "TransitionProps",
        ],
        oE = (0, Ul.Ay)("div", {
          name: "MuiSnackbar",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              t[
                "anchorOrigin"
                  .concat((0, Rc.A)(n.anchorOrigin.vertical))
                  .concat((0, Rc.A)(n.anchorOrigin.horizontal))
              ],
            ];
          },
        })((e) => {
          let { theme: t, ownerState: n } = e;
          return (0, Ts.A)(
            {
              zIndex: (t.vars || t).zIndex.snackbar,
              position: "fixed",
              display: "flex",
              left: 8,
              right: 8,
              justifyContent: "center",
              alignItems: "center",
            },
            "top" === n.anchorOrigin.vertical ? { top: 8 } : { bottom: 8 },
            "left" === n.anchorOrigin.horizontal && {
              justifyContent: "flex-start",
            },
            "right" === n.anchorOrigin.horizontal && {
              justifyContent: "flex-end",
            },
            {
              [t.breakpoints.up("sm")]: (0, Ts.A)(
                {},
                "top" === n.anchorOrigin.vertical
                  ? { top: 24 }
                  : { bottom: 24 },
                "center" === n.anchorOrigin.horizontal && {
                  left: "50%",
                  right: "auto",
                  transform: "translateX(-50%)",
                },
                "left" === n.anchorOrigin.horizontal && {
                  left: 24,
                  right: "auto",
                },
                "right" === n.anchorOrigin.horizontal && {
                  right: 24,
                  left: "auto",
                }
              ),
            }
          );
        }),
        aE = t.forwardRef(function (e, n) {
          const i = (0, Os.b)({ props: e, name: "MuiSnackbar" }),
            o = Vh(),
            a = {
              enter: o.transitions.duration.enteringScreen,
              exit: o.transitions.duration.leavingScreen,
            },
            {
              action: s,
              anchorOrigin: { vertical: r, horizontal: l } = {
                vertical: "bottom",
                horizontal: "left",
              },
              autoHideDuration: c = null,
              children: u,
              className: d,
              ClickAwayListenerProps: h,
              ContentProps: p,
              disableWindowBlurListener: f = !1,
              message: g,
              open: m,
              TransitionComponent: v = $h,
              transitionDuration: b = a,
              TransitionProps: { onEnter: x, onExited: y } = {},
            } = i,
            w = (0, Xs.A)(i.TransitionProps, nE),
            S = (0, Xs.A)(i, iE),
            k = (0, Ts.A)({}, i, {
              anchorOrigin: { vertical: r, horizontal: l },
              autoHideDuration: c,
              disableWindowBlurListener: f,
              TransitionComponent: v,
              transitionDuration: b,
            }),
            A = ((e) => {
              const { classes: t, anchorOrigin: n } = e,
                i = {
                  root: [
                    "root",
                    "anchorOrigin"
                      .concat((0, Rc.A)(n.vertical))
                      .concat((0, Rc.A)(n.horizontal)),
                  ],
                };
              return (0, Gl.A)(i, tE, t);
            })(k),
            { getRootProps: C, onClickAway: M } = YP((0, Ts.A)({}, k)),
            [P, E] = t.useState(!0),
            L = Oh({
              elementType: oE,
              getSlotProps: C,
              externalForwardedProps: S,
              ownerState: k,
              additionalProps: { ref: n },
              className: [A.root, d],
            });
          return !m && P
            ? null
            : (0, js.jsx)(
                KP,
                (0, Ts.A)({ onClickAway: M }, h, {
                  children: (0, js.jsx)(
                    oE,
                    (0, Ts.A)({}, L, {
                      children: (0, js.jsx)(
                        v,
                        (0, Ts.A)(
                          {
                            appear: !0,
                            in: m,
                            timeout: b,
                            direction: "top" === r ? "down" : "up",
                            onEnter: (e, t) => {
                              E(!1), x && x(e, t);
                            },
                            onExited: (e) => {
                              E(!0), y && y(e);
                            },
                          },
                          w,
                          {
                            children:
                              u ||
                              (0, js.jsx)(
                                eE,
                                (0, Ts.A)({ message: g, action: s }, p)
                              ),
                          }
                        )
                      ),
                    })
                  ),
                })
              );
        }),
        sE = aE;
      n(161);
      const rE = "white",
        lE = "gray",
        cE = (e) => {
          let {
            primaryColor: i = rE,
            secondaryColor: o = lE,
            onClickMapContinent: a = (e) => {},
            ...s
          } = e;
          const [r, l] = (0, t.useState)(!1),
            [c, u] = (0, t.useState)(""),
            { cpu: d, gpu: h } = Ss((e) => e.compute),
            p = d.Asia + h.Asia,
            f = d.Africa + h.Africa,
            g = d.Oceania + h.Oceania,
            m = d.Europe + h.Europe,
            v = d.NorthAmerica + h.NorthAmerica,
            b = d.SouthAmerica + h.SouthAmerica,
            x = [
              { key: "africa", value: "".concat(f) },
              { key: "south_america", value: "".concat(b) },
              { key: "europe", value: "".concat(m) },
              { key: "asia", value: "".concat(p) },
              { key: "america", value: "".concat(v) },
              { key: "australia", value: "".concat(g) },
            ],
            y = (e) => {
              let t =
                "Asia" === e
                  ? p
                  : "NorthAmerica" === e
                  ? v
                  : "SouthAmerica" === e
                  ? b
                  : "Oceania" === e
                  ? g
                  : "Africa" === e
                  ? f
                  : m;
              return t < 500
                ? "#2c456b"
                : t >= 500 && t < 1e3
                ? "#4779c4"
                : t >= 1e3 && t < 2500
                ? "#83aff0"
                : t >= 2500 && t < 6e3
                ? "#34eb8f"
                : t >= 6e3 && t < 1e4
                ? "#34eb43"
                : "#556b2f";
            },
            w = ((0, t.useRef)(), (0, t.useRef)()),
            S = (0, t.useRef)(),
            k = (0, t.useRef)(),
            A = (0, t.useRef)(),
            C = (0, t.useRef)(),
            M = (0, t.useRef)(),
            P = (0, t.useRef)(),
            E = (0, t.useRef)(),
            L = (0, t.useRef)(),
            T = (0, t.useRef)(),
            O = (0, t.useRef)(),
            R = (0, t.useRef)(),
            I = (0, t.useRef)(),
            [N, _] = (0, t.useState)(0),
            [D, z] = (0, t.useState)(0),
            [j, B] = (0, t.useState)({ left: 0, top: 0 }),
            [F, W] = (0, t.useState)(0),
            [H, G] = (0, t.useState)("");
          (0, t.useEffect)(() => {
            (k.current.style.display = "none"),
              (P.current.style.display = "none"),
              (O.current.style.display = "none"),
              (I.current.style.display = "none"),
              (C.current.style.display = "none"),
              (L.current.style.display = "none");
          }, []);
          const V = (0, t.useCallback)(
              (e, t) => {
                (e.current.style.cursor = "pointer"),
                  (e.current.style.transition = "all .2s ease"),
                  (t.current.style.display = "flex");
              },
              [o]
            ),
            U = (0, t.useCallback)(
              (e, t) => {
                (e.current.style.cursor = null),
                  (e.current.style.transition = "all 0.5s ease"),
                  (t.current.style.display = "none");
              },
              [i]
            ),
            Y = (0, t.useCallback)(
              (e, t) => {
                const { pageX: n, pageY: i } = e;
                _(n), z(i), G(t);
              },
              [F]
            ),
            X = (0, t.useCallback)(() => {}, [j]);
          return (
            (0, t.useEffect)(() => {
              let e;
              return (
                "undefined" !== typeof window && (e = n(161)),
                X(),
                window.addEventListener("resize", X),
                () => {
                  window.removeEventListener("resize", X);
                }
              );
            }, []),
            (0, js.jsx)(js.Fragment, {
              children: (0, js.jsxs)("div", {
                className: "world_map_container",
                children: [
                  (0, js.jsxs)("svg", {
                    ref: w,
                    className: "world-map",
                    width: 672,
                    height: 315,
                    viewBox: "0 0 672 315",
                    fill: i,
                    ...s,
                    children: [
                      (0, js.jsx)("g", {
                        ref: k,
                        children: (0, js.jsx)("path", {
                          d: "M346.402 113.802c-.17.07-.465-.25-.712-.27-4.522-.397-8.758-1.617-12.802-3.765-3.034-1.612-4.46-.522-4.662 2.886-.083 1.41-1.59 2.89-2.388 2.6-2.33-.84-5.66-.743-6.844-2.497-1.98-2.928-4.745-3.15-7.454-3.954-2.822-.838-3.82-2.355-3.362-5.1.232-1.41-.062-3.027-.87-4.077-1.022-1.326-2.538-.395-3.773.174-2.42 1.114-5.057.88-7.43.463-3.982-.7-7.45.41-10.57 2.353-3.217 2.005-6.126 2.44-9.33.388-.89-.568-1.57-.542-2.092.522-.986 2.016-2.6 3.41-4.584 4.4-2.34 1.162-3.488 3.376-3.594 5.652-.13 2.84-1.84 4.387-3.778 5.472-2.85 1.593-4.95 3.8-6.516 6.475-1.57 2.686-3.01 5.426-4.79 7.998-.936 1.353-1.45 3.018-.583 4.844 1.364 2.873 1.865 5.848.457 8.94-1.026 2.25-3.17 4.5-.41 7.02.17.157-.84.53-.112.962-2.044 1.885.48 2.86 1.136 3.413 2.413 2.036 4.23 4.46 5.466 7.25.53 1.202 1.027 2.303 1.875 3.315 1.513 1.808 3.355 3.207 5.19 4.632 2.15 1.66 4.487 2.358 7.178 1.57 1.965-.573 4.045-1.78 5.958-1.218 2.726.802 5.014.213 7.458-.707 2.313-.868 4.68-1.602 7.055-2.278 2.103-.6 5.36.928 5.86 2.954.424 1.7.94 1.963 2.638 1.51 3.457-.927 6.375 1.536 6.468 5.097.045 1.752-.163 3.427-.74 5.1-.643 1.857-1.513 3.932.178 5.61 3.446 3.41 5.434 7.51 7.28 11.96.896 2.16-.156 4.12.832 5.864 1.913 3.39.45 6.11-1.116 9.128-2.437 4.693-3.19 9.58.055 14.384 2.876 4.262 4.066 9.067 4.505 14.142.152 1.773-.015 3.83 1.088 5.245 2.082 2.677 3.54 5.682 5.264 8.55.564.938.853 1.618.55 2.82-.747 2.93 1.544 5 4.478 4.35 2.745-.605 5.488-1.696 8.314-.373.563.263.974.07 1.46-.147 3.6-1.622 6.623-3.885 9.203-6.964 1.934-2.312 3.53-4.934 5.783-6.935.9-.8 1.245-1.22.97-2.485-.54-2.477.076-4.417 2.812-5.604 4.124-1.79 4.638-3.683 2.556-7.79-.642-1.263-1.128-2.546-.002-3.562 2.824-2.547 4.426-6.274 8.454-7.728 3.474-1.255 4.783-4.753 4.377-8.378-.44-3.88-.828-7.66-2.61-11.294-.963-1.958-1.395-4.338-.81-6.787 1.685-7.023 7.57-10.894 11.763-16.02 1.952-2.39 5.308-3.368 6.88-6.143 2.305-4.066 4.287-8.315 6.575-12.39 1.193-2.124 1.39-4.085.162-6.344-3.516 2.275-7.657 2.108-11.426 3.32-1.82.583-4.3-1.108-4.76-3.08-.65-2.768-2.467-4.555-4.49-6.396-1.663-1.508-4.207-2.326-4.675-4.952-.25-1.41-.9-2.558-1.822-3.618-1.9-2.177-3.655-4.407-3.25-7.61.06-.477-.496-1.06-.826-1.55-3.618-5.377-5.79-11.577-9.615-16.83-.366-.5-.496-.97.034-1.334M390.758 215.407c-1.126 4.07-4.206 6.355-7.395 8.04-3.08 1.623-4.565 3.03-3.67 6.426.538 2.044.475 3.746-.954 5.293-2.31 2.5-1.826 5.44-1.14 8.27.46 1.886 2.024 2.625 4.012 2.35 2.547-.35 4.203-1.945 5.528-4.27.878-6.33 3.857-11.94 5.758-17.912.96-3.024.438-5.497-1.14-8.197z",
                        }),
                      }),
                      (0, js.jsx)(mm, {
                        title: "Total CPUGPU in Africa is ".concat(x[0].value),
                        children: (0, js.jsx)("g", {
                          fill: y("Africa"),
                          className: x[0].key,
                          ref: S,
                          onMouseMove: (e) => Y(e, x[0].value),
                          onMouseEnter: () => V(S, k),
                          onMouseLeave: () => U(S, k),
                          onClick: () => {
                            l(!0),
                              u(
                                "Total CPUGPU in Africa is ".concat(x[0].value)
                              ),
                              a({ key: x[0].key, value: x[0].value });
                          },
                          children: (0, js.jsx)("path", {
                            d: "M345.902 112.802c-.17.07-.465-.25-.712-.27-4.522-.397-8.758-1.617-12.802-3.765-3.034-1.612-4.46-.522-4.662 2.886-.083 1.41-1.59 2.89-2.388 2.6-2.33-.84-5.66-.743-6.844-2.497-1.98-2.928-4.745-3.15-7.454-3.954-2.822-.838-3.82-2.355-3.362-5.1.232-1.41-.062-3.027-.87-4.077-1.022-1.326-2.538-.395-3.773.174-2.42 1.114-5.057.88-7.43.463-3.982-.7-7.45.41-10.57 2.353-3.217 2.005-6.126 2.44-9.33.388-.89-.568-1.57-.542-2.092.522-.986 2.016-2.6 3.41-4.584 4.4-2.34 1.162-3.488 3.376-3.594 5.652-.13 2.84-1.84 4.387-3.778 5.472-2.85 1.593-4.95 3.8-6.516 6.475-1.57 2.686-3.01 5.426-4.79 7.998-.936 1.353-1.45 3.018-.583 4.844 1.364 2.873 1.865 5.848.457 8.94-1.026 2.25-3.17 4.5-.41 7.02.17.157-.84.53-.112.962-2.044 1.885.48 2.86 1.136 3.413 2.413 2.036 4.23 4.46 5.466 7.25.53 1.202 1.027 2.303 1.875 3.315 1.513 1.808 3.355 3.207 5.19 4.632 2.15 1.66 4.487 2.358 7.178 1.57 1.965-.573 4.045-1.78 5.958-1.218 2.726.802 5.014.213 7.458-.707 2.313-.868 4.68-1.602 7.055-2.278 2.103-.6 5.36.928 5.86 2.954.424 1.7.94 1.963 2.638 1.51 3.457-.927 6.375 1.536 6.468 5.097.045 1.752-.163 3.427-.74 5.1-.643 1.857-1.513 3.932.178 5.61 3.446 3.41 5.434 7.51 7.28 11.96.896 2.16-.156 4.12.832 5.864 1.913 3.39.45 6.11-1.116 9.128-2.437 4.693-3.19 9.58.055 14.384 2.876 4.262 4.066 9.067 4.505 14.142.152 1.773-.015 3.83 1.088 5.245 2.082 2.677 3.54 5.682 5.264 8.55.564.938.853 1.618.55 2.82-.747 2.93 1.544 5 4.478 4.35 2.745-.605 5.488-1.696 8.314-.373.563.263.974.07 1.46-.147 3.6-1.622 6.623-3.885 9.203-6.964 1.934-2.312 3.53-4.934 5.783-6.935.9-.8 1.245-1.22.97-2.485-.54-2.477.076-4.417 2.812-5.604 4.124-1.79 4.638-3.683 2.556-7.79-.642-1.263-1.128-2.546-.002-3.562 2.824-2.547 4.426-6.274 8.454-7.728 3.474-1.255 4.783-4.753 4.377-8.378-.44-3.88-.828-7.66-2.61-11.294-.963-1.958-1.395-4.338-.81-6.787 1.685-7.023 7.57-10.894 11.763-16.02 1.952-2.39 5.308-3.368 6.88-6.143 2.305-4.066 4.287-8.315 6.575-12.39 1.193-2.124 1.39-4.085.162-6.344-3.516 2.275-7.657 2.108-11.426 3.32-1.82.583-4.3-1.108-4.76-3.08-.65-2.768-2.467-4.555-4.49-6.396-1.663-1.508-4.207-2.326-4.675-4.952-.25-1.41-.9-2.558-1.822-3.618-1.9-2.177-3.655-4.407-3.25-7.61.06-.477-.496-1.06-.826-1.55-3.618-5.377-5.79-11.577-9.615-16.83-.366-.5-.496-.97.034-1.334M390.758 215.407c-1.126 4.07-4.206 6.355-7.395 8.04-3.08 1.623-4.565 3.03-3.67 6.426.538 2.044.475 3.746-.954 5.293-2.31 2.5-1.826 5.44-1.14 8.27.46 1.886 2.024 2.625 4.012 2.35 2.547-.35 4.203-1.945 4.528-4.27.878-6.33 3.857-11.94 5.758-17.912.96-3.024.438-5.497-1.14-8.197z",
                          }),
                        }),
                      }),
                      (0, js.jsx)("g", {
                        ref: C,
                        children: (0, js.jsx)("path", {
                          d: "M116.118 167.174c-.415 1.425.243 2.418.6 3.565 1.137 3.644.977 7.03-1.524 10.18-2.03 2.56-4.198 5.048-5.47 8.15-.393.966-.787 2.178.092 2.588 3.028 1.41.873 2.67.053 3.96-1.37 2.154-1.048 4.542 1 6.016 1.174.848 1.857 1.98 2.586 3.18 1.58 2.6 1.826 5.79 3.77 8.22 1.605 2.013 3.28 3.943 4.124 6.505.725 2.197 2.425 3.567 4.602 4.603 5.66 2.694 10.344 6.27 10.638 13.36.15 3.602-.243 7.18-.033 10.82.198 3.464.227 6.988.716 10.46.625 4.445 2.04 8.945.958 13.358-.95 3.9 1.106 7.085 1.628 10.576.352 2.36 3.356 3.75 4.09 6.826.866 3.615 1.584 4.13-1.22 6.74 1.314.826 2.84 1.408 3.365 3.066 1.238 3.9 3.232 7.28 6.362 10.034 1.42 1.25 5.01 1.734 6.428.405.427-.402.932-.71.423-1.495-1.376-2.128-.534-4.14.584-6.04 1.206-2.053 1.067-3.652-1.116-4.982-1.025-.625-2.42-2.097-1.822-2.843 1.68-2.098 1.874-4.722 3.084-7.057-1.285-.557-2.43-1.407-2.888-2.943-.145-.49-.527-.903-.074-1.424.555-.638 1.052-.168 1.63-.03.885.21 1.667 1.71 2.665.49.745-.912 1.322-1.992.48-3.305-.818-1.272.053-1.71 1.183-1.798.778-.06 1.59.107 2.342-.05 2.254-.46 4.63-1.172 5.095-3.717.39-2.127-1.12-3.816-2.623-5.265-.516-.497-1.858-.546-1.458-1.48.383-.906 1.49-.477 2.3-.208.736.247 1.513.444 2.173.833 2.03 1.192 3.83.246 4.808-1.202 3.157-4.665 5.83-9.626 7.665-14.997.438-1.285.54-2.54-.095-3.736-.59-1.11-.343-1.89.518-2.752 2.245-2.25 5.44-2.937 7.85-4.903.213-.174.723-.165 1.008-.042 2.866 1.232 4.393-.71 5.25-2.72 2.402-5.634 4.383-11.423 3.233-17.752-.203-1.113-.26-2.46.613-3.22 2.544-2.218 3.312-5.68 5.685-7.918 1.616-1.523 1.937-3.455 2.37-5.33.55-2.396-.897-4.25-3.3-4.924-2.624-.736-5.027-1.852-6.545-4.304-.174-.282-.47-.673-.727-.69-3.424-.2-6.822-2.28-10.27-.255-.964.568-1.528.082-1.33-.65.87-3.205-1.976-3.083-3.512-4.054-1.675-1.06-2.744.294-3.78 1.298-1.18 1.15-2.397 1.63-3.943.62.774-.364 1.553-.687 2.087-1.387.44-.58 1.382-.977.698-1.928-.6-.828-1.408-1.364-2.433-.913-.698.304-1.33.798-1.918 1.295-.663.56-1.23 1.228-1.864 1.825-.418.397-.845 1.084-1.514.552-.8-.628-.15-1.316.236-1.784.71-.86 1.557-1.586 2.48-2.265 1.01-.745 2.167-2.147 1.472-3.222-.894-1.387-1.017-2.896-1.56-4.314-1.174-3.07-5.613-6.326-8.444-5.77-3.636.712-6.402-.76-8.173-3.595a11.701 11.701 0 00-4.895-4.405c-2.033-.98-3.938-2.6-6.434-2.435-3.293.22-6.36-.177-9.023-2.47-.862-.74-2.192-2.053-3.404-.793-.89.923-3.702 1.082-1.93 3.597.534.755-.227 1.43-.725 2.004-.283.327-.672.67-1.07.187-.432-.532-.912-1.15-.717-1.864.48-1.767.28-3.723 1.71-5.283-2.368-.584-2.823 2.05-4.29 2.204-3.052.317-4.325 2.25-5.64 4.628-.806 1.455-2.192 3.004-4.224.975M169.258 314.69c-2.768-.79-4.725-2.848-7.143-4.092-.854-.44-1.802-1.486-2.774-.485-.535.556-.99 1.625-.83 2.312.22.956 1.198 1.495 2.18 1.995 2.835 1.442 5.705.296 8.57.27zM178.366 306.535c-1.333-.773-2.788-.467-4.18-.606-.96-.1-1.134.7-1.27 1.21-.196.735.636.665 1.093.9 1.92.987 4.192.083 4.355-1.506z",
                        }),
                      }),
                      (0, js.jsx)(mm, {
                        title: "Total CPUGPU in South America is ".concat(
                          x[1].value
                        ),
                        children: (0, js.jsx)("g", {
                          fill: y("SouthAmerica"),
                          className: x[1].value,
                          ref: A,
                          onMouseMove: (e) => Y(e, x[1].value),
                          onMouseEnter: () => V(A, C),
                          onMouseLeave: () => U(A, C),
                          onClick: () => {
                            l(!0),
                              u(
                                "Total CPUGPU in South America is ".concat(
                                  x[1].value
                                )
                              ),
                              a({ key: x[1].key, value: x[1].value });
                          },
                          children: (0, js.jsx)("path", {
                            d: "M115.618 166.174c-.415 1.425.243 2.418.6 3.565 1.137 3.644.977 7.03-1.524 10.18-2.03 2.56-4.198 5.048-5.47 8.15-.393.966-.787 2.178.092 2.588 3.028 1.41.873 2.67.053 3.96-1.37 2.154-1.048 4.542 1 6.016 1.174.848 1.857 1.98 2.586 3.18 1.58 2.6 1.826 5.79 3.77 8.22 1.605 2.013 3.28 3.943 4.124 6.505.725 2.197 2.425 3.567 4.602 4.603 5.66 2.694 10.344 6.27 10.638 13.36.15 3.602-.243 7.18-.033 10.82.198 3.464.227 6.988.716 10.46.625 4.445 2.04 8.945.958 13.358-.95 3.9 1.106 7.085 1.628 10.576.352 2.36 3.356 3.75 4.09 6.826.866 3.615 1.584 4.13-1.22 6.74 1.314.826 2.84 1.408 3.365 3.066 1.238 3.9 3.232 7.28 6.362 10.034 1.42 1.25 5.01 1.734 6.428.405.427-.402.932-.71.423-1.495-1.376-2.128-.534-4.14.584-6.04 1.206-2.053 1.067-3.652-1.116-4.982-1.025-.625-2.42-2.097-1.822-2.843 1.68-2.098 1.874-4.722 3.084-7.057-1.285-.557-2.43-1.407-2.888-2.943-.145-.49-.527-.903-.074-1.424.555-.638 1.052-.168 1.63-.03.885.21 1.667 1.71 2.665.49.745-.912 1.322-1.992.48-3.305-.818-1.272.053-1.71 1.183-1.798.778-.06 1.59.107 2.342-.05 2.254-.46 4.63-1.172 5.095-3.717.39-2.127-1.12-3.816-2.623-5.265-.516-.497-1.858-.546-1.458-1.48.383-.906 1.49-.477 2.3-.208.736.247 1.513.444 2.173.833 2.03 1.192 3.83.246 4.808-1.202 3.157-4.665 5.83-9.626 7.665-14.997.438-1.285.54-2.54-.095-3.736-.59-1.11-.343-1.89.518-2.752 2.245-2.25 5.44-2.937 7.85-4.903.213-.174.723-.165 1.008-.042 2.866 1.232 4.393-.71 5.25-2.72 2.402-5.634 4.383-11.423 3.233-17.752-.203-1.113-.26-2.46.613-3.22 2.544-2.218 3.312-5.68 5.685-7.918 1.616-1.523 1.937-3.455 2.37-5.33.55-2.396-.897-4.25-3.3-4.924-2.624-.736-5.027-1.852-6.545-4.304-.174-.282-.47-.673-.727-.69-3.424-.2-6.822-2.28-10.27-.255-.964.568-1.528.082-1.33-.65.87-3.205-1.976-3.083-3.512-4.054-1.675-1.06-2.744.294-3.78 1.298-1.18 1.15-2.397 1.63-3.943.62.774-.364 1.553-.687 2.087-1.387.44-.58 1.382-.977.698-1.928-.6-.828-1.408-1.364-2.433-.913-.698.304-1.33.798-1.918 1.295-.663.56-1.23 1.228-1.864 1.825-.418.397-.845 1.084-1.514.552-.8-.628-.15-1.316.236-1.784.71-.86 1.557-1.586 2.48-2.265 1.01-.745 2.167-2.147 1.472-3.222-.894-1.387-1.017-2.896-1.56-4.314-1.174-3.07-5.613-6.326-8.444-5.77-3.636.712-6.402-.76-8.173-3.595a11.701 11.701 0 00-4.895-4.405c-2.033-.98-3.938-2.6-6.434-2.435-3.293.22-6.36-.177-9.023-2.47-.862-.74-2.192-2.053-3.404-.793-.89.923-3.702 1.082-1.93 3.597.534.755-.227 1.43-.725 2.004-.283.327-.672.67-1.07.187-.432-.532-.912-1.15-.717-1.864.48-1.767.28-3.723 1.71-5.283-2.368-.584-2.823 2.05-4.29 2.204-3.052.317-4.325 2.25-5.64 4.628-.806 1.455-2.192 3.004-4.224.975M169.758 314.19c-2.768-.79-4.725-2.848-7.143-4.092-.854-.44-1.802-1.486-2.774-.485-.535.556-.99 1.625-.83 2.312.22.956 1.198 1.495 2.18 1.995 2.835 1.442 5.705.296 8.57.27zM178.366 306.535c-1.333-.773-2.788-.467-4.18-.606-.96-.1-1.134.7-1.27 1.21-.196.735.636.665 1.093.9 1.92.987 3.192.083 4.355-1.506z",
                          }),
                        }),
                      }),
                      (0, js.jsxs)("g", {
                        ref: P,
                        children: [
                          (0, js.jsx)("path", {
                            d: "M315.54 12.017c-.95.52-2.082-.24-2.718.828 1.143.663 2.173 1.27 3.214 1.86.726.413 1.568.678 1.98-.274.474-1.097 1.535-1.59 2.175-2.51 1.29-1.85 2.49-1.655 3.312.56.157.425.237.99.616.713 1.317-.97 2.53.273 4.03.078-1.355-2.037-4.132-1.85-5.448-3.937 2.526.016 4.722 1.5 7.046.302.48-.248 1.064-.418 1.012-.996-.066-.715-.765-.55-1.246-.562-1.736-.038-3.628.388-5.175-.163-2.225-.794-2.97.183-3.69 2.165-.646-1.42-1.195-2.776-2.865-1.106-.43.43-1.75.282-2.516.002-1.715-.624-3.44-.287-5.16-.37-.56-.027-1.32-.193-1.46.67-.134.818.615 1.025 1.13 1.215 1.353.498 2.62 1.547 4.237.492.774-.507 1.17.304 1.528 1.035zM369.185 87.545c.68.07 1.6.203 3.463.162 1.22-.026 2.524-.132 3.695-.39 1.17-.258 2.21-.67 2.896-1.305.61-.567 1.063-1.253 1.395-2.017.332-.765.54-1.607.666-2.48.25-1.75.16-3.63.015-5.292-.056-.644-.233-1.282-.49-1.916a12.92 12.92 0 00-.987-1.887c-.778-1.247-1.743-2.473-2.608-3.675-.866-1.203-1.633-2.382-2.012-3.534-.19-.574-.282-1.142-.242-1.705.04-.562.21-1.12.552-1.668.262-.42.764-.658 1.37-.78.605-.12 1.314-.123 1.99-.073 1.352.1 2.574.41 2.574.41s.916.513 2.113 1.088c1.198.576 2.678 1.214 3.8 1.46.725.158 1.195.067 1.493-.197.3-.265.425-.702.463-1.243.077-1.08-.205-2.57-.184-3.88.02-1.23-.34-2.653-.66-4.372a29.076 29.076 0 01-.39-2.812 20.632 20.632 0 01-.01-3.334c.12-.414.06-1.166-.102-2.133-.163-.966-.427-2.145-.723-3.412-.59-2.533-1.304-5.414-1.542-7.633-.123-1.144.227-2.392.402-3.592.088-.6.13-1.188.05-1.746-.057-.384-.283-.728-.485-1.078-.08.023-.1.092-.252.064-3.3-.615-6.512 2.358-9.766.04-.39-.28-1.2-.102-1.774.038-1.847.45-3.572 1.125-5.2 2.212-1.44.96-3.622 2.236-4.66-.04-.83-1.816-1.71-1.054-2.675-1.136-.537 1.22 2.034 2.685-.544 3.492-1.764.552-4.196.022-4.63 2.895-.056.37-1.14.838-2.075.484-.77-.295-1.58-.937-2.6-.577.55.844 1.74.714 2 1.706-2.47 1.53-5.52.7-7.078-2.03-.58-1.014-1.148-1.92-2.287-2.34-.49-.18-1.15-.42-1.018-1.004.16-.69.906-.722 1.527-.674.6.045 1.192.195 1.79.235 2.32.157 4.35 1.685 6.798 1.348 1.31-.178 2.946-.323 3.172-1.578.235-1.28-1.458-1.405-2.488-1.76-1.635-.563-3.25-1.215-4.918-1.642-1.395-.356-2.816-1.2-4.278-.63-1.06.413-1.728.14-2.594-.443-4.967-3.332-10.502-3.06-16.03-2.203-1.575.24-2.997 1.624-4.558 1.782-4.802.484-7.253 4.187-9.8 7.315-2.51 3.08-5.278 5.313-8.98 6.46-3.05.944-4.05 2.317-3.585 5.218.764 4.768 2.865 5.867 6.91 3.373 1.187-.733 1.852-.695 2.564.31.643.91 1.33 1.824 1.745 2.838.28.68 1.187 1.643.06 2.287-1.15.66-2.37 1.885-3.704 1.36-1.243-.493.33-1.63.044-2.513-.102-.316-.07-.675-.104-1.043-3.082 1.48-3.65 2.46-2.332 5.406.842 1.88-.168 2.99-1.39 2.934-2.882-.13-4.55 1.467-6.44 3.15-1.63 1.456-4.06 2.196-5.293 3.873-2.366 3.217-6.22 2.734-9.172 4.383-.596.333-2.31-.804-2.614.482-.306 1.308 1.41 1.085 2.233 1.545.3.17.63.294.933.46 2.07 1.153 2.593 3.53 1.707 7.43-.512 2.258-2.19 2.33-4.022 2.333-2.44.004-4.78-.58-7.154-.996-1.744-.305-3.93.095-3.72 2.096.31 2.972-.8 5.55-1.085 8.312-.157 1.5-.846 4.13 1.26 4.483 2.41.406 4.063 1.542 5.79 3.283.703-1.97 2.14-2.125 3.81-2.09 2.645.05 6.444-2.163 6.577-4.237.275-4.202 3.554-5.62 6.264-7.623.44-.326 1.03-.166.97-1.145-.12-1.952 1.33-3.18 3.246-2.488 2.535.916 4.42-.198 6.265-1.408 2.59-1.7 3.394-1.665 4.724 1.192 1.074 2.304 3.113 4.37 4.93 4.997 3.827 1.32 6.6 2.745 6.303 7.487 1.095-.98 2.356-1.516 1.564-3.11-1.124-2.262.304-2.087 1.77-1.77.464.102.893.54 1.33-.016-.114-.53-.54-.672-.947-.815-4.473-1.582-7.53-5.046-10.79-8.21-.74-.725-1.588-1.844-.33-2.92 1.097-.944 1.622.12 2.525.59 2.636 1.38 4.57 3.92 7.393 4.782 3.024.924 4.338 2.77 4.61 5.737.213 2.35 1.616 3.74 3.886 4.25.726.164 1.9-.206 2.002.74.125 1.19-1.426.535-1.93 1.166.068.876.663 1.422 1.123 2.046 1.02 1.38 1.495 1.472 2.376-.342.928-1.915.12-3.122-.793-4.43-.9-1.285-.912-2.196.71-2.744 2.2-.743 4.28-1.707 6.803-1.015 1.093.297 2.66.022 3.87-1.1-2.237-.976-2.114-2.503-1.424-4.342 1.22-3.26 2.417-6.512 5.806-8.193 1.33-.658 3.584.975 3.535 2.475-.04 1.313 1.472 2.358 2.83 1.845.936-.352 1.8-.907 2.96-1.508-1.333-.265-2.706-.325-2.735-1.552-.018-.83 1.25-1.013 2.065-1.287 1.702-.576 3.195-1.704 5.048-1.944.057.687-.02 1.245-.264 1.934-1.455 4.02-1.392 4.038 2.486 6.19 1.057.587 2.137 1.146 3.133 1.827 1.086.74 2.357 1.76 2.088 3.044zM385.816 25.78c-1.236-.632-2.444-1.58-3.953-.43 1.243 1.145 2.547.888 3.862.548",
                          }),
                          (0, js.jsx)("path", {
                            d: "M284.92 52.29c-.8-.667-2.085-.028-2.218-1.31-.075-.732-.402-.546-.834-.344-1.246.578-2.165 2.204-1.772 2.82.692 1.075-.67 3.574 2.005 3.3 1.126-.116 1.243.633 1.458 1.405.2.727.878 1.87.03 2.073-2.02.476-2.228 2.374-3.29 3.46.58 1.223 2.895.085 2.74 1.622-.11 1.093-2.045.89-3.096 1.42-.28.14-.53.35-1.21.81 3.788-.542 7.028-1.343 10.337-1.74.692-.082 1.272-2.41 2.52-3.254-.25-.22-.56-.68-.736-.632-2.476.65-2.51-1.476-3.118-2.794-.66-1.436-1.29-3.172-2.684-3.664-2.69-.956-1.55-1.9-.13-3.17zM392.468 14.513c-1.184-.953-2.1-.57-3.038-.524-1.653.08-3.117 1.17-4.8.852-5.142-.97-7.895 2.407-10.448 5.912-.216.297-1.68 1.82-.366 2.283 2.025.71 3.94 2.29 6.397 1.56-2.326-2.385-2.277-3.196.2-5.7 1.862-1.88 4.287-2.475 6.737-2.99 1.72-.36 3.544-.312 5.318-1.395zM267.588 34.804c-.973-1.158-2.09-1.99-3.777-1.498-1.063.312-2.175 1.223-3.207.735-2.296-1.082-3.937.786-5.92 1.03-1.027.127-1.097 1.13-1.008 2.026 2.086-.83 3.2 1.882 4.86 1.543 2.83-.58 5.826-.907 8.21-2.87.328-.27.75-.41.844-.965zM276.71 56.592c-2.365-.143-3.486 1.895-5.354 2.25-.102.02-.255.543-.17.634 1.18 1.263.038 2.246-.43 3.246-.325.698-.06 1.16.243 1.68.497.862 1.06.216 1.54.004 2.28-1.005 5.355-1.204 5.095-4.88-.01-.152.094-.342.2-.47 1.644-2.038.552-2.496-1.126-2.464zM305.96 91.166c-.052-.83.15-1.928-1.02-2.024-.794-.066-1.616.716-1.398 1.473.27.928.06 2.515 1.462 2.573 1.173.048.91-1.197.956-2.022zM312.43 96.563c1.167.615 2.14 1.154 3.14 1.65.617.304 1.155.653 1.47-.5.28-1.014.194-1.256-.874-1.53-1.24-.322-2.336-.422-3.735.38zM334.294 102.073c2.108 1.235 3.815 2.096 6.053.893-1.875-1.272-3.754-.968-6.053-.893z",
                          }),
                        ],
                      }),
                      (0, js.jsx)(mm, {
                        title: "Total CPUGPU in Europe is ".concat(x[2].value),
                        children: (0, js.jsxs)("g", {
                          fill: y("Europe"),
                          className: x[2].value,
                          ref: M,
                          onMouseMove: (e) => Y(e, x[2].value),
                          onMouseEnter: () => V(M, P),
                          onMouseLeave: () => U(M, P),
                          onClick: () => {
                            l(!0),
                              u(
                                "Total CPUGPU in Europe is ".concat(x[2].value)
                              ),
                              a({ key: x[2].key, value: x[2].value });
                          },
                          children: [
                            (0, js.jsx)("path", {
                              d: "M314.54 12.017c-.95.52-2.082-.24-2.718.828 1.143.663 2.173 1.27 3.214 1.86.726.413 1.568.678 1.98-.274.474-1.097 1.535-1.59 2.175-2.51 1.29-1.85 2.49-1.655 3.312.56.157.425.237.99.616.713 1.317-.97 2.53.273 4.03.078-1.355-2.037-4.132-1.85-5.448-3.937 2.526.016 4.722 1.5 7.046.302.48-.248 1.064-.418 1.012-.996-.066-.715-.765-.55-1.246-.562-1.736-.038-3.628.388-5.175-.163-2.225-.794-2.97.183-3.69 2.165-.646-1.42-1.195-2.776-2.865-1.106-.43.43-1.75.282-2.516.002-1.715-.624-3.44-.287-5.16-.37-.56-.027-1.32-.193-1.46.67-.134.818.615 1.025 1.13 1.215 1.353.498 2.62 1.547 4.237.492.774-.507 1.17.304 1.528 1.035zM368.885 86.945c.68.07 1.6.203 3.463.162 1.22-.026 2.524-.132 3.695-.39 1.17-.258 2.21-.67 2.896-1.305.61-.567 1.063-1.253 1.395-2.017.332-.765.54-1.607.666-2.48.25-1.75.16-3.63.015-5.292-.056-.644-.233-1.282-.49-1.916a12.92 12.92 0 00-.987-1.887c-.778-1.247-1.743-2.473-2.608-3.675-.866-1.203-1.633-2.382-2.012-3.534-.19-.574-.282-1.142-.242-1.705.04-.562.21-1.12.552-1.668.262-.42.764-.658 1.37-.78.605-.12 1.314-.123 1.99-.073 1.352.1 2.574.41 2.574.41s.916.513 2.113 1.088c1.198.576 2.678 1.214 3.8 1.46.725.158 1.195.067 1.493-.197.3-.265.425-.702.463-1.243.077-1.08-.205-2.57-.184-3.88.02-1.23-.34-2.653-.66-4.372a29.076 29.076 0 01-.39-2.812 20.632 20.632 0 01-.01-3.334c.12-.414.06-1.166-.102-2.133-.163-.966-.427-2.145-.723-3.412-.59-2.533-1.304-5.414-1.542-7.633-.123-1.144.227-2.392.402-3.592.088-.6.13-1.188.05-1.746-.057-.384-.283-.728-.485-1.078-.08.023-.1.092-.252.064-3.3-.615-6.512 2.358-9.766.04-.39-.28-1.2-.102-1.774.038-1.847.45-3.572 1.125-5.2 2.212-1.44.96-3.622 2.236-4.66-.04-.83-1.816-1.71-1.054-2.675-1.136-.537 1.22 2.034 2.685-.544 3.492-1.764.552-4.196.022-4.63 2.895-.056.37-1.14.838-2.075.484-.77-.295-1.58-.937-2.6-.577.55.844 1.74.714 2 1.706-2.47 1.53-5.52.7-7.078-2.03-.58-1.014-1.148-1.92-2.287-2.34-.49-.18-1.15-.42-1.018-1.004.16-.69.906-.722 1.527-.674.6.045 1.192.195 1.79.235 2.32.157 4.35 1.685 6.798 1.348 1.31-.178 2.946-.323 3.172-1.578.235-1.28-1.458-1.405-2.488-1.76-1.635-.563-3.25-1.215-4.918-1.642-1.395-.356-2.816-1.2-4.278-.63-1.06.413-1.728.14-2.594-.443-4.967-3.332-10.502-3.06-16.03-2.203-1.575.24-2.997 1.624-4.558 1.782-4.802.484-7.253 4.187-9.8 7.315-2.51 3.08-5.278 5.313-8.98 6.46-3.05.944-4.05 2.317-3.585 5.218.764 4.768 2.865 5.867 6.91 3.373 1.187-.733 1.852-.695 2.564.31.643.91 1.33 1.824 1.745 2.838.28.68 1.187 1.643.06 2.287-1.15.66-2.37 1.885-3.704 1.36-1.243-.493.33-1.63.044-2.513-.102-.316-.07-.675-.104-1.043-3.082 1.48-3.65 2.46-2.332 5.406.842 1.88-.168 2.99-1.39 2.934-2.882-.13-4.55 1.467-6.44 3.15-1.63 1.456-4.06 2.196-5.293 3.873-2.366 3.217-6.22 2.734-9.172 4.383-.596.333-2.31-.804-2.614.482-.306 1.308 1.41 1.085 2.233 1.545.3.17.63.294.933.46 2.07 1.153 2.593 3.53 1.707 7.43-.512 2.258-2.19 2.33-4.022 2.333-2.44.004-4.78-.58-7.154-.996-1.744-.305-3.93.095-3.72 2.096.31 2.972-.8 5.55-1.085 8.312-.157 1.5-.846 4.13 1.26 4.483 2.41.406 4.063 1.542 5.79 3.283.703-1.97 2.14-2.125 3.81-2.09 2.645.05 6.444-2.163 6.577-4.237.275-4.202 3.554-5.62 6.264-7.623.44-.326 1.03-.166.97-1.145-.12-1.952 1.33-3.18 3.246-2.488 2.535.916 4.42-.198 6.265-1.408 2.59-1.7 3.394-1.665 4.724 1.192 1.074 2.304 3.113 4.37 4.93 4.997 3.827 1.32 6.6 2.745 6.303 7.487 1.095-.98 2.356-1.516 1.564-3.11-1.124-2.262.304-2.087 1.77-1.77.464.102.893.54 1.33-.016-.114-.53-.54-.672-.947-.815-4.473-1.582-7.53-5.046-10.79-8.21-.74-.725-1.588-1.844-.33-2.92 1.097-.944 1.622.12 2.525.59 2.636 1.38 4.57 3.92 7.393 4.782 3.024.924 4.338 2.77 4.61 5.737.213 2.35 1.616 3.74 3.886 4.25.726.164 1.9-.206 2.002.74.125 1.19-1.426.535-1.93 1.166.068.876.663 1.422 1.123 2.046 1.02 1.38 1.495 1.472 2.376-.342.928-1.915.12-3.122-.793-4.43-.9-1.285-.912-2.196.71-2.744 2.2-.743 4.28-1.707 6.803-1.015 1.093.297 2.66.022 3.87-1.1-2.237-.976-2.114-2.503-1.424-4.342 1.22-3.26 2.417-6.512 5.806-8.193 1.33-.658 3.584.975 3.535 2.475-.04 1.313 1.472 2.358 2.83 1.845.936-.352 1.8-.907 2.96-1.508-1.333-.265-2.706-.325-2.735-1.552-.018-.83 1.25-1.013 2.065-1.287 1.702-.576 3.195-1.704 5.048-1.944.057.687-.02 1.245-.264 1.934-1.455 4.02-1.392 4.038 2.486 6.19 1.057.587 2.137 1.146 3.133 1.827 1.086.74 2.357 1.76 2.088 3.044zM385.316 25.78c-1.236-.632-2.444-1.58-3.953-.43 1.243 1.145 2.547.888 3.862.548",
                            }),
                            (0, js.jsx)("path", {
                              d: "M283.92 52.29c-.8-.667-2.085-.028-2.218-1.31-.075-.732-.402-.546-.834-.344-1.246.578-2.165 2.204-1.772 2.82.692 1.075-.67 3.574 2.005 3.3 1.126-.116 1.243.633 1.458 1.405.2.727.878 1.87.03 2.073-2.02.476-2.228 2.374-3.29 3.46.58 1.223 2.895.085 2.74 1.622-.11 1.093-2.045.89-3.096 1.42-.28.14-.53.35-1.21.81 3.788-.542 7.028-1.343 10.337-1.74.692-.082 1.272-2.41 2.52-3.254-.25-.22-.56-.68-.736-.632-2.476.65-2.51-1.476-3.118-2.794-.66-1.436-1.29-3.172-2.684-3.664-2.69-.956-1.55-1.9-.13-3.17zM391.468 14.513c-1.184-.953-2.1-.57-3.038-.524-1.653.08-3.117 1.17-4.8.852-5.142-.97-7.895 2.407-10.448 5.912-.216.297-1.68 1.82-.366 2.283 2.025.71 3.94 2.29 6.397 1.56-2.326-2.385-2.277-3.196.2-5.7 1.862-1.88 4.287-2.475 6.737-2.99 1.72-.36 3.544-.312 5.318-1.395zM266.588 34.804c-.973-1.158-2.09-1.99-3.777-1.498-1.063.312-2.175 1.223-3.207.735-2.296-1.082-3.937.786-5.92 1.03-1.027.127-1.097 1.13-1.008 2.026 2.086-.83 3.2 1.882 4.86 1.543 2.83-.58 5.826-.907 8.21-2.87.328-.27.75-.41.844-.965zM275.71 56.592c-2.365-.143-3.486 1.895-5.354 2.25-.102.02-.255.543-.17.634 1.18 1.263.038 2.246-.43 3.246-.325.698-.06 1.16.243 1.68.497.862 1.06.216 1.54.004 2.28-1.005 5.355-1.204 5.095-4.88-.01-.152.094-.342.2-.47 1.644-2.038.552-2.496-1.126-2.464zM305.46 91.166c-.052-.83.15-1.928-1.02-2.024-.794-.066-1.616.716-1.398 1.473.27.928.06 2.515 1.462 2.573 1.173.048.91-1.197.956-2.022zM311.93 96.563c1.167.615 2.14 1.154 3.14 1.65.617.304 1.155.653 1.47-.5.28-1.014.194-1.256-.874-1.53-1.24-.322-2.336-.422-3.735.38zM333.694 102.073c2.108 1.235 3.815 2.096 6.053.893-1.875-1.272-3.754-.968-6.053-.893z",
                            }),
                          ],
                        }),
                      }),
                      (0, js.jsxs)("g", {
                        ref: L,
                        children: [
                          (0, js.jsx)("path", {
                            d: "M563.826 80.01l-.22-.625c-.09.068-.266.186-.26.196.11.183.242.35.37.524-.166 1.17 1.466 1.9.63 3.34-1.11 1.913-.78 2.61 1.426 4.105.115-.878-.667-2.7 1.068-2.09 2.394.834 4.014.275 5.508-1.74-2.823-1.23-5.67-2.47-8.522-3.71zM542.656 183.11c-.19-.267-.387-.548-.59-.828-1.89-2.548-2.482-4.92.117-7.568 1.364-1.39-.698-2.145-1.426-3.027-.616-.745-1.607-2.077-2.503-.96-1.676 2.082-4.86 2.994-5.785 4.7-1.645 3.03-5.388 3.535-6.48 6.715-.215.636-.76.403-1.307.27-1.883-.458-2.908.484-2.506 2.35.378 1.76.94 3.484 1.395 5.232.572 2.192 1.99 2.974 4.212 3.455 2.027.434 4.12-.64 5.984.535 2.024 1.278 2.94.02 3.79-1.545 1.598-2.95 1.838-6.638 4.786-8.86.127-.098.19-.283.31-.47zM492.48 172.796c.398 2.03 1.385 3.21 2.56 4.267 3.85 3.465 6.463 7.942 8.86 12.337 1.682 3.08 3.66 5.798 5.82 8.45.727.89 1.793 1.683 3.138 1.295a3.047 3.047 0 002.212-2.664c.12-1.37-.138-2.742-1.28-3.946-1.713-1.8-3.424-3.735-4.54-5.917-.625-1.216-.985-2.357-2.204-3.182-2.054-1.395-4.514-2.516-5.798-4.643-1.996-3.313-4.97-4.798-8.768-5.994zM565.46 106.815c1.06-2.906 1.06-2.906 3.614-3.267 3.424-.483 4.355-2.182 3.166-5.536-.305-.864-.865-1.733-.613-2.738.59-2.353-.683-3.89-2.345-5.194-.687-.538-1.475-1.513-2.45-.69-.94.798.168 1.527.37 2.288.378 1.44 2.108 2.516 1.37 4.222-1.31 3.03-4.095 5.588-6.805 5.695-2.86.113-3.99 1.95-6.315 2.838 3.374 1.746 7.63-3.202 10.007 2.382zM552.177 188.043c-1.16.266-2.35.444-3.475.818-1.423.475-1.982-.65-2.392-1.433-.483-.926.178-1.916 1.096-2.294 1.334-.546 2.673-1 4.226-.25 2.86 1.383 3.984.772 5.068-2.998-2.152 2.17-4.34 1.827-6.54 1.518-2.95-.415-4.083.224-4.834 3.006-.616 2.28-.284 4.83-2.067 6.774-.433.468-.01 1.073.267 1.417.712.877 1.137 1.678.498 2.805-.262.466-.004 1.017.475 1.36.545.396.968-.002 1.42-.222.595-.287.606-.772.463-1.314-.196-.75-.31-1.528-.607-2.236-.54-1.29.493-1.87 1.203-2.24 1.08-.568 1.225.716 1.407 1.285.444 1.403 1.048 2.45 2.824 2.57-.062-1.098.23-2.063-.367-2.93-1.632-2.38-1.192-4.17 1.333-5.636zM535.197 205.555c-2.236-1.525-5.075-1.93-7.21-3.665-.525-.43-1.14.04-1.72.14-1.797.31-3.508.846-5.346-.438-1.17-.815-2.86-1.293-4.44-.81-.684.21-1.707.4-1.685 1.35.02.783.952.83 1.557 1.098 2.008.892 4.392.2 6.157.822 3.644 1.286 7.457 1.093 11.06 2.17.626.187 1.207.172 1.628-.667zM552.743 155.018c-.677-2.027-.897-2.283-1.863-2.354-3.69-.264-4.7-1.772-3.36-5.117.87-2.174-.4-3.637-1.77-4.868-1.085-.977-1.708-.1-1.814 1.06-.095 1.023-.018 2.026-.47 3.04-.947 2.13 3 7.81 5.323 7.787.08 0 .166-.04.24-.08 1.26-.773 2.307.144 3.712.53zM550.498 168.35c2.586-1.304 3.528.042 3.995 2.223.105.486.436.94.735 1.36.482.673 1.063.32 1.612.067.32-.148 1.036.01.728-.68-1.413-3.17.93-1.37 1.963-1.4-.05-2.603-1.276-4.78-2.306-7.018-1.343 3.1-1.678 3.326-5.037 3.343-1.227.007-1.535.806-1.688 2.106zM561.177 70.273c-2.185-2.732-4.12-4.07-6.555-4.448 2.496 2.9 3.98 6.103 5.615 9.23.574 1.095 1.47 2.347 3.246 1.634-.624-2.01-2.407-2.874-3.484-4.31-.894-1.185-1.173-2.19 1.176-2.108zM459.167 163.702c-1.307 2.007-.894 3.82-.45 5.68.243 1.013.048 2.223 1.74 1.696 1.295-.405 2.034-.916 1.61-2.573-.475-1.87-1.852-3.046-2.9-4.803zM542.705 126.675c-1.378.634-1.965 2.03-2.204 3.285-.206 1.078.454 2.31 1.65 2.92.39.2.633.062.72-.38.32-1.622 1.426-3.146.59-4.92-.176-.372-.14-.867-.754-.905zM560.882 206.897c-4.303-1.72-6.326-.855-8.423 3.335 2.827-1.02 4.65-3.57 8.42-3.335zM557.23 112.488c1.587-2.33 1.214-3.86-.99-5.163-.475-.28-.874-.967-1.446-.108-.408.62-.304 1.11.248 1.546 1.117.886 1.613 2.16 2.19 3.725zM521.892 139.15c-1.76-.195-3.2-.105-3.945 1.44-.403.836.396 1.74 1.045 1.798 2.148.19 1.972-1.87 2.9-3.24zM543.214 159.992c-1.89 1.585-3.346 3.248-4.48 5.468 2.805-.74 4.462-2.755 4.48-5.468zM564.356 180.726c-1.55-.513-1.775.56-2.22 1.34-.442.774.563 1.596-.16 2.418-.473.533-.537 1.248.212 1.76.35.238.738.607 1.086.127.383-.53.805-1.075.378-1.86-.74-1.353-.78-2.68.704-3.783zM550.31 206.694c-.846-1.096-2.04-.703-2.944-1.183-.642-.34-1.528-.247-1.545.644-.01.64.7 1.25 1.457 1.176.995-.1 1.973-.405 3.033-.636zM550.376 60.996c1.136 1.65 1.652 3.168 3.625 3.76-.486-1.984-1.24-3.277-3.623-3.76zM542.305 206.455c-1.587-.842-2.855-.805-4.13-.23-.072.036-.083.494.027.605 1.09 1.09 2.22.068 3.34.015.15-.007.29-.143.763-.39z",
                          }),
                          (0, js.jsx)("path", {
                            d: "M562.004 106.998c.065-.657-.212-1.044-.69-.966-.713.113-1.655.177-1.634 1.195.01.422.25 1.156.834 1.138.86-.027 1.273-.727 1.49-1.367zM554.043 156.906c1.16 2.464 1.35 2.62 3.134 2.682-.682-1.18-1.24-2.477-3.134-2.682zM563.266 193.17c1.39 1.234 2.67 1.57 4.2.232-1.4.002-2.605-1.12-4.2-.233zM386.225 25.898c-.124.64.724 1.848.162 2.01.202.35.428.694.484 1.078.084.558.04 1.147-.047 1.746-.175 1.2-.525 2.448-.402 3.592.24 2.22.95 5.1 1.544 7.633.296 1.267.56 2.446.723 3.412.162.965.22 1.717.1 2.13a20.74 20.74 0 00.013 3.335c.084 1.02.23 1.953.39 2.812.317 1.72.677 3.142.658 4.372-.02 1.31.26 2.8.185 3.88-.038.54-.164.977-.463 1.242-.298.264-.768.355-1.492.197-1.123-.247-2.603-.885-3.8-1.46-1.198-.575-2.114-1.088-2.114-1.088s-1.222-.31-2.574-.41c-.676-.05-1.385-.047-1.99.074-.606.12-1.108.358-1.37.78a3.604 3.604 0 00-.552 1.667c-.04.563.052 1.13.242 1.707.38 1.153 1.146 2.332 2.012 3.535.865 1.202 1.83 2.428 2.607 3.675a12.8 12.8 0 01.984 1.887c.258.634.435 1.272.49 1.916.145 1.662.236 3.543-.013 5.29-.124.875-.333 1.717-.665 2.482-.332.764-.785 1.45-1.397 2.017-.687.636-1.726 1.047-2.897 1.305-1.17.258-2.475.364-3.694.39-1.863.04-2.782-.09-3.463-.162 0 .004.005.006.004.01-.288 1.317-1.29 2.3-3.03 2.727-2.568.63-4.545-.373-6.678-1.258-3.32-1.38-6.64-2.707-9.964.017-.258.213-.67.478-.93.41-3.65-.94-5.565 3.5-9.09 2.92-.02-.004-.09.293-.17.555 1.28.684 1.794 1.738 2.033 3.274.51 3.235 3.71 4.755 6.774 3.5.68-.28 1.555-.484 2.014-.113 2.433 1.974 4.683 1.347 7.17.047 1.24-.648 3.007-.136 2.816 1.565-.365 3.26-1.194 6.47-1.928 9.682-.24 1.042-.616 2.156-2.002 2.294-3.325.332-6.694-1.112-10.006.23l7.518 3.178c.61-.42.887.245 1.252.54 1.032.84 1.23 2.51 2.78 2.86.476-.813-.295-2.34 1.003-2.413.968-.054.966 1.383 1.114 2.123.396 1.947 1.254 3.528 2.608 4.967 2.068 2.198 4.323 4.65 5.328 7.22 1.624 4.137 3.544 7.898 6.455 11.173 2.38 2.68 3.17 5.825 3.743 9.29.637 3.87 2.84 4.637 6.55 2.96 2.368-1.067 4.684-2.25 7.085-3.228 2.35-.958 4.55-1.956 5.982-4.262.687-1.105 2.083-1.69 3.348-1.815 2.515-.25 3.98-1.867 5.443-3.587 1.9-2.23 2.743-5.21 5.148-7.106 1.145-.904.664-1.922-.332-2.566-1.665-1.078-2.975-2.646-4.9-3.367-1.36-.51-2.04-1.592-1.78-3.06.118-.675.02-1.13-.668-1.584-.658 1.38-1.776 2.342-2.816 3.37-2.054 2.032-4.58 2.46-6.317-1.41-.327-.74-.637-1.536-1.53-.276-.843 1.19-2.03.905-2.35-.367-.714-2.86-2.37-5.118-3.982-7.47-.773-1.128.028-2.398.746-3.32.73-.94 1.673-.285 2.58.054 1.614.602 1.98 2.098 2.643 3.37 1.616 3.1 6.6 5.365 9.837 4.2 1.39-.5 2.358-.387 3.158.77 2.424 3.503 5.88 3.574 9.596 3.047 1.357-.192 2.767-.285 4.13.187 1.194.42 2.374.388 3.517-.234 2.054-1.125 3.765-.036 4.635 1.484 1.082 1.888 3.202 2.316 4.37 3.93.59.813 1.86-.598 2.296.47.53 1.293-.896 1.145-1.47 1.636-.065.058 0 .313.056.46.533 1.467 1.69 2.206 3.14 2.376 1.278.15 2.497-.04 2.315-1.857-.06-.616.31-1.004.878-1.078.48-.065.822.305.95.732.25.817.757 1.747.567 2.48-.907 3.56.58 6.578 1.903 9.65 2.557 5.936 5.735 11.606 7.6 17.843.516 1.716 2.717 2.268 3.785 1.04 3.468-3.993 3.9-8.802 3.318-13.716-.153-1.313-.217-2.34.856-2.883 3.004-1.516 4.533-4.562 7.07-6.6 1.603-1.286 2.68-3.275 4.796-4.08.223-.082.48-.588.422-.83-.634-2.815 1.568-2.79 3.236-3.248 1.16-.317 2.475-.28 3.506-.81 1.963-1.01 2.948-.153 3.61 1.512.74 1.847 2.07 2.928 3.71 4.065 2.214 1.533 3.297 4.22 3.54 6.875.105 1.122.05 1.927 1.046 2.553 1.247.787 1.694-.382 2.336-.956 1.806-1.62 2.645-1.42 3.39.885.64 1.967.937 4.137 1.98 5.857 1.387 2.29 1.253 4.346.913 6.865-.256 1.89-1.86 4.557.906 6.127 2.282 1.3 3.402 3.164 3.895 5.753.747 3.93 2.604 7.268 6.34 9.246.71.376 1.942.87 1.677-.208-.828-3.358-1.01-7.068-3.862-9.637-2.06-1.856-4.11-3.482-5.607-6.127-1.623-2.862-1.647-5.167-.84-7.956.15-.517-.124-1.182-.278-1.757-.212-.79-.39-1.593.37-2.137.83-.595 1.555.083 2.07.545 2.16 1.94 4.98 3.16 6.46 5.86.253.462.42 1.234 1.316.823 2.608-1.19 2.172.444 1.774 1.963-.14.537-.246 1.045.205 1.44.72.636 1.214-.16 1.496-.493 1.616-1.906 3.54-3.34 5.708-4.587.826-.475 1.442-1.83 1.254-3.01-.698-4.336-1.99-8.423-5.71-11.214a12.023 12.023 0 01-2.974-3.205c-1.615-2.53-.98-5.002 1.79-6.662 2.934-1.756 4.307-1.374 6.048 1.838 1.805-2.503 4.038-3.71 7.242-3.987 2.495-.216 5.294-1.098 7.29-3.028 3.85-3.717 4.15-8.947 5.548-13.684.66-2.23-3.455-1.347-2.5-2.48 1.924-2.27-.048-2.675-1.076-3.42-1.013-.733-1.898-1.45-2.422-2.606-.674-1.484-1.24-3.023-3.03-3.67-.868-.314-.668-1.136-.522-1.998.408-2.442 2.923-2.74 4.26-4.358-1.388-.785-2.825-1.39-4.216-1.08-2.208.494-5.145-.246-6.49-1.947-.538-.68-.725-1.374.115-1.687 1.574-.584 2.377-1.91 3.424-3.034 1.532-1.645 2.61-1.396 3.153.8.516 2.092 1.163 2.884 3.246 1.264 1.833-1.428 4.823.084 4.79 2.346-.02 1.104.397 1.414 1.256 1.508 1.19.13 2.04.79 2.943 1.502 1.633 1.284 1.94 3.255 2.7 4.96.717 1.597 1.503 1.777 2.84.862 1.205-.82 3.35-.795 2.03-3.412-1.533-3.032-4.41-4.25-6.893-6.04-1.26-.908-2.098-1.743-.024-2.733 1.25-.596 2.036-1.262 1.086-3.01-.836-1.53 1.093-2.682 1.61-4.084.4-1.098 1.62-.152 2.28.116 1.12.45 2.067.126 2.57-.585 1.704-2.406 2.762-5.11 2.957-8.1.277-4.202-.272-8.112-3.89-10.93-.062-.05-.095-.148-.125-.228-.935-2.668-3.448-3.76-5.416-5.388-.548-.454-1.252-.676-1.938-.214-1.886 1.274-3.632.33-5.372-.35-1.827-.712-3.55-1.452-1.607-3.87.54-.674.522-1.798.757-2.716.96-3.755 3.834-5.518 7.662-4.576.96.238 1.942.492 2.81.156 2.57-1.005 4.93-.826 7.432.402 1.73.853 3.043-.33 2.94-2.28-.165-3.046 1.048-3.994 4.028-3.337 1.12.246 2.13.572 3.103 1.208 1.238.81 2.173.68 1.953-1.145-.182-1.523 1.016-1.992 1.86-1.568 1.393.7 2.768 2.37 2.132 3.742-.963 2.082-.702 4.46-1.965 6.38-.53.812-.387 1.552.065 2.403 2.632 4.97 7.956 7.337 11.228 11.688.496.66 1.235.257 1.897-.063 1.065-.514.424-1.145.174-1.71-.29-.644-.174-1.428-.373-1.936-.62-1.58.703-3.09.273-4.25-1.013-2.733-2.115-5.56-5.613-6.42-1.77-.434-2.815-3.69-1.735-3.968 2.733-.708 5.11-3.476 8.34-1.703 1.345.737 2.242-.18 2.756-1.068 1.33-2.305 3.108-3.375 5.768-2.828.56.117 1.153-.097 1.32-.572.242-.68-.527-.822-.938-.988-2.16-.875-4.37-1.618-6.503-2.547-.654-.285-2.145-.04-1.76-1.27.3-.958 1.436-.607 2.277-.252.298.127.65.12.946.168.502-.998-1.464-1.267-.523-2.232.722-.74 1.463-.054 2.172.14 2.664.735 5.344 1.43 7.967 2.287 1.306.426 2.44.584 3.586-.42-.318-.258-.6-.45-.84-.69-2.054-2.06-4.07-4.14-7.393-2.38-.66.35-1.34-.27-1.892-.63-2.166-1.403-4.616-2.003-7.094-2.215-1.944-.165-3.666-.803-5.483-1.368-5.93-1.843-12.09-2.338-18.248-2.963-.273 1.083 1.323 1.397.677 2.188-.8.977-1.534-.137-2.29-.35-2.832-.81-5.752-1.73-8.65-1.11-3.606.773-6.837.26-10.005-1.425-.833-.443-1.66-1.006-2.692-.712-4.31 1.232-8.586-.677-12.895-.163-.374.046-.832-.252-1.192-.48-3.136-1.975-6.808-1.798-10.246-2.536-1.665-.358-3.39-.91-5.123-.497-.677.16-1.653.095-1.94.92-.77 2.216-1.53 2.62-3.698 2.366-1.605-.19-3.448-1.335-4.766-.48-3.562 2.313-6.026.126-8.62-1.618-2.065-1.39-4.188-2.34-6.735-2.314-4.388.042-8.843 1.817-13.166-.416-.19-.098-.528-.01-.754.09-2.097.937-4.144.74-6.215-.14-1.392-.592-2.815-.35-4.273-.032-1.48.322-3.355 1.91-4.34.273-.42-.7 2.097-1.813 3.44-2.495 1.33-.674 1.542-1.21.074-2.054-2.772-1.593-5.71-1.795-8.73-1.18-1.434.293-2.56.08-3.917-.59-2.42-1.194-5.013-2.21-7.643-2.762-4.484-.942-9.08-1.285-13.393-3.068-.67-.276-1.423-.523-2.166-.52-.742.004-1.476.26-2.104.99-.237.276-.883.445-.568.977.146.246.576.488.853.46 3.933-.36 7.64 1.715 11.575 1.065 1.706-.28 2.228.512 2.01 2.41 1.655-1.707 3.35-1.34 4.965-1.314.86.014 1.21.634.52 1.127-1.584 1.132-2.717 3.048-5.36 2.268-3.537-1.046-6.932.757-10.4 1.242-.57.077-1.034.274-.698 1.006 1.035 2.25-1.146 2.175-1.9 1.973-2.662-.71-4.418.554-6.3 2.045-1.45 1.15-3.017 2.365-5.074 2.04-.69-.107-1.47-.52-1.916.124-.528.76.197 1.48.557 2.135.434.795 1.272 1.158 2.056 1.53 1.462.693 2.4 1.806 2.25 3.44-.16 1.73-1.405 2.646-2.97 3.214-.62.227-1.198.397-1.66-.16-.48-.584.124-.97.43-1.3 1.53-1.663.954-2.996-.43-4.42-.89-.918-1.393-2.207-2.286-3.12-1.02-1.05-1.46-2.574-2.89-3.28-1.652-.817-4.563-.208-5.224 1.474-.725 1.848.496 3.007 2.11 3.767.63.297 1.234.634 1.853.948.61.31 1.487.594 1.017 1.455-.398.736-1.076 1.212-2.14.706-3.86-1.827-8.073-2.306-12.192-3.136",
                          }),
                          (0, js.jsx)("path", {
                            d: "M356.387 101.243c-.717.492-.965.725-1.26.85-.454.193-.935.326-1.414.45-.946.25-.877.956-.203 1.133 1.005.262 1.867-.447 2.524-1.232.138-.164.14-.443.353-1.2z",
                          }),
                        ],
                      }),
                      (0, js.jsx)(mm, {
                        title: "Total CPUGPU in Asia is ".concat(x[3].value),
                        children: (0, js.jsxs)("g", {
                          fill: y("Asia"),
                          className: x[3].value,
                          ref: E,
                          onMouseMove: (e) => Y(e, x[3].value),
                          onMouseEnter: () => V(E, L),
                          onMouseLeave: () => U(E, L),
                          onClick: () => {
                            l(!0),
                              u("Total CPUGPU in Asia is ".concat(x[3].value)),
                              a({ key: x[3].key, value: x[3].value });
                          },
                          children: [
                            (0, js.jsx)("path", {
                              d: "M563.326 80.01l-.22-.625c-.09.068-.266.186-.26.196.11.183.242.35.37.524-.166 1.17 1.466 1.9.63 3.34-1.11 1.913-.78 2.61 1.426 4.105.115-.878-.667-2.7 1.068-2.09 2.394.834 4.014.275 5.508-1.74-2.823-1.23-5.67-2.47-8.522-3.71zM542.156 183.11c-.19-.267-.387-.548-.59-.828-1.89-2.548-2.482-4.92.117-7.568 1.364-1.39-.698-2.145-1.426-3.027-.616-.745-1.607-2.077-2.503-.96-1.676 2.082-4.86 2.994-5.785 4.7-1.645 3.03-5.388 3.535-6.48 6.715-.215.636-.76.403-1.307.27-1.883-.458-2.908.484-2.506 2.35.378 1.76.94 3.484 1.395 5.232.572 2.192 1.99 2.974 4.212 3.455 2.027.434 4.12-.64 5.984.535 2.024 1.278 2.94.02 3.79-1.545 1.598-2.95 1.838-6.638 4.786-8.86.127-.098.19-.283.31-.47zM491.98 172.796c.398 2.03 1.385 3.21 2.56 4.267 3.85 3.465 6.463 7.942 8.86 12.337 1.682 3.08 3.66 5.798 5.82 8.45.727.89 1.793 1.683 3.138 1.295a3.047 3.047 0 002.212-2.664c.12-1.37-.138-2.742-1.28-3.946-1.713-1.8-3.424-3.735-4.54-5.917-.625-1.216-.985-2.357-2.204-3.182-2.054-1.395-4.514-2.516-5.798-4.643-1.996-3.313-4.97-4.798-8.768-5.994zM564.96 106.815c1.06-2.906 1.06-2.906 3.614-3.267 3.424-.483 4.355-2.182 3.166-5.536-.305-.864-.865-1.733-.613-2.738.59-2.353-.683-3.89-2.345-5.194-.687-.538-1.475-1.513-2.45-.69-.94.798.168 1.527.37 2.288.378 1.44 2.108 2.516 1.37 4.222-1.31 3.03-4.095 5.588-6.805 5.695-2.86.113-3.99 1.95-6.315 2.838 3.374 1.746 7.63-3.202 10.007 2.382zM551.677 188.043c-1.16.266-2.35.444-3.475.818-1.423.475-1.982-.65-2.392-1.433-.483-.926.178-1.916 1.096-2.294 1.334-.546 2.673-1 4.226-.25 2.86 1.383 3.984.772 5.068-2.998-2.152 2.17-4.34 1.827-6.54 1.518-2.95-.415-4.083.224-4.834 3.006-.616 2.28-.284 4.83-2.067 6.774-.433.468-.01 1.073.267 1.417.712.877 1.137 1.678.498 2.805-.262.466-.004 1.017.475 1.36.545.396.968-.002 1.42-.222.595-.287.606-.772.463-1.314-.196-.75-.31-1.528-.607-2.236-.54-1.29.493-1.87 1.203-2.24 1.08-.568 1.225.716 1.407 1.285.444 1.403 1.048 2.45 2.824 2.57-.062-1.098.23-2.063-.367-2.93-1.632-2.38-1.192-4.17 1.333-5.636zM534.297 205.555c-2.236-1.525-5.075-1.93-7.21-3.665-.525-.43-1.14.04-1.72.14-1.797.31-3.508.846-5.346-.438-1.17-.815-2.86-1.293-4.44-.81-.684.21-1.707.4-1.685 1.35.02.783.952.83 1.557 1.098 2.008.892 4.392.2 6.157.822 3.644 1.286 7.457 1.093 11.06 2.17.626.187 1.207.172 1.628-.667zM552.243 155.018c-.677-2.027-.897-2.283-1.863-2.354-3.69-.264-4.7-1.772-3.36-5.117.87-2.174-.4-3.637-1.77-4.868-1.085-.977-1.708-.1-1.814 1.06-.095 1.023-.018 2.026-.47 3.04-.947 2.13 3 7.81 5.323 7.787.08 0 .166-.04.24-.08 1.26-.773 2.307.144 3.712.53zM549.998 168.35c2.586-1.304 3.528.042 3.995 2.223.105.486.436.94.735 1.36.482.673 1.063.32 1.612.067.32-.148 1.036.01.728-.68-1.413-3.17.93-1.37 1.963-1.4-.05-2.603-1.276-4.78-2.306-7.018-1.343 3.1-1.678 3.326-5.037 3.343-1.227.007-1.535.806-1.688 2.106zM560.677 70.273c-2.185-2.732-4.12-4.07-6.555-4.448 2.496 2.9 3.98 6.103 5.615 9.23.574 1.095 1.47 2.347 3.246 1.634-.624-2.01-2.407-2.874-3.484-4.31-.894-1.185-1.173-2.19 1.176-2.108zM458.767 163.702c-1.307 2.007-.894 3.82-.45 5.68.243 1.013.048 2.223 1.74 1.696 1.295-.405 2.034-.916 1.61-2.573-.475-1.87-1.852-3.046-2.9-4.803zM542.205 126.675c-1.378.634-1.965 2.03-2.204 3.285-.206 1.078.454 2.31 1.65 2.92.39.2.633.062.72-.38.32-1.622 1.426-3.146.59-4.92-.176-.372-.14-.867-.754-.905zM560.382 206.897c-4.303-1.72-6.326-.855-8.423 3.335 2.827-1.02 4.65-3.57 8.42-3.335zM556.83 111.988c1.587-2.33 1.214-3.86-.99-5.163-.475-.28-.874-.967-1.446-.108-.408.62-.304 1.11.248 1.546 1.117.886 1.613 2.16 2.19 3.725zM521.392 139.15c-1.76-.195-3.2-.105-3.945 1.44-.403.836.396 1.74 1.045 1.798 2.148.19 1.972-1.87 2.9-3.24zM543.214 159.992c-1.89 1.585-3.346 3.248-4.48 5.468 2.805-.74 4.462-2.755 4.48-5.468zM564.156 180.526c-1.55-.513-1.775.56-2.22 1.34-.442.774.563 1.596-.16 2.418-.473.533-.537 1.248.212 1.76.35.238.738.607 1.086.127.383-.53.805-1.075.378-1.86-.74-1.353-.78-2.68.704-3.783zM549.81 206.694c-.846-1.096-2.04-.703-2.944-1.183-.642-.34-1.528-.247-1.545.644-.01.64.7 1.25 1.457 1.176.995-.1 1.973-.405 3.033-.636zM549.676 60.696c1.136 1.65 1.652 3.168 3.625 3.76-.486-1.984-1.24-3.277-3.623-3.76zM541.805 206.455c-1.587-.842-2.855-.805-4.13-.23-.072.036-.083.494.027.605 1.09 1.09 2.22.068 3.34.015.15-.007.29-.143.763-.39z",
                            }),
                            (0, js.jsx)("path", {
                              d: "M561.594 106.698c.065-.657-.212-1.044-.69-.966-.713.113-1.655.177-1.634 1.195.01.422.25 1.156.834 1.138.86-.027 1.273-.727 1.49-1.367zM553.543 156.906c1.16 2.464 1.35 2.62 3.134 2.682-.682-1.18-1.24-2.477-3.134-2.682zM562.766 193.17c1.39 1.234 2.67 1.57 4.2.232-1.4.002-2.605-1.12-4.2-.233zM385.225 25.898c-.124.64.724 1.848.162 2.01.202.35.428.694.484 1.078.084.558.04 1.147-.047 1.746-.175 1.2-.525 2.448-.402 3.592.24 2.22.95 5.1 1.544 7.633.296 1.267.56 2.446.723 3.412.162.965.22 1.717.1 2.13a20.74 20.74 0 00.013 3.335c.084 1.02.23 1.953.39 2.812.317 1.72.677 3.142.658 4.372-.02 1.31.26 2.8.185 3.88-.038.54-.164.977-.463 1.242-.298.264-.768.355-1.492.197-1.123-.247-2.603-.885-3.8-1.46-1.198-.575-2.114-1.088-2.114-1.088s-1.222-.31-2.574-.41c-.676-.05-1.385-.047-1.99.074-.606.12-1.108.358-1.37.78a3.604 3.604 0 00-.552 1.667c-.04.563.052 1.13.242 1.707.38 1.153 1.146 2.332 2.012 3.535.865 1.202 1.83 2.428 2.607 3.675a12.8 12.8 0 01.984 1.887c.258.634.435 1.272.49 1.916.145 1.662.236 3.543-.013 5.29-.124.875-.333 1.717-.665 2.482-.332.764-.785 1.45-1.397 2.017-.687.636-1.726 1.047-2.897 1.305-1.17.258-2.475.364-3.694.39-1.863.04-2.782-.09-3.463-.162 0 .004.005.006.004.01-.288 1.317-1.29 2.3-3.03 2.727-2.568.63-4.545-.373-6.678-1.258-3.32-1.38-6.64-2.707-9.964.017-.258.213-.67.478-.93.41-3.65-.94-5.565 3.5-9.09 2.92-.02-.004-.09.293-.17.555 1.28.684 1.794 1.738 2.033 3.274.51 3.235 3.71 4.755 6.774 3.5.68-.28 1.555-.484 2.014-.113 2.433 1.974 4.683 1.347 7.17.047 1.24-.648 3.007-.136 2.816 1.565-.365 3.26-1.194 6.47-1.928 9.682-.24 1.042-.616 2.156-2.002 2.294-3.325.332-6.694-1.112-10.006.23l7.518 3.178c.61-.42.887.245 1.252.54 1.032.84 1.23 2.51 2.78 2.86.476-.813-.295-2.34 1.003-2.413.968-.054.966 1.383 1.114 2.123.396 1.947 1.254 3.528 2.608 4.967 2.068 2.198 4.323 4.65 5.328 7.22 1.624 4.137 3.544 7.898 6.455 11.173 2.38 2.68 3.17 5.825 3.743 9.29.637 3.87 2.84 4.637 6.55 2.96 2.368-1.067 4.684-2.25 7.085-3.228 2.35-.958 4.55-1.956 5.982-4.262.687-1.105 2.083-1.69 3.348-1.815 2.515-.25 3.98-1.867 5.443-3.587 1.9-2.23 2.743-5.21 5.148-7.106 1.145-.904.664-1.922-.332-2.566-1.665-1.078-2.975-2.646-4.9-3.367-1.36-.51-2.04-1.592-1.78-3.06.118-.675.02-1.13-.668-1.584-.658 1.38-1.776 2.342-2.816 3.37-2.054 2.032-4.58 2.46-6.317-1.41-.327-.74-.637-1.536-1.53-.276-.843 1.19-2.03.905-2.35-.367-.714-2.86-2.37-5.118-3.982-7.47-.773-1.128.028-2.398.746-3.32.73-.94 1.673-.285 2.58.054 1.614.602 1.98 2.098 2.643 3.37 1.616 3.1 6.6 5.365 9.837 4.2 1.39-.5 2.358-.387 3.158.77 2.424 3.503 5.88 3.574 9.596 3.047 1.357-.192 2.767-.285 4.13.187 1.194.42 2.374.388 3.517-.234 2.054-1.125 3.765-.036 4.635 1.484 1.082 1.888 3.202 2.316 4.37 3.93.59.813 1.86-.598 2.296.47.53 1.293-.896 1.145-1.47 1.636-.065.058 0 .313.056.46.533 1.467 1.69 2.206 3.14 2.376 1.278.15 2.497-.04 2.315-1.857-.06-.616.31-1.004.878-1.078.48-.065.822.305.95.732.25.817.757 1.747.567 2.48-.907 3.56.58 6.578 1.903 9.65 2.557 5.936 5.735 11.606 7.6 17.843.516 1.716 2.717 2.268 3.785 1.04 3.468-3.993 3.9-8.802 3.318-13.716-.153-1.313-.217-2.34.856-2.883 3.004-1.516 4.533-4.562 7.07-6.6 1.603-1.286 2.68-3.275 4.796-4.08.223-.082.48-.588.422-.83-.634-2.815 1.568-2.79 3.236-3.248 1.16-.317 2.475-.28 3.506-.81 1.963-1.01 2.948-.153 3.61 1.512.74 1.847 2.07 2.928 3.71 4.065 2.214 1.533 3.297 4.22 3.54 6.875.105 1.122.05 1.927 1.046 2.553 1.247.787 1.694-.382 2.336-.956 1.806-1.62 2.645-1.42 3.39.885.64 1.967.937 4.137 1.98 5.857 1.387 2.29 1.253 4.346.913 6.865-.256 1.89-1.86 4.557.906 6.127 2.282 1.3 3.402 3.164 3.895 5.753.747 3.93 2.604 7.268 6.34 9.246.71.376 1.942.87 1.677-.208-.828-3.358-1.01-7.068-3.862-9.637-2.06-1.856-4.11-3.482-5.607-6.127-1.623-2.862-1.647-5.167-.84-7.956.15-.517-.124-1.182-.278-1.757-.212-.79-.39-1.593.37-2.137.83-.595 1.555.083 2.07.545 2.16 1.94 4.98 3.16 6.46 5.86.253.462.42 1.234 1.316.823 2.608-1.19 2.172.444 1.774 1.963-.14.537-.246 1.045.205 1.44.72.636 1.214-.16 1.496-.493 1.616-1.906 3.54-3.34 5.708-4.587.826-.475 1.442-1.83 1.254-3.01-.698-4.336-1.99-8.423-5.71-11.214a12.023 12.023 0 01-2.974-3.205c-1.615-2.53-.98-5.002 1.79-6.662 2.934-1.756 4.307-1.374 6.048 1.838 1.805-2.503 4.038-3.71 7.242-3.987 2.495-.216 5.294-1.098 7.29-3.028 3.85-3.717 4.15-8.947 5.548-13.684.66-2.23-3.455-1.347-2.5-2.48 1.924-2.27-.048-2.675-1.076-3.42-1.013-.733-1.898-1.45-2.422-2.606-.674-1.484-1.24-3.023-3.03-3.67-.868-.314-.668-1.136-.522-1.998.408-2.442 2.923-2.74 4.26-4.358-1.388-.785-2.825-1.39-4.216-1.08-2.208.494-5.145-.246-6.49-1.947-.538-.68-.725-1.374.115-1.687 1.574-.584 2.377-1.91 3.424-3.034 1.532-1.645 2.61-1.396 3.153.8.516 2.092 1.163 2.884 3.246 1.264 1.833-1.428 4.823.084 4.79 2.346-.02 1.104.397 1.414 1.256 1.508 1.19.13 2.04.79 2.943 1.502 1.633 1.284 1.94 3.255 2.7 4.96.717 1.597 1.503 1.777 2.84.862 1.205-.82 3.35-.795 2.03-3.412-1.533-3.032-4.41-4.25-6.893-6.04-1.26-.908-2.098-1.743-.024-2.733 1.25-.596 2.036-1.262 1.086-3.01-.836-1.53 1.093-2.682 1.61-4.084.4-1.098 1.62-.152 2.28.116 1.12.45 2.067.126 2.57-.585 1.704-2.406 2.762-5.11 2.957-8.1.277-4.202-.272-8.112-3.89-10.93-.062-.05-.095-.148-.125-.228-.935-2.668-3.448-3.76-5.416-5.388-.548-.454-1.252-.676-1.938-.214-1.886 1.274-3.632.33-5.372-.35-1.827-.712-3.55-1.452-1.607-3.87.54-.674.522-1.798.757-2.716.96-3.755 3.834-5.518 7.662-4.576.96.238 1.942.492 2.81.156 2.57-1.005 4.93-.826 7.432.402 1.73.853 3.043-.33 2.94-2.28-.165-3.046 1.048-3.994 4.028-3.337 1.12.246 2.13.572 3.103 1.208 1.238.81 2.173.68 1.953-1.145-.182-1.523 1.016-1.992 1.86-1.568 1.393.7 2.768 2.37 2.132 3.742-.963 2.082-.702 4.46-1.965 6.38-.53.812-.387 1.552.065 2.403 2.632 4.97 7.956 7.337 11.228 11.688.496.66 1.235.257 1.897-.063 1.065-.514.424-1.145.174-1.71-.29-.644-.174-1.428-.373-1.936-.62-1.58.703-3.09.273-4.25-1.013-2.733-2.115-5.56-5.613-6.42-1.77-.434-2.815-3.69-1.735-3.968 2.733-.708 5.11-3.476 8.34-1.703 1.345.737 2.242-.18 2.756-1.068 1.33-2.305 3.108-3.375 5.768-2.828.56.117 1.153-.097 1.32-.572.242-.68-.527-.822-.938-.988-2.16-.875-4.37-1.618-6.503-2.547-.654-.285-2.145-.04-1.76-1.27.3-.958 1.436-.607 2.277-.252.298.127.65.12.946.168.502-.998-1.464-1.267-.523-2.232.722-.74 1.463-.054 2.172.14 2.664.735 5.344 1.43 7.967 2.287 1.306.426 2.44.584 3.586-.42-.318-.258-.6-.45-.84-.69-2.054-2.06-4.07-4.14-7.393-2.38-.66.35-1.34-.27-1.892-.63-2.166-1.403-4.616-2.003-7.094-2.215-1.944-.165-3.666-.803-5.483-1.368-5.93-1.843-12.09-2.338-18.248-2.963-.273 1.083 1.323 1.397.677 2.188-.8.977-1.534-.137-2.29-.35-2.832-.81-5.752-1.73-8.65-1.11-3.606.773-6.837.26-10.005-1.425-.833-.443-1.66-1.006-2.692-.712-4.31 1.232-8.586-.677-12.895-.163-.374.046-.832-.252-1.192-.48-3.136-1.975-6.808-1.798-10.246-2.536-1.665-.358-3.39-.91-5.123-.497-.677.16-1.653.095-1.94.92-.77 2.216-1.53 2.62-3.698 2.366-1.605-.19-3.448-1.335-4.766-.48-3.562 2.313-6.026.126-8.62-1.618-2.065-1.39-4.188-2.34-6.735-2.314-4.388.042-8.843 1.817-13.166-.416-.19-.098-.528-.01-.754.09-2.097.937-4.144.74-6.215-.14-1.392-.592-2.815-.35-4.273-.032-1.48.322-3.355 1.91-4.34.273-.42-.7 2.097-1.813 3.44-2.495 1.33-.674 1.542-1.21.074-2.054-2.772-1.593-5.71-1.795-8.73-1.18-1.434.293-2.56.08-3.917-.59-2.42-1.194-5.013-2.21-7.643-2.762-4.484-.942-9.08-1.285-13.393-3.068-.67-.276-1.423-.523-2.166-.52-.742.004-1.476.26-2.104.99-.237.276-.883.445-.568.977.146.246.576.488.853.46 3.933-.36 7.64 1.715 11.575 1.065 1.706-.28 2.228.512 2.01 2.41 1.655-1.707 3.35-1.34 4.965-1.314.86.014 1.21.634.52 1.127-1.584 1.132-2.717 3.048-5.36 2.268-3.537-1.046-6.932.757-10.4 1.242-.57.077-1.034.274-.698 1.006 1.035 2.25-1.146 2.175-1.9 1.973-2.662-.71-4.418.554-6.3 2.045-1.45 1.15-3.017 2.365-5.074 2.04-.69-.107-1.47-.52-1.916.124-.528.76.197 1.48.557 2.135.434.795 1.272 1.158 2.056 1.53 1.462.693 2.4 1.806 2.25 3.44-.16 1.73-1.405 2.646-2.97 3.214-.62.227-1.198.397-1.66-.16-.48-.584.124-.97.43-1.3 1.53-1.663.954-2.996-.43-4.42-.89-.918-1.393-2.207-2.286-3.12-1.02-1.05-1.46-2.574-2.89-3.28-1.652-.817-4.563-.208-5.224 1.474-.725 1.848.496 3.007 2.11 3.767.63.297 1.234.634 1.853.948.61.31 1.487.594 1.017 1.455-.398.736-1.076 1.212-2.14.706-3.86-1.827-8.073-2.306-12.192-3.136",
                            }),
                            (0, js.jsx)("path", {
                              d: "M355.887 101.243c-.717.492-.965.725-1.26.85-.454.193-.935.326-1.414.45-.946.25-.877.956-.203 1.133 1.005.262 1.867-.447 2.524-1.232.138-.164.14-.443.353-1.2z",
                            }),
                          ],
                        }),
                      }),
                      (0, js.jsxs)("g", {
                        ref: O,
                        children: [
                          (0, js.jsx)("path", {
                            d: "M181.733 66.485c-2.833 1.613-4.37 4.582-7.332 6.61 3.753.416 6.997 1.23 10.343.204 1.626-.5 1.465-1.2.786-2.4-.475-.847-1.305-.918-1.96-1.074-1.91-.454-2.29-1.542-1.744-3.23.208-.073.418-.148.626-.22-.067-.092-.186-.267-.194-.26-.182.11-.35.24-.523.368zM175.003 9.905c-.5-.607-1.072-.64-1.925-.117.747.093 1.288.163 1.83.23-.012.945-.56 1.23-1.42 1.52-2.127.72-4.235.51-6.382.065 2.207 1.568 2.75 1.805 4.56 1.238 1.634-.51 3.036-.272 4.474.533.703.393 1.305.72 2.343.205 6.22-3.09 12.53-5.937 19.554-6.832 3.82-.49 6.97-2.796 10.383-4.415-10.137 1.13-20.33.96-30.36 2.765 2.818-.336 5.516 1.285 8.354.403.72-.225 1.527-.453 1.755.39.245.905-.82.97-1.37 1.213-.527.234-1.186.228-1.785.21-2.066-.052-4.136.21-6.19-.435-.888-.28-2.72.206-2.224 1.002 1.73 2.777-.44 1.883-1.6 2.03z",
                          }),
                          (0, js.jsx)("path", {
                            d: "M116.452 166.18c-1.38-2.408-3.415-2.033-5.458-1.218-3.344 1.33-7.49-2.097-6.936-5.733.39-2.548.87-5.08 1.322-7.615.258-1.44-.303-2.025-1.724-2.59-2.418-.96-4.624.173-6.916.216-2.364.044-2.258-.8-1.527-2.41 1.353-2.977 2.606-6.003 4.04-8.942.876-1.794-.184-2.366-1.48-2.235-2.222.228-4.53.187-5.47 3.25-1.116 3.657-4.785 4.01-7.88 4.37-2.426.286-4.375-1.48-5.164-3.66-1.145-3.165-2.646-6.405-.89-9.944a18.35 18.35 0 001.62-4.89c.574-3.148 1.98-5.455 5.185-6.426a4.73 4.73 0 001.604-.843c2.627-2.152 5.257-3.027 8.53-1.05.78.474 2.514 1.89 3.78-.193 1.47-2.414 3.327-2.718 6.13-1.808 1.46.474 2.737 1.69 4.65.916 1.2-.488 3.39 2.204 2.864 3.54-.97 2.456.317 4.407 1.125 6.426.51 1.274 1.343 1.64 2.317.016 1.545-2.567.247-5.048.018-7.52-.195-2.144-.364-4.07 1.132-5.873 2.25-2.718 5.12-4.602 8.223-6.067 3.72-1.76 5.165-3.715 5.088-7.787-.025-1.326.387-1.667 2.143-1.612.4.014.32-.205.445-.383 2.508-3.644 5.88-6.108 10.07-7.547 1.555-.534 3.525-.71 4.075-2.71.412-1.498 1.39-2.266 2.72-2.832 1.907-.814 3.757-1.772 5.687-2.528 1.758-.69 3.58-1.226 5.397-1.754.6-.174 1.372-.02 1.48.685.09.564-.594.69-1.1.875-.887.326-1.76.73-2.582 1.2-.403.232-1.078.6-.82 1.124.277.556.946.656 1.576.284 2.39-1.427 5.084-2.114 7.664-3.077.79-.295 1.453-.783 1.934-1.508-.882-.405-1.553.233-2.302.3-1.865.173-3.31-.5-4.4-2.12-1.16-1.724-.018-2.383 1.118-3.31.565-.463 1.144-1.27.812-2.24-2.286-.35-4.34.164-6.3 1.217-.917.492-1.872.91-2.796 1.385-.455.234-.838.212-1.11-.225-.288-.457-.083-.914.314-1.11 4.305-2.134 8.465-5.182 13.55-4.39 5.54.86 10.095-1.367 14.7-3.682 1.25-.63 2.75-1.738 1.914-3.388-.877-1.73-2.623-1.744-4.318-.982-.238.107-.493.182-.716.314-.52.312-1.013.337-1.328-.235-.283-.513.19-.865.512-1.032 1.247-.653.667-1.384.347-2.312-.395-1.144-1.73-1.866-1.244-3.453.562-1.84-.278-3.705-.44-5.56-.136-1.538-1.12-.718-1.59-.32a22.386 22.386 0 01-4.54 2.98c-.875.434-1.63.958-2.487-.092-.708-.863-1.763-1.487-.794-2.842.907-1.268.347-2.305-.8-3.062-1.006-.667-2.012-1.425-3.134-1.806-4.798-1.63-6.515-.92-8.947 3.595-.52.962-1.198 1.64-2.137 2.175-.884.503-1.488 1.34-1.108 2.4 1.093 3.044-1.005 4.72-3.025 5.74-3.306 1.67-6.222 3.372-6.81 7.41-.034.244-.163.53-.343.69-1.037.927-2.205 1.94-3.62 1.61-1.162-.267-1.556-1.72-1.706-2.734-.135-.91.415-1.995.865-2.903.876-1.758 1.152-3.003-1.46-3.278-1.52-.163-2.916-.858-4.26-1.747-1.256-.828-2.61-1.7-4.287-1.703-2.78-.006-3.258-2.717-4.164-4.35-.683-1.234.994-2.984 2.44-3.854 2.88-1.737 5.672-3.652 8.906-4.725.61-.2 1.522-.067 1.404-1.12-.163-1.475.457-1.395 1.694-1.24 2.558.324 4.895-.687 7.424-1.6-.49-.544-.754-.78-.94-1.063-.287-.443-1.207-.684-.6-1.442.546-.68 1.154-.158 1.615.143 1.045.688 1.993.42 2.904-.17 1.23-.798 2.56-1.02 3.98-.9 3.216.272 5.988-.35 7.86-3.368.426-.684 1.553-1.185 1.15-2.048-.345-.742-1.406-.83-2.32-.868-1.203-.05-2.212.18-3 1.17-1.047 1.323-2.42 2.232-3.972 2.85-.654.262-1.325 1.077-2.08.183-.62-.736-.01-1.416.364-1.86.95-1.126.22-1.74-.665-1.633-2.984.357-2.755-1.16-1.99-3.075.206-.52.406-.956-.09-1.4-.542-.485-1.095-.396-1.684-.093-1.453.744-2.912 1.475-4.416 2.237 2.15 2.163 1.793 3.516-1.05 4.195-.863.207-1.707.403-2.367.957-1.448 1.217-2.845 1.815-4.373.15-.604-.66-1.497-.747-2.18-.455-2.127.91-4.057.1-6.056-.407-3.125-.795-5.895-.306-7.984 2.407-.658.86-1.34 1.23-1.823-.127-.666-1.866-1.77-2.265-3.648-1.557-.995.375-2.235.115-3.365.118-1.94.005-1.648-.852-.644-1.994-.84-.067-1.68.058-2.347-.222-3.303-1.386-6.587-2.676-10.26-1.477-.285.093-.725-.022-.993-.193-2.777-1.772-5.728-.727-8.49-.258-4.58.78-8.975 2.177-13.782 1.054-9.175-2.142-18.322-4.244-27.975-2.777-5.577.85-10.628 3.483-16.257 3.936-1.31.106-1.786 1.056-.495 2.08 1.49 1.177.69 1.732-.537 2.3-1.13.524-2.186.852-3.485.48-2.895-.838-5.31.376-7.998 1.988 2.402.966 4.34 1.967 6.504.536.553-.364 1.254-.337 1.58.323.337.673-.4.77-.77 1.08-1.34 1.118-2.673 2.058-4.58 2.15-1.87.093-3.745.518-5.57.99-1.314.34-3.41 1.174-3.087 2.256.936 3.144-1.37 3.857-3.2 5.107 1.416 1.05 2.682 1.927 4.306.795.46-.32 1.004-.504 1.37.044.514.774-.31 1.067-.716 1.39-.46.373-1.087.532-1.608.837C5.774 52.233 2.3 53.295-1.54 54.98c1.3 0 2.066.203 2.664-.03 6.262-2.432 12.82-4.353 18.633-7.605 4.615-2.58 10.05-.497 14.25-3.704.15-.112.62.25.956.308 5.086.884 9.933 2.386 14.386 5.11 1.465.897 2.083 2.02 1.936 3.62-.215 2.302.94 4.857-1.347 6.8-.49.416.04 1.13.274 1.688.194.45.578.927.063 1.418-1.653 1.57-.303 2.596.834 3.24 1.746.992 2.48 2.568 3.18 4.24.38.912-1.648 4.42-2.58 4.512-.404.043-.708-.21-.74-.546-.068-.66.166-1.32-.98-1.286-1.09.03-1.23.72-1.473 1.462-1.768 5.36-6.98 8.58-8.71 13.97-.072.224-.356.375-.533.566-1.54 1.646-2.095 5.028-1.128 7.077.177.38.223.7.266 1.12.327 3.294-.67 7.082 3.67 8.886 1.39.58 2.335 2.51 1.83 3.995-.89 2.603.277 4.523 1.295 6.61.394.81 1.146 1.532.464 2.615-.952 1.514-.23 2.52 1.114 3.407.9.596 2.156 1.24 1.815 2.59-.78 3.06 1.84 3.853 3.173 5.507-1.766-5.405-2.766-11.015-5.227-16.13-.747-1.55-.33-3.003 1.165-3.36 1.427-.343 2.338.644 2.644 2.408.92 5.272 3.722 9.697 6.81 13.967 2.114 2.92 4.563 5.813 2.85 9.846-.29.683-.2 1.15.3 1.615 1.454 1.347 2.647 2.962 4.552 3.824 3.627 1.643 7.214 3.38 10.78 5.146 1.02.504 1.89.48 2.95.114 3.85-1.33 4.905-.955 7.32 2.326 1.5 2.044 6.67 4.537 8.41 3.653 1.473-.748 1.513.014 1.87.917.93 2.357 2.08 4.884 3.508 6.66 2.21 2.748 5.567 4.708 9.172 5.803.91.274 1.543.723 1.632-.884.103-1.847 1.802-1.872 3.153-1.755.828.075 2.3.306 2.296.78M274.10 4.98c-.535-.026-.986-.153-1.378-.05-3.173.843-6.138.513-8.884-1.383-.258-.177-.68-.097-1.005-.2-6.163-2.004-12.413.126-18.644-.34-3.66-.275-7.42 1.393-11.174 1.642-3.31.215-6.53 1.16-10.006.396-5.284-1.16-10.554-.763-15.6 1.736-2.43 1.2-4.902 2.483-7.76 2.69-1.876.135-3.767.122-5.653.564-1.092.257-.913.75-1.163 1.444-.36.998.145 1.365.818 1.518 1.734.396 3.367.994 5.307.528 4.8-1.153 9.172 1.244 9.906 7.196.085.69.432.822.82 1.108 2.74 2.015 2.697 5.004-.12 6.902-.856.576-1.807 1.018-2.647 1.617-1.64 1.166-2.883 2.534-1.667 4.714.39.7.353 1.344-.1 1.945-.867 1.15-.4 2.287-.04 3.435.84 2.655 3.296 3.36 5.393 4.53 2.297 1.277 3.99.238 5.446-1.394.853-.956 1.456-2.135 2.162-3.22 2.315-3.555 5.194-6.08 9.76-6.365 1.627-.102 3.47-.29 4.938-1.315 3.373-2.347 6.476-4.62 11.23-4.024 3.098.388 6.457-1.3 9.717-2.06-1.25-1.398-1.27-1.476-2.246-1.246-.91.213-2.01.957-2.622-.003-.748-1.17.93-.812 1.215-1.345 1.07-2.02 1.086-2.1 3.023-.464 1.258 1.058 2.417 1.38 3.806.328-.993-1.81-2.97-2.094-4.42-3.135-.37-.263-.987-.586-.605-1.21.137-.22.594-.39.873-.354 5.527.71 8.2-3.324 11.247-6.735.143-.162.21-.446.213-.677.082-2.926 1.463-4.18 4.41-4.836 1.808-.398 4.075.193 5.447-1.936z",
                          }),
                          (0, js.jsx)("path", {
                            d: "M177.88 40.817c-.365-.3-.778-.5-.967-.828-.398-.696-2.09-.54-1.48-1.67.545-1.014 1.646-.364 2.563-.053.79.267 1.544 1.51 2.492.403.906-1.05.733-2.186.04-3.35-.35-.587-1.146-1.312-.167-2.01.715-.507 1.487-.85 2.383-.224.562.394 1.26.588 1.84.963 1.8 1.162 2.747-.015 3.5-1.34.9-1.59-.624-1.897-1.532-2.367-1.472-.766-2.97-1.835-2.555-3.49.527-2.088-.797-2.283-1.962-2.537-1.94-.415-3.66-.975-4.604-2.916-.288-.59-.817-.957-1.493-.494-2.075 1.423-3.616.113-5.087-1.07-1.31-1.047-2.494-1.468-4.262-.964-1.592.45-2.846 1.122-3.96 2.27-.345.357-.707 1.236-1.424.472-.616-.66.075-1.056.417-1.525.473-.653 1.45-.95 1.44-2.08-2.477.11-4.48 1.047-6.283 2.665-.895.802-2.47 1.516-1.842 2.688.585 1.095 2.296 1.862 3.676 1.3 2.15-.875 4.09.044 6.104.275.673.075 1.24.327 1.98.058 3.664-1.34 5.136-.724 7.183 2.776.734 1.255 1.377 2.616 2.903 3.162.478.17 1.097.366.975.993-.112.582-.772.573-1.262.743-.738.254-1.42.64-2.21.103-1.807-1.235-3.384-.14-4.26 1.087-1.143 1.6-2.382 1.52-3.83 1.108-1.697-.484-3.216-.45-4.536.854.815 1.298 1.883.722 2.783.403 2.623-.926 4.444-.546 5.945 2.174 1.394 2.527 5.03 3.447 7.495 2.416zM118.405 18.228c-6.614-3.958-11.746.023-17.03 3.194.808 1.675 1.84 1.718 3.538 1 2.026-.857 4.136-2.597 6.57-.75.338.256.85.374.726.87-.066.25-.48.445-.768.604-.455.252-1.18-.29-1.548.578 1.288 0 2.5-.01 3.714.003.684.007 1.668-.112 1.708.738.042.884-.933.813-1.613.818-1.604.012-3.21.005-5.468.005 4.47 2.767 8.422 4.118 12.84 1.727 1.015-.55 1.99-.876 3.2-.345 3.137 1.38 5.78.037 8.432-1.696-.796-1.178-3.904-1.127-1.824-3.64.44-.535 1.45-1.443.414-2.163-.794-.55-1.62.15-2.24.827-.413.446-.84.885-1.314 1.265-.633.512-1.31.303-1.342-.433-.09-2.037-1.02-1.67-2.05-.78-.687.59-1.235.19-1.903.107-1.974-.245-3.725-1.475-5.865-1.13.445-.917 1.405-.17 1.82-.797zM105.965 133.753c.857-.284 1.734-.514 2.562-.863.964-.405 1.816-.708 2.957-.38 3.08.88 3.103.796 7.09 5.32.095.104.336.16.48.123 2.528-.59 5.145 1.478 7.62-.277-2.385-2.636-10.515-6.354-13.885-6.477-2.614-.094-5.037.172-6.826 2.552zM175.648 15.067c-1.117-.953-2.286-.684-3.397-.74-3.34-.164-6.813 1.125-9.95-1.285-1.12-.86-2.253.423-3.24 1.025-.35.21-.628.915-.566 1.34.096.665.817.454 1.298.48 1.636.075 3.327.41 4.872.35 3.62-.146 7.544 1.93 10.986-1.17zM124.998 142.107c4.672.65 8.935 1.055 13.178-.793-2.463-2.608-5.536-2.38-8.644-2.182.91 4.545-2.784 1.804-4.534 2.975zM145.95 17.703c-3.242-.82-5.278 3.316-8.686 2.018 1.765.43 2.276 3.36 4.96 1.98 1.854-.955 3.424-1.794 3.727-3.996zM163.333 7.783c2.802.123 4.995 1.846 7.206-.304.51-.495 1.85-.42 1.53-1.376-.3-.888-1.447-1.295-2.403-1.112-2.068.404-4.117.95-6.335 2.79zM154.49 37.486c.07-.516-.256-.808-.547-1.12-1.803-1.95-4.668-1.945-6.513.044-.364.393-1.16.692-.74 1.422.36.623.99.532 1.6.284 1.637-.664 3.24-.833 4.824.216.985.653 1.06-.357 1.377-.846zM52.52 71.04c.113-1.048-2.633-4.082-3.64-3.866-.757.162-1.707.412-1.03 1.727.78 1.505 2.14 2.13 3.522 2.75.405.183 1.06.14 1.148-.61zM155.017 18.418c-2.084-1.03-5.58-.62-6.883.703-.28.285-.75.543-.428 1.048.122.19.524.446.6.393 1.93-1.38 4.644-.26 6.71-2.14zM139.843 26.585c-.525-.296-.804-.51-1.12-.62-1.415-.488-2.467.38-3.518 1.066-.306.2.105.585.33.805 1.194 1.16 1.985-.256 2.954-.495.394-.097.736-.4 1.352-.755zM117.088 142.047c1.697 1.355 1.697 1.355 3.773.653-1.215-.782-2.297-1.51-3.77-.653zM143.43 142.054c-.368-.47-.964-.39-1.527-.383-.548.01-1.19.215-1.162.75.038.704.744.816 1.38.783.65-.033 1.143-.27 1.312-1.148z",
                          }),
                        ],
                      }),
                      (0, js.jsx)(mm, {
                        title: "Total CPUGPU in North America is ".concat(
                          x[4].value
                        ),
                        children: (0, js.jsxs)("g", {
                          fill: y("NorthAmerica"),
                          className: x[4].value,
                          ref: T,
                          onMouseMove: (e) => Y(e, x[4].value),
                          onMouseEnter: () => V(T, O),
                          onMouseLeave: () => U(T, O),
                          onClick: () => {
                            l(!0),
                              u(
                                "Total CPUGPU in North America is ".concat(
                                  x[4].value
                                )
                              ),
                              a({ key: x[4].key, value: x[4].value });
                          },
                          children: [
                            (0, js.jsx)("path", {
                              d: "M181.233 66.485c-2.833 1.613-4.37 4.582-7.332 6.61 3.753.416 6.997 1.23 10.343.204 1.626-.5 1.465-1.2.786-2.4-.475-.847-1.305-.918-1.96-1.074-1.91-.454-2.29-1.542-1.744-3.23.208-.073.418-.148.626-.22-.067-.092-.186-.267-.194-.26-.182.11-.35.24-.523.368zM174.493 9.605c-.5-.607-1.072-.64-1.925-.117.747.093 1.288.163 1.83.23-.012.945-.56 1.23-1.42 1.52-2.127.72-4.235.51-6.382.065 2.207 1.568 2.75 1.805 4.56 1.238 1.634-.51 3.036-.272 4.474.533.703.393 1.305.72 2.343.205 6.22-3.09 12.53-5.937 19.554-6.832 3.82-.49 6.97-2.796 10.383-4.415-10.137 1.13-20.33.96-30.36 2.765 2.818-.336 5.516 1.285 8.354.403.72-.225 1.527-.453 1.755.39.245.905-.82.97-1.37 1.213-.527.234-1.186.228-1.785.21-2.066-.052-4.136.21-6.19-.435-.888-.28-2.72.206-2.224 1.002 1.73 2.777-.44 1.883-1.6 2.03z",
                            }),
                            (0, js.jsx)("path", {
                              d: "M115.952 165.48c-1.38-2.408-3.415-2.033-5.458-1.218-3.344 1.33-7.49-2.097-6.936-5.733.39-2.548.87-5.08 1.322-7.615.258-1.44-.303-2.025-1.724-2.59-2.418-.96-4.624.173-6.916.216-2.364.044-2.258-.8-1.527-2.41 1.353-2.977 2.606-6.003 4.04-8.942.876-1.794-.184-2.366-1.48-2.235-2.222.228-4.53.187-5.47 3.25-1.116 3.657-4.785 4.01-7.88 4.37-2.426.286-4.375-1.48-5.164-3.66-1.145-3.165-2.646-6.405-.89-9.944a18.35 18.35 0 001.62-4.89c.574-3.148 1.98-5.455 5.185-6.426a4.73 4.73 0 001.604-.843c2.627-2.152 5.257-3.027 8.53-1.05.78.474 2.514 1.89 3.78-.193 1.47-2.414 3.327-2.718 6.13-1.808 1.46.474 2.737 1.69 4.65.916 1.2-.488 3.39 2.204 2.864 3.54-.97 2.456.317 4.407 1.125 6.426.51 1.274 1.343 1.64 2.317.016 1.545-2.567.247-5.048.018-7.52-.195-2.144-.364-4.07 1.132-5.873 2.25-2.718 5.12-4.602 8.223-6.067 3.72-1.76 5.165-3.715 5.088-7.787-.025-1.326.387-1.667 2.143-1.612.4.014.32-.205.445-.383 2.508-3.644 5.88-6.108 10.07-7.547 1.555-.534 3.525-.71 4.075-2.71.412-1.498 1.39-2.266 2.72-2.832 1.907-.814 3.757-1.772 5.687-2.528 1.758-.69 3.58-1.226 5.397-1.754.6-.174 1.372-.02 1.48.685.09.564-.594.69-1.1.875-.887.326-1.76.73-2.582 1.2-.403.232-1.078.6-.82 1.124.277.556.946.656 1.576.284 2.39-1.427 5.084-2.114 7.664-3.077.79-.295 1.453-.783 1.934-1.508-.882-.405-1.553.233-2.302.3-1.865.173-3.31-.5-4.4-2.12-1.16-1.724-.018-2.383 1.118-3.31.565-.463 1.144-1.27.812-2.24-2.286-.35-4.34.164-6.3 1.217-.917.492-1.872.91-2.796 1.385-.455.234-.838.212-1.11-.225-.288-.457-.083-.914.314-1.11 4.305-2.134 8.465-5.182 13.55-4.39 5.54.86 10.095-1.367 14.7-3.682 1.25-.63 2.75-1.738 1.914-3.388-.877-1.73-2.623-1.744-4.318-.982-.238.107-.493.182-.716.314-.52.312-1.013.337-1.328-.235-.283-.513.19-.865.512-1.032 1.247-.653.667-1.384.347-2.312-.395-1.144-1.73-1.866-1.244-3.453.562-1.84-.278-3.705-.44-5.56-.136-1.538-1.12-.718-1.59-.32a22.386 22.386 0 01-4.54 2.98c-.875.434-1.63.958-2.487-.092-.708-.863-1.763-1.487-.794-2.842.907-1.268.347-2.305-.8-3.062-1.006-.667-2.012-1.425-3.134-1.806-4.798-1.63-6.515-.92-8.947 3.595-.52.962-1.198 1.64-2.137 2.175-.884.503-1.488 1.34-1.108 2.4 1.093 3.044-1.005 4.72-3.025 5.74-3.306 1.67-6.222 3.372-6.81 7.41-.034.244-.163.53-.343.69-1.037.927-2.205 1.94-3.62 1.61-1.162-.267-1.556-1.72-1.706-2.734-.135-.91.415-1.995.865-2.903.876-1.758 1.152-3.003-1.46-3.278-1.52-.163-2.916-.858-4.26-1.747-1.256-.828-2.61-1.7-4.287-1.703-2.78-.006-3.258-2.717-4.164-4.35-.683-1.234.994-2.984 2.44-3.854 2.88-1.737 5.672-3.652 8.906-4.725.61-.2 1.522-.067 1.404-1.12-.163-1.475.457-1.395 1.694-1.24 2.558.324 4.895-.687 7.424-1.6-.49-.544-.754-.78-.94-1.063-.287-.443-1.207-.684-.6-1.442.546-.68 1.154-.158 1.615.143 1.045.688 1.993.42 2.904-.17 1.23-.798 2.56-1.02 3.98-.9 3.216.272 5.988-.35 7.86-3.368.426-.684 1.553-1.185 1.15-2.048-.345-.742-1.406-.83-2.32-.868-1.203-.05-2.212.18-3 1.17-1.047 1.323-2.42 2.232-3.972 2.85-.654.262-1.325 1.077-2.08.183-.62-.736-.01-1.416.364-1.86.95-1.126.22-1.74-.665-1.633-2.984.357-2.755-1.16-1.99-3.075.206-.52.406-.956-.09-1.4-.542-.485-1.095-.396-1.684-.093-1.453.744-2.912 1.475-4.416 2.237 2.15 2.163 1.793 3.516-1.05 4.195-.863.207-1.707.403-2.367.957-1.448 1.217-2.845 1.815-4.373.15-.604-.66-1.497-.747-2.18-.455-2.127.91-4.057.1-6.056-.407-3.125-.795-5.895-.306-7.984 2.407-.658.86-1.34 1.23-1.823-.127-.666-1.866-1.77-2.265-3.648-1.557-.995.375-2.235.115-3.365.118-1.94.005-1.648-.852-.644-1.994-.84-.067-1.68.058-2.347-.222-3.303-1.386-6.587-2.676-10.26-1.477-.285.093-.725-.022-.993-.193-2.777-1.772-5.728-.727-8.49-.258-4.58.78-8.975 2.177-13.782 1.054-9.175-2.142-18.322-4.244-27.975-2.777-5.577.85-10.628 3.483-16.257 3.936-1.31.106-1.786 1.056-.495 2.08 1.49 1.177.69 1.732-.537 2.3-1.13.524-2.186.852-3.485.48-2.895-.838-5.31.376-7.998 1.988 2.402.966 4.34 1.967 6.504.536.553-.364 1.254-.337 1.58.323.337.673-.4.77-.77 1.08-1.34 1.118-2.673 2.058-4.58 2.15-1.87.093-3.745.518-5.57.99-1.314.34-3.41 1.174-3.087 2.256.936 3.144-1.37 3.857-3.2 5.107 1.416 1.05 2.682 1.927 4.306.795.46-.32 1.004-.504 1.37.044.514.774-.31 1.067-.716 1.39-.46.373-1.087.532-1.608.837C5.774 52.233 2.3 53.295-1.54 54.98c1.3 0 2.066.203 2.664-.03 6.262-2.432 12.82-4.353 18.633-7.605 4.615-2.58 10.05-.497 14.25-3.704.15-.112.62.25.956.308 5.086.884 9.933 2.386 14.386 5.11 1.465.897 2.083 2.02 1.936 3.62-.215 2.302.94 4.857-1.347 6.8-.49.416.04 1.13.274 1.688.194.45.578.927.063 1.418-1.653 1.57-.303 2.596.834 3.24 1.746.992 2.48 2.568 3.18 4.24.38.912-1.648 4.42-2.58 4.512-.404.043-.708-.21-.74-.546-.068-.66.166-1.32-.98-1.286-1.09.03-1.23.72-1.473 1.462-1.768 5.36-6.98 8.58-8.71 13.97-.072.224-.356.375-.533.566-1.54 1.646-2.095 5.028-1.128 7.077.177.38.223.7.266 1.12.327 3.294-.67 7.082 3.67 8.886 1.39.58 2.335 2.51 1.83 3.995-.89 2.603.277 4.523 1.295 6.61.394.81 1.146 1.532.464 2.615-.952 1.514-.23 2.52 1.114 3.407.9.596 2.156 1.24 1.815 2.59-.78 3.06 1.84 3.853 3.173 5.507-1.766-5.405-2.766-11.015-5.227-16.13-.747-1.55-.33-3.003 1.165-3.36 1.427-.343 2.338.644 2.644 2.408.92 5.272 3.722 9.697 6.81 13.967 2.114 2.92 4.563 5.813 2.85 9.846-.29.683-.2 1.15.3 1.615 1.454 1.347 2.647 2.962 4.552 3.824 3.627 1.643 7.214 3.38 10.78 5.146 1.02.504 1.89.48 2.95.114 3.85-1.33 4.905-.955 7.32 2.326 1.5 2.044 6.67 4.537 8.41 3.653 1.473-.748 1.513.014 1.87.917.93 2.357 2.08 4.884 3.508 6.66 2.21 2.748 5.567 4.708 9.172 5.803.91.274 1.543.723 1.632-.884.103-1.847 1.802-1.872 3.153-1.755.828.075 2.3.306 2.296.78M273.78 4.48c-.535-.026-.986-.153-1.378-.05-3.173.843-6.138.513-8.884-1.383-.258-.177-.68-.097-1.005-.2-6.163-2.004-12.413.126-18.644-.34-3.66-.275-7.42 1.393-11.174 1.642-3.31.215-6.53 1.16-10.006.396-5.284-1.16-10.554-.763-15.6 1.736-2.43 1.2-4.902 2.483-7.76 2.69-1.876.135-3.767.122-5.653.564-1.092.257-.913.75-1.163 1.444-.36.998.145 1.365.818 1.518 1.734.396 3.367.994 5.307.528 4.8-1.153 9.172 1.244 9.906 7.196.085.69.432.822.82 1.108 2.74 2.015 2.697 5.004-.12 6.902-.856.576-1.807 1.018-2.647 1.617-1.64 1.166-2.883 2.534-1.667 4.714.39.7.353 1.344-.1 1.945-.867 1.15-.4 2.287-.04 3.435.84 2.655 3.296 3.36 5.393 4.53 2.297 1.277 3.99.238 5.446-1.394.853-.956 1.456-2.135 2.162-3.22 2.315-3.555 5.194-6.08 9.76-6.365 1.627-.102 3.47-.29 4.938-1.315 3.373-2.347 6.476-4.62 11.23-4.024 3.098.388 6.457-1.3 9.717-2.06-1.25-1.398-1.27-1.476-2.246-1.246-.91.213-2.01.957-2.622-.003-.748-1.17.93-.812 1.215-1.345 1.07-2.02 1.086-2.1 3.023-.464 1.258 1.058 2.417 1.38 3.806.328-.993-1.81-2.97-2.094-4.42-3.135-.37-.263-.987-.586-.605-1.21.137-.22.594-.39.873-.354 5.527.71 8.2-3.324 11.247-6.735.143-.162.21-.446.213-.677.082-2.926 1.463-4.18 4.41-4.836 1.808-.398 4.075.193 5.447-1.936z",
                            }),
                            (0, js.jsx)("path", {
                              d: "M176.88 40.817c-.365-.3-.778-.5-.967-.828-.398-.696-2.09-.54-1.48-1.67.545-1.014 1.646-.364 2.563-.053.79.267 1.544 1.51 2.492.403.906-1.05.733-2.186.04-3.35-.35-.587-1.146-1.312-.167-2.01.715-.507 1.487-.85 2.383-.224.562.394 1.26.588 1.84.963 1.8 1.162 2.747-.015 3.5-1.34.9-1.59-.624-1.897-1.532-2.367-1.472-.766-2.97-1.835-2.555-3.49.527-2.088-.797-2.283-1.962-2.537-1.94-.415-3.66-.975-4.604-2.916-.288-.59-.817-.957-1.493-.494-2.075 1.423-3.616.113-5.087-1.07-1.31-1.047-2.494-1.468-4.262-.964-1.592.45-2.846 1.122-3.96 2.27-.345.357-.707 1.236-1.424.472-.616-.66.075-1.056.417-1.525.473-.653 1.45-.95 1.44-2.08-2.477.11-4.48 1.047-6.283 2.665-.895.802-2.47 1.516-1.842 2.688.585 1.095 2.296 1.862 3.676 1.3 2.15-.875 4.09.044 6.104.275.673.075 1.24.327 1.98.058 3.664-1.34 5.136-.724 7.183 2.776.734 1.255 1.377 2.616 2.903 3.162.478.17 1.097.366.975.993-.112.582-.772.573-1.262.743-.738.254-1.42.64-2.21.103-1.807-1.235-3.384-.14-4.26 1.087-1.143 1.6-2.382 1.52-3.83 1.108-1.697-.484-3.216-.45-4.536.854.815 1.298 1.883.722 2.783.403 2.623-.926 4.444-.546 5.945 2.174 1.394 2.527 5.03 3.447 7.495 2.416zM117.705 18.228c-6.614-3.958-11.746.023-17.03 3.194.808 1.675 1.84 1.718 3.538 1 2.026-.857 4.136-2.597 6.57-.75.338.256.85.374.726.87-.066.25-.48.445-.768.604-.455.252-1.18-.29-1.548.578 1.288 0 2.5-.01 3.714.003.684.007 1.668-.112 1.708.738.042.884-.933.813-1.613.818-1.604.012-3.21.005-5.468.005 4.47 2.767 8.422 4.118 12.84 1.727 1.015-.55 1.99-.876 3.2-.345 3.137 1.38 5.78.037 8.432-1.696-.796-1.178-3.904-1.127-1.824-3.64.44-.535 1.45-1.443.414-2.163-.794-.55-1.62.15-2.24.827-.413.446-.84.885-1.314 1.265-.633.512-1.31.303-1.342-.433-.09-2.037-1.02-1.67-2.05-.78-.687.59-1.235.19-1.903.107-1.974-.245-3.725-1.475-5.865-1.13.445-.917 1.405-.17 1.82-.797zM105.365 133.753c.857-.284 1.734-.514 2.562-.863.964-.405 1.816-.708 2.957-.38 3.08.88 3.103.796 7.09 5.32.095.104.336.16.48.123 2.528-.59 5.145 1.478 7.62-.277-2.385-2.636-10.515-6.354-13.885-6.477-2.614-.094-5.037.172-6.826 2.552zM174.648 15.067c-1.117-.953-2.286-.684-3.397-.74-3.34-.164-6.813 1.125-9.95-1.285-1.12-.86-2.253.423-3.24 1.025-.35.21-.628.915-.566 1.34.096.665.817.454 1.298.48 1.636.075 3.327.41 4.872.35 3.62-.146 7.544 1.93 10.986-1.17zM124.458 142.107c4.672.65 8.935 1.055 13.178-.793-2.463-2.608-5.536-2.38-8.644-2.182.91 4.545-2.784 1.804-4.534 2.975zM145.41 17.703c-3.242-.82-5.278 3.316-8.686 2.018 1.765.43 2.276 3.36 4.96 1.98 1.854-.955 3.424-1.794 3.727-3.996zM162.733 7.783c2.802.123 4.995 1.846 7.206-.304.51-.495 1.85-.42 1.53-1.376-.3-.888-1.447-1.295-2.403-1.112-2.068.404-4.117.95-6.335 2.79zM153.99 37.486c.07-.516-.256-.808-.547-1.12-1.803-1.95-4.668-1.945-6.513.044-.364.393-1.16.692-.74 1.422.36.623.99.532 1.6.284 1.637-.664 3.24-.833 4.824.216.985.653 1.06-.357 1.377-.846zM52.22 70.54c.113-1.048-2.633-4.082-3.64-3.866-.757.162-1.707.412-1.03 1.727.78 1.505 2.14 2.13 3.522 2.75.405.183 1.06.14 1.148-.61zM154.517 18.318c-2.084-1.03-5.58-.62-6.883.703-.28.285-.75.543-.428 1.048.122.19.524.446.6.393 1.93-1.38 4.644-.26 6.71-2.14zM139.343 26.585c-.525-.296-.804-.51-1.12-.62-1.415-.488-2.467.38-3.518 1.066-.306.2.105.585.33.805 1.194 1.16 1.985-.256 2.954-.495.394-.097.736-.4 1.352-.755zM116.688 142.047c1.697 1.355 1.697 1.355 3.773.653-1.215-.782-2.297-1.51-3.77-.653zM143.03 142.054c-.368-.47-.964-.39-1.527-.383-.548.01-1.19.215-1.162.75.038.704.744.816 1.38.783.65-.033 1.143-.27 1.312-1.148z",
                            }),
                          ],
                        }),
                      }),
                      (0, js.jsxs)("g", {
                        ref: I,
                        children: [
                          (0, js.jsx)("path", {
                            d: "M611.508 211.714c.172.126.34.26.523.37.01.007.13-.17.2-.258l-.623-.226c-.46-1.705-2.208-2.034-3.295-3.07-1.68-1.608-3.786-3.635-3.54-5.62.317-2.562-.706-3.446-2.328-4.708-3.884-3.022-8.545-4.387-12.83-6.534-3.37-1.687-5.854-1.676-8.62.578-.462.377-1.037.58-1.298 1.19-.503 1.158-1.074.737-1.73.096a5.244 5.244 0 01-1.33-2.202c-1.307-4.2-2.23-4.577-6.12-2.304 1.053.553 2.037 1.08 3.027 1.59.912.464 1.798.676.42 1.897-1.092.97-.305 2.38.94 2.37 3.283-.023 5.667 1.99 8.368 3.24 3.533 1.637 3.98 3.92 1.485 6.636.308.17.658.536.902.475 2.053-.51 3.39.376 4.9 1.75 1.926 1.75 4.35 1.064 5.673-1.215.897-1.55 1.967-2.29 3.804-1.422 1.38.648 2.74 1.452 3.376 2.74 1.695 3.452 4.824 4.104 8.102 4.626zM593.247 213.018c-1.676 2.43-2.453 5.122-2.457 7.982-.006 3.14-1.982 5.24-4.06 6.847-1.767 1.366-2.935-1.346-4.49-2.004-1.08-.454-1.958-1.396-2.918-2.132-2.44-1.88-2.515-2.87-.924-5.604.38-.647 2.353-1.68.255-2.57-2.424-1.025-4.905-2.29-7.548-.388-.61.44-1.395.78-2.138.87-2.26.28-3.21 2.044-3.962 3.71-1.127 2.478-1.507 2.736-3.595 1.14-2.285-1.748-4.63-1.7-6.173.748-1.194 1.892-4.147 2.463-3.94 5.35.02.276-.532.43-.865.197-1.774-1.23-2.21.234-2.686 1.388-1.02 2.47-2.693 4.645-5.26 4.99-4.41.6-8.13 2.735-12.14 4.26-1.81.69-2.414 1.916-3.26 3.34-1.2 2.03.01 4.028-.254 6.067-.45 3.537-1.448 7.133-.29 10.78.97 3.06.118 5.71-2.35 7.803-.924.782-.376 1.512.292 1.857 1.262.657 2.492 1.344 4.14.71 2.96-1.14 5.92-2.315 9.157-2.606 1.604-.143 3.296.19 4.813-.79 2.807-1.8 5.988-2.915 9.225-3.215 3.582-.334 7.445-2.246 10.774 1.222 1.4 1.453 1.902 3.224 2.844 4.9 1.102-1.456 3.03-1.817 4.276-3.156.256-.275.86-.69 1.378-.13.493.537.197.984-.205 1.34-.818.725-.554 1.23-.27 2.266.414 1.504 1.616 2.935 1.132 4.65-.258.91-1.392 1.8.07 2.652 1.74 1.007 3.446 2.66 5.585 1.563 1.336-.685 2.163-.796 3.026.434.8 1.14 1.438.854 2.465.062 1.682-1.302 3.51-2.626 5.914-1.677.73.287 1.11-.235 1.412-.804 1.926-3.653 6.05-5.412 7.892-9.154.2-.403.81-.608 1.24-.89 5.444-3.58 8.532-8.59 9.14-15.088.186-1.985 1.023-4.063-.876-5.775-1.838-1.658-2.853-3.83-3.833-6.078-.955-2.2-1.692-4.64-3.733-6.162-1.716-1.277-1.858-2.765-1.342-4.688.656-2.435.15-4.96-1.388-6.782-1.402-1.66-2.373-3.34-2.843-5.39-.17-.75-.325-1.51-1.227-2.04zM614.047 295.613c.733.085 1.64-.095 2.505-.57 5.202-2.86 9.813-6.66 15.065-9.452.816-.43 1.155-1.26.443-2.395-.89-1.412-1.636-.475-2.192-.015-3.34 2.77-6.926 5.095-11.045 6.518a26.637 26.637 0 00-6.004 2.955c-.804.526-1.974 1.013-1.68 2.03.33 1.155 1.663.89 2.906.93zM640.957 268.668c.056 1.076.002 1.865.153 2.614.73 3.616.495 4.213-2.614 6.003-.913.528-2.353 1.445-1.988 2.11 1.18 2.146-.315 3.026-1.733 4.145 2.273.347 11.038-5.828 11.682-7.96-2.444.634-4.858-1.664-4.232-4.24.296-1.22.275-1.972-1.268-2.672zM575.945 288.723c1.727-.734 3.34-1.59 4.624-2.88.564-.566 1.434-1.382 1.13-2.15-.45-1.13-1.456-.377-2.243-.153-.916.26-1.657-.41-2.505-.5-3.392-.355-.618 2.814-2.093 3.705-.66.4-.703 1.38.4 1.758.237.08.48.155.684.22zM634.29 230.844c-.344 3.255 2.323 6.848 5.894 8.17-2.182-2.37-4.14-4.91-5.894-8.17zM614.895 196.752c-1.6 2.38-4.126 2.97-6.725 3.58 2.963 1.975 5.975.485 6.725-3.58zM668.422 228.1c-1.566-.425-2.163-1.58-3.172-.844-.675.495-.14 1.192.218 1.532.983.94 1.52-.233 2.954-.688zM614.62 193.67c-.906-.638-1.63-1.175-2.652-.996.744.49 1.338 1.337 2.653.996zM616.736 196.223c-.057-.457-.22-.727-.62-.695-.092.01-.226.24-.24.38-.04.37.164.648.518.703.105.017.257-.284.342-.386z",
                          }),
                          (0, js.jsx)("path", {
                            d: "M568.405 268.9c.088-.32.183-.597.225-.88.008-.057-.18-.14-.28-.214-.145.276-.297.552-.426.837-.003.01.227.12.48.257z",
                          }),
                        ],
                      }),
                      (0, js.jsx)(mm, {
                        title: "Total CPUGPU in Oceania is ".concat(x[5].value),
                        children: (0, js.jsxs)("g", {
                          fill: y("Australia"),
                          className: x[5].value,
                          ref: R,
                          onMouseMove: (e) => Y(e, x[5].value),
                          onMouseEnter: () => V(R, I),
                          onMouseLeave: () => U(R, I),
                          onClick: () => {
                            l(!0),
                              u(
                                "Total CPUGPU in Oceania is ".concat(x[5].value)
                              ),
                              a({ key: x[5].key, value: x[5].value });
                          },
                          children: [
                            (0, js.jsx)("path", {
                              d: "M610.708 211.614c.172.126.34.26.523.37.01.007.13-.17.2-.258l-.623-.226c-.46-1.705-2.208-2.034-3.295-3.07-1.68-1.608-3.786-3.635-3.54-5.62.317-2.562-.706-3.446-2.328-4.708-3.884-3.022-8.545-4.387-12.83-6.534-3.37-1.687-5.854-1.676-8.62.578-.462.377-1.037.58-1.298 1.19-.503 1.158-1.074.737-1.73.096a5.244 5.244 0 01-1.33-2.202c-1.307-4.2-2.23-4.577-6.12-2.304 1.053.553 2.037 1.08 3.027 1.59.912.464 1.798.676.42 1.897-1.092.97-.305 2.38.94 2.37 3.283-.023 5.667 1.99 8.368 3.24 3.533 1.637 3.98 3.92 1.485 6.636.308.17.658.536.902.475 2.053-.51 3.39.376 4.9 1.75 1.926 1.75 4.35 1.064 5.673-1.215.897-1.55 1.967-2.29 3.804-1.422 1.38.648 2.74 1.452 3.376 2.74 1.695 3.452 4.824 4.104 8.102 4.626zM592.347 212.718c-1.676 2.43-2.453 5.122-2.457 7.982-.006 3.14-1.982 5.24-4.06 6.847-1.767 1.366-2.935-1.346-4.49-2.004-1.08-.454-1.958-1.396-2.918-2.132-2.44-1.88-2.515-2.87-.924-5.604.38-.647 2.353-1.68.255-2.57-2.424-1.025-4.905-2.29-7.548-.388-.61.44-1.395.78-2.138.87-2.26.28-3.21 2.044-3.962 3.71-1.127 2.478-1.507 2.736-3.595 1.14-2.285-1.748-4.63-1.7-6.173.748-1.194 1.892-4.147 2.463-3.94 5.35.02.276-.532.43-.865.197-1.774-1.23-2.21.234-2.686 1.388-1.02 2.47-2.693 4.645-5.26 4.99-4.41.6-8.13 2.735-12.14 4.26-1.81.69-2.414 1.916-3.26 3.34-1.2 2.03.01 4.028-.254 6.067-.45 3.537-1.448 7.133-.29 10.78.97 3.06.118 5.71-2.35 7.803-.924.782-.376 1.512.292 1.857 1.262.657 2.492 1.344 4.14.71 2.96-1.14 5.92-2.315 9.157-2.606 1.604-.143 3.296.19 4.813-.79 2.807-1.8 5.988-2.915 9.225-3.215 3.582-.334 7.445-2.246 10.774 1.222 1.4 1.453 1.902 3.224 2.844 4.9 1.102-1.456 3.03-1.817 4.276-3.156.256-.275.86-.69 1.378-.13.493.537.197.984-.205 1.34-.818.725-.554 1.23-.27 2.266.414 1.504 1.616 2.935 1.132 4.65-.258.91-1.392 1.8.07 2.652 1.74 1.007 3.446 2.66 5.585 1.563 1.336-.685 2.163-.796 3.026.434.8 1.14 1.438.854 2.465.062 1.682-1.302 3.51-2.626 5.914-1.677.73.287 1.11-.235 1.412-.804 1.926-3.653 6.05-5.412 7.892-9.154.2-.403.81-.608 1.24-.89 5.444-3.58 8.532-8.59 9.14-15.088.186-1.985 1.023-4.063-.876-5.775-1.838-1.658-2.853-3.83-3.833-6.078-.955-2.2-1.692-4.64-3.733-6.162-1.716-1.277-1.858-2.765-1.342-4.688.656-2.435.15-4.96-1.388-6.782-1.402-1.66-2.373-3.34-2.843-5.39-.17-.75-.325-1.51-1.227-2.04zM613.547 295.613c.733.085 1.64-.095 2.505-.57 5.202-2.86 9.813-6.66 15.065-9.452.816-.43 1.155-1.26.443-2.395-.89-1.412-1.636-.475-2.192-.015-3.34 2.77-6.926 5.095-11.045 6.518a26.637 26.637 0 00-6.004 2.955c-.804.526-1.974 1.013-1.68 2.03.33 1.155 1.663.89 2.906.93zM640.457 268.668c.056 1.076.002 1.865.153 2.614.73 3.616.495 4.213-2.614 6.003-.913.528-2.353 1.445-1.988 2.11 1.18 2.146-.315 3.026-1.733 4.145 2.273.347 11.038-5.828 11.682-7.96-2.444.634-4.858-1.664-4.232-4.24.296-1.22.275-1.972-1.268-2.672zM575.345 288.723c1.727-.734 3.34-1.59 4.624-2.88.564-.566 1.434-1.382 1.13-2.15-.45-1.13-1.456-.377-2.243-.153-.916.26-1.657-.41-2.505-.5-3.392-.355-.618 2.814-2.093 3.705-.66.4-.703 1.38.4 1.758.237.08.48.155.684.22zM633.99 230.644c-.344 3.255 2.323 6.848 5.894 8.17-2.182-2.37-4.14-4.91-5.894-8.17zM614.595 196.652c-1.6 2.38-4.126 2.97-6.725 3.58 2.963 1.975 5.975.485 6.725-3.58zM668.022 228.1c-1.566-.425-2.163-1.58-3.172-.844-.675.495-.14 1.192.218 1.532.983.94 1.52-.233 2.954-.688zM614.22 193.67c-.906-.638-1.63-1.175-2.652-.996.744.49 1.338 1.337 2.653.996zM616.436 196.223c-.057-.457-.22-.727-.62-.695-.092.01-.226.24-.24.38-.04.37.164.648.518.703.105.017.257-.284.342-.386z",
                            }),
                            (0, js.jsx)("path", {
                              d: "M568.205 268.9c.088-.32.183-.597.225-.88.008-.057-.18-.14-.28-.214-.145.276-.297.552-.426.837-.003.01.227.12.48.257z",
                            }),
                          ],
                        }),
                      }),
                    ],
                  }),
                  (0, js.jsxs)("div", {
                    className: "info-box",
                    children: [
                      (0, js.jsxs)("div", {
                        className: "info-box-row",
                        children: [
                          (0, js.jsx)("div", { className: "dark-blue-box" }),
                          (0, js.jsx)("h2", { children: "CPUGPU \u2264 500" }),
                        ],
                      }),
                      (0, js.jsxs)("div", {
                        className: "info-box-row",
                        children: [
                          (0, js.jsx)("div", { className: "blue-box" }),
                          (0, js.jsx)("h2", { children: "CPUGPU \u2264 1000" }),
                        ],
                      }),
                      (0, js.jsxs)("div", {
                        className: "info-box-row",
                        children: [
                          (0, js.jsx)("div", { className: "light-blue-box" }),
                          (0, js.jsx)("h2", { children: "CPUGPU \u2264 2500" }),
                        ],
                      }),
                      (0, js.jsxs)("div", {
                        className: "info-box-row",
                        children: [
                          (0, js.jsx)("div", { className: "light-green-box" }),
                          (0, js.jsx)("h2", { children: "CPUGPU \u2264 6000" }),
                        ],
                      }),
                      (0, js.jsxs)("div", {
                        className: "info-box-row",
                        children: [
                          (0, js.jsx)("div", { className: "green-box" }),
                          (0, js.jsx)("h2", {
                            children: "CPUGPU \u2264 10000",
                          }),
                        ],
                      }),
                      (0, js.jsxs)("div", {
                        className: "info-box-row",
                        children: [
                          (0, js.jsx)("div", { className: "dark-green-box" }),
                          (0, js.jsxs)("h2", {
                            children: ["CPUGPU ", ">", " 10000"],
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, js.jsx)(
                    sE,
                    { open: r, onClose: () => l(!1), message: c },
                    c
                  ),
                ],
              }),
            })
          );
        },
        uE = () => {
          const [e, n] = (0, t.useState)([
              { name: "NorthAmerica", value: 0, lat: 83.631, lng: 74.102 },
              { name: "SouthAmerica", value: 0, lat: 8.7832, lng: 71.346 },
              { name: "Europe", value: 0, lat: 12.459, lng: 15.2551 },
              { name: "Asia", value: 0, lat: 34.0479, lng: 100.6197 },
              { name: "Africa", value: 0, lat: 8.7832, lng: 34.5085 },
              { name: "Oceania", value: 0, lat: 22.7359, lng: 140.0188 },
            ]),
            { data: i } = UP();
          return (
            (0, t.useEffect)(() => {
              if (i) {
                const { payload: e } = i;
                n([
                  {
                    name: "NorthAmerica",
                    value: e.NorthAmerica,
                    lat: 54.2211793,
                    lng: -116.7609645,
                  },
                  {
                    name: "SouthAmerica",
                    value: e.SouthAmerica,
                    lat: -23.4200359,
                    lng: -61.0910808,
                  },
                  {
                    name: "Europe",
                    value: e.Europe,
                    lat: 54.526,
                    lng: 15.2551,
                  },
                  {
                    name: "Asia",
                    value: e.Asia,
                    lat: 33.9147667,
                    lng: 82.8250075,
                  },
                  {
                    name: "Africa",
                    value: e.Africa,
                    lat: 1.6508,
                    lng: 17.4677,
                  },
                  {
                    name: "Oceania",
                    value: e.Oceania,
                    lat: -24.5310385,
                    lng: 131.875717,
                  },
                ]);
              }
            }, [i]),
            console.log(e),
            (0, js.jsx)("div", {
              className: "network-map-box",
              children: (0, js.jsx)("div", {
                className: "network-map-box-1",
                children: (0, js.jsx)(cE, {}),
              }),
            })
          );
        };
      function dE(e) {
        return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
      }
      function hE(e) {
        return parseFloat(e);
      }
      function pE(e) {
        return (0, Cc.Ay)("MuiSkeleton", e);
      }
      (0, jl.A)("MuiSkeleton", [
        "root",
        "text",
        "rectangular",
        "rounded",
        "circular",
        "pulse",
        "wave",
        "withChildren",
        "fitContent",
        "heightAuto",
      ]);
      var fE, gE, mE, vE;
      const bE = [
        "animation",
        "className",
        "component",
        "height",
        "style",
        "variant",
        "width",
      ];
      let xE, yE, wE, SE;
      const kE = (0, ac.i7)(
          xE ||
            (xE =
              fE ||
              (fE = ql([
                "\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n",
              ])))
        ),
        AE = (0, ac.i7)(
          yE ||
            (yE =
              gE ||
              (gE = ql([
                "\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n",
              ])))
        ),
        CE = (0, Ul.Ay)("span", {
          name: "MuiSkeleton",
          slot: "Root",
          overridesResolver: (e, t) => {
            const { ownerState: n } = e;
            return [
              t.root,
              t[n.variant],
              !1 !== n.animation && t[n.animation],
              n.hasChildren && t.withChildren,
              n.hasChildren && !n.width && t.fitContent,
              n.hasChildren && !n.height && t.heightAuto,
            ];
          },
        })(
          (e) => {
            let { theme: t, ownerState: n } = e;
            const i = dE(t.shape.borderRadius) || "px",
              o = hE(t.shape.borderRadius);
            return (0, Ts.A)(
              {
                display: "block",
                backgroundColor: t.vars
                  ? t.vars.palette.Skeleton.bg
                  : Im(
                      t.palette.text.primary,
                      "light" === t.palette.mode ? 0.11 : 0.13
                    ),
                height: "1.2em",
              },
              "text" === n.variant && {
                marginTop: 0,
                marginBottom: 0,
                height: "auto",
                transformOrigin: "0 55%",
                transform: "scale(1, 0.60)",
                borderRadius: ""
                  .concat(o)
                  .concat(i, "/")
                  .concat(Math.round((o / 0.6) * 10) / 10)
                  .concat(i),
                "&:empty:before": { content: '"\\00a0"' },
              },
              "circular" === n.variant && { borderRadius: "50%" },
              "rounded" === n.variant && {
                borderRadius: (t.vars || t).shape.borderRadius,
              },
              n.hasChildren && { "& > *": { visibility: "hidden" } },
              n.hasChildren && !n.width && { maxWidth: "fit-content" },
              n.hasChildren && !n.height && { height: "auto" }
            );
          },
          (e) => {
            let { ownerState: t } = e;
            return (
              "pulse" === t.animation &&
              (0, ac.AH)(
                wE ||
                  (wE =
                    mE ||
                    (mE = ql([
                      "\n      animation: ",
                      " 2s ease-in-out 0.5s infinite;\n    ",
                    ]))),
                kE
              )
            );
          },
          (e) => {
            let { ownerState: t, theme: n } = e;
            return (
              "wave" === t.animation &&
              (0, ac.AH)(
                SE ||
                  (SE =
                    vE ||
                    (vE = ql([
                      "\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ",
                      " 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ",
                      ",\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    ",
                    ]))),
                AE,
                (n.vars || n).palette.action.hover
              )
            );
          }
        ),
        ME = t.forwardRef(function (e, t) {
          const n = (0, Os.b)({ props: e, name: "MuiSkeleton" }),
            {
              animation: i = "pulse",
              className: o,
              component: a = "span",
              height: s,
              style: r,
              variant: l = "text",
              width: c,
            } = n,
            u = (0, Xs.A)(n, bE),
            d = (0, Ts.A)({}, n, {
              animation: i,
              component: a,
              variant: l,
              hasChildren: Boolean(u.children),
            }),
            h = ((e) => {
              const {
                  classes: t,
                  variant: n,
                  animation: i,
                  hasChildren: o,
                  width: a,
                  height: s,
                } = e,
                r = {
                  root: [
                    "root",
                    n,
                    i,
                    o && "withChildren",
                    o && !a && "fitContent",
                    o && !s && "heightAuto",
                  ],
                };
              return (0, Gl.A)(r, pE, t);
            })(d);
          return (0,
          js.jsx)(CE, (0, Ts.A)({ as: a, ref: t, className: (0, Rl.A)(h.root, o), ownerState: d }, u, { style: (0, Ts.A)({ width: c, height: s }, r) }));
        });
      var PE = n(2019);
      const EE = (e) => {
        let { graphData: t, timelineData: n } = e;
        const i = [{ name: "Earnings", data: 1 === t.length ? [0, t[0]] : t }],
          o = {
            colors: ["rgba(0, 220, 114, 1)"],
            chart: {
              height: 109,
              width: "60%",
              type: "area",
              foreColor: "orange",
              zoom: { enabled: !1 },
              toolbar: { show: !1 },
            },
            dataLabels: { enabled: !1 },
            grid: { show: !1 },
            fill: {
              type: "gradient",
              gradient: {
                shade: "dark",
                type: "vertical",
                shadeIntensity: 1,
                opacityFrom: 1e-4,
                opacityTo: 0,
              },
            },
            xaxis: {
              type: "category",
              tickAmount: 10,
              axisBorder: { show: !1 },
              axisTicks: { show: !1 },
              categories: 1 === n.length ? [n[0], n[0]] : n,
              labels: {
                show: !1,
                formatter: function (e) {
                  return Na(e);
                },
              },
            },
            noData: {
              text: "No Data",
              align: "center",
              verticalAlign: "middle",
              offsetX: 0,
              offsetY: 0,
              style: { color: "#FFF", fontSize: "14px", fontFamily: "Roboto" },
            },
            yaxis: { show: !1 },
            stroke: { curve: "smooth", width: 3 },
            tooltip: {
              style: { fontSize: "12px", fontFamily: "ProximaNovaRegular" },
              theme: "dark",
              y: {
                formatter: function (e) {
                  return "$" + Ra(e);
                },
              },
            },
          };
        return (0, js.jsx)(PE.A, {
          options: o,
          series: i,
          type: "area",
          height: 109,
        });
      };
      vS.register(dk, gk, WS, lk, US);
      const LE = (e) => {
          let { graphData: t, timelineData: n } = e;
          const i = "#00DC72",
            o = ((e, t) => {
              const n = parseInt(e.slice(1, 3), 16),
                i = parseInt(e.slice(3, 5), 16),
                o = parseInt(e.slice(5, 7), 16);
              return "rgba("
                .concat(n, ", ")
                .concat(i, ", ")
                .concat(o, ", ")
                .concat(t, ")");
            })(i, 0.2),
            a = {
              labels: n.map((e) => Na(e)),
              datasets: [
                {
                  label: "Earnings",
                  data: t,
                  backgroundColor(e) {
                    const { chart: t, datasetIndex: n, index: a } = e,
                      s = t.data.datasets[n].data[a],
                      r = t.scales.y.getPixelForValue(s),
                      l = t.getDatasetMeta(n).data[a];
                    if (l) {
                      const { x: e, width: n, base: a } = l;
                      if (void 0 !== e && void 0 !== n && void 0 !== a) {
                        const e = t.ctx.createLinearGradient(0, r, 0, a);
                        return e.addColorStop(0, i), e.addColorStop(1, o), e;
                      }
                    }
                    return i;
                  },
                  borderColor: "#222222",
                  borderWidth: 1,
                },
              ],
            },
            s = {
              responsive: !0,
              maintainAspectRatio: !1,
              plugins: {
                legend: { display: !1 },
                tooltip: {
                  callbacks: {
                    label: function (e) {
                      return "$" + Ra(e.raw);
                    },
                  },
                },
              },
              scales: {
                x: {
                  grid: { display: !1 },
                  ticks: {
                    color: "#d1d1d1",
                    font: { size: 14, family: "ProximaNovaRegular" },
                  },
                  border: { color: "#9c9c9c", width: 1 },
                },
                y: {
                  grace: "10%",
                  grid: { display: !0, color: "#9c9c9c" },
                  ticks: {
                    color: "#d1d1d1",
                    font: { size: 14, family: "ProximaNovaRegular" },
                    callback: function (e) {
                      return "$" + Ra(e);
                    },
                  },
                  border: { color: "#9c9c9c", width: 1 },
                },
              },
            };
          return (0, js.jsx)("div", {
            className: "chart-container",
            children: (0, js.jsx)(qk, { data: a, options: s, height: 237 }),
          });
        },
        TE = () => {
          const e = Ol("(max-width:600px)"),
            n = Ol("(max-width:721px)"),
            [i, o] = (0, t.useState)(null),
            [a, s] = (0, t.useState)({
              dailyEarningsData: [],
              totalEarningsData: [],
            }),
            [r, l] = (0, t.useState)([]),
            [c, u] = (0, t.useState)(!1),
            { data: d, isLoading: h, error: p } = JA(1e3);
          (0, t.useEffect)(() => {
            if (d && d.payload.length > 0) {
              const e = d.payload[0] || {};
              o(e);
              const t = d.payload
                  .map((e) => e.totalNetworkEarnings || 0)
                  .reverse(),
                n =
                  null === d || void 0 === d
                    ? void 0
                    : d.payload
                        .slice(-10)
                        .map((e) => e.networkDailyEarnings || 0)
                        .reverse(),
                i = d.payload.map((e) => e.dayBasedTimestamp || "").reverse();
              s({ dailyEarningsData: n, totalEarningsData: t }), l(i), u(!1);
            }
          }, [d]);
          const f = (t) => ({
              backgroundColor: 3 === t ? "rgba(0, 220, 114, 1)" : "#f3ec78",
              backgroundImage:
                3 === t
                  ? "none"
                  : "linear-gradient(180deg, #ffffff 0%, #363a3f 140.97%)",
              backgroundSize: "100%",
              WebkitBackgroundClip: "text",
              MozBackgroundClip: "text",
              WebkitTextFillColor: "transparent",
              MozTextFillColor: "transparent",
              paddingX: "10px",
              fontFamily: "ProximaNovaRegular",
              fontWeight: 600,
              fontSize: e ? 32 : 40,
            }),
            g = {
              backgroundColor: "rgba(255, 255, 255, 0.06)",
              padding: "6px 20px",
              fontSize: e ? "14px" : "18px",
              lineHeight: "27px",
              color: "#FFFFFF",
              fontWeight: 400,
              fontFamily: "ProximaNovaRegular",
              borderRadius: "32px",
              width: "fit-content",
            };
          return h || c
            ? (0, js.jsx)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: "column",
                  justifyContent: "center",
                  alignItems: "center",
                  height: "70vh",
                  textAlign: "center",
                },
                children: (0, js.jsx)(cf, {
                  sx: { fontSize: 100, color: "#fff" },
                }),
              })
            : p
            ? (0, js.jsx)(Hl, {
                sx: {
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                  height: "100vh",
                },
                children: (0, js.jsx)("div", {
                  children: "Error loading data",
                }),
              })
            : (0, js.jsxs)(Hl, {
                sx: {
                  width: "100%",
                  pt: 2,
                  pb: "30px",
                  px: 2,
                  maxWidth: "1440px",
                  alignSelf: "center",
                },
                children: [
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: e ? "column" : "row",
                      justifyContent: "space-between",
                      gap: 4,
                      border: "1px solid rgba(255, 255, 255, 0.03)",
                      height: e ? "max-content" : 156,
                      backgroundImage: "url(".concat(pd, ")"),
                      backgroundSize: "cover",
                      mb: 3,
                      p: 2,
                      overflow: "hidden",
                      borderRadius: 2,
                    },
                    children: [
                      (0, js.jsxs)(Hl, {
                        sx: {
                          width: {
                            xs: "100%",
                            sm: "40%",
                            md: "25%",
                            lg: "20%",
                            xl: "20%",
                          },
                          display: "flex",
                          flexDirection: "column",
                          justifyContent: "space-between",
                        },
                        children: [
                          (0, js.jsx)(vu, {
                            sx: g,
                            children: "Total Network Earnings",
                          }),
                          i && void 0 !== i.totalNetworkEarnings
                            ? (0, js.jsx)(vu, {
                                sx: {
                                  backgroundColor: "#f3ec78",
                                  backgroundImage:
                                    "linear-gradient(180deg, #ffffff 0%, #363a3f 140.97%)",
                                  backgroundSize: "100%",
                                  WebkitBackgroundClip: "text",
                                  MozBackgroundClip: "text",
                                  WebkitTextFillColor: "transparent",
                                  MozTextFillColor: "transparent",
                                  px: 1,
                                  fontFamily: "ProximaNovaRegular",
                                  fontWeight: 600,
                                  fontSize: e ? 32 : 40,
                                },
                                children: "$".concat(
                                  i.totalNetworkEarnings.toLocaleString()
                                ),
                              })
                            : (0, js.jsx)(ME, {
                                variant: "text",
                                width: "100%",
                                height: 40,
                              }),
                        ],
                      }),
                      (0, js.jsx)(Hl, {
                        sx: {
                          width: {
                            xs: "100%",
                            sm: "60%",
                            md: "75%",
                            lg: "80%",
                            xl: "80%",
                          },
                          overflow: "hidden",
                        },
                        children:
                          r.length > 0
                            ? (0, js.jsx)(EE, {
                                graphData: a.totalEarningsData,
                                timelineData: r,
                              })
                            : (0, js.jsx)(ME, {
                                variant: "rectangular",
                                width: "100%",
                                height: 109,
                              }),
                      }),
                    ],
                  }),
                  (0, js.jsx)(Ef, {
                    container: !0,
                    justifyContent: n ? "center" : "flex-start",
                    gap: "20px",
                    children: [
                      {
                        name: "Total Compute Hours Served",
                        val: i && void 0 !== i.totalHoursServed,
                        data:
                          null === i || void 0 === i
                            ? void 0
                            : i.totalHoursServed,
                      },
                      {
                        name: "Total GPU/CPU Served Today",
                        val: i && void 0 !== i.hoursServedToday,
                        data:
                          null === i || void 0 === i
                            ? void 0
                            : i.hoursServedToday,
                      },
                      {
                        name: "Total Clusters Created",
                        val: i && void 0 !== i.totalClustersCreated,
                        data:
                          null === i || void 0 === i
                            ? void 0
                            : i.totalClustersCreated,
                      },
                      {
                        name: "Current Running Clusters",
                        val: i && void 0 !== i.currentRunningClusters,
                        data:
                          null === i || void 0 === i
                            ? void 0
                            : i.currentRunningClusters,
                      },
                    ].map((e, t) => {
                      var i, o;
                      return (0, js.jsxs)(
                        Ef,
                        {
                          item: !0,
                          xs: 12,
                          sm: 12,
                          md: 6,
                          lg: 6,
                          xl: 3,
                          sx: {
                            backgroundImage: "url(".concat(ed, ")"),
                            backgroundSize: "cover",
                            padding: "22px 20px",
                            borderRadius: 2,
                            maxWidth: n ? "100%" : "335px !important",
                            display: "flex",
                            flexDirection: "column",
                            justifyContent: "space-between",
                            border: "1px solid rgba(255, 255, 255, 0.03)",
                            height: 156,
                          },
                          children: [
                            (0, js.jsx)(vu, { sx: g, children: e.name }),
                            e.val
                              ? (0, js.jsx)(vu, {
                                  sx: f(t),
                                  children:
                                    0 === t || 1 === t
                                      ? "".concat(
                                          null === (i = e.data) || void 0 === i
                                            ? void 0
                                            : i.toLocaleString(),
                                          " hrs"
                                        )
                                      : null === (o = e.data) || void 0 === o
                                      ? void 0
                                      : o.toLocaleString(),
                                })
                              : (0, js.jsx)(ME, {
                                  variant: "text",
                                  width: "100%",
                                  height: 40,
                                }),
                          ],
                        },
                        t
                      );
                    }),
                  }),
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "column",
                      justifyContent: "space-between",
                      border: "1px solid rgba(255, 255, 255, 0.03)",
                      height: 336,
                      backgroundImage: "url(".concat(fd, ")"),
                      backgroundSize: "cover",
                      mb: 3,
                      p: 2,
                      mt: 3,
                      borderRadius: 2,
                      gap: 1,
                    },
                    children: [
                      (0, js.jsx)(vu, {
                        sx: { ...g, height: 44 },
                        children: "Network Daily Earnings",
                      }),
                      (0, js.jsx)(LE, {
                        graphData: a.dailyEarningsData,
                        timelineData: r.slice(-10),
                      }),
                    ],
                  }),
                ],
              });
        },
        OE = () => {
          const e = ys();
          return (
            (0, t.useEffect)(() => {
              (async () => {
                try {
                  e(Gt(!0));
                  const t = await (async (e) => {
                    const { data: t } = await Ea.get(
                      "https://api.coingecko.com/api/v3/simple/price?ids=".concat(
                        e,
                        "&vs_currencies=usd"
                      )
                    );
                    return t[e].usd;
                  })("dojo-protocol");
                  e(It(t));
                  const { data: n } = await Ea.get(
                      "".concat(La, "compute-type/get-compute-type/Europe")
                    ),
                    { data: i } = await Ea.get(
                      "".concat(La, "home-map/get-home-map-gpu")
                    ),
                    { data: o } = await Ea.get(
                      "".concat(La, "home-map/get-home-map-cpu")
                    ),
                    { data: a } = await Ea.get(
                      "".concat(La, "home-page/get-home-page")
                    ),
                    { payload: s } = i,
                    { payload: r } = o,
                    { payload: l } = a;
                  console.log("computeData", n),
                    e(zt("Europe")),
                    e(jt(n.payload)),
                    e(Bt(n.payload[0].totalPerDay)),
                    e(
                      Wt({
                        NorthAmerica: s.NorthAmerica,
                        SouthAmerica: s.SouthAmerica,
                        Europe: s.Europe,
                        Asia: s.Asia,
                        Africa: s.Africa,
                        Oceania: s.Oceania,
                      })
                    ),
                    e(
                      Ft({
                        NorthAmerica: r.NorthAmerica,
                        SouthAmerica: r.SouthAmerica,
                        Europe: r.Europe,
                        Asia: r.Asia,
                        Africa: r.Africa,
                        Oceania: r.Oceania,
                      })
                    ),
                    e(
                      Ht({
                        totalGpu: Ta(l.totalGPU),
                        totalCpu: Ta(l.totalCPU),
                        verifiedGpu: Ta(l.verifiedGPUs),
                        verifiedCpu: Ta(l.verifiedCPUs),
                        availableGpu: Ta(l.GPUsReady),
                        availableCpu: Ta(l.CPUsReady),
                      })
                    ),
                    e(Gt(!1));
                } catch (t) {
                  e(Gt(!1)), console.log(t);
                }
              })();
            }, []),
            ""
          );
        },
        RE = {
          fontFamily: "ProximaNovaRegular",
          fontWeight: 600,
          fontSize: "72px",
          lineHeight: "100%",
          textAlign: "center",
          background:
            "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
          WebkitBackgroundClip: "text",
          WebkitTextFillColor: "transparent",
          backgroundClip: "text",
          textFillColor: "transparent",
          "@media (max-width: 900px)": {
            fontSize: "64px",
            lineHeight: "52.8px",
          },
          "@media (max-width: 600px)": { fontSize: "56px", lineHeight: "40px" },
          "@media (max-width: 400px)": { fontSize: "48px", lineHeight: "48px" },
        },
        IE = {
          ...RE,
          textAlign: "left",
          fontSize: "56px",
          lineHeight: "61.6px",
          "@media (max-width: 900px)": {
            fontSize: "48px",
            lineHeight: "52.8px",
          },
          "@media (max-width: 600px)": {
            fontSize: "32px",
            lineHeight: "35.2px",
          },
          "@media (max-width: 400px)": {
            fontSize: "32px",
            lineHeight: "35.2px",
          },
        },
        NE = {
          fontFamily: "Roboto",
          fontWeight: 700,
          fontSize: "18px",
          lineHeight: "30.6px",
          textAlign: "left",
          color: "#d1d1d1",
          "@media (max-width: 900px)": {
            fontSize: "16px",
            lineHeight: "27.2px",
          },
          "@media (max-width: 600px)": {
            fontSize: "14px",
            lineHeight: "23.8px",
          },
        },
        _E = {
          fontFamily: "Roboto",
          fontWeight: 300,
          fontSize: "18px",
          lineHeight: "30.6px",
          textAlign: "left",
          color: "#94989C",
          "@media (max-width: 900px)": {
            fontSize: "16px",
            lineHeight: "27.2px",
          },
          "@media (max-width: 600px)": {
            fontSize: "14px",
            lineHeight: "23.8px",
          },
        },
        DE = {
          width: "200px",
          height: "64px",
          borderRadius: "8px",
          textTransform: "none",
          fontFamily: "ProximaNovaRegular",
          fontWeight: 600,
          fontSize: "18px",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          "@media (max-width: 600px)": {
            width: "150px",
            height: "48px",
            fontSize: "16px",
          },
        },
        zE = {
          display: "flex",
          alignItems: "center",
          p: "6px 24px 6px 20px",
          gap: "8px",
          width: "max-content",
          height: "44px",
          fontFamily: "ProximaNovaRegular",
          fontSize: "18px",
          color: "#d1d1d1",
          background:
            "radial-gradient(56.52% 74.7% at 50.36% 100%, rgba(255, 255, 255, 0.0408) 0%, rgba(255, 255, 255, 0) 100%), #09090A",
          boxShadow:
            "0px 2px 8px rgba(0, 0, 0, 0.16), inset 0px 1px 0px rgba(255, 255, 255, 0.15)",
          borderRadius: "32px",
          textTransform: "none",
          textAlign: "center",
          letterSpacing: "-1px",
          "&:hover": {
            background:
              "radial-gradient(56.52% 74.7% at 50.36% 100%, rgba(255, 255, 255, 0.0608) 0%, rgba(255, 255, 255, 0) 100%), #09090A",
          },
        };
      var jE = n(9172);
      const BE = ["ownerState"],
        FE = ["variants"],
        WE = [
          "name",
          "slot",
          "skipVariantsResolver",
          "skipSx",
          "overridesResolver",
        ];
      function HE(e) {
        return "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e;
      }
      const GE = (0, Is.A)(),
        VE = (e) => (e ? e.charAt(0).toLowerCase() + e.slice(1) : e);
      function UE(e) {
        let { defaultTheme: t, theme: n, themeId: i } = e;
        return (o = n), 0 === Object.keys(o).length ? t : n[i] || n;
        var o;
      }
      function YE(e) {
        return e ? (t, n) => n[e] : null;
      }
      function XE(e, t) {
        let { ownerState: n } = t,
          i = (0, Xs.A)(t, BE);
        const o =
          "function" === typeof e ? e((0, Ts.A)({ ownerState: n }, i)) : e;
        if (Array.isArray(o))
          return o.flatMap((e) => XE(e, (0, Ts.A)({ ownerState: n }, i)));
        if (o && "object" === typeof o && Array.isArray(o.variants)) {
          const { variants: e = [] } = o;
          let t = (0, Xs.A)(o, FE);
          return (
            e.forEach((e) => {
              let o = !0;
              "function" === typeof e.props
                ? (o = e.props((0, Ts.A)({ ownerState: n }, i, n)))
                : Object.keys(e.props).forEach((t) => {
                    (null == n ? void 0 : n[t]) !== e.props[t] &&
                      i[t] !== e.props[t] &&
                      (o = !1);
                  }),
                o &&
                  (Array.isArray(t) || (t = [t]),
                  t.push(
                    "function" === typeof e.style
                      ? e.style((0, Ts.A)({ ownerState: n }, i, n))
                      : e.style
                  ));
            }),
            t
          );
        }
        return o;
      }
      const KE = (function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          const {
              themeId: t,
              defaultTheme: n = GE,
              rootShouldForwardProp: i = HE,
              slotShouldForwardProp: o = HE,
            } = e,
            a = (e) =>
              (0, Nl.A)(
                (0, Ts.A)({}, e, {
                  theme: UE((0, Ts.A)({}, e, { defaultTheme: n, themeId: t })),
                })
              );
          return (
            (a.__mui_systemSx = !0),
            function (e) {
              let s =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              (0, Il.internal_processStyles)(e, (e) =>
                e.filter((e) => !(null != e && e.__mui_systemSx))
              );
              const {
                  name: r,
                  slot: l,
                  skipVariantsResolver: c,
                  skipSx: u,
                  overridesResolver: d = YE(VE(l)),
                } = s,
                h = (0, Xs.A)(s, WE),
                p =
                  void 0 !== c ? c : (l && "Root" !== l && "root" !== l) || !1,
                f = u || !1;
              let g = HE;
              "Root" === l || "root" === l
                ? (g = i)
                : l
                ? (g = o)
                : (function (e) {
                    return "string" === typeof e && e.charCodeAt(0) > 96;
                  })(e) && (g = void 0);
              const m = (0, Il.default)(
                  e,
                  (0, Ts.A)({ shouldForwardProp: g, label: undefined }, h)
                ),
                v = (e) =>
                  ("function" === typeof e && e.__emotion_real !== e) ||
                  (0, jE.Q)(e)
                    ? (i) =>
                        XE(
                          e,
                          (0, Ts.A)({}, i, {
                            theme: UE({
                              theme: i.theme,
                              defaultTheme: n,
                              themeId: t,
                            }),
                          })
                        )
                    : e,
                b = function (i) {
                  let o = v(i);
                  for (
                    var s = arguments.length,
                      l = new Array(s > 1 ? s - 1 : 0),
                      c = 1;
                    c < s;
                    c++
                  )
                    l[c - 1] = arguments[c];
                  const u = l ? l.map(v) : [];
                  r &&
                    d &&
                    u.push((e) => {
                      const i = UE(
                        (0, Ts.A)({}, e, { defaultTheme: n, themeId: t })
                      );
                      if (
                        !i.components ||
                        !i.components[r] ||
                        !i.components[r].styleOverrides
                      )
                        return null;
                      const o = i.components[r].styleOverrides,
                        a = {};
                      return (
                        Object.entries(o).forEach((t) => {
                          let [n, o] = t;
                          a[n] = XE(o, (0, Ts.A)({}, e, { theme: i }));
                        }),
                        d(e, a)
                      );
                    }),
                    r &&
                      !p &&
                      u.push((e) => {
                        var i;
                        const o = UE(
                          (0, Ts.A)({}, e, { defaultTheme: n, themeId: t })
                        );
                        return XE(
                          {
                            variants:
                              null == o ||
                              null == (i = o.components) ||
                              null == (i = i[r])
                                ? void 0
                                : i.variants,
                          },
                          (0, Ts.A)({}, e, { theme: o })
                        );
                      }),
                    f || u.push(a);
                  const h = u.length - l.length;
                  if (Array.isArray(i) && h > 0) {
                    const e = new Array(h).fill("");
                    (o = [...i, ...e]), (o.raw = [...i.raw, ...e]);
                  }
                  const g = m(o, ...u);
                  return e.muiName && (g.muiName = e.muiName), g;
                };
              return m.withConfig && (b.withConfig = m.withConfig), b;
            }
          );
        })(),
        qE = KE;
      function ZE(e) {
        return (
          (function (e) {
            return "[object Object]" === Object.prototype.toString.call(e);
          })(e) || Array.isArray(e)
        );
      }
      function QE(e, t) {
        const n = Object.keys(e),
          i = Object.keys(t);
        if (n.length !== i.length) return !1;
        return (
          JSON.stringify(Object.keys(e.breakpoints || {})) ===
            JSON.stringify(Object.keys(t.breakpoints || {})) &&
          n.every((n) => {
            const i = e[n],
              o = t[n];
            return "function" === typeof i
              ? "".concat(i) === "".concat(o)
              : ZE(i) && ZE(o)
              ? QE(i, o)
              : i === o;
          })
        );
      }
      function $E(e) {
        return e
          .concat()
          .sort((e, t) => (e.name > t.name ? 1 : -1))
          .map((e) => e.options);
      }
      function JE(e) {
        return "number" === typeof e;
      }
      function eL(e) {
        return "string" === typeof e;
      }
      function tL(e) {
        return "boolean" === typeof e;
      }
      function nL(e) {
        return "[object Object]" === Object.prototype.toString.call(e);
      }
      function iL(e) {
        return Math.abs(e);
      }
      function oL(e) {
        return Math.sign(e);
      }
      function aL(e, t) {
        return iL(e - t);
      }
      function sL(e) {
        return dL(e).map(Number);
      }
      function rL(e) {
        return e[lL(e)];
      }
      function lL(e) {
        return Math.max(0, e.length - 1);
      }
      function cL(e, t) {
        return t === lL(e);
      }
      function uL(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        return Array.from(Array(e), (e, n) => t + n);
      }
      function dL(e) {
        return Object.keys(e);
      }
      function hL(e, t) {
        return [e, t].reduce(
          (e, t) => (
            dL(t).forEach((n) => {
              const i = e[n],
                o = t[n],
                a = nL(i) && nL(o);
              e[n] = a ? hL(i, o) : o;
            }),
            e
          ),
          {}
        );
      }
      function pL(e, t) {
        return "undefined" !== typeof t.MouseEvent && e instanceof t.MouseEvent;
      }
      function fL() {
        let e = [];
        const t = {
          add: function (n, i, o) {
            let a,
              s =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : { passive: !0 };
            if ("addEventListener" in n)
              n.addEventListener(i, o, s),
                (a = () => n.removeEventListener(i, o, s));
            else {
              const e = n;
              e.addListener(o), (a = () => e.removeListener(o));
            }
            return e.push(a), t;
          },
          clear: function () {
            e = e.filter((e) => e());
          },
        };
        return t;
      }
      function gL(e, t, n, i) {
        const o = fL(),
          a = 1e3 / 60;
        let s = null,
          r = 0,
          l = 0;
        function c(e) {
          if (!l) return;
          s || (s = e);
          const o = e - s;
          for (s = e, r += o; r >= a; ) n(a), (r -= a);
          i(r / a), l && t.requestAnimationFrame(c);
        }
        function u() {
          t.cancelAnimationFrame(l), (s = null), (r = 0), (l = 0);
        }
        return {
          init: function () {
            o.add(e, "visibilitychange", () => {
              e.hidden && ((s = null), (r = 0));
            });
          },
          destroy: function () {
            u(), o.clear();
          },
          start: function () {
            l || (l = t.requestAnimationFrame(c));
          },
          stop: u,
          update: () => n(a),
          render: i,
        };
      }
      function mL() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
          t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        const n = iL(e - t);
        function i(t) {
          return t < e;
        }
        function o(e) {
          return e > t;
        }
        function a(e) {
          return i(e) || o(e);
        }
        return {
          length: n,
          max: t,
          min: e,
          constrain: function (n) {
            return a(n) ? (i(n) ? e : t) : n;
          },
          reachedAny: a,
          reachedMax: o,
          reachedMin: i,
          removeOffset: function (e) {
            return n ? e - n * Math.ceil((e - t) / n) : e;
          },
        };
      }
      function vL(e, t, n) {
        const { constrain: i } = mL(0, e),
          o = e + 1;
        let a = s(t);
        function s(e) {
          return n ? iL((o + e) % o) : i(e);
        }
        function r() {
          return a;
        }
        function l() {
          return vL(e, r(), n);
        }
        const c = {
          get: r,
          set: function (e) {
            return (a = s(e)), c;
          },
          add: function (e) {
            return l().set(r() + e);
          },
          clone: l,
        };
        return c;
      }
      function bL(e, t, n, i, o, a, s, r, l, c, u, d, h, p, f, g, m, v, b) {
        const { cross: x, direction: y } = e,
          w = ["INPUT", "SELECT", "TEXTAREA"],
          S = { passive: !1 },
          k = fL(),
          A = fL(),
          C = mL(50, 225).constrain(p.measure(20)),
          M = { mouse: 300, touch: 400 },
          P = { mouse: 500, touch: 600 },
          E = f ? 43 : 25;
        let L = !1,
          T = 0,
          O = 0,
          R = !1,
          I = !1,
          N = !1,
          _ = !1;
        function D(e) {
          if (!pL(e, i) && e.touches.length >= 2) return z(e);
          const t = a.readPoint(e),
            n = a.readPoint(e, x),
            s = aL(t, T),
            l = aL(n, O);
          if (!I && !_) {
            if (!e.cancelable) return z(e);
            if (((I = s > l), !I)) return z(e);
          }
          const u = a.pointerMove(e);
          s > g && (N = !0),
            c.useFriction(0.3).useDuration(0.75),
            r.start(),
            o.add(y(u)),
            e.preventDefault();
        }
        function z(e) {
          const t = u.byDistance(0, !1).index !== d.get(),
            n = a.pointerUp(e) * (f ? P : M)[_ ? "mouse" : "touch"],
            i = (function (e, t) {
              const n = d.add(-1 * oL(e)),
                i = u.byDistance(e, !f).distance;
              return f || iL(e) < C
                ? i
                : m && t
                ? 0.5 * i
                : u.byIndex(n.get(), 0).distance;
            })(y(n), t),
            o = (function (e, t) {
              if (0 === e || 0 === t) return 0;
              if (iL(e) <= iL(t)) return 0;
              const n = aL(iL(e), iL(t));
              return iL(n / e);
            })(n, i),
            s = E - 10 * o,
            r = v + o / 50;
          (I = !1),
            (R = !1),
            A.clear(),
            c.useDuration(s).useFriction(r),
            l.distance(i, !f),
            (_ = !1),
            h.emit("pointerUp");
        }
        function j(e) {
          N && (e.stopPropagation(), e.preventDefault(), (N = !1));
        }
        return {
          init: function (e) {
            if (!b) return;
            function r(r) {
              (tL(b) || b(e, r)) &&
                (function (e) {
                  const r = pL(e, i);
                  if (
                    ((_ = r),
                    (N = f && r && !e.buttons && L),
                    (L = aL(o.get(), s.get()) >= 2),
                    r && 0 !== e.button)
                  )
                    return;
                  if (
                    (function (e) {
                      const t = e.nodeName || "";
                      return w.includes(t);
                    })(e.target)
                  )
                    return;
                  (R = !0),
                    a.pointerDown(e),
                    c.useFriction(0).useDuration(0),
                    o.set(s),
                    (function () {
                      const e = _ ? n : t;
                      A.add(e, "touchmove", D, S)
                        .add(e, "touchend", z)
                        .add(e, "mousemove", D, S)
                        .add(e, "mouseup", z);
                    })(),
                    (T = a.readPoint(e)),
                    (O = a.readPoint(e, x)),
                    h.emit("pointerDown");
                })(r);
            }
            const l = t;
            k.add(l, "dragstart", (e) => e.preventDefault(), S)
              .add(l, "touchmove", () => {}, S)
              .add(l, "touchend", () => {})
              .add(l, "touchstart", r)
              .add(l, "mousedown", r)
              .add(l, "touchcancel", z)
              .add(l, "contextmenu", z)
              .add(l, "click", j, !0);
          },
          destroy: function () {
            k.clear(), A.clear();
          },
          pointerDown: function () {
            return R;
          },
        };
      }
      function xL(e, t) {
        let n, i;
        function o(e) {
          return e.timeStamp;
        }
        function a(n, i) {
          const o = i || e.scroll,
            a = "client".concat("x" === o ? "X" : "Y");
          return (pL(n, t) ? n : n.touches[0])[a];
        }
        return {
          pointerDown: function (e) {
            return (n = e), (i = e), a(e);
          },
          pointerMove: function (e) {
            const t = a(e) - a(i),
              s = o(e) - o(n) > 170;
            return (i = e), s && (n = e), t;
          },
          pointerUp: function (e) {
            if (!n || !i) return 0;
            const t = a(i) - a(n),
              s = o(e) - o(n),
              r = o(e) - o(i) > 170,
              l = t / s;
            return s && !r && iL(l) > 0.1 ? l : 0;
          },
          readPoint: a,
        };
      }
      function yL(e, t, n, i, o, a, s) {
        const r = [e].concat(i);
        let l,
          c,
          u = [],
          d = !1;
        function h(e) {
          return o.measureSize(s.measure(e));
        }
        return {
          init: function (o) {
            a &&
              ((c = h(e)),
              (u = i.map(h)),
              (l = new ResizeObserver((n) => {
                (tL(a) || a(o, n)) &&
                  (function (n) {
                    for (const a of n) {
                      if (d) return;
                      const n = a.target === e,
                        s = i.indexOf(a.target),
                        r = n ? c : u[s];
                      if (iL(h(n ? e : i[s]) - r) >= 0.5) {
                        o.reInit(), t.emit("resize");
                        break;
                      }
                    }
                  })(n);
              })),
              n.requestAnimationFrame(() => {
                r.forEach((e) => l.observe(e));
              }));
          },
          destroy: function () {
            (d = !0), l && l.disconnect();
          },
        };
      }
      function wL(e, t, n, i, o) {
        const a = o.measure(10),
          s = o.measure(50),
          r = mL(0.1, 0.99);
        let l = !1;
        function c() {
          return !l && !!e.reachedAny(n.get()) && !!e.reachedAny(t.get());
        }
        const u = {
          shouldConstrain: c,
          constrain: function (o) {
            if (!c()) return;
            const l = e.reachedMin(t.get()) ? "min" : "max",
              u = iL(e[l] - t.get()),
              d = n.get() - t.get(),
              h = r.constrain(u / s);
            n.subtract(d * h),
              !o &&
                iL(d) < a &&
                (n.set(e.constrain(n.get())),
                i.useDuration(25).useBaseFriction());
          },
          toggleActive: function (e) {
            l = !e;
          },
        };
        return u;
      }
      function SL(e, t, n, i) {
        const o = t.min + 0.1,
          a = t.max + 0.1,
          { reachedMin: s, reachedMax: r } = mL(o, a);
        return {
          loop: function (t) {
            if (
              !(function (e) {
                return 1 === e ? r(n.get()) : -1 === e && s(n.get());
              })(t)
            )
              return;
            const o = e * (-1 * t);
            i.forEach((e) => e.add(o));
          },
        };
      }
      function kL(e, t, n, i, o) {
        const { reachedAny: a, removeOffset: s, constrain: r } = i;
        function l(e) {
          return e.concat().sort((e, t) => iL(e) - iL(t))[0];
        }
        function c(t, i) {
          const o = [t, t + n, t - n];
          if (!e) return t;
          if (!i) return l(o);
          const a = o.filter((e) => oL(e) === i);
          return a.length ? l(a) : rL(o) - n;
        }
        const u = {
          byDistance: function (n, i) {
            const l = o.get() + n,
              { index: u, distance: d } = (function (n) {
                const i = e ? s(n) : r(n),
                  o = t
                    .map((e, t) => ({ diff: c(e - i, 0), index: t }))
                    .sort((e, t) => iL(e.diff) - iL(t.diff)),
                  { index: a } = o[0];
                return { index: a, distance: i };
              })(l),
              h = !e && a(l);
            return !i || h
              ? { index: u, distance: n }
              : { index: u, distance: n + c(t[u] - d, 0) };
          },
          byIndex: function (e, n) {
            return { index: e, distance: c(t[e] - o.get(), n) };
          },
          shortcut: c,
        };
        return u;
      }
      function AL(e, t, n, i, o, a, s, r) {
        const l = { passive: !0, capture: !0 };
        let c = 0;
        function u(e) {
          "Tab" === e.code && (c = new Date().getTime());
        }
        const d = {
          init: function (d) {
            r &&
              (a.add(document, "keydown", u, !1),
              t.forEach((t, u) => {
                a.add(
                  t,
                  "focus",
                  (t) => {
                    (tL(r) || r(d, t)) &&
                      (function (t) {
                        if (new Date().getTime() - c > 10) return;
                        s.emit("slideFocusStart"), (e.scrollLeft = 0);
                        const a = n.findIndex((e) => e.includes(t));
                        JE(a) &&
                          (o.useDuration(0),
                          i.index(a, 0),
                          s.emit("slideFocus"));
                      })(u);
                  },
                  l
                );
              }));
          },
        };
        return d;
      }
      function CL(e) {
        let t = e;
        function n(e) {
          return JE(e) ? e : e.get();
        }
        return {
          get: function () {
            return t;
          },
          set: function (e) {
            t = n(e);
          },
          add: function (e) {
            t += n(e);
          },
          subtract: function (e) {
            t -= n(e);
          },
        };
      }
      function ML(e, t) {
        const n =
            "x" === e.scroll
              ? function (e) {
                  return "translate3d(".concat(e, "px,0px,0px)");
                }
              : function (e) {
                  return "translate3d(0px,".concat(e, "px,0px)");
                },
          i = t.style;
        let o = !1;
        const a = {
          clear: function () {
            o ||
              ((i.transform = ""),
              t.getAttribute("style") || t.removeAttribute("style"));
          },
          to: function (t) {
            o || (i.transform = n(e.direction(t)));
          },
          toggleActive: function (e) {
            o = !e;
          },
        };
        return a;
      }
      function PL(e, t, n, i, o, a, s, r, l) {
        const c = 0.5,
          u = sL(o),
          d = sL(o).reverse(),
          h = (function () {
            const e = s[0];
            return g(f(d, e), n, !1);
          })().concat(
            (function () {
              const e = t - s[0] - 1;
              return g(f(u, e), -n, !0);
            })()
          );
        function p(e, t) {
          return e.reduce((e, t) => e - o[t], t);
        }
        function f(e, t) {
          return e.reduce((e, n) => (p(e, t) > 0 ? e.concat([n]) : e), []);
        }
        function g(o, s, u) {
          const d = (function (e) {
            return a.map((n, o) => ({
              start: n - i[o] + c + e,
              end: n + t - c + e,
            }));
          })(s);
          return o.map((t) => {
            const i = u ? 0 : -n,
              o = u ? n : 0,
              a = u ? "end" : "start",
              s = d[t][a];
            return {
              index: t,
              loopPoint: s,
              slideLocation: CL(-1),
              translate: ML(e, l[t]),
              target: () => (r.get() > s ? i : o),
            };
          });
        }
        const m = {
          canLoop: function () {
            return h.every((e) => {
              let { index: n } = e;
              return (
                p(
                  u.filter((e) => e !== n),
                  t
                ) <= 0.1
              );
            });
          },
          clear: function () {
            h.forEach((e) => e.translate.clear());
          },
          loop: function () {
            h.forEach((e) => {
              const { target: t, translate: n, slideLocation: i } = e,
                o = t();
              o !== i.get() && (n.to(o), i.set(o));
            });
          },
          loopPoints: h,
        };
        return m;
      }
      function EL(e, t, n) {
        let i,
          o = !1;
        return {
          init: function (a) {
            n &&
              ((i = new MutationObserver((e) => {
                o ||
                  ((tL(n) || n(a, e)) &&
                    (function (e) {
                      for (const n of e)
                        if ("childList" === n.type) {
                          a.reInit(), t.emit("slidesChanged");
                          break;
                        }
                    })(e));
              })),
              i.observe(e, { childList: !0 }));
          },
          destroy: function () {
            i && i.disconnect(), (o = !0);
          },
        };
      }
      function LL(e, t, n, i) {
        const o = {};
        let a,
          s = null,
          r = null,
          l = !1;
        const c = {
          init: function () {
            (a = new IntersectionObserver(
              (e) => {
                l ||
                  (e.forEach((e) => {
                    const n = t.indexOf(e.target);
                    o[n] = e;
                  }),
                  (s = null),
                  (r = null),
                  n.emit("slidesInView"));
              },
              { root: e.parentElement, threshold: i }
            )),
              t.forEach((e) => a.observe(e));
          },
          destroy: function () {
            a && a.disconnect(), (l = !0);
          },
          get: function () {
            let e =
              !(arguments.length > 0 && void 0 !== arguments[0]) ||
              arguments[0];
            if (e && s) return s;
            if (!e && r) return r;
            const t = (function (e) {
              return dL(o).reduce((t, n) => {
                const i = parseInt(n),
                  { isIntersecting: a } = o[i];
                return ((e && a) || (!e && !a)) && t.push(i), t;
              }, []);
            })(e);
            return e && (s = t), e || (r = t), t;
          },
        };
        return c;
      }
      function TL(e, t, n, i, o, a, s, r, l) {
        const { startEdge: c, endEdge: u, direction: d } = e,
          h = JE(n);
        const p = {
          groupSlides: function (e) {
            return h
              ? (function (e, t) {
                  return sL(e)
                    .filter((e) => e % t === 0)
                    .map((n) => e.slice(n, n + t));
                })(e, n)
              : (function (e) {
                  return e.length
                    ? sL(e)
                        .reduce((n, h, p) => {
                          const f = rL(n) || 0,
                            g = 0 === f,
                            m = h === lL(e),
                            v = o[c] - a[f][c],
                            b = o[c] - a[h][u],
                            x = !i && g ? d(s) : 0,
                            y = iL(b - (!i && m ? d(r) : 0) - (v + x));
                          return (
                            p && y > t + l && n.push(h),
                            m && n.push(e.length),
                            n
                          );
                        }, [])
                        .map((t, n, i) => {
                          const o = Math.max(i[n - 1] || 0);
                          return e.slice(o, t);
                        })
                    : [];
                })(e);
          },
        };
        return p;
      }
      function OL(e, t, n, i, o, a, s) {
        const {
            align: r,
            axis: l,
            direction: c,
            startIndex: u,
            loop: d,
            duration: h,
            dragFree: p,
            dragThreshold: f,
            inViewThreshold: g,
            slidesToScroll: m,
            skipSnaps: v,
            containScroll: b,
            watchResize: x,
            watchSlides: y,
            watchDrag: w,
            watchFocus: S,
          } = a,
          k = {
            measure: function (e) {
              const {
                offsetTop: t,
                offsetLeft: n,
                offsetWidth: i,
                offsetHeight: o,
              } = e;
              return {
                top: t,
                right: n + i,
                bottom: t + o,
                left: n,
                width: i,
                height: o,
              };
            },
          },
          A = k.measure(t),
          C = n.map(k.measure),
          M = (function (e, t) {
            const n = "rtl" === t,
              i = "y" === e,
              o = !i && n ? -1 : 1;
            return {
              scroll: i ? "y" : "x",
              cross: i ? "x" : "y",
              startEdge: i ? "top" : n ? "right" : "left",
              endEdge: i ? "bottom" : n ? "left" : "right",
              measureSize: function (e) {
                const { height: t, width: n } = e;
                return i ? t : n;
              },
              direction: function (e) {
                return e * o;
              },
            };
          })(l, c),
          P = M.measureSize(A),
          E = (function (e) {
            return {
              measure: function (t) {
                return e * (t / 100);
              },
            };
          })(P),
          L = (function (e, t) {
            const n = {
              start: function () {
                return 0;
              },
              center: function (e) {
                return i(e) / 2;
              },
              end: i,
            };
            function i(e) {
              return t - e;
            }
            const o = {
              measure: function (i, o) {
                return eL(e) ? n[e](i) : e(t, i, o);
              },
            };
            return o;
          })(r, P),
          T = !d && !!b,
          O = d || !!b,
          {
            slideSizes: R,
            slideSizesWithGaps: I,
            startGap: N,
            endGap: _,
          } = (function (e, t, n, i, o, a) {
            const { measureSize: s, startEdge: r, endEdge: l } = e,
              c = n[0] && o,
              u = (function () {
                if (!c) return 0;
                const e = n[0];
                return iL(t[r] - e[r]);
              })(),
              d = (function () {
                if (!c) return 0;
                const e = a.getComputedStyle(rL(i));
                return parseFloat(e.getPropertyValue("margin-".concat(l)));
              })(),
              h = n.map(s),
              p = n
                .map((e, t, n) => {
                  const i = !t,
                    o = cL(n, t);
                  return i ? h[t] + u : o ? h[t] + d : n[t + 1][r] - e[r];
                })
                .map(iL);
            return {
              slideSizes: h,
              slideSizesWithGaps: p,
              startGap: u,
              endGap: d,
            };
          })(M, A, C, n, O, o),
          D = TL(M, P, m, d, A, C, N, _, 2),
          { snaps: z, snapsAligned: j } = (function (e, t, n, i, o) {
            const { startEdge: a, endEdge: s } = e,
              { groupSlides: r } = o,
              l = r(i)
                .map((e) => rL(e)[s] - e[0][a])
                .map(iL)
                .map(t.measure),
              c = i.map((e) => n[a] - e[a]).map((e) => -iL(e)),
              u = r(c)
                .map((e) => e[0])
                .map((e, t) => e + l[t]);
            return { snaps: c, snapsAligned: u };
          })(M, L, A, C, D),
          B = -rL(z) + rL(I),
          { snapsContained: F, scrollContainLimit: W } = (function (
            e,
            t,
            n,
            i,
            o
          ) {
            const a = mL(-t + e, 0),
              s = n
                .map((e, t) => {
                  const { min: i, max: o } = a,
                    s = a.constrain(e),
                    r = !t,
                    c = cL(n, t);
                  return r ? o : c || l(i, s) ? i : l(o, s) ? o : s;
                })
                .map((e) => parseFloat(e.toFixed(3))),
              r = (function () {
                const e = s[0],
                  t = rL(s);
                return mL(s.lastIndexOf(e), s.indexOf(t) + 1);
              })();
            function l(e, t) {
              return aL(e, t) < 1;
            }
            return {
              snapsContained: (function () {
                if (t <= e + o) return [a.max];
                if ("keepSnaps" === i) return s;
                const { min: n, max: l } = r;
                return s.slice(n, l);
              })(),
              scrollContainLimit: r,
            };
          })(P, B, j, b, 2),
          H = T ? F : j,
          { limit: G } = (function (e, t, n) {
            const i = t[0];
            return { limit: mL(n ? i - e : rL(t), i) };
          })(B, H, d),
          V = vL(lL(H), u, d),
          U = V.clone(),
          Y = sL(n),
          X = gL(
            i,
            o,
            (e) =>
              ((e, t) => {
                let {
                  dragHandler: n,
                  scrollBody: i,
                  scrollBounds: o,
                  options: { loop: a },
                } = e;
                a || o.constrain(n.pointerDown()), i.seek(t);
              })(re, e),
            (e) =>
              ((e, t) => {
                let {
                  scrollBody: n,
                  translate: i,
                  location: o,
                  offsetLocation: a,
                  scrollLooper: s,
                  slideLooper: r,
                  dragHandler: l,
                  animation: c,
                  eventHandler: u,
                  scrollBounds: d,
                  options: { loop: h },
                } = e;
                const p = n.settled(),
                  f = !d.shouldConstrain(),
                  g = h ? p : p && f;
                g && !l.pointerDown() && (c.stop(), u.emit("settle")),
                  g || u.emit("scroll");
                const m = o.get() * t + Z.get() * (1 - t);
                a.set(m), h && (s.loop(n.direction()), r.loop()), i.to(a.get());
              })(re, e)
          ),
          K = H[V.get()],
          q = CL(K),
          Z = CL(K),
          Q = CL(K),
          $ = CL(K),
          J = (function (e, t, n, i, o, a) {
            let s = 0,
              r = 0,
              l = o,
              c = a,
              u = e.get(),
              d = 0;
            function h(e) {
              return (l = e), f;
            }
            function p(e) {
              return (c = e), f;
            }
            const f = {
              direction: function () {
                return r;
              },
              duration: function () {
                return l;
              },
              velocity: function () {
                return s;
              },
              seek: function (t) {
                const o = t / 1e3,
                  a = l * o,
                  h = i.get() - e.get();
                let p = 0;
                return (
                  l
                    ? (n.set(e),
                      (s += h / a),
                      (s *= c),
                      (u += s),
                      e.add(s * o),
                      (p = u - d))
                    : ((s = 0), n.set(i), e.set(i), (p = h)),
                  (r = oL(p)),
                  (d = u),
                  f
                );
              },
              settled: function () {
                return iL(i.get() - t.get()) < 0.001;
              },
              useBaseFriction: function () {
                return p(a);
              },
              useBaseDuration: function () {
                return h(o);
              },
              useFriction: p,
              useDuration: h,
            };
            return f;
          })(q, Q, Z, $, h, 0.68),
          ee = kL(d, H, B, G, $),
          te = (function (e, t, n, i, o, a, s) {
            function r(o) {
              const r = o.distance,
                l = o.index !== t.get();
              a.add(r),
                r &&
                  (i.duration()
                    ? e.start()
                    : (e.update(), e.render(1), e.update())),
                l && (n.set(t.get()), t.set(o.index), s.emit("select"));
            }
            return {
              distance: function (e, t) {
                r(o.byDistance(e, t));
              },
              index: function (e, n) {
                const i = t.clone().set(e);
                r(o.byIndex(i.get(), n));
              },
            };
          })(X, V, U, J, ee, $, s),
          ne = (function (e) {
            const { max: t, length: n } = e;
            return {
              get: function (e) {
                return n ? (e - t) / -n : 0;
              },
            };
          })(G),
          ie = fL(),
          oe = LL(t, n, s, g),
          { slideRegistry: ae } = (function (e, t, n, i, o, a) {
            const { groupSlides: s } = o,
              { min: r, max: l } = i,
              c = (function () {
                const i = s(a),
                  o = !e || "keepSnaps" === t;
                return 1 === n.length
                  ? [a]
                  : o
                  ? i
                  : i.slice(r, l).map((e, t, n) => {
                      const i = !t,
                        o = cL(n, t);
                      return i
                        ? uL(rL(n[0]) + 1)
                        : o
                        ? uL(lL(a) - rL(n)[0] + 1, rL(n)[0])
                        : e;
                    });
              })();
            return { slideRegistry: c };
          })(T, b, H, W, D, Y),
          se = AL(e, n, ae, te, J, ie, s, S),
          re = {
            ownerDocument: i,
            ownerWindow: o,
            eventHandler: s,
            containerRect: A,
            slideRects: C,
            animation: X,
            axis: M,
            dragHandler: bL(
              M,
              e,
              i,
              o,
              $,
              xL(M, o),
              q,
              X,
              te,
              J,
              ee,
              V,
              s,
              E,
              p,
              f,
              v,
              0.68,
              w
            ),
            eventStore: ie,
            percentOfView: E,
            index: V,
            indexPrevious: U,
            limit: G,
            location: q,
            offsetLocation: Q,
            previousLocation: Z,
            options: a,
            resizeHandler: yL(t, s, o, n, M, x, k),
            scrollBody: J,
            scrollBounds: wL(G, Q, $, J, E),
            scrollLooper: SL(B, G, Q, [q, Q, Z, $]),
            scrollProgress: ne,
            scrollSnapList: H.map(ne.get),
            scrollSnaps: H,
            scrollTarget: ee,
            scrollTo: te,
            slideLooper: PL(M, P, B, R, I, z, H, Q, n),
            slideFocus: se,
            slidesHandler: EL(t, s, y),
            slidesInView: oe,
            slideIndexes: Y,
            slideRegistry: ae,
            slidesToScroll: D,
            target: $,
            translate: ML(M, t),
          };
        return re;
      }
      const RL = {
        align: "center",
        axis: "x",
        container: null,
        slides: null,
        containScroll: "trimSnaps",
        direction: "ltr",
        slidesToScroll: 1,
        inViewThreshold: 0,
        breakpoints: {},
        dragFree: !1,
        dragThreshold: 10,
        loop: !1,
        skipSnaps: !1,
        duration: 25,
        startIndex: 0,
        active: !0,
        watchDrag: !0,
        watchResize: !0,
        watchSlides: !0,
        watchFocus: !0,
      };
      function IL(e) {
        function t(e, t) {
          return hL(e, t || {});
        }
        const n = {
          mergeOptions: t,
          optionsAtMedia: function (n) {
            const i = n.breakpoints || {},
              o = dL(i)
                .filter((t) => e.matchMedia(t).matches)
                .map((e) => i[e])
                .reduce((e, n) => t(e, n), {});
            return t(n, o);
          },
          optionsMediaQueries: function (t) {
            return t
              .map((e) => dL(e.breakpoints || {}))
              .reduce((e, t) => e.concat(t), [])
              .map(e.matchMedia);
          },
        };
        return n;
      }
      function NL(e, t, n) {
        const i = e.ownerDocument,
          o = i.defaultView,
          a = IL(o),
          s = (function (e) {
            let t = [];
            const n = {
              init: function (n, i) {
                return (
                  (t = i.filter((t) => {
                    let { options: n } = t;
                    return !1 !== e.optionsAtMedia(n).active;
                  })),
                  t.forEach((t) => t.init(n, e)),
                  i.reduce((e, t) => Object.assign(e, { [t.name]: t }), {})
                );
              },
              destroy: function () {
                t = t.filter((e) => e.destroy());
              },
            };
            return n;
          })(a),
          r = fL(),
          l = (function () {
            let e,
              t = {};
            function n(e) {
              return t[e] || [];
            }
            const i = {
              init: function (t) {
                e = t;
              },
              emit: function (t) {
                return n(t).forEach((n) => n(e, t)), i;
              },
              off: function (e, o) {
                return (t[e] = n(e).filter((e) => e !== o)), i;
              },
              on: function (e, o) {
                return (t[e] = n(e).concat([o])), i;
              },
              clear: function () {
                t = {};
              },
            };
            return i;
          })(),
          { mergeOptions: c, optionsAtMedia: u, optionsMediaQueries: d } = a,
          { on: h, off: p, emit: f } = l,
          g = M;
        let m,
          v,
          b,
          x,
          y = !1,
          w = c(RL, NL.globalOptions),
          S = c(w),
          k = [];
        function A(t) {
          const n = OL(e, b, x, i, o, t, l);
          if (t.loop && !n.slideLooper.canLoop()) {
            return A(Object.assign({}, t, { loop: !1 }));
          }
          return n;
        }
        function C(t, n) {
          y ||
            ((w = c(w, t)),
            (S = u(w)),
            (k = n || k),
            (function () {
              const { container: t, slides: n } = S,
                i = eL(t) ? e.querySelector(t) : t;
              b = i || e.children[0];
              const o = eL(n) ? b.querySelectorAll(n) : n;
              x = [].slice.call(o || b.children);
            })(),
            (m = A(S)),
            d([
              w,
              ...k.map((e) => {
                let { options: t } = e;
                return t;
              }),
            ]).forEach((e) => r.add(e, "change", M)),
            S.active &&
              (m.translate.to(m.location.get()),
              m.animation.init(),
              m.slidesInView.init(),
              m.slideFocus.init(T),
              m.eventHandler.init(T),
              m.resizeHandler.init(T),
              m.slidesHandler.init(T),
              m.options.loop && m.slideLooper.loop(),
              b.offsetParent && x.length && m.dragHandler.init(T),
              (v = s.init(T, k))));
        }
        function M(e, t) {
          const n = L();
          P(), C(c({ startIndex: n }, e), t), l.emit("reInit");
        }
        function P() {
          m.dragHandler.destroy(),
            m.eventStore.clear(),
            m.translate.clear(),
            m.slideLooper.clear(),
            m.resizeHandler.destroy(),
            m.slidesHandler.destroy(),
            m.slidesInView.destroy(),
            m.animation.destroy(),
            s.destroy(),
            r.clear();
        }
        function E(e, t, n) {
          S.active &&
            !y &&
            (m.scrollBody
              .useBaseFriction()
              .useDuration(!0 === t ? 0 : S.duration),
            m.scrollTo.index(e, n || 0));
        }
        function L() {
          return m.index.get();
        }
        const T = {
          canScrollNext: function () {
            return m.index.add(1).get() !== L();
          },
          canScrollPrev: function () {
            return m.index.add(-1).get() !== L();
          },
          containerNode: function () {
            return b;
          },
          internalEngine: function () {
            return m;
          },
          destroy: function () {
            y || ((y = !0), r.clear(), P(), l.emit("destroy"), l.clear());
          },
          off: p,
          on: h,
          emit: f,
          plugins: function () {
            return v;
          },
          previousScrollSnap: function () {
            return m.indexPrevious.get();
          },
          reInit: g,
          rootNode: function () {
            return e;
          },
          scrollNext: function (e) {
            E(m.index.add(1).get(), e, -1);
          },
          scrollPrev: function (e) {
            E(m.index.add(-1).get(), e, 1);
          },
          scrollProgress: function () {
            return m.scrollProgress.get(m.location.get());
          },
          scrollSnapList: function () {
            return m.scrollSnapList;
          },
          scrollTo: E,
          selectedScrollSnap: L,
          slideNodes: function () {
            return x;
          },
          slidesInView: function () {
            return m.slidesInView.get();
          },
          slidesNotInView: function () {
            return m.slidesInView.get(!1);
          },
        };
        return C(t, n), setTimeout(() => l.emit("init"), 0), T;
      }
      function _L() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          n =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        const i = (0, t.useRef)(e),
          o = (0, t.useRef)(n),
          [a, s] = (0, t.useState)(),
          [r, l] = (0, t.useState)(),
          c = (0, t.useCallback)(() => {
            a && a.reInit(i.current, o.current);
          }, [a]);
        return (
          (0, t.useEffect)(() => {
            if (
              "undefined" !== typeof window &&
              window.document &&
              window.document.createElement &&
              r
            ) {
              NL.globalOptions = _L.globalOptions;
              const e = NL(r, i.current, o.current);
              return s(e), () => e.destroy();
            }
            s(void 0);
          }, [r, s]),
          (0, t.useEffect)(() => {
            QE(i.current, e) || ((i.current = e), c());
          }, [e, c]),
          (0, t.useEffect)(() => {
            (function (e, t) {
              if (e.length !== t.length) return !1;
              const n = $E(e),
                i = $E(t);
              return n.every((e, t) => QE(e, i[t]));
            })(o.current, n) || ((o.current = n), c());
          }, [n, c]),
          [l, a]
        );
      }
      (NL.globalOptions = void 0), (_L.globalOptions = void 0);
      const DL = {
        direction: "forward",
        speed: 2,
        startDelay: 1e3,
        active: !0,
        breakpoints: {},
        playOnInit: !0,
        stopOnFocusIn: !0,
        stopOnInteraction: !0,
        stopOnMouseEnter: !1,
        rootNode: null,
      };
      function zL() {
        let e,
          t,
          n,
          i,
          o,
          a =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          s = !1,
          r = !0,
          l = 0;
        function c() {
          if (n || s) return;
          if (!r) return;
          t.emit("autoScroll:play");
          const o = t.internalEngine(),
            { ownerWindow: a } = o;
          (l = a.setTimeout(() => {
            (o.scrollBody = (function (n) {
              const {
                  location: i,
                  previousLocation: o,
                  offsetLocation: a,
                  target: s,
                  scrollTarget: r,
                  index: l,
                  indexPrevious: c,
                  limit: { reachedMin: d, reachedMax: h, constrain: p },
                  options: { loop: f },
                } = n,
                g = "forward" === e.direction ? -1 : 1,
                m = () => k;
              let v = 0,
                b = 0,
                x = i.get(),
                y = 0,
                w = !1;
              function S(n) {
                const m = n / 1e3;
                let S = 0;
                o.set(i),
                  (v = g * e.speed * 55),
                  (x += v),
                  i.add(v * m),
                  s.set(i),
                  (S = x - y),
                  (b = Math.sign(S)),
                  (y = x);
                const A = r.byDistance(0, !1).index;
                l.get() !== A && (c.set(l.get()), l.set(A), t.emit("select"));
                const C = "forward" === e.direction ? d(a.get()) : h(a.get());
                if (!f && C) {
                  w = !0;
                  const e = p(i.get());
                  i.set(e), s.set(i), u();
                }
                return k;
              }
              const k = {
                direction: () => b,
                duration: () => -1,
                velocity: () => v,
                settled: () => w,
                seek: S,
                useBaseFriction: m,
                useBaseDuration: m,
                useFriction: m,
                useDuration: m,
              };
              return k;
            })(o)),
              o.animation.start();
          }, i)),
            (s = !0);
        }
        function u() {
          if (n || !s) return;
          t.emit("autoScroll:stop");
          const e = t.internalEngine(),
            { ownerWindow: i } = e;
          (e.scrollBody = o), i.clearTimeout(l), (l = 0), (s = !1);
        }
        function d() {
          r && c(), t.off("settle", d);
        }
        function h() {
          t.on("settle", d);
        }
        const p = {
          name: "autoScroll",
          options: a,
          init: function (s, l) {
            t = s;
            const { mergeOptions: d, optionsAtMedia: p } = l,
              f = d(DL, zL.globalOptions),
              g = d(f, a);
            if (((e = p(g)), t.scrollSnapList().length <= 1)) return;
            (i = e.startDelay), (n = !1), (o = t.internalEngine().scrollBody);
            const { eventStore: m } = t.internalEngine(),
              v = t.rootNode(),
              b = (e.rootNode && e.rootNode(v)) || v,
              x = t.containerNode();
            t.on("pointerDown", u),
              e.stopOnInteraction || t.on("pointerUp", h),
              e.stopOnMouseEnter &&
                (m.add(b, "mouseenter", () => {
                  (r = !1), u();
                }),
                e.stopOnInteraction ||
                  m.add(b, "mouseleave", () => {
                    (r = !0), c();
                  })),
              e.stopOnFocusIn &&
                (t.on("slideFocusStart", u),
                e.stopOnInteraction || m.add(x, "focusout", c)),
              e.playOnInit && c();
          },
          destroy: function () {
            t
              .off("pointerDown", u)
              .off("pointerUp", h)
              .off("slideFocusStart", u)
              .off("settle", d),
              u(),
              (n = !0),
              (s = !1);
          },
          play: function (e) {
            "undefined" !== typeof e && (i = e), (r = !0), c();
          },
          stop: function () {
            s && u();
          },
          reset: function () {
            s && (u(), h());
          },
          isPlaying: function () {
            return s;
          },
        };
        return p;
      }
      zL.globalOptions = void 0;
      const jL = (e) => {
          const {
              slides: n,
              options: i,
              syncApi: o,
              onInit: a,
              customStyles: s,
              isCompanies: r = !1,
            } = e,
            l = { ...i, loop: !0 },
            [c, u] = _L(l, [
              zL({ playOnInit: !0, stopOnInteraction: !1, speed: 2 }),
            ]),
            d = () => {
              "visible" === document.visibilityState && u && u.reInit();
            };
          (0, t.useEffect)(
            () => (
              u &&
                o &&
                (u.on("scroll", () => o.scrollTo(u.scrollProgress())),
                o.on("scroll", () => u.scrollTo(o.scrollProgress()))),
              u && a && a(u),
              document.addEventListener("visibilitychange", d),
              () => {
                document.removeEventListener("visibilitychange", d);
              }
            ),
            [u, o, a]
          );
          const h = {
            maxWidth: "100%",
            margin: "auto",
            "--slide-height": "48px",
            "--slide-spacing": "1rem",
            "--slide-size": "calc(100% / 4.5 - var(--slide-spacing))",
          };
          return (0, js.jsx)("div", {
            className: "embla",
            id: "horizontalEmblaCarousel",
            style: r ? { ...h, ...s } : h,
            children: (0, js.jsx)("div", {
              className: "embla__viewport",
              ref: c,
              children: (0, js.jsx)("div", {
                className: "embla__container",
                children: n.map((e, t) =>
                  (0, js.jsx)(
                    "div",
                    {
                      className: "embla__slide",
                      children: (0, js.jsx)("div", {
                        className: "embla__slide__number",
                        children: (0, js.jsx)("img", {
                          src: e,
                          alt: "slide-".concat(t),
                        }),
                      }),
                    },
                    t
                  )
                ),
              }),
            }),
          });
        },
        BL = qE(Hl, { shouldForwardProp: (e) => "shade" !== e })((e) => {
          let { shade: t, theme: n } = e;
          return {
            position: "relative",
            maxWidth: "377.33px",
            minWidth: "377.33px",
            minHeight: "324px",
            maxHeight: t === Wd ? "680px" : "377.33px",
            background: "url(".concat(t, ") no-repeat center center"),
            backgroundSize: "cover",
            display: "flex",
            flexDirection: "column",
            justifyContent: "space-between",
            textAlign: "center",
            gap: "12px",
            border: "1px solid rgba(255, 255, 255, 0.05)",
            borderRadius: "16px",
            paddingTop: "35px",
            flexShrink: 0,
            [n.breakpoints.down("sm")]: {
              maxWidth: "300px",
              minWidth: "300px",
            },
          };
        }),
        FL = qE("img", { shouldForwardProp: (e) => "isLongBox" !== e })((e) => {
          let { isLongBox: t, theme: n } = e;
          return {
            position: t ? "relative" : "absolute",
            bottom: "0px",
            left: "50%",
            transform: "translateX(-50%)",
            width: "100%",
          };
        }),
        WL = (e) => {
          let { shade: t, title: n, description: i, imageSrc: o } = e;
          const a = [Fd, Wd, Hd],
            s = i.length > 60 ? i.slice(0, 60) + "..." : i;
          return (0, js.jsxs)(BL, {
            shade: a[t],
            children: [
              (0, js.jsxs)("div", {
                children: [
                  "1" === t &&
                    (0, js.jsx)("img", { src: Vd, alt: "Cloud Icon" }),
                  (0, js.jsx)(vu, {
                    sx: {
                      fontFamily: "ProximaNovaRegular",
                      fontSize: "28px",
                      lineHeight: "34.72px",
                      color: "rgba(229, 233, 236, 1)",
                      fontWeight: 600,
                      textAlign: "1" === t ? "center" : "left",
                      px: "25px",
                    },
                    children: n,
                  }),
                  (0, js.jsx)(mm, {
                    title: i,
                    arrow: !0,
                    children: (0, js.jsx)(vu, {
                      sx: {
                        fontFamily: "ProximaNovaRegular",
                        fontSize: "18px",
                        lineHeight: "28.8px",
                        color: "rgba(148, 152, 156, 1)",
                        fontWeight: 300,
                        textAlign: "1" === t ? "center" : "left",
                        px: "25px",
                      },
                      children: s,
                    }),
                  }),
                ],
              }),
              "2" === t
                ? (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "column",
                      gap: "16px",
                      pb: "32px",
                    },
                    children: [
                      (0, js.jsx)(jL, {
                        slides: [Ad, Cd, Md, Pd, Ed, Ld, Td, Od, Rd, Id],
                      }),
                      (0, js.jsx)(jL, {
                        slides: [Ld, Td, Od, Rd, Id, Ad, Cd, Md, Pd, Ed],
                      }),
                    ],
                  })
                : (0, js.jsx)(FL, {
                    src: o,
                    alt: "Image description",
                    isLongBox: "1" === t,
                  }),
            ],
          });
        },
        HL = () =>
          (0, js.jsx)(Hl, {
            sx: { px: "20px", width: "100%", maxWidth: "1240px" },
            children: (0, js.jsxs)(Hl, {
              sx: {
                width: "100%",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                justifyContent: "center",
                position: "relative",
              },
              children: [
                (0, js.jsx)(Hl, {
                  sx: {
                    position: "absolute",
                    top: 5,
                    width: "100%",
                    zIndex: 0,
                  },
                  children: (0, js.jsx)("img", {
                    src: Nd,
                    alt: "Bottom Grid",
                    style: { width: "100%", height: "auto" },
                  }),
                }),
                (0, js.jsxs)(Hl, {
                  sx: {
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    justifyContent: "center",
                    maxWidth: "1200px",
                    pt: "100px",
                    zIndex: 1,
                  },
                  children: [
                    (0, js.jsxs)(Hl, {
                      sx: { ...zE, mb: "32px" },
                      children: [
                        (0, js.jsx)("img", {
                          src: Gd,
                          alt: "Core Products Icon",
                        }),
                        " Core Products",
                      ],
                    }),
                    (0, js.jsx)(vu, {
                      sx: { ...IE, textAlign: "center" },
                      children: "Fueling a Global Computing Network",
                    }),
                    (0, js.jsxs)(Hl, {
                      sx: {
                        display: "flex",
                        flexDirection: { xs: "column", sm: "row" },
                        gap: "34px",
                        pt: "58px",
                        flexWrap: "wrap",
                        justifyContent: "center",
                      },
                      children: [
                        (0, js.jsxs)(Hl, {
                          sx: {
                            display: "flex",
                            flexDirection: "column",
                            gap: "32px",
                          },
                          children: [
                            (0, js.jsx)(WL, {
                              title: "D-Comp",
                              description:
                                "Access high performance computing through powerful GPUs for heavy tasks.",
                              imageSrc: Bd,
                              shade: "0",
                            }),
                            (0, js.jsx)(WL, {
                              title: "Dojo GaaS",
                              description:
                                "Immediate creation and optimization of compute capacity in < 90 seconds.",
                              imageSrc: zd,
                              shade: "0",
                            }),
                          ],
                        }),
                        (0, js.jsx)(Hl, {
                          sx: { display: "flex" },
                          children: (0, js.jsx)(WL, {
                            shade: "1",
                            title: "D-Cloud",
                            description:
                              "Up to 90% more affordable compared to traditional cloud service providers.",
                            imageSrc: jd,
                          }),
                        }),
                        (0, js.jsxs)(Hl, {
                          sx: {
                            display: "flex",
                            flexDirection: "column",
                            gap: "32px",
                          },
                          children: [
                            (0, js.jsx)(WL, {
                              title: "Fluid Compute",
                              description:
                                "Ideal for app development, AI research, machine learning and more.",
                              imageSrc: Bd,
                              shade: "2",
                            }),
                            (0, js.jsx)(WL, {
                              title: "DPN",
                              description:
                                "A virtual private network powered by Dojo serving as a user acquisition strategy & funneling value across the entire ecosystem.",
                              imageSrc: Dd,
                              shade: "0",
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        GL = () => {
          const e = (0, Ul.Ay)("div")((e) => {
              let { theme: t } = e;
              return {
                width: 64,
                height: 64,
                background: "rgba(9, 9, 10, 1)",
                boxShadow:
                  "0px 0.5px 0px rgba(255, 255, 255, 0.15), inset 0px 0.5px 0px rgba(255, 255, 255, 0.16)",
                borderRadius: "50%",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                textAlign: "center",
                [t.breakpoints.down("lg")]: {
                  position: "relative",
                  width: 48,
                  height: 48,
                },
              };
            }),
            t = (0, Ul.Ay)(vu)((e) => {
              let { theme: t } = e;
              return {
                fontFamily: "ProximaNovaRegular",
                fontWeight: 600,
                fontSize: "24px",
                lineHeight: "31.2px",
                letterSpacing: "-0.01em",
                color: "#FFFFFF",
                [t.breakpoints.down("lg")]: { fontSize: "24px" },
              };
            }),
            n = (0, Ul.Ay)(Hl)((e) => {
              let { theme: t } = e;
              return {
                position: "relative",
                width: "100%",
                maxWidth: "288px",
                minHeight: "300px",
                maxHeight: "100%",
                background: "url(".concat(Yd, ") no-repeat center center"),
                backgroundSize: "cover",
                display: "flex",
                flexDirection: "column",
                justifyContent: "space-between",
                textAlign: "left",
                gap: "12px",
                border: "1px solid rgba(255, 255, 255, 0.05)",
                borderRadius: "16px",
                paddingTop: "35px",
                paddingLeft: "24px",
                paddingBottom: "24px",
                paddingRight: "24px",
                transition: "transform 0.3s ease, background-size 0.3s ease",
                "&:hover": { transform: "scale(1.05)", backgroundSize: "110%" },
              };
            }),
            i = [
              {
                name: "Stake Token",
                desc: "Stake $DOAI to mint native GPU's on Solana that represents computational power.",
              },
              {
                name: "Mine Computed Yield",
                desc: "Earn up to 100% in native yield directly from [D-CLOUD] monetization.",
              },
              {
                name: "Earn Rewards",
                desc: "[D-CLOUD] fees are distributed fairly back to all direct network stakers and participants.",
              },
              {
                name: "Monitor Usage",
                desc: "Your bespoke terminal to monitor $DOAI cloud consumption, computation and rewards.",
              },
            ];
          return (0, js.jsxs)(Hl, {
            sx: {
              width: "100%",
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              justifyContent: "center",
              position: "relative",
              marginBottom: "300px",
            },
            children: [
              (0, js.jsxs)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  maxWidth: "1240px",
                  pt: "100px",
                  px: "20px",
                  zIndex: 1,
                },
                children: [
                  (0, js.jsxs)(Hl, {
                    sx: { ...zE, mb: "32px" },
                    children: [
                      (0, js.jsx)("img", { src: Ud, alt: "Chip Icon" }),
                      " GPU-as-a-Service",
                    ],
                  }),
                  (0, js.jsx)(vu, {
                    sx: { ...IE, textAlign: "center" },
                    children: "The Dojo GaaS Program",
                  }),
                  (0, js.jsx)(vu, {
                    sx: {
                      fontFamily: "ProximaNovaRegular",
                      fontWeight: 400,
                      fontSize: "22px",
                      lineHeight: "160%",
                      textAlign: "center",
                      color: "#94989C",
                      pt: "24px",
                    },
                    children:
                      "Providing GPU-as-a-Service on Solana in 4 simple steps",
                  }),
                  (0, js.jsx)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      gap: "16px",
                      flexWrap: "wrap",
                      pt: "58px",
                      zIndex: 1,
                      justifyContent: "center",
                    },
                    children: i.map((o, a) => {
                      return (0, js.jsxs)(
                        n,
                        {
                          children: [
                            (0, js.jsxs)(Hl, {
                              sx: {
                                display: "flex",
                                flexDirection: "row",
                                justifyContent: "space-between",
                                alignItems: "center",
                              },
                              children: [
                                (0, js.jsx)(e, {
                                  children: (0, js.jsx)(t, { children: a + 1 }),
                                }),
                                a !== i.length - 1 &&
                                  (0, js.jsx)("img", {
                                    src: Xd,
                                    alt: "Steps Arrow",
                                  }),
                              ],
                            }),
                            (0, js.jsx)(vu, {
                              sx: {
                                fontFamily: "ProximaNovaRegular",
                                fontSize: "24px",
                                lineHeight: "29.52px",
                                color: "rgba(229, 233, 236, 1)",
                                fontWeight: 600,
                              },
                              children: o.name,
                            }),
                            (0, js.jsx)(mm, {
                              title: o.desc,
                              placement: "bottom",
                              children: (0, js.jsx)(vu, {
                                sx: {
                                  fontFamily: "ProximaNovaRegular",
                                  fontSize: "18px",
                                  lineHeight: "28.8px",
                                  color: "rgba(148, 152, 156, 1)",
                                  fontWeight: 300,
                                },
                                children:
                                  ((s = o.desc),
                                  (r = 70),
                                  s.length > r ? s.substring(0, r) + "..." : s),
                              }),
                            }),
                          ],
                        },
                        a
                      );
                      var s, r;
                    }),
                  }),
                ],
              }),
              (0, js.jsx)(Hl, {
                sx: {
                  position: "absolute",
                  bottom: "-300px",
                  width: "100%",
                  zIndex: 0,
                },
                children: (0, js.jsx)("img", {
                  src: _d,
                  alt: "Bottom Grid",
                  style: { width: "100%", height: "auto" },
                }),
              }),
            ],
          });
        },
        VL = () =>
          (0, js.jsx)(Hl, {
            sx: { px: "20px", width: "100%", maxWidth: "1240px" },
            children: (0, js.jsxs)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                alignItems: "flex-start",
                justifyContent: "flex-start",
                pt: "100px",
              },
              children: [
                (0, js.jsxs)(Hl, {
                  sx: { ...zE, mb: 4 },
                  children: [
                    (0, js.jsx)("img", { src: Zd, alt: "Chip Icon" }),
                    " Network",
                  ],
                }),
                (0, js.jsx)(vu, {
                  sx: IE,
                  children: "The Global Cloud Conglomerate",
                }),
                (0, js.jsxs)(Hl, {
                  sx: {
                    display: "flex",
                    width: "100%",
                    minHeight: "552px",
                    position: "relative",
                    backgroundImage: "url(".concat(qd, ")"),
                    backgroundPosition: "right",
                    backgroundRepeat: "no-repeat",
                    backgroundSize: "cover",
                    px: { xs: 4, sm: 6, md: 8, lg: 10 },
                    border: "1px solid rgba(255, 255, 255, 0.04)",
                    justifyContent: "center",
                    alignItems: "center",
                    mt: 6,
                    borderRadius: 2,
                  },
                  children: [
                    (0, js.jsxs)(Hl, {
                      sx: {
                        width: { xs: "100%", sm: "80%", md: "50%", lg: "40%" },
                        display: "flex",
                        flexDirection: "column",
                        gap: 3,
                      },
                      children: [
                        (0, js.jsx)("img", {
                          src: Qd,
                          alt: "Atom Icon",
                          width: 80,
                          height: 80,
                        }),
                        (0, js.jsx)(vu, {
                          sx: {
                            fontSize: "28px",
                            lineHeight: "34.72px",
                            letterSpacing: "-0.01em",
                            color: "rgba(229, 233, 236, 1)",
                            fontWeight: 600,
                            fontFamily: "ProximaNovaRegular",
                          },
                          children: "Efficient Infrastructure",
                        }),
                        (0, js.jsx)(vu, {
                          sx: {
                            color: "rgba(148, 152, 156, 1)",
                            fontSize: "18px",
                            lineHeight: "28.8px",
                            fontFamily: "Roboto",
                            fontWeight: 300,
                          },
                          children:
                            "Dojo is linked to a global cloud that already utilizes GPUs. Resources are usually under-utilized, but D-TECH optimizes those inefficient systems to output for much better usage through fluid computation and interlinks it with the rest of the core products.",
                        }),
                        (0, js.jsx)(Hl, {
                          sx: { display: "flex", gap: 2 },
                          children: ["Global Network", "Fluid Computation"].map(
                            (e) =>
                              (0, js.jsxs)(
                                Hl,
                                {
                                  sx: {
                                    display: "flex",
                                    alignItems: "center",
                                    gap: 1,
                                  },
                                  children: [
                                    (0, js.jsx)("img", {
                                      src: Kd,
                                      alt: "Tick Icon",
                                      width: 24,
                                      height: 24,
                                    }),
                                    (0, js.jsx)(vu, {
                                      sx: {
                                        color: "rgba(211, 213, 218, 1)",
                                        fontSize: "16px",
                                        lineHeight: "32px",
                                        fontFamily: "Inter",
                                        fontWeight: 400,
                                      },
                                      children: e,
                                    }),
                                  ],
                                },
                                e
                              )
                          ),
                        }),
                      ],
                    }),
                    (0, js.jsx)(Hl, {
                      sx: {
                        width: { xs: "0%", sm: "20%", md: "50%", lg: "60%" },
                      },
                    }),
                  ],
                }),
              ],
            }),
          }),
        UL = () =>
          (0, js.jsx)(Hl, {
            sx: { px: "20px", width: "100%", maxWidth: "1240px" },
            children: (0, js.jsxs)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                justifyContent: "center",
                mt: "80px",
                position: "relative",
                backgroundImage: "url(".concat(Jd, ")"),
                backgroundPosition: "center",
                backgroundRepeat: "no-repeat",
                backgroundSize: "cover",
                minHeight: "517px",
                height: "100%",
                border: "1px solid rgba(255, 255, 255, 0.04)",
                mb: "30px",
                p: 2,
              },
              children: [
                (0, js.jsxs)(Hl, {
                  sx: { ...zE, mb: "32px" },
                  children: [
                    (0, js.jsx)("img", { src: $d, alt: "Dollar Icon" }),
                    " Start Earning",
                  ],
                }),
                (0, js.jsxs)(vu, {
                  sx: { ...IE, textAlign: "center" },
                  children: [
                    (0, js.jsx)("span", {
                      style: {
                        background:
                          "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                        WebkitBackgroundClip: "text",
                        WebkitTextFillColor: "transparent",
                        backgroundClip: "text",
                      },
                      children: "Power Computation",
                    }),
                    (0, js.jsx)("br", {}),
                    (0, js.jsx)("span", {
                      style: {
                        background:
                          "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                        WebkitBackgroundClip: "text",
                        WebkitTextFillColor: "transparent",
                        backgroundClip: "text",
                      },
                      children: "At Scale on Solana",
                    }),
                  ],
                }),
                (0, js.jsx)(vu, {
                  sx: {
                    fontFamily: "ProximaNovaRegular",
                    fontWeight: 400,
                    fontSize: "20px",
                    lineHeight: "32px",
                    textAlign: "center",
                    color: "#94989C",
                    pt: "24px",
                  },
                  children:
                    "Fuel a global computing network for the largest sector in the world.",
                }),
                (0, js.jsx)(Gu, {
                  sx: {
                    ...DE,
                    width: "240px",
                    backgroundColor: "#ffffff",
                    color: "#000000",
                    mt: "32px",
                  },
                  children: "Join Now",
                }),
              ],
            }),
          }),
        YL = () => {
          const e = Ol("(max-width: 800px)"),
            t = Ol("(max-width: 600px)"),
            n = Ol("(max-width: 400px)") ? 2 : t ? 3 : e ? 4 : 5;
          return (0, js.jsxs)(Hl, {
            sx: {
              display: "flex",
              flexDirection: "column",
              alignItems: "flex-start",
              justifyContent: "flex-start",
              maxWidth: "1200px",
              width: "100%",
              pt: t ? "100px" : "160px",
            },
            children: [
              (0, js.jsxs)(Hl, {
                sx: { ...zE, mb: 4, mx: "20px" },
                children: [
                  (0, js.jsx)("img", { src: th, alt: "Chip Icon" }),
                  " Driving Innovation",
                ],
              }),
              (0, js.jsxs)(vu, {
                sx: { ...IE, textAlign: "left", pb: "64px", px: "20px" },
                children: [
                  (0, js.jsx)("span", {
                    style: {
                      background:
                        "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                      WebkitBackgroundClip: "text",
                      WebkitTextFillColor: "transparent",
                      backgroundClip: "text",
                    },
                    children: "The Largest Companies in the",
                  }),
                  (0, js.jsx)("br", {}),
                  (0, js.jsx)("span", {
                    style: {
                      background:
                        "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                      WebkitBackgroundClip: "text",
                      WebkitTextFillColor: "transparent",
                      backgroundClip: "text",
                    },
                    children: "World Power AI Usage",
                  }),
                ],
              }),
              (0, js.jsx)(jL, {
                slides: [nh, ih, oh, ah, nh, ih, oh, ah],
                customStyles: {
                  "--slide-height": "8rem",
                  "--slide-spacing": "0rem",
                  "--slide-size": "calc(100% / ".concat(
                    n,
                    " - var(--slide-spacing))"
                  ),
                },
                isCompanies: !0,
              }),
            ],
          });
        },
        XL = (e) => {
          const {
              slides: n,
              options: i,
              syncApi: o,
              onInit: a,
              iconOnLeft: s = !1,
            } = e,
            r = Ol("(max-width:750px)"),
            l = {
              maxWidth: "100%",
              width: "100%",
              margin: "auto",
              "--slide-height": "48px",
              "--slide-spacing": "1rem",
              "--slide-size": "calc(100% / ".concat(
                r ? 3.5 : 2,
                " - var(--slide-spacing))"
              ),
            },
            c = { ...i, loop: !0 },
            [u, d] = _L(c, [
              zL({ playOnInit: !0, stopOnInteraction: !1, speed: 2 }),
            ]),
            h = () => {
              "visible" === document.visibilityState && d && d.reInit();
            };
          return (
            (0, t.useEffect)(
              () => (
                d &&
                  o &&
                  (d.on("scroll", () => o.scrollTo(d.scrollProgress())),
                  o.on("scroll", () => d.scrollTo(o.scrollProgress()))),
                d && a && a(d),
                document.addEventListener("visibilitychange", h),
                () => {
                  document.removeEventListener("visibilitychange", h);
                }
              ),
              [d, o, a]
            ),
            (0, js.jsx)("div", {
              id: "verticalEmblaCarousel",
              className: "embla",
              style: l,
              children: (0, js.jsx)("div", {
                className: "embla__viewport",
                ref: u,
                children: (0, js.jsx)("div", {
                  className: "embla__container",
                  children: n.map((e, t) =>
                    (0, js.jsx)(
                      "div",
                      {
                        className: "embla__slide",
                        children: (0, js.jsx)("div", {
                          className: "embla__slide__number",
                          children: (0, js.jsxs)(Hl, {
                            sx: {
                              display: "flex",
                              flexDirection: "row",
                              gap: "8px",
                              alignItems: "center",
                              height: "64px",
                              border: "0.5px solid rgba(255, 255, 255, 0.25)",
                              borderRadius: "12px",
                              boxShadow: "0px 0px 8px 4px rgba(37, 37, 40, 1)",
                              backgroundColor: "rgba(0,0,0,1)",
                              width: "max-content",
                              paddingLeft: {
                                xs: s ? "8px" : "12px",
                                sm: s ? "8px" : "12px",
                                md: s ? "14px" : "22px",
                                lg: s ? "16px" : "24px",
                              },
                              paddingRight: {
                                xs: s ? "12px" : "8px",
                                sm: s ? "12px" : "8px",
                                md: s ? "22px" : "14px",
                                lg: s ? "24px" : "16px",
                              },
                            },
                            children: [
                              s &&
                                (0, js.jsx)(Hl, {
                                  src: e.icon,
                                  alt: "slide-".concat(t),
                                  sx: {
                                    height: {
                                      xs: "24px",
                                      sm: "28px",
                                      md: "30px",
                                      lg: "32px",
                                    },
                                    width: {
                                      xs: "24px",
                                      sm: "28px",
                                      md: "30px",
                                      lg: "32px",
                                    },
                                  },
                                  component: "img",
                                }),
                              (0, js.jsx)(vu, {
                                sx: {
                                  fontFamily: "ProximaNovaRegular",
                                  fontSize: {
                                    xs: "12px",
                                    sm: "14px",
                                    md: "18px",
                                  },
                                  fontWeight: 400,
                                  lineHeight: "27px",
                                  color: "rgba(148, 152, 156, 1)",
                                },
                                children: e.name,
                              }),
                              !s &&
                                (0, js.jsx)(Hl, {
                                  src: e.icon,
                                  alt: "slide-".concat(t),
                                  sx: {
                                    height: {
                                      xs: "24px",
                                      sm: "28px",
                                      md: "30px",
                                      lg: "32px",
                                    },
                                    width: {
                                      xs: "24px",
                                      sm: "28px",
                                      md: "30px",
                                      lg: "32px",
                                    },
                                  },
                                  component: "img",
                                }),
                            ],
                          }),
                        }),
                      },
                      t
                    )
                  ),
                }),
              }),
            })
          );
        },
        KL = () => {
          const e = Ol("(max-width:750px)"),
            t = [
              { name: "Computer Vision", icon: rh },
              { name: "Speech Recognition", icon: lh },
              { name: "NLP Based Applications", icon: ch },
              { name: "TradFi Applications", icon: uh },
              { name: "Recommendation Systems", icon: dh },
              { name: "Smart Homes", icon: hh },
              { name: "Healthcare Systems", icon: ph },
            ],
            n = [
              { name: "Expert Systems", icon: fh },
              { name: "Robotics", icon: gh },
              { name: "Machine Learning", icon: mh },
              { name: "Deep Learning", icon: vh },
              { name: "Autonomous AI", icon: bh },
              { name: "Virtual Assistants", icon: xh },
              { name: "Fraud Detection", icon: yh },
            ];
          return (0, js.jsx)(Hl, {
            sx: { px: "20px", width: "100%", maxWidth: "1240px" },
            children: (0, js.jsxs)(Hl, {
              sx: {
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                justifyContent: "center",
                maxWidth: "1200px",
                pt: e ? "100px" : "180px",
                width: "100%",
              },
              children: [
                (0, js.jsxs)(Hl, {
                  sx: { ...zE, mb: "32px" },
                  children: [
                    (0, js.jsx)("img", { src: wh, alt: "Chip Icon" }),
                    " The Power of Dojo",
                  ],
                }),
                (0, js.jsx)(vu, {
                  sx: IE,
                  children: "Multifaceted Computational Power",
                }),
                (0, js.jsxs)(Hl, {
                  sx: {
                    position: "relative",
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    justifyContent: "center",
                    maxWidth: "1200px",
                    height: "592px",
                    width: "100%",
                    overflow: "hidden",
                    border: "1px solid rgba(255, 255, 255, 0.04)",
                    borderRadius: "16px",
                    mt: "48px",
                  },
                  children: [
                    (0, js.jsxs)("video", {
                      autoPlay: !0,
                      loop: !0,
                      muted: !0,
                      playsInline: !0,
                      style: {
                        position: "absolute",
                        width: "100%",
                        height: "100%",
                        objectFit: "cover",
                        top: 0,
                        left: 0,
                        zIndex: 1,
                        opacity: 0.25,
                        backgroundBlendMode: "luminosity",
                      },
                      children: [
                        (0, js.jsx)("source", { src: gd, type: "video/mp4" }),
                        "Your browser does not support the video tag.",
                      ],
                    }),
                    (0, js.jsx)(Hl, {
                      sx: {
                        position: "absolute",
                        top: 0,
                        left: 0,
                        width: "100%",
                        height: "100%",
                        objectFit: "cover",
                        zIndex: 3,
                        backgroundColor: "rgba(0, 0, 0, 0.75)",
                      },
                    }),
                    (0, js.jsxs)(Hl, {
                      sx: {
                        display: "flex",
                        flexDirection: e ? "column" : "row",
                        alignItems: "center",
                        gap: { xs: "10px", sm: "20px", md: "50px", lg: "80px" },
                        width: "100%",
                        justifyContent: "center",
                        zIndex: 4,
                        paddingX: {
                          xs: "20px",
                          sm: "40px",
                          md: "50px",
                          lg: "62px",
                        },
                      },
                      children: [
                        (0, js.jsx)(XL, {
                          slides: t,
                          options: { axis: e ? "x" : "y" },
                        }),
                        (0, js.jsx)(Hl, {
                          component: "img",
                          src: sh,
                          alt: "DojoGlow",
                          sx: {
                            width: {
                              xs: "200px",
                              sm: "200px",
                              md: "250px",
                              lg: "317px",
                            },
                            height: {
                              xs: "200px",
                              sm: "200px",
                              md: "250px",
                              lg: "320px",
                            },
                          },
                        }),
                        (0, js.jsx)(XL, {
                          slides: n,
                          options: { axis: e ? "x" : "y" },
                          iconOnLeft: !0,
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          });
        },
        qL = () => {
          const e = nl(),
            { isLoggedIn: t } = Ss((e) => e.user),
            n = Ol("(max-width:900px)"),
            i = Ol("(max-width:600px)"),
            o = [
              {
                name: "Revolutionary",
                icon: kd,
                desc: "Funneling value across a globally distributed cloud network across Solana.",
              },
              {
                name: "High Demand",
                icon: Sd,
                desc: "The need for computing power will exceed the supply by over 10x.",
              },
              {
                name: "Efficient",
                icon: xd,
                desc: "Dojo recycles underutilized GPU resources to maximize performance & reduce cost.",
              },
            ];
          return (0, js.jsxs)(Hl, {
            sx: {
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              justifyContent: "center",
              pt: "10%",
              alignSelf: "center",
              width: "100%",
            },
            children: [
              (0, js.jsxs)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  maxWidth: "1200px",
                },
                children: [
                  (0, js.jsx)(Hl, {
                    sx: {
                      border: "1px solid #313335",
                      borderRadius: "60px",
                      p: "4px",
                      width: "max-content",
                      display: "flex",
                      flexDirection: "column",
                      alignItems: "center",
                    },
                    children: (0, js.jsxs)(Hl, {
                      sx: { ...zE },
                      children: [
                        (0, js.jsx)("img", { src: bd, alt: "DojoGreyIcon" }),
                        " Dojo Protocol",
                      ],
                    }),
                  }),
                  (0, js.jsxs)(vu, {
                    sx: { ...RE, pt: "48px", pb: "24px" },
                    children: [
                      (0, js.jsx)("span", {
                        style: {
                          background:
                            "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                          WebkitBackgroundClip: "text",
                          WebkitTextFillColor: "transparent",
                          backgroundClip: "text",
                        },
                        children: "The GPU & Compute Framework",
                      }),
                      (0, js.jsx)("br", {}),
                      (0, js.jsx)("span", {
                        style: {
                          background:
                            "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                          WebkitBackgroundClip: "text",
                          WebkitTextFillColor: "transparent",
                          backgroundClip: "text",
                        },
                        children: "Native to Solana",
                      }),
                    ],
                  }),
                  (0, js.jsx)(vu, {
                    sx: {
                      fontFamily: "ProximaNovaRegular",
                      fontWeight: 400,
                      fontSize: "22px",
                      lineHeight: "160%",
                      textAlign: "center",
                      color: "#94989C",
                    },
                    children:
                      "Fueling a global computing network for the largest sector in the world.",
                  }),
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      gap: "24px",
                      pt: "48px",
                      flexWrap: { xs: "wrap", sm: "nowrap" },
                      justifyContent: "center",
                    },
                    children: [
                      (0, js.jsxs)(Gu, {
                        sx: {
                          ...DE,
                          backgroundColor: "#ffffff",
                          "&:hover": { backgroundColor: "#f0f0f0" },
                        },
                        onClick: () => e(t ? "/home" : "/login"),
                        children: [
                          "Get Started ",
                          (0, js.jsx)("img", {
                            src: vd,
                            alt: "CircledRightArrow",
                          }),
                        ],
                      }),
                      (0, js.jsxs)(Gu, {
                        sx: {
                          ...DE,
                          backgroundColor: "#000000",
                          border: "1px solid #313335",
                          color: "#ffffff",
                          "&:hover": {
                            backgroundColor: "#000000",
                            opacity: 0.9,
                          },
                        },
                        children: [
                          "Stake Tokens ",
                          (0, js.jsx)("img", {
                            src: yd,
                            alt: "FlashlightIcon",
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              (0, js.jsxs)(Hl, {
                sx: {
                  width: "100%",
                  border: "1px solid #242427",
                  borderRadius: "16px",
                  mt: "20%",
                  mb: "100px",
                  maxWidth: "1200px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                },
                children: [
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      width: "100%",
                      height: "auto",
                      position: "relative",
                      backgroundImage: "url(".concat(wd, ")"),
                      backgroundPosition: "right",
                      backgroundRepeat: "no-repeat",
                      backgroundSize: "66%",
                      px: "40px",
                      py: "48px",
                    },
                    children: [
                      (0, js.jsxs)(Hl, {
                        sx: {
                          display: "flex",
                          flexDirection: "column",
                          gap: "24px",
                          flex: n ? "60%" : "45%",
                        },
                        children: [
                          (0, js.jsxs)(Hl, {
                            sx: { ...zE },
                            children: [
                              (0, js.jsx)("img", {
                                src: md,
                                alt: "CircledMenu",
                              }),
                              " About",
                            ],
                          }),
                          (0, js.jsxs)(vu, {
                            sx: IE,
                            children: [
                              (0, js.jsxs)("span", {
                                style: {
                                  background:
                                    "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                                  WebkitBackgroundClip: "text",
                                  WebkitTextFillColor: "transparent",
                                  backgroundClip: "text",
                                },
                                children: ["The Foundation of", " "],
                              }),
                              (0, js.jsxs)("span", {
                                style: {
                                  background:
                                    "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                                  WebkitBackgroundClip: "text",
                                  WebkitTextFillColor: "transparent",
                                  backgroundClip: "text",
                                },
                                children: [" ", "Future Computing", " "],
                              }),
                              (0, js.jsx)("span", {
                                style: {
                                  background:
                                    "linear-gradient(180deg, #FFFFFF 0%, #363A3F 140.97%), #FFFFFF",
                                  WebkitBackgroundClip: "text",
                                  WebkitTextFillColor: "transparent",
                                  backgroundClip: "text",
                                },
                                children: "on Solana",
                              }),
                            ],
                          }),
                          (0, js.jsx)(vu, {
                            sx: NE,
                            children:
                              "Dojo revolutionizes GPU & cloud computation on Solana by funneling value across a globally distributed cloud network operating primarily on Solana.",
                          }),
                          (0, js.jsx)(vu, {
                            sx: _E,
                            children:
                              "Development in artificial intelligence has seen the fastest growth compared to any other sector in tech and the need for computing power will exceed the supply by over 10x.",
                          }),
                          (0, js.jsx)(vu, {
                            sx: _E,
                            children:
                              "Dojo recycles underutilized GPU resources from independent data centers, crypto mining farms, and native consumer GPUs to maximize performance for everything from small-scale startups to the largest AI companies.",
                          }),
                        ],
                      }),
                      (0, js.jsx)(Hl, { sx: { flex: n ? "40%" : "55%" } }),
                    ],
                  }),
                  (0, js.jsx)(Hl, {
                    sx: {
                      width: "calc(100% - 96px)",
                      height: "1px",
                      backgroundColor: "#313335",
                    },
                  }),
                  (0, js.jsx)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "row",
                      gap: "48px",
                      py: "48px",
                      px: "48px",
                      flexWrap: n ? "wrap" : "nowrap",
                    },
                    children: o.map((e, t) =>
                      (0, js.jsxs)(
                        Hl,
                        {
                          sx: {
                            display: "flex",
                            flexDirection: "column",
                            gap: "16px",
                          },
                          children: [
                            (0, js.jsxs)(Hl, {
                              sx: {
                                display: "flex",
                                flexDirection: "row",
                                gap: "16px",
                                alignItems: "center",
                              },
                              children: [
                                (0, js.jsx)(Hl, {
                                  sx: {
                                    minWidth: i ? "34px" : n ? "52px" : "64px",
                                    minHeight: i ? "34px" : n ? "52px" : "64px",
                                    borderRadius: "50%",
                                    display: "flex",
                                    justifyContent: "center",
                                    alignItems: "center",
                                    overflow: "hidden",
                                    backgroundColor: "#09090A",
                                    boxShadow:
                                      "0px 0.5px 0px rgba(255, 255, 255, 0.2), inset 0px 0.5px 0px rgba(255, 255, 255, 0.4)",
                                    textAlign: "center",
                                  },
                                  children: (0, js.jsx)("img", {
                                    src: e.icon,
                                    alt: e.name,
                                    style: {
                                      objectFit: "cover",
                                      width: i ? "20px" : n ? "30px" : "39px",
                                      height: i ? "20px" : n ? "30px" : "39px",
                                    },
                                  }),
                                }),
                                (0, js.jsx)(vu, {
                                  sx: {
                                    fontFamily: "ProximaNovaRegular",
                                    fontSize: i ? "18px" : n ? "20px" : "28px",
                                    fontWeight: 600,
                                    lineHeight: i
                                      ? "20px"
                                      : n
                                      ? "22px"
                                      : "34.72px",
                                    color: "rgba(229, 233, 236, 1)",
                                  },
                                  children: e.name,
                                }),
                              ],
                            }),
                            (0, js.jsx)(vu, {
                              sx: {
                                fontFamily: "Roboto",
                                fontWeight: 300,
                                color: "rgba(148, 152, 156, 1)",
                                fontSize: i ? "14px" : n ? "16px" : "18px",
                                lineHeight: i
                                  ? "22.4px"
                                  : n
                                  ? "25.6px"
                                  : "28.8px",
                              },
                              children: e.desc,
                            }),
                          ],
                        },
                        t
                      )
                    ),
                  }),
                ],
              }),
              (0, js.jsx)(HL, {}),
              (0, js.jsx)(GL, {}),
              (0, js.jsx)(VL, {}),
              (0, js.jsx)(KL, {}),
              (0, js.jsx)(YL, {}),
              (0, js.jsx)(UL, {}),
            ],
          });
        },
        ZL = (e) => {
          let { children: t, radius: n } = e;
          return (0, js.jsxs)(Hl, {
            sx: {
              position: "relative",
              borderRadius: n || "20px",
              overflow: "hidden",
            },
            children: [
              t,
              (0, js.jsx)(Hl, {
                sx: {
                  position: "absolute",
                  top: "-1px",
                  right: "-1px",
                  bottom: "-1px",
                  left: "-1px",
                  background:
                    "linear-gradient(180deg, #242427 0%, rgba(36, 36, 39, 0) 100%)",
                  borderRadius: n ? "".concat(parseInt(n) + 2, "px") : "22px",
                  zIndex: "-1",
                },
              }),
            ],
          });
        },
        QL = () => {
          const e = Ol("(max-width:800px)"),
            [n, i] = (0, t.useState)(null),
            [o, a] = (0, t.useState)(null),
            { email: s } = Ss((e) => e.user);
          return (
            (0, t.useEffect)(() => {
              (async () => {
                try {
                  const { data: e } = await Ea.get(
                    "".concat(La, "email/count"),
                    { params: { email: s } }
                  );
                  console.log("\ud83d\ude80 ~ fetchCount ~ data:", e),
                    e.payload &&
                      (i(e.payload.count), a(e.payload.emailWaitlist));
                } catch (e) {
                  console.error("Failed to fetch count:", e);
                }
              })();
            }, []),
            (0, js.jsx)(Hl, {
              sx: {
                position: "relative",
                width: "100%",
                height: "100%",
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                paddingTop: "20px",
                paddingBottom: "20px",
              },
              children: (0, js.jsxs)(Hl, {
                sx: {
                  display: "flex",
                  flexDirection: e ? "column-reverse" : "row",
                  alignItems: "center",
                  justifyContent: "center",
                  width: "100%",
                  height: "100%",
                  backgroundImage: "url(".concat(td, ")"),
                  backgroundSize: "cover",
                  backgroundPosition: "center",
                  borderRadius: "10px",
                  boxShadow: "0 0 10px rgba(0, 0, 0, 0.1)",
                  padding: "20px",
                  margin: "1px",
                  gap: "36px",
                  maxWidth: "1187px",
                },
                children: [
                  (0, js.jsxs)(Hl, {
                    sx: {
                      display: "flex",
                      flexDirection: "column",
                      alignItems: "center",
                      justifyContent: "center",
                      width: "100%",
                      height: "100%",
                      gap: "36px",
                      maxWidth: "468px",
                    },
                    children: [
                      (0, js.jsx)(ZL, {
                        radius: "32px",
                        children: (0, js.jsxs)(Hl, {
                          sx: {
                            borderRadius: "32px",
                            display: "flex",
                            flexDirection: "column",
                            alignItems: "center",
                            paddingY: "10px",
                            paddingX: "20px",
                            margin: "1px",
                            background:
                              "radial-gradient(56.52% 74.7% at 50.36% 100%, rgba(255, 255, 255, 0.0408) 0%, rgba(255, 255, 255, 0) 100%), #09090A",
                            boxShadow:
                              "0px 2px 8px rgba(0, 0, 0, 0.16), inset 0px 1px 0px rgba(255, 255, 255, 0.15)",
                          },
                          children: [
                            (0, js.jsx)("img", { src: Zu, alt: "Team Icon" }),
                            (0, js.jsx)(vu, {
                              sx: {
                                fontFamily: "ProximaNovaRegular",
                                color: "rgba(148,152,156,1)",
                                fontSize: "24px",
                                fontWeight: 400,
                                lineHeight: "38.4px",
                                textAlign: "center",
                                paddingX: "20px",
                              },
                              children:
                                null !== n && null !== o
                                  ? "".concat(
                                      n.toLocaleString("en-US"),
                                      "  people have already started their adventure with Compute."
                                    )
                                  : (0, js.jsx)(ME, { width: 210 }),
                            }),
                          ],
                        }),
                      }),
                      (0, js.jsxs)(vu, {
                        sx: {
                          fontFamily: "ProximaNovaRegular",
                          color: "rgba(148,152,156,1)",
                          fontSize: "14px",
                          fontWeight: 400,
                          lineHeight: "22.4px",
                          textAlign: "center",
                          paddingX: "40px",
                        },
                        children: [
                          "You've joined the queue. ",
                          (0, js.jsx)("br", {}),
                          "We'll let you know by email when it's your turn to start.",
                        ],
                      }),
                    ],
                  }),
                  (0, js.jsx)(Hl, {
                    sx: {
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center",
                      width: "100%",
                      height: "100%",
                    },
                    children: (0, js.jsx)("img", {
                      src: Ku,
                      alt: "Dojo Compute",
                      style: { width: "100%", height: "auto" },
                      loading: "lazy",
                    }),
                  }),
                ],
              }),
            })
          );
        },
        $L = () => {
          const { isLoggedIn: e } = Ss((e) => e.user);
          return (0, js.jsxs)(bl, {
            children: [
              (0, js.jsx)(ml, { path: "/", element: (0, js.jsx)(GP, {}) }),
              (0, js.jsx)(ml, { path: "/login", element: (0, js.jsx)(gf, {}) }),
              (0, js.jsx)(ml, { path: "/home", element: (0, js.jsx)(GP, {}) }),
              (0, js.jsx)(ml, {
                path: "/dashboard",
                element: (0, js.jsx)(vC, {}),
              }),
              (0, js.jsx)(ml, {
                path: "/network-map",
                element: (0, js.jsx)(uE, {}),
              }),
              (0, js.jsx)(ml, {
                path: "/clusters",
                element: (0, js.jsx)(TE, {}),
              }),
              (0, js.jsx)(ml, {
                path: "/waitlist",
                element: (0, js.jsx)(QL, {}),
              }),
              (0, js.jsx)(ml, {
                path: "/landing",
                element: (0, js.jsx)(qL, {}),
              }),
              (0, js.jsx)(ml, {
                path: "*",
                element: (0, js.jsx)(gl, { to: "/" }),
              }),
            ],
          });
        },
        JL = () => {
          const e = el().pathname,
            { isLoggedIn: t } = Ss((e) => e.user),
            { loading: n } = Ss((e) => e.compute);
          return (
            OE(),
            (0, js.jsxs)(Hl, {
              sx: {
                position: "relative",
                minHeight: "/clusters" !== e ? "100vh" : "max-content",
              },
              children: [
                "/landing" === e &&
                  (0, js.jsxs)(Hl, {
                    sx: {
                      position: "absolute",
                      top: 0,
                      left: 0,
                      width: "100%",
                      height: "100vh",
                      overflow: "hidden",
                      zIndex: -1,
                    },
                    children: [
                      (0, js.jsxs)("video", {
                        autoPlay: !0,
                        loop: !0,
                        muted: !0,
                        playsInline: !0,
                        style: {
                          position: "absolute",
                          width: "100%",
                          height: "100%",
                          objectFit: "cover",
                          top: 0,
                          left: 0,
                        },
                        children: [
                          (0, js.jsx)("source", { src: gd, type: "video/mp4" }),
                          "Your browser does not support the video tag.",
                        ],
                      }),
                      (0, js.jsx)(Hl, {
                        component: "img",
                        src: Uu,
                        alt: "SVG Overlay",
                        sx: {
                          position: "absolute",
                          top: 0,
                          left: 0,
                          width: "100%",
                          height: "100%",
                          objectFit: "cover",
                          backgroundColor: "rgba(0, 0, 0, 0.8)",
                        },
                      }),
                    ],
                  }),
                !n && (0, js.jsx)(Vp, {}),
                (0, js.jsx)(Hl, {
                  sx: {
                    display: "flex",
                    flexDirection: "column",
                    flex: 1,
                    position: "relative",
                    zIndex: 1,
                    paddingBottom: "/clusters" !== e ? "70px" : "0px",
                  },
                  children: (0, js.jsx)($L, {}),
                }),
              ],
            })
          );
        },
        eT = () =>
          (0, js.jsxs)(kl, {
            children: [(0, js.jsx)(JL, {}), (0, js.jsx)(mf, {})],
          }),
        tT = () => {
          const [e, n] = (0, t.useState)(!0);
          Ol("(max-width:1000px)");
          return (0, js.jsx)("div", {
            style: { width: "100%", height: "100%" },
            children: (0, js.jsx)(eT, {}),
          });
        };
      o.createRoot(document.getElementById("root")).render(
        (0, js.jsx)(t.StrictMode, {
          children: (0, js.jsx)(M, {
            store: vs,
            children: (0, js.jsx)(Ls, {
              persistor: ws,
              children: (0, js.jsx)(df, {
                clientId:
                  "112232676495-6orqf77jvpkjeo5iqv7bbuos2fc9qfst.apps.googleusercontent.com",
                children: (0, js.jsx)(rr, { children: (0, js.jsx)(tT, {}) }),
              }),
            }),
          }),
        })
      );
    })();
})();
//# sourceMappingURL=main.f8f1bbd3.js.map
